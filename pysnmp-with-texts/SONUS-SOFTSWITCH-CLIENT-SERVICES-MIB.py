#
# PySNMP MIB module SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:10:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Gauge32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Unsigned32, Integer32, ObjectIdentity, Counter64, ModuleIdentity, NotificationType, iso, TimeTicks, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Gauge32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Unsigned32", "Integer32", "ObjectIdentity", "Counter64", "ModuleIdentity", "NotificationType", "iso", "TimeTicks", "Counter32")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
sonusEventClass, sonusEventDescription, sonusEventLevel = mibBuilder.importSymbols("SONUS-COMMON-MIB", "sonusEventClass", "sonusEventDescription", "sonusEventLevel")
sonusServicesMIBs, = mibBuilder.importSymbols("SONUS-SMI", "sonusServicesMIBs")
SonusName, = mibBuilder.importSymbols("SONUS-TC", "SonusName")
sonusSoftswitchClientServicesMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6))
if mibBuilder.loadTexts: sonusSoftswitchClientServicesMIB.setLastUpdated('200102030000Z')
if mibBuilder.loadTexts: sonusSoftswitchClientServicesMIB.setOrganization('Sonus Networks, Inc.')
if mibBuilder.loadTexts: sonusSoftswitchClientServicesMIB.setContactInfo(' Customer Support Sonus Networks, Inc, 5 carlisle Road Westford, MA 01886 USA Tel: 978-692-8999 Fax: 978-392-9118 E-mail: cs.snmp@sonusnet.com')
if mibBuilder.loadTexts: sonusSoftswitchClientServicesMIB.setDescription('The MIB Module for Softswitch Client Services Management.')
sonusSoftswitchClientServicesMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1))
sonusSoftswitch = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1))
sonusPscsConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 1))
sonusPscsReconnectTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsReconnectTimeOut.setStatus('current')
if mibBuilder.loadTexts: sonusPscsReconnectTimeOut.setDescription('The timer parameter for re-attempting connection to a Softswitch that is in the enabled state in seconds.')
sonusPscsSwitchOver = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("automatic", 1), ("manual", 2))).clone('automatic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsSwitchOver.setStatus('current')
if mibBuilder.loadTexts: sonusPscsSwitchOver.setDescription('Automatic means retries to the previously ACTIVE Softswitch after a switch over.')
sonusPscsAdmn = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2))
sonusPscsAdmnNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsAdmnNextIndex.setStatus('current')
if mibBuilder.loadTexts: sonusPscsAdmnNextIndex.setDescription('The next valid index to use when creating a new sonusPscsAdmnEntry')
sonusPscsAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2), )
if mibBuilder.loadTexts: sonusPscsAdmnTable.setStatus('current')
if mibBuilder.loadTexts: sonusPscsAdmnTable.setDescription('Table of Softswitch admin configurations.')
sonusPscsAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1), ).setIndexNames((0, "SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsPolicyServerIndex"))
if mibBuilder.loadTexts: sonusPscsAdmnEntry.setStatus('current')
if mibBuilder.loadTexts: sonusPscsAdmnEntry.setDescription('List of Softswitch configuration parameters.')
sonusPscsPolicyServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsPolicyServerIndex.setStatus('current')
if mibBuilder.loadTexts: sonusPscsPolicyServerIndex.setDescription('Identifies the Softswitch entry.')
sonusPscsPolicyServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsPolicyServerName.setStatus('current')
if mibBuilder.loadTexts: sonusPscsPolicyServerName.setDescription('The name of this Softswitch.')
sonusPscsPolicyServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsPolicyServerIpAddress.setStatus('current')
if mibBuilder.loadTexts: sonusPscsPolicyServerIpAddress.setDescription('IP Address of the Softswitch - this is a required parameter.')
sonusPscsPolicyServerPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(3055)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsPolicyServerPortNum.setStatus('current')
if mibBuilder.loadTexts: sonusPscsPolicyServerPortNum.setDescription('This is the port number assigned for the Ip address of the Softswitch.')
sonusPscsPolicyServerAdmnState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsPolicyServerAdmnState.setStatus('current')
if mibBuilder.loadTexts: sonusPscsPolicyServerAdmnState.setDescription('Admin State (disabled or enabled) of the Softswitch.')
sonusPscsPolicyServerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("standby", 2), ("outOfService", 3))).clone('outOfService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsPolicyServerMode.setStatus('current')
if mibBuilder.loadTexts: sonusPscsPolicyServerMode.setDescription('Assignment of the Softswitch to have the active, standby or out of service role. This is the only parameter that may be changed when the Softswitch is ENABLED.')
sonusPscsPolicyServerAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dryUp", 1), ("force", 2))).clone('dryUp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsPolicyServerAction.setStatus('current')
if mibBuilder.loadTexts: sonusPscsPolicyServerAction.setDescription('Action assignment of this Softswitch to dry up or remove all the pending transactions when the sonusPscsPolicyServerMode is set to out of service.')
sonusPscsTransactionTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 60000)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsTransactionTimer.setStatus('current')
if mibBuilder.loadTexts: sonusPscsTransactionTimer.setDescription("The timer parameter for this Softswitch's transaction in milliseconds.")
sonusPscsKeepAliveTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsKeepAliveTimer.setStatus('current')
if mibBuilder.loadTexts: sonusPscsKeepAliveTimer.setDescription("The timer parameter for this Softswitch's keep alive exchange in seconds.")
sonusPscsRetryTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 60000)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsRetryTimer.setStatus('current')
if mibBuilder.loadTexts: sonusPscsRetryTimer.setDescription("The timer parameter for this Softswitch's retry connections in milliseconds.")
sonusPscsRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsRetries.setStatus('current')
if mibBuilder.loadTexts: sonusPscsRetries.setDescription('The number of reconnection attempts for this Softswitch.')
sonusPscsPolicyServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 12), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsPolicyServerRowStatus.setStatus('current')
if mibBuilder.loadTexts: sonusPscsPolicyServerRowStatus.setDescription('This is for SNMP use.')
sonusPscsStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3), )
if mibBuilder.loadTexts: sonusPscsStatusTable.setStatus('current')
if mibBuilder.loadTexts: sonusPscsStatusTable.setDescription('Status Table of the Softswitch')
sonusPscsStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3, 1), ).setIndexNames((0, "SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsStatusIndex"))
if mibBuilder.loadTexts: sonusPscsStatusEntry.setStatus('current')
if mibBuilder.loadTexts: sonusPscsStatusEntry.setDescription('List of Softswitch status elements.')
sonusPscsStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsStatusIndex.setStatus('current')
if mibBuilder.loadTexts: sonusPscsStatusIndex.setDescription('Identifies the Softswitch entry.')
sonusPscsOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("active", 1), ("standby", 2), ("congested", 3), ("down", 4), ("dryingup", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsOperState.setStatus('current')
if mibBuilder.loadTexts: sonusPscsOperState.setDescription('Operational state of the Softswitch.')
sonusPscsAverageTransactionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsAverageTransactionTime.setStatus('current')
if mibBuilder.loadTexts: sonusPscsAverageTransactionTime.setDescription('Records the average time taken in milliseconds for a Softswitch transaction.')
sonusPscsServerReconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsServerReconnects.setStatus('current')
if mibBuilder.loadTexts: sonusPscsServerReconnects.setDescription('The number of successful reconnections between the gateway and the Softswitch.')
sonusPscsTransactionCompleted = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsTransactionCompleted.setStatus('current')
if mibBuilder.loadTexts: sonusPscsTransactionCompleted.setDescription('The number of successful transactions between the gateway and the Softswitch.')
sonusPscsTransactionRetryAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsTransactionRetryAttempts.setStatus('current')
if mibBuilder.loadTexts: sonusPscsTransactionRetryAttempts.setDescription('The number of transaction retries between the gateway and the Softswitch.')
sonusPscsTransactionFailedAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsTransactionFailedAttempts.setStatus('current')
if mibBuilder.loadTexts: sonusPscsTransactionFailedAttempts.setDescription('The number of un-successful transactions between the gateway and the Softswitch.')
sonusPscsVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsVersion.setStatus('current')
if mibBuilder.loadTexts: sonusPscsVersion.setDescription('The negotiated protocol version between the gateway and the Softswitch.')
sonusSoftswitchClientServicesMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2))
sonusSoftswitchClientServicesMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 0))
sonusSoftswitchClientServicesMIBNotificationsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1))
sonusPscsInServiceReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("configured", 1), ("successfulReConnect", 2), ("automatic", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsInServiceReason.setStatus('current')
if mibBuilder.loadTexts: sonusPscsInServiceReason.setDescription('The reason why a softswitch is in service.')
sonusPscsOutOfServiceReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("configured", 1), ("connectionLoss", 2), ("noConnection", 3), ("nodeNameChange", 4), ("incompatibleVersion", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsOutOfServiceReason.setStatus('current')
if mibBuilder.loadTexts: sonusPscsOutOfServiceReason.setDescription('The reason why the softswitch is out of service.')
sonusPscsSwitchoverReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("configured", 1), ("automatic", 2), ("versionChanged", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsSwitchoverReason.setStatus('current')
if mibBuilder.loadTexts: sonusPscsSwitchoverReason.setDescription('The reason why the softswitch has switch to be the active softswitch.')
sonusPscsRouteFailureReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("routeNotFound", 1), ("noServiceConfigured", 2), ("databaseError", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsRouteFailureReason.setStatus('current')
if mibBuilder.loadTexts: sonusPscsRouteFailureReason.setDescription('The reason why a route look up has failed.')
sonusPscsCallInfo = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsCallInfo.setStatus('current')
if mibBuilder.loadTexts: sonusPscsCallInfo.setDescription('Call information content.')
sonusPscsTranErrorReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("noSoftswitchAvailable", 1), ("transactionTimeout", 2), ("invalidParameters", 3), ("receiveError", 4), ("transmitError", 5), ("encodeApiError", 6), ("decodeApiError", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsTranErrorReason.setStatus('current')
if mibBuilder.loadTexts: sonusPscsTranErrorReason.setDescription('The reason why a transaction has failed.')
sonusPscsRejectIndReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notRegistered", 1), ("unknownGateway", 2), ("errorAVPContent", 3), ("errorMsgContent", 4), ("maxClientAccount", 5), ("miscRegFailure", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsRejectIndReason.setStatus('current')
if mibBuilder.loadTexts: sonusPscsRejectIndReason.setDescription('The reason why a reject ind received.')
sonusPscsCalledNumber = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsCalledNumber.setStatus('current')
if mibBuilder.loadTexts: sonusPscsCalledNumber.setDescription('Destination number.')
sonusPscsCallingNumber = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsCallingNumber.setStatus('current')
if mibBuilder.loadTexts: sonusPscsCallingNumber.setDescription('Originating number.')
sonusPscsCarrierCode = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsCarrierCode.setStatus('current')
if mibBuilder.loadTexts: sonusPscsCarrierCode.setDescription('Carrier code.')
sonusSscsInServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 0, 1)).setObjects(("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsPolicyServerName"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsOperState"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsInServiceReason"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusSscsInServiceNotification.setStatus('current')
if mibBuilder.loadTexts: sonusSscsInServiceNotification.setDescription('This trap indicates a softswitch is now in service.')
sonusSscsOutOfServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 0, 2)).setObjects(("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsPolicyServerName"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsOutOfServiceReason"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusSscsOutOfServiceNotification.setStatus('current')
if mibBuilder.loadTexts: sonusSscsOutOfServiceNotification.setDescription('This trap indicates a softswitch is now out of service.')
sonusSscsSwitchoverNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 0, 3)).setObjects(("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsPolicyServerName"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsSwitchoverReason"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusSscsSwitchoverNotification.setStatus('current')
if mibBuilder.loadTexts: sonusSscsSwitchoverNotification.setDescription('This trap indicates a softswitch has switched over.')
sonusSscsRouteFailureNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 0, 4)).setObjects(("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsPolicyServerName"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsRouteFailureReason"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsCalledNumber"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsCallingNumber"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsCarrierCode"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusSscsRouteFailureNotification.setStatus('current')
if mibBuilder.loadTexts: sonusSscsRouteFailureNotification.setDescription('This trap indicates a route look up has failed.')
sonusSscsTransErrorNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 0, 5)).setObjects(("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsPolicyServerName"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsTranErrorReason"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusSscsTransErrorNotification.setStatus('current')
if mibBuilder.loadTexts: sonusSscsTransErrorNotification.setDescription('This trap indicates a softswitch has a trans error.')
sonusSscsRejectIndNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 0, 6)).setObjects(("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsPolicyServerName"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsRejectIndReason"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusSscsRejectIndNotification.setStatus('current')
if mibBuilder.loadTexts: sonusSscsRejectIndNotification.setDescription('This trap indicates a reject indication has been received.')
mibBuilder.exportSymbols("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", sonusPscsConfigObjects=sonusPscsConfigObjects, sonusPscsCallingNumber=sonusPscsCallingNumber, sonusPscsAdmnTable=sonusPscsAdmnTable, sonusPscsRetries=sonusPscsRetries, sonusPscsPolicyServerName=sonusPscsPolicyServerName, sonusPscsPolicyServerMode=sonusPscsPolicyServerMode, sonusPscsPolicyServerRowStatus=sonusPscsPolicyServerRowStatus, sonusPscsTransactionRetryAttempts=sonusPscsTransactionRetryAttempts, sonusPscsCarrierCode=sonusPscsCarrierCode, sonusPscsPolicyServerAdmnState=sonusPscsPolicyServerAdmnState, sonusPscsOperState=sonusPscsOperState, sonusPscsPolicyServerIndex=sonusPscsPolicyServerIndex, sonusPscsAdmnNextIndex=sonusPscsAdmnNextIndex, sonusPscsAdmnEntry=sonusPscsAdmnEntry, sonusSoftswitch=sonusSoftswitch, sonusSoftswitchClientServicesMIBNotifications=sonusSoftswitchClientServicesMIBNotifications, sonusPscsInServiceReason=sonusPscsInServiceReason, sonusPscsAdmn=sonusPscsAdmn, sonusPscsKeepAliveTimer=sonusPscsKeepAliveTimer, sonusPscsStatusEntry=sonusPscsStatusEntry, sonusSoftswitchClientServicesMIBNotificationsPrefix=sonusSoftswitchClientServicesMIBNotificationsPrefix, sonusPscsCalledNumber=sonusPscsCalledNumber, sonusPscsTranErrorReason=sonusPscsTranErrorReason, sonusPscsCallInfo=sonusPscsCallInfo, sonusSoftswitchClientServicesMIBNotificationsObjects=sonusSoftswitchClientServicesMIBNotificationsObjects, sonusPscsOutOfServiceReason=sonusPscsOutOfServiceReason, sonusPscsPolicyServerIpAddress=sonusPscsPolicyServerIpAddress, PYSNMP_MODULE_ID=sonusSoftswitchClientServicesMIB, sonusPscsRetryTimer=sonusPscsRetryTimer, sonusSscsSwitchoverNotification=sonusSscsSwitchoverNotification, sonusPscsPolicyServerPortNum=sonusPscsPolicyServerPortNum, sonusSscsRejectIndNotification=sonusSscsRejectIndNotification, sonusPscsSwitchOver=sonusPscsSwitchOver, sonusPscsPolicyServerAction=sonusPscsPolicyServerAction, sonusPscsTransactionFailedAttempts=sonusPscsTransactionFailedAttempts, sonusPscsRejectIndReason=sonusPscsRejectIndReason, sonusSscsRouteFailureNotification=sonusSscsRouteFailureNotification, sonusPscsReconnectTimeOut=sonusPscsReconnectTimeOut, sonusSscsTransErrorNotification=sonusSscsTransErrorNotification, sonusPscsTransactionTimer=sonusPscsTransactionTimer, sonusPscsRouteFailureReason=sonusPscsRouteFailureReason, sonusPscsAverageTransactionTime=sonusPscsAverageTransactionTime, sonusPscsSwitchoverReason=sonusPscsSwitchoverReason, sonusSoftswitchClientServicesMIB=sonusSoftswitchClientServicesMIB, sonusSscsInServiceNotification=sonusSscsInServiceNotification, sonusPscsStatusTable=sonusPscsStatusTable, sonusPscsStatusIndex=sonusPscsStatusIndex, sonusPscsTransactionCompleted=sonusPscsTransactionCompleted, sonusSscsOutOfServiceNotification=sonusSscsOutOfServiceNotification, sonusSoftswitchClientServicesMIBObjects=sonusSoftswitchClientServicesMIBObjects, sonusPscsServerReconnects=sonusPscsServerReconnects, sonusPscsVersion=sonusPscsVersion)
