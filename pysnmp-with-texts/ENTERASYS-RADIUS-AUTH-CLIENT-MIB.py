#
# PySNMP MIB module ENTERASYS-RADIUS-AUTH-CLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-RADIUS-AUTH-CLIENT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:04:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Counter32, Bits, Counter64, MibIdentifier, IpAddress, ModuleIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ObjectIdentity, Integer32, NotificationType, TimeTicks, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Bits", "Counter64", "MibIdentifier", "IpAddress", "ModuleIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ObjectIdentity", "Integer32", "NotificationType", "TimeTicks", "iso")
RowStatus, DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention", "TruthValue")
etsysRadiusAuthClientMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4))
etsysRadiusAuthClientMIB.setRevisions(('2011-06-29 17:14', '2009-08-06 18:38', '2005-07-29 13:48', '2004-07-27 19:53', '2003-11-06 18:23', '2002-01-24 15:57', '2000-11-08 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: etsysRadiusAuthClientMIB.setRevisionsDescriptions(('Addition of etsysRadiusAuthClientAttrMgmtPassword.', 'Added retry and timeout per RADIUS server. The fields are: etsysRadiusAuthClientServerTimeout, etsysRadiusAuthClientServerRetries. Fixed MAX-ACCESS clause for etsysRadiusAuthClientServerRealmType.', 'Changed the syntax type of the etsysRadiusAuthClientServerRealmType leaf in the SEQUENCE statement to INTEGER to match the actual OBJECT-TYPE definition.', 'Added the etsysRadiusAuthClientServerRealmType leaf to the etsysRadiusAuthServerTable to allow the provisioning of servers for specific purposes.', 'Updated the comments and format. Changed the status of the etsysRadiusAuthClientServerClearTime and etsysRadiusAuthClientAuthType objects to deprecated.', 'Changed { etsysRadiusAuthClientOID } to { etsysModules 4 } so that the released MIB would work with the NetSNMP stack that is currently being used by NetSight.', 'Initial version',))
if mibBuilder.loadTexts: etsysRadiusAuthClientMIB.setLastUpdated('201106291714Z')
if mibBuilder.loadTexts: etsysRadiusAuthClientMIB.setOrganization('Enterasys Networks, Inc')
if mibBuilder.loadTexts: etsysRadiusAuthClientMIB.setContactInfo('Postal: Enterasys Networks 50 Minuteman Rd. Andover, MA 01810-1008 USA Phone: +1 978 684 1000 E-mail: support@enterasys.com WWW: http://www.enterasys.com')
if mibBuilder.loadTexts: etsysRadiusAuthClientMIB.setDescription('The Enterasys Networks Proprietary MIB module for entities implementing the client side of the Remote Access Dialin User Service (RADIUS) authentication protocol (RFC2865). This MIB provides read-write access to configuration objects not provided in the standard RADIUS Authentication Client MIB (RFC2618).')
etsysRadiusAuthClientMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 1))
etsysRadiusAuthClientRetryTimeout = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysRadiusAuthClientRetryTimeout.setStatus('current')
if mibBuilder.loadTexts: etsysRadiusAuthClientRetryTimeout.setDescription('The number of seconds to wait for a RADIUS Server to respond to a request. Maintaining the value of this object across agent reboots is REQUIRED.')
etsysRadiusAuthClientRetries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysRadiusAuthClientRetries.setStatus('current')
if mibBuilder.loadTexts: etsysRadiusAuthClientRetries.setDescription('The number of times to resend an authentication packet if a RADIUS Server does not respond to a request. Maintaining the value of this object across agent reboots is REQUIRED.')
etsysRadiusAuthClientEnable = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysRadiusAuthClientEnable.setStatus('current')
if mibBuilder.loadTexts: etsysRadiusAuthClientEnable.setDescription('Controls and indicates the operational state of the RADIUS client functionality. Maintaining the value of this object across agent reboots is REQUIRED.')
etsysRadiusAuthClientAuthType = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mac", 1), ("eapol", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysRadiusAuthClientAuthType.setStatus('deprecated')
if mibBuilder.loadTexts: etsysRadiusAuthClientAuthType.setDescription('This indicates which method is being used for authentication. mac(1) - indicates MAC address authentication eapol(2) - indicates EAPOL authentication This list of enumeration constants is subject to change. This parameter value is maintained across system reboots.')
etsysRadiusAuthServerTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 1, 5), )
if mibBuilder.loadTexts: etsysRadiusAuthServerTable.setStatus('current')
if mibBuilder.loadTexts: etsysRadiusAuthServerTable.setDescription('A list of RADIUS servers that this client may attempt to use.')
etsysRadiusAuthServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 1, 5, 1), ).setIndexNames((0, "ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthServerIndex"))
if mibBuilder.loadTexts: etsysRadiusAuthServerEntry.setStatus('current')
if mibBuilder.loadTexts: etsysRadiusAuthServerEntry.setDescription('A RADIUS server that this client may attempt to use.')
etsysRadiusAuthServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: etsysRadiusAuthServerIndex.setStatus('current')
if mibBuilder.loadTexts: etsysRadiusAuthServerIndex.setDescription('A number uniquely identifying each conceptual row in the etsysRadiusAuthServerTable. This value also indicates the relative priority of the servers. The initial authentication attempt will be against the server with the lowest value of etsysRadiusAuthServerIndex and any successive attempt will be with the next higher value, and so on. Maintaining the value of etsysRadiusAuthServerIndex for all active(1) entries across agent reboots is REQUIRED.')
etsysRadiusAuthClientServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 1, 5, 1, 2), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysRadiusAuthClientServerAddressType.setStatus('current')
if mibBuilder.loadTexts: etsysRadiusAuthClientServerAddressType.setDescription('This object specifies how etsysRadiusAuthClientServerAddress is encoded. Support for all possible enumerations defined by InetAddressType is NOT REQUIRED.')
etsysRadiusAuthClientServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 1, 5, 1, 3), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysRadiusAuthClientServerAddress.setStatus('current')
if mibBuilder.loadTexts: etsysRadiusAuthClientServerAddress.setDescription('The encoded unicast IP address or hostname of a RADIUS server. RADIUS requests will be sent to this address. If this address is a DNS hostname, then that hostname SHOULD be resolved into an IP address each time an authentication session is initialized.')
etsysRadiusAuthClientServerPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1812)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysRadiusAuthClientServerPortNumber.setStatus('current')
if mibBuilder.loadTexts: etsysRadiusAuthClientServerPortNumber.setDescription('The UDP port number (0-65535) the client will use to send RADIUS requests to this server.')
etsysRadiusAuthClientServerSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 1, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysRadiusAuthClientServerSecret.setStatus('current')
if mibBuilder.loadTexts: etsysRadiusAuthClientServerSecret.setDescription('This object is the secret shared between the RADIUS authentication server and the RADIUS client. On a read operation this object MUST return a zero length string. Writing this object with a zero length string clears the secret.')
etsysRadiusAuthClientServerSecretEntered = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 1, 5, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysRadiusAuthClientServerSecretEntered.setStatus('current')
if mibBuilder.loadTexts: etsysRadiusAuthClientServerSecretEntered.setDescription('true(1) - Indicates that etsysRadiusAuthClientServerSecret was last set with some value other than the empty string. false(2) - Indicates that etsysRadiusAuthClientServerSecret has never been set, or was last set to the empty string.')
etsysRadiusAuthClientServerClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysRadiusAuthClientServerClearTime.setStatus('deprecated')
if mibBuilder.loadTexts: etsysRadiusAuthClientServerClearTime.setDescription('The number of seconds elapsed since the counters were last cleared. Writing the value zero will cause the servers counters to be cleared and the clear time will be set to zero. Writing any value other than zero will have no effect.')
etsysRadiusAuthClientServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 1, 5, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysRadiusAuthClientServerStatus.setStatus('current')
if mibBuilder.loadTexts: etsysRadiusAuthClientServerStatus.setDescription('The row status of this conceptual row in the table. active - The server is available for performing RADIUS operations. Other writable leaves in this row MUST NOT be modified while the row is in the active state. notInService - The entry is fully configured but is not available for performing RADIUS operations. Conceptual rows with this status MAY be deleted at the discretion of the agent, at which time it will be treated as if destroy(6) was SET to this object. notReady - The entry exists in the agent, but is missing information necessary in order to be available for use by the managed device (i.e., one or more required columns in the conceptual row have not been instantiated); createAndGo - Not possible. createAndWait - Creates a new instance of a conceptual row, but does not make it available for use by the managed device. destroy - This will remove the conceptual row from the table and make it unavailable for RADIUS client operations. This MUST also cause any persistent data related to this row to be removed from the system. Maintaining active(1) entries across agent reboots is REQUIRED.')
etsysRadiusAuthClientServerRealmType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("any", 1), ("mgmtAccess", 2), ("networkAccess", 3))).clone('any')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysRadiusAuthClientServerRealmType.setStatus('current')
if mibBuilder.loadTexts: etsysRadiusAuthClientServerRealmType.setDescription('This object allows a server to be restricted to providing authentication services to certain classes of access methods. any(1) - the server will be available to authenticate users originating from any of the access methods. mgmtAccess(2) - the server will only be available for authenticating users that have requested management access via the console, telnet, SSH, HTTP, etc. networkAccess(3) - the server will only be available for authenticating users that are attempting to gain access to the network via 802.1X, Port Web Authentication, MAC Authentication, etc. Non-default values for this object should be used when there is a desire to have one set of servers used for authenticating management access requests and a different set used for authenticating network access requests. When this object has the value of any(1) then the associated server will be in each set. The precedence order defined by the relative value of the etsysRadiusAuthServerIndex will be maintained within each set of servers.')
etsysRadiusAuthClientServerTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 60), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysRadiusAuthClientServerTimeout.setStatus('current')
if mibBuilder.loadTexts: etsysRadiusAuthClientServerTimeout.setDescription('The number of seconds to wait for a RADIUS Server to respond to a request. A value of -1 indicates that the server timeout specified by etsysRadiusAuthClientRetryTimeout should be used for this server. Maintaining the value of this object across agent reboots is REQUIRED.')
etsysRadiusAuthClientServerRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 1, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 10), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysRadiusAuthClientServerRetries.setStatus('current')
if mibBuilder.loadTexts: etsysRadiusAuthClientServerRetries.setDescription('The number of times to resend an authentication packet if a RADIUS Server does not respond to a request. A value of -1 indicates that the server retries specified by etsysRadiusAuthClientRetries should be used for this server. Maintaining the value of this object across agent reboots is REQUIRED.')
etsysRadiusAuthClientAttrMgmtPassword = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("standard", 1), ("mschapv2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysRadiusAuthClientAttrMgmtPassword.setStatus('current')
if mibBuilder.loadTexts: etsysRadiusAuthClientAttrMgmtPassword.setDescription('This value indicates which method is being used to send management access passwords to the RADIUS server. standard(1) - Use the User-Password attribute at defined in RFC2865 mschapv2(2) - Use the MS-CHAP2-Response attribute as defined in RFC2548 This parameter value is maintained across system reboots.')
etsysRadiusAuthClientMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 2))
etsysRadiusAuthClientMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 2, 1))
etsysRadiusAuthClientMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 2, 2))
etsysRadiusAuthClientMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 2, 2, 1)).setObjects(("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientRetryTimeout"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientRetries"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientEnable"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientAuthType"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerAddressType"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerAddress"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerPortNumber"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerSecret"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerSecretEntered"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerClearTime"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysRadiusAuthClientMIBGroup = etsysRadiusAuthClientMIBGroup.setStatus('deprecated')
if mibBuilder.loadTexts: etsysRadiusAuthClientMIBGroup.setDescription('The basic collection of objects providing a proprietary extension to the standard RADIUS Client MIB. This MIB provides read-write access to configuration objects not provided in the standard RADIUS Authentication Client MIB (RFC2618).')
etsysRadiusAuthClientMIBGroupV2 = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 2, 2, 2)).setObjects(("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientRetryTimeout"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientRetries"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientEnable"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerAddressType"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerAddress"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerPortNumber"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerSecret"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerSecretEntered"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerStatus"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerRealmType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysRadiusAuthClientMIBGroupV2 = etsysRadiusAuthClientMIBGroupV2.setStatus('deprecated')
if mibBuilder.loadTexts: etsysRadiusAuthClientMIBGroupV2.setDescription('The basic collection of objects providing a proprietary extension to the standard RADIUS Client MIB. This MIB provides read-write access to configuration objects not provided in the standard RADIUS Authentication Client MIB (RFC2618).')
etsysRadiusAuthClientMIBGroupV3 = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 2, 2, 3)).setObjects(("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientRetryTimeout"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientRetries"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientEnable"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerAddressType"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerAddress"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerPortNumber"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerSecret"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerSecretEntered"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerStatus"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerRealmType"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerTimeout"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerRetries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysRadiusAuthClientMIBGroupV3 = etsysRadiusAuthClientMIBGroupV3.setStatus('deprecated')
if mibBuilder.loadTexts: etsysRadiusAuthClientMIBGroupV3.setDescription('The basic collection of objects providing a proprietary extension to the standard RADIUS Client MIB. This MIB provides read-write access to configuration objects not provided in the standard RADIUS Authentication Client MIB (RFC2618).')
etsysRadiusAuthClientMIBGroupV4 = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 2, 2, 4)).setObjects(("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientRetryTimeout"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientRetries"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientEnable"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerAddressType"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerAddress"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerPortNumber"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerSecret"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerSecretEntered"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerStatus"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerRealmType"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerTimeout"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientServerRetries"), ("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientAttrMgmtPassword"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysRadiusAuthClientMIBGroupV4 = etsysRadiusAuthClientMIBGroupV4.setStatus('current')
if mibBuilder.loadTexts: etsysRadiusAuthClientMIBGroupV4.setDescription('The basic collection of objects providing a proprietary extension to the standard RADIUS Client MIB. This MIB provides read-write access to configuration objects not provided in the standard RADIUS Authentication Client MIB (RFC2618).')
etsysRadiusClientMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 2, 1, 1)).setObjects(("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysRadiusClientMIBCompliance = etsysRadiusClientMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: etsysRadiusClientMIBCompliance.setDescription('The compliance statement for authentication clients implementing the RADIUS Authentication Client MIB.')
etsysRadiusClientMIBComplianceV2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 2, 1, 2)).setObjects(("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientMIBGroupV2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysRadiusClientMIBComplianceV2 = etsysRadiusClientMIBComplianceV2.setStatus('deprecated')
if mibBuilder.loadTexts: etsysRadiusClientMIBComplianceV2.setDescription('The compliance statement for authentication clients implementing the RADIUS Authentication Client MIB.')
etsysRadiusClientMIBComplianceV3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 2, 1, 3)).setObjects(("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientMIBGroupV3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysRadiusClientMIBComplianceV3 = etsysRadiusClientMIBComplianceV3.setStatus('deprecated')
if mibBuilder.loadTexts: etsysRadiusClientMIBComplianceV3.setDescription('The compliance statement for authentication clients implementing the RADIUS Authentication Client MIB.')
etsysRadiusClientMIBComplianceV4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 4, 2, 1, 4)).setObjects(("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", "etsysRadiusAuthClientMIBGroupV4"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysRadiusClientMIBComplianceV4 = etsysRadiusClientMIBComplianceV4.setStatus('current')
if mibBuilder.loadTexts: etsysRadiusClientMIBComplianceV4.setDescription('The compliance statement for authentication clients implementing the RADIUS Authentication Client MIB.')
mibBuilder.exportSymbols("ENTERASYS-RADIUS-AUTH-CLIENT-MIB", etsysRadiusAuthClientAuthType=etsysRadiusAuthClientAuthType, etsysRadiusClientMIBCompliance=etsysRadiusClientMIBCompliance, etsysRadiusClientMIBComplianceV3=etsysRadiusClientMIBComplianceV3, etsysRadiusAuthClientMIBObjects=etsysRadiusAuthClientMIBObjects, etsysRadiusAuthServerEntry=etsysRadiusAuthServerEntry, etsysRadiusAuthClientMIBGroup=etsysRadiusAuthClientMIBGroup, etsysRadiusClientMIBComplianceV2=etsysRadiusClientMIBComplianceV2, etsysRadiusAuthClientServerRetries=etsysRadiusAuthClientServerRetries, etsysRadiusAuthClientRetries=etsysRadiusAuthClientRetries, etsysRadiusAuthClientServerStatus=etsysRadiusAuthClientServerStatus, etsysRadiusAuthClientRetryTimeout=etsysRadiusAuthClientRetryTimeout, etsysRadiusAuthClientServerSecretEntered=etsysRadiusAuthClientServerSecretEntered, etsysRadiusAuthClientServerAddress=etsysRadiusAuthClientServerAddress, etsysRadiusAuthClientMIBGroups=etsysRadiusAuthClientMIBGroups, etsysRadiusAuthClientServerTimeout=etsysRadiusAuthClientServerTimeout, etsysRadiusAuthClientMIBCompliances=etsysRadiusAuthClientMIBCompliances, etsysRadiusAuthClientMIBGroupV4=etsysRadiusAuthClientMIBGroupV4, etsysRadiusAuthServerIndex=etsysRadiusAuthServerIndex, PYSNMP_MODULE_ID=etsysRadiusAuthClientMIB, etsysRadiusAuthClientMIBGroupV2=etsysRadiusAuthClientMIBGroupV2, etsysRadiusAuthClientMIBConformance=etsysRadiusAuthClientMIBConformance, etsysRadiusAuthClientServerAddressType=etsysRadiusAuthClientServerAddressType, etsysRadiusAuthClientServerRealmType=etsysRadiusAuthClientServerRealmType, etsysRadiusAuthClientServerClearTime=etsysRadiusAuthClientServerClearTime, etsysRadiusClientMIBComplianceV4=etsysRadiusClientMIBComplianceV4, etsysRadiusAuthClientServerSecret=etsysRadiusAuthClientServerSecret, etsysRadiusAuthClientAttrMgmtPassword=etsysRadiusAuthClientAttrMgmtPassword, etsysRadiusAuthClientMIB=etsysRadiusAuthClientMIB, etsysRadiusAuthClientMIBGroupV3=etsysRadiusAuthClientMIBGroupV3, etsysRadiusAuthServerTable=etsysRadiusAuthServerTable, etsysRadiusAuthClientEnable=etsysRadiusAuthClientEnable, etsysRadiusAuthClientServerPortNumber=etsysRadiusAuthClientServerPortNumber)
