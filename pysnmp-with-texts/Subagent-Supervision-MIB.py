#
# PySNMP MIB module Subagent-Supervision-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Subagent-Supervision-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:14:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Counter32, ObjectIdentity, Unsigned32, IpAddress, enterprises, Bits, Gauge32, Integer32, ModuleIdentity, iso, Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "ObjectIdentity", "Unsigned32", "IpAddress", "enterprises", "Bits", "Gauge32", "Integer32", "ModuleIdentity", "iso", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
sni = MibIdentifier((1, 3, 6, 1, 4, 1, 231))
sniProductMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2))
sniSupervisor = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 34))
superVisObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 34, 1))
superVisGlobalDatas = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 1))
superVisSubagents = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 2))
superVisTrpAck = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 3))
superVisVersion = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: superVisVersion.setStatus('mandatory')
if mibBuilder.loadTexts: superVisVersion.setDescription('version of supervisor subagent')
superVisActiveNumber = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: superVisActiveNumber.setStatus('mandatory')
if mibBuilder.loadTexts: superVisActiveNumber.setDescription('number of active subagents')
superVisMaxSubagentNumber = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: superVisMaxSubagentNumber.setStatus('mandatory')
if mibBuilder.loadTexts: superVisMaxSubagentNumber.setDescription('maximal Number of subagents')
superVisObjectNumber = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: superVisObjectNumber.setStatus('mandatory')
if mibBuilder.loadTexts: superVisObjectNumber.setDescription('Number of objects currently supported by the BS2000 SNMP agent')
superVisTrapAckId = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: superVisTrapAckId.setStatus('mandatory')
if mibBuilder.loadTexts: superVisTrapAckId.setDescription('Id of last trap to be acknowledged by manager. Setting this object with its current value means acknowlegement of the last trap')
superVisSubagentNumber = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: superVisSubagentNumber.setStatus('mandatory')
if mibBuilder.loadTexts: superVisSubagentNumber.setDescription('Number of entries in subagent table')
superVisSubagentTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 2, 2), )
if mibBuilder.loadTexts: superVisSubagentTable.setStatus('mandatory')
if mibBuilder.loadTexts: superVisSubagentTable.setDescription('The table of subagents')
superVisSubagentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 2, 2, 1), ).setIndexNames((0, "Subagent-Supervision-MIB", "superVisSubagentName"))
if mibBuilder.loadTexts: superVisSubagentEntry.setStatus('mandatory')
if mibBuilder.loadTexts: superVisSubagentEntry.setDescription('entry for each subagent')
superVisSubagentName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 2, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: superVisSubagentName.setStatus('mandatory')
if mibBuilder.loadTexts: superVisSubagentName.setDescription('Name of the subagent (for BS2000-Subagents only)')
superVisSubagentSID = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: superVisSubagentSID.setStatus('mandatory')
if mibBuilder.loadTexts: superVisSubagentSID.setDescription('SID of subagents: Index used by master agent for the management of the subagent. ')
superVisSubagentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("disconnected", 2), ("undefined", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: superVisSubagentStatus.setStatus('mandatory')
if mibBuilder.loadTexts: superVisSubagentStatus.setDescription('Status of subagent: active: the subagent is connected and works normally disconnected: the subagent has sent a disconnect event it is no longer available. undefined: no answer from the subagent has been received since an request has been sent after X minutes. There was no disconnect event sent by this subagent.')
superVisSubagentConnTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 2, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: superVisSubagentConnTime.setStatus('mandatory')
if mibBuilder.loadTexts: superVisSubagentConnTime.setDescription('Time when subagent connected')
superVisSubagentDisconnTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 2, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: superVisSubagentDisconnTime.setStatus('mandatory')
if mibBuilder.loadTexts: superVisSubagentDisconnTime.setDescription('Time when subagent disconnected')
superVisSubagentLastResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 2, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: superVisSubagentLastResponseTime.setStatus('mandatory')
if mibBuilder.loadTexts: superVisSubagentLastResponseTime.setDescription('Time when subagent has answered at last')
superVisSubagentRequestsDone = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 2, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: superVisSubagentRequestsDone.setStatus('mandatory')
if mibBuilder.loadTexts: superVisSubagentRequestsDone.setDescription('Number of requests done by the subagent')
superVisSubagentTrapsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 2, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: superVisSubagentTrapsSent.setStatus('mandatory')
if mibBuilder.loadTexts: superVisSubagentTrapsSent.setDescription('Number of traps caused by the subagent')
superVisSubagentOID = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 2, 2, 1, 10), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: superVisSubagentOID.setStatus('mandatory')
if mibBuilder.loadTexts: superVisSubagentOID.setDescription('first objectidentifier supported by the subagent')
superVisSubagentProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 2, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: superVisSubagentProcessID.setStatus('mandatory')
if mibBuilder.loadTexts: superVisSubagentProcessID.setDescription('process identifier of the subagent')
superVisSubagentUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 2, 2, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: superVisSubagentUserId.setStatus('mandatory')
if mibBuilder.loadTexts: superVisSubagentUserId.setDescription('Userid belonging to the process identifier')
superVisSubagentCpuTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 2, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: superVisSubagentCpuTime.setStatus('mandatory')
if mibBuilder.loadTexts: superVisSubagentCpuTime.setDescription('CPU Time used by the subagent')
superVisSubagentCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 2, 2, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: superVisSubagentCommand.setStatus('mandatory')
if mibBuilder.loadTexts: superVisSubagentCommand.setDescription('Command string found in the output of ps-command belonging to the process identifier')
superVisTrpAckState = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("inactiv", 2), ("undefined", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: superVisTrpAckState.setStatus('mandatory')
if mibBuilder.loadTexts: superVisTrpAckState.setDescription('State of global Trap-Ack')
superVisTrpAckId = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: superVisTrpAckId.setStatus('mandatory')
if mibBuilder.loadTexts: superVisTrpAckId.setDescription('Id of last trap to be acknowledged by manager. Setting this object with its current value means acknowlegement of the last trap')
superVisTrpAckQueueCnt = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 34, 1, 3, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: superVisTrpAckQueueCnt.setStatus('mandatory')
if mibBuilder.loadTexts: superVisTrpAckQueueCnt.setDescription('Number of currently queued traps Setting this object means dequeue traps except the given number')
superVisTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 34, 2))
superVisSubAgentConnected = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 34, 2) + (0,301)).setObjects(("Subagent-Supervision-MIB", "superVisSubagentName"))
if mibBuilder.loadTexts: superVisSubAgentConnected.setDescription('An superVisSubAgentStart trap signifies that subagent has connected.')
superVisSubAgentDisconnected = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 34, 2) + (0,302)).setObjects(("Subagent-Supervision-MIB", "superVisSubagentName"))
if mibBuilder.loadTexts: superVisSubAgentDisconnected.setDescription('An superVisSubAgentStart trap signifies that master agent has disconnected.')
superVisSubAgentNoAnswer = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 34, 2) + (0,303)).setObjects(("Subagent-Supervision-MIB", "superVisSubagentName"))
if mibBuilder.loadTexts: superVisSubAgentNoAnswer.setDescription('An superVisSubAgentStart trap signifies that subagent has not answered to a request for X minutes.')
mibBuilder.exportSymbols("Subagent-Supervision-MIB", superVisSubagentTrapsSent=superVisSubagentTrapsSent, superVisSubagentNumber=superVisSubagentNumber, superVisActiveNumber=superVisActiveNumber, superVisTrpAckState=superVisTrpAckState, superVisSubagentStatus=superVisSubagentStatus, superVisSubagentLastResponseTime=superVisSubagentLastResponseTime, superVisObjects=superVisObjects, superVisGlobalDatas=superVisGlobalDatas, sni=sni, superVisTrpAck=superVisTrpAck, superVisSubAgentDisconnected=superVisSubAgentDisconnected, superVisSubagentRequestsDone=superVisSubagentRequestsDone, superVisTrpAckId=superVisTrpAckId, superVisSubAgentConnected=superVisSubAgentConnected, superVisSubagentTable=superVisSubagentTable, superVisVersion=superVisVersion, sniSupervisor=sniSupervisor, superVisTraps=superVisTraps, superVisSubAgentNoAnswer=superVisSubAgentNoAnswer, superVisTrpAckQueueCnt=superVisTrpAckQueueCnt, superVisSubagentName=superVisSubagentName, superVisTrapAckId=superVisTrapAckId, superVisMaxSubagentNumber=superVisMaxSubagentNumber, superVisObjectNumber=superVisObjectNumber, superVisSubagentUserId=superVisSubagentUserId, superVisSubagentCommand=superVisSubagentCommand, superVisSubagentOID=superVisSubagentOID, superVisSubagentCpuTime=superVisSubagentCpuTime, superVisSubagentEntry=superVisSubagentEntry, superVisSubagentDisconnTime=superVisSubagentDisconnTime, superVisSubagents=superVisSubagents, sniProductMibs=sniProductMibs, superVisSubagentConnTime=superVisSubagentConnTime, superVisSubagentProcessID=superVisSubagentProcessID, superVisSubagentSID=superVisSubagentSID)
