#
# PySNMP MIB module DNSHOTEXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DNSHOTEXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:52:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
dnshotExt, = mibBuilder.importSymbols("APENT-MIB", "dnshotExt")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, NotificationType, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Integer32, TimeTicks, Bits, Counter32, Gauge32, ObjectIdentity, iso, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "NotificationType", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Integer32", "TimeTicks", "Bits", "Counter32", "Gauge32", "ObjectIdentity", "iso", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
apDnshotExtMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2467, 1, 48, 1))
if mibBuilder.loadTexts: apDnshotExtMib.setLastUpdated('9710092000Z')
if mibBuilder.loadTexts: apDnshotExtMib.setOrganization('ArrowPoint Communications Inc.')
if mibBuilder.loadTexts: apDnshotExtMib.setContactInfo(' Postal: ArrowPoint Communications Inc. 50 Nagog Park Acton, Massachusetts 01720 Tel: +1 978-206-3000 option 1 E-Mail: support@arrowpoint.com')
if mibBuilder.loadTexts: apDnshotExtMib.setDescription('The MIB module used to describe the ArrowPoint Domain Hotlist table')
apDnshotExtEnable = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 48, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enable", 1), ("disable", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apDnshotExtEnable.setStatus('current')
if mibBuilder.loadTexts: apDnshotExtEnable.setDescription('Enable or Disable the Domain Name hotlist')
apDnshotExtSize = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 48, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apDnshotExtSize.setStatus('current')
if mibBuilder.loadTexts: apDnshotExtSize.setDescription('Total number of domain hotlist entries which will be maintained.')
apDnshotExtInterval = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 48, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apDnshotExtInterval.setStatus('current')
if mibBuilder.loadTexts: apDnshotExtInterval.setDescription('The interval in units of minutes used to refreshing the domain hotlist.')
apDnshotExtThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 48, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apDnshotExtThreshold.setStatus('current')
if mibBuilder.loadTexts: apDnshotExtThreshold.setDescription('The threshold under which an item is not considered hot.')
apDnshotExtTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 48, 6), )
if mibBuilder.loadTexts: apDnshotExtTable.setStatus('current')
if mibBuilder.loadTexts: apDnshotExtTable.setDescription('A list of ACLs.')
apDnshotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 48, 6, 1), ).setIndexNames((0, "DNSHOTEXT-MIB", "apDnshotIndex"))
if mibBuilder.loadTexts: apDnshotEntry.setStatus('current')
if mibBuilder.loadTexts: apDnshotEntry.setDescription('A set of parameters which describe a hot domain name.')
apDnshotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 48, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnshotIndex.setStatus('current')
if mibBuilder.loadTexts: apDnshotIndex.setDescription('The Dns Hotlist Table Record Index')
apDnshotName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 48, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnshotName.setStatus('current')
if mibBuilder.loadTexts: apDnshotName.setDescription('The hot domain name.')
apDnshotHits = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 48, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDnshotHits.setStatus('current')
if mibBuilder.loadTexts: apDnshotHits.setDescription('Total number of frames moved by this service for this content rule.')
mibBuilder.exportSymbols("DNSHOTEXT-MIB", apDnshotExtInterval=apDnshotExtInterval, apDnshotExtTable=apDnshotExtTable, apDnshotIndex=apDnshotIndex, apDnshotExtMib=apDnshotExtMib, apDnshotEntry=apDnshotEntry, apDnshotHits=apDnshotHits, apDnshotExtThreshold=apDnshotExtThreshold, apDnshotExtSize=apDnshotExtSize, apDnshotExtEnable=apDnshotExtEnable, apDnshotName=apDnshotName, PYSNMP_MODULE_ID=apDnshotExtMib)
