#
# PySNMP MIB module HPN-ICF-TRNG2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-TRNG2-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:41:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, TimeTicks, Counter64, ObjectIdentity, Integer32, Bits, NotificationType, MibIdentifier, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter32, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "TimeTicks", "Counter64", "ObjectIdentity", "Integer32", "Bits", "NotificationType", "MibIdentifier", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter32", "ModuleIdentity", "Gauge32")
DateAndTime, DisplayString, TruthValue, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TruthValue", "TextualConvention", "RowStatus")
hpnicfTRNG2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121))
hpnicfTRNG2.setRevisions(('2013-03-08 00:00', '2012-05-14 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpnicfTRNG2.setRevisionsDescriptions(("Modified to change node name from 'trng' to 'trange'.", '201205140000Z, --The initial revision of this MIB module.',))
if mibBuilder.loadTexts: hpnicfTRNG2.setLastUpdated('201303080000Z')
if mibBuilder.loadTexts: hpnicfTRNG2.setOrganization('')
if mibBuilder.loadTexts: hpnicfTRNG2.setContactInfo('')
if mibBuilder.loadTexts: hpnicfTRNG2.setDescription('The HPN-ICF-TRNG2-MIB contains objects to Configure the system absolute and periodic time-range.')
hpnicfTRNG2MibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1))
hpnicfTrangeCreateTimerangeTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 1), )
if mibBuilder.loadTexts: hpnicfTrangeCreateTimerangeTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangeCreateTimerangeTable.setDescription('Creat TimeRange.')
hpnicfTrangeCreateTimerangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-TRNG2-MIB", "hpnicfTrangeIndex"))
if mibBuilder.loadTexts: hpnicfTrangeCreateTimerangeEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangeCreateTimerangeEntry.setDescription('Define the entry of hpnicfTrangeCreateTimerangeTable')
hpnicfTrangeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hpnicfTrangeIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangeIndex.setDescription("TimeRange's index")
hpnicfTrangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTrangeName.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangeName.setDescription("TimeRange's name")
hpnicfTrangeValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfTrangeValidFlag.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangeValidFlag.setDescription('Valid or Invalid flag')
hpnicfTrangeCreateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTrangeCreateRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangeCreateRowStatus.setDescription('The status of this conceptual row.Now only realize CreateAndGo and Destroy and Active.')
hpnicfTrangeAbsoluteTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 2), )
if mibBuilder.loadTexts: hpnicfTrangeAbsoluteTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangeAbsoluteTable.setDescription('Creat absoluteness time item of the TimeRange')
hpnicfTrangeAbsoluteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-TRNG2-MIB", "hpnicfTrangeAbsoluteNameIndex"), (0, "HPN-ICF-TRNG2-MIB", "hpnicfTrangeAbsoluteSubIndex"))
if mibBuilder.loadTexts: hpnicfTrangeAbsoluteEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangeAbsoluteEntry.setDescription('Define the entry of hpnicfTrangeAbsoluteTable')
hpnicfTrangeAbsoluteNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hpnicfTrangeAbsoluteNameIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangeAbsoluteNameIndex.setDescription("TimeRange's index")
hpnicfTrangeAbsoluteSubIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12)))
if mibBuilder.loadTexts: hpnicfTrangeAbsoluteSubIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangeAbsoluteSubIndex.setDescription("SubItem's index")
hpnicfTrangeAbsoluteStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 2, 1, 3), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTrangeAbsoluteStartTime.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangeAbsoluteStartTime.setDescription("Start point of the timerange.The format defined like 'YYYY-MM-DD,hh:mm:0.0'.")
hpnicfTrangeAbsoluteEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 2, 1, 4), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTrangeAbsoluteEndTime.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangeAbsoluteEndTime.setDescription("End point of the timerange.The format defined like 'YYYY-MM-DD,hh:mm:0.0'.")
hpnicfTrangeAbsolueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTrangeAbsolueRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangeAbsolueRowStatus.setDescription('The status of this conceptual row. Now only realize CreateAndGo and Destroy and Active.')
hpnicfTrangePeriodicTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 3), )
if mibBuilder.loadTexts: hpnicfTrangePeriodicTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangePeriodicTable.setDescription('Creat periodic time item of the TimeRange')
hpnicfTrangePeriodicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 3, 1), ).setIndexNames((0, "HPN-ICF-TRNG2-MIB", "hpnicfTrangePeriodicNameIndex"), (0, "HPN-ICF-TRNG2-MIB", "hpnicfTrangePeriodicSubIndex"))
if mibBuilder.loadTexts: hpnicfTrangePeriodicEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangePeriodicEntry.setDescription('Define the index of hpnicfTrangePeriodicTable')
hpnicfTrangePeriodicNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hpnicfTrangePeriodicNameIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangePeriodicNameIndex.setDescription("TimeRange's index")
hpnicfTrangePeriodicSubIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: hpnicfTrangePeriodicSubIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangePeriodicSubIndex.setDescription("SubItem's index")
hpnicfTrangePeriodicDayOfWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 3, 1, 3), Bits().clone(namedValues=NamedValues(("sunday", 0), ("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTrangePeriodicDayOfWeek.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangePeriodicDayOfWeek.setDescription('The day of week. This is a bit-map of possible conditions. The various bit positions are: |0 |sunday | |1 |monday | |2 |tuesday | |3 |wednesday | |4 |thursday | |5 |friday | |6 |saturday | ')
hpnicfTrangePeriodicStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 3, 1, 4), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTrangePeriodicStartTime.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangePeriodicStartTime.setDescription("Start point of this timerange,The format defined like 'hh:mm:0,0'.")
hpnicfTrangePeriodicEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 3, 1, 5), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTrangePeriodicEndTime.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangePeriodicEndTime.setDescription("End point of this timerange. The format definedlike 'hh:mm:0,0'.")
hpnicfTrangePeriodicRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 121, 1, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTrangePeriodicRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrangePeriodicRowStatus.setDescription('The status of this conceptual row, Now only realize CreateAndGo and Destroy and Active.')
mibBuilder.exportSymbols("HPN-ICF-TRNG2-MIB", hpnicfTrangeAbsoluteEndTime=hpnicfTrangeAbsoluteEndTime, hpnicfTrangePeriodicStartTime=hpnicfTrangePeriodicStartTime, hpnicfTrangeIndex=hpnicfTrangeIndex, hpnicfTrangeAbsolueRowStatus=hpnicfTrangeAbsolueRowStatus, hpnicfTrangeAbsoluteNameIndex=hpnicfTrangeAbsoluteNameIndex, hpnicfTrangeAbsoluteSubIndex=hpnicfTrangeAbsoluteSubIndex, hpnicfTrangePeriodicRowStatus=hpnicfTrangePeriodicRowStatus, hpnicfTrangePeriodicNameIndex=hpnicfTrangePeriodicNameIndex, hpnicfTRNG2=hpnicfTRNG2, hpnicfTrangeCreateRowStatus=hpnicfTrangeCreateRowStatus, hpnicfTrangePeriodicSubIndex=hpnicfTrangePeriodicSubIndex, hpnicfTrangeName=hpnicfTrangeName, hpnicfTrangePeriodicTable=hpnicfTrangePeriodicTable, hpnicfTrangeValidFlag=hpnicfTrangeValidFlag, hpnicfTrangePeriodicEntry=hpnicfTrangePeriodicEntry, hpnicfTrangeAbsoluteTable=hpnicfTrangeAbsoluteTable, hpnicfTrangeCreateTimerangeEntry=hpnicfTrangeCreateTimerangeEntry, hpnicfTrangeAbsoluteStartTime=hpnicfTrangeAbsoluteStartTime, hpnicfTrangeCreateTimerangeTable=hpnicfTrangeCreateTimerangeTable, hpnicfTRNG2MibObjects=hpnicfTRNG2MibObjects, hpnicfTrangePeriodicEndTime=hpnicfTrangePeriodicEndTime, hpnicfTrangePeriodicDayOfWeek=hpnicfTrangePeriodicDayOfWeek, hpnicfTrangeAbsoluteEntry=hpnicfTrangeAbsoluteEntry, PYSNMP_MODULE_ID=hpnicfTRNG2)
