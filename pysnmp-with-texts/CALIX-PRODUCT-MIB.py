#
# PySNMP MIB module CALIX-PRODUCT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CALIX-PRODUCT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:46:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
calixModules, calixRegistrations, calixProducts, calixManagement = mibBuilder.importSymbols("CALIX-SMI", "calixModules", "calixRegistrations", "calixProducts", "calixManagement")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, MibIdentifier, Counter64, Gauge32, Unsigned32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ModuleIdentity, iso, ObjectIdentity, Bits, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibIdentifier", "Counter64", "Gauge32", "Unsigned32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ModuleIdentity", "iso", "ObjectIdentity", "Bits", "Counter32", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
calixProduct = ModuleIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 1, 1))
calixProduct.setRevisions(('2009-12-10 00:00', '2007-06-28 00:00', '2000-08-31 00:26',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: calixProduct.setRevisionsDescriptions(('Changed E5 references to E7, with comments.', 'Updated for E5 and E5-100.', 'Initial release.',))
if mibBuilder.loadTexts: calixProduct.setLastUpdated('200706280000Z')
if mibBuilder.loadTexts: calixProduct.setOrganization('Calix Networks, Inc.')
if mibBuilder.loadTexts: calixProduct.setContactInfo(' Calix Networks, Inc. Postal: 1035 North McDowell Boulevard Petaluma, CA 94954-1173 USA Phone: +1 707 766 3000 Fax: +1 707 766 3100 E-mail: tech.support@calix.com')
if mibBuilder.loadTexts: calixProduct.setDescription('This management information module contains the administrative assignments which are used to uniquely identify physical components')
c7 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1))
if mibBuilder.loadTexts: c7.setStatus('current')
if mibBuilder.loadTexts: c7.setDescription('The definitive identifier of the Calix Networks C7')
e7 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 2))
if mibBuilder.loadTexts: e7.setStatus('current')
if mibBuilder.loadTexts: e7.setDescription('The definitive identifier of the Calix Networks E7, E5-400, and E5-312 products.')
e7Modules = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 2, 1))
if mibBuilder.loadTexts: e7Modules.setStatus('current')
if mibBuilder.loadTexts: e7Modules.setDescription('Sub-tree to register the values assigned to E7 modules with the MODULE-IDENTITY construct.')
e7Devices = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 2, 5))
if mibBuilder.loadTexts: e7Devices.setStatus('current')
if mibBuilder.loadTexts: e7Devices.setDescription('Sub-tree to register the device types which use the E7 modules. These registrations below this point are the sysObjectID values.')
e5x312 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 2, 5, 1))
if mibBuilder.loadTexts: e5x312.setStatus('current')
if mibBuilder.loadTexts: e5x312.setDescription('The E5-312 product.')
e5x400 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 2, 5, 2))
if mibBuilder.loadTexts: e5x400.setStatus('current')
if mibBuilder.loadTexts: e5x400.setDescription('The E5-400 product.')
e7x2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 2, 5, 3))
if mibBuilder.loadTexts: e7x2.setStatus('current')
if mibBuilder.loadTexts: e7x2.setDescription('The E7-2 product.')
e7x20 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 2, 5, 4))
if mibBuilder.loadTexts: e7x20.setStatus('current')
if mibBuilder.loadTexts: e7x20.setDescription('The E7-20 product.')
e5x100 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 3))
if mibBuilder.loadTexts: e5x100.setStatus('current')
if mibBuilder.loadTexts: e5x100.setDescription('The definitive identifier of the Calix Networks E5-100')
c7ShelfAssembly = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 1))
if mibBuilder.loadTexts: c7ShelfAssembly.setStatus('current')
if mibBuilder.loadTexts: c7ShelfAssembly.setDescription('C7 Shelf Assembly Object')
c7Backplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 2))
if mibBuilder.loadTexts: c7Backplane.setStatus('current')
if mibBuilder.loadTexts: c7Backplane.setDescription('C7 Backplane Object')
c7Slot = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 3))
if mibBuilder.loadTexts: c7Slot.setStatus('current')
if mibBuilder.loadTexts: c7Slot.setDescription('C7 Card Object')
c7Card = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 4))
if mibBuilder.loadTexts: c7Card.setStatus('current')
if mibBuilder.loadTexts: c7Card.setDescription('C7 Card Object')
c7Port = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 5))
if mibBuilder.loadTexts: c7Port.setStatus('current')
if mibBuilder.loadTexts: c7Port.setDescription('C7 Port Object')
amp = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 4, 1))
if mibBuilder.loadTexts: amp.setStatus('current')
if mibBuilder.loadTexts: amp.setDescription('Administration and Maintenance Processor')
mta = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 4, 2))
if mibBuilder.loadTexts: mta.setStatus('current')
if mibBuilder.loadTexts: mta.setDescription('Metallic Test Access')
rapOc = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 4, 3))
if mibBuilder.loadTexts: rapOc.setStatus('current')
if mibBuilder.loadTexts: rapOc.setDescription('Resource and Arbitration Processor with OC-3/12/48, 1310 IR')
rapDs3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 4, 4))
if mibBuilder.loadTexts: rapDs3.setStatus('current')
if mibBuilder.loadTexts: rapDs3.setDescription('Resource and Arbitration Processor with DS3 UNI')
rpots24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 4, 5))
if mibBuilder.loadTexts: rpots24.setStatus('current')
if mibBuilder.loadTexts: rpots24.setDescription('POTS, 24-port')
adsl24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 4, 6))
if mibBuilder.loadTexts: adsl24.setStatus('current')
if mibBuilder.loadTexts: adsl24.setDescription('ADSL, 24-port')
ds1x12 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 4, 7))
if mibBuilder.loadTexts: ds1x12.setStatus('current')
if mibBuilder.loadTexts: ds1x12.setDescription('DS1, 12-port')
ds3x12s = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 4, 8))
if mibBuilder.loadTexts: ds3x12s.setStatus('current')
if mibBuilder.loadTexts: ds3x12s.setDescription('DS3, 12-port, SONET mapped')
ds3x12p = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 4, 9))
if mibBuilder.loadTexts: ds3x12p.setStatus('current')
if mibBuilder.loadTexts: ds3x12p.setDescription('DS3, 12-port, Packet')
oc3x4ir = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 4, 10))
if mibBuilder.loadTexts: oc3x4ir.setStatus('current')
if mibBuilder.loadTexts: oc3x4ir.setDescription('OC3, 4-port, Packet/SONET, 1310 IR')
oc12x4ir = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 4, 11))
if mibBuilder.loadTexts: oc12x4ir.setStatus('current')
if mibBuilder.loadTexts: oc12x4ir.setDescription('OC12, 4-port, Packet/SONET, 1310 IR')
oc48x1lr = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 4, 12))
if mibBuilder.loadTexts: oc48x1lr.setStatus('current')
if mibBuilder.loadTexts: oc48x1lr.setDescription('OC48, 1-port, Packet/SONET, 1550 LR')
fta = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 4, 13))
if mibBuilder.loadTexts: fta.setStatus('current')
if mibBuilder.loadTexts: fta.setDescription('Fan Tray Assembly')
dfta = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 4, 14))
if mibBuilder.loadTexts: dfta.setStatus('current')
if mibBuilder.loadTexts: dfta.setDescription('Display Fan Tray Assembly')
mspa = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 4, 15))
if mibBuilder.loadTexts: mspa.setStatus('current')
if mibBuilder.loadTexts: mspa.setDescription('Metallic Service Protection - Side A')
mspb = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 4, 16))
if mibBuilder.loadTexts: mspb.setStatus('current')
if mibBuilder.loadTexts: mspb.setDescription('Metallic Service Protection - Side B')
ds0 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 5, 1))
if mibBuilder.loadTexts: ds0.setStatus('current')
if mibBuilder.loadTexts: ds0.setDescription('DS0 Port Object')
c7Ds1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 5, 2))
if mibBuilder.loadTexts: c7Ds1.setStatus('current')
if mibBuilder.loadTexts: c7Ds1.setDescription('DS1 Port Object')
c7Ds3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 5, 3))
if mibBuilder.loadTexts: c7Ds3.setStatus('current')
if mibBuilder.loadTexts: c7Ds3.setDescription('DS3 Port Object')
adsl = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 5, 4))
if mibBuilder.loadTexts: adsl.setStatus('current')
if mibBuilder.loadTexts: adsl.setDescription('ADSL Port Object')
oc3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 5, 5))
if mibBuilder.loadTexts: oc3.setStatus('current')
if mibBuilder.loadTexts: oc3.setDescription('OC-3 Port Object')
oc12 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 5, 6))
if mibBuilder.loadTexts: oc12.setStatus('current')
if mibBuilder.loadTexts: oc12.setDescription('OC-12 Port Object')
oc48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6321, 1, 2, 1, 5, 7))
if mibBuilder.loadTexts: oc48.setStatus('current')
if mibBuilder.loadTexts: oc48.setDescription('OC-48 Port Object')
mibBuilder.exportSymbols("CALIX-PRODUCT-MIB", c7Backplane=c7Backplane, e5x100=e5x100, c7Card=c7Card, c7Slot=c7Slot, c7=c7, e5x312=e5x312, e7Devices=e7Devices, e5x400=e5x400, adsl=adsl, adsl24=adsl24, mta=mta, ds3x12p=ds3x12p, PYSNMP_MODULE_ID=calixProduct, e7=e7, oc48x1lr=oc48x1lr, e7Modules=e7Modules, oc12=oc12, c7Ds1=c7Ds1, fta=fta, mspa=mspa, c7Port=c7Port, ds3x12s=ds3x12s, c7ShelfAssembly=c7ShelfAssembly, amp=amp, oc12x4ir=oc12x4ir, ds0=ds0, e7x20=e7x20, e7x2=e7x2, oc3x4ir=oc3x4ir, mspb=mspb, oc3=oc3, ds1x12=ds1x12, calixProduct=calixProduct, c7Ds3=c7Ds3, rapOc=rapOc, rapDs3=rapDs3, rpots24=rpots24, dfta=dfta, oc48=oc48)
