#
# PySNMP MIB module IEEE8021-SPANNING-TREE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IEEE8021-SPANNING-TREE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:52:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
Timeout, BridgeId = mibBuilder.importSymbols("BRIDGE-MIB", "Timeout", "BridgeId")
ieee802dot1mibs, IEEE8021BridgePortNumber, IEEE8021PbbComponentIdentifier = mibBuilder.importSymbols("IEEE8021-TC-MIB", "ieee802dot1mibs", "IEEE8021BridgePortNumber", "IEEE8021PbbComponentIdentifier")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Gauge32, ObjectIdentity, Bits, IpAddress, TimeTicks, Counter64, iso, Unsigned32, Integer32, MibIdentifier, Counter32, ModuleIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ObjectIdentity", "Bits", "IpAddress", "TimeTicks", "Counter64", "iso", "Unsigned32", "Integer32", "MibIdentifier", "Counter32", "ModuleIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
ieee8021SpanningTreeMib = ModuleIdentity((1, 3, 111, 2, 802, 1, 1, 3))
ieee8021SpanningTreeMib.setRevisions(('2014-12-15 00:00', '2011-03-24 00:00', '2008-10-15 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ieee8021SpanningTreeMib.setRevisionsDescriptions(('Published as part of IEEE Std 802.1Q 2014 revision. Cross references updated and corrected. ieee8021SpanningTreeRstpTxHoldCount default value changed to 6 to match Table 13-5.', 'Minor edits to contact information and addition of fragile Bridge as part of 2011 revision of IEEE Std 802.1Q.', 'Initial revision, derived from RFC 4188.',))
if mibBuilder.loadTexts: ieee8021SpanningTreeMib.setLastUpdated('201412150000Z')
if mibBuilder.loadTexts: ieee8021SpanningTreeMib.setOrganization('IEEE 802.1 Working Group')
if mibBuilder.loadTexts: ieee8021SpanningTreeMib.setContactInfo(' WG-URL: http://grouper.ieee.org/groups/802/1/index.html WG-EMail: stds-802-1@ieee.org Contact: IEEE 802.1 Working Group Chair Postal: C/O IEEE 802.1 Working Group IEEE Standards Association 445 Hoes Lane P.O. Box 1331 Piscataway NJ 08855-1331 USA E-mail: STDS-802-1-L@LISTSERV.IEEE.ORG')
if mibBuilder.loadTexts: ieee8021SpanningTreeMib.setDescription('The Spanning-Tree MIB module for managing devices that support IEEE 802.1Q. This MIB module is derived from the IETF BRIDGE-MIB, RFC 4188. Unless otherwise indicated, the references in this MIB module are to IEEE Std 802.1Q-2014. Copyright (C) IEEE (2014). This version of this MIB module is part of IEEE802.1Q; see the draft itself for full legal notices.')
ieee8021SpanningTreeNotifications = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 3, 0))
ieee8021SpanningTreeObjects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 3, 1))
ieee8021SpanningTreeConformance = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 3, 2))
ieee8021SpanningTreeTable = MibTable((1, 3, 111, 2, 802, 1, 1, 3, 1, 1), )
if mibBuilder.loadTexts: ieee8021SpanningTreeTable.setReference('12.8.1')
if mibBuilder.loadTexts: ieee8021SpanningTreeTable.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeTable.setDescription('A table that contains information related to STP about every Bridge.')
ieee8021SpanningTreeEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 3, 1, 1, 1), ).setIndexNames((0, "IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeComponentId"))
if mibBuilder.loadTexts: ieee8021SpanningTreeEntry.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeEntry.setDescription('A list of objects containing information for each Bridge about the Spanning Tree Protocol for that Bridge.')
ieee8021SpanningTreeComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 1, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021SpanningTreeComponentId.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeComponentId.setDescription('The component identifier is used to distinguish between the multiple virtual Bridge instances within a PBB. In simple situations where there is only a single component the default value is 1.')
ieee8021SpanningTreeProtocolSpecification = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("decLb100", 2), ("ieee8021d", 3), ("ieee8021q", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021SpanningTreeProtocolSpecification.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeProtocolSpecification.setDescription("An indication of what version of the Spanning Tree Protocol is being run. The value 'decLb100(2)' indicates the DEC LANbridge 100 Spanning Tree protocol. IEEE 802.1D implementations will return 'ieee8021d(3)'. New enumerated values may be added in the future to the definition of this object to reflect future versions of the IEEE Spanning Tree protocol.")
ieee8021SpanningTreePriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021SpanningTreePriority.setReference('12.8.1.1.3 a)')
if mibBuilder.loadTexts: ieee8021SpanningTreePriority.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreePriority.setDescription('The value of the write-able portion of the Bridge ID (i.e., the first two octets of the (8 octet long) Bridge ID). The other (last) 6 octets of the Bridge ID are given by the value of ieee8021BridgeBaseBridgeAddress. On Bridges supporting IEEE 802.1t or IEEE 802.1w, permissible values are 0-61440, in steps of 4096. The value of this object MUST be retained across reinitializations of the management system.')
ieee8021SpanningTreeTimeSinceTopologyChange = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 1, 1, 4), TimeTicks()).setUnits('centi-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021SpanningTreeTimeSinceTopologyChange.setReference('12.8.1.1.3 b)')
if mibBuilder.loadTexts: ieee8021SpanningTreeTimeSinceTopologyChange.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeTimeSinceTopologyChange.setDescription('The time (in hundredths of a second) since the last time a topology change was detected by the Bridge entity. For RSTP, this reports the time since the tcWhile timer for any port on this Bridge was nonzero.')
ieee8021SpanningTreeTopChanges = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 1, 1, 5), Counter64()).setUnits('topology changes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021SpanningTreeTopChanges.setReference('12.8.1.1.3 c)')
if mibBuilder.loadTexts: ieee8021SpanningTreeTopChanges.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeTopChanges.setDescription('The total number of topology changes detected by this Bridge since the management entity was last reset or initialized. Discontinuities in the value of the counter can occur at re-initialization of the management system.')
ieee8021SpanningTreeDesignatedRoot = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 1, 1, 6), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021SpanningTreeDesignatedRoot.setReference('12.8.1.1.3 e)')
if mibBuilder.loadTexts: ieee8021SpanningTreeDesignatedRoot.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeDesignatedRoot.setDescription('The Bridge identifier of the root of the spanning tree, as determined by the Spanning Tree Protocol, as executed by this node. This value is used as the Root Identifier parameter in all Configuration Bridge PDUs originated by this node.')
ieee8021SpanningTreeRootCost = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021SpanningTreeRootCost.setReference('12.8.1.1.3 f)')
if mibBuilder.loadTexts: ieee8021SpanningTreeRootCost.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeRootCost.setDescription('The cost of the path to the root as seen from this Bridge.')
ieee8021SpanningTreeRootPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 1, 1, 8), IEEE8021BridgePortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021SpanningTreeRootPort.setReference('12.8.1.1.3 g)')
if mibBuilder.loadTexts: ieee8021SpanningTreeRootPort.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeRootPort.setDescription('The port number of the port that offers the lowest cost path from this Bridge to the root Bridge.')
ieee8021SpanningTreeMaxAge = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 1, 1, 9), Timeout()).setUnits('centi-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021SpanningTreeMaxAge.setReference('12.8.1.1.3 h)')
if mibBuilder.loadTexts: ieee8021SpanningTreeMaxAge.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeMaxAge.setDescription('The maximum age of Spanning Tree Protocol information learned from the network on any port before it is discarded, in units of hundredths of a second. This is the actual value that this Bridge is currently using.')
ieee8021SpanningTreeHelloTime = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 1, 1, 10), Timeout()).setUnits('centi-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021SpanningTreeHelloTime.setReference('12.8.1.1.3 k)')
if mibBuilder.loadTexts: ieee8021SpanningTreeHelloTime.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeHelloTime.setDescription('The amount of time between the transmission of Configuration Bridge PDUs by this node on any port when it is the root of the spanning tree, or trying to become so, in units of hundredths of a second. This is the actual value that this Bridge is currently using.')
ieee8021SpanningTreeHoldTime = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 1, 1, 11), Integer32()).setUnits('centi-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021SpanningTreeHoldTime.setReference('12.8.1.1.3 m)')
if mibBuilder.loadTexts: ieee8021SpanningTreeHoldTime.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeHoldTime.setDescription('This time value determines the interval length during which no more than two Configuration Bridge PDUs shall be transmitted by this node, in units of hundredths of a second.')
ieee8021SpanningTreeForwardDelay = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 1, 1, 12), Timeout()).setUnits('centi-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021SpanningTreeForwardDelay.setReference('12.8.1.1.3 i)')
if mibBuilder.loadTexts: ieee8021SpanningTreeForwardDelay.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeForwardDelay.setDescription('This time value, measured in units of hundredths of a second, controls how fast a port changes its spanning state when moving towards the Forwarding state. The value determines how long the port stays in each of the Listening and Learning states, which precede the Forwarding state. This value is also used when a topology change has been detected and is underway, to age all dynamic entries in the Filtering Database. [Note that this value is the one that this Bridge is currently using, in contrast to ieee8021SpanningTreeBridgeForwardDelay, which is the value that this Bridge and all others would start using if/when this Bridge were to become the root.]')
ieee8021SpanningTreeBridgeMaxAge = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 1, 1, 13), Timeout().subtype(subtypeSpec=ValueRangeConstraint(600, 4000))).setUnits('centi-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021SpanningTreeBridgeMaxAge.setReference('12.8.1.1.3 j)')
if mibBuilder.loadTexts: ieee8021SpanningTreeBridgeMaxAge.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeBridgeMaxAge.setDescription('The value that all Bridges use for MaxAge when this Bridge is acting as the root. Note that 802.1D-1998 specifies that the range for this parameter is related to the value of ieee8021SpanningTreeBridgeHelloTime. The granularity of this timer is specified by 802.1D-1998 to be 1 second. An agent may return an SNMP badValue error (or its equivalent if another protocol is used) if a set is attempted to a value that is not a whole number of seconds. The value of this object MUST be retained across reinitializations of the management system.')
ieee8021SpanningTreeBridgeHelloTime = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 1, 1, 14), Timeout().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setUnits('centi-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021SpanningTreeBridgeHelloTime.setReference('12.8.1.1.3 k)')
if mibBuilder.loadTexts: ieee8021SpanningTreeBridgeHelloTime.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeBridgeHelloTime.setDescription('The value that all Bridges use for HelloTime when this Bridge is acting as the root. The granularity of this timer is specified by 802.1D-1998 to be 1 second. An agent may return an SNMP badValue error (or its equivalent if another protocol is used) if a set is attempted to a value that is not a whole number of seconds. The value of this object MUST be retained across reinitializations of the management system.')
ieee8021SpanningTreeBridgeForwardDelay = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 1, 1, 15), Timeout().subtype(subtypeSpec=ValueRangeConstraint(400, 3000))).setUnits('centi-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021SpanningTreeBridgeForwardDelay.setReference('12.8.1.1.3 l)')
if mibBuilder.loadTexts: ieee8021SpanningTreeBridgeForwardDelay.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeBridgeForwardDelay.setDescription('The value that all Bridges use for ForwardDelay when this Bridge is acting as the root. Note that 802.1D-1998 specifies that the range for this parameter is related to the value of ieee8021SpanningTreeBridgeMaxAge. The granularity of this timer is specified by 802.1D-1998 to be 1 second. An agent may return an SNMP badValue error (or its equivalent if another protocol is used) if a set is attempted to a value that is not a whole number of seconds. The value of this object MUST be retained across reinitializations of the management system.')
ieee8021SpanningTreeVersion = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("stp", 0), ("rstp", 2), ("mstp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021SpanningTreeVersion.setReference('12.8.1.1.3 n)')
if mibBuilder.loadTexts: ieee8021SpanningTreeVersion.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeVersion.setDescription("The version of Spanning Tree Protocol the Bridge is currently running. The values are directly from the IEEE standard. New values may be defined as future versions of the protocol become available. The value 'stp(0)' indicates the Bridge is running the Spanning Tree Protocol specified in IEEE 802.1D-1998. The value 'rstp(2)' indicates the Bridge is running RSTP specified in IEEE 802.1Q. The value 'mstp(3)' indicates the Bridge is running MSTP specified in Clause 13 of IEEE802.1Q The value of this object MUST be retained across reinitializations of the management system.")
ieee8021SpanningTreeRstpTxHoldCount = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpTxHoldCount.setReference('12.8.1.1.3 m), 13.26.12')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpTxHoldCount.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpTxHoldCount.setDescription('The value used by the Port Transmit state machine to limit the maximum transmission rate. This is used by Bridges that are running RSTP. The value of this object MUST be retained across reinitializations of the management system.')
ieee8021SpanningTreePortTable = MibTable((1, 3, 111, 2, 802, 1, 1, 3, 1, 2), )
if mibBuilder.loadTexts: ieee8021SpanningTreePortTable.setReference('12.8.2')
if mibBuilder.loadTexts: ieee8021SpanningTreePortTable.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreePortTable.setDescription('A table that contains port-specific information for the Spanning Tree Protocol.')
ieee8021SpanningTreePortEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 3, 1, 2, 1), ).setIndexNames((0, "IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreePortComponentId"), (0, "IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreePort"))
if mibBuilder.loadTexts: ieee8021SpanningTreePortEntry.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreePortEntry.setDescription('A list of objects containing information maintained by every port about the Spanning Tree Protocol state for that port.')
ieee8021SpanningTreePortComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 2, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021SpanningTreePortComponentId.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreePortComponentId.setDescription('The component identifier is used to distinguish between the multiple virtual Bridge instances within a PBB. In simple situations where there is only a single component the default value is 1.')
ieee8021SpanningTreePort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 2, 1, 2), IEEE8021BridgePortNumber())
if mibBuilder.loadTexts: ieee8021SpanningTreePort.setReference('12.8.2.1.2 a)')
if mibBuilder.loadTexts: ieee8021SpanningTreePort.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreePort.setDescription('The port number of the port for which this entry contains Spanning Tree Protocol management information.')
ieee8021SpanningTreePortPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021SpanningTreePortPriority.setReference('12.8.2.1.3 c)')
if mibBuilder.loadTexts: ieee8021SpanningTreePortPriority.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreePortPriority.setDescription('The value of the priority field that is contained in the first (in network byte order) octet of the (2 octet long) Port ID. The other octet of the Port ID is given by the value of ieee8021SpanningTreePort. On Bridges supporting IEEE 802.1t or IEEE 802.1w, permissible values are 0-240, in steps of 16. The value of this object MUST be retained across reinitializations of the management system.')
ieee8021SpanningTreePortState = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021SpanningTreePortState.setReference('12.8.2.1.3 b)')
if mibBuilder.loadTexts: ieee8021SpanningTreePortState.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreePortState.setDescription("The port's current state, as defined by application of the Spanning Tree Protocol. This state controls what action a port takes on reception of a frame. If the Bridge has detected a port that is malfunctioning, it will place that port into the broken(6) state. For ports that are disabled (see ieee8021SpanningTreePortEnabled), this object will have a value of disabled(1). The values disabled, blocking, listening, and broken correspond to the Clause 12 port state of 'Discarding'. The value learning corresponds to the Clause 12 port state of 'Learning'. The value forwarding corresponds to the Clause 12 port state of 'Forwarding'.")
ieee8021SpanningTreePortEnabled = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 2, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021SpanningTreePortEnabled.setReference('12.8.2.1.3 m)')
if mibBuilder.loadTexts: ieee8021SpanningTreePortEnabled.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreePortEnabled.setDescription('The enabled/disabled status of the port. A value of true(1) means the spanning-tree protocol is enabled for this port. The value of this object MUST be retained across reinitializations of the management system.')
ieee8021SpanningTreePortPathCost = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021SpanningTreePortPathCost.setReference('12.8.2.1.3 d)')
if mibBuilder.loadTexts: ieee8021SpanningTreePortPathCost.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreePortPathCost.setDescription('The contribution of this port to the path cost of paths towards the spanning tree root which include this port. Table 13-4 recommends defaults and ranges for Port Path Cost values, in inverse proportion to the speed of the attached LAN. If this object is used to set the Path Cost it is possible to restore the default setting using the ieee8021SpanningTreeRstpPortAdminPathCost object. Table 13-4 recommends defaults and ranges for Port Path Cost values, in inverse proportion to the speed of the attached LAN. If this object is used to set the Path Cost it is possible to restore the default setting using the ieee8021MstpPortAdminPathCost object. The value of this object MUST be retained across reinitializations of the management system.')
ieee8021SpanningTreePortDesignatedRoot = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 2, 1, 7), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021SpanningTreePortDesignatedRoot.setReference('12.8.2.1.3 e)')
if mibBuilder.loadTexts: ieee8021SpanningTreePortDesignatedRoot.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreePortDesignatedRoot.setDescription('The unique Bridge Identifier of the Bridge recorded as the Root in the Configuration BPDUs transmitted by the Designated Bridge for the segment to which the port is attached.')
ieee8021SpanningTreePortDesignatedCost = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021SpanningTreePortDesignatedCost.setReference('12.8.2.1.3 f)')
if mibBuilder.loadTexts: ieee8021SpanningTreePortDesignatedCost.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreePortDesignatedCost.setDescription('The path cost of the Designated Port of the segment connected to this port. This value is compared to the Root Path Cost field in received Bridge PDUs.')
ieee8021SpanningTreePortDesignatedBridge = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 2, 1, 9), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021SpanningTreePortDesignatedBridge.setReference('12.8.2.1.3 g)')
if mibBuilder.loadTexts: ieee8021SpanningTreePortDesignatedBridge.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreePortDesignatedBridge.setDescription("The Bridge Identifier of the Bridge that this port considers to be the Designated Bridge for this port's segment.")
ieee8021SpanningTreePortDesignatedPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 2, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021SpanningTreePortDesignatedPort.setReference('12.8.2.1.3 h)')
if mibBuilder.loadTexts: ieee8021SpanningTreePortDesignatedPort.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreePortDesignatedPort.setDescription("The Port Identifier of the port on the Designated Bridge for this port's segment.")
ieee8021SpanningTreePortForwardTransitions = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 2, 1, 11), Counter64()).setUnits('forwarding transitions').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021SpanningTreePortForwardTransitions.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreePortForwardTransitions.setDescription('The number of times this port has transitioned from the Learning state to the Forwarding state. Discontinuities in the value of the counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime object of the associated interface (if any).')
ieee8021SpanningTreeRstpPortProtocolMigration = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 2, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortProtocolMigration.setReference('12.8.2.5')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortProtocolMigration.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortProtocolMigration.setDescription('When operating in RSTP (version 2) mode, writing true(1) to this object forces this port to transmit RSTP BPDUs. Any other operation on this object has no effect and it always returns false(2) when read.')
ieee8021SpanningTreeRstpPortAdminEdgePort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 2, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortAdminEdgePort.setReference('12.8.2.1.3 k)')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortAdminEdgePort.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortAdminEdgePort.setDescription("The administrative value of the Edge Port parameter. A value of true(1) indicates that this port should be assumed as an edge-port, and a value of false(2) indicates that this port should be assumed as a non-edge-port. Setting this object will also cause the corresponding instance of ieee8021SpanningTreeRstpPortOperEdgePort to change to the same value. Note that even when this object's value is true(1), the value of the corresponding instance of ieee8021SpanningTreeRstpPortOperEdgePort can be false(2) if a BPDU has been received. The value of this object MUST be retained across reinitializations of the management system.")
ieee8021SpanningTreeRstpPortOperEdgePort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 2, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortOperEdgePort.setReference('12.8.2.1.3 l)')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortOperEdgePort.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortOperEdgePort.setDescription('The operational value of the Edge Port parameter. The object is initialized to the value of the corresponding instance of ieee8021SpanningTreeRstpPortAdminEdgePort. When the corresponding instance of ieee8021SpanningTreeRstpPortAdminEdgePort is set, this object will be changed as well. This object will also be changed to false(2) on reception of a BPDU.')
ieee8021SpanningTreeRstpPortAdminPathCost = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortAdminPathCost.setReference('12.8.2.1.3 d)')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortAdminPathCost.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortAdminPathCost.setDescription("The administratively assigned value for the contribution of this port to the path cost of paths toward the spanning tree root. Writing a value of '0' assigns the automatically calculated default Path Cost value to the port. If the default Path Cost is being used, this object returns '0' when read. This complements the object ieee8021SpanningTreePortPathCost, which returns the operational value of the path cost. The value of this object MUST be retained across reinitializations of the management system.")
ieee8021SpanningTreePortExtensionTable = MibTable((1, 3, 111, 2, 802, 1, 1, 3, 1, 3), )
if mibBuilder.loadTexts: ieee8021SpanningTreePortExtensionTable.setReference('12.8.2')
if mibBuilder.loadTexts: ieee8021SpanningTreePortExtensionTable.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreePortExtensionTable.setDescription('A table that contains port-specific information for the Spanning Tree Protocol.')
ieee8021SpanningTreePortExtensionEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 3, 1, 3, 1), )
ieee8021SpanningTreePortEntry.registerAugmentions(("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreePortExtensionEntry"))
ieee8021SpanningTreePortExtensionEntry.setIndexNames(*ieee8021SpanningTreePortEntry.getIndexNames())
if mibBuilder.loadTexts: ieee8021SpanningTreePortExtensionEntry.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreePortExtensionEntry.setDescription('A list of additional objects containing information maintained by every port about the Spanning Tree Protocol state for that port.')
ieee8021SpanningTreeRstpPortAutoEdgePort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 3, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortAutoEdgePort.setReference('12.8.2.1.3 m)')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortAutoEdgePort.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortAutoEdgePort.setDescription('The administrative value of the Auto Edge Port parameter. A value of true(1) indicates if the Bridge detection state machine (BDM, 13.31) is to detect other Bridges attached to the LAN, and set ieee8021SpanningTreeRstpPortOperEdgePort automatically. The default value is true(1) This is optional and provided only by implementations that support the automatic identification of edge ports. The value of this object MUST be retained across reinitializations of the management system.')
ieee8021SpanningTreeRstpPortAutoIsolatePort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 3, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortAutoIsolatePort.setReference('12.8.2.1.3 n)')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortAutoIsolatePort.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortAutoIsolatePort.setDescription('The operational value of the Isolate Port parameter. A value of true(1) indicates a Designated Port will transition to discarding if both ieee8021SpanningTreeRstpPortAdminEdgePort and ieee8021SpanningTreeRstpPortAutoEdgePort are FALSE and the other Bridge presumed to be attached to the same point-to-point LAN does not transmit periodic BPDUs. This is optional and provided only by implementations that support the automatic identification of edge ports.')
ieee8021SpanningTreeRstpPortIsolatePort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 3, 1, 3, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortIsolatePort.setReference('12.8.2.1.3 o)')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortIsolatePort.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortIsolatePort.setDescription('The operational value of the Isolate Port parameter. A value of true(1), Set by the Bridge detection state machine (BDM, 13.31), indicates when the Spanning Tree Protocol Entity of a neighboring Bridge has apparently failed .')
ieee8021SpanningTreeNewRoot = NotificationType((1, 3, 111, 2, 802, 1, 1, 3, 0, 1))
if mibBuilder.loadTexts: ieee8021SpanningTreeNewRoot.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeNewRoot.setDescription('The ieee8021SpanningTreeNewRoot notification indicates that the sending agent has become the new root of the Spanning Tree; the notification is sent by a Bridge soon after its election as the new root, e.g., upon expiration of the Topology Change Timer, immediately subsequent to its election.')
ieee8021SpanningTreeTopologyChange = NotificationType((1, 3, 111, 2, 802, 1, 1, 3, 0, 2))
if mibBuilder.loadTexts: ieee8021SpanningTreeTopologyChange.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeTopologyChange.setDescription('A ieee8021SpanningTreeTopologyChange notification is sent by a Bridge when any of its configured ports transitions from the Learning state to the Forwarding state, or from the Forwarding state to the Blocking state. The notification is not sent if a ieee8021SpanningTreeNewRoot notification is sent for the same transition.')
ieee8021SpanningTreeCompliances = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 3, 2, 1))
ieee8021SpanningTreeGroups = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 3, 2, 2))
ieee8021SpanningTreeGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 3, 2, 2, 1)).setObjects(("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeProtocolSpecification"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreePriority"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeTimeSinceTopologyChange"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeTopChanges"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeDesignatedRoot"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeRootCost"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeRootPort"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeMaxAge"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeHelloTime"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeHoldTime"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeForwardDelay"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeBridgeMaxAge"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeBridgeHelloTime"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeBridgeForwardDelay"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021SpanningTreeGroup = ieee8021SpanningTreeGroup.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeGroup.setDescription('Bridge level Spanning Tree data for this device.')
ieee8021SpanningTreeRstpGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 3, 2, 2, 2)).setObjects(("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeRstpTxHoldCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021SpanningTreeRstpGroup = ieee8021SpanningTreeRstpGroup.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpGroup.setDescription('Bridge level Rstp data for this device.')
ieee8021SpanningTreePortGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 3, 2, 2, 3)).setObjects(("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreePortPriority"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreePortState"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreePortEnabled"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreePortPathCost"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreePortDesignatedRoot"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreePortDesignatedCost"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreePortDesignatedBridge"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreePortDesignatedPort"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreePortForwardTransitions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021SpanningTreePortGroup = ieee8021SpanningTreePortGroup.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreePortGroup.setDescription('Spanning Tree data for each port on this device.')
ieee8021SpanningTreeRstpPortGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 3, 2, 2, 4)).setObjects(("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeRstpPortProtocolMigration"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeRstpPortAdminEdgePort"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeRstpPortOperEdgePort"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeRstpPortAdminPathCost"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021SpanningTreeRstpPortGroup = ieee8021SpanningTreeRstpPortGroup.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpPortGroup.setDescription('Rstp data for each port on this device.')
ieee8021SpanningTreeRstpFragileGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 3, 2, 2, 6)).setObjects(("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeRstpPortAutoEdgePort"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeRstpPortAutoIsolatePort"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeRstpPortIsolatePort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021SpanningTreeRstpFragileGroup = ieee8021SpanningTreeRstpFragileGroup.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpFragileGroup.setDescription('Rstp fragile Bridge data for each port on this device.')
ieee8021SpanningTreeNotificationGroup = NotificationGroup((1, 3, 111, 2, 802, 1, 1, 3, 2, 2, 5)).setObjects(("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeNewRoot"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeTopologyChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021SpanningTreeNotificationGroup = ieee8021SpanningTreeNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeNotificationGroup.setDescription('Group of notifications.')
ieee8021SpanningTreeCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 3, 2, 1, 1)).setObjects(("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeGroup"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreePortGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021SpanningTreeCompliance = ieee8021SpanningTreeCompliance.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeCompliance.setDescription('The compliance statement for devices supporting the Spanning Tree Protocol.')
ieee8021SpanningTreeRstpCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 3, 2, 1, 2)).setObjects(("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeGroup"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeRstpGroup"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreePortGroup"), ("IEEE8021-SPANNING-TREE-MIB", "ieee8021SpanningTreeRstpPortGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021SpanningTreeRstpCompliance = ieee8021SpanningTreeRstpCompliance.setStatus('current')
if mibBuilder.loadTexts: ieee8021SpanningTreeRstpCompliance.setDescription('The compliance statement for devices supporting RSTP.')
mibBuilder.exportSymbols("IEEE8021-SPANNING-TREE-MIB", PYSNMP_MODULE_ID=ieee8021SpanningTreeMib, ieee8021SpanningTreeRootCost=ieee8021SpanningTreeRootCost, ieee8021SpanningTreeTopChanges=ieee8021SpanningTreeTopChanges, ieee8021SpanningTreeRstpTxHoldCount=ieee8021SpanningTreeRstpTxHoldCount, ieee8021SpanningTreeNotificationGroup=ieee8021SpanningTreeNotificationGroup, ieee8021SpanningTreeDesignatedRoot=ieee8021SpanningTreeDesignatedRoot, ieee8021SpanningTreeRstpPortAutoIsolatePort=ieee8021SpanningTreeRstpPortAutoIsolatePort, ieee8021SpanningTreeGroup=ieee8021SpanningTreeGroup, ieee8021SpanningTreeCompliance=ieee8021SpanningTreeCompliance, ieee8021SpanningTreeRootPort=ieee8021SpanningTreeRootPort, ieee8021SpanningTreeRstpPortGroup=ieee8021SpanningTreeRstpPortGroup, ieee8021SpanningTreeConformance=ieee8021SpanningTreeConformance, ieee8021SpanningTreeRstpPortOperEdgePort=ieee8021SpanningTreeRstpPortOperEdgePort, ieee8021SpanningTreeHoldTime=ieee8021SpanningTreeHoldTime, ieee8021SpanningTreeCompliances=ieee8021SpanningTreeCompliances, ieee8021SpanningTreeProtocolSpecification=ieee8021SpanningTreeProtocolSpecification, ieee8021SpanningTreeComponentId=ieee8021SpanningTreeComponentId, ieee8021SpanningTreeHelloTime=ieee8021SpanningTreeHelloTime, ieee8021SpanningTreePortComponentId=ieee8021SpanningTreePortComponentId, ieee8021SpanningTreePriority=ieee8021SpanningTreePriority, ieee8021SpanningTreePortExtensionTable=ieee8021SpanningTreePortExtensionTable, ieee8021SpanningTreeRstpGroup=ieee8021SpanningTreeRstpGroup, ieee8021SpanningTreeBridgeMaxAge=ieee8021SpanningTreeBridgeMaxAge, ieee8021SpanningTreeMaxAge=ieee8021SpanningTreeMaxAge, ieee8021SpanningTreeRstpPortAdminPathCost=ieee8021SpanningTreeRstpPortAdminPathCost, ieee8021SpanningTreePortEntry=ieee8021SpanningTreePortEntry, ieee8021SpanningTreeRstpPortAdminEdgePort=ieee8021SpanningTreeRstpPortAdminEdgePort, ieee8021SpanningTreePortDesignatedCost=ieee8021SpanningTreePortDesignatedCost, ieee8021SpanningTreeObjects=ieee8021SpanningTreeObjects, ieee8021SpanningTreePortPathCost=ieee8021SpanningTreePortPathCost, ieee8021SpanningTreePortExtensionEntry=ieee8021SpanningTreePortExtensionEntry, ieee8021SpanningTreePortDesignatedRoot=ieee8021SpanningTreePortDesignatedRoot, ieee8021SpanningTreePortPriority=ieee8021SpanningTreePortPriority, ieee8021SpanningTreePortForwardTransitions=ieee8021SpanningTreePortForwardTransitions, ieee8021SpanningTreeForwardDelay=ieee8021SpanningTreeForwardDelay, ieee8021SpanningTreeBridgeHelloTime=ieee8021SpanningTreeBridgeHelloTime, ieee8021SpanningTreeNewRoot=ieee8021SpanningTreeNewRoot, ieee8021SpanningTreeTopologyChange=ieee8021SpanningTreeTopologyChange, ieee8021SpanningTreeRstpCompliance=ieee8021SpanningTreeRstpCompliance, ieee8021SpanningTreePortDesignatedPort=ieee8021SpanningTreePortDesignatedPort, ieee8021SpanningTreeBridgeForwardDelay=ieee8021SpanningTreeBridgeForwardDelay, ieee8021SpanningTreeVersion=ieee8021SpanningTreeVersion, ieee8021SpanningTreeNotifications=ieee8021SpanningTreeNotifications, ieee8021SpanningTreeRstpPortIsolatePort=ieee8021SpanningTreeRstpPortIsolatePort, ieee8021SpanningTreePortState=ieee8021SpanningTreePortState, ieee8021SpanningTreeGroups=ieee8021SpanningTreeGroups, ieee8021SpanningTreeEntry=ieee8021SpanningTreeEntry, ieee8021SpanningTreePortGroup=ieee8021SpanningTreePortGroup, ieee8021SpanningTreeTimeSinceTopologyChange=ieee8021SpanningTreeTimeSinceTopologyChange, ieee8021SpanningTreeRstpPortProtocolMigration=ieee8021SpanningTreeRstpPortProtocolMigration, ieee8021SpanningTreeRstpPortAutoEdgePort=ieee8021SpanningTreeRstpPortAutoEdgePort, ieee8021SpanningTreeMib=ieee8021SpanningTreeMib, ieee8021SpanningTreePort=ieee8021SpanningTreePort, ieee8021SpanningTreePortEnabled=ieee8021SpanningTreePortEnabled, ieee8021SpanningTreePortDesignatedBridge=ieee8021SpanningTreePortDesignatedBridge, ieee8021SpanningTreeTable=ieee8021SpanningTreeTable, ieee8021SpanningTreePortTable=ieee8021SpanningTreePortTable, ieee8021SpanningTreeRstpFragileGroup=ieee8021SpanningTreeRstpFragileGroup)
