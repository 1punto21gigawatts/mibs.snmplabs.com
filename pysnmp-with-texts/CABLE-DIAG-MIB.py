#
# PySNMP MIB module CABLE-DIAG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CABLE-DIAG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:44:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, IpAddress, Unsigned32, ObjectIdentity, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, NotificationType, MibIdentifier, Gauge32, TimeTicks, iso, Integer32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "IpAddress", "Unsigned32", "ObjectIdentity", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "NotificationType", "MibIdentifier", "Gauge32", "TimeTicks", "iso", "Integer32", "Bits")
DisplayString, RowStatus, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TruthValue")
swCableDiagMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 58))
if mibBuilder.loadTexts: swCableDiagMIB.setLastUpdated('0808110000Z')
if mibBuilder.loadTexts: swCableDiagMIB.setOrganization('D-Link, Inc.')
if mibBuilder.loadTexts: swCableDiagMIB.setContactInfo('D-Link Customer Service Postal: No.20, Park Ave,II, Science-based Industrial Park, Hsinchu, Taiwan, R.O.C. Tel: 886-3-577-9966 Email:')
if mibBuilder.loadTexts: swCableDiagMIB.setDescription('The MIB module for determining the status of the cables attached to the device')
swCableDiagCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 58, 1))
swEtherCableDiagTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1), )
if mibBuilder.loadTexts: swEtherCableDiagTable.setStatus('current')
if mibBuilder.loadTexts: swEtherCableDiagTable.setDescription('A table that contains the cable situation for each port.')
swEtherCableDiagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1), ).setIndexNames((0, "CABLE-DIAG-MIB", "swEtherCableDiagPortIndex"))
if mibBuilder.loadTexts: swEtherCableDiagEntry.setStatus('current')
if mibBuilder.loadTexts: swEtherCableDiagEntry.setDescription('A list of cable situations for each port on the device.')
swEtherCableDiagPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPortIndex.setStatus('current')
if mibBuilder.loadTexts: swEtherCableDiagPortIndex.setDescription("This object indicates the module's port number.(1..Max port number in the module)")
swEtherCableDiagPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("fastEthernet", 0), ("gigaEthernet", 1), ("other", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPortType.setStatus('current')
if mibBuilder.loadTexts: swEtherCableDiagPortType.setDescription('Indicates the supported port data rate classification.')
swEtherCableDiagLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("link-down", 0), ("link-up", 1), ("other", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagLinkStatus.setStatus('current')
if mibBuilder.loadTexts: swEtherCableDiagLinkStatus.setDescription('This object indicates the link status.')
swEtherCableDiagPair1Status = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 0), ("open", 1), ("short", 2), ("open-short", 3), ("crosstalk", 4), ("unknown", 5), ("count", 6), ("no-cable", 7), ("other", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPair1Status.setStatus('current')
if mibBuilder.loadTexts: swEtherCableDiagPair1Status.setDescription('This object indicates the status of pair 1 of the cable.')
swEtherCableDiagPair2Status = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 0), ("open", 1), ("short", 2), ("open-short", 3), ("crosstalk", 4), ("unknown", 5), ("count", 6), ("no-cable", 7), ("other", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPair2Status.setStatus('current')
if mibBuilder.loadTexts: swEtherCableDiagPair2Status.setDescription('This object indicates the status of pair 2 of the cable.')
swEtherCableDiagPair3Status = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 0), ("open", 1), ("short", 2), ("open-short", 3), ("crosstalk", 4), ("unknown", 5), ("count", 6), ("no-cable", 7), ("other", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPair3Status.setStatus('current')
if mibBuilder.loadTexts: swEtherCableDiagPair3Status.setDescription('This object indicates the status of pair 3 of the cable.')
swEtherCableDiagPair4Status = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 0), ("open", 1), ("short", 2), ("open-short", 3), ("crosstalk", 4), ("unknown", 5), ("count", 6), ("no-cable", 7), ("other", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPair4Status.setStatus('current')
if mibBuilder.loadTexts: swEtherCableDiagPair4Status.setDescription('This object indicates the status of pair 4 of the cable.')
swEtherCableDiagPair1Length = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPair1Length.setStatus('current')
if mibBuilder.loadTexts: swEtherCableDiagPair1Length.setDescription('This object indicates the approx. length or length to the failure of pair 1 of the cable. This value is in meter units.')
swEtherCableDiagPair2Length = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPair2Length.setStatus('current')
if mibBuilder.loadTexts: swEtherCableDiagPair2Length.setDescription('This object indicates the approx. length or length to the failure of pair 2 of the cable. This value is in meter units.')
swEtherCableDiagPair3Length = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPair3Length.setStatus('current')
if mibBuilder.loadTexts: swEtherCableDiagPair3Length.setDescription('This object indicates the approx. length or length to the failure of pair 3 of the cable. This value is in meter units.')
swEtherCableDiagPair4Length = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPair4Length.setStatus('current')
if mibBuilder.loadTexts: swEtherCableDiagPair4Length.setDescription('This object indicates the approx. length or length to the failure of pair 4 of the cable. This value is in meter units. ')
swEtherCableDiagAction = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("action", 1), ("processing", 2), ("other", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swEtherCableDiagAction.setStatus('current')
if mibBuilder.loadTexts: swEtherCableDiagAction.setDescription('Function to run the cable diagnostic on selected port.')
swEtherCableDiagStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("not-run", 1), ("processing", 2), ("last-test-ok", 3), ("last-test-failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagStatus.setStatus('current')
if mibBuilder.loadTexts: swEtherCableDiagStatus.setDescription('Indicates the status of cable diagnostics on the port. not-run - cable diagnostics has never been run for this port processing - cable diagnostics is currently running on the port last-test-ok - the last cable diagnostics done on the port was successful last-test-failed - the last cable diagnostics done on the port failed')
mibBuilder.exportSymbols("CABLE-DIAG-MIB", swEtherCableDiagPortType=swEtherCableDiagPortType, swEtherCableDiagStatus=swEtherCableDiagStatus, swCableDiagMIB=swCableDiagMIB, swCableDiagCtrl=swCableDiagCtrl, swEtherCableDiagPortIndex=swEtherCableDiagPortIndex, swEtherCableDiagPair1Status=swEtherCableDiagPair1Status, swEtherCableDiagPair3Status=swEtherCableDiagPair3Status, swEtherCableDiagPair2Length=swEtherCableDiagPair2Length, swEtherCableDiagPair3Length=swEtherCableDiagPair3Length, swEtherCableDiagPair1Length=swEtherCableDiagPair1Length, swEtherCableDiagAction=swEtherCableDiagAction, swEtherCableDiagPair2Status=swEtherCableDiagPair2Status, swEtherCableDiagLinkStatus=swEtherCableDiagLinkStatus, swEtherCableDiagPair4Status=swEtherCableDiagPair4Status, swEtherCableDiagEntry=swEtherCableDiagEntry, swEtherCableDiagTable=swEtherCableDiagTable, PYSNMP_MODULE_ID=swCableDiagMIB, swEtherCableDiagPair4Length=swEtherCableDiagPair4Length)
