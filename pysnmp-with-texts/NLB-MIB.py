#
# PySNMP MIB module NLB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NLB-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:21:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
PortList, VlanIndex = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList", "VlanIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Integer32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Gauge32, Bits, TimeTicks, Counter32, ObjectIdentity, MibIdentifier, iso, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Integer32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Gauge32", "Bits", "TimeTicks", "Counter32", "ObjectIdentity", "MibIdentifier", "iso", "IpAddress", "Unsigned32")
DisplayString, TextualConvention, MacAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "MacAddress", "RowStatus")
swNlbMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 77))
if mibBuilder.loadTexts: swNlbMIB.setLastUpdated('0902110000Z')
if mibBuilder.loadTexts: swNlbMIB.setOrganization('D-Link Corp.')
if mibBuilder.loadTexts: swNlbMIB.setContactInfo('http://support.dlink.com')
if mibBuilder.loadTexts: swNlbMIB.setDescription('The MIB module for managing network load balancing.')
swNlbMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 77, 3))
swNlbUnicastFdbTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 77, 3, 1), )
if mibBuilder.loadTexts: swNlbUnicastFdbTable.setStatus('current')
if mibBuilder.loadTexts: swNlbUnicastFdbTable.setDescription('A table containing filtering information for unicast MAC addresses for forwarding specific ports.')
swNlbUnicastFdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 77, 3, 1, 1), ).setIndexNames((0, "NLB-MIB", "swNlbUnicastFdbMacAddress"))
if mibBuilder.loadTexts: swNlbUnicastFdbEntry.setStatus('current')
if mibBuilder.loadTexts: swNlbUnicastFdbEntry.setDescription('A list of filtering information for unicast MAC addresses for forwarding specific ports.')
swNlbUnicastFdbMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 77, 3, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: swNlbUnicastFdbMacAddress.setStatus('current')
if mibBuilder.loadTexts: swNlbUnicastFdbMacAddress.setDescription("The destination MAC address in a frame to which this entry's filtering information applies.")
swNlbUnicastFdbEgressPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 77, 3, 1, 1, 2), PortList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swNlbUnicastFdbEgressPorts.setStatus('current')
if mibBuilder.loadTexts: swNlbUnicastFdbEgressPorts.setDescription('The set of ports for a specific MAC address must be forwarded.')
swNlbUnicastFdbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 77, 3, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swNlbUnicastFdbRowStatus.setStatus('current')
if mibBuilder.loadTexts: swNlbUnicastFdbRowStatus.setDescription('The status of this conceptual row. To create a row in this table, a manager must set this object to createAndGo (4). To delete a row in this table, a manager must set this object to destroy (6).')
swNlbMulticastFdbTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 77, 3, 2), )
if mibBuilder.loadTexts: swNlbMulticastFdbTable.setStatus('current')
if mibBuilder.loadTexts: swNlbMulticastFdbTable.setDescription('A table containing filtering information for multicast MAC addresses for forwarding specific ports.')
swNlbMulticastFdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 77, 3, 2, 1), ).setIndexNames((0, "NLB-MIB", "swNlbMulticastFdbVlanIndex"), (0, "NLB-MIB", "swNlbMulticastFdbMacAddress"))
if mibBuilder.loadTexts: swNlbMulticastFdbEntry.setStatus('current')
if mibBuilder.loadTexts: swNlbMulticastFdbEntry.setDescription('A list of filtering information for multicast MAC addresses for forwarding specific ports.')
swNlbMulticastFdbVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 77, 3, 2, 1, 1), VlanIndex())
if mibBuilder.loadTexts: swNlbMulticastFdbVlanIndex.setStatus('current')
if mibBuilder.loadTexts: swNlbMulticastFdbVlanIndex.setDescription('The VLAN-ID or other identifier referring to this VLAN.')
swNlbMulticastFdbMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 77, 3, 2, 1, 2), MacAddress())
if mibBuilder.loadTexts: swNlbMulticastFdbMacAddress.setStatus('current')
if mibBuilder.loadTexts: swNlbMulticastFdbMacAddress.setDescription("The destination MAC address in a frame to which this entry's filtering information applies.")
swNlbMulticastFdbEgressPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 77, 3, 2, 1, 3), PortList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swNlbMulticastFdbEgressPorts.setStatus('current')
if mibBuilder.loadTexts: swNlbMulticastFdbEgressPorts.setDescription('The set of ports for a specific MAC address must be forwarded.')
swNlbMulticastFdbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 77, 3, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swNlbMulticastFdbRowStatus.setStatus('current')
if mibBuilder.loadTexts: swNlbMulticastFdbRowStatus.setDescription('The status of this conceptual row. To create a row in this table, a manager must set this object to createAndGo (4). To delete a row in this table, a manager must set this object to destroy (6).')
mibBuilder.exportSymbols("NLB-MIB", swNlbMulticastFdbRowStatus=swNlbMulticastFdbRowStatus, swNlbUnicastFdbEntry=swNlbUnicastFdbEntry, swNlbMulticastFdbEgressPorts=swNlbMulticastFdbEgressPorts, swNlbUnicastFdbEgressPorts=swNlbUnicastFdbEgressPorts, swNlbMulticastFdbTable=swNlbMulticastFdbTable, swNlbMIB=swNlbMIB, PYSNMP_MODULE_ID=swNlbMIB, swNlbMulticastFdbEntry=swNlbMulticastFdbEntry, swNlbUnicastFdbRowStatus=swNlbUnicastFdbRowStatus, swNlbMulticastFdbMacAddress=swNlbMulticastFdbMacAddress, swNlbMulticastFdbVlanIndex=swNlbMulticastFdbVlanIndex, swNlbMgmt=swNlbMgmt, swNlbUnicastFdbMacAddress=swNlbUnicastFdbMacAddress, swNlbUnicastFdbTable=swNlbUnicastFdbTable)
