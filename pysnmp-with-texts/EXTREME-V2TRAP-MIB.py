#
# PySNMP MIB module EXTREME-V2TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EXTREME-BASE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:07:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
bgpPeerRemoteAddr, = mibBuilder.importSymbols("BGP4-MIB", "bgpPeerRemoteAddr")
extremeV2Traps, ClientAuthType = mibBuilder.importSymbols("EXTREME-BASE-MIB", "extremeV2Traps", "ClientAuthType")
extremeEapsMode, extremeEapsState, extremeEapsName, extremeEapsPrevState = mibBuilder.importSymbols("EXTREME-EAPS-MIB", "extremeEapsMode", "extremeEapsState", "extremeEapsName", "extremeEapsPrevState")
extremeEsrpGroup, extremeEsrpState = mibBuilder.importSymbols("EXTREME-ESRP-MIB", "extremeEsrpGroup", "extremeEsrpState")
extremeNPModuleProcessorState, = mibBuilder.importSymbols("EXTREME-NP-MIB", "extremeNPModuleProcessorState")
extremePethSlotPSUActive, extremePethSlotMainPseIndex = mibBuilder.importSymbols("EXTREME-POE-MIB", "extremePethSlotPSUActive", "extremePethSlotMainPseIndex")
extremeIQosProfileIndex, = mibBuilder.importSymbols("EXTREME-QOS-MIB", "extremeIQosProfileIndex")
extremeCpuTaskUtilPair, extremeHealthCheckMaxRetries, extremeHealthCheckErrorType, extremeCpuAggregateUtilization, extremeHealthCheckAction, extremeMsmFailoverCause, extremeMasterMSMSlot, extremeCpuUtilRisingThreshold, extremeSlotNumber = mibBuilder.importSymbols("EXTREME-SYSTEM-MIB", "extremeCpuTaskUtilPair", "extremeHealthCheckMaxRetries", "extremeHealthCheckErrorType", "extremeCpuAggregateUtilization", "extremeHealthCheckAction", "extremeMsmFailoverCause", "extremeMasterMSMSlot", "extremeCpuUtilRisingThreshold", "extremeSlotNumber")
extremeVlanIfIndex, extremeVlanIfDescr = mibBuilder.importSymbols("EXTREME-VLAN-MIB", "extremeVlanIfIndex", "extremeVlanIfDescr")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
sysUpTime, sysDescr = mibBuilder.importSymbols("SNMPv2-MIB", "sysUpTime", "sysDescr")
Counter64, IpAddress, Integer32, Gauge32, Counter32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, iso, ModuleIdentity, ObjectIdentity, TimeTicks, Bits, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "Integer32", "Gauge32", "Counter32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "iso", "ModuleIdentity", "ObjectIdentity", "TimeTicks", "Bits", "Unsigned32")
TimeStamp, MacAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "MacAddress", "DisplayString", "TextualConvention")
extremeCoreSCTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 1))
extremeCoreSCTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 1, 0))
extremeHealthCheckFailed = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 1, 0, 1)).setObjects(("SNMPv2-MIB", "sysDescr"), ("EXTREME-SYSTEM-MIB", "extremeSlotNumber"), ("EXTREME-SYSTEM-MIB", "extremeHealthCheckErrorType"), ("EXTREME-SYSTEM-MIB", "extremeHealthCheckAction"), ("EXTREME-SYSTEM-MIB", "extremeHealthCheckMaxRetries"))
if mibBuilder.loadTexts: extremeHealthCheckFailed.setStatus('current')
if mibBuilder.loadTexts: extremeHealthCheckFailed.setDescription('Cpu HealthCheck has failed.')
extremeCpuUtilizationRisingTrap = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 1, 0, 2)).setObjects(("EXTREME-SYSTEM-MIB", "extremeCpuTaskUtilPair"), ("EXTREME-SYSTEM-MIB", "extremeCpuAggregateUtilization"), ("EXTREME-SYSTEM-MIB", "extremeCpuUtilRisingThreshold"))
if mibBuilder.loadTexts: extremeCpuUtilizationRisingTrap.setStatus('current')
if mibBuilder.loadTexts: extremeCpuUtilizationRisingTrap.setDescription('CPU Utilizations Rising trap generated when extremeCpuUtilRisingThreshold is touched/crossed ')
extremeCpuUtilizationFallingTrap = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 1, 0, 3)).setObjects(("EXTREME-SYSTEM-MIB", "extremeCpuTaskUtilPair"), ("EXTREME-SYSTEM-MIB", "extremeCpuAggregateUtilization"), ("EXTREME-SYSTEM-MIB", "extremeCpuUtilRisingThreshold"))
if mibBuilder.loadTexts: extremeCpuUtilizationFallingTrap.setStatus('current')
if mibBuilder.loadTexts: extremeCpuUtilizationFallingTrap.setDescription('CPU Utilization Falling Trap is generated when the extremeCpuAggregateUtilization falls below 80% of the extremeCpuUtilRisingThreshold')
extremeProcessorStateChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 1, 0, 4)).setObjects(("SNMPv2-MIB", "sysDescr"), ("EXTREME-SYSTEM-MIB", "extremeSlotNumber"), ("EXTREME-NP-MIB", "extremeNPModuleProcessorState"))
if mibBuilder.loadTexts: extremeProcessorStateChangeTrap.setStatus('current')
if mibBuilder.loadTexts: extremeProcessorStateChangeTrap.setDescription('Failed processor on module has been detected.')
extremeMsmFailoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 1, 0, 5)).setObjects(("SNMPv2-MIB", "sysDescr"), ("EXTREME-SYSTEM-MIB", "extremeMasterMSMSlot"), ("EXTREME-SYSTEM-MIB", "extremeMsmFailoverCause"))
if mibBuilder.loadTexts: extremeMsmFailoverTrap.setStatus('current')
if mibBuilder.loadTexts: extremeMsmFailoverTrap.setDescription('MSM failover occurred.')
extremeEsrpTimedOutFailedOverMaster = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 1, 0, 6)).setObjects(("SNMPv2-MIB", "sysDescr"), ("EXTREME-VLAN-MIB", "extremeVlanIfIndex"), ("EXTREME-VLAN-MIB", "extremeVlanIfDescr"), ("EXTREME-ESRP-MIB", "extremeEsrpState"))
if mibBuilder.loadTexts: extremeEsrpTimedOutFailedOverMaster.setStatus('current')
if mibBuilder.loadTexts: extremeEsrpTimedOutFailedOverMaster.setDescription('The master node performed a hitless MSM failover, but the master failed to resume normal operation within the reelect timeout. Thus, a new master (this switch) was elected.')
extremeRateLimitExceededTrap = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 1, 0, 7)).setObjects(("EXTREME-V2TRAP-MIB", "extremeRateLimitExceededTrapType"), ("EXTREME-V2TRAP-MIB", "extremeRateLimitExceededTrapIndicator"), ("IF-MIB", "ifIndex"), ("EXTREME-QOS-MIB", "extremeIQosProfileIndex"), ("EXTREME-V2TRAP-MIB", "extremeExceededByteCount"))
if mibBuilder.loadTexts: extremeRateLimitExceededTrap.setStatus('current')
if mibBuilder.loadTexts: extremeRateLimitExceededTrap.setDescription('Committed Information Rate exceeded.')
extremeRateLimitExceededTrapType = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 1, 0, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("exceededCIR", 1), ("droppedBytes", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeRateLimitExceededTrapType.setStatus('current')
if mibBuilder.loadTexts: extremeRateLimitExceededTrapType.setDescription('The trap condition being reported.')
extremeRateLimitExceededTrapIndicator = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 1, 0, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("set", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeRateLimitExceededTrapIndicator.setStatus('current')
if mibBuilder.loadTexts: extremeRateLimitExceededTrapIndicator.setDescription('The trap condition being reported.')
extremeExceededByteCount = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 1, 0, 7, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeExceededByteCount.setStatus('current')
if mibBuilder.loadTexts: extremeExceededByteCount.setDescription('The number of bytes that exceeded the rate.')
extremeBgpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 2))
extremeBgpTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 2, 0))
extremeBgpPrefixReachedThreshold = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 2, 0, 1)).setObjects(("BGP4-MIB", "bgpPeerRemoteAddr"))
if mibBuilder.loadTexts: extremeBgpPrefixReachedThreshold.setStatus('current')
if mibBuilder.loadTexts: extremeBgpPrefixReachedThreshold.setDescription('The extremeBgpPrefixReachedThreshold notification is generated when the number of prefixes received over this peer session reaches the threshold limit.')
extremeBgpPrefixMaxExceeded = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 2, 0, 2)).setObjects(("BGP4-MIB", "bgpPeerRemoteAddr"))
if mibBuilder.loadTexts: extremeBgpPrefixMaxExceeded.setStatus('current')
if mibBuilder.loadTexts: extremeBgpPrefixMaxExceeded.setDescription('The extremeBgpPrefixMaxExceeded notification is generated when the number of prefixes received over this peer session reaches the maximum configured limit.')
extremeSecurityTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 3))
extremeSecurityTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 3, 0))
extremeMacLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 3, 0, 1)).setObjects(("EXTREME-V2TRAP-MIB", "extremeMacSecurityVlanIfIndex"), ("EXTREME-V2TRAP-MIB", "extremeMacSecurityVlanDescr"), ("EXTREME-V2TRAP-MIB", "extremeMacSecurityMacAddress"), ("EXTREME-V2TRAP-MIB", "extremeMacSecurityPortIfIndex"), ("EXTREME-V2TRAP-MIB", "extremeMacSecurityVlanId"))
if mibBuilder.loadTexts: extremeMacLimitExceeded.setStatus('current')
if mibBuilder.loadTexts: extremeMacLimitExceeded.setDescription('This trap will be generated, for a port on which limit-learning has been configured, when a new MAC address exceeding the limit is learnt on that port.')
extremeUnauthorizedPortForMacDetected = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 3, 0, 2)).setObjects(("EXTREME-V2TRAP-MIB", "extremeMacSecurityVlanIfIndex"), ("EXTREME-V2TRAP-MIB", "extremeMacSecurityVlanDescr"), ("EXTREME-V2TRAP-MIB", "extremeMacSecurityVlanId"), ("EXTREME-V2TRAP-MIB", "extremeMacSecurityMacAddress"), ("EXTREME-V2TRAP-MIB", "extremeMacSecurityPortIfIndex"))
if mibBuilder.loadTexts: extremeUnauthorizedPortForMacDetected.setStatus('current')
if mibBuilder.loadTexts: extremeUnauthorizedPortForMacDetected.setDescription("This trap will be generated when a MAC Address is learnt on a port on which it is not not authorized. This will happen when the MAC address is statically configured as a 'secure mac' on some other port(s).")
extremeMacDetectedOnLockedPort = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 3, 0, 3)).setObjects(("EXTREME-V2TRAP-MIB", "extremeMacSecurityVlanIfIndex"), ("EXTREME-V2TRAP-MIB", "extremeMacSecurityVlanDescr"), ("EXTREME-V2TRAP-MIB", "extremeMacSecurityVlanId"), ("EXTREME-V2TRAP-MIB", "extremeMacSecurityMacAddress"), ("EXTREME-V2TRAP-MIB", "extremeMacSecurityPortIfIndex"))
if mibBuilder.loadTexts: extremeMacDetectedOnLockedPort.setStatus('current')
if mibBuilder.loadTexts: extremeMacDetectedOnLockedPort.setDescription('This trap will be generated on a port for which lock-learning has been configured, when a new MAC address is learnt on that port.')
extremeMacSecurityVlanIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 3, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeMacSecurityVlanIfIndex.setStatus('current')
if mibBuilder.loadTexts: extremeMacSecurityVlanIfIndex.setDescription('The ifIndex of the VLAN on which the MAC address was received.')
extremeMacSecurityVlanDescr = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeMacSecurityVlanDescr.setStatus('current')
if mibBuilder.loadTexts: extremeMacSecurityVlanDescr.setDescription('The description(name) of the VLAN on which the MAC address was received.')
extremeMacSecurityMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 3, 3), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeMacSecurityMacAddress.setStatus('current')
if mibBuilder.loadTexts: extremeMacSecurityMacAddress.setDescription('The received MAC address.')
extremeMacSecurityPortIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 3, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeMacSecurityPortIfIndex.setStatus('current')
if mibBuilder.loadTexts: extremeMacSecurityPortIfIndex.setDescription('The ifIndex of the port on which the MAC address was received.')
extremeMacSecurityVlanId = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 3, 5), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeMacSecurityVlanId.setStatus('current')
if mibBuilder.loadTexts: extremeMacSecurityVlanId.setDescription('The VLAN ID of the VLAN on which the MAC address was received.')
extremeNetloginUserLogin = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 3, 0, 4)).setObjects(("EXTREME-V2TRAP-MIB", "extremeNetloginStationMac"), ("EXTREME-V2TRAP-MIB", "extremeNetloginStationAddr"), ("EXTREME-V2TRAP-MIB", "extremeNetloginPortIfIndex"), ("EXTREME-V2TRAP-MIB", "extremeNetloginAuthType"), ("EXTREME-V2TRAP-MIB", "extremeNetloginSystemTime"), ("EXTREME-V2TRAP-MIB", "extremeNetloginUser"), ("EXTREME-V2TRAP-MIB", "extremeNetloginSrcVlan"), ("EXTREME-V2TRAP-MIB", "extremeNetloginDestVlan"), ("EXTREME-V2TRAP-MIB", "extremeNetloginSessionStatus"))
if mibBuilder.loadTexts: extremeNetloginUserLogin.setStatus('current')
if mibBuilder.loadTexts: extremeNetloginUserLogin.setDescription('This trap will be generated when a netlogin supplicant passes authentication and logs in successfully into the network.')
extremeNetloginUserLogout = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 3, 0, 5)).setObjects(("EXTREME-V2TRAP-MIB", "extremeNetloginStationMac"), ("EXTREME-V2TRAP-MIB", "extremeNetloginStationAddr"), ("EXTREME-V2TRAP-MIB", "extremeNetloginPortIfIndex"), ("EXTREME-V2TRAP-MIB", "extremeNetloginAuthType"), ("EXTREME-V2TRAP-MIB", "extremeNetloginSystemTime"), ("EXTREME-V2TRAP-MIB", "extremeNetloginUser"), ("EXTREME-V2TRAP-MIB", "extremeNetloginSrcVlan"), ("EXTREME-V2TRAP-MIB", "extremeNetloginDestVlan"), ("EXTREME-V2TRAP-MIB", "extremeNetloginSessionStatus"))
if mibBuilder.loadTexts: extremeNetloginUserLogout.setStatus('current')
if mibBuilder.loadTexts: extremeNetloginUserLogout.setDescription('This trap will be generated when a netlogin supplicant logs out. This trap is meant to notify logout event only for already authenticated and logged in supplicant. ')
extremeNetloginAuthFailure = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 3, 0, 6)).setObjects(("EXTREME-V2TRAP-MIB", "extremeNetloginStationMac"), ("EXTREME-V2TRAP-MIB", "extremeNetloginStationAddr"), ("EXTREME-V2TRAP-MIB", "extremeNetloginPortIfIndex"), ("EXTREME-V2TRAP-MIB", "extremeNetloginAuthType"), ("EXTREME-V2TRAP-MIB", "extremeNetloginSystemTime"), ("EXTREME-V2TRAP-MIB", "extremeNetloginUser"), ("EXTREME-V2TRAP-MIB", "extremeNetloginSrcVlan"), ("EXTREME-V2TRAP-MIB", "extremeNetloginDestVlan"), ("EXTREME-V2TRAP-MIB", "extremeNetloginSessionStatus"))
if mibBuilder.loadTexts: extremeNetloginAuthFailure.setStatus('current')
if mibBuilder.loadTexts: extremeNetloginAuthFailure.setDescription('This trap will be generated upon authentication failure for a netlogin supplicant')
extremeNetloginStationMac = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 3, 6), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeNetloginStationMac.setStatus('current')
if mibBuilder.loadTexts: extremeNetloginStationMac.setDescription('MAC address of netlogin supplicant')
extremeNetloginStationAddr = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 3, 7), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeNetloginStationAddr.setStatus('current')
if mibBuilder.loadTexts: extremeNetloginStationAddr.setDescription('MAC address of netlogin supplicant')
extremeNetloginPortIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 3, 8), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeNetloginPortIfIndex.setStatus('current')
if mibBuilder.loadTexts: extremeNetloginPortIfIndex.setDescription('IfIndex of authenticator port to which the netlogin supplicant is connected')
extremeNetloginAuthType = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 3, 9), ClientAuthType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeNetloginAuthType.setStatus('current')
if mibBuilder.loadTexts: extremeNetloginAuthType.setDescription('IF supplicant is authenticated using remote authentication server as RADIUS or locally using authenticator local user database')
extremeNetloginSystemTime = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 3, 10), TimeStamp()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeNetloginSystemTime.setStatus('current')
if mibBuilder.loadTexts: extremeNetloginSystemTime.setDescription('The time when a netlogin event occurs and is meaningful for accounting purposes.')
extremeNetloginUser = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 3, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeNetloginUser.setStatus('current')
if mibBuilder.loadTexts: extremeNetloginUser.setDescription("Information containing type of session as NETLOGIN or DOT1X concatenated with userName i,e '[NETLOGIN | DOT1X]:<username>' ")
extremeNetloginSrcVlan = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 3, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeNetloginSrcVlan.setStatus('current')
if mibBuilder.loadTexts: extremeNetloginSrcVlan.setDescription('Upon successful login this vlan will represent the one in which user resides before authentication while upon logout this vlan will be the one in which user resides before logout. ')
extremeNetloginDestVlan = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 3, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeNetloginDestVlan.setStatus('current')
if mibBuilder.loadTexts: extremeNetloginDestVlan.setDescription('The description (name) of the VLAN in which user moves after successful login or logout.')
extremeNetloginSessionStatus = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 3, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("success", 1), ("sessionReset", 2), ("fDBAgingInitiatedLogout", 3), ("userInitiatedLogout", 4), ("sessionRefreshInitiatedLogout", 5), ("authenticationFailure", 6), ("remoteAuthenticationServerFailure", 7)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeNetloginSessionStatus.setStatus('current')
if mibBuilder.loadTexts: extremeNetloginSessionStatus.setDescription(' -success (1) Successful login -sessionReset (2) Administrator has initialized Authentication State. -fDBAgingInitiatedLogout (3) Logout initiated due to FDB aging of client MAC -userInitiatedLogout(4) Graceful logout attempt from user -sessionRefreshInitiatedLogout (5) (Valid for web-based mode only) Logout initiated by session-refresh mechanism. -authenticationFailure(6) Authentication Failure -remoteAuthenticationServerFailure (7) Remote Authentication server Failure. ')
extremeNMSTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 4))
extremeNMSTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 4, 0))
extremeNMSDeviceAddress = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 4, 1), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeNMSDeviceAddress.setStatus('current')
if mibBuilder.loadTexts: extremeNMSDeviceAddress.setDescription("The IP address of the device modified by Extreme's Network Management Application.")
extremeNMSInventoryChanged = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 4, 0, 1)).setObjects(("EXTREME-V2TRAP-MIB", "extremeNMSDeviceAddress"))
if mibBuilder.loadTexts: extremeNMSInventoryChanged.setStatus('current')
if mibBuilder.loadTexts: extremeNMSInventoryChanged.setDescription("This trap is sent by Extreme's Network Management Applications when a change in its inventory database occurs. This trap is not send by a router or switch.")
extremeNMSTopologyChanged = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 4, 0, 2))
if mibBuilder.loadTexts: extremeNMSTopologyChanged.setStatus('current')
if mibBuilder.loadTexts: extremeNMSTopologyChanged.setDescription("This trap is sent by Extreme's Network Management Applications when a change in its Topology database occurs. This trap is not send by a router or switch.")
extremeEapsTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 7))
extremeEapsTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 7, 0))
extremeEapsStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 7, 0, 1)).setObjects(("EXTREME-EAPS-MIB", "extremeEapsName"), ("EXTREME-EAPS-MIB", "extremeEapsMode"), ("EXTREME-EAPS-MIB", "extremeEapsPrevState"), ("EXTREME-EAPS-MIB", "extremeEapsState"))
if mibBuilder.loadTexts: extremeEapsStateChange.setStatus('current')
if mibBuilder.loadTexts: extremeEapsStateChange.setDescription('The extremeEapsStateChange notification is generated when the EAPS domain has a state change.')
extremeEapsFailTimerExpFlagSet = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 7, 0, 2)).setObjects(("EXTREME-EAPS-MIB", "extremeEapsName"), ("EXTREME-EAPS-MIB", "extremeEapsMode"), ("EXTREME-EAPS-MIB", "extremeEapsPrevState"), ("EXTREME-EAPS-MIB", "extremeEapsState"))
if mibBuilder.loadTexts: extremeEapsFailTimerExpFlagSet.setStatus('current')
if mibBuilder.loadTexts: extremeEapsFailTimerExpFlagSet.setDescription("The extremeEapsFailTimerExpFlagSet notification is generated when the EAPS domain's fail timer expires for the first time, while its state is not in Fail state.")
extremeEapsFailTimerExpFlagClear = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 7, 0, 3)).setObjects(("EXTREME-EAPS-MIB", "extremeEapsName"), ("EXTREME-EAPS-MIB", "extremeEapsMode"), ("EXTREME-EAPS-MIB", "extremeEapsPrevState"), ("EXTREME-EAPS-MIB", "extremeEapsState"))
if mibBuilder.loadTexts: extremeEapsFailTimerExpFlagClear.setStatus('current')
if mibBuilder.loadTexts: extremeEapsFailTimerExpFlagClear.setDescription("The extremeEapsFailTimerExpFlagClear notification is generated when the EAPS domain's Fail timer expired flag is cleared.")
extremeEapsLinkDownRingComplete = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 7, 0, 4)).setObjects(("EXTREME-EAPS-MIB", "extremeEapsName"), ("EXTREME-EAPS-MIB", "extremeEapsMode"), ("EXTREME-EAPS-MIB", "extremeEapsPrevState"), ("EXTREME-EAPS-MIB", "extremeEapsState"))
if mibBuilder.loadTexts: extremeEapsLinkDownRingComplete.setStatus('current')
if mibBuilder.loadTexts: extremeEapsLinkDownRingComplete.setDescription('If a Transit is in Link-Down state, and it receives a Health-Check-Pdu from the Master indicating the ring is Complete, it means there is some problem with the Transit switch that has issued this trap message.')
extremePethTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 12))
extremePethNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 12, 0))
extremePethPSUStatusNotification = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 12, 0, 1)).setObjects(("EXTREME-POE-MIB", "extremePethSlotPSUActive"), ("EXTREME-POE-MIB", "extremePethSlotMainPseIndex"))
if mibBuilder.loadTexts: extremePethPSUStatusNotification.setStatus('current')
if mibBuilder.loadTexts: extremePethPSUStatusNotification.setDescription(' This Notification indicates a change in the PoE PSU for the slot.')
extremeElrpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 6))
extremeElrpTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 6, 0))
extremeElrpVlanLoopDetected = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 6, 0, 1)).setObjects(("EXTREME-VLAN-MIB", "extremeVlanIfDescr"))
if mibBuilder.loadTexts: extremeElrpVlanLoopDetected.setStatus('current')
if mibBuilder.loadTexts: extremeElrpVlanLoopDetected.setDescription(' The extremeElrpVlanLoopDetected notification is generated when the ELRP client detects a loop in the vlan.')
extremeEapsSharedLinkTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 9))
extremeEapsSharedLinkTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 9, 0))
extremeSegmentPort = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 9, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeSegmentPort.setStatus('current')
if mibBuilder.loadTexts: extremeSegmentPort.setDescription("The EAPS Shared Link's Segment Id.")
extremeSharedPort = MibScalar((1, 3, 6, 1, 4, 1, 1916, 4, 9, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeSharedPort.setStatus('current')
if mibBuilder.loadTexts: extremeSharedPort.setDescription("The EAPS Shared Link's Shared port.")
extremeEapsSegmentTimerExpFlagSet = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 9, 0, 1)).setObjects(("EXTREME-V2TRAP-MIB", "extremeSegmentPort"), ("EXTREME-V2TRAP-MIB", "extremeSharedPort"))
if mibBuilder.loadTexts: extremeEapsSegmentTimerExpFlagSet.setStatus('current')
if mibBuilder.loadTexts: extremeEapsSegmentTimerExpFlagSet.setDescription("The extremeEapsFailTimerExpFlagSet notification is generated when the EAPS domain's segment timer expires for the first time.")
extremeEapsSegmentTimerExpFlagClear = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 9, 0, 2)).setObjects(("EXTREME-V2TRAP-MIB", "extremeSegmentPort"), ("EXTREME-V2TRAP-MIB", "extremeSharedPort"))
if mibBuilder.loadTexts: extremeEapsSegmentTimerExpFlagClear.setStatus('current')
if mibBuilder.loadTexts: extremeEapsSegmentTimerExpFlagClear.setDescription("The extremeEapsSegmentTimerExpFlagClear notification is generated when the EAPS domain's Segment Fail timer expired flag is cleared.")
mibBuilder.exportSymbols("EXTREME-V2TRAP-MIB", extremeSegmentPort=extremeSegmentPort, extremeEsrpTimedOutFailedOverMaster=extremeEsrpTimedOutFailedOverMaster, extremeProcessorStateChangeTrap=extremeProcessorStateChangeTrap, extremeEapsTraps=extremeEapsTraps, extremeNMSDeviceAddress=extremeNMSDeviceAddress, extremeCpuUtilizationRisingTrap=extremeCpuUtilizationRisingTrap, extremeNetloginSystemTime=extremeNetloginSystemTime, extremeMacDetectedOnLockedPort=extremeMacDetectedOnLockedPort, extremeEapsSharedLinkTrapsPrefix=extremeEapsSharedLinkTrapsPrefix, extremeMacLimitExceeded=extremeMacLimitExceeded, extremeNMSInventoryChanged=extremeNMSInventoryChanged, extremeRateLimitExceededTrapType=extremeRateLimitExceededTrapType, extremeEapsFailTimerExpFlagSet=extremeEapsFailTimerExpFlagSet, extremeEapsFailTimerExpFlagClear=extremeEapsFailTimerExpFlagClear, extremeMacSecurityVlanId=extremeMacSecurityVlanId, extremeSecurityTraps=extremeSecurityTraps, extremeMsmFailoverTrap=extremeMsmFailoverTrap, extremeUnauthorizedPortForMacDetected=extremeUnauthorizedPortForMacDetected, extremeNetloginStationMac=extremeNetloginStationMac, extremeNMSTopologyChanged=extremeNMSTopologyChanged, extremeBgpPrefixReachedThreshold=extremeBgpPrefixReachedThreshold, extremeElrpVlanLoopDetected=extremeElrpVlanLoopDetected, extremeHealthCheckFailed=extremeHealthCheckFailed, extremeCpuUtilizationFallingTrap=extremeCpuUtilizationFallingTrap, extremePethPSUStatusNotification=extremePethPSUStatusNotification, extremeNetloginAuthType=extremeNetloginAuthType, extremeNetloginUser=extremeNetloginUser, extremeSecurityTrapsPrefix=extremeSecurityTrapsPrefix, extremeNetloginStationAddr=extremeNetloginStationAddr, extremeCoreSCTrapPrefix=extremeCoreSCTrapPrefix, extremeRateLimitExceededTrapIndicator=extremeRateLimitExceededTrapIndicator, extremeNetloginUserLogin=extremeNetloginUserLogin, extremeMacSecurityVlanIfIndex=extremeMacSecurityVlanIfIndex, extremeElrpTrapsPrefix=extremeElrpTrapsPrefix, extremeExceededByteCount=extremeExceededByteCount, extremeEapsTrapsPrefix=extremeEapsTrapsPrefix, extremeRateLimitExceededTrap=extremeRateLimitExceededTrap, extremeNetloginUserLogout=extremeNetloginUserLogout, extremeEapsLinkDownRingComplete=extremeEapsLinkDownRingComplete, extremePethTraps=extremePethTraps, extremeElrpTraps=extremeElrpTraps, extremeNMSTrapsPrefix=extremeNMSTrapsPrefix, extremeNetloginSessionStatus=extremeNetloginSessionStatus, extremePethNotificationPrefix=extremePethNotificationPrefix, extremeSharedPort=extremeSharedPort, extremeEapsSharedLinkTraps=extremeEapsSharedLinkTraps, extremeNetloginSrcVlan=extremeNetloginSrcVlan, extremeMacSecurityVlanDescr=extremeMacSecurityVlanDescr, extremeNetloginAuthFailure=extremeNetloginAuthFailure, extremeCoreSCTraps=extremeCoreSCTraps, extremeEapsSegmentTimerExpFlagSet=extremeEapsSegmentTimerExpFlagSet, extremeNetloginPortIfIndex=extremeNetloginPortIfIndex, extremeNetloginDestVlan=extremeNetloginDestVlan, extremeEapsSegmentTimerExpFlagClear=extremeEapsSegmentTimerExpFlagClear, extremeBgpPrefixMaxExceeded=extremeBgpPrefixMaxExceeded, extremeEapsStateChange=extremeEapsStateChange, extremeBgpTraps=extremeBgpTraps, extremeMacSecurityPortIfIndex=extremeMacSecurityPortIfIndex, extremeNMSTraps=extremeNMSTraps, extremeMacSecurityMacAddress=extremeMacSecurityMacAddress, extremeBgpTrapsPrefix=extremeBgpTrapsPrefix)
