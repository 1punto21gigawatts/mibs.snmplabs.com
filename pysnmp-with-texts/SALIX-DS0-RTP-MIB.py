#
# PySNMP MIB module SALIX-DS0-RTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SALIX-DS0-RTP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:00:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
platform1, = mibBuilder.importSymbols("SALIX-MIB", "platform1")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Integer32, ModuleIdentity, TimeTicks, NotificationType, Bits, Counter64, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ObjectIdentity, MibIdentifier, IpAddress, Gauge32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ModuleIdentity", "TimeTicks", "NotificationType", "Bits", "Counter64", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ObjectIdentity", "MibIdentifier", "IpAddress", "Gauge32", "Unsigned32")
RowStatus, TextualConvention, TimeStamp, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TimeStamp", "DisplayString")
salixDsx0RtpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2158, 5, 1, 3))
if mibBuilder.loadTexts: salixDsx0RtpMIB.setLastUpdated('9810130000Z')
if mibBuilder.loadTexts: salixDsx0RtpMIB.setOrganization('SALIX Technologies')
if mibBuilder.loadTexts: salixDsx0RtpMIB.setContactInfo('904 Wind River Lane Suite 101 Gaithersburg, MD 20878 (301)-417-0017')
if mibBuilder.loadTexts: salixDsx0RtpMIB.setDescription('The MIB describing Salix specific DS0-RTP connection objects')
salixDsx0RtpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 5, 1, 3, 1))
salixDsx0RtpMIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 5, 1, 3, 2))
salixDsx0RtpMIBCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 5, 1, 3, 3))
salixDsx0RtpMIBTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 5, 1, 3, 2, 0))
salixDsx0RtpConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 2158, 5, 1, 3, 1, 1), )
if mibBuilder.loadTexts: salixDsx0RtpConnectionTable.setStatus('current')
if mibBuilder.loadTexts: salixDsx0RtpConnectionTable.setDescription('A table describing the current DS0 to RTP connections. There should be one entry for each DS0-RTP connection in the system')
salixDsx0RtpConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2158, 5, 1, 3, 1, 1, 1), ).setIndexNames((0, "SALIX-DS0-RTP-MIB", "salixDsx0RtpConnectionInterface"), (0, "SALIX-DS0-RTP-MIB", "salixDsx0RtpConnectionSrcIpAddress"), (0, "SALIX-DS0-RTP-MIB", "salixDsx0RtpConnectionSrcPort"), (0, "SALIX-DS0-RTP-MIB", "salixDsx0RtpConnectionDestIpAddress"), (0, "SALIX-DS0-RTP-MIB", "salixDsx0RtpConnectionDestPort"))
if mibBuilder.loadTexts: salixDsx0RtpConnectionEntry.setStatus('current')
if mibBuilder.loadTexts: salixDsx0RtpConnectionEntry.setDescription('An entry in the ITX DS0-RTP Table. The entry provides information on the status and other attributes of the connection')
salixDsx0RtpConnectionInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 3, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: salixDsx0RtpConnectionInterface.setStatus('current')
if mibBuilder.loadTexts: salixDsx0RtpConnectionInterface.setDescription('The ifIndex that identifies the DS0 channel being connected to the RTP session')
salixDsx0RtpConnectionSrcIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 3, 1, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: salixDsx0RtpConnectionSrcIpAddress.setStatus('current')
if mibBuilder.loadTexts: salixDsx0RtpConnectionSrcIpAddress.setDescription('The Source IP Address for the RTP Session part of the DS0-RTP connection')
salixDsx0RtpConnectionSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 3, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: salixDsx0RtpConnectionSrcPort.setStatus('current')
if mibBuilder.loadTexts: salixDsx0RtpConnectionSrcPort.setDescription('The Source Port for the RTP Session part of the DS0-RTP connection')
salixDsx0RtpConnectionDestIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 3, 1, 1, 1, 4), IpAddress())
if mibBuilder.loadTexts: salixDsx0RtpConnectionDestIpAddress.setStatus('current')
if mibBuilder.loadTexts: salixDsx0RtpConnectionDestIpAddress.setDescription('The Destination IP Address for the RTP Session part of the DS0-RTP connection')
salixDsx0RtpConnectionDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 3, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: salixDsx0RtpConnectionDestPort.setStatus('current')
if mibBuilder.loadTexts: salixDsx0RtpConnectionDestPort.setDescription('The Destination Port for the RTP Session part of the DS0-RTP connection')
salixDsx0RtpConnectionDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 3, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rtp2dsx0", 1), ("dsx02rtp", 2), ("bidirectional", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixDsx0RtpConnectionDirection.setStatus('current')
if mibBuilder.loadTexts: salixDsx0RtpConnectionDirection.setDescription('This attribute describes the direction of traffic flow in a connection. rtp2dsx0 (1) - Traffic flows from the RTP session to the DS0 channel dsx02rtp (2) - Traffic flows from the DS0 channel to the RTP session bidirectional (3) - Traffic flows in both directions in the connection')
salixDsx0RtpConnectionOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 3, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixDsx0RtpConnectionOperStatus.setStatus('current')
if mibBuilder.loadTexts: salixDsx0RtpConnectionOperStatus.setDescription('This attribute indicates the operational state of the DS0-RTP connection. up (1) - The connection is up and active down (2) - The connection is down and inactive unknown (3) - The status of the connection is unknown')
salixDsx0RtpConnectionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 3, 1, 1, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: salixDsx0RtpConnectionRowStatus.setStatus('current')
if mibBuilder.loadTexts: salixDsx0RtpConnectionRowStatus.setDescription('The status of this entry in the salixDsx0RtpConnectTable. This object is used to delete a salixDsx0RtpConnectTable entry. To delete the connection, set this object to destory(6) Row status values: active(1) - set by the agent after this entry is created notInService(2) - not applicable notReady(3) - not applicable createAndGo(4) - not applicable createAndWait(5)- not applicable destroy(6) - set by the management entity to destroy entry')
salixDsx0RtpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 5, 1, 3, 3, 1))
salixDsx0RtpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 5, 1, 3, 3, 2))
salixDsx0RtpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2158, 5, 1, 3, 3, 1, 3)).setObjects(("SALIX-DS0-RTP-MIB", "salixDsx0RtpConnectionDirection"), ("SALIX-DS0-RTP-MIB", "salixDsx0RtpConnectionOperStatus"), ("SALIX-DS0-RTP-MIB", "salixDsx0RtpConnectionRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    salixDsx0RtpGroup = salixDsx0RtpGroup.setStatus('current')
if mibBuilder.loadTexts: salixDsx0RtpGroup.setDescription('Current Statistics for Dsx0Rtp Sessions')
salixDsx0RtpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2158, 5, 1, 3, 3, 2, 1)).setObjects(("SALIX-DS0-RTP-MIB", "salixDsx0RtpGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    salixDsx0RtpCompliance = salixDsx0RtpCompliance.setStatus('current')
if mibBuilder.loadTexts: salixDsx0RtpCompliance.setDescription('The basic implementation requirements for the SALIX-DS0-RTP-MIB.')
mibBuilder.exportSymbols("SALIX-DS0-RTP-MIB", salixDsx0RtpCompliances=salixDsx0RtpCompliances, salixDsx0RtpConnectionDirection=salixDsx0RtpConnectionDirection, salixDsx0RtpMIBTraps=salixDsx0RtpMIBTraps, salixDsx0RtpConnectionOperStatus=salixDsx0RtpConnectionOperStatus, salixDsx0RtpConnectionSrcIpAddress=salixDsx0RtpConnectionSrcIpAddress, salixDsx0RtpConnectionTable=salixDsx0RtpConnectionTable, salixDsx0RtpGroup=salixDsx0RtpGroup, salixDsx0RtpMIBObjects=salixDsx0RtpMIBObjects, salixDsx0RtpConnectionSrcPort=salixDsx0RtpConnectionSrcPort, salixDsx0RtpMIBTrapPrefix=salixDsx0RtpMIBTrapPrefix, salixDsx0RtpConnectionInterface=salixDsx0RtpConnectionInterface, salixDsx0RtpConnectionRowStatus=salixDsx0RtpConnectionRowStatus, salixDsx0RtpConnectionDestPort=salixDsx0RtpConnectionDestPort, PYSNMP_MODULE_ID=salixDsx0RtpMIB, salixDsx0RtpCompliance=salixDsx0RtpCompliance, salixDsx0RtpMIBCompliance=salixDsx0RtpMIBCompliance, salixDsx0RtpGroups=salixDsx0RtpGroups, salixDsx0RtpConnectionDestIpAddress=salixDsx0RtpConnectionDestIpAddress, salixDsx0RtpConnectionEntry=salixDsx0RtpConnectionEntry, salixDsx0RtpMIB=salixDsx0RtpMIB)
