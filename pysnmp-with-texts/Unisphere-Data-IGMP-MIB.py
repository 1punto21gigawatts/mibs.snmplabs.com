#
# PySNMP MIB module Unisphere-Data-IGMP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Unisphere-Data-IGMP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:31:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Bits, Counter32, ModuleIdentity, TimeTicks, NotificationType, Unsigned32, Gauge32, Integer32, IpAddress, iso, Counter64, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Bits", "Counter32", "ModuleIdentity", "TimeTicks", "NotificationType", "Unsigned32", "Gauge32", "Integer32", "IpAddress", "iso", "Counter64", "ObjectIdentity")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
usDataMibs, = mibBuilder.importSymbols("Unisphere-Data-MIBs", "usDataMibs")
usdIgmpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40))
usdIgmpMIB.setRevisions(('2000-09-26 18:50',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: usdIgmpMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: usdIgmpMIB.setLastUpdated('200009261850Z')
if mibBuilder.loadTexts: usdIgmpMIB.setOrganization('Unisphere Networks, Inc.')
if mibBuilder.loadTexts: usdIgmpMIB.setContactInfo(' Unisphere Networks, Inc. Postal: 10 Technology Park Drive Westford MA 01886 USA Tel: +1 978 589 5800 Email: mib@UnisphereNetworks.com')
if mibBuilder.loadTexts: usdIgmpMIB.setDescription('The IGMP MIB for Unisphere Networks, Inc. enterprise.')
class UsdIgmpProxyGroupState(TextualConvention, Integer32):
    description = 'IP multicast group state in respect to the host IGMP (IGMP proxy) behavior.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("usdIgmpProxyGroupUnknown", 0), ("usdIgmpProxyGroupIdleMember", 1), ("usdIgmpProxyGroupDelayingMember", 2))

class UsdIgmpProxyInterfaceState(TextualConvention, Integer32):
    description = 'IGMP proxy Interface state.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("usdIgmpProxyInterfaceUnknown", 0), ("usdIgmpProxyInterfaceStateV1RouterPresent", 1), ("usdIgmpProxyInterfaceStateNonV1RouterPresent", 2))

usdIgmpMIBObject = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1))
usdIgmpProtocol = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 1))
usdIgmpProxy = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2))
usdIgmpProxyInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 1), )
if mibBuilder.loadTexts: usdIgmpProxyInterfaceTable.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceTable.setDescription('The IGMP proxy interface table consists of interface on which the IGMP proxy is enabled.')
usdIgmpProxyInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 1, 1), ).setIndexNames((0, "Unisphere-Data-IGMP-MIB", "usdIgmpProxyInterfaceIfIndex"))
if mibBuilder.loadTexts: usdIgmpProxyInterfaceEntry.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceEntry.setDescription('An entry in the usdIgmpProxyInterfaceTable.')
usdIgmpProxyInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: usdIgmpProxyInterfaceIfIndex.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceIfIndex.setDescription('The ifIndex value of the interface for which the IGMP proxy is enabled.')
usdIgmpProxyInterfaceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIgmpProxyInterfaceAddress.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceAddress.setDescription('The IP address of the interface for which the IGMP proxy is enabled.')
usdIgmpProxyInterfaceMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIgmpProxyInterfaceMask.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceMask.setDescription('The IP subnet mask of the interface for which the IGMP proxy is enabled.')
usdIgmpProxyInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 1, 1, 4), UsdIgmpProxyInterfaceState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIgmpProxyInterfaceState.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceState.setDescription('When the IGMP proxy interface has v1 router present timeout running, it is in IgmpIntfStateV1RtPresent state. Otherwise, it is in IgmpIntfStateNonV1RtPresent states. While it is in IgmpIntfStateV1RtPresent, it only sends out version 1 group membership report(s). While it is in IgmpIntfStateNonV1RtPresent state, it sends out version 2 group membership report(s).')
usdIgmpProxyInterfaceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIgmpProxyInterfaceStatus.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceStatus.setDescription('The state of the IGMP proxy interface. This object follows the RowStatus behavior. The destruction of the the row deletes the IGMP proxy inteface.')
usdIgmpProxyInterfaceVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIgmpProxyInterfaceVersion.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceVersion.setDescription('The version of IGMP that this IGMP proxy interface is running.')
usdIgmpProxyInterfaceV1RoutePresentTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000)).clone(400)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIgmpProxyInterfaceV1RoutePresentTimeout.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceV1RoutePresentTimeout.setDescription('The IGMP version 1 router present timeout is the time between IGMP proxy receives a version 1 query and the time it assumes that there is no more IGMP version 1 router IGMP running. While before the V1 router present timeout expires, the IGMP proxy only sends out version 1 group membership report. When it expires, it sends out version 2 group membership report.')
usdIgmpProxyInterfaceUnsolicitedReportInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIgmpProxyInterfaceUnsolicitedReportInterval.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceUnsolicitedReportInterval.setDescription('The unsolicited report interval specifies the time between the two initial group membership reports that the IGMP proxy sends.')
usdIgmpProxyInterfaceTotalGroupCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIgmpProxyInterfaceTotalGroupCount.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceTotalGroupCount.setDescription('Total number of multicast groups for this upstream interface (interface running IGMP proxy).')
usdIgmpProxyInterfaceWrongVersionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIgmpProxyInterfaceWrongVersionCount.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceWrongVersionCount.setDescription('Total number of wrong version of IGMP packets received on this interface.')
usdIgmpProxyInterfaceV1QueryReceiveCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIgmpProxyInterfaceV1QueryReceiveCount.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceV1QueryReceiveCount.setDescription('Total number of version 1 IGMP queries received on this interface')
usdIgmpProxyInterfaceV2QueryReceiveCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIgmpProxyInterfaceV2QueryReceiveCount.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceV2QueryReceiveCount.setDescription('Total number of version 2 IGMP queries received on this interface.')
usdIgmpProxyInterfaceV1ReportReceiveCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIgmpProxyInterfaceV1ReportReceiveCount.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceV1ReportReceiveCount.setDescription('Total number of version 1 group membership reports received on this interface.')
usdIgmpProxyInterfaceV2ReportReceiveCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIgmpProxyInterfaceV2ReportReceiveCount.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceV2ReportReceiveCount.setDescription('Total number of version 2 group membership reports received on this interface.')
usdIgmpProxyInterfaceV1JoinReportCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIgmpProxyInterfaceV1JoinReportCount.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceV1JoinReportCount.setDescription('Total number of version 1 group membership reports sent on this interface.')
usdIgmpProxyInterfaceV2JoinReportCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIgmpProxyInterfaceV2JoinReportCount.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceV2JoinReportCount.setDescription('Total number of version 2 group membership reports sent on this interface.')
usdIgmpProxyInterfaceLeaveReportCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIgmpProxyInterfaceLeaveReportCount.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceLeaveReportCount.setDescription('Total number of group leave reports sent on this interface.')
usdIgmpProxyCacheTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 2), )
if mibBuilder.loadTexts: usdIgmpProxyCacheTable.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyCacheTable.setDescription('The IP multicast group table. The table is a union of multicast member groups from all its downstream interfaces and for which the IGMP proxy send group membership report.')
usdIgmpProxyCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 2, 1), ).setIndexNames((0, "Unisphere-Data-IGMP-MIB", "usdIgmpProxyIfIndex"), (0, "Unisphere-Data-IGMP-MIB", "usdIgmpProxyAddress"))
if mibBuilder.loadTexts: usdIgmpProxyCacheEntry.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyCacheEntry.setDescription('An entry in the usdIgmpProxyCacheTable.')
usdIgmpProxyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: usdIgmpProxyIfIndex.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyIfIndex.setDescription('The ifIndex value of the interface for which IGMP proxy is enabled.')
usdIgmpProxyAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 2, 1, 2), IpAddress())
if mibBuilder.loadTexts: usdIgmpProxyAddress.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyAddress.setDescription('The IP multicast group address that the IGMP proxy sends group membership for.')
usdIgmpProxyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 1, 2, 2, 1, 3), UsdIgmpProxyGroupState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIgmpProxyStatus.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyStatus.setDescription('The state of this entry. When the IGMP proxy has a delay time running for this multicast group, the state of this enry is in the usdIgmpDelayingMember state. When the delay time expires, the IGMP proxy sends an unsolicited report and the state of this group enters usdIgmpDelayMember state.')
usdIgmpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 4))
usdIgmpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 4, 1))
usdIgmpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 4, 2))
usdIgmpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 4, 1, 1)).setObjects(("Unisphere-Data-IGMP-MIB", "usdIgmpProxyInterfaceGroup"), ("Unisphere-Data-IGMP-MIB", "usdIgmpProxyCacheGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdIgmpCompliance = usdIgmpCompliance.setStatus('current')
if mibBuilder.loadTexts: usdIgmpCompliance.setDescription('The compliance statement for entities that implement the Unisphere IGMP MIB.')
usdIgmpProxyInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 4, 2, 1)).setObjects(("Unisphere-Data-IGMP-MIB", "usdIgmpProxyInterfaceAddress"), ("Unisphere-Data-IGMP-MIB", "usdIgmpProxyInterfaceMask"), ("Unisphere-Data-IGMP-MIB", "usdIgmpProxyInterfaceState"), ("Unisphere-Data-IGMP-MIB", "usdIgmpProxyInterfaceStatus"), ("Unisphere-Data-IGMP-MIB", "usdIgmpProxyInterfaceVersion"), ("Unisphere-Data-IGMP-MIB", "usdIgmpProxyInterfaceV1RoutePresentTimeout"), ("Unisphere-Data-IGMP-MIB", "usdIgmpProxyInterfaceUnsolicitedReportInterval"), ("Unisphere-Data-IGMP-MIB", "usdIgmpProxyInterfaceTotalGroupCount"), ("Unisphere-Data-IGMP-MIB", "usdIgmpProxyInterfaceWrongVersionCount"), ("Unisphere-Data-IGMP-MIB", "usdIgmpProxyInterfaceV1QueryReceiveCount"), ("Unisphere-Data-IGMP-MIB", "usdIgmpProxyInterfaceV2QueryReceiveCount"), ("Unisphere-Data-IGMP-MIB", "usdIgmpProxyInterfaceV1ReportReceiveCount"), ("Unisphere-Data-IGMP-MIB", "usdIgmpProxyInterfaceV2ReportReceiveCount"), ("Unisphere-Data-IGMP-MIB", "usdIgmpProxyInterfaceV1JoinReportCount"), ("Unisphere-Data-IGMP-MIB", "usdIgmpProxyInterfaceV2JoinReportCount"), ("Unisphere-Data-IGMP-MIB", "usdIgmpProxyInterfaceLeaveReportCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdIgmpProxyInterfaceGroup = usdIgmpProxyInterfaceGroup.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyInterfaceGroup.setDescription('A collection of objects providing management of IGMP proxy interfaces in a Unisphere product.')
usdIgmpProxyCacheGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 40, 4, 2, 2)).setObjects(("Unisphere-Data-IGMP-MIB", "usdIgmpProxyStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdIgmpProxyCacheGroup = usdIgmpProxyCacheGroup.setStatus('current')
if mibBuilder.loadTexts: usdIgmpProxyCacheGroup.setDescription('An object providing management of IGMP proxy caches in a Unisphere product.')
mibBuilder.exportSymbols("Unisphere-Data-IGMP-MIB", usdIgmpProxyInterfaceTotalGroupCount=usdIgmpProxyInterfaceTotalGroupCount, UsdIgmpProxyGroupState=UsdIgmpProxyGroupState, usdIgmpProxyInterfaceMask=usdIgmpProxyInterfaceMask, PYSNMP_MODULE_ID=usdIgmpMIB, usdIgmpProxyInterfaceV2ReportReceiveCount=usdIgmpProxyInterfaceV2ReportReceiveCount, usdIgmpProxyInterfaceVersion=usdIgmpProxyInterfaceVersion, usdIgmpMIB=usdIgmpMIB, usdIgmpProxyIfIndex=usdIgmpProxyIfIndex, usdIgmpCompliances=usdIgmpCompliances, UsdIgmpProxyInterfaceState=UsdIgmpProxyInterfaceState, usdIgmpProxyInterfaceV2JoinReportCount=usdIgmpProxyInterfaceV2JoinReportCount, usdIgmpProxyInterfaceAddress=usdIgmpProxyInterfaceAddress, usdIgmpProxyInterfaceEntry=usdIgmpProxyInterfaceEntry, usdIgmpProxyCacheTable=usdIgmpProxyCacheTable, usdIgmpConformance=usdIgmpConformance, usdIgmpProxyInterfaceGroup=usdIgmpProxyInterfaceGroup, usdIgmpProxyInterfaceIfIndex=usdIgmpProxyInterfaceIfIndex, usdIgmpProxyInterfaceV1RoutePresentTimeout=usdIgmpProxyInterfaceV1RoutePresentTimeout, usdIgmpProxyCacheGroup=usdIgmpProxyCacheGroup, usdIgmpProxyInterfaceV1ReportReceiveCount=usdIgmpProxyInterfaceV1ReportReceiveCount, usdIgmpProxyStatus=usdIgmpProxyStatus, usdIgmpProxy=usdIgmpProxy, usdIgmpProxyInterfaceV2QueryReceiveCount=usdIgmpProxyInterfaceV2QueryReceiveCount, usdIgmpProtocol=usdIgmpProtocol, usdIgmpProxyInterfaceState=usdIgmpProxyInterfaceState, usdIgmpProxyInterfaceUnsolicitedReportInterval=usdIgmpProxyInterfaceUnsolicitedReportInterval, usdIgmpProxyInterfaceWrongVersionCount=usdIgmpProxyInterfaceWrongVersionCount, usdIgmpCompliance=usdIgmpCompliance, usdIgmpProxyCacheEntry=usdIgmpProxyCacheEntry, usdIgmpProxyInterfaceTable=usdIgmpProxyInterfaceTable, usdIgmpGroups=usdIgmpGroups, usdIgmpProxyAddress=usdIgmpProxyAddress, usdIgmpProxyInterfaceV1QueryReceiveCount=usdIgmpProxyInterfaceV1QueryReceiveCount, usdIgmpMIBObject=usdIgmpMIBObject, usdIgmpProxyInterfaceV1JoinReportCount=usdIgmpProxyInterfaceV1JoinReportCount, usdIgmpProxyInterfaceLeaveReportCount=usdIgmpProxyInterfaceLeaveReportCount, usdIgmpProxyInterfaceStatus=usdIgmpProxyInterfaceStatus)
