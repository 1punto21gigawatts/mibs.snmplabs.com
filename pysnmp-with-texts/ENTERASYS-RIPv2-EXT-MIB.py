#
# PySNMP MIB module ENTERASYS-RIPv2-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-RIPv2-EXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:04:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
IpAddress, NotificationType, ModuleIdentity, Counter64, Gauge32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, Unsigned32, iso, ObjectIdentity, MibIdentifier, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "NotificationType", "ModuleIdentity", "Counter64", "Gauge32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "Unsigned32", "iso", "ObjectIdentity", "MibIdentifier", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
etsysRip2ExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 66))
etsysRip2ExtMIB.setRevisions(('2009-02-06 17:11',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: etsysRip2ExtMIB.setRevisionsDescriptions(('The initial version of this MIB module',))
if mibBuilder.loadTexts: etsysRip2ExtMIB.setLastUpdated('200902061711Z')
if mibBuilder.loadTexts: etsysRip2ExtMIB.setOrganization('Enterasys Networks, Inc.')
if mibBuilder.loadTexts: etsysRip2ExtMIB.setContactInfo('Postal: Enterasys Networks 50 Minuteman Rd. Andover, MA 01810-1008 USA Phone: +1 978 684 1000 E-mail: support@enterasys.com WWW: http://www.enterasys.com')
if mibBuilder.loadTexts: etsysRip2ExtMIB.setDescription('This MIB module defines a portion of the SNMP MIB under the Enterasys Networks enterprise OID pertaining to the RIPv2 configuration This MIB was designed to be used for configuring the RIP-2 protocol parameters.')
etsysRip2ExtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 66, 1))
etsysRip2ExtGlobals = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 66, 1, 1))
etsysRip2ExtAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 66, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("adminStatusUp", 1), ("adminStatusDown", 2))).clone('adminStatusDown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysRip2ExtAdminStatus.setStatus('current')
if mibBuilder.loadTexts: etsysRip2ExtAdminStatus.setDescription('The current administrative state of the RIP protocol. Setting this object to adminStatusUp turns on the RIP protocol, while setting it to adminStatusDown turns off the RIP protocol. When the object is set to adminStatusUp, it triggers the RIP process to begin normal operation by populating its routing table and sending/receiving routing updates. Setting this object to adminStatusDown turns off the RIP protocol. This causes the etsysRip2ExtOperStatus object to change its state to operStatusGoingDown. This has the effect of removing all of the RIP routes from the RIB.')
etsysRip2ExtOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 66, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("operStatusUp", 1), ("operStatusDown", 2), ("operStatusGoingUp", 3), ("operStatusGoingDown", 4), ("operStatusActFailed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysRip2ExtOperStatus.setStatus('current')
if mibBuilder.loadTexts: etsysRip2ExtOperStatus.setDescription("The current operational state of the RIP Protocol. Changing the state of the etsysRip2ExtAdminStatus object may effect the state of this object. If etsysRip2ExtAdminStatus is set to adminStatusDown, this object's status is changed to operStatusGoingDown. Once the RIP process has finished cleaning up its routing table and freeing its resources, the status is changed to operStatusDown. If etsysRip2ExtAdminStatus is set to adminStatusUp, this object's status is changed to operStatusGoingUp. After RIP allocates its resources and begins operation, the status of this object changes to operStatusUp. If there are problems acquiring the resources needed to operate the RIP protocol, the status changes to operStatusActFailed.")
etsysRip2ExtMaxEcmpHops = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 66, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysRip2ExtMaxEcmpHops.setStatus('current')
if mibBuilder.loadTexts: etsysRip2ExtMaxEcmpHops.setDescription('The maximum number of equal-cost next hops that RIP can program in the Routing Table Manager. Changing this value causes RIP to refresh all of its routes in the Routing Table Manager with the new maximum number of equal-cost next hops.')
etsysRip2ExtRefreshInterval = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 66, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysRip2ExtRefreshInterval.setStatus('current')
if mibBuilder.loadTexts: etsysRip2ExtRefreshInterval.setDescription('The frequency at which RIP sends periodic updates to all of its peers. A change to this value takes effect after the next periodic update is sent.')
etsysRip2ExtTriggeredDelayMin = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 66, 1, 1, 5), Unsigned32().clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysRip2ExtTriggeredDelayMin.setStatus('current')
if mibBuilder.loadTexts: etsysRip2ExtTriggeredDelayMin.setDescription('The lower bound of the random time period that RIP waits between sending Triggered Updates. A change to this value takes effect after the next Triggered Update is sent. This value MUST be less than etsysRip2ExtTriggeredDelayMax.')
etsysRip2ExtTriggeredDelayMax = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 66, 1, 1, 6), Unsigned32().clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysRip2ExtTriggeredDelayMax.setStatus('current')
if mibBuilder.loadTexts: etsysRip2ExtTriggeredDelayMax.setDescription('The upper bound of the random time period that RIP waits between sending Triggered Updates. A change to this value takes effect after the next Triggered Update is sent. This value MUST be greater than etsysRip2ExtTriggeredDelayMin.')
etsysRip2ExtRouteCheckInterval = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 66, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysRip2ExtRouteCheckInterval.setStatus('current')
if mibBuilder.loadTexts: etsysRip2ExtRouteCheckInterval.setDescription('The frequency with which RIP checks the routing table for expired routes. A change to this value takes effect after the next scheduled route check.')
etsysRip2ExtRouteExpiryInterval = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 66, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysRip2ExtRouteExpiryInterval.setStatus('current')
if mibBuilder.loadTexts: etsysRip2ExtRouteExpiryInterval.setDescription('The period from the point of the last refresh after which a route received from a peer times out and is marked as expired. This period is expressed as a multiple of the etsysRip2ExtRouteCheckInterval. A change to this value takes effect at the next scheduled route check.')
etsysRip2ExtRouteFlushInterval = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 66, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysRip2ExtRouteFlushInterval.setStatus('current')
if mibBuilder.loadTexts: etsysRip2ExtRouteFlushInterval.setDescription("The period from the point of route expiry that a route is finally removed from the routing table, also known as the 'garbage collection time'. This period is expressed as a multiple of the etsysRip2ExtRouteCheckInterval. A change to this value takes effect at the next scheduled route check.")
etsysRip2ExtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 66, 2))
etsysRip2ExtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 66, 2, 1))
etsysRip2ExtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 66, 2, 2))
etsysRip2ExtGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 66, 2, 1, 1)).setObjects(("ENTERASYS-RIPv2-EXT-MIB", "etsysRip2ExtAdminStatus"), ("ENTERASYS-RIPv2-EXT-MIB", "etsysRip2ExtOperStatus"), ("ENTERASYS-RIPv2-EXT-MIB", "etsysRip2ExtMaxEcmpHops"), ("ENTERASYS-RIPv2-EXT-MIB", "etsysRip2ExtRefreshInterval"), ("ENTERASYS-RIPv2-EXT-MIB", "etsysRip2ExtTriggeredDelayMin"), ("ENTERASYS-RIPv2-EXT-MIB", "etsysRip2ExtTriggeredDelayMax"), ("ENTERASYS-RIPv2-EXT-MIB", "etsysRip2ExtRouteCheckInterval"), ("ENTERASYS-RIPv2-EXT-MIB", "etsysRip2ExtRouteExpiryInterval"), ("ENTERASYS-RIPv2-EXT-MIB", "etsysRip2ExtRouteFlushInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysRip2ExtGlobalGroup = etsysRip2ExtGlobalGroup.setStatus('current')
if mibBuilder.loadTexts: etsysRip2ExtGlobalGroup.setDescription('This group defines global controls for Enterasys RIPv2 systems.')
etsysRip2ExtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 66, 2, 2, 1)).setObjects(("ENTERASYS-RIPv2-EXT-MIB", "etsysRip2ExtGlobalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysRip2ExtCompliance = etsysRip2ExtCompliance.setStatus('current')
if mibBuilder.loadTexts: etsysRip2ExtCompliance.setDescription('The compliance statement for devices that support etsysRip2Ext.')
mibBuilder.exportSymbols("ENTERASYS-RIPv2-EXT-MIB", etsysRip2ExtRouteFlushInterval=etsysRip2ExtRouteFlushInterval, etsysRip2ExtTriggeredDelayMax=etsysRip2ExtTriggeredDelayMax, etsysRip2ExtTriggeredDelayMin=etsysRip2ExtTriggeredDelayMin, etsysRip2ExtCompliances=etsysRip2ExtCompliances, etsysRip2ExtCompliance=etsysRip2ExtCompliance, etsysRip2ExtConformance=etsysRip2ExtConformance, etsysRip2ExtRouteExpiryInterval=etsysRip2ExtRouteExpiryInterval, etsysRip2ExtGroups=etsysRip2ExtGroups, etsysRip2ExtOperStatus=etsysRip2ExtOperStatus, etsysRip2ExtMaxEcmpHops=etsysRip2ExtMaxEcmpHops, etsysRip2ExtMIB=etsysRip2ExtMIB, PYSNMP_MODULE_ID=etsysRip2ExtMIB, etsysRip2ExtObjects=etsysRip2ExtObjects, etsysRip2ExtAdminStatus=etsysRip2ExtAdminStatus, etsysRip2ExtRouteCheckInterval=etsysRip2ExtRouteCheckInterval, etsysRip2ExtGlobals=etsysRip2ExtGlobals, etsysRip2ExtGlobalGroup=etsysRip2ExtGlobalGroup, etsysRip2ExtRefreshInterval=etsysRip2ExtRefreshInterval)
