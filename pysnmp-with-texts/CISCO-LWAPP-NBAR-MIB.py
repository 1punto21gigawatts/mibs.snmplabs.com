#
# PySNMP MIB module CISCO-LWAPP-NBAR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LWAPP-NBAR-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:06:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Gauge32, Counter64, iso, Bits, TimeTicks, ObjectIdentity, ModuleIdentity, NotificationType, Unsigned32, MibIdentifier, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter64", "iso", "Bits", "TimeTicks", "ObjectIdentity", "ModuleIdentity", "NotificationType", "Unsigned32", "MibIdentifier", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Integer32")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
ciscoLwappNbarMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 99995))
ciscoLwappNbarMIB.setRevisions(('2012-06-12 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoLwappNbarMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoLwappNbarMIB.setLastUpdated('201206120000Z')
if mibBuilder.loadTexts: ciscoLwappNbarMIB.setOrganization('Cisco Systems Inc.')
if mibBuilder.loadTexts: ciscoLwappNbarMIB.setContactInfo(' Cisco Systems, Customer Service Postal: 170 West Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS Email: cs-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoLwappNbarMIB.setDescription("NBAR - Network Based Application Recognition is an intelligent classification engine that recognizes applications that are static (which use fixed TCP or UDP port numbers), and stateful (which dynamically assign TCP or UDP port numbers). GLOSSARY Access Point ( AP ) An entity that contains an 802.11 medium access control ( MAC ) and physical layer ( PHY ) interface and provides access to the distribution services via the wireless medium for associated clients. LWAPP APs encapsulate all the 802.11 frames in LWAPP frames and sends it to the controller to which it is logically connected to. Central Controller ( CC ) The central entity that terminates the LWAPP protocol tunnel from the LWAPP APs. Throughout this MIB, this entity also referred to as 'controller'. Light Weight Access Point Protocol ( LWAPP ) This is a generic protocol that defines the communication between the Access Points and the controllers. Mobile Node ( MN ) A roaming 802.11 wireless device in a wireless network associated with an access point. AVC - Application Visiblity and Control. The client application or protocol statistics and control.")
ciscoLwappNbarMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99995, 0))
ciscoLwappNbarMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1))
ciscoLwappNbarMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99995, 2))
ciscoLwappNbarTableObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1))
ciscoLwappNbarGlobalObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 2))
cLNbarAVCEngineVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 2, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLNbarAVCEngineVersion.setStatus('current')
if mibBuilder.loadTexts: cLNbarAVCEngineVersion.setDescription('This object reptresents the AVC Engine version ')
cLNbarAVCProtoPackName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 2, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLNbarAVCProtoPackName.setStatus('current')
if mibBuilder.loadTexts: cLNbarAVCProtoPackName.setDescription('This object reptresents the AVC Protocol Pack Name ')
cLNbarAVCProtoPackVer = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 2, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLNbarAVCProtoPackVer.setStatus('current')
if mibBuilder.loadTexts: cLNbarAVCProtoPackVer.setDescription('This object represents the AVC Protocol Pack version ')
cLNbarAVCProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 1), )
if mibBuilder.loadTexts: cLNbarAVCProfileTable.setStatus('current')
if mibBuilder.loadTexts: cLNbarAVCProfileTable.setDescription(' This table represents the information about application visibility and control (AVC) profiles')
cLNbarAVCProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-NBAR-MIB", "cLNbarAVCProfileName"))
if mibBuilder.loadTexts: cLNbarAVCProfileEntry.setStatus('current')
if mibBuilder.loadTexts: cLNbarAVCProfileEntry.setDescription('An entry containing the configuration attributes of application visibility and control for NBAR.')
cLNbarAVCProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cLNbarAVCProfileName.setStatus('current')
if mibBuilder.loadTexts: cLNbarAVCProfileName.setDescription('This object represents the AVC profile name.')
cLNbarAVCProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLNbarAVCProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: cLNbarAVCProfileRowStatus.setDescription('This object creates or deletes an entry in this table.')
cLNbarAVCRuleTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2), )
if mibBuilder.loadTexts: cLNbarAVCRuleTable.setStatus('current')
if mibBuilder.loadTexts: cLNbarAVCRuleTable.setDescription(' This table represents the information about AVC Rule')
cLNbarAVCRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-LWAPP-NBAR-MIB", "cLNbarAVCRuleProfileName"), (0, "CISCO-LWAPP-NBAR-MIB", "cLNbarAVCRuleApplicationName"))
if mibBuilder.loadTexts: cLNbarAVCRuleEntry.setStatus('current')
if mibBuilder.loadTexts: cLNbarAVCRuleEntry.setDescription('An entry containing the configuration attributes of AVC rule for NBAR.')
cLNbarAVCRuleProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cLNbarAVCRuleProfileName.setStatus('current')
if mibBuilder.loadTexts: cLNbarAVCRuleProfileName.setDescription('This object represents the AVC profile name.')
cLNbarAVCRuleApplicationName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2, 1, 2), SnmpAdminString())
if mibBuilder.loadTexts: cLNbarAVCRuleApplicationName.setStatus('current')
if mibBuilder.loadTexts: cLNbarAVCRuleApplicationName.setDescription('This object represents the name of application or protocol.')
cLNbarAVCRuleApplicationGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2, 1, 3), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLNbarAVCRuleApplicationGroupName.setStatus('current')
if mibBuilder.loadTexts: cLNbarAVCRuleApplicationGroupName.setDescription('This object represents the name of application group.')
cLNbarAVCRuleApplicationAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("drop", 2), ("mark", 3), ("ratelimit", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLNbarAVCRuleApplicationAction.setStatus('current')
if mibBuilder.loadTexts: cLNbarAVCRuleApplicationAction.setDescription('This object represents the action for the application or protocol. drop - the corresponding application or protocol packets will be dropped. mark - the corresponding application or protocol packets will be marked with DSCP value. ratelimit - the corresponding application or protocol packets will be rate limited with Average and Burst rate limit values.')
cLNbarAVCRuleDscpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLNbarAVCRuleDscpValue.setStatus('current')
if mibBuilder.loadTexts: cLNbarAVCRuleDscpValue.setDescription('This object represents the DSCP value.')
cLNbarAVCRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLNbarAVCRuleRowStatus.setStatus('current')
if mibBuilder.loadTexts: cLNbarAVCRuleRowStatus.setDescription('This object creates or deletes an entry in this table.')
cLNbarAVCRuleAppAvgRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLNbarAVCRuleAppAvgRateLimit.setStatus('current')
if mibBuilder.loadTexts: cLNbarAVCRuleAppAvgRateLimit.setDescription('This object represents the Application Average data rate limit')
cLNbarAVCRuleAppBurstRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLNbarAVCRuleAppBurstRateLimit.setStatus('current')
if mibBuilder.loadTexts: cLNbarAVCRuleAppBurstRateLimit.setDescription('This object represents the Application Burst data rate limit')
cLAVCProtoPackLoadNotifFailed = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 99995, 0, 1)).setObjects(("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCProtoPackName"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCProtoPackVer"))
if mibBuilder.loadTexts: cLAVCProtoPackLoadNotifFailed.setStatus('current')
if mibBuilder.loadTexts: cLAVCProtoPackLoadNotifFailed.setDescription('This notification is generated whenever a protocol pack download fails.')
cLAVCProtoPackLoadNotifSuccess = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 99995, 0, 2)).setObjects(("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCProtoPackName"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCProtoPackVer"))
if mibBuilder.loadTexts: cLAVCProtoPackLoadNotifSuccess.setStatus('current')
if mibBuilder.loadTexts: cLAVCProtoPackLoadNotifSuccess.setDescription('This notification is generated whenever a protocol pack download succeeds.')
ciscoLwappNbarMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99995, 2, 1))
ciscoLwappNbarMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99995, 2, 2))
ciscoLwappNbarMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 99995, 2, 1, 1)).setObjects(("CISCO-LWAPP-NBAR-MIB", "cLNbarConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappNbarMIBCompliance = ciscoLwappNbarMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoLwappNbarMIBCompliance.setDescription('The compliance statement for the SNMP entities that implement the ciscoLwappNbarMIB module.')
ciscoLwappNbarMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 99995, 2, 1, 2)).setObjects(("CISCO-LWAPP-NBAR-MIB", "cLNbarConfigGroup"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarGlobalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappNbarMIBComplianceRev1 = ciscoLwappNbarMIBComplianceRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoLwappNbarMIBComplianceRev1.setDescription('The compliance statement for the SNMP entities that implement the ciscoLwappNbarMIB module.')
cLNbarConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 99995, 2, 2, 1)).setObjects(("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCProfileName"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCProfileRowStatus"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCRuleProfileName"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCRuleApplicationName"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCRuleApplicationGroupName"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCRuleApplicationAction"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCRuleDscpValue"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCRuleRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLNbarConfigGroup = cLNbarConfigGroup.setStatus('current')
if mibBuilder.loadTexts: cLNbarConfigGroup.setDescription('This is a collection of objects which can be configured to control NBAR parameters.')
cLNbarGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 99995, 2, 2, 2)).setObjects(("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCEngineVersion"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCProtoPackVer"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCProtoPackName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLNbarGlobalGroup = cLNbarGlobalGroup.setStatus('current')
if mibBuilder.loadTexts: cLNbarGlobalGroup.setDescription('This is a collection of objects which can be configured to control NBAR parameters.')
mibBuilder.exportSymbols("CISCO-LWAPP-NBAR-MIB", cLNbarAVCRuleDscpValue=cLNbarAVCRuleDscpValue, cLNbarAVCRuleRowStatus=cLNbarAVCRuleRowStatus, cLAVCProtoPackLoadNotifSuccess=cLAVCProtoPackLoadNotifSuccess, ciscoLwappNbarMIBGroups=ciscoLwappNbarMIBGroups, cLNbarAVCProfileName=cLNbarAVCProfileName, cLNbarAVCProtoPackName=cLNbarAVCProtoPackName, ciscoLwappNbarMIBCompliance=ciscoLwappNbarMIBCompliance, ciscoLwappNbarMIBComplianceRev1=ciscoLwappNbarMIBComplianceRev1, cLNbarAVCProfileTable=cLNbarAVCProfileTable, cLNbarAVCProfileEntry=cLNbarAVCProfileEntry, cLNbarAVCProtoPackVer=cLNbarAVCProtoPackVer, cLNbarAVCRuleProfileName=cLNbarAVCRuleProfileName, cLNbarAVCProfileRowStatus=cLNbarAVCProfileRowStatus, ciscoLwappNbarMIBObjects=ciscoLwappNbarMIBObjects, cLNbarAVCRuleEntry=cLNbarAVCRuleEntry, cLNbarAVCEngineVersion=cLNbarAVCEngineVersion, cLNbarAVCRuleTable=cLNbarAVCRuleTable, ciscoLwappNbarMIBConform=ciscoLwappNbarMIBConform, ciscoLwappNbarMIBCompliances=ciscoLwappNbarMIBCompliances, cLNbarAVCRuleApplicationAction=cLNbarAVCRuleApplicationAction, cLNbarAVCRuleAppBurstRateLimit=cLNbarAVCRuleAppBurstRateLimit, cLNbarAVCRuleApplicationGroupName=cLNbarAVCRuleApplicationGroupName, PYSNMP_MODULE_ID=ciscoLwappNbarMIB, ciscoLwappNbarMIB=ciscoLwappNbarMIB, cLNbarConfigGroup=cLNbarConfigGroup, cLAVCProtoPackLoadNotifFailed=cLAVCProtoPackLoadNotifFailed, cLNbarAVCRuleAppAvgRateLimit=cLNbarAVCRuleAppAvgRateLimit, ciscoLwappNbarTableObjects=ciscoLwappNbarTableObjects, cLNbarGlobalGroup=cLNbarGlobalGroup, ciscoLwappNbarGlobalObjects=ciscoLwappNbarGlobalObjects, ciscoLwappNbarMIBNotifs=ciscoLwappNbarMIBNotifs, cLNbarAVCRuleApplicationName=cLNbarAVCRuleApplicationName)
