#
# PySNMP MIB module ALTIGA-DHCP-SERVER-STATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALTIGA-DHCP-SERVER-STATS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:21:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
alDhcpServerMibModule, = mibBuilder.importSymbols("ALTIGA-GLOBAL-REG", "alDhcpServerMibModule")
alStatsDhcpServer, alDhcpServerGroup = mibBuilder.importSymbols("ALTIGA-MIB", "alStatsDhcpServer", "alDhcpServerGroup")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter64, Gauge32, Bits, iso, Unsigned32, TimeTicks, Integer32, Counter32, IpAddress, ObjectIdentity, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter64", "Gauge32", "Bits", "iso", "Unsigned32", "TimeTicks", "Integer32", "Counter32", "IpAddress", "ObjectIdentity", "ModuleIdentity", "NotificationType")
RowStatus, MacAddress, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "MacAddress", "TextualConvention", "DisplayString")
altigaDhcpServerStatsMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3076, 1, 1, 42, 2))
altigaDhcpServerStatsMibModule.setRevisions(('2002-09-05 13:00', '2002-07-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: altigaDhcpServerStatsMibModule.setRevisionsDescriptions(('Added module compliance.', 'Updated with new header',))
if mibBuilder.loadTexts: altigaDhcpServerStatsMibModule.setLastUpdated('200209051300Z')
if mibBuilder.loadTexts: altigaDhcpServerStatsMibModule.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: altigaDhcpServerStatsMibModule.setContactInfo('Cisco Systems 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-cvpn3000@cisco.com')
if mibBuilder.loadTexts: altigaDhcpServerStatsMibModule.setDescription('The Altiga DHCP Statistics Server MIB models counters and objects that are of management interest for DHCP. Acronyms The following acronyms are used in this document: DHCP: Dynamic Host Configuration Protocol MIB: Management Information Base ')
alStatsDhcpServerGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 1))
alDhcpServerStatsActiveLeases = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsActiveLeases.setStatus('current')
if mibBuilder.loadTexts: alDhcpServerStatsActiveLeases.setDescription('The number of active DHCP leases.')
alDhcpServerStatsMaximumLeases = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsMaximumLeases.setStatus('current')
if mibBuilder.loadTexts: alDhcpServerStatsMaximumLeases.setDescription('The number of leases that were active at any one time.')
alDhcpServerStatsDiscoversRcvd = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsDiscoversRcvd.setStatus('current')
if mibBuilder.loadTexts: alDhcpServerStatsDiscoversRcvd.setDescription('The number of transmitted DHCPDISCOVER messages.')
alDhcpServerStatsOffersSent = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsOffersSent.setStatus('current')
if mibBuilder.loadTexts: alDhcpServerStatsOffersSent.setDescription('The number of received DHCPOFFER messages.')
alDhcpServerStatsAcksSent = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsAcksSent.setStatus('current')
if mibBuilder.loadTexts: alDhcpServerStatsAcksSent.setDescription('The number of received original (i.e. in the REQUESTING state) DHCPACK messages.')
alDhcpServerStatsNaksSent = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsNaksSent.setStatus('current')
if mibBuilder.loadTexts: alDhcpServerStatsNaksSent.setDescription('The number of received original (i.e. in the REQUESTING state) DHCPNAK messages.')
alDhcpServerStatsReqTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsReqTimeouts.setStatus('current')
if mibBuilder.loadTexts: alDhcpServerStatsReqTimeouts.setDescription('The number of request timeouts that occurred.')
alDhcpServerStatsSessTable = MibTable((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 2), )
if mibBuilder.loadTexts: alDhcpServerStatsSessTable.setStatus('current')
if mibBuilder.loadTexts: alDhcpServerStatsSessTable.setDescription('List of active sessions.')
alDhcpServerStatsSessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 2, 1), ).setIndexNames((0, "ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsSessId"))
if mibBuilder.loadTexts: alDhcpServerStatsSessEntry.setStatus('current')
if mibBuilder.loadTexts: alDhcpServerStatsSessEntry.setDescription('An entry in the alDhcpServerStatsSessTable.')
alDhcpServerStatsSessRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 2, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alDhcpServerStatsSessRowStatus.setStatus('current')
if mibBuilder.loadTexts: alDhcpServerStatsSessRowStatus.setDescription('The status of this row. This can be used to delete the lease, but can not be used to create one.')
alDhcpServerStatsSessId = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsSessId.setStatus('current')
if mibBuilder.loadTexts: alDhcpServerStatsSessId.setDescription('The unique DHCP session ID used as the index for this row.')
alDhcpServerStatsSessIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsSessIpAddr.setStatus('current')
if mibBuilder.loadTexts: alDhcpServerStatsSessIpAddr.setDescription('The IP address of the remote client.')
alDhcpServerStatsSessLeaseExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsSessLeaseExpire.setStatus('current')
if mibBuilder.loadTexts: alDhcpServerStatsSessLeaseExpire.setDescription('The remaining seconds until the current lease expires.')
alDhcpServerStatsSessMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 2, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsSessMacAddr.setStatus('current')
if mibBuilder.loadTexts: alDhcpServerStatsSessMacAddr.setDescription('MAC address of the client.')
alDhcpServerStatsSessHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsSessHostName.setStatus('current')
if mibBuilder.loadTexts: alDhcpServerStatsSessHostName.setDescription('Host Name of the client.')
altigaDhcpServerStatsMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 1, 1, 42, 2, 1))
altigaDhcpServerStatsMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 1, 1, 42, 2, 1, 1))
altigaDhcpServerStatsMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 3076, 1, 1, 42, 2, 1, 1, 1)).setObjects(("ALTIGA-DHCP-SERVER-STATS-MIB", "altigaDhcpServerStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaDhcpServerStatsMibCompliance = altigaDhcpServerStatsMibCompliance.setStatus('current')
if mibBuilder.loadTexts: altigaDhcpServerStatsMibCompliance.setDescription('The compliance statement for agents which implement the Altiga DHCP Server Statistics MIB.')
altigaDhcpServerStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3076, 2, 1, 1, 1, 37, 2)).setObjects(("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsActiveLeases"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsMaximumLeases"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsDiscoversRcvd"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsOffersSent"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsAcksSent"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsNaksSent"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsReqTimeouts"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsSessRowStatus"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsSessId"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsSessIpAddr"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsSessLeaseExpire"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsSessMacAddr"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsSessHostName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaDhcpServerStatsGroup = altigaDhcpServerStatsGroup.setStatus('current')
if mibBuilder.loadTexts: altigaDhcpServerStatsGroup.setDescription('The objects for the DHCP Server statistics.')
mibBuilder.exportSymbols("ALTIGA-DHCP-SERVER-STATS-MIB", alDhcpServerStatsSessId=alDhcpServerStatsSessId, altigaDhcpServerStatsMibCompliance=altigaDhcpServerStatsMibCompliance, altigaDhcpServerStatsGroup=altigaDhcpServerStatsGroup, alDhcpServerStatsReqTimeouts=alDhcpServerStatsReqTimeouts, alStatsDhcpServerGlobal=alStatsDhcpServerGlobal, alDhcpServerStatsActiveLeases=alDhcpServerStatsActiveLeases, alDhcpServerStatsSessMacAddr=alDhcpServerStatsSessMacAddr, alDhcpServerStatsSessIpAddr=alDhcpServerStatsSessIpAddr, alDhcpServerStatsOffersSent=alDhcpServerStatsOffersSent, PYSNMP_MODULE_ID=altigaDhcpServerStatsMibModule, alDhcpServerStatsSessRowStatus=alDhcpServerStatsSessRowStatus, alDhcpServerStatsNaksSent=alDhcpServerStatsNaksSent, alDhcpServerStatsMaximumLeases=alDhcpServerStatsMaximumLeases, alDhcpServerStatsSessTable=alDhcpServerStatsSessTable, altigaDhcpServerStatsMibCompliances=altigaDhcpServerStatsMibCompliances, alDhcpServerStatsDiscoversRcvd=alDhcpServerStatsDiscoversRcvd, altigaDhcpServerStatsMibModule=altigaDhcpServerStatsMibModule, alDhcpServerStatsSessHostName=alDhcpServerStatsSessHostName, altigaDhcpServerStatsMibConformance=altigaDhcpServerStatsMibConformance, alDhcpServerStatsAcksSent=alDhcpServerStatsAcksSent, alDhcpServerStatsSessLeaseExpire=alDhcpServerStatsSessLeaseExpire, alDhcpServerStatsSessEntry=alDhcpServerStatsSessEntry)
