#
# PySNMP MIB module PERIBIT-GLOBAL-REG (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PERIBIT-GLOBAL-REG
# Produced by pysmi-0.3.4 at Wed May  1 14:40:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Integer32, iso, Counter32, Bits, Counter64, Unsigned32, IpAddress, MibIdentifier, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Gauge32, ObjectIdentity, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Integer32", "iso", "Counter32", "Bits", "Counter64", "Unsigned32", "IpAddress", "MibIdentifier", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Gauge32", "ObjectIdentity", "enterprises")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
pnGlobalRegModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 1, 1))
pnGlobalRegModule.setRevisions(('2004-03-15 14:00', '2003-06-26 20:00', '2001-07-29 22:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: pnGlobalRegModule.setRevisionsDescriptions((' Add sr100 product OID.', ' Add sr80 product OID.', ' Rev 1.0 Initial version of MIB module PERIBIT-GLOBAL-REG.',))
if mibBuilder.loadTexts: pnGlobalRegModule.setLastUpdated('200107292200Z')
if mibBuilder.loadTexts: pnGlobalRegModule.setOrganization('Peribit Networks, Inc')
if mibBuilder.loadTexts: pnGlobalRegModule.setContactInfo(' Customer Support Peribit Networks, Inc. 2300 Central Expressway Santa Clara, CA 95050 +1 866-PERIBIT support@peribit.com')
if mibBuilder.loadTexts: pnGlobalRegModule.setDescription(" A MIB module containing top-level OID definitions for various sub-trees for Peribit Networks' enterprise MIB modules.")
peribitRoot = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239))
if mibBuilder.loadTexts: peribitRoot.setStatus('current')
if mibBuilder.loadTexts: peribitRoot.setDescription(' The root of the OID sub-tree assigned to Peribit Networks assigned by the Internet Assigned Numbers Authority (IANA).')
pnReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1))
if mibBuilder.loadTexts: pnReg.setStatus('current')
if mibBuilder.loadTexts: pnReg.setDescription(' Sub-tree for registrations - identification of modules and logical and physical components.')
pnModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 1))
if mibBuilder.loadTexts: pnModules.setStatus('current')
if mibBuilder.loadTexts: pnModules.setDescription(' Sub-tree for module registrations.')
pnMibs = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2))
if mibBuilder.loadTexts: pnMibs.setStatus('current')
if mibBuilder.loadTexts: pnMibs.setDescription(' Sub-tree for all Peribit object and event definitions.')
pnCaps = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 3))
if mibBuilder.loadTexts: pnCaps.setStatus('current')
if mibBuilder.loadTexts: pnCaps.setDescription(' Sub-tree for agent profiles.')
pnReqs = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 4))
if mibBuilder.loadTexts: pnReqs.setStatus('current')
if mibBuilder.loadTexts: pnReqs.setDescription(' Sub-tree for management application requirements.')
pnExpr = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 5))
if mibBuilder.loadTexts: pnExpr.setStatus('current')
if mibBuilder.loadTexts: pnExpr.setDescription(' Sub-tree for experimental definitions.')
pnCommonMib = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 1))
if mibBuilder.loadTexts: pnCommonMib.setStatus('current')
if mibBuilder.loadTexts: pnCommonMib.setDescription(' Sub-tree for common Peribit object and event definitions. These would be implemented by all Peribit products.')
pnSpecificMib = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 2))
if mibBuilder.loadTexts: pnSpecificMib.setStatus('current')
if mibBuilder.loadTexts: pnSpecificMib.setDescription(' Sub-tree for specific Peribit object and event definitions.')
pnProductSr = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 2))
if mibBuilder.loadTexts: pnProductSr.setStatus('current')
if mibBuilder.loadTexts: pnProductSr.setDescription(' The Sequence Reducer product family.')
pnProductSr50 = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 2, 1))
if mibBuilder.loadTexts: pnProductSr50.setStatus('current')
if mibBuilder.loadTexts: pnProductSr50.setDescription(' Sequence Reducer Model 50')
pnProductSr55 = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 2, 2))
if mibBuilder.loadTexts: pnProductSr55.setStatus('current')
if mibBuilder.loadTexts: pnProductSr55.setDescription(' Sequence Reducer Model 55')
pnProductSr20 = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 2, 3))
if mibBuilder.loadTexts: pnProductSr20.setStatus('current')
if mibBuilder.loadTexts: pnProductSr20.setDescription(' Sequence Reducer Model 20')
pnProductSr80 = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 2, 4))
if mibBuilder.loadTexts: pnProductSr80.setStatus('current')
if mibBuilder.loadTexts: pnProductSr80.setDescription(' Sequence Reducer Model 80')
pnProductSr100 = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 2, 5))
if mibBuilder.loadTexts: pnProductSr100.setStatus('current')
if mibBuilder.loadTexts: pnProductSr100.setDescription(' Sequence Reducer Model 100')
pnProductSm500 = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 2, 6))
if mibBuilder.loadTexts: pnProductSm500.setStatus('current')
if mibBuilder.loadTexts: pnProductSm500.setDescription(' Sequence Mirror Model 500')
pnProductSr15 = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 2, 7))
if mibBuilder.loadTexts: pnProductSr15.setStatus('current')
if mibBuilder.loadTexts: pnProductSr15.setDescription(' Sequence Reducer Model 15')
mibBuilder.exportSymbols("PERIBIT-GLOBAL-REG", PYSNMP_MODULE_ID=pnGlobalRegModule, pnReqs=pnReqs, pnSpecificMib=pnSpecificMib, pnGlobalRegModule=pnGlobalRegModule, pnProductSr55=pnProductSr55, pnProductSr20=pnProductSr20, pnExpr=pnExpr, pnProductSr=pnProductSr, pnProductSr50=pnProductSr50, pnMibs=pnMibs, pnProductSr80=pnProductSr80, pnProductSr100=pnProductSr100, pnProductSm500=pnProductSm500, pnCommonMib=pnCommonMib, peribitRoot=peribitRoot, pnCaps=pnCaps, pnModules=pnModules, pnProductSr15=pnProductSr15, pnReg=pnReg)
