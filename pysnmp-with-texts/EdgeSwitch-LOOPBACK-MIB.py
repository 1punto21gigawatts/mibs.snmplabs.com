#
# PySNMP MIB module EdgeSwitch-LOOPBACK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EdgeSwitch-LOOPBACK-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:10:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
fastPath, = mibBuilder.importSymbols("EdgeSwitch-REF-MIB", "fastPath")
InetAddressIPv4, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv4")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, iso, Bits, Unsigned32, ModuleIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Gauge32, IpAddress, TimeTicks, mib_2, NotificationType, ObjectIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "iso", "Bits", "Unsigned32", "ModuleIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Gauge32", "IpAddress", "TimeTicks", "mib-2", "NotificationType", "ObjectIdentity", "Counter64")
DisplayString, PhysAddress, TextualConvention, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "PhysAddress", "TextualConvention", "TruthValue", "RowStatus")
fastPathLoopback = ModuleIdentity((1, 3, 6, 1, 4, 1, 4413, 1, 1, 22))
fastPathLoopback.setRevisions(('2011-01-26 00:00', '2007-05-23 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: fastPathLoopback.setRevisionsDescriptions(('Postal address updated.', 'Ubiquiti branding related changes.',))
if mibBuilder.loadTexts: fastPathLoopback.setLastUpdated('201101260000Z')
if mibBuilder.loadTexts: fastPathLoopback.setOrganization('Broadcom Inc')
if mibBuilder.loadTexts: fastPathLoopback.setContactInfo('')
if mibBuilder.loadTexts: fastPathLoopback.setDescription('The Ubiquiti Private MIB for FastPath Loopback')
agentLoopbackGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 22, 1))
agentLoopbackTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 22, 1, 1), )
if mibBuilder.loadTexts: agentLoopbackTable.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackTable.setDescription('A summary table of the Loopback instances')
agentLoopbackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 22, 1, 1, 1), ).setIndexNames((0, "EdgeSwitch-LOOPBACK-MIB", "agentLoopbackID"))
if mibBuilder.loadTexts: agentLoopbackEntry.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackEntry.setDescription('')
agentLoopbackID = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 22, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: agentLoopbackID.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackID.setDescription('The Loopback ID is associated with Internal Interface number which will be generated when we create a loopback.')
agentLoopbackIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 22, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoopbackIfIndex.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackIfIndex.setDescription('This is external interface associated with inetrnal interface of loopback. The Loopback ID is associated with Internal Interface number which will be generated when we create a loopback.')
agentLoopbackIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 22, 1, 1, 1, 3), InetAddressIPv4()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLoopbackIPAddress.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackIPAddress.setDescription('The IP Address configured for the respective loopback')
agentLoopbackIPSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 22, 1, 1, 1, 4), InetAddressIPv4()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLoopbackIPSubnet.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackIPSubnet.setDescription('The Subnet mask configured for the respective loopback')
agentLoopbackStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 22, 1, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentLoopbackStatus.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackStatus.setDescription('Status of this instance. The rows can be added/deleted in the table by setting createAndGo/destroy respectively active(1) - this loopback instance is active createAndGo(4) - set to this value to create an instance destroy(6) - set to this value to delete an instance')
mibBuilder.exportSymbols("EdgeSwitch-LOOPBACK-MIB", PYSNMP_MODULE_ID=fastPathLoopback, agentLoopbackEntry=agentLoopbackEntry, agentLoopbackTable=agentLoopbackTable, fastPathLoopback=fastPathLoopback, agentLoopbackIfIndex=agentLoopbackIfIndex, agentLoopbackStatus=agentLoopbackStatus, agentLoopbackIPAddress=agentLoopbackIPAddress, agentLoopbackGroup=agentLoopbackGroup, agentLoopbackID=agentLoopbackID, agentLoopbackIPSubnet=agentLoopbackIPSubnet)
