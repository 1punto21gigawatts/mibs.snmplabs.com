#
# PySNMP MIB module ENTERASYS-MULTI-USER-8021X-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-MULTI-USER-8021X-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:04:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
dot1xPaePortNumber, = mibBuilder.importSymbols("IEEE8021-PAE-MIB", "dot1xPaePortNumber")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ObjectIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, TimeTicks, Bits, IpAddress, iso, MibIdentifier, NotificationType, Unsigned32, ModuleIdentity, Gauge32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "TimeTicks", "Bits", "IpAddress", "iso", "MibIdentifier", "NotificationType", "Unsigned32", "ModuleIdentity", "Gauge32", "Counter32")
TextualConvention, DisplayString, TruthValue, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "MacAddress")
etsysMultiUser8021xMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53))
etsysMultiUser8021xMIB.setRevisions(('2004-11-11 15:31',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: etsysMultiUser8021xMIB.setRevisionsDescriptions(('The initial version of this MIB module.',))
if mibBuilder.loadTexts: etsysMultiUser8021xMIB.setLastUpdated('200411111531Z')
if mibBuilder.loadTexts: etsysMultiUser8021xMIB.setOrganization('Enterasys Networks, Inc')
if mibBuilder.loadTexts: etsysMultiUser8021xMIB.setContactInfo('Postal: Enterasys Networks 50 Minuteman Rd. Andover, MA 01810-1008 USA Phone: +1 978 684 1000 E-mail: support@enterasys.com WWW: http://www.enterasys.com')
if mibBuilder.loadTexts: etsysMultiUser8021xMIB.setDescription("This MIB module defines a portion of the SNMP enterprise MIBs under Enterasys Networks' enterprise OID pertaining to Multi-User IEEE 802.1X authentication. This MIB is designed to supplement and be used in connection with the standard IEEE 802.1X-2001 MIB.")
etsysMultiUser8021xObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1))
etsysMultiUser8021xSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 1))
etsysMultiUser8021xAccessEntity = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2))
etsysMulti1xAccessEntityTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 1), )
if mibBuilder.loadTexts: etsysMulti1xAccessEntityTable.setReference('9.6.1')
if mibBuilder.loadTexts: etsysMulti1xAccessEntityTable.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAccessEntityTable.setDescription('The system and configuration information for all the Access Entities.')
etsysMulti1xAccessEntityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 1, 1), ).setIndexNames((0, "IEEE8021-PAE-MIB", "dot1xPaePortNumber"), (0, "ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeIndex"))
if mibBuilder.loadTexts: etsysMulti1xAccessEntityEntry.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAccessEntityEntry.setDescription('The system and configuration information for an individual Access Entity.')
etsysMulti1xAeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: etsysMulti1xAeIndex.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeIndex.setDescription('Indicates if this Access Entity is currently active.')
etsysMulti1xAeActive = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeActive.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeActive.setDescription('Indicates if this Access Entity is currently active.')
etsysMulti1xAeState = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initialize", 1), ("disconnected", 2), ("connecting", 3), ("authenticating", 4), ("authenticated", 5), ("aborting", 6), ("held", 7), ("forceAuth", 8), ("forceUnauth", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeState.setReference('9.4.1, Authenticator PAE state')
if mibBuilder.loadTexts: etsysMulti1xAeState.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeState.setDescription('The current value of the Access Entity state machine.')
etsysMulti1xAeBackendAuthState = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("request", 1), ("response", 2), ("success", 3), ("fail", 4), ("timeout", 5), ("idle", 6), ("initialize", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeBackendAuthState.setReference('9.4.1, Backend Authentication state')
if mibBuilder.loadTexts: etsysMulti1xAeBackendAuthState.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeBackendAuthState.setDescription('The current state of the Backend Authentication state machine.')
etsysMulti1xAeInitialize = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysMulti1xAeInitialize.setReference('9.6.1.2, Initialize Port')
if mibBuilder.loadTexts: etsysMulti1xAeInitialize.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeInitialize.setDescription('The initialization control for this Access Entity. Setting this attribute TRUE causes the Access Entity to be initialized. The attribute value reverts to FALSE once initialization has completed.')
etsysMulti1xAeReauthenticate = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysMulti1xAeReauthenticate.setReference('9.4.1.3 Reauthenticate')
if mibBuilder.loadTexts: etsysMulti1xAeReauthenticate.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeReauthenticate.setDescription('The reauthentication control for this Access Entity. Setting this attribute TRUE causes the Access Entity state machine to reauthenticate the Supplicant. Setting this attribute FALSE has no effect. This attribute always returns FALSE when it is read.')
etsysMulti1xAeReAuthPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 1, 1, 7), Unsigned32().clone(3600)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeReAuthPeriod.setReference('9.4.1, reAuthPeriod')
if mibBuilder.loadTexts: etsysMulti1xAeReAuthPeriod.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeReAuthPeriod.setDescription('The value, in seconds, of the reAuthPeriod constant currently in use by the Reauthentication Timer state machine.')
etsysMulti1xAeSupplicantAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 1, 1, 8), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeSupplicantAddress.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeSupplicantAddress.setDescription('The MAC address that this Access Entity is currently bound to.')
etsysMulti1xAeUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 1, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeUserName.setReference('9.4.4, Session User Name')
if mibBuilder.loadTexts: etsysMulti1xAeUserName.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeUserName.setDescription('The User-Name representing the identity of the Supplicant PAE.')
etsysMulti1xAccessEntityStatsTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 2), )
if mibBuilder.loadTexts: etsysMulti1xAccessEntityStatsTable.setReference('9.4.2 Authenticator Statistics')
if mibBuilder.loadTexts: etsysMulti1xAccessEntityStatsTable.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAccessEntityStatsTable.setDescription('The statistics objects for the all the Access Entities.')
etsysMulti1xAccessEntityStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 2, 1), )
etsysMulti1xAccessEntityEntry.registerAugmentions(("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAccessEntityStatsEntry"))
etsysMulti1xAccessEntityStatsEntry.setIndexNames(*etsysMulti1xAccessEntityEntry.getIndexNames())
if mibBuilder.loadTexts: etsysMulti1xAccessEntityStatsEntry.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAccessEntityStatsEntry.setDescription('The statistics information for an individual Access Entity.')
etsysMulti1xAeEapolFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeEapolFramesRx.setReference('9.4.2, EAPOL frames received')
if mibBuilder.loadTexts: etsysMulti1xAeEapolFramesRx.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeEapolFramesRx.setDescription('The number of valid EAPOL frames of any type that have been received by this Access Entity.')
etsysMulti1xAeEapolFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeEapolFramesTx.setReference('9.4.2, EAPOL frames transmitted')
if mibBuilder.loadTexts: etsysMulti1xAeEapolFramesTx.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeEapolFramesTx.setDescription('The number of EAPOL frames of any type that have been transmitted by this Access Entity.')
etsysMulti1xAeEapolStartFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeEapolStartFramesRx.setReference('9.4.2, EAPOL Start frames received')
if mibBuilder.loadTexts: etsysMulti1xAeEapolStartFramesRx.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeEapolStartFramesRx.setDescription('The number of EAPOL Start frames that have been received by this Access Entity.')
etsysMulti1xAeEapolLogoffFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeEapolLogoffFramesRx.setReference('9.4.2, EAPOL Logoff frames received')
if mibBuilder.loadTexts: etsysMulti1xAeEapolLogoffFramesRx.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeEapolLogoffFramesRx.setDescription('The number of EAPOL Logoff frames that have been received by this Access Entity.')
etsysMulti1xAeEapolRespIdFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeEapolRespIdFramesRx.setReference('9.4.2, EAPOL Resp/Id frames received')
if mibBuilder.loadTexts: etsysMulti1xAeEapolRespIdFramesRx.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeEapolRespIdFramesRx.setDescription('The number of EAP Resp/Id frames that have been received by this Access Entity.')
etsysMulti1xAeEapolRespFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeEapolRespFramesRx.setReference('9.4.2, EAPOL Response frames received')
if mibBuilder.loadTexts: etsysMulti1xAeEapolRespFramesRx.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeEapolRespFramesRx.setDescription('The number of valid EAP Response frames (other than Resp/Id frames) that have been received by this Access Entity.')
etsysMulti1xAeEapolReqIdFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeEapolReqIdFramesTx.setReference('9.4.2, EAPOL Req/Id frames transmitted')
if mibBuilder.loadTexts: etsysMulti1xAeEapolReqIdFramesTx.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeEapolReqIdFramesTx.setDescription('The number of EAP Req/Id frames that have been transmitted by this Access Entity.')
etsysMulti1xAeEapolReqFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeEapolReqFramesTx.setReference('9.4.2, EAPOL Request frames transmitted')
if mibBuilder.loadTexts: etsysMulti1xAeEapolReqFramesTx.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeEapolReqFramesTx.setDescription('The number of EAP Request frames (other than Rq/Id frames) that have been transmitted by this Access Entity.')
etsysMulti1xAeInvalidEapolFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeInvalidEapolFramesRx.setReference('9.4.2, Invalid EAPOL frames received')
if mibBuilder.loadTexts: etsysMulti1xAeInvalidEapolFramesRx.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeInvalidEapolFramesRx.setDescription('The number of EAPOL frames that have been received by this Access Entity in which the frame type is not recognized.')
etsysMulti1xAeEapLengthErrorFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeEapLengthErrorFramesRx.setReference('9.4.2, EAP length error frames received')
if mibBuilder.loadTexts: etsysMulti1xAeEapLengthErrorFramesRx.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeEapLengthErrorFramesRx.setDescription('The number of EAPOL frames that have been received by this Access Entity in which the Packet Body Length field is invalid.')
etsysMulti1xAeEapolFrameVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeEapolFrameVersion.setReference('9.4.2, Last EAPOL frame version')
if mibBuilder.loadTexts: etsysMulti1xAeEapolFrameVersion.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeEapolFrameVersion.setDescription('The protocol version number carried in the most recently received EAPOL frame.')
etsysMulti1xAeEapolFrameSource = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 2, 1, 12), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeEapolFrameSource.setReference('9.4.2, Last EAPOL frame source')
if mibBuilder.loadTexts: etsysMulti1xAeEapolFrameSource.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeEapolFrameSource.setDescription('The source MAC address carried in the most recently received EAPOL frame.')
etsysMulti1xAeDiagTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3), )
if mibBuilder.loadTexts: etsysMulti1xAeDiagTable.setReference('9.4.3 Authenticator Diagnostics')
if mibBuilder.loadTexts: etsysMulti1xAeDiagTable.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeDiagTable.setDescription('The diagnostics objects for all the Access Entities.')
etsysMulti1xAeDiagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3, 1), )
etsysMulti1xAccessEntityEntry.registerAugmentions(("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeDiagEntry"))
etsysMulti1xAeDiagEntry.setIndexNames(*etsysMulti1xAccessEntityEntry.getIndexNames())
if mibBuilder.loadTexts: etsysMulti1xAeDiagEntry.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeDiagEntry.setDescription('The diagnostics information for an individual Access Entity.')
etsysMulti1xAeEntersConnecting = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeEntersConnecting.setReference('9.4.2, 8.5.4.2.1')
if mibBuilder.loadTexts: etsysMulti1xAeEntersConnecting.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeEntersConnecting.setDescription('Counts the number of times that the state machine transitions to the CONNECTING state from any other state.')
etsysMulti1xAeEapLogoffsWhileConnecting = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeEapLogoffsWhileConnecting.setReference('9.4.2, 8.5.4.2.2')
if mibBuilder.loadTexts: etsysMulti1xAeEapLogoffsWhileConnecting.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeEapLogoffsWhileConnecting.setDescription('Counts the number of times that the state machine transitions from CONNECTING to DISCONNECTED as a result of receiving an EAPOL-Logoff message.')
etsysMulti1xAeEntersAuthenticating = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeEntersAuthenticating.setReference('9.4.2, 8.5.4.2.3')
if mibBuilder.loadTexts: etsysMulti1xAeEntersAuthenticating.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeEntersAuthenticating.setDescription('Counts the number of times that the state machine transitions from CONNECTING to AUTHENTICATING, as a result of an EAP-Response/Identity message being received from the Supplicant.')
etsysMulti1xAeAuthSuccessWhileAuthenticating = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeAuthSuccessWhileAuthenticating.setReference('9.4.2, 8.5.4.2.4')
if mibBuilder.loadTexts: etsysMulti1xAeAuthSuccessWhileAuthenticating.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeAuthSuccessWhileAuthenticating.setDescription('Counts the number of times that the state machine transitions from AUTHENTICATING to AUTHENTICATED, as a result of the Backend Authentication state machine indicating successful authentication of the Supplicant (authSuccess = TRUE).')
etsysMulti1xAeAuthTimeoutsWhileAuthenticating = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeAuthTimeoutsWhileAuthenticating.setReference('9.4.2, 8.5.4.2.5')
if mibBuilder.loadTexts: etsysMulti1xAeAuthTimeoutsWhileAuthenticating.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeAuthTimeoutsWhileAuthenticating.setDescription('Counts the number of times that the state machine transitions from AUTHENTICATING to ABORTING, as a result of the Backend Authentication state machine indicating authentication timeout (authTimeout = TRUE).')
etsysMulti1xAeAuthFailWhileAuthenticating = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeAuthFailWhileAuthenticating.setReference('9.4.2, 8.5.4.2.6')
if mibBuilder.loadTexts: etsysMulti1xAeAuthFailWhileAuthenticating.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeAuthFailWhileAuthenticating.setDescription('Counts the number of times that the state machine transitions from AUTHENTICATING to HELD, as a result of the Backend Authentication state machine indicating authentication failure (authFail = TRUE).')
etsysMulti1xAeAuthReauthsWhileAuthenticating = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeAuthReauthsWhileAuthenticating.setReference('9.4.2, 8.5.4.2.7')
if mibBuilder.loadTexts: etsysMulti1xAeAuthReauthsWhileAuthenticating.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeAuthReauthsWhileAuthenticating.setDescription('Counts the number of times that the state machine transitions from AUTHENTICATING to ABORTING, as a result of a reauthentication request (reAuthenticate = TRUE).')
etsysMulti1xAeAuthEapStartsWhileAuthenticating = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeAuthEapStartsWhileAuthenticating.setReference('9.4.2, 8.5.4.2.8')
if mibBuilder.loadTexts: etsysMulti1xAeAuthEapStartsWhileAuthenticating.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeAuthEapStartsWhileAuthenticating.setDescription('Counts the number of times that the state machine transitions from AUTHENTICATING to ABORTING, as a result of an EAPOL-Start message being received from the Supplicant.')
etsysMulti1xAeAuthEapLogoffWhileAuthenticating = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeAuthEapLogoffWhileAuthenticating.setReference('9.4.2, 8.5.4.2.9')
if mibBuilder.loadTexts: etsysMulti1xAeAuthEapLogoffWhileAuthenticating.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeAuthEapLogoffWhileAuthenticating.setDescription('Counts the number of times that the state machine transitions from AUTHENTICATING to ABORTING, as a result of an EAPOL-Logoff message being received from the Supplicant.')
etsysMulti1xAeAuthReauthsWhileAuthenticated = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeAuthReauthsWhileAuthenticated.setReference('9.4.2, 8.5.4.2.10')
if mibBuilder.loadTexts: etsysMulti1xAeAuthReauthsWhileAuthenticated.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeAuthReauthsWhileAuthenticated.setDescription('Counts the number of times that the state machine transitions from AUTHENTICATED to CONNECTING, as a result of a reauthentication request (reAuthenticate = TRUE).')
etsysMulti1xAeAuthEapStartsWhileAuthenticated = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeAuthEapStartsWhileAuthenticated.setReference('9.4.2, 8.5.4.2.11')
if mibBuilder.loadTexts: etsysMulti1xAeAuthEapStartsWhileAuthenticated.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeAuthEapStartsWhileAuthenticated.setDescription('Counts the number of times that the state machine transitions from AUTHENTICATED to CONNECTING, as a result of an EAPOL-Start message being received from the Supplicant.')
etsysMulti1xAeAuthEapLogoffWhileAuthenticated = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeAuthEapLogoffWhileAuthenticated.setReference('9.4.2, 8.5.4.2.12')
if mibBuilder.loadTexts: etsysMulti1xAeAuthEapLogoffWhileAuthenticated.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeAuthEapLogoffWhileAuthenticated.setDescription('Counts the number of times that the state machine transitions from AUTHENTICATED to DISCONNECTED, as a result of an EAPOL-Logoff message being received from the Supplicant.')
etsysMulti1xAeBackendResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeBackendResponses.setReference('9.4.2, 8.5.6.2.1')
if mibBuilder.loadTexts: etsysMulti1xAeBackendResponses.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeBackendResponses.setDescription('Counts the number of times that the state machine sends an initial Access-Request packet to the Authentication server (i.e., executes sendRespToServer on entry to the RESPONSE state). Indicates that the Authenticator attempted communication with the Authentication Server.')
etsysMulti1xAeBackendAccessChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeBackendAccessChallenges.setReference('9.4.2, 8.5.6.2.2')
if mibBuilder.loadTexts: etsysMulti1xAeBackendAccessChallenges.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeBackendAccessChallenges.setDescription('Counts the number of times that the state machine receives an initial Access-Challenge packet from the Authentication server (i.e., aReq becomes TRUE, causing exit from the RESPONSE state). Indicates that the Authentication Server has communication with the Authenticator.')
etsysMulti1xAeBackendOtherRequestsToSupplicant = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeBackendOtherRequestsToSupplicant.setReference('9.4.2, 8.5.6.2.3')
if mibBuilder.loadTexts: etsysMulti1xAeBackendOtherRequestsToSupplicant.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeBackendOtherRequestsToSupplicant.setDescription('Counts the number of times that the state machine sends an EAP-Request packet (other than an Identity, Notification, Failure or Success message) to the Supplicant (i.e., executes txReq on entry to the REQUEST state). Indicates that the Authenticator chose an EAP-method.')
etsysMulti1xAeBackendNonNakResponsesFromSupplicant = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeBackendNonNakResponsesFromSupplicant.setReference('9.4.2, 8.5.6.2.4')
if mibBuilder.loadTexts: etsysMulti1xAeBackendNonNakResponsesFromSupplicant.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeBackendNonNakResponsesFromSupplicant.setDescription("Counts the number of times that the state machine receives a response from the Supplicant to an initial EAP-Request, and the response is something other than EAP-NAK (i.e., rxResp becomes TRUE, causing the state machine to transition from REQUEST to RESPONSE, and the response is not an EAP-NAK). Indicates that the Supplicant can respond to the Authenticator's chosen EAP-method.")
etsysMulti1xAeBackendAuthSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeBackendAuthSuccesses.setReference('9.4.2, 8.5.6.2.5')
if mibBuilder.loadTexts: etsysMulti1xAeBackendAuthSuccesses.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeBackendAuthSuccesses.setDescription('Counts the number of times that the state machine receives an EAP-Success message from the Authentication Server (i.e., aSuccess becomes TRUE, causing a transition from RESPONSE to SUCCESS). Indicates that the Supplicant has successfully authenticated to the Authentication Server.')
etsysMulti1xAeBackendAuthFails = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xAeBackendAuthFails.setReference('9.4.2, 8.5.6.2.6')
if mibBuilder.loadTexts: etsysMulti1xAeBackendAuthFails.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xAeBackendAuthFails.setDescription('Counts the number of times that the state machine receives an EAP-Failure message from the Authentication Server (i.e., aFail becomes TRUE, causing a transition from RESPONSE to FAIL). Indicates that the Supplicant has not authenticated to the Authentication Server.')
etsysMulti1xSessionStatsTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 4), )
if mibBuilder.loadTexts: etsysMulti1xSessionStatsTable.setReference('9.4.4')
if mibBuilder.loadTexts: etsysMulti1xSessionStatsTable.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xSessionStatsTable.setDescription('The session statistics for all the Access Entities.')
etsysMulti1xSessionStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 4, 1), )
etsysMulti1xAccessEntityEntry.registerAugmentions(("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xSessionStatsEntry"))
etsysMulti1xSessionStatsEntry.setIndexNames(*etsysMulti1xAccessEntityEntry.getIndexNames())
if mibBuilder.loadTexts: etsysMulti1xSessionStatsEntry.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xSessionStatsEntry.setDescription('The session statistics for an individual Access Entity. This shows the current values being collected for each session that is still in progress, or the final values for the last valid session on each Access Entity where there is no session currently active.')
etsysMulti1xSessionOctetsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xSessionOctetsRx.setReference('9.4.4, Session Octets Received')
if mibBuilder.loadTexts: etsysMulti1xSessionOctetsRx.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xSessionOctetsRx.setDescription('The number of octets of user data received on this port for this session.')
etsysMulti1xSessionOctetsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xSessionOctetsTx.setReference('9.4.4, Session Octets Transmitted')
if mibBuilder.loadTexts: etsysMulti1xSessionOctetsTx.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xSessionOctetsTx.setDescription('The number of octets of user data transmitted on this port for this session.')
etsysMulti1xSessionFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xSessionFramesRx.setReference('9.4.4, Session Frames Received')
if mibBuilder.loadTexts: etsysMulti1xSessionFramesRx.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xSessionFramesRx.setDescription('The number of user data frames received on this port for this session.')
etsysMulti1xSessionFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xSessionFramesTx.setReference('9.4.4, Session Frames Transmitted')
if mibBuilder.loadTexts: etsysMulti1xSessionFramesTx.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xSessionFramesTx.setDescription('The number of user data frames transmitted on this port for this session.')
etsysMulti1xSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 4, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xSessionId.setReference('9.4.4, Session Identifier')
if mibBuilder.loadTexts: etsysMulti1xSessionId.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xSessionId.setDescription('A unique identifier for the session, in the form of a printable ASCII string of at least three characters.')
etsysMulti1xSessionAuthenticMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("remoteAuthServer", 1), ("localAuthServer", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xSessionAuthenticMethod.setReference('9.4.4, Session Authentication Method')
if mibBuilder.loadTexts: etsysMulti1xSessionAuthenticMethod.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xSessionAuthenticMethod.setDescription('The authentication method used to establish the session.')
etsysMulti1xSessionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 4, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xSessionTime.setReference('9.4.4, Session Time')
if mibBuilder.loadTexts: etsysMulti1xSessionTime.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xSessionTime.setDescription('The duration of the session in seconds.')
etsysMulti1xSessionTerminateCause = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 999))).clone(namedValues=NamedValues(("supplicantLogoff", 1), ("portFailure", 2), ("supplicantRestart", 3), ("reauthFailed", 4), ("authControlForceUnauth", 5), ("portReInit", 6), ("portAdminDisabled", 7), ("notTerminatedYet", 999)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xSessionTerminateCause.setReference('9.4.4, Session Terminate Cause')
if mibBuilder.loadTexts: etsysMulti1xSessionTerminateCause.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xSessionTerminateCause.setDescription('The reason for the session termination.')
etsysMulti1xSessionUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 4, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xSessionUserName.setReference('9.4.4, Session User Name')
if mibBuilder.loadTexts: etsysMulti1xSessionUserName.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xSessionUserName.setDescription('The User-Name representing the identity of the Supplicant PAE.')
etsysMulti1xSessionActive = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 4, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xSessionActive.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xSessionActive.setDescription('Indicates if this session is currently active.')
etsysMulti1xSupplicantAddressTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 5), )
if mibBuilder.loadTexts: etsysMulti1xSupplicantAddressTable.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xSupplicantAddressTable.setDescription('The Access Entities relative to the supplicant MAC address, port, and access entity index.')
etsysMulti1xSupplicantAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 5, 1), ).setIndexNames((0, "ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeSupplicantAddress"), (0, "IEEE8021-PAE-MIB", "dot1xPaePortNumber"), (0, "ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeIndex"))
if mibBuilder.loadTexts: etsysMulti1xSupplicantAddressEntry.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xSupplicantAddressEntry.setDescription('Some basic information about an individual Access Entity.')
etsysMulti1xSupplicantActive = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 5, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xSupplicantActive.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xSupplicantActive.setDescription('Indicates if the associated Access Entity is currently active.')
etsysMulti1xSupplicantUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 5, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xSupplicantUserName.setReference('9.4.4, Session User Name')
if mibBuilder.loadTexts: etsysMulti1xSupplicantUserName.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xSupplicantUserName.setDescription('The User-Name representing the identity of the Supplicant PAE.')
etsysMulti1xUserNameTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 6), )
if mibBuilder.loadTexts: etsysMulti1xUserNameTable.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xUserNameTable.setDescription('The Access Entities relative to the supplicant user name, or the initial part of the supplicant user name, port, and access entity index.')
etsysMulti1xUserNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 6, 1), ).setIndexNames((0, "ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xUserNameIndex"), (0, "IEEE8021-PAE-MIB", "dot1xPaePortNumber"), (0, "ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeIndex"))
if mibBuilder.loadTexts: etsysMulti1xUserNameEntry.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xUserNameEntry.setDescription('Some basic information about an individual Access Entity.')
etsysMulti1xUserNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 6, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8))
if mibBuilder.loadTexts: etsysMulti1xUserNameIndex.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xUserNameIndex.setDescription('The fixed length equivalent of the etsysMulti1xUserName object. When the length of the corresponding etsysMulti1xUserName object is less then 8 octets this object is padded with null octets. When the length of the corresponding etsysMulti1xUserName object is greater than 8 octets this object has the value of the etsysMulti1xUserName object truncated to 20 octets.')
etsysMulti1xUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 6, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xUserName.setReference('9.4.4, Session User Name')
if mibBuilder.loadTexts: etsysMulti1xUserName.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xUserName.setDescription('The User-Name representing the identity of the Supplicant PAE.')
etsysMulti1xUserActive = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 6, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xUserActive.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xUserActive.setDescription('Indicates if the associated Access Entity is currently active.')
etsysMulti1xUserAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 6, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xUserAddress.setReference('9.4.4, Session User Name')
if mibBuilder.loadTexts: etsysMulti1xUserAddress.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xUserAddress.setDescription('The User-Name representing the identity of the Supplicant PAE.')
etsysMulti1xActiveAccessEntityTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 7), )
if mibBuilder.loadTexts: etsysMulti1xActiveAccessEntityTable.setReference('9.6.1')
if mibBuilder.loadTexts: etsysMulti1xActiveAccessEntityTable.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xActiveAccessEntityTable.setDescription('The active Access Entities.')
etsysMulti1xActiveAccessEntityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 7, 1), ).setIndexNames((0, "IEEE8021-PAE-MIB", "dot1xPaePortNumber"), (0, "ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeIndex"))
if mibBuilder.loadTexts: etsysMulti1xActiveAccessEntityEntry.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xActiveAccessEntityEntry.setDescription('An individual active Access Entity.')
etsysMulti1xActiveSupplicantAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 1, 2, 7, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMulti1xActiveSupplicantAddress.setStatus('current')
if mibBuilder.loadTexts: etsysMulti1xActiveSupplicantAddress.setDescription('The MAC address that this active Access Entity is currently bound to.')
etsysMultiUser8021xConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 2))
etsysMultiUser8021xGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 2, 1))
etsysMultiUser8021xCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 2, 2))
etsysMultiUser8021xAccessEntityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 2, 1, 1)).setObjects(("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeActive"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeState"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeBackendAuthState"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeInitialize"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeReauthenticate"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeReAuthPeriod"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeSupplicantAddress"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeUserName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiUser8021xAccessEntityGroup = etsysMultiUser8021xAccessEntityGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiUser8021xAccessEntityGroup.setDescription('A collection of objects providing system and configuration information for all the Access Entities running on all the ports.')
etsysMultiUser8021xAccessEntityStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 2, 1, 2)).setObjects(("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeEapolFramesRx"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeEapolFramesTx"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeEapolStartFramesRx"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeEapolLogoffFramesRx"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeEapolRespIdFramesRx"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeEapolRespFramesRx"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeEapolReqIdFramesTx"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeEapolReqFramesTx"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeInvalidEapolFramesRx"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeEapLengthErrorFramesRx"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeEapolFrameVersion"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeEapolFrameSource"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiUser8021xAccessEntityStatsGroup = etsysMultiUser8021xAccessEntityStatsGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiUser8021xAccessEntityStatsGroup.setDescription('A collection of objects providing statistics information for all the Access Entities running on all the ports.')
etsysMultiUser8021xAccessEntityDiagGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 2, 1, 3)).setObjects(("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeEntersConnecting"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeEapLogoffsWhileConnecting"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeEntersAuthenticating"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeAuthSuccessWhileAuthenticating"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeAuthTimeoutsWhileAuthenticating"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeAuthFailWhileAuthenticating"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeAuthReauthsWhileAuthenticating"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeAuthEapStartsWhileAuthenticating"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeAuthEapLogoffWhileAuthenticating"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeAuthReauthsWhileAuthenticated"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeAuthEapStartsWhileAuthenticated"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeAuthEapLogoffWhileAuthenticated"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeBackendResponses"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeBackendAccessChallenges"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeBackendOtherRequestsToSupplicant"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeBackendNonNakResponsesFromSupplicant"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeBackendAuthSuccesses"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xAeBackendAuthFails"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiUser8021xAccessEntityDiagGroup = etsysMultiUser8021xAccessEntityDiagGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiUser8021xAccessEntityDiagGroup.setDescription('A collection of objects providing diagnostic statistics for all the Access Entities running on all the ports.')
etsysMultiUser8021xAccessEntitySessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 2, 1, 4)).setObjects(("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xSessionOctetsRx"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xSessionOctetsTx"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xSessionFramesRx"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xSessionFramesTx"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xSessionId"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xSessionAuthenticMethod"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xSessionTime"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xSessionTerminateCause"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xSessionUserName"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xSessionActive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiUser8021xAccessEntitySessionGroup = etsysMultiUser8021xAccessEntitySessionGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiUser8021xAccessEntitySessionGroup.setDescription('A collection of objects providing session statistics for all the Access Entities running on all the ports.')
etsysMultiUser8021xSupplicantAddressGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 2, 1, 5)).setObjects(("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xSupplicantActive"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xSupplicantUserName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiUser8021xSupplicantAddressGroup = etsysMultiUser8021xSupplicantAddressGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiUser8021xSupplicantAddressGroup.setDescription('A collection of objects providing a means to look up all of the Access Entities that are associated with a particular supplicant address.')
etsysMultiUser8021xUserNameGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 2, 1, 6)).setObjects(("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xUserName"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xUserActive"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xUserAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiUser8021xUserNameGroup = etsysMultiUser8021xUserNameGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiUser8021xUserNameGroup.setDescription('A collection of objects providing a means to look up all of the Access Entities that are associated with a particular user name.')
etsysMultiUser8021xActiveAccessEntityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 2, 1, 7)).setObjects(("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMulti1xActiveSupplicantAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiUser8021xActiveAccessEntityGroup = etsysMultiUser8021xActiveAccessEntityGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiUser8021xActiveAccessEntityGroup.setDescription('The Supplicant Address for each active Access Entity.')
etsysMulti8021xCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 53, 2, 2, 1)).setObjects(("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMultiUser8021xAccessEntityGroup"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMultiUser8021xAccessEntityStatsGroup"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMultiUser8021xAccessEntityDiagGroup"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMultiUser8021xAccessEntitySessionGroup"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMultiUser8021xSupplicantAddressGroup"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMultiUser8021xUserNameGroup"), ("ENTERASYS-MULTI-USER-8021X-MIB", "etsysMultiUser8021xActiveAccessEntityGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMulti8021xCompliance = etsysMulti8021xCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: etsysMulti8021xCompliance.setDescription('The compliance statement for devices that support the Enterasys Multi User IEEE 802.1x MIB.')
mibBuilder.exportSymbols("ENTERASYS-MULTI-USER-8021X-MIB", etsysMulti1xAeInitialize=etsysMulti1xAeInitialize, etsysMulti1xAeEapolFramesRx=etsysMulti1xAeEapolFramesRx, etsysMulti1xSessionStatsEntry=etsysMulti1xSessionStatsEntry, etsysMulti1xAeAuthEapLogoffWhileAuthenticated=etsysMulti1xAeAuthEapLogoffWhileAuthenticated, etsysMulti1xActiveAccessEntityTable=etsysMulti1xActiveAccessEntityTable, etsysMulti1xSupplicantUserName=etsysMulti1xSupplicantUserName, etsysMulti1xAeEapolRespIdFramesRx=etsysMulti1xAeEapolRespIdFramesRx, etsysMultiUser8021xUserNameGroup=etsysMultiUser8021xUserNameGroup, etsysMulti1xSessionOctetsRx=etsysMulti1xSessionOctetsRx, etsysMulti1xAeBackendOtherRequestsToSupplicant=etsysMulti1xAeBackendOtherRequestsToSupplicant, etsysMulti1xAccessEntityEntry=etsysMulti1xAccessEntityEntry, etsysMulti1xUserNameEntry=etsysMulti1xUserNameEntry, etsysMulti1xSessionUserName=etsysMulti1xSessionUserName, etsysMulti1xAeAuthReauthsWhileAuthenticating=etsysMulti1xAeAuthReauthsWhileAuthenticating, etsysMulti1xAeState=etsysMulti1xAeState, etsysMulti1xSessionFramesTx=etsysMulti1xSessionFramesTx, etsysMulti8021xCompliance=etsysMulti8021xCompliance, etsysMulti1xAeBackendAuthState=etsysMulti1xAeBackendAuthState, etsysMulti1xAeEapolReqFramesTx=etsysMulti1xAeEapolReqFramesTx, etsysMulti1xAeEapolFrameVersion=etsysMulti1xAeEapolFrameVersion, etsysMulti1xAccessEntityTable=etsysMulti1xAccessEntityTable, etsysMulti1xSessionAuthenticMethod=etsysMulti1xSessionAuthenticMethod, etsysMulti1xAeSupplicantAddress=etsysMulti1xAeSupplicantAddress, etsysMulti1xSessionActive=etsysMulti1xSessionActive, etsysMulti1xAeAuthFailWhileAuthenticating=etsysMulti1xAeAuthFailWhileAuthenticating, etsysMulti1xAeAuthEapStartsWhileAuthenticated=etsysMulti1xAeAuthEapStartsWhileAuthenticated, etsysMulti1xAeEapolFrameSource=etsysMulti1xAeEapolFrameSource, etsysMulti1xSupplicantActive=etsysMulti1xSupplicantActive, etsysMulti1xAeEapolStartFramesRx=etsysMulti1xAeEapolStartFramesRx, etsysMulti1xAeAuthEapStartsWhileAuthenticating=etsysMulti1xAeAuthEapStartsWhileAuthenticating, etsysMulti1xAeBackendAuthFails=etsysMulti1xAeBackendAuthFails, etsysMultiUser8021xAccessEntityDiagGroup=etsysMultiUser8021xAccessEntityDiagGroup, etsysMulti1xAeAuthEapLogoffWhileAuthenticating=etsysMulti1xAeAuthEapLogoffWhileAuthenticating, etsysMulti1xUserAddress=etsysMulti1xUserAddress, etsysMulti1xAeDiagTable=etsysMulti1xAeDiagTable, etsysMulti1xAeReauthenticate=etsysMulti1xAeReauthenticate, etsysMulti1xUserNameTable=etsysMulti1xUserNameTable, etsysMultiUser8021xAccessEntityStatsGroup=etsysMultiUser8021xAccessEntityStatsGroup, etsysMulti1xAeAuthReauthsWhileAuthenticated=etsysMulti1xAeAuthReauthsWhileAuthenticated, etsysMulti1xAeReAuthPeriod=etsysMulti1xAeReAuthPeriod, etsysMulti1xAeEapolLogoffFramesRx=etsysMulti1xAeEapolLogoffFramesRx, etsysMultiUser8021xGroups=etsysMultiUser8021xGroups, etsysMulti1xAeBackendNonNakResponsesFromSupplicant=etsysMulti1xAeBackendNonNakResponsesFromSupplicant, etsysMulti1xAeEapolFramesTx=etsysMulti1xAeEapolFramesTx, etsysMulti1xAeAuthTimeoutsWhileAuthenticating=etsysMulti1xAeAuthTimeoutsWhileAuthenticating, etsysMulti1xAeEntersAuthenticating=etsysMulti1xAeEntersAuthenticating, etsysMulti1xSessionFramesRx=etsysMulti1xSessionFramesRx, etsysMultiUser8021xAccessEntity=etsysMultiUser8021xAccessEntity, etsysMulti1xAeActive=etsysMulti1xAeActive, etsysMultiUser8021xCompliances=etsysMultiUser8021xCompliances, etsysMulti1xActiveSupplicantAddress=etsysMulti1xActiveSupplicantAddress, etsysMulti1xAeInvalidEapolFramesRx=etsysMulti1xAeInvalidEapolFramesRx, etsysMultiUser8021xActiveAccessEntityGroup=etsysMultiUser8021xActiveAccessEntityGroup, etsysMulti1xSessionId=etsysMulti1xSessionId, etsysMulti1xSessionOctetsTx=etsysMulti1xSessionOctetsTx, etsysMulti1xAeAuthSuccessWhileAuthenticating=etsysMulti1xAeAuthSuccessWhileAuthenticating, etsysMulti1xAeBackendAccessChallenges=etsysMulti1xAeBackendAccessChallenges, etsysMulti1xUserActive=etsysMulti1xUserActive, etsysMulti1xAeDiagEntry=etsysMulti1xAeDiagEntry, etsysMultiUser8021xSystem=etsysMultiUser8021xSystem, etsysMulti1xSessionTime=etsysMulti1xSessionTime, etsysMulti1xAeEapolReqIdFramesTx=etsysMulti1xAeEapolReqIdFramesTx, etsysMulti1xActiveAccessEntityEntry=etsysMulti1xActiveAccessEntityEntry, etsysMulti1xAeBackendAuthSuccesses=etsysMulti1xAeBackendAuthSuccesses, etsysMulti1xAeIndex=etsysMulti1xAeIndex, etsysMulti1xAeEapolRespFramesRx=etsysMulti1xAeEapolRespFramesRx, etsysMulti1xUserNameIndex=etsysMulti1xUserNameIndex, etsysMultiUser8021xMIB=etsysMultiUser8021xMIB, etsysMulti1xAeUserName=etsysMulti1xAeUserName, etsysMulti1xAeEapLengthErrorFramesRx=etsysMulti1xAeEapLengthErrorFramesRx, etsysMultiUser8021xAccessEntityGroup=etsysMultiUser8021xAccessEntityGroup, etsysMulti1xSessionTerminateCause=etsysMulti1xSessionTerminateCause, etsysMulti1xUserName=etsysMulti1xUserName, etsysMultiUser8021xConformance=etsysMultiUser8021xConformance, etsysMulti1xAeEntersConnecting=etsysMulti1xAeEntersConnecting, etsysMulti1xAeEapLogoffsWhileConnecting=etsysMulti1xAeEapLogoffsWhileConnecting, etsysMulti1xSessionStatsTable=etsysMulti1xSessionStatsTable, PYSNMP_MODULE_ID=etsysMultiUser8021xMIB, etsysMulti1xSupplicantAddressTable=etsysMulti1xSupplicantAddressTable, etsysMulti1xAccessEntityStatsEntry=etsysMulti1xAccessEntityStatsEntry, etsysMultiUser8021xObjects=etsysMultiUser8021xObjects, etsysMulti1xAccessEntityStatsTable=etsysMulti1xAccessEntityStatsTable, etsysMultiUser8021xAccessEntitySessionGroup=etsysMultiUser8021xAccessEntitySessionGroup, etsysMultiUser8021xSupplicantAddressGroup=etsysMultiUser8021xSupplicantAddressGroup, etsysMulti1xSupplicantAddressEntry=etsysMulti1xSupplicantAddressEntry, etsysMulti1xAeBackendResponses=etsysMulti1xAeBackendResponses)
