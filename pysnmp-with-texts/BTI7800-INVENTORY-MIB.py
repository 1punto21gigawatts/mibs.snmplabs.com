#
# PySNMP MIB module BTI7800-INVENTORY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BTI7800-INVENTORY-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:41:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Bits, enterprises, ModuleIdentity, Integer32, Gauge32, ObjectIdentity, MibIdentifier, IpAddress, iso, Counter32, TimeTicks, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Bits", "enterprises", "ModuleIdentity", "Integer32", "Gauge32", "ObjectIdentity", "MibIdentifier", "IpAddress", "iso", "Counter32", "TimeTicks", "Counter64")
TextualConvention, RowStatus, TruthValue, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "TruthValue", "DateAndTime", "DisplayString")
bTI7800_INVENTORY_MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2)).setLabel("bTI7800-INVENTORY-MIB")
bTI7800_INVENTORY_MIB.setRevisions(('2014-12-23 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: bTI7800_INVENTORY_MIB.setRevisionsDescriptions(('@REVISION-DESCRIPTION',))
if mibBuilder.loadTexts: bTI7800_INVENTORY_MIB.setLastUpdated('201412230000Z')
if mibBuilder.loadTexts: bTI7800_INVENTORY_MIB.setOrganization('@ORGANIZATION')
if mibBuilder.loadTexts: bTI7800_INVENTORY_MIB.setContactInfo('@CONTACT-INFO')
if mibBuilder.loadTexts: bTI7800_INVENTORY_MIB.setDescription('This module provides object definitions for system inventory and provisioned equipment on a BTI7800')
class UnsignedByte(TextualConvention, Unsigned32):
    description = 'xs:unsignedByte'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

class UnsignedShort(TextualConvention, Unsigned32):
    description = 'xs:unsignedShort'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class ConfdString(TextualConvention, OctetString):
    description = 'xs: and confd: types mapped to strings'
    status = 'current'
    displayHint = '1t'

class InetAddressIP(TextualConvention, OctetString):
    description = 'confd:inetAddressIP'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )
class String(TextualConvention, OctetString):
    description = 'xs:string'
    status = 'current'
    displayHint = '1t'

class BicIndexT(TextualConvention, Unsigned32):
    description = 'BIC identifier'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 2)

class FanIndexT(TextualConvention, Unsigned32):
    description = 'Fan identifier'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 6)

class PemIndexT(TextualConvention, Unsigned32):
    description = 'PEM identifier'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4)

class CmmIndexT(TextualConvention, Unsigned32):
    description = 'CMM identifier'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 2)

class PortIndexT(TextualConvention, Unsigned32):
    description = 'Port identifier on a BIC'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 12)

class ModuleIndexT(TextualConvention, Unsigned32):
    description = 'Module (payload card) identifier'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 14)

class ChassisIndexT(TextualConvention, Unsigned32):
    description = 'Chassis identifier'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 16)

inventory_chassisTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 1), ).setLabel("inventory-chassisTable")
if mibBuilder.loadTexts: inventory_chassisTable.setStatus('current')
if mibBuilder.loadTexts: inventory_chassisTable.setDescription('')
inventory_chassisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 1, 1), ).setLabel("inventory-chassisEntry").setIndexNames((0, "BTI7800-INVENTORY-MIB", "inventory-chassisChassisNum"))
if mibBuilder.loadTexts: inventory_chassisEntry.setStatus('current')
if mibBuilder.loadTexts: inventory_chassisEntry.setDescription('')
inventory_chassisChassisNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 1, 1, 1), ChassisIndexT()).setLabel("inventory-chassisChassisNum")
if mibBuilder.loadTexts: inventory_chassisChassisNum.setStatus('current')
if mibBuilder.loadTexts: inventory_chassisChassisNum.setDescription('Chassis identifier')
inventory_chassisName = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 1, 1, 2), String()).setLabel("inventory-chassisName").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_chassisName.setStatus('current')
if mibBuilder.loadTexts: inventory_chassisName.setDescription('Entity name')
inventory_chassisPEC = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 1, 1, 3), String()).setLabel("inventory-chassisPEC").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_chassisPEC.setStatus('current')
if mibBuilder.loadTexts: inventory_chassisPEC.setDescription('Product Equipment Code assigned by BTI')
inventory_chassisRevision = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 1, 1, 4), UnsignedShort()).setLabel("inventory-chassisRevision").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_chassisRevision.setStatus('current')
if mibBuilder.loadTexts: inventory_chassisRevision.setDescription('Hardware revision number')
inventory_chassisSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 1, 1, 5), String()).setLabel("inventory-chassisSerialNumber").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_chassisSerialNumber.setStatus('current')
if mibBuilder.loadTexts: inventory_chassisSerialNumber.setDescription('Serial number')
inventory_chassisManufactureDate = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 1, 1, 6), DateAndTime()).setLabel("inventory-chassisManufactureDate").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_chassisManufactureDate.setStatus('current')
if mibBuilder.loadTexts: inventory_chassisManufactureDate.setDescription('Manufacturing date')
inventory_chassisVendor = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 1, 1, 7), String()).setLabel("inventory-chassisVendor").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_chassisVendor.setStatus('current')
if mibBuilder.loadTexts: inventory_chassisVendor.setDescription('Vendor name')
inventory_fanTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 2), ).setLabel("inventory-fanTable")
if mibBuilder.loadTexts: inventory_fanTable.setStatus('current')
if mibBuilder.loadTexts: inventory_fanTable.setDescription('')
inventory_fanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 2, 1), ).setLabel("inventory-fanEntry").setIndexNames((0, "BTI7800-INVENTORY-MIB", "inventory-fanChassisNum"), (0, "BTI7800-INVENTORY-MIB", "inventory-fanSlotNum"))
if mibBuilder.loadTexts: inventory_fanEntry.setStatus('current')
if mibBuilder.loadTexts: inventory_fanEntry.setDescription('')
inventory_fanChassisNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 2, 1, 1), ChassisIndexT()).setLabel("inventory-fanChassisNum")
if mibBuilder.loadTexts: inventory_fanChassisNum.setStatus('current')
if mibBuilder.loadTexts: inventory_fanChassisNum.setDescription('Chassis identifier')
inventory_fanSlotNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 2, 1, 2), FanIndexT()).setLabel("inventory-fanSlotNum")
if mibBuilder.loadTexts: inventory_fanSlotNum.setStatus('current')
if mibBuilder.loadTexts: inventory_fanSlotNum.setDescription('Fan identifier')
inventory_fanName = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 2, 1, 3), String()).setLabel("inventory-fanName").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_fanName.setStatus('current')
if mibBuilder.loadTexts: inventory_fanName.setDescription('Entity name')
inventory_fanPEC = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 2, 1, 4), String()).setLabel("inventory-fanPEC").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_fanPEC.setStatus('current')
if mibBuilder.loadTexts: inventory_fanPEC.setDescription('Product Equipment Code assigned by BTI')
inventory_fanRevision = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 2, 1, 5), UnsignedShort()).setLabel("inventory-fanRevision").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_fanRevision.setStatus('current')
if mibBuilder.loadTexts: inventory_fanRevision.setDescription('Hardware revision number')
inventory_fanSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 2, 1, 6), String()).setLabel("inventory-fanSerialNumber").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_fanSerialNumber.setStatus('current')
if mibBuilder.loadTexts: inventory_fanSerialNumber.setDescription('Serial number')
inventory_fanManufactureDate = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 2, 1, 7), DateAndTime()).setLabel("inventory-fanManufactureDate").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_fanManufactureDate.setStatus('current')
if mibBuilder.loadTexts: inventory_fanManufactureDate.setDescription('Manufacturing date')
inventory_fanVendor = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 2, 1, 8), String()).setLabel("inventory-fanVendor").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_fanVendor.setStatus('current')
if mibBuilder.loadTexts: inventory_fanVendor.setDescription('Vendor name')
inventory_pemTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 3), ).setLabel("inventory-pemTable")
if mibBuilder.loadTexts: inventory_pemTable.setStatus('current')
if mibBuilder.loadTexts: inventory_pemTable.setDescription('')
inventory_pemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 3, 1), ).setLabel("inventory-pemEntry").setIndexNames((0, "BTI7800-INVENTORY-MIB", "inventory-pemChassisNum"), (0, "BTI7800-INVENTORY-MIB", "inventory-pemSlotNum"))
if mibBuilder.loadTexts: inventory_pemEntry.setStatus('current')
if mibBuilder.loadTexts: inventory_pemEntry.setDescription('')
inventory_pemChassisNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 3, 1, 1), ChassisIndexT()).setLabel("inventory-pemChassisNum")
if mibBuilder.loadTexts: inventory_pemChassisNum.setStatus('current')
if mibBuilder.loadTexts: inventory_pemChassisNum.setDescription('Chassis identifier')
inventory_pemSlotNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 3, 1, 2), PemIndexT()).setLabel("inventory-pemSlotNum")
if mibBuilder.loadTexts: inventory_pemSlotNum.setStatus('current')
if mibBuilder.loadTexts: inventory_pemSlotNum.setDescription('PEM identifier')
inventory_pemName = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 3, 1, 3), String()).setLabel("inventory-pemName").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_pemName.setStatus('current')
if mibBuilder.loadTexts: inventory_pemName.setDescription('Entity name')
inventory_pemPEC = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 3, 1, 4), String()).setLabel("inventory-pemPEC").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_pemPEC.setStatus('current')
if mibBuilder.loadTexts: inventory_pemPEC.setDescription('Product Equipment Code assigned by BTI')
inventory_pemRevision = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 3, 1, 5), UnsignedShort()).setLabel("inventory-pemRevision").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_pemRevision.setStatus('current')
if mibBuilder.loadTexts: inventory_pemRevision.setDescription('Hardware revision number')
inventory_pemSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 3, 1, 6), String()).setLabel("inventory-pemSerialNumber").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_pemSerialNumber.setStatus('current')
if mibBuilder.loadTexts: inventory_pemSerialNumber.setDescription('Serial number')
inventory_pemManufactureDate = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 3, 1, 7), DateAndTime()).setLabel("inventory-pemManufactureDate").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_pemManufactureDate.setStatus('current')
if mibBuilder.loadTexts: inventory_pemManufactureDate.setDescription('Manufacturing date')
inventory_pemVendor = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 3, 1, 8), String()).setLabel("inventory-pemVendor").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_pemVendor.setStatus('current')
if mibBuilder.loadTexts: inventory_pemVendor.setDescription('Vendor name')
inventory_cmmTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 4), ).setLabel("inventory-cmmTable")
if mibBuilder.loadTexts: inventory_cmmTable.setStatus('current')
if mibBuilder.loadTexts: inventory_cmmTable.setDescription('')
inventory_cmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 4, 1), ).setLabel("inventory-cmmEntry").setIndexNames((0, "BTI7800-INVENTORY-MIB", "inventory-cmmChassisNum"), (0, "BTI7800-INVENTORY-MIB", "inventory-cmmSlotNum"))
if mibBuilder.loadTexts: inventory_cmmEntry.setStatus('current')
if mibBuilder.loadTexts: inventory_cmmEntry.setDescription('')
inventory_cmmChassisNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 4, 1, 1), ChassisIndexT()).setLabel("inventory-cmmChassisNum")
if mibBuilder.loadTexts: inventory_cmmChassisNum.setStatus('current')
if mibBuilder.loadTexts: inventory_cmmChassisNum.setDescription('Chassis identifier')
inventory_cmmSlotNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 4, 1, 2), CmmIndexT()).setLabel("inventory-cmmSlotNum")
if mibBuilder.loadTexts: inventory_cmmSlotNum.setStatus('current')
if mibBuilder.loadTexts: inventory_cmmSlotNum.setDescription('CMM identifier')
inventory_cmmName = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 4, 1, 3), String()).setLabel("inventory-cmmName").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_cmmName.setStatus('current')
if mibBuilder.loadTexts: inventory_cmmName.setDescription('Entity name')
inventory_cmmPEC = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 4, 1, 4), String()).setLabel("inventory-cmmPEC").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_cmmPEC.setStatus('current')
if mibBuilder.loadTexts: inventory_cmmPEC.setDescription('Product Equipment Code assigned by BTI')
inventory_cmmRevision = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 4, 1, 5), UnsignedShort()).setLabel("inventory-cmmRevision").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_cmmRevision.setStatus('current')
if mibBuilder.loadTexts: inventory_cmmRevision.setDescription('Hardware revision number')
inventory_cmmSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 4, 1, 6), String()).setLabel("inventory-cmmSerialNumber").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_cmmSerialNumber.setStatus('current')
if mibBuilder.loadTexts: inventory_cmmSerialNumber.setDescription('Serial number')
inventory_cmmManufactureDate = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 4, 1, 7), DateAndTime()).setLabel("inventory-cmmManufactureDate").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_cmmManufactureDate.setStatus('current')
if mibBuilder.loadTexts: inventory_cmmManufactureDate.setDescription('Manufacturing date')
inventory_cmmVendor = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 4, 1, 8), String()).setLabel("inventory-cmmVendor").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_cmmVendor.setStatus('current')
if mibBuilder.loadTexts: inventory_cmmVendor.setDescription('Vendor name')
inventory_moduleTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 5), ).setLabel("inventory-moduleTable")
if mibBuilder.loadTexts: inventory_moduleTable.setStatus('current')
if mibBuilder.loadTexts: inventory_moduleTable.setDescription('')
inventory_moduleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 5, 1), ).setLabel("inventory-moduleEntry").setIndexNames((0, "BTI7800-INVENTORY-MIB", "inventory-moduleChassisNum"), (0, "BTI7800-INVENTORY-MIB", "inventory-moduleSlotNum"))
if mibBuilder.loadTexts: inventory_moduleEntry.setStatus('current')
if mibBuilder.loadTexts: inventory_moduleEntry.setDescription('')
inventory_moduleChassisNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 5, 1, 1), ChassisIndexT()).setLabel("inventory-moduleChassisNum")
if mibBuilder.loadTexts: inventory_moduleChassisNum.setStatus('current')
if mibBuilder.loadTexts: inventory_moduleChassisNum.setDescription('Chassis identifier')
inventory_moduleSlotNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 5, 1, 2), ModuleIndexT()).setLabel("inventory-moduleSlotNum")
if mibBuilder.loadTexts: inventory_moduleSlotNum.setStatus('current')
if mibBuilder.loadTexts: inventory_moduleSlotNum.setDescription('Module identifier')
inventory_moduleName = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 5, 1, 3), String()).setLabel("inventory-moduleName").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_moduleName.setStatus('current')
if mibBuilder.loadTexts: inventory_moduleName.setDescription('Entity name')
inventory_modulePEC = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 5, 1, 4), String()).setLabel("inventory-modulePEC").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_modulePEC.setStatus('current')
if mibBuilder.loadTexts: inventory_modulePEC.setDescription('Product Equipment Code assigned by BTI')
inventory_moduleRevision = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 5, 1, 5), UnsignedShort()).setLabel("inventory-moduleRevision").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_moduleRevision.setStatus('current')
if mibBuilder.loadTexts: inventory_moduleRevision.setDescription('Hardware revision number')
inventory_moduleSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 5, 1, 6), String()).setLabel("inventory-moduleSerialNumber").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_moduleSerialNumber.setStatus('current')
if mibBuilder.loadTexts: inventory_moduleSerialNumber.setDescription('Serial number')
inventory_moduleManufactureDate = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 5, 1, 7), DateAndTime()).setLabel("inventory-moduleManufactureDate").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_moduleManufactureDate.setStatus('current')
if mibBuilder.loadTexts: inventory_moduleManufactureDate.setDescription('Manufacturing date')
inventory_moduleVendor = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 5, 1, 8), String()).setLabel("inventory-moduleVendor").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_moduleVendor.setStatus('current')
if mibBuilder.loadTexts: inventory_moduleVendor.setDescription('Vendor name')
inventory_bicTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 6), ).setLabel("inventory-bicTable")
if mibBuilder.loadTexts: inventory_bicTable.setStatus('current')
if mibBuilder.loadTexts: inventory_bicTable.setDescription('')
inventory_bicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 6, 1), ).setLabel("inventory-bicEntry").setIndexNames((0, "BTI7800-INVENTORY-MIB", "inventory-bicChassisNum"), (0, "BTI7800-INVENTORY-MIB", "inventory-bicSlotNum"), (0, "BTI7800-INVENTORY-MIB", "inventory-bicSubslotNum"))
if mibBuilder.loadTexts: inventory_bicEntry.setStatus('current')
if mibBuilder.loadTexts: inventory_bicEntry.setDescription('')
inventory_bicChassisNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 6, 1, 1), ChassisIndexT()).setLabel("inventory-bicChassisNum")
if mibBuilder.loadTexts: inventory_bicChassisNum.setStatus('current')
if mibBuilder.loadTexts: inventory_bicChassisNum.setDescription('Chassis identifier')
inventory_bicSlotNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 6, 1, 2), ModuleIndexT()).setLabel("inventory-bicSlotNum")
if mibBuilder.loadTexts: inventory_bicSlotNum.setStatus('current')
if mibBuilder.loadTexts: inventory_bicSlotNum.setDescription('Module identifier')
inventory_bicSubslotNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 6, 1, 3), BicIndexT()).setLabel("inventory-bicSubslotNum")
if mibBuilder.loadTexts: inventory_bicSubslotNum.setStatus('current')
if mibBuilder.loadTexts: inventory_bicSubslotNum.setDescription('Subslot identifier')
inventory_bicName = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 6, 1, 4), String()).setLabel("inventory-bicName").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_bicName.setStatus('current')
if mibBuilder.loadTexts: inventory_bicName.setDescription('Entity name')
inventory_bicPEC = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 6, 1, 5), String()).setLabel("inventory-bicPEC").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_bicPEC.setStatus('current')
if mibBuilder.loadTexts: inventory_bicPEC.setDescription('Product Equipment Code assigned by BTI')
inventory_bicRevision = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 6, 1, 6), UnsignedShort()).setLabel("inventory-bicRevision").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_bicRevision.setStatus('current')
if mibBuilder.loadTexts: inventory_bicRevision.setDescription('Hardware revision number')
inventory_bicSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 6, 1, 7), String()).setLabel("inventory-bicSerialNumber").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_bicSerialNumber.setStatus('current')
if mibBuilder.loadTexts: inventory_bicSerialNumber.setDescription('Serial number')
inventory_bicManufactureDate = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 6, 1, 8), DateAndTime()).setLabel("inventory-bicManufactureDate").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_bicManufactureDate.setStatus('current')
if mibBuilder.loadTexts: inventory_bicManufactureDate.setDescription('Manufacturing date')
inventory_bicVendor = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 6, 1, 9), String()).setLabel("inventory-bicVendor").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_bicVendor.setStatus('current')
if mibBuilder.loadTexts: inventory_bicVendor.setDescription('Vendor name')
inventory_xcvrTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 7), ).setLabel("inventory-xcvrTable")
if mibBuilder.loadTexts: inventory_xcvrTable.setStatus('current')
if mibBuilder.loadTexts: inventory_xcvrTable.setDescription('')
inventory_xcvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 7, 1), ).setLabel("inventory-xcvrEntry").setIndexNames((0, "BTI7800-INVENTORY-MIB", "inventory-xcvrChassisNum"), (0, "BTI7800-INVENTORY-MIB", "inventory-xcvrSlotNum"), (0, "BTI7800-INVENTORY-MIB", "inventory-xcvrSubslotNum"), (0, "BTI7800-INVENTORY-MIB", "inventory-xcvrPortNum"))
if mibBuilder.loadTexts: inventory_xcvrEntry.setStatus('current')
if mibBuilder.loadTexts: inventory_xcvrEntry.setDescription('')
inventory_xcvrChassisNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 7, 1, 1), ChassisIndexT()).setLabel("inventory-xcvrChassisNum")
if mibBuilder.loadTexts: inventory_xcvrChassisNum.setStatus('current')
if mibBuilder.loadTexts: inventory_xcvrChassisNum.setDescription('Chassis identifier')
inventory_xcvrSlotNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 7, 1, 2), ModuleIndexT()).setLabel("inventory-xcvrSlotNum")
if mibBuilder.loadTexts: inventory_xcvrSlotNum.setStatus('current')
if mibBuilder.loadTexts: inventory_xcvrSlotNum.setDescription('Module identifier')
inventory_xcvrSubslotNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 7, 1, 3), BicIndexT()).setLabel("inventory-xcvrSubslotNum")
if mibBuilder.loadTexts: inventory_xcvrSubslotNum.setStatus('current')
if mibBuilder.loadTexts: inventory_xcvrSubslotNum.setDescription('Subslot identifier')
inventory_xcvrPortNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 7, 1, 4), PortIndexT()).setLabel("inventory-xcvrPortNum")
if mibBuilder.loadTexts: inventory_xcvrPortNum.setStatus('current')
if mibBuilder.loadTexts: inventory_xcvrPortNum.setDescription('Port identifier')
inventory_xcvrName = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 7, 1, 5), String()).setLabel("inventory-xcvrName").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_xcvrName.setStatus('current')
if mibBuilder.loadTexts: inventory_xcvrName.setDescription('Entity name')
inventory_xcvrPEC = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 7, 1, 6), String()).setLabel("inventory-xcvrPEC").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_xcvrPEC.setStatus('current')
if mibBuilder.loadTexts: inventory_xcvrPEC.setDescription('Product Equipment Code assigned by BTI')
inventory_xcvrRevision = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 7, 1, 7), UnsignedShort()).setLabel("inventory-xcvrRevision").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_xcvrRevision.setStatus('current')
if mibBuilder.loadTexts: inventory_xcvrRevision.setDescription('Hardware revision number')
inventory_xcvrSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 7, 1, 8), String()).setLabel("inventory-xcvrSerialNumber").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_xcvrSerialNumber.setStatus('current')
if mibBuilder.loadTexts: inventory_xcvrSerialNumber.setDescription('Serial number')
inventory_xcvrManufactureDate = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 7, 1, 9), DateAndTime()).setLabel("inventory-xcvrManufactureDate").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_xcvrManufactureDate.setStatus('current')
if mibBuilder.loadTexts: inventory_xcvrManufactureDate.setDescription('Manufacturing date')
inventory_xcvrVendor = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 7, 1, 10), String()).setLabel("inventory-xcvrVendor").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_xcvrVendor.setStatus('current')
if mibBuilder.loadTexts: inventory_xcvrVendor.setDescription('Vendor name')
inventory_xcvrVendorPartNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 7, 1, 11), String()).setLabel("inventory-xcvrVendorPartNum").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_xcvrVendorPartNum.setStatus('current')
if mibBuilder.loadTexts: inventory_xcvrVendorPartNum.setDescription('Transceiver part number assigned by the vendor')
inventory_xcvrType = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 7, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 0), ("sfp", 1), ("sfpPlus", 2), ("cfp", 3), ("msa", 4), ("qsfp", 5), ("qsfp28", 6), ("msa400", 7)))).setLabel("inventory-xcvrType").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_xcvrType.setStatus('current')
if mibBuilder.loadTexts: inventory_xcvrType.setDescription('Transceiver type')
inventory_preampTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 8), ).setLabel("inventory-preampTable")
if mibBuilder.loadTexts: inventory_preampTable.setStatus('current')
if mibBuilder.loadTexts: inventory_preampTable.setDescription('')
inventory_preampEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 8, 1), ).setLabel("inventory-preampEntry").setIndexNames((0, "BTI7800-INVENTORY-MIB", "inventory-preampChassisNum"), (0, "BTI7800-INVENTORY-MIB", "inventory-preampSlotNum"), (0, "BTI7800-INVENTORY-MIB", "inventory-preampSubslotNum"))
if mibBuilder.loadTexts: inventory_preampEntry.setStatus('current')
if mibBuilder.loadTexts: inventory_preampEntry.setDescription('')
inventory_preampChassisNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 8, 1, 1), ChassisIndexT()).setLabel("inventory-preampChassisNum")
if mibBuilder.loadTexts: inventory_preampChassisNum.setStatus('current')
if mibBuilder.loadTexts: inventory_preampChassisNum.setDescription('Chassis identifier')
inventory_preampSlotNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 8, 1, 2), ModuleIndexT()).setLabel("inventory-preampSlotNum")
if mibBuilder.loadTexts: inventory_preampSlotNum.setStatus('current')
if mibBuilder.loadTexts: inventory_preampSlotNum.setDescription('Module identifier')
inventory_preampSubslotNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 8, 1, 3), BicIndexT()).setLabel("inventory-preampSubslotNum")
if mibBuilder.loadTexts: inventory_preampSubslotNum.setStatus('current')
if mibBuilder.loadTexts: inventory_preampSubslotNum.setDescription('Subslot identifier')
inventory_preampName = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 8, 1, 4), String()).setLabel("inventory-preampName").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_preampName.setStatus('current')
if mibBuilder.loadTexts: inventory_preampName.setDescription('Entity name')
inventory_preampPEC = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 8, 1, 5), String()).setLabel("inventory-preampPEC").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_preampPEC.setStatus('current')
if mibBuilder.loadTexts: inventory_preampPEC.setDescription('Product Equipment Code assigned by BTI')
inventory_preampRevision = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 8, 1, 6), UnsignedShort()).setLabel("inventory-preampRevision").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_preampRevision.setStatus('current')
if mibBuilder.loadTexts: inventory_preampRevision.setDescription('Hardware revision number')
inventory_preampSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 8, 1, 7), String()).setLabel("inventory-preampSerialNumber").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_preampSerialNumber.setStatus('current')
if mibBuilder.loadTexts: inventory_preampSerialNumber.setDescription('Serial number')
inventory_preampManufactureDate = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 8, 1, 8), DateAndTime()).setLabel("inventory-preampManufactureDate").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_preampManufactureDate.setStatus('current')
if mibBuilder.loadTexts: inventory_preampManufactureDate.setDescription('Manufacturing date')
inventory_preampVendor = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 8, 1, 9), String()).setLabel("inventory-preampVendor").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_preampVendor.setStatus('current')
if mibBuilder.loadTexts: inventory_preampVendor.setDescription('Vendor name')
inventory_eslTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 9), ).setLabel("inventory-eslTable")
if mibBuilder.loadTexts: inventory_eslTable.setStatus('current')
if mibBuilder.loadTexts: inventory_eslTable.setDescription('')
inventory_eslEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 9, 1), ).setLabel("inventory-eslEntry").setIndexNames((0, "BTI7800-INVENTORY-MIB", "inventory-eslChassisNum"), (0, "BTI7800-INVENTORY-MIB", "inventory-eslSlotNum"))
if mibBuilder.loadTexts: inventory_eslEntry.setStatus('current')
if mibBuilder.loadTexts: inventory_eslEntry.setDescription('')
inventory_eslChassisNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 9, 1, 1), ChassisIndexT()).setLabel("inventory-eslChassisNum")
if mibBuilder.loadTexts: inventory_eslChassisNum.setStatus('current')
if mibBuilder.loadTexts: inventory_eslChassisNum.setDescription('Chassis identifier')
inventory_eslSlotNum = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 9, 1, 2), UnsignedByte()).setLabel("inventory-eslSlotNum")
if mibBuilder.loadTexts: inventory_eslSlotNum.setStatus('current')
if mibBuilder.loadTexts: inventory_eslSlotNum.setDescription('ESL identifier')
inventory_eslName = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 9, 1, 3), String()).setLabel("inventory-eslName").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_eslName.setStatus('current')
if mibBuilder.loadTexts: inventory_eslName.setDescription('Entity name')
inventory_eslPEC = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 9, 1, 4), String()).setLabel("inventory-eslPEC").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_eslPEC.setStatus('current')
if mibBuilder.loadTexts: inventory_eslPEC.setDescription('Product Equipment Code assigned by BTI')
inventory_eslRevision = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 9, 1, 5), UnsignedShort()).setLabel("inventory-eslRevision").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_eslRevision.setStatus('current')
if mibBuilder.loadTexts: inventory_eslRevision.setDescription('Hardware revision number')
inventory_eslSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 9, 1, 6), String()).setLabel("inventory-eslSerialNumber").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_eslSerialNumber.setStatus('current')
if mibBuilder.loadTexts: inventory_eslSerialNumber.setDescription('Serial number')
inventory_eslManufactureDate = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 9, 1, 7), DateAndTime()).setLabel("inventory-eslManufactureDate").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_eslManufactureDate.setStatus('current')
if mibBuilder.loadTexts: inventory_eslManufactureDate.setDescription('Manufacturing date')
inventory_eslVendor = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 3, 2, 9, 1, 8), String()).setLabel("inventory-eslVendor").setMaxAccess("readonly")
if mibBuilder.loadTexts: inventory_eslVendor.setStatus('current')
if mibBuilder.loadTexts: inventory_eslVendor.setDescription('Vendor name')
mibBuilder.exportSymbols("BTI7800-INVENTORY-MIB", inventory_bicSlotNum=inventory_bicSlotNum, String=String, inventory_preampSerialNumber=inventory_preampSerialNumber, inventory_fanSerialNumber=inventory_fanSerialNumber, inventory_eslRevision=inventory_eslRevision, inventory_chassisPEC=inventory_chassisPEC, inventory_eslChassisNum=inventory_eslChassisNum, inventory_xcvrName=inventory_xcvrName, inventory_moduleEntry=inventory_moduleEntry, inventory_eslEntry=inventory_eslEntry, inventory_pemVendor=inventory_pemVendor, inventory_pemChassisNum=inventory_pemChassisNum, inventory_cmmName=inventory_cmmName, inventory_xcvrPEC=inventory_xcvrPEC, inventory_fanManufactureDate=inventory_fanManufactureDate, inventory_xcvrVendor=inventory_xcvrVendor, inventory_bicEntry=inventory_bicEntry, inventory_fanPEC=inventory_fanPEC, inventory_bicName=inventory_bicName, inventory_eslTable=inventory_eslTable, inventory_chassisChassisNum=inventory_chassisChassisNum, bTI7800_INVENTORY_MIB=bTI7800_INVENTORY_MIB, inventory_eslPEC=inventory_eslPEC, inventory_fanChassisNum=inventory_fanChassisNum, inventory_preampEntry=inventory_preampEntry, inventory_xcvrTable=inventory_xcvrTable, inventory_preampVendor=inventory_preampVendor, inventory_preampSlotNum=inventory_preampSlotNum, inventory_fanTable=inventory_fanTable, inventory_pemSlotNum=inventory_pemSlotNum, inventory_bicTable=inventory_bicTable, inventory_preampManufactureDate=inventory_preampManufactureDate, inventory_eslName=inventory_eslName, inventory_eslSerialNumber=inventory_eslSerialNumber, inventory_cmmManufactureDate=inventory_cmmManufactureDate, FanIndexT=FanIndexT, inventory_cmmPEC=inventory_cmmPEC, inventory_bicVendor=inventory_bicVendor, inventory_xcvrEntry=inventory_xcvrEntry, inventory_cmmRevision=inventory_cmmRevision, inventory_cmmSlotNum=inventory_cmmSlotNum, inventory_xcvrRevision=inventory_xcvrRevision, inventory_preampRevision=inventory_preampRevision, inventory_chassisEntry=inventory_chassisEntry, inventory_xcvrChassisNum=inventory_xcvrChassisNum, inventory_chassisVendor=inventory_chassisVendor, UnsignedByte=UnsignedByte, inventory_cmmChassisNum=inventory_cmmChassisNum, ModuleIndexT=ModuleIndexT, inventory_preampPEC=inventory_preampPEC, inventory_xcvrSerialNumber=inventory_xcvrSerialNumber, inventory_bicPEC=inventory_bicPEC, inventory_xcvrSubslotNum=inventory_xcvrSubslotNum, PortIndexT=PortIndexT, inventory_preampChassisNum=inventory_preampChassisNum, inventory_fanSlotNum=inventory_fanSlotNum, inventory_pemPEC=inventory_pemPEC, inventory_chassisName=inventory_chassisName, inventory_cmmEntry=inventory_cmmEntry, inventory_moduleManufactureDate=inventory_moduleManufactureDate, inventory_moduleSerialNumber=inventory_moduleSerialNumber, inventory_bicRevision=inventory_bicRevision, inventory_cmmTable=inventory_cmmTable, BicIndexT=BicIndexT, inventory_eslSlotNum=inventory_eslSlotNum, inventory_cmmVendor=inventory_cmmVendor, inventory_modulePEC=inventory_modulePEC, ChassisIndexT=ChassisIndexT, inventory_xcvrVendorPartNum=inventory_xcvrVendorPartNum, inventory_moduleTable=inventory_moduleTable, inventory_pemName=inventory_pemName, inventory_bicManufactureDate=inventory_bicManufactureDate, inventory_pemSerialNumber=inventory_pemSerialNumber, PYSNMP_MODULE_ID=bTI7800_INVENTORY_MIB, inventory_moduleVendor=inventory_moduleVendor, ConfdString=ConfdString, inventory_chassisSerialNumber=inventory_chassisSerialNumber, inventory_pemEntry=inventory_pemEntry, inventory_moduleName=inventory_moduleName, inventory_preampSubslotNum=inventory_preampSubslotNum, inventory_fanRevision=inventory_fanRevision, inventory_fanName=inventory_fanName, inventory_eslVendor=inventory_eslVendor, inventory_pemManufactureDate=inventory_pemManufactureDate, inventory_preampTable=inventory_preampTable, inventory_fanEntry=inventory_fanEntry, inventory_moduleSlotNum=inventory_moduleSlotNum, PemIndexT=PemIndexT, inventory_xcvrType=inventory_xcvrType, inventory_preampName=inventory_preampName, inventory_bicChassisNum=inventory_bicChassisNum, inventory_pemRevision=inventory_pemRevision, InetAddressIP=InetAddressIP, inventory_pemTable=inventory_pemTable, inventory_fanVendor=inventory_fanVendor, inventory_bicSerialNumber=inventory_bicSerialNumber, inventory_chassisManufactureDate=inventory_chassisManufactureDate, inventory_xcvrSlotNum=inventory_xcvrSlotNum, inventory_bicSubslotNum=inventory_bicSubslotNum, inventory_xcvrPortNum=inventory_xcvrPortNum, UnsignedShort=UnsignedShort, inventory_xcvrManufactureDate=inventory_xcvrManufactureDate, inventory_chassisTable=inventory_chassisTable, CmmIndexT=CmmIndexT, inventory_moduleChassisNum=inventory_moduleChassisNum, inventory_eslManufactureDate=inventory_eslManufactureDate, inventory_cmmSerialNumber=inventory_cmmSerialNumber, inventory_chassisRevision=inventory_chassisRevision, inventory_moduleRevision=inventory_moduleRevision)
