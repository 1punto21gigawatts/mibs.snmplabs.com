#
# PySNMP MIB module SMA-NOTIFICATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SMA-NOTIFICATION-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:07:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
snmpTraps, = mibBuilder.importSymbols("SNMPv2-MIB", "snmpTraps")
NotificationType, Counter64, iso, ObjectIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, MibIdentifier, Gauge32, Bits, ModuleIdentity, mib_2, IpAddress, enterprises, Integer32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter64", "iso", "ObjectIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "MibIdentifier", "Gauge32", "Bits", "ModuleIdentity", "mib-2", "IpAddress", "enterprises", "Integer32", "Unsigned32")
RowStatus, TimeStamp, AutonomousType, TruthValue, DisplayString, TestAndIncr, TextualConvention, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TimeStamp", "AutonomousType", "TruthValue", "DisplayString", "TestAndIncr", "TextualConvention", "PhysAddress")
notifications = ModuleIdentity((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3))
if mibBuilder.loadTexts: notifications.setLastUpdated('9808040000Z')
if mibBuilder.loadTexts: notifications.setOrganization('Sun Microsystems Inc.')
if mibBuilder.loadTexts: notifications.setContactInfo(' Sun Microsystems Inc 4150 Network Circle Santa Clara, CA 95054 e-mail: service@sun.com ')
if mibBuilder.loadTexts: notifications.setDescription('This MIB module defines notifications that are generated by some monitoring modules loaded on System Management Agent (SMA).')
sun = MibIdentifier((1, 3, 6, 1, 4, 1, 42))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2))
management = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 2))
sma = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 2, 4))
traps = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 0))
trapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 1))
statusChange = NotificationType((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 0, 1)).setObjects(("SMA-NOTIFICATION-MIB", "hostName"), ("SMA-NOTIFICATION-MIB", "moduleName"), ("SMA-NOTIFICATION-MIB", "statusOID"), ("SMA-NOTIFICATION-MIB", "statusOIDContext"), ("SMA-NOTIFICATION-MIB", "status"), ("SMA-NOTIFICATION-MIB", "description"), ("SMA-NOTIFICATION-MIB", "dataValue"), ("SMA-NOTIFICATION-MIB", "dataValueType"))
if mibBuilder.loadTexts: statusChange.setStatus('current')
if mibBuilder.loadTexts: statusChange.setDescription('A statusChange trap signifies that the status of an object has changed.')
hostName = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hostName.setStatus('current')
if mibBuilder.loadTexts: hostName.setDescription('The name of the host on which the event occurred.')
moduleName = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: moduleName.setStatus('current')
if mibBuilder.loadTexts: moduleName.setDescription('The name of the module on which the event has occured.')
statusOID = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 1, 3), ObjectIdentifier()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: statusOID.setStatus('current')
if mibBuilder.loadTexts: statusOID.setDescription('The identification of the object for which the status changed.')
statusOIDContext = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: statusOIDContext.setStatus('current')
if mibBuilder.loadTexts: statusOIDContext.setDescription('The name of context incase the status OID is registered under a particular context. If there is no special context, the value for this field will be null.')
status = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: status.setStatus('current')
if mibBuilder.loadTexts: status.setDescription('The current status of the object. One of OK, INFO, WARNING, ERROR.')
description = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: description.setStatus('current')
if mibBuilder.loadTexts: description.setDescription('The detailed description of the event.')
dataValue = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dataValue.setStatus('current')
if mibBuilder.loadTexts: dataValue.setDescription('The current value of the object, that generates the event.')
dataValueType = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 100))).clone(namedValues=NamedValues(("none", 0), ("integer", 1), ("octetString", 2), ("objectIdentifier", 3), ("integer32", 4), ("ipAddress", 5), ("counter32", 6), ("gauge32", 7), ("unsigned32", 8), ("timeTicks", 9), ("opaque", 10), ("counter64", 11), ("displayString", 12), ("physAddress", 13), ("macAddress", 14), ("truthValue", 15), ("testAndIncr", 16), ("autonomousType", 17), ("variablePointer", 18), ("rowPointer", 19), ("rowStatus", 20), ("storageType", 21), ("tDomain", 22), ("tAddress", 23), ("other", 100)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dataValueType.setStatus('current')
if mibBuilder.loadTexts: dataValueType.setDescription('The data type of the value that is present in dataValue varbind')
mibBuilder.exportSymbols("SMA-NOTIFICATION-MIB", hostName=hostName, moduleName=moduleName, notifications=notifications, statusChange=statusChange, PYSNMP_MODULE_ID=notifications, dataValueType=dataValueType, statusOIDContext=statusOIDContext, sun=sun, dataValue=dataValue, products=products, sma=sma, status=status, description=description, trapInfo=trapInfo, management=management, statusOID=statusOID, traps=traps)
