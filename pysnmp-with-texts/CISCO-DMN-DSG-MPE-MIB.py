#
# PySNMP MIB module CISCO-DMN-DSG-MPE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DMN-DSG-MPE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:55:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ciscoDSGUtilities, = mibBuilder.importSymbols("CISCO-DMN-DSG-ROOT-MIB", "ciscoDSGUtilities")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, iso, ObjectIdentity, Bits, Gauge32, MibIdentifier, IpAddress, Counter64, TimeTicks, ModuleIdentity, Unsigned32, Counter32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "iso", "ObjectIdentity", "Bits", "Gauge32", "MibIdentifier", "IpAddress", "Counter64", "TimeTicks", "ModuleIdentity", "Unsigned32", "Counter32", "Integer32")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
ciscoDSGMPE = ModuleIdentity((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26))
ciscoDSGMPE.setRevisions(('2010-08-30 11:00', '2010-05-07 06:30', '2010-05-03 11:00', '2010-04-12 06:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoDSGMPE.setRevisionsDescriptions(('V01.00.03 2010-08-30 Updated for adherence to SNMPv2 format.', 'V01.00.02 2010-05-07 Added saticMulticastTable.', 'V01.00.01 2010-05-03 mpeConfigForwarding item options - correction.', 'V01.00.00 2010-04-12 Initial Revision.',))
if mibBuilder.loadTexts: ciscoDSGMPE.setLastUpdated('201008301100Z')
if mibBuilder.loadTexts: ciscoDSGMPE.setOrganization('Cisco systems, Inc.')
if mibBuilder.loadTexts: ciscoDSGMPE.setContactInfo('Cisco Systems, Inc. Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553 NETS E-mail: cs-ipsla@cisco.com')
if mibBuilder.loadTexts: ciscoDSGMPE.setDescription('Cisco DSG MPE (Multi Protocol Encapsulation) MIB.')
mpeTable = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2))
mpeConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 1), )
if mibBuilder.loadTexts: mpeConfigTable.setStatus('current')
if mibBuilder.loadTexts: mpeConfigTable.setDescription('MPE cofiguraton table.')
mpeConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 1, 1), ).setIndexNames((0, "CISCO-DMN-DSG-MPE-MIB", "mpeConfigPortID"))
if mibBuilder.loadTexts: mpeConfigEntry.setStatus('current')
if mibBuilder.loadTexts: mpeConfigEntry.setDescription('Entry for MPE Config Table.')
mpeConfigPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: mpeConfigPortID.setStatus('current')
if mibBuilder.loadTexts: mpeConfigPortID.setDescription('Ethernet port ID.Index for MPE Configuration table.')
mpeConfigForwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forwardNone", 1), ("forwardAll", 2), ("forwardFilteredList", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpeConfigForwarding.setStatus('current')
if mibBuilder.loadTexts: mpeConfigForwarding.setDescription('MPECFG forwarding Mode.')
mpeConfigIGMP = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpeConfigIGMP.setStatus('current')
if mibBuilder.loadTexts: mpeConfigIGMP.setDescription('MPECFG IGMP support.')
mpeConfigRIP = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpeConfigRIP.setStatus('current')
if mibBuilder.loadTexts: mpeConfigRIP.setDescription('MPECFG RIP support.')
mpeMultipacket = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 24))).clone(namedValues=NamedValues(("lowerJitter", 1), ("higherBitRate", 24)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpeMultipacket.setStatus('current')
if mibBuilder.loadTexts: mpeMultipacket.setDescription('Multipacket Control.')
unicastTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 2), )
if mibBuilder.loadTexts: unicastTable.setStatus('current')
if mibBuilder.loadTexts: unicastTable.setDescription('Unicast Table.')
unicastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 2, 1), ).setIndexNames((0, "CISCO-DMN-DSG-MPE-MIB", "unicastIdx"))
if mibBuilder.loadTexts: unicastEntry.setStatus('current')
if mibBuilder.loadTexts: unicastEntry.setDescription('Entry for Unicast Table.')
unicastIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6)))
if mibBuilder.loadTexts: unicastIdx.setStatus('current')
if mibBuilder.loadTexts: unicastIdx.setDescription('Index for Unicast Table.')
unicastRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 2, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: unicastRoute.setStatus('current')
if mibBuilder.loadTexts: unicastRoute.setDescription('Destination IP adddress to which the data is to be forwarded. Format: ###.###.###.###, Range of ### is 0 to 255.')
unicastMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: unicastMask.setStatus('current')
if mibBuilder.loadTexts: unicastMask.setDescription('IP Mask for Destination IP address.')
unicastOutputPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: unicastOutputPortID.setStatus('current')
if mibBuilder.loadTexts: unicastOutputPortID.setDescription('Unicast Output port ID.')
unicastGatewayAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 2, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: unicastGatewayAddr.setStatus('current')
if mibBuilder.loadTexts: unicastGatewayAddr.setDescription('Unicast Gateway Address. Format: ###.###.###.###, Range of ### is 0 to 255.')
unicastRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: unicastRowStatus.setStatus('current')
if mibBuilder.loadTexts: unicastRowStatus.setDescription(' MPECFG:UnicastRowStatus.Used to add or delete rows in unicast table.')
staticMulticastTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 3), )
if mibBuilder.loadTexts: staticMulticastTable.setStatus('current')
if mibBuilder.loadTexts: staticMulticastTable.setDescription('Static Multicast Table.')
staticMulticastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 3, 1), ).setIndexNames((0, "CISCO-DMN-DSG-MPE-MIB", "staticMulticastIdx"))
if mibBuilder.loadTexts: staticMulticastEntry.setStatus('current')
if mibBuilder.loadTexts: staticMulticastEntry.setDescription('Entry for Static Multicast Table.')
staticMulticastIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: staticMulticastIdx.setStatus('current')
if mibBuilder.loadTexts: staticMulticastIdx.setDescription('Index for Static Multicast Table.')
staticMulticastGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 3, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: staticMulticastGroupAddress.setStatus('current')
if mibBuilder.loadTexts: staticMulticastGroupAddress.setDescription('Static Multicast group address. The allowed range is from 224.0.0.0 to 239.255.255.255.')
staticMulticastRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 2, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: staticMulticastRowstatus.setStatus('current')
if mibBuilder.loadTexts: staticMulticastRowstatus.setDescription('Static Multicast table row status. Used to add or delete rows in this table.')
mpeMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 3))
mpeMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 3, 1))
mpeMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 3, 2))
mpeCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 3, 1, 1)).setObjects(("CISCO-DMN-DSG-MPE-MIB", "mpeConfigGroup"), ("CISCO-DMN-DSG-MPE-MIB", "unicastGroup"), ("CISCO-DMN-DSG-MPE-MIB", "staticMulticastGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mpeCompliance = mpeCompliance.setStatus('current')
if mibBuilder.loadTexts: mpeCompliance.setDescription('The compliance statement for SNMP entities which implement the MPE mib.')
mpeConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 3, 2, 1)).setObjects(("CISCO-DMN-DSG-MPE-MIB", "mpeConfigForwarding"), ("CISCO-DMN-DSG-MPE-MIB", "mpeConfigIGMP"), ("CISCO-DMN-DSG-MPE-MIB", "mpeConfigRIP"), ("CISCO-DMN-DSG-MPE-MIB", "mpeMultipacket"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mpeConfigGroup = mpeConfigGroup.setStatus('current')
if mibBuilder.loadTexts: mpeConfigGroup.setDescription('A collection of objects for MPE configuration.')
unicastGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 3, 2, 2)).setObjects(("CISCO-DMN-DSG-MPE-MIB", "unicastRoute"), ("CISCO-DMN-DSG-MPE-MIB", "unicastMask"), ("CISCO-DMN-DSG-MPE-MIB", "unicastOutputPortID"), ("CISCO-DMN-DSG-MPE-MIB", "unicastGatewayAddr"), ("CISCO-DMN-DSG-MPE-MIB", "unicastRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    unicastGroup = unicastGroup.setStatus('current')
if mibBuilder.loadTexts: unicastGroup.setDescription('A collection of objects for Unicast table.')
staticMulticastGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 26, 3, 2, 3)).setObjects(("CISCO-DMN-DSG-MPE-MIB", "staticMulticastGroupAddress"), ("CISCO-DMN-DSG-MPE-MIB", "staticMulticastRowstatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    staticMulticastGroup = staticMulticastGroup.setStatus('current')
if mibBuilder.loadTexts: staticMulticastGroup.setDescription('A collection of objects for Static Multicast table.')
mibBuilder.exportSymbols("CISCO-DMN-DSG-MPE-MIB", ciscoDSGMPE=ciscoDSGMPE, mpeConfigRIP=mpeConfigRIP, unicastGatewayAddr=unicastGatewayAddr, mpeMIBCompliances=mpeMIBCompliances, unicastEntry=unicastEntry, unicastIdx=unicastIdx, mpeConfigEntry=mpeConfigEntry, unicastRoute=unicastRoute, mpeTable=mpeTable, unicastRowStatus=unicastRowStatus, staticMulticastIdx=staticMulticastIdx, mpeMIBConformance=mpeMIBConformance, staticMulticastGroupAddress=staticMulticastGroupAddress, mpeMIBGroups=mpeMIBGroups, staticMulticastGroup=staticMulticastGroup, unicastTable=unicastTable, mpeConfigTable=mpeConfigTable, staticMulticastTable=staticMulticastTable, mpeCompliance=mpeCompliance, unicastMask=unicastMask, staticMulticastEntry=staticMulticastEntry, unicastGroup=unicastGroup, mpeConfigIGMP=mpeConfigIGMP, mpeConfigGroup=mpeConfigGroup, unicastOutputPortID=unicastOutputPortID, staticMulticastRowstatus=staticMulticastRowstatus, mpeConfigForwarding=mpeConfigForwarding, mpeMultipacket=mpeMultipacket, mpeConfigPortID=mpeConfigPortID, PYSNMP_MODULE_ID=ciscoDSGMPE)
