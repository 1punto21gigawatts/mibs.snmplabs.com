#
# PySNMP MIB module H3C-MS-MAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-MS-MAN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:23:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
PhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "PhysicalIndex")
h3cSurveillanceMIB, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cSurveillanceMIB")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, Counter32, Counter64, iso, Bits, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, TimeTicks, ModuleIdentity, Gauge32, Unsigned32, IpAddress, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter32", "Counter64", "iso", "Bits", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "TimeTicks", "ModuleIdentity", "Gauge32", "Unsigned32", "IpAddress", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
h3cMSMan = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3))
if mibBuilder.loadTexts: h3cMSMan.setLastUpdated('200708130000Z')
if mibBuilder.loadTexts: h3cMSMan.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
if mibBuilder.loadTexts: h3cMSMan.setContactInfo('Surveillance Network Management Team H3C Technologies Co.,Ltd. East-Com Information Industry Base, Bing-Jiang District Hangzhou P.R. China http://www.h3c.com Zip:100085')
if mibBuilder.loadTexts: h3cMSMan.setDescription('This MIB is defined to manage MS components according to specific capability.')
h3cMSManMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 1))
h3cMSStatisticalPeriod = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cMSStatisticalPeriod.setStatus('current')
if mibBuilder.loadTexts: h3cMSStatisticalPeriod.setDescription('The statistical period of this entity, which unit is second and default value is 300 seconds.')
h3cMSManMIBTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2))
h3cMSForwardTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 1), )
if mibBuilder.loadTexts: h3cMSForwardTable.setStatus('current')
if mibBuilder.loadTexts: h3cMSForwardTable.setDescription('MS Forward table, used to get the forwarding information of the entity. ')
h3cMSForwardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 1, 1), ).setIndexNames((0, "H3C-MS-MAN-MIB", "h3cMSForwardIndex"))
if mibBuilder.loadTexts: h3cMSForwardEntry.setStatus('current')
if mibBuilder.loadTexts: h3cMSForwardEntry.setDescription('h3cMSForward table entry.')
h3cMSForwardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 1, 1, 1), PhysicalIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cMSForwardIndex.setStatus('current')
if mibBuilder.loadTexts: h3cMSForwardIndex.setDescription('The value of this object is the entity index, which depends on the implementation of ENTITY-MIB. ')
h3cMSForwardMaxConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMSForwardMaxConnection.setStatus('current')
if mibBuilder.loadTexts: h3cMSForwardMaxConnection.setDescription('The maxium number of forward connections the entity can support.')
h3cMSForwardConnectionThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cMSForwardConnectionThreshold.setStatus('current')
if mibBuilder.loadTexts: h3cMSForwardConnectionThreshold.setDescription('The threshold of forward connections.')
h3cMSCurrentForwardConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMSCurrentForwardConnection.setStatus('current')
if mibBuilder.loadTexts: h3cMSCurrentForwardConnection.setDescription('Number of forward connections the entity provided in this time.')
h3cMSPeriodForwardConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMSPeriodForwardConnection.setStatus('current')
if mibBuilder.loadTexts: h3cMSPeriodForwardConnection.setDescription('The maxium number of forward connections within the last statistical period.')
h3cMSForwardTotalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMSForwardTotalTime.setStatus('current')
if mibBuilder.loadTexts: h3cMSForwardTotalTime.setDescription('The total forward connection time the entity has serviced since its startup.')
h3cMSForwardTotalConn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMSForwardTotalConn.setStatus('current')
if mibBuilder.loadTexts: h3cMSForwardTotalConn.setDescription('The total forward connection numbers the entity has serviced since its startup.')
h3cMSVODTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 2), )
if mibBuilder.loadTexts: h3cMSVODTable.setStatus('current')
if mibBuilder.loadTexts: h3cMSVODTable.setDescription('MS VOD(video on demand) table, used to get the VOD information of the entity.')
h3cMSVODEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 2, 1), ).setIndexNames((0, "H3C-MS-MAN-MIB", "h3cMSVODIndex"))
if mibBuilder.loadTexts: h3cMSVODEntry.setStatus('current')
if mibBuilder.loadTexts: h3cMSVODEntry.setDescription('h3cMSVOD table entry.')
h3cMSVODIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 2, 1, 1), PhysicalIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cMSVODIndex.setStatus('current')
if mibBuilder.loadTexts: h3cMSVODIndex.setDescription('The value of this object is the entity index, which depends on the implementation of ENTITY-MIB. ')
h3cMSVODMaxConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMSVODMaxConnection.setStatus('current')
if mibBuilder.loadTexts: h3cMSVODMaxConnection.setDescription('The maxium number of VOD connections the entity can support.')
h3cMSVODConnectionThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cMSVODConnectionThreshold.setStatus('current')
if mibBuilder.loadTexts: h3cMSVODConnectionThreshold.setDescription('The threshold of VOD connections.')
h3cMSCurrentVODConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMSCurrentVODConnection.setStatus('current')
if mibBuilder.loadTexts: h3cMSCurrentVODConnection.setDescription('Number of VOD connections the entity provided in this time.')
h3cMSPeriodVODMaxConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMSPeriodVODMaxConnection.setStatus('current')
if mibBuilder.loadTexts: h3cMSPeriodVODMaxConnection.setDescription('The maxium number of VOD connections within the last statistical period.')
h3cMSVODTotalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMSVODTotalTime.setStatus('current')
if mibBuilder.loadTexts: h3cMSVODTotalTime.setDescription('The total VOD connection time the entity has serviced since its startup.')
h3cMSVODTotalConn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMSVODTotalConn.setStatus('current')
if mibBuilder.loadTexts: h3cMSVODTotalConn.setDescription('The total VOD connection numbers the entity has serviced since its startup.')
h3cMSRecordTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 3), )
if mibBuilder.loadTexts: h3cMSRecordTable.setStatus('current')
if mibBuilder.loadTexts: h3cMSRecordTable.setDescription('MS Record table, used to get the record information of the entity.')
h3cMSRecordEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 3, 1), ).setIndexNames((0, "H3C-MS-MAN-MIB", "h3cMSRecordIndex"))
if mibBuilder.loadTexts: h3cMSRecordEntry.setStatus('current')
if mibBuilder.loadTexts: h3cMSRecordEntry.setDescription('h3cMSRecord table entry.')
h3cMSRecordIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 3, 1, 1), PhysicalIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cMSRecordIndex.setStatus('current')
if mibBuilder.loadTexts: h3cMSRecordIndex.setDescription('The value of this object is the entity index, which depends on the implementation of ENTITY-MIB. ')
h3cMSRecordMaxConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMSRecordMaxConnection.setStatus('current')
if mibBuilder.loadTexts: h3cMSRecordMaxConnection.setDescription('The maxium number of record connections the entity can support.')
h3cMSRecordConnectionThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cMSRecordConnectionThreshold.setStatus('current')
if mibBuilder.loadTexts: h3cMSRecordConnectionThreshold.setDescription('The threshold of record connections .')
h3cMSCurrentRecordConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMSCurrentRecordConnection.setStatus('current')
if mibBuilder.loadTexts: h3cMSCurrentRecordConnection.setDescription('Number of record connections the entity provided in this time.')
h3cMSPeriodRecordMaxConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMSPeriodRecordMaxConnection.setStatus('current')
if mibBuilder.loadTexts: h3cMSPeriodRecordMaxConnection.setDescription('The maxium number of record connections within the last statistical period.')
h3cMSRecordTotalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMSRecordTotalTime.setStatus('current')
if mibBuilder.loadTexts: h3cMSRecordTotalTime.setDescription('The total record connection time the entity has serviced since its startup.')
h3cMSRecordTotalConn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 2, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMSRecordTotalConn.setStatus('current')
if mibBuilder.loadTexts: h3cMSRecordTotalConn.setDescription('The total record connection numbers the entity has serviced since its startup.')
h3cMSManMIBTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 3))
h3cMSManTrapPrex = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 3, 0))
h3cMSManVODConnectionThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 3, 0, 1)).setObjects(("H3C-MS-MAN-MIB", "h3cMSVODIndex"), ("H3C-MS-MAN-MIB", "h3cMSCurrentVODConnection"), ("H3C-MS-MAN-MIB", "h3cMSVODConnectionThreshold"))
if mibBuilder.loadTexts: h3cMSManVODConnectionThresholdTrap.setStatus('current')
if mibBuilder.loadTexts: h3cMSManVODConnectionThresholdTrap.setDescription('Current VOD connection exceeds the threshold.')
h3cMSManVODConnectionRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 3, 0, 2)).setObjects(("H3C-MS-MAN-MIB", "h3cMSVODIndex"), ("H3C-MS-MAN-MIB", "h3cMSCurrentVODConnection"), ("H3C-MS-MAN-MIB", "h3cMSVODConnectionThreshold"))
if mibBuilder.loadTexts: h3cMSManVODConnectionRecoverTrap.setStatus('current')
if mibBuilder.loadTexts: h3cMSManVODConnectionRecoverTrap.setDescription('Current VOD connection recovers under the threshold.')
h3cMSManForwardConnectionThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 3, 0, 3)).setObjects(("H3C-MS-MAN-MIB", "h3cMSForwardIndex"), ("H3C-MS-MAN-MIB", "h3cMSCurrentForwardConnection"), ("H3C-MS-MAN-MIB", "h3cMSForwardConnectionThreshold"))
if mibBuilder.loadTexts: h3cMSManForwardConnectionThresholdTrap.setStatus('current')
if mibBuilder.loadTexts: h3cMSManForwardConnectionThresholdTrap.setDescription('Current forward connection exceeds the threshold.')
h3cMSManForwardConnectionRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 3, 0, 4)).setObjects(("H3C-MS-MAN-MIB", "h3cMSForwardIndex"), ("H3C-MS-MAN-MIB", "h3cMSCurrentForwardConnection"), ("H3C-MS-MAN-MIB", "h3cMSForwardConnectionThreshold"))
if mibBuilder.loadTexts: h3cMSManForwardConnectionRecoverTrap.setStatus('current')
if mibBuilder.loadTexts: h3cMSManForwardConnectionRecoverTrap.setDescription('Current forward connection recovers under the threshold.')
h3cMSManRecordConnectionThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 3, 0, 5)).setObjects(("H3C-MS-MAN-MIB", "h3cMSRecordIndex"), ("H3C-MS-MAN-MIB", "h3cMSCurrentRecordConnection"), ("H3C-MS-MAN-MIB", "h3cMSRecordConnectionThreshold"))
if mibBuilder.loadTexts: h3cMSManRecordConnectionThresholdTrap.setStatus('current')
if mibBuilder.loadTexts: h3cMSManRecordConnectionThresholdTrap.setDescription('Current record connection exceeds the threshold.')
h3cMSManRecordConnectionRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 3, 3, 0, 6)).setObjects(("H3C-MS-MAN-MIB", "h3cMSRecordIndex"), ("H3C-MS-MAN-MIB", "h3cMSCurrentRecordConnection"), ("H3C-MS-MAN-MIB", "h3cMSRecordConnectionThreshold"))
if mibBuilder.loadTexts: h3cMSManRecordConnectionRecoverTrap.setStatus('current')
if mibBuilder.loadTexts: h3cMSManRecordConnectionRecoverTrap.setDescription('Current record connection recovers under the threshold.')
mibBuilder.exportSymbols("H3C-MS-MAN-MIB", h3cMSVODTotalConn=h3cMSVODTotalConn, h3cMSRecordIndex=h3cMSRecordIndex, h3cMSRecordMaxConnection=h3cMSRecordMaxConnection, h3cMSRecordConnectionThreshold=h3cMSRecordConnectionThreshold, h3cMSVODConnectionThreshold=h3cMSVODConnectionThreshold, h3cMSStatisticalPeriod=h3cMSStatisticalPeriod, h3cMSForwardTotalConn=h3cMSForwardTotalConn, h3cMSRecordTable=h3cMSRecordTable, h3cMSForwardTable=h3cMSForwardTable, h3cMSPeriodVODMaxConnection=h3cMSPeriodVODMaxConnection, h3cMSForwardIndex=h3cMSForwardIndex, h3cMSForwardMaxConnection=h3cMSForwardMaxConnection, h3cMSForwardEntry=h3cMSForwardEntry, h3cMSManForwardConnectionThresholdTrap=h3cMSManForwardConnectionThresholdTrap, h3cMSForwardConnectionThreshold=h3cMSForwardConnectionThreshold, h3cMSManMIBObjects=h3cMSManMIBObjects, h3cMSVODEntry=h3cMSVODEntry, h3cMSManMIBTables=h3cMSManMIBTables, h3cMSPeriodRecordMaxConnection=h3cMSPeriodRecordMaxConnection, h3cMSManRecordConnectionThresholdTrap=h3cMSManRecordConnectionThresholdTrap, h3cMSForwardTotalTime=h3cMSForwardTotalTime, h3cMSCurrentForwardConnection=h3cMSCurrentForwardConnection, h3cMSPeriodForwardConnection=h3cMSPeriodForwardConnection, h3cMSVODMaxConnection=h3cMSVODMaxConnection, h3cMSVODIndex=h3cMSVODIndex, h3cMSRecordTotalTime=h3cMSRecordTotalTime, h3cMSManTrapPrex=h3cMSManTrapPrex, h3cMSRecordTotalConn=h3cMSRecordTotalConn, h3cMSVODTable=h3cMSVODTable, h3cMSCurrentRecordConnection=h3cMSCurrentRecordConnection, h3cMSManForwardConnectionRecoverTrap=h3cMSManForwardConnectionRecoverTrap, PYSNMP_MODULE_ID=h3cMSMan, h3cMSManVODConnectionRecoverTrap=h3cMSManVODConnectionRecoverTrap, h3cMSManVODConnectionThresholdTrap=h3cMSManVODConnectionThresholdTrap, h3cMSVODTotalTime=h3cMSVODTotalTime, h3cMSRecordEntry=h3cMSRecordEntry, h3cMSMan=h3cMSMan, h3cMSCurrentVODConnection=h3cMSCurrentVODConnection, h3cMSManMIBTrap=h3cMSManMIBTrap, h3cMSManRecordConnectionRecoverTrap=h3cMSManRecordConnectionRecoverTrap)
