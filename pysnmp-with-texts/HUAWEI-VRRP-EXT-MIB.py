#
# PySNMP MIB module HUAWEI-VRRP-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-VRRP-EXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:49:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
ifName, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifName", "InterfaceIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
sysName, = mibBuilder.importSymbols("SNMPv2-MIB", "sysName")
Counter64, MibIdentifier, iso, TimeTicks, NotificationType, ObjectIdentity, ModuleIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectGroup, Bits, IpAddress, Unsigned32, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "iso", "TimeTicks", "NotificationType", "ObjectIdentity", "ModuleIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectGroup", "Bits", "IpAddress", "Unsigned32", "Integer32", "Counter32")
RowStatus, DisplayString, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention", "TimeStamp")
vrrpOperState, VrId, vrrpOperMasterIpAddr = mibBuilder.importSymbols("VRRP-MIB", "vrrpOperState", "VrId", "vrrpOperMasterIpAddr")
hwVrrpExt = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127))
if mibBuilder.loadTexts: hwVrrpExt.setLastUpdated('201105100000Z')
if mibBuilder.loadTexts: hwVrrpExt.setOrganization('Huawei Technologies Co., Ltd.')
if mibBuilder.loadTexts: hwVrrpExt.setContactInfo('R&D Beijing, Huawei Technologies co.,Ltd. Huawei Bld.,NO.3 Xinxi Rd., Shang-Di Information Industry Base, Hai-Dian District Beijing P.R. China Zip:100085 Http://www.huawei.com E-mail:support@huawei.com')
if mibBuilder.loadTexts: hwVrrpExt.setDescription('It supplies for VRRP tracking function.')
hwVrrpExtGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 1))
hwVrrpExtFreeArpInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(30, 1200), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVrrpExtFreeArpInterval.setStatus('current')
if mibBuilder.loadTexts: hwVrrpExtFreeArpInterval.setDescription('This object indicates the interval at which gratuitous ARP packets are sent. Zero means the gratuitous-arp sending function is disable.')
hwVrrpExtVIPPingCtr = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVrrpExtVIPPingCtr.setStatus('current')
if mibBuilder.loadTexts: hwVrrpExtVIPPingCtr.setDescription('A switch decides whether the system responds to a request message or not, which is sent to virtual ip address. The default value is enable.')
hwVrrpExtSsTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVrrpExtSsTimer.setStatus('current')
if mibBuilder.loadTexts: hwVrrpExtSsTimer.setDescription('A switch decides whether the system enable VRRP SS function and set the size of VRRP SS timer or not, which decide the VRRP packet advertisement interval during slave switchover. The default value is 100s. But for the VRRP v3 version,this time value is truncated to 40950 milliseconds which is the maximum value according to the RFC 5798.')
hwVrrpExtLearnAdvIntervalFlag = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 1, 4), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVrrpExtLearnAdvIntervalFlag.setStatus('current')
if mibBuilder.loadTexts: hwVrrpExtLearnAdvIntervalFlag.setDescription('A switch decides whether the system learn VRRP packet advertisement interval or not, which is sended from the master router in one virtual router standby. The default value is enable.')
hwVrrpExtProtocolVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("v2", 2), ("v3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVrrpExtProtocolVersion.setStatus('current')
if mibBuilder.loadTexts: hwVrrpExtProtocolVersion.setDescription('Current protocol verison for VRRP on the specified device.The default value is v2(2) , and the other value for this element is v3(3).')
hwVrrpExtSendV3AdverPktMode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("v2only", 1), ("v3only", 2), ("v2v3both", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVrrpExtSendV3AdverPktMode.setStatus('current')
if mibBuilder.loadTexts: hwVrrpExtSendV3AdverPktMode.setDescription('This value specifies the mode of sending advertisement packet for VRRP v3.It has three configurable value: VRRP_PROTO_V3_SEND_V2_ONLY(1), VRRP_PROTO_V3_SEND_V3_ONLY(2) and VRRP_PROTO_V3_SEND_V3V2_BOTH(3).')
hwVrrpExtStateChangeReasonString = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwVrrpExtStateChangeReasonString.setStatus('current')
if mibBuilder.loadTexts: hwVrrpExtStateChangeReasonString.setDescription('Reasons of VRRP state transition. Used by hwVrrpExtTrapMasterDown trap and vrrpTrapNewMaster trap.')
vrrpExtOperations = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2))
hwVrrpTrackInterTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 1), )
if mibBuilder.loadTexts: hwVrrpTrackInterTable.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackInterTable.setDescription('The VRRP tracking interface table, it can accomodate eight rows at most.')
hwVrrpTrackInterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 1, 1), ).setIndexNames((0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackInterVRID"), (0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackInterStandByIfnet"), (0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackInterIfnet"))
if mibBuilder.loadTexts: hwVrrpTrackInterEntry.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackInterEntry.setDescription('An entry in the VRRP tracking interface table.')
hwVrrpTrackInterVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 1, 1, 1), VrId())
if mibBuilder.loadTexts: hwVrrpTrackInterVRID.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackInterVRID.setDescription("The index of the VRRP tracking interface table, it identifies the standby's ID.")
hwVrrpTrackInterStandByIfnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 1, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: hwVrrpTrackInterStandByIfnet.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackInterStandByIfnet.setDescription("The index of the VRRP tracking interface table, it identifies the standby's interface index.")
hwVrrpTrackInterIfnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 1, 1, 3), InterfaceIndex())
if mibBuilder.loadTexts: hwVrrpTrackInterIfnet.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackInterIfnet.setDescription('The index of the VRRP tracking interface table, it identifies the tracked interface index.')
hwVrrpTrackInterPriReduce = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpTrackInterPriReduce.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackInterPriReduce.setDescription("If the tracked interface is down, priority of standby will reduce this value. '0' specifies this attribute hasn't been configured. The minimum availability value is '1'.")
hwVrrpTrackInterOperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpTrackInterOperRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackInterOperRowStatus.setDescription('The row status variable. ')
hwVrrpTrackInterPriIncrease = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpTrackInterPriIncrease.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackInterPriIncrease.setDescription("If the tracked interface is down, this value will be added to the priority of standby. '0' specifies this attribute hasn't been configured. The minimum availability value is '1'.")
hwVrrpTrackBfdTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 2), )
if mibBuilder.loadTexts: hwVrrpTrackBfdTable.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackBfdTable.setDescription('The VRRP tracking BFD table, it can append eight rows at most.')
hwVrrpTrackBfdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 2, 1), ).setIndexNames((0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackInterVRID"), (0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackInterStandByIfnet"), (0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackBfdId"))
if mibBuilder.loadTexts: hwVrrpTrackBfdEntry.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackBfdEntry.setDescription('An entry in the VRRP tracking BFD table.')
hwVrrpTrackBfdId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383)))
if mibBuilder.loadTexts: hwVrrpTrackBfdId.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackBfdId.setDescription('The index of the table, it only identifies BFD link.')
hwVrrpTrackBfdPriReduce = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpTrackBfdPriReduce.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackBfdPriReduce.setDescription("If the tracked BFD is down, the priority of standby will reduce this value. '0' specifies this attribute hasn't been configured. The minimum availability value is '1'.")
hwVrrpTrackBfdOperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpTrackBfdOperRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackBfdOperRowStatus.setDescription('The row status variable. ')
hwVrrpTrackBfdPriIncrease = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpTrackBfdPriIncrease.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackBfdPriIncrease.setDescription("If the tracked BFD is down, this value will be added to the priority of standby. '0' specifies this attribute hasn't been configured. The minimum availability value is '1'.")
hwVrrpTrackBfdType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("link", 1), ("peer", 2), ("normal", 3))).clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpTrackBfdType.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackBfdType.setDescription('The bfd type that vrrp tracks,including Normal, Link, Peer. The attribute cannot be modified after created. ')
hwVrrpTrackBfdName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVrrpTrackBfdName.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackBfdName.setDescription('The bfd name that vrrp tracks. The attribute cannot be modified after created.')
hwAdminVrrpCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 3), )
if mibBuilder.loadTexts: hwAdminVrrpCfgTable.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpCfgTable.setDescription("The admin-vrrp's configure table.")
hwAdminVrrpCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 3, 1), ).setIndexNames((0, "HUAWEI-VRRP-EXT-MIB", "hwAdminVrrpCfgIfIndex"), (0, "HUAWEI-VRRP-EXT-MIB", "hwAdminVrrpCfgVRID"))
if mibBuilder.loadTexts: hwAdminVrrpCfgEntry.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpCfgEntry.setDescription("The admin-vrrp's configure entry.")
hwAdminVrrpCfgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwAdminVrrpCfgIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpCfgIfIndex.setDescription("The admin-vrrp's configure interface index.")
hwAdminVrrpCfgVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 3, 1, 2), VrId())
if mibBuilder.loadTexts: hwAdminVrrpCfgVRID.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpCfgVRID.setDescription("The admin-vrrp's configure VRID.")
hwAdminVrrpCfgOperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAdminVrrpCfgOperRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpCfgOperRowStatus.setDescription('The row status variable. ')
hwAdminVrrpCfgIgnoreIfDownMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 3, 1, 4), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAdminVrrpCfgIgnoreIfDownMode.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpCfgIgnoreIfDownMode.setDescription('The mode of ignore interface down. ')
hwAdminVrrpMemberTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 4), )
if mibBuilder.loadTexts: hwAdminVrrpMemberTable.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpMemberTable.setDescription("The member-vrrp's configure table.")
hwAdminVrrpMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 4, 1), ).setIndexNames((0, "HUAWEI-VRRP-EXT-MIB", "hwAdminVrrpCfgIfIndex"), (0, "HUAWEI-VRRP-EXT-MIB", "hwAdminVrrpCfgVRID"), (0, "HUAWEI-VRRP-EXT-MIB", "hwAdminVrrpMemberIfIndex"), (0, "HUAWEI-VRRP-EXT-MIB", "hwAdminVrrpMemberVRID"))
if mibBuilder.loadTexts: hwAdminVrrpMemberEntry.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpMemberEntry.setDescription("The admin-vrrp's configure entry.")
hwAdminVrrpMemberIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwAdminVrrpMemberIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpMemberIfIndex.setDescription("The admin-vrrp's member interface index.")
hwAdminVrrpMemberVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 4, 1, 2), VrId())
if mibBuilder.loadTexts: hwAdminVrrpMemberVRID.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpMemberVRID.setDescription("The admin-vrrp's member VRID.")
hwAdminVrrpMemberDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAdminVrrpMemberDiscardPkts.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpMemberDiscardPkts.setDescription("The admin-vrrp's member discarded packets.")
hwAdminVrrpMemberOperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAdminVrrpMemberOperRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpMemberOperRowStatus.setDescription('The row status variable. ')
hwAdminVrrpMemberFlowdownMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 4, 1, 5), EnabledStatus().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAdminVrrpMemberFlowdownMode.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpMemberFlowdownMode.setDescription('The mode of flowdown interface. ')
hwVrrpStatResetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 5), )
if mibBuilder.loadTexts: hwVrrpStatResetTable.setStatus('current')
if mibBuilder.loadTexts: hwVrrpStatResetTable.setDescription('The vrrp statistics reset Table.')
hwVrrpStatResetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 5, 1), ).setIndexNames((0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpStatResetIfIndex"), (0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpStatResetVRID"))
if mibBuilder.loadTexts: hwVrrpStatResetEntry.setStatus('current')
if mibBuilder.loadTexts: hwVrrpStatResetEntry.setDescription('The vrrp statistics reset entry.')
hwVrrpStatResetIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 5, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwVrrpStatResetIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwVrrpStatResetIfIndex.setDescription("The vrrp's configure interface index.")
hwVrrpStatResetVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 5, 1, 2), VrId())
if mibBuilder.loadTexts: hwVrrpStatResetVRID.setStatus('current')
if mibBuilder.loadTexts: hwVrrpStatResetVRID.setDescription('The vrrp vrid.')
hwVrrpStatResetFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVrrpStatResetFlag.setStatus('current')
if mibBuilder.loadTexts: hwVrrpStatResetFlag.setDescription('A reset signal of vrrp statistics. ')
hwAdminVrrpTrackIfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 6), )
if mibBuilder.loadTexts: hwAdminVrrpTrackIfTable.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpTrackIfTable.setDescription('The interface bound to VRRP table.')
hwAdminVrrpTrackIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 6, 1), ).setIndexNames((0, "HUAWEI-VRRP-EXT-MIB", "hwAdminVrrpTrackIfIndex"))
if mibBuilder.loadTexts: hwAdminVrrpTrackIfEntry.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpTrackIfEntry.setDescription('Entries of the interface bound to VRRP table.')
hwAdminVrrpTrackIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 6, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwAdminVrrpTrackIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpTrackIfIndex.setDescription('The number of the interface.')
hwAdminVrrpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 6, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAdminVrrpIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpIfIndex.setDescription("The administrator VRRP's configure interface index.")
hwAdminVrrpVrid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 6, 1, 3), VrId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAdminVrrpVrid.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpVrid.setDescription('The administrator VRRP vrid.')
hwAdminVrrpTrackIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAdminVrrpTrackIfRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpTrackIfRowStatus.setDescription('Current operation status of the row.')
hwVrrpTrackEfmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 7), )
if mibBuilder.loadTexts: hwVrrpTrackEfmTable.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackEfmTable.setDescription('The VRRP tracking EFM table.')
hwVrrpTrackEfmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 7, 1), ).setIndexNames((0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackEfmIfIndex"), (0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackEfmVRID"), (0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackEfmIndex"))
if mibBuilder.loadTexts: hwVrrpTrackEfmEntry.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackEfmEntry.setDescription('An entry in the VRRP tracking EFM table.')
hwVrrpTrackEfmIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 7, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwVrrpTrackEfmIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackEfmIfIndex.setDescription("The index of the table, it identifies vrrp's interface index.")
hwVrrpTrackEfmIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVrrpTrackEfmIfName.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackEfmIfName.setDescription('A textual string containing information about the interface of vrrp.')
hwVrrpTrackEfmVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 7, 1, 3), VrId())
if mibBuilder.loadTexts: hwVrrpTrackEfmVRID.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackEfmVRID.setDescription("The index of the table, it identifies vrrp's vrid.")
hwVrrpTrackEfmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 7, 1, 4), InterfaceIndex())
if mibBuilder.loadTexts: hwVrrpTrackEfmIndex.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackEfmIndex.setDescription("The index of the table, it identifies EFM's interface index.")
hwVrrpTrackEfmName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVrrpTrackEfmName.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackEfmName.setDescription('A textual string containing information about the interface of efm.')
hwVrrpTrackEfmOperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 7, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpTrackEfmOperRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackEfmOperRowStatus.setDescription('The row status variable. ')
hwVrrpTriggerRouteTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 8), )
if mibBuilder.loadTexts: hwVrrpTriggerRouteTable.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTriggerRouteTable.setDescription('The VRRP trigger route table.')
hwVrrpTriggerRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 8, 1), ).setIndexNames((0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTriggerRouteIfIndex"))
if mibBuilder.loadTexts: hwVrrpTriggerRouteEntry.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTriggerRouteEntry.setDescription('An entry in the VRRP trigger route table.')
hwVrrpTriggerRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 8, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwVrrpTriggerRouteIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTriggerRouteIfIndex.setDescription("The index of the table, it identifies vrrp's interface index.")
hwVrrpTriggerRouteMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpTriggerRouteMode.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTriggerRouteMode.setDescription('A switch decides whether the system responds to a request message or not, which is sent to virtual ip address. ')
hwVrrpTriggerRouteOperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 8, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpTriggerRouteOperRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTriggerRouteOperRowStatus.setDescription('The row status variable. ')
hwVrrpCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 9), )
if mibBuilder.loadTexts: hwVrrpCfgTable.setStatus('current')
if mibBuilder.loadTexts: hwVrrpCfgTable.setDescription('The VRRP configure table.')
hwVrrpCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 9, 1), ).setIndexNames((0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpCfgIfIndex"), (0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpCfgVrId"))
if mibBuilder.loadTexts: hwVrrpCfgEntry.setStatus('current')
if mibBuilder.loadTexts: hwVrrpCfgEntry.setDescription('An entry in the VRRP configure route table.')
hwVrrpCfgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 9, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwVrrpCfgIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwVrrpCfgIfIndex.setDescription("The index of the table, it identifies vrrp's interface index.")
hwVrrpCfgVrId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 9, 1, 2), VrId())
if mibBuilder.loadTexts: hwVrrpCfgVrId.setStatus('current')
if mibBuilder.loadTexts: hwVrrpCfgVrId.setDescription('The vrrp vrid.')
hwVrrpCfgLinkBfdDownNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpCfgLinkBfdDownNumber.setStatus('current')
if mibBuilder.loadTexts: hwVrrpCfgLinkBfdDownNumber.setDescription("The state of link BFD will really down when reach the configured down number. Enter '0' to delete this configuration.")
hwVrrpCfgMsecAdvInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpCfgMsecAdvInterval.setStatus('current')
if mibBuilder.loadTexts: hwVrrpCfgMsecAdvInterval.setDescription('The value of VRRP advertise interval in milliseconds, when the interval is less than 1 second, otherwise it should be set or got in VRRP-MIB. when the advertise interval is equal to or larger than 1 second, this value will be 0.')
hwVrrpCfgFastResumeFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 9, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpCfgFastResumeFlag.setStatus('current')
if mibBuilder.loadTexts: hwVrrpCfgFastResumeFlag.setDescription('A switch indicates whether the VRRP fast-resume function is enabled. ')
hwVrrpCfgOperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 9, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpCfgOperRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwVrrpCfgOperRowStatus.setDescription('The row status variable. ')
hwVrrpStatExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 10), )
if mibBuilder.loadTexts: hwVrrpStatExtTable.setStatus('current')
if mibBuilder.loadTexts: hwVrrpStatExtTable.setDescription('The VRRP statistics extend table.')
hwVrrpStatExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 10, 1), ).setIndexNames((0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpStatExtIfIndex"), (0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpStatExtVRID"))
if mibBuilder.loadTexts: hwVrrpStatExtEntry.setStatus('current')
if mibBuilder.loadTexts: hwVrrpStatExtEntry.setDescription('An entry in The VRRP statistics extend table.')
hwVrrpStatExtIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 10, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwVrrpStatExtIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwVrrpStatExtIfIndex.setDescription("The index of the table, it identifies vrrp's interface index.")
hwVrrpStatExtVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 10, 1, 2), VrId())
if mibBuilder.loadTexts: hwVrrpStatExtVRID.setStatus('current')
if mibBuilder.loadTexts: hwVrrpStatExtVRID.setDescription('The vrrp vrid.')
hwVrrpStatExtBecomeBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVrrpStatExtBecomeBackup.setStatus('current')
if mibBuilder.loadTexts: hwVrrpStatExtBecomeBackup.setDescription("The total number of times that this virtual router's state has transitioned to BACKUP.")
hwVrrpStatExtBecomeInit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVrrpStatExtBecomeInit.setStatus('current')
if mibBuilder.loadTexts: hwVrrpStatExtBecomeInit.setDescription("The total number of times that this virtual router's state has transitioned to INITIALIZE.")
hwVrrpStatExtCreateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 10, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVrrpStatExtCreateTime.setStatus('current')
if mibBuilder.loadTexts: hwVrrpStatExtCreateTime.setDescription('The create time of vrrp.')
hwVrrpStatExtLastChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 10, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVrrpStatExtLastChangeTime.setStatus('current')
if mibBuilder.loadTexts: hwVrrpStatExtLastChangeTime.setDescription('The last change time of vrrp.')
hwVrrpExtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 30))
hwVrrpExtTrapMasterDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 30, 1)).setObjects(("VRRP-MIB", "vrrpOperMasterIpAddr"), ("SNMPv2-MIB", "sysName"), ("IF-MIB", "ifName"), ("VRRP-MIB", "vrrpOperState"), ("HUAWEI-VRRP-EXT-MIB", "hwVrrpExtStateChangeReasonString"))
if mibBuilder.loadTexts: hwVrrpExtTrapMasterDown.setStatus('current')
if mibBuilder.loadTexts: hwVrrpExtTrapMasterDown.setDescription("The MasterDown trap indicates that the state of vrrp has transitioned from 'Master' to other state. The other state can be noactive(0), initialize(1) and backup(2).")
vrrpExtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 3))
hwvrrpExtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 3, 1))
hwvrrpExtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 3, 1, 1))
hwvrrpExtGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 3, 1, 1, 1)).setObjects(("HUAWEI-VRRP-EXT-MIB", "hwVrrpExtFreeArpInterval"), ("HUAWEI-VRRP-EXT-MIB", "hwVrrpExtVIPPingCtr"), ("HUAWEI-VRRP-EXT-MIB", "hwVrrpExtSsTimer"), ("HUAWEI-VRRP-EXT-MIB", "hwVrrpExtLearnAdvIntervalFlag"), ("HUAWEI-VRRP-EXT-MIB", "hwVrrpExtStateChangeReasonString"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwvrrpExtGlobalGroup = hwvrrpExtGlobalGroup.setStatus('current')
if mibBuilder.loadTexts: hwvrrpExtGlobalGroup.setDescription('The VRRP global attributes.')
hwvrrpExtTrackInterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 3, 1, 1, 2)).setObjects(("HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackInterPriReduce"), ("HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackInterOperRowStatus"), ("HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackInterPriIncrease"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwvrrpExtTrackInterGroup = hwvrrpExtTrackInterGroup.setStatus('current')
if mibBuilder.loadTexts: hwvrrpExtTrackInterGroup.setDescription('The VRRP tracking inter attributes.')
hwvrrpExtTrackBFDGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 3, 1, 1, 3)).setObjects(("HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackBfdPriReduce"), ("HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackBfdOperRowStatus"), ("HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackBfdPriIncrease"), ("HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackBfdType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwvrrpExtTrackBFDGroup = hwvrrpExtTrackBFDGroup.setStatus('current')
if mibBuilder.loadTexts: hwvrrpExtTrackBFDGroup.setDescription('The VRRP tracking BFD attributes.')
hwAdminVrrpCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 3, 1, 1, 4)).setObjects(("HUAWEI-VRRP-EXT-MIB", "hwAdminVrrpCfgOperRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAdminVrrpCfgGroup = hwAdminVrrpCfgGroup.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpCfgGroup.setDescription('The AdminVrrpCfg attributes.')
hwAdminVrrpMemberGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 3, 1, 1, 5)).setObjects(("HUAWEI-VRRP-EXT-MIB", "hwAdminVrrpMemberDiscardPkts"), ("HUAWEI-VRRP-EXT-MIB", "hwAdminVrrpMemberOperRowStatus"), ("HUAWEI-VRRP-EXT-MIB", "hwAdminVrrpMemberFlowdownMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAdminVrrpMemberGroup = hwAdminVrrpMemberGroup.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpMemberGroup.setDescription('The AdminVrrpMember attributes.')
hwVrrpStatResetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 3, 1, 1, 6)).setObjects(("HUAWEI-VRRP-EXT-MIB", "hwVrrpStatResetFlag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVrrpStatResetGroup = hwVrrpStatResetGroup.setStatus('current')
if mibBuilder.loadTexts: hwVrrpStatResetGroup.setDescription('The VrrpStatReset attributes.')
hwAdminVrrpTrackIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 3, 1, 1, 7)).setObjects(("HUAWEI-VRRP-EXT-MIB", "hwAdminVrrpIfIndex"), ("HUAWEI-VRRP-EXT-MIB", "hwAdminVrrpVrid"), ("HUAWEI-VRRP-EXT-MIB", "hwAdminVrrpTrackIfRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAdminVrrpTrackIfGroup = hwAdminVrrpTrackIfGroup.setStatus('current')
if mibBuilder.loadTexts: hwAdminVrrpTrackIfGroup.setDescription('The AdminVrrpTrackIf attributes.')
hwVrrpTrackEfmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 3, 1, 1, 8)).setObjects(("HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackEfmIfName"), ("HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackEfmName"), ("HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackEfmOperRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVrrpTrackEfmGroup = hwVrrpTrackEfmGroup.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackEfmGroup.setDescription('The VrrpTrackEfm attributes.')
hwVrrpTriggerRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 3, 1, 1, 9)).setObjects(("HUAWEI-VRRP-EXT-MIB", "hwVrrpTriggerRouteIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVrrpTriggerRouteGroup = hwVrrpTriggerRouteGroup.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTriggerRouteGroup.setDescription('The VrrpTriggerRoute attributes.')
hwVrrpCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 3, 1, 1, 10)).setObjects(("HUAWEI-VRRP-EXT-MIB", "hwVrrpCfgIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVrrpCfgGroup = hwVrrpCfgGroup.setStatus('current')
if mibBuilder.loadTexts: hwVrrpCfgGroup.setDescription('The VrrpCfg attributes.')
hwVrrpStatExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 3, 1, 1, 11)).setObjects(("HUAWEI-VRRP-EXT-MIB", "hwVrrpStatExtIfIndex"), ("HUAWEI-VRRP-EXT-MIB", "hwVrrpStatExtVRID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVrrpStatExtGroup = hwVrrpStatExtGroup.setStatus('current')
if mibBuilder.loadTexts: hwVrrpStatExtGroup.setDescription('The VrrpStatExt attributes.')
hwVrrpExtNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 3, 1, 1, 12)).setObjects(("HUAWEI-VRRP-EXT-MIB", "hwVrrpExtTrapMasterDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVrrpExtNotificationGroup = hwVrrpExtNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: hwVrrpExtNotificationGroup.setDescription('The VRRP MIB Notification Group.')
hwVrrpTrackIpsecInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 11), )
if mibBuilder.loadTexts: hwVrrpTrackIpsecInstanceTable.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackIpsecInstanceTable.setDescription('This object indicates the VRRP tracking Ipsec-instance table, which can accommodate a maximum of eight rows.')
hwVrrpTrackIpsecInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 11, 1), ).setIndexNames((0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackIpsecInstanceVRID"), (0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackIpsecInstanceStandByIfnet"), (0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackIpsecInstanceID"))
if mibBuilder.loadTexts: hwVrrpTrackIpsecInstanceEntry.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackIpsecInstanceEntry.setDescription('This object indicates an entry in the VRRP tracking Ipsec-instance table.')
hwVrrpTrackIpsecInstanceVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 11, 1, 1), VrId())
if mibBuilder.loadTexts: hwVrrpTrackIpsecInstanceVRID.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackIpsecInstanceVRID.setDescription('The value of this object identifies the ID of a backup device in the VRRP tracking Ipsec-instance table.')
hwVrrpTrackIpsecInstanceStandByIfnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 11, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: hwVrrpTrackIpsecInstanceStandByIfnet.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackIpsecInstanceStandByIfnet.setDescription('The value of this object identifies the interface index of a backup device in the VRRP tracking Ipsec-instance table.')
hwVrrpTrackIpsecInstanceID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: hwVrrpTrackIpsecInstanceID.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackIpsecInstanceID.setDescription('The value of this object identifies the ID of a tracked Ipsec-instance in the VRRP tracking Ipsec-instance table.')
hwVrrpTrackIpsecInstancePriReduce = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 11, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpTrackIpsecInstancePriReduce.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackIpsecInstancePriReduce.setDescription('If the tracked Ipsec-instance is Down, priorities of backup devices decrease by the specified value. The value 0 indicates that the attribute is not configured. The minimum value is 1.')
hwVrrpTrackIpsecInstanceOperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 11, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpTrackIpsecInstanceOperRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackIpsecInstanceOperRowStatus.setDescription('This object indicates the row status variable.')
hwVrrpTrackNQATable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 12), )
if mibBuilder.loadTexts: hwVrrpTrackNQATable.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackNQATable.setDescription('The VRRP tracking NQA table.')
hwVrrpTrackNQAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 12, 1), ).setIndexNames((0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackNQAVRID"), (0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackNQAStandbyIfIndex"), (0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackNQAAdminName"), (0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackNQATestName"))
if mibBuilder.loadTexts: hwVrrpTrackNQAEntry.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackNQAEntry.setDescription('An entry in the VRRP tracking NQA table.')
hwVrrpTrackNQAVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 12, 1, 1), VrId())
if mibBuilder.loadTexts: hwVrrpTrackNQAVRID.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackNQAVRID.setDescription('The value of this object identifies the ID of a backup device in the VRRP tracking NQA table.')
hwVrrpTrackNQAStandbyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 12, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: hwVrrpTrackNQAStandbyIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackNQAStandbyIfIndex.setDescription('The value of this object identifies the interface index of a backup device in the VRRP tracking NQA table.')
hwVrrpTrackNQAAdminName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 12, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hwVrrpTrackNQAAdminName.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackNQAAdminName.setDescription('The NQA administer name that vrrp tracks. The attribute cannot be modified after created.')
hwVrrpTrackNQATestName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 12, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hwVrrpTrackNQATestName.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackNQATestName.setDescription('The NQA test name that vrrp tracks. The attribute cannot be modified after created.')
hwVrrpTrackNQAPriReduce = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 12, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpTrackNQAPriReduce.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackNQAPriReduce.setDescription("If the tracked NQA is down, the priority of standby will reduce this value. '0' specifies this attribute hasn't been configured. The minimum availability value is '1'.")
hwVrrpTrackNQAOperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 12, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpTrackNQAOperRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackNQAOperRowStatus.setDescription('This object indicates the row status variable.')
hwVrrpTrackRouteTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 13), )
if mibBuilder.loadTexts: hwVrrpTrackRouteTable.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackRouteTable.setDescription('The VRRP tracking Route table.')
hwVrrpTrackRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 13, 1), ).setIndexNames((0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackRouteIndex"), (0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackRouteVRID"), (0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackRoutePrefix"), (0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackRouteMask"), (0, "HUAWEI-VRRP-EXT-MIB", "hwVrrpTrackRouteVrf"))
if mibBuilder.loadTexts: hwVrrpTrackRouteEntry.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackRouteEntry.setDescription('An entry in the VRRP tracking Route table.')
hwVrrpTrackRouteVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 13, 1, 1), VrId())
if mibBuilder.loadTexts: hwVrrpTrackRouteVRID.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackRouteVRID.setDescription("The index of the VRRP tracking Route table, it identifies the standby's ID.")
hwVrrpTrackRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 13, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: hwVrrpTrackRouteIndex.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackRouteIndex.setDescription("The index of the VRRP tracking Route table, it identifies the standby's interface index.")
hwVrrpTrackRoutePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 13, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwVrrpTrackRoutePrefix.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackRoutePrefix.setDescription('The index of the VRRP tracking Route table, it identifies the tracked ip address.')
hwVrrpTrackRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 13, 1, 4), IpAddress())
if mibBuilder.loadTexts: hwVrrpTrackRouteMask.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackRouteMask.setDescription("The index of the VRRP tracking Route table, it identifies the tracked ip address's mask.")
hwVrrpTrackRouteVrf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 13, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwVrrpTrackRouteVrf.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackRouteVrf.setDescription('The index of the VRRP tracking Route table, it identifies the tracked VPN instance name ')
hwVrrpTrackRoutePriReduce = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 13, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpTrackRoutePriReduce.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackRoutePriReduce.setDescription("If the tracked route is unreachable, the priority of standby will reduce this value. '0' specifies this attribute hasn't been configured. The minimum availability value is '1'.")
hwVrrpTrackRouteOperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 127, 2, 13, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVrrpTrackRouteOperRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwVrrpTrackRouteOperRowStatus.setDescription('The row status variable. ')
mibBuilder.exportSymbols("HUAWEI-VRRP-EXT-MIB", hwAdminVrrpTrackIfTable=hwAdminVrrpTrackIfTable, hwVrrpStatExtBecomeBackup=hwVrrpStatExtBecomeBackup, hwAdminVrrpCfgVRID=hwAdminVrrpCfgVRID, hwAdminVrrpMemberDiscardPkts=hwAdminVrrpMemberDiscardPkts, hwVrrpTriggerRouteMode=hwVrrpTriggerRouteMode, hwVrrpTrackNQAVRID=hwVrrpTrackNQAVRID, hwVrrpStatExtEntry=hwVrrpStatExtEntry, hwVrrpCfgFastResumeFlag=hwVrrpCfgFastResumeFlag, hwVrrpTrackInterVRID=hwVrrpTrackInterVRID, hwvrrpExtCompliances=hwvrrpExtCompliances, hwVrrpStatExtGroup=hwVrrpStatExtGroup, hwVrrpTriggerRouteOperRowStatus=hwVrrpTriggerRouteOperRowStatus, hwAdminVrrpCfgIfIndex=hwAdminVrrpCfgIfIndex, hwVrrpTrackEfmOperRowStatus=hwVrrpTrackEfmOperRowStatus, hwVrrpTrackRouteIndex=hwVrrpTrackRouteIndex, hwVrrpTrackRouteEntry=hwVrrpTrackRouteEntry, hwVrrpTrackRouteVRID=hwVrrpTrackRouteVRID, hwVrrpTrackRouteOperRowStatus=hwVrrpTrackRouteOperRowStatus, hwAdminVrrpMemberFlowdownMode=hwAdminVrrpMemberFlowdownMode, hwVrrpExtSendV3AdverPktMode=hwVrrpExtSendV3AdverPktMode, hwVrrpTrackRoutePrefix=hwVrrpTrackRoutePrefix, hwVrrpStatExtVRID=hwVrrpStatExtVRID, hwVrrpTrackIpsecInstanceOperRowStatus=hwVrrpTrackIpsecInstanceOperRowStatus, vrrpExtOperations=vrrpExtOperations, hwVrrpTrackEfmEntry=hwVrrpTrackEfmEntry, hwAdminVrrpCfgOperRowStatus=hwAdminVrrpCfgOperRowStatus, hwVrrpStatResetIfIndex=hwVrrpStatResetIfIndex, hwVrrpTrackInterOperRowStatus=hwVrrpTrackInterOperRowStatus, hwVrrpTrackIpsecInstanceEntry=hwVrrpTrackIpsecInstanceEntry, hwVrrpExtNotificationGroup=hwVrrpExtNotificationGroup, hwAdminVrrpVrid=hwAdminVrrpVrid, hwVrrpTrackNQAOperRowStatus=hwVrrpTrackNQAOperRowStatus, hwVrrpTrackIpsecInstanceStandByIfnet=hwVrrpTrackIpsecInstanceStandByIfnet, hwVrrpTrackNQATestName=hwVrrpTrackNQATestName, hwAdminVrrpMemberIfIndex=hwAdminVrrpMemberIfIndex, hwVrrpCfgMsecAdvInterval=hwVrrpCfgMsecAdvInterval, hwVrrpTrackRouteMask=hwVrrpTrackRouteMask, hwVrrpTrackEfmIfIndex=hwVrrpTrackEfmIfIndex, hwVrrpExtProtocolVersion=hwVrrpExtProtocolVersion, hwVrrpTriggerRouteIfIndex=hwVrrpTriggerRouteIfIndex, hwVrrpTrackBfdOperRowStatus=hwVrrpTrackBfdOperRowStatus, hwVrrpTrackEfmIndex=hwVrrpTrackEfmIndex, hwVrrpTrackIpsecInstanceID=hwVrrpTrackIpsecInstanceID, hwVrrpTrackIpsecInstancePriReduce=hwVrrpTrackIpsecInstancePriReduce, hwVrrpExtGlobal=hwVrrpExtGlobal, hwVrrpCfgVrId=hwVrrpCfgVrId, hwVrrpTrackInterPriReduce=hwVrrpTrackInterPriReduce, hwAdminVrrpCfgEntry=hwAdminVrrpCfgEntry, hwAdminVrrpTrackIfRowStatus=hwAdminVrrpTrackIfRowStatus, hwVrrpTrackRoutePriReduce=hwVrrpTrackRoutePriReduce, hwvrrpExtGlobalGroup=hwvrrpExtGlobalGroup, hwVrrpCfgEntry=hwVrrpCfgEntry, hwVrrpStatExtCreateTime=hwVrrpStatExtCreateTime, hwVrrpTrackNQAEntry=hwVrrpTrackNQAEntry, hwVrrpTrackInterStandByIfnet=hwVrrpTrackInterStandByIfnet, vrrpExtConformance=vrrpExtConformance, hwVrrpStatResetTable=hwVrrpStatResetTable, hwVrrpStatExtBecomeInit=hwVrrpStatExtBecomeInit, hwVrrpCfgLinkBfdDownNumber=hwVrrpCfgLinkBfdDownNumber, hwAdminVrrpMemberTable=hwAdminVrrpMemberTable, hwVrrpExtSsTimer=hwVrrpExtSsTimer, hwAdminVrrpCfgTable=hwAdminVrrpCfgTable, hwVrrpExtTrapMasterDown=hwVrrpExtTrapMasterDown, hwAdminVrrpTrackIfIndex=hwAdminVrrpTrackIfIndex, hwVrrpTrackIpsecInstanceTable=hwVrrpTrackIpsecInstanceTable, hwVrrpExtNotifications=hwVrrpExtNotifications, hwVrrpCfgGroup=hwVrrpCfgGroup, hwVrrpExtVIPPingCtr=hwVrrpExtVIPPingCtr, hwAdminVrrpCfgIgnoreIfDownMode=hwAdminVrrpCfgIgnoreIfDownMode, hwVrrpTrackEfmGroup=hwVrrpTrackEfmGroup, hwVrrpStatResetFlag=hwVrrpStatResetFlag, hwVrrpTrackBfdName=hwVrrpTrackBfdName, hwVrrpExtStateChangeReasonString=hwVrrpExtStateChangeReasonString, hwVrrpStatExtTable=hwVrrpStatExtTable, hwVrrpTriggerRouteGroup=hwVrrpTriggerRouteGroup, hwAdminVrrpMemberOperRowStatus=hwAdminVrrpMemberOperRowStatus, hwAdminVrrpMemberVRID=hwAdminVrrpMemberVRID, hwVrrpStatExtLastChangeTime=hwVrrpStatExtLastChangeTime, hwVrrpStatResetGroup=hwVrrpStatResetGroup, hwVrrpExt=hwVrrpExt, hwVrrpTrackEfmVRID=hwVrrpTrackEfmVRID, hwVrrpTrackInterTable=hwVrrpTrackInterTable, hwVrrpTrackInterEntry=hwVrrpTrackInterEntry, hwAdminVrrpCfgGroup=hwAdminVrrpCfgGroup, hwVrrpTrackRouteVrf=hwVrrpTrackRouteVrf, hwAdminVrrpMemberGroup=hwAdminVrrpMemberGroup, hwAdminVrrpIfIndex=hwAdminVrrpIfIndex, hwvrrpExtGroups=hwvrrpExtGroups, hwVrrpTrackBfdType=hwVrrpTrackBfdType, hwVrrpTrackNQATable=hwVrrpTrackNQATable, hwVrrpTrackBfdPriReduce=hwVrrpTrackBfdPriReduce, hwVrrpStatResetVRID=hwVrrpStatResetVRID, hwVrrpTrackInterIfnet=hwVrrpTrackInterIfnet, hwVrrpTrackEfmName=hwVrrpTrackEfmName, hwVrrpCfgOperRowStatus=hwVrrpCfgOperRowStatus, hwVrrpExtFreeArpInterval=hwVrrpExtFreeArpInterval, hwVrrpStatResetEntry=hwVrrpStatResetEntry, hwVrrpTrackBfdEntry=hwVrrpTrackBfdEntry, hwVrrpTrackRouteTable=hwVrrpTrackRouteTable, hwVrrpTrackBfdTable=hwVrrpTrackBfdTable, hwVrrpTriggerRouteEntry=hwVrrpTriggerRouteEntry, hwVrrpTrackEfmIfName=hwVrrpTrackEfmIfName, hwAdminVrrpTrackIfGroup=hwAdminVrrpTrackIfGroup, hwVrrpTrackNQAPriReduce=hwVrrpTrackNQAPriReduce, hwVrrpTriggerRouteTable=hwVrrpTriggerRouteTable, hwVrrpCfgTable=hwVrrpCfgTable, hwVrrpStatExtIfIndex=hwVrrpStatExtIfIndex, hwVrrpTrackNQAAdminName=hwVrrpTrackNQAAdminName, hwvrrpExtTrackBFDGroup=hwvrrpExtTrackBFDGroup, hwvrrpExtTrackInterGroup=hwvrrpExtTrackInterGroup, PYSNMP_MODULE_ID=hwVrrpExt, hwVrrpTrackInterPriIncrease=hwVrrpTrackInterPriIncrease, hwVrrpTrackEfmTable=hwVrrpTrackEfmTable, hwVrrpCfgIfIndex=hwVrrpCfgIfIndex, hwAdminVrrpTrackIfEntry=hwAdminVrrpTrackIfEntry, hwVrrpTrackBfdId=hwVrrpTrackBfdId, hwVrrpTrackNQAStandbyIfIndex=hwVrrpTrackNQAStandbyIfIndex, hwVrrpTrackIpsecInstanceVRID=hwVrrpTrackIpsecInstanceVRID, hwVrrpTrackBfdPriIncrease=hwVrrpTrackBfdPriIncrease, hwAdminVrrpMemberEntry=hwAdminVrrpMemberEntry, hwVrrpExtLearnAdvIntervalFlag=hwVrrpExtLearnAdvIntervalFlag)
