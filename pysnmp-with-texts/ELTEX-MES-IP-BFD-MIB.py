#
# PySNMP MIB module ELTEX-MES-IP-BFD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-MES-IP-BFD-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:01:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
eltMes, = mibBuilder.importSymbols("ELTEX-MES", "eltMes")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, TimeTicks, iso, IpAddress, Unsigned32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, MibIdentifier, Counter64, Integer32, ObjectIdentity, NotificationType, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "iso", "IpAddress", "Unsigned32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "MibIdentifier", "Counter64", "Integer32", "ObjectIdentity", "NotificationType", "Counter32")
RowStatus, TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString", "TruthValue")
eltMesIpBfd = ModuleIdentity((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6))
eltMesIpBfd.setRevisions(('2014-03-28 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: eltMesIpBfd.setRevisionsDescriptions(('Initial revision.',))
if mibBuilder.loadTexts: eltMesIpBfd.setLastUpdated('201403280000Z')
if mibBuilder.loadTexts: eltMesIpBfd.setOrganization('Eltex Enterprise Co, Ltd.')
if mibBuilder.loadTexts: eltMesIpBfd.setContactInfo('www.eltex.nsk.ru')
if mibBuilder.loadTexts: eltMesIpBfd.setDescription('This private MIB module defines End of Eltex private MIBs.')
eltIpBfdOspfEnable = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIpBfdOspfEnable.setStatus('current')
if mibBuilder.loadTexts: eltIpBfdOspfEnable.setDescription('')
eltIpBfdIfTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 2), )
if mibBuilder.loadTexts: eltIpBfdIfTable.setStatus('current')
if mibBuilder.loadTexts: eltIpBfdIfTable.setDescription('')
eltIpBfdIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 2, 1), ).setIndexNames((0, "ELTEX-MES-IP-BFD-MIB", "eltIpBfdAddr"))
if mibBuilder.loadTexts: eltIpBfdIfEntry.setStatus('current')
if mibBuilder.loadTexts: eltIpBfdIfEntry.setDescription('The BFD Session Entry describes BFD session.')
eltIpBfdAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltIpBfdAddr.setStatus('current')
if mibBuilder.loadTexts: eltIpBfdAddr.setDescription('')
eltIpBfdDesiredMinTxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 2, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIpBfdDesiredMinTxInterval.setStatus('current')
if mibBuilder.loadTexts: eltIpBfdDesiredMinTxInterval.setDescription('')
eltIpBfdReqMinRxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 2, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIpBfdReqMinRxInterval.setStatus('current')
if mibBuilder.loadTexts: eltIpBfdReqMinRxInterval.setDescription('')
eltIpBfdDetectMult = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 2, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIpBfdDetectMult.setStatus('current')
if mibBuilder.loadTexts: eltIpBfdDetectMult.setDescription('')
eltIpBfdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eltIpBfdRowStatus.setStatus('current')
if mibBuilder.loadTexts: eltIpBfdRowStatus.setDescription('')
eltIpBfdOspfDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 2, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIpBfdOspfDisable.setStatus('current')
if mibBuilder.loadTexts: eltIpBfdOspfDisable.setDescription('')
eltIpBfdRipDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 6, 2, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIpBfdRipDisable.setStatus('current')
if mibBuilder.loadTexts: eltIpBfdRipDisable.setDescription('')
mibBuilder.exportSymbols("ELTEX-MES-IP-BFD-MIB", eltIpBfdReqMinRxInterval=eltIpBfdReqMinRxInterval, eltIpBfdOspfDisable=eltIpBfdOspfDisable, eltIpBfdRowStatus=eltIpBfdRowStatus, eltMesIpBfd=eltMesIpBfd, PYSNMP_MODULE_ID=eltMesIpBfd, eltIpBfdDesiredMinTxInterval=eltIpBfdDesiredMinTxInterval, eltIpBfdAddr=eltIpBfdAddr, eltIpBfdDetectMult=eltIpBfdDetectMult, eltIpBfdRipDisable=eltIpBfdRipDisable, eltIpBfdIfTable=eltIpBfdIfTable, eltIpBfdIfEntry=eltIpBfdIfEntry, eltIpBfdOspfEnable=eltIpBfdOspfEnable)
