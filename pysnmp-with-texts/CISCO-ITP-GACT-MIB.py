#
# PySNMP MIB module CISCO-ITP-GACT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ITP-GACT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:03:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
cgspInstNetwork, = mibBuilder.importSymbols("CISCO-ITP-GSP-MIB", "cgspInstNetwork")
CItpTcPointCode, CItpTcServiceIndicator, CItpTcGlobalTitleSelectorName, CItpTcLinksetId, CItpTcInstanceNumber, CItpTcGtaLongAddr = mibBuilder.importSymbols("CISCO-ITP-TC-MIB", "CItpTcPointCode", "CItpTcServiceIndicator", "CItpTcGlobalTitleSelectorName", "CItpTcLinksetId", "CItpTcInstanceNumber", "CItpTcGtaLongAddr")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Bits, Counter64, Counter32, ModuleIdentity, TimeTicks, Gauge32, ObjectIdentity, NotificationType, IpAddress, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Integer32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "Counter32", "ModuleIdentity", "TimeTicks", "Gauge32", "ObjectIdentity", "NotificationType", "IpAddress", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Integer32", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoGactMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 333))
ciscoGactMIB.setRevisions(('2003-10-01 00:00', '2003-03-03 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoGactMIB.setRevisionsDescriptions(('Support the ability to translate to different instances using application groups. Deprecate all object in cgactGttTable table. Create new cgactGtt2Table table to support new index structure.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoGactMIB.setLastUpdated('200310010000Z')
if mibBuilder.loadTexts: ciscoGactMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoGactMIB.setContactInfo(' Cisco Systems, Inc Customer Service Postal: 170 W. Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-ss7@cisco.com')
if mibBuilder.loadTexts: ciscoGactMIB.setDescription('The MIB for providing information specified in ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network. This information can be used to manage messages transported over SS7 Network via Cisco IP Transfer Point. The Cisco IP Transfer Point (ITP) is a hardware and software solution that transports SS7 traffic using IP. Each ITP node provides function similar to SS7 signalling point. The relevant ITU documents describing this technology is the ITU Q series, including ITU Q.700: Introduction to CCITT Signalling System No. 7 and ITU Q.701 Functional description of the message transfer part (MTP) of Signalling System No. 7.')
cgactMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 333, 0))
cgactMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 333, 1))
cgactMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 333, 2))
cgactMtp3 = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1))
cgactGtt = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2))
cgactMtp3Table = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1), )
if mibBuilder.loadTexts: cgactMtp3Table.setReference(' GR-82-CORE 6.4.7 Special Study Measurements')
if mibBuilder.loadTexts: cgactMtp3Table.setStatus('current')
if mibBuilder.loadTexts: cgactMtp3Table.setDescription('This table contains information about the number of packets and bytes at the MTP3 transport layer. The information collected from both directions(send and receive). The information is broken down by linkset, Destination Point Code (DPC), Originating Point Code (OPC) and Signalling Indicator (SI). This provides the lowest granularity required by Q752 and allows network management stations to calculate the required fields in Q752.')
cgactMtp3TableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GACT-MIB", "cgactMtp3TableId"), (0, "CISCO-ITP-GACT-MIB", "cgactMtp3LinksetName"), (0, "CISCO-ITP-GACT-MIB", "cgactMtp3Dpc"), (0, "CISCO-ITP-GACT-MIB", "cgactMtp3Opc"), (0, "CISCO-ITP-GACT-MIB", "cgactMtp3SI"))
if mibBuilder.loadTexts: cgactMtp3TableEntry.setStatus('current')
if mibBuilder.loadTexts: cgactMtp3TableEntry.setDescription('A list of MTP3 accounting objects. Objects are created in this table as traffic is received and processed. ')
cgactMtp3TableId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("passed", 1), ("violation", 2), ("unroutable", 3))))
if mibBuilder.loadTexts: cgactMtp3TableId.setStatus('current')
if mibBuilder.loadTexts: cgactMtp3TableId.setDescription("The accounting table identifier. 'passed' : signifies that this table instance represents statistics for packets that matched an Access Control List (ACL) in the linkset's inbound ACL and in the outbound ACL. 'violation' : signifies that this table instance represents statistics for packets that did not match an ACL in the linkset's inbound ACL and in the outbound ACL. 'unroutable' : packets that pass access list verification but can not be sent to destination point code. This could be caused by incorrect or missing route statements or inaccessible destination.")
cgactMtp3LinksetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1, 2), CItpTcLinksetId())
if mibBuilder.loadTexts: cgactMtp3LinksetName.setStatus('current')
if mibBuilder.loadTexts: cgactMtp3LinksetName.setDescription('The name of the linkset.')
cgactMtp3Dpc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1, 3), CItpTcPointCode())
if mibBuilder.loadTexts: cgactMtp3Dpc.setStatus('current')
if mibBuilder.loadTexts: cgactMtp3Dpc.setDescription('The destination point code.')
cgactMtp3Opc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1, 4), CItpTcPointCode())
if mibBuilder.loadTexts: cgactMtp3Opc.setStatus('current')
if mibBuilder.loadTexts: cgactMtp3Opc.setDescription('The origin point code.')
cgactMtp3SI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1, 5), CItpTcServiceIndicator())
if mibBuilder.loadTexts: cgactMtp3SI.setStatus('current')
if mibBuilder.loadTexts: cgactMtp3SI.setDescription('The service indicator.')
cgactMtp3InPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgactMtp3InPackets.setStatus('current')
if mibBuilder.loadTexts: cgactMtp3InPackets.setDescription('The accumulated number of packets that have been received by this linkset, DPC and OPC combination since system startup.')
cgactMtp3OutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgactMtp3OutPackets.setStatus('current')
if mibBuilder.loadTexts: cgactMtp3OutPackets.setDescription('The accumulated number of packets that have been sent using this linkset, DPC and OPC combination since system startup.')
cgactMtp3InOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1, 8), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgactMtp3InOctets.setStatus('current')
if mibBuilder.loadTexts: cgactMtp3InOctets.setDescription('The accumulated number of bytes that have been received using this linkset, DPC and OPC combination since system startup.')
cgactMtp3OutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1, 9), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgactMtp3OutOctets.setStatus('current')
if mibBuilder.loadTexts: cgactMtp3OutOctets.setDescription('The accumulated number of bytes that have been sent using this linkset, DPC and OPC combination since system startup.')
cgactGttTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 1), )
if mibBuilder.loadTexts: cgactGttTable.setStatus('deprecated')
if mibBuilder.loadTexts: cgactGttTable.setDescription('This table has been deprecated and replaced with cgactGtt2Table table. This table contains information about the number of packets and octets required for global title translation.')
cgactGttTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GACT-MIB", "cgactGttLinksetName"), (0, "CISCO-ITP-GACT-MIB", "cgactGttSelectorName"), (0, "CISCO-ITP-GACT-MIB", "cgactGttGta"), (0, "CISCO-ITP-GACT-MIB", "cgactGttTranslatedPc"))
if mibBuilder.loadTexts: cgactGttTableEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cgactGttTableEntry.setDescription('This table has been deprecated and replaced with cgactGtt2Table table. A list of Global Title Translation accounting objects. Objects are created in this table when MTP3 packets are received requiring global title translation. ')
cgactGttLinksetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 1, 1, 1), CItpTcLinksetId())
if mibBuilder.loadTexts: cgactGttLinksetName.setStatus('deprecated')
if mibBuilder.loadTexts: cgactGttLinksetName.setDescription('The name of the linkset.')
cgactGttSelectorName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 1, 1, 2), CItpTcGlobalTitleSelectorName())
if mibBuilder.loadTexts: cgactGttSelectorName.setStatus('deprecated')
if mibBuilder.loadTexts: cgactGttSelectorName.setDescription('The Global Title Selector Name.')
cgactGttGta = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 1, 1, 3), CItpTcGtaLongAddr())
if mibBuilder.loadTexts: cgactGttGta.setStatus('deprecated')
if mibBuilder.loadTexts: cgactGttGta.setDescription('The Global Title Address.')
cgactGttTranslatedPc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 1, 1, 4), CItpTcPointCode())
if mibBuilder.loadTexts: cgactGttTranslatedPc.setStatus('deprecated')
if mibBuilder.loadTexts: cgactGttTranslatedPc.setDescription('The translated point code.')
cgactGttPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 1, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgactGttPackets.setStatus('deprecated')
if mibBuilder.loadTexts: cgactGttPackets.setDescription('The accumulated number of packets received by this signalling point requiring global title translation since system startup.')
cgactGttOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 1, 1, 6), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgactGttOctets.setStatus('deprecated')
if mibBuilder.loadTexts: cgactGttOctets.setDescription('The accumulated number of bytes received by this signalling point requiring global title translation since system startup.')
cgactGtt2Table = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 2), )
if mibBuilder.loadTexts: cgactGtt2Table.setStatus('current')
if mibBuilder.loadTexts: cgactGtt2Table.setDescription('This table contains information about the number of packets and octets required for global title translation.')
cgactGtt2TableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GACT-MIB", "cgactGtt2LinksetName"), (0, "CISCO-ITP-GACT-MIB", "cgactGtt2SelectorName"), (0, "CISCO-ITP-GACT-MIB", "cgactGtt2Gta"), (0, "CISCO-ITP-GACT-MIB", "cgactGtt2TranslatedInstNumber"), (0, "CISCO-ITP-GACT-MIB", "cgactGtt2TranslatedPc"))
if mibBuilder.loadTexts: cgactGtt2TableEntry.setStatus('current')
if mibBuilder.loadTexts: cgactGtt2TableEntry.setDescription('A list of Global Title Translation accounting objects. Objects are created in this table when MTP3 packets are received requiring global title translation. ')
cgactGtt2LinksetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 2, 1, 1), CItpTcLinksetId())
if mibBuilder.loadTexts: cgactGtt2LinksetName.setStatus('current')
if mibBuilder.loadTexts: cgactGtt2LinksetName.setDescription('The name of the linkset.')
cgactGtt2SelectorName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 2, 1, 2), CItpTcGlobalTitleSelectorName())
if mibBuilder.loadTexts: cgactGtt2SelectorName.setStatus('current')
if mibBuilder.loadTexts: cgactGtt2SelectorName.setDescription('The Global Title Selector Name.')
cgactGtt2Gta = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 2, 1, 3), CItpTcGtaLongAddr())
if mibBuilder.loadTexts: cgactGtt2Gta.setStatus('current')
if mibBuilder.loadTexts: cgactGtt2Gta.setDescription('The Global Title Address.')
cgactGtt2TranslatedInstNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 2, 1, 4), CItpTcInstanceNumber())
if mibBuilder.loadTexts: cgactGtt2TranslatedInstNumber.setStatus('current')
if mibBuilder.loadTexts: cgactGtt2TranslatedInstNumber.setDescription('The instance number used to define in which network the translated point-code resides.')
cgactGtt2TranslatedPc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 2, 1, 5), CItpTcPointCode())
if mibBuilder.loadTexts: cgactGtt2TranslatedPc.setStatus('current')
if mibBuilder.loadTexts: cgactGtt2TranslatedPc.setDescription('The translated point code.')
cgactGtt2Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 2, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgactGtt2Packets.setStatus('current')
if mibBuilder.loadTexts: cgactGtt2Packets.setDescription('The accumulated number of packets received by this signalling point requiring global title translation since system startup.')
cgactGtt2Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 2, 1, 7), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgactGtt2Octets.setStatus('current')
if mibBuilder.loadTexts: cgactGtt2Octets.setDescription('The accumulated number of bytes received by this signalling point requiring global title translation since system startup.')
ciscoGactMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 333, 2, 1))
ciscoGactMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 333, 2, 2))
ciscoGactMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 333, 2, 1, 1)).setObjects(("CISCO-ITP-GACT-MIB", "ciscoGactMtp3Group"), ("CISCO-ITP-GACT-MIB", "ciscoGactGttGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGactMIBCompliance = ciscoGactMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoGactMIBCompliance.setDescription('The compliance statement for entities which implement the Cisco SP MIB')
ciscoGactMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 333, 2, 1, 2)).setObjects(("CISCO-ITP-GACT-MIB", "ciscoGactMtp3Group"), ("CISCO-ITP-GACT-MIB", "ciscoGactGttGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGactMIBComplianceRev1 = ciscoGactMIBComplianceRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoGactMIBComplianceRev1.setDescription('The compliance statement for entities which implement the Cisco SP MIB')
ciscoGactMtp3Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 333, 2, 2, 1)).setObjects(("CISCO-ITP-GACT-MIB", "cgactMtp3InPackets"), ("CISCO-ITP-GACT-MIB", "cgactMtp3OutPackets"), ("CISCO-ITP-GACT-MIB", "cgactMtp3InOctets"), ("CISCO-ITP-GACT-MIB", "cgactMtp3OutOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGactMtp3Group = ciscoGactMtp3Group.setStatus('current')
if mibBuilder.loadTexts: ciscoGactMtp3Group.setDescription('A collection of objects providing MTP3 accounting feature.')
ciscoGactGttGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 333, 2, 2, 2)).setObjects(("CISCO-ITP-GACT-MIB", "cgactGttPackets"), ("CISCO-ITP-GACT-MIB", "cgactGttOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGactGttGroup = ciscoGactGttGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoGactGttGroup.setDescription('A collection of objects providing Global Title Translation accounting feature.')
ciscoGactGttGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 333, 2, 2, 3)).setObjects(("CISCO-ITP-GACT-MIB", "cgactGtt2Packets"), ("CISCO-ITP-GACT-MIB", "cgactGtt2Octets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGactGttGroupRev1 = ciscoGactGttGroupRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoGactGttGroupRev1.setDescription('A collection of objects providing Global Title Translation accounting feature.')
mibBuilder.exportSymbols("CISCO-ITP-GACT-MIB", cgactMtp3TableId=cgactMtp3TableId, cgactMIBObjects=cgactMIBObjects, ciscoGactMIB=ciscoGactMIB, ciscoGactMIBComplianceRev1=ciscoGactMIBComplianceRev1, ciscoGactMIBGroups=ciscoGactMIBGroups, cgactMtp3SI=cgactMtp3SI, ciscoGactMIBCompliance=ciscoGactMIBCompliance, cgactMtp3TableEntry=cgactMtp3TableEntry, ciscoGactMtp3Group=ciscoGactMtp3Group, cgactMtp3InPackets=cgactMtp3InPackets, cgactGttTableEntry=cgactGttTableEntry, cgactGtt2TranslatedPc=cgactGtt2TranslatedPc, ciscoGactGttGroupRev1=ciscoGactGttGroupRev1, cgactMtp3InOctets=cgactMtp3InOctets, ciscoGactGttGroup=ciscoGactGttGroup, ciscoGactMIBCompliances=ciscoGactMIBCompliances, cgactGtt2Octets=cgactGtt2Octets, cgactMtp3OutOctets=cgactMtp3OutOctets, cgactGttLinksetName=cgactGttLinksetName, PYSNMP_MODULE_ID=ciscoGactMIB, cgactMtp3OutPackets=cgactMtp3OutPackets, cgactMtp3=cgactMtp3, cgactMIBNotifs=cgactMIBNotifs, cgactMtp3Dpc=cgactMtp3Dpc, cgactGtt2TranslatedInstNumber=cgactGtt2TranslatedInstNumber, cgactGtt2Packets=cgactGtt2Packets, cgactGtt2LinksetName=cgactGtt2LinksetName, cgactMtp3LinksetName=cgactMtp3LinksetName, cgactGttGta=cgactGttGta, cgactMtp3Table=cgactMtp3Table, cgactGttTranslatedPc=cgactGttTranslatedPc, cgactGttOctets=cgactGttOctets, cgactGtt2SelectorName=cgactGtt2SelectorName, cgactGttPackets=cgactGttPackets, cgactMtp3Opc=cgactMtp3Opc, cgactGttTable=cgactGttTable, cgactGtt2Table=cgactGtt2Table, cgactGtt2TableEntry=cgactGtt2TableEntry, cgactGtt2Gta=cgactGtt2Gta, cgactMIBConform=cgactMIBConform, cgactGttSelectorName=cgactGttSelectorName, cgactGtt=cgactGtt)
