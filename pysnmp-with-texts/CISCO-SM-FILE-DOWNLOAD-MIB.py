#
# PySNMP MIB module CISCO-SM-FILE-DOWNLOAD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SM-FILE-DOWNLOAD-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:12:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
TimeTicks, NotificationType, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ModuleIdentity, Gauge32, IpAddress, iso, Bits, Counter64, Integer32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "NotificationType", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ModuleIdentity", "Gauge32", "IpAddress", "iso", "Bits", "Counter64", "Integer32", "ObjectIdentity")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
ciscoSmFileDownloadMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 199))
ciscoSmFileDownloadMIB.setRevisions(('2002-05-21 00:00', '2001-02-02 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoSmFileDownloadMIB.setRevisionsDescriptions(('Importing Unsigned32 from SNMPv2-SMI.', 'Initial version of the MIB Module.',))
if mibBuilder.loadTexts: ciscoSmFileDownloadMIB.setLastUpdated('200205210000Z')
if mibBuilder.loadTexts: ciscoSmFileDownloadMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoSmFileDownloadMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-wanatm@cisco.com')
if mibBuilder.loadTexts: ciscoSmFileDownloadMIB.setDescription('The MIB module for downloading files to the Service Modules specifically designed for an architecture containing a controller card and a group of sub- ordinate cards or service modules (as in a Switch). These files could contain information for performing any specific operation on the modules. For example, they could contain information on statistics retrieval like, the statistics type, bucket interval etc. The format of these files is implementation dependent.')
csFileMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 199, 1))
csDefineFile = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 199, 1, 1))
csFileStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 199, 1, 2))
csDefineFileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 199, 1, 1, 1), )
if mibBuilder.loadTexts: csDefineFileTable.setStatus('current')
if mibBuilder.loadTexts: csDefineFileTable.setDescription('A table of files that have been downloaded on some non- volatile storage (For example: Hard Disk, Flash Disk etc) on the controller card by mechanisms such as ftp, tftp etc and available for transfer to applicable service modules.')
csDefineFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 199, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-SM-FILE-DOWNLOAD-MIB", "csDefineFileIndex"))
if mibBuilder.loadTexts: csDefineFileEntry.setStatus('current')
if mibBuilder.loadTexts: csDefineFileEntry.setDescription("Information for processing the file to be downloaded to service modules. To process a file an application creates an entry in this table. This entry contains information on the file name (csDefineFileName), file operation i.e whether to download contents from the file specified or from contents saved in the database (csDefineFileOperation), slot number of the service module to download to (csDefineSlotNumber), etc. When the entry status (csDefineFileEntryStatus) in this table is 'active', the application uses csDefineFileOperation to perform the necessary operation on the file. csDefineFileStatus contains the overall status of file validation and download. Corresponding entries are created in csFileStatusTable that contains the slot-specific status of the download to service modules. Entries may not be modified or deleted if csDefineFileStatus has a value of 'inProgress'. Further, the entries may not be deleted if csDefineFileEntryStatus is 'active' i.e if the current entry status is 'active', it has to be set to 'notInService' before deletion. Deleting an entry in csDefineFileTable deletes any corresponding entries in csFileStatusTable. Rows may not be created without explicitly setting csDefineFileEntryStatus to either 'createAndGo' or 'createAndWait'.")
csDefineFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 199, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: csDefineFileIndex.setStatus('current')
if mibBuilder.loadTexts: csDefineFileIndex.setDescription('An integer to uniquely identify this entry.')
csDefineFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 199, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csDefineFileName.setStatus('current')
if mibBuilder.loadTexts: csDefineFileName.setDescription('The name of the file that has been downloaded on some non-volatile storage on the controller card. Explicit device or path names could be prepended to the file name.')
csDefineSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 199, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 32), ValueRangeConstraint(100, 100), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csDefineSlotNumber.setStatus('current')
if mibBuilder.loadTexts: csDefineSlotNumber.setDescription(' An integer that specifies the slot number of the service module to which the file needs to be downloaded. A value of 100 would indicate that file needs to be downloaded to all applicable service modules.')
csDefineFileStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 199, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("inProgress", 1), ("success", 2), ("noMemory", 3), ("fileOpenFailed", 4), ("fileReadFailed", 5), ("fileNotValid", 6), ("downloadFailed", 7), ("aborted", 8), ("dbUpdateFailed", 9), ("miscError", 10))).clone('inProgress')).setMaxAccess("readonly")
if mibBuilder.loadTexts: csDefineFileStatus.setStatus('current')
if mibBuilder.loadTexts: csDefineFileStatus.setDescription("The overall status of the file validation and service module download as surmised by the controller card. A more detailed status on service module downloads could be obtained in csFileStatusTable which stores download information specific to a particular slot. inProgress - processing file validation/download request success - file has been validated and downloaded to all applicable service modules (as per value in csDefineSlotNumber) successfully. noMemory - failure due to insufficient dynamic memory fileOpenFailed - failure to open the file downloaded to some non-volatile storage on the controller card. fileReadFailed - failure to read the file downloaded to some non-volatile storage on the controller card. fileNotValid - file parsing/validation failed downloadFailed - download to service module failed aborted - download aborted due to switchover in a redundant controller card configuration dbUpdateFailed - error in accessing/updating the database miscError - miscellaneous error due to lack of internal resource (eg. error obtaining semaphore etc) This object is valid only after the entry status becomes 'active'. This object is especially useful when csDefineSlotNumber has a value of 100 signifying a download to all applicable service modules. This object gives overall status of the download request and hence, has a value of 'downloadFailed' even if one SM fails the download. csFileStatusTable could be consulted for the purpose of obtaining a list of SMs that failed the download and their corresponding reasons.")
csDefineFileOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 199, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sendToSMsOnly", 1), ("updateAndSend", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csDefineFileOperation.setStatus('current')
if mibBuilder.loadTexts: csDefineFileOperation.setDescription(' An integer that defines the file operation: sendToSMsOnly - send file contents saved in database to all applicable service modules. updateAndSend - validate file, save contents into database and send to all applicable service modules. The database here refers to either a disk or a RAM database that is saved during controller card switchovers. The file contents are saved prior to service module download. In case of failure to download to SMs,the operation could be re-initiated with csDefineFileOperation having value sendToSMsOnly. This would avoid unnecessary download of the same file to controller card storage and file parsing/validation. ')
csDefineFileEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 199, 1, 1, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csDefineFileEntryStatus.setStatus('current')
if mibBuilder.loadTexts: csDefineFileEntryStatus.setDescription('The control that allows creation, modification, and deletion of entries. For detailed rules see the DESCRIPTION for csDefineFileEntry.')
csFileStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 199, 1, 2, 1), )
if mibBuilder.loadTexts: csFileStatusTable.setStatus('current')
if mibBuilder.loadTexts: csFileStatusTable.setDescription('A table containing status of the downloaded file for each applicable service module.')
csFileStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 199, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-SM-FILE-DOWNLOAD-MIB", "csDefineFileIndex"), (0, "CISCO-SM-FILE-DOWNLOAD-MIB", "csFileStatusSlotNumber"))
if mibBuilder.loadTexts: csFileStatusEntry.setStatus('current')
if mibBuilder.loadTexts: csFileStatusEntry.setDescription("Status of file download to a particular service module. Entries start to exist in this table only when csDefineFileStatus has been set to 'inProgress'. The number of entries per csFileStatusTable is dependant on csDefineSlotNumber specified. If a valid slot number (between values 1 and 32) is specified then this table would contain only one entry for the slot number specified. If csDefineSlotNumber has value 100, signifying a download to all SMs, an entry exists in csFileStatusTable for each applicable service module on the shelf. Hence, an entry in csDefineFileTable could result in multiple entries in csFileStatusTable. Related entries can be associated due to the common index, csDefineFileIndex, in the tables.")
csFileStatusSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 199, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: csFileStatusSlotNumber.setStatus('current')
if mibBuilder.loadTexts: csFileStatusSlotNumber.setDescription('Slot number that has an applicable service module.')
csFileSlotState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 199, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("inProgress", 1), ("notProcessed", 2), ("success", 3), ("fileOpenFailed", 4), ("fileWriteFailed", 5), ("aborted", 6), ("miscFailure", 7))).clone('notProcessed')).setMaxAccess("readonly")
if mibBuilder.loadTexts: csFileSlotState.setStatus('current')
if mibBuilder.loadTexts: csFileSlotState.setDescription('The status of the file download to each applicable service module. This status is specific to each slot. inProgress currently downloading file to service module notProcessed not started downloading to service module success successfully downloaded file to service module fileOpenFailed failed to open file on service module fileWriteFailed failed to write file on service module aborted download was terminated (eg. due to switchover in a redundant configuration) miscFailure miscellaneous error during file download')
csFileMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 199, 2))
csFileMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 199, 2, 0))
csFileMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 199, 3))
csFileMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 199, 3, 1))
csFileMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 199, 3, 2))
csFileMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 199, 3, 1, 1)).setObjects(("CISCO-SM-FILE-DOWNLOAD-MIB", "csDefineFileGroup"), ("CISCO-SM-FILE-DOWNLOAD-MIB", "csFileStatusGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csFileMIBCompliance = csFileMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: csFileMIBCompliance.setDescription('The compliance statement for entities that implement file downloads.')
csDefineFileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 199, 3, 2, 1)).setObjects(("CISCO-SM-FILE-DOWNLOAD-MIB", "csDefineFileName"), ("CISCO-SM-FILE-DOWNLOAD-MIB", "csDefineSlotNumber"), ("CISCO-SM-FILE-DOWNLOAD-MIB", "csDefineFileStatus"), ("CISCO-SM-FILE-DOWNLOAD-MIB", "csDefineFileOperation"), ("CISCO-SM-FILE-DOWNLOAD-MIB", "csDefineFileEntryStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csDefineFileGroup = csDefineFileGroup.setStatus('current')
if mibBuilder.loadTexts: csDefineFileGroup.setDescription('File download management.')
csFileStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 199, 3, 2, 2)).setObjects(("CISCO-SM-FILE-DOWNLOAD-MIB", "csFileSlotState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csFileStatusGroup = csFileStatusGroup.setStatus('current')
if mibBuilder.loadTexts: csFileStatusGroup.setDescription('File status management for applicable service modules.')
mibBuilder.exportSymbols("CISCO-SM-FILE-DOWNLOAD-MIB", csDefineFileIndex=csDefineFileIndex, csDefineFileEntryStatus=csDefineFileEntryStatus, csFileMIBCompliances=csFileMIBCompliances, csFileStatus=csFileStatus, csDefineFileGroup=csDefineFileGroup, csFileStatusTable=csFileStatusTable, csFileStatusSlotNumber=csFileStatusSlotNumber, csFileStatusGroup=csFileStatusGroup, PYSNMP_MODULE_ID=ciscoSmFileDownloadMIB, csDefineFileName=csDefineFileName, csFileMIBConformance=csFileMIBConformance, csDefineFile=csDefineFile, csFileMIBNotificationPrefix=csFileMIBNotificationPrefix, csFileSlotState=csFileSlotState, csFileMIBNotifications=csFileMIBNotifications, ciscoSmFileDownloadMIB=ciscoSmFileDownloadMIB, csFileMIBGroups=csFileMIBGroups, csDefineFileEntry=csDefineFileEntry, csDefineSlotNumber=csDefineSlotNumber, csFileStatusEntry=csFileStatusEntry, csDefineFileTable=csDefineFileTable, csDefineFileOperation=csDefineFileOperation, csDefineFileStatus=csDefineFileStatus, csFileMIBCompliance=csFileMIBCompliance, csFileMIBObjects=csFileMIBObjects)
