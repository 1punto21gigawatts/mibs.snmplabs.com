#
# PySNMP MIB module Juniper-DHCP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Juniper-DHCP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:02:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
juniMibs, = mibBuilder.importSymbols("Juniper-MIBs", "juniMibs")
juniRouterName, = mibBuilder.importSymbols("Juniper-ROUTER-MIB", "juniRouterName")
JuniInterfaceLocation, JuniEnable, JuniLogSeverity = mibBuilder.importSymbols("Juniper-TC", "JuniInterfaceLocation", "JuniEnable", "JuniLogSeverity")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Integer32, Unsigned32, iso, NotificationType, Bits, ObjectIdentity, TimeTicks, Gauge32, MibIdentifier, ModuleIdentity, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Unsigned32", "iso", "NotificationType", "Bits", "ObjectIdentity", "TimeTicks", "Gauge32", "MibIdentifier", "ModuleIdentity", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64")
TimeInterval, PhysAddress, DisplayString, TextualConvention, RowStatus, DateAndTime, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TimeInterval", "PhysAddress", "DisplayString", "TextualConvention", "RowStatus", "DateAndTime", "TruthValue")
juniDhcpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22))
juniDhcpMIB.setRevisions(('2007-01-31 20:38', '2005-11-04 19:53', '2005-09-27 21:25', '2005-12-05 21:31', '2004-11-08 16:16', '2005-10-19 21:47', '2004-09-09 20:02', '2004-01-03 00:59', '2003-09-05 18:59', '2002-12-17 16:59', '2002-05-10 19:27', '2001-03-30 18:09', '2000-02-03 19:50', '1999-06-01 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: juniDhcpMIB.setRevisionsDescriptions(('Added DHCP Option 60 support, and following objects become obsoleted: juniDhcpLocalServerCableModemServerTable, juniDhcpLocalServerCableModemRequestIn, juniDhcpLocalServerCableModemResponseIn, juniDhcpLocalServerCableModemRequestOut, juniDhcpLocalServerCableModemResponseOut, juniDhcpLocalServerCableModemRequestDropped, juniDhcpLocalServerCableModemResponseDropped, juniDhcpLocalServerCableModemRequestBad, juniDhcpLocalServerCableModemResponseBad, juniDhcpLocalServerCableModemRequestDeleted, juniDhcpLocalServerCableModemPacketsIn, juniDhcpLocalServerCableModemPacketsOut, juniDhcpLocalServerCableModemPacketsDropped. Added juniDhcpRelayBroadcastFlagReplies to control unicast/broadcast delivery of DHCP reply packets. Added juniDhcpRelayGiaddrSelectsInterface for enable/diable of DHCP Relay Giaddr Selects Interface operation mode. Added juniDhcpRelayAgentVendorSpecificSuboption to configure the Vendor-Specific sub-option of the Relay Agent Info option.', 'Added new DHCP Relay statistics to juniDhcpRelayScalars.', 'Changed juniDhcpLocalServerSubInterfaceName to be DisplayString type. Made index non-accessible. Added juniDhcpLocalServerSubInterfaceTable to support per interface address limits. Added notification objects for pool groups.', 'Added juniDhcpLocalServerBindingsLeaseInterval, juniDhcpLocalServerBindingsLeaseStartTime and juniDhcpLocalServerBindingsInitialLeaseStartTime. Update definition of juniDhcpLocalServerBindingsExpireTime. Added juniDhcpLocalServerBindingsRowStatus to permit administrative clearing of an address binding. Added juniDhcpLocalServerPoolSharedInUse to indicate sharing of DHCP pool addresses. Added statistics for renews, rebinds, errors, and discards. Added juniDhcpRelayLayer2UnicastReplies to control L2 ucast L3 bcast of DHCP reply packets.', 'Added ability to administratively delete DHCP local server address bindings.', 'Added new attributes juniDhcpLocalServerSnmpTrap and juniDhcpLocalServerInhibitRoaming. Also added juniDhcpLocalServerDuplicateClient notification.', 'Added juniDhcpLocalServerHealth notification and the juniDhcpLocalServerSubInterfaceStatisticsTable.', 'Added DHCP local server pool exhaustion variables and notifications for high pool utilization and pool exhaustion.', 'Added support to exclude the subinterafce ID from option 82 circuit ID.', 'Added hostname and vrname scalars to DHCP Relay object. Replaced Unisphere names with Juniper names.', 'Added local server reservation and cable modem support. Refined agent info enable into agent circuit ID enable and agent remote ID enable.', 'Added Local Server support.', 'Added support for DHCP Proxy Client under juniDhcpProxyClient node. Added additional error/discard statistics for DHCP Relay.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: juniDhcpMIB.setLastUpdated('200701312038Z')
if mibBuilder.loadTexts: juniDhcpMIB.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: juniDhcpMIB.setContactInfo(' Juniper Networks, Inc. Postal: 10 Technology Park Drive Westford, MA 01886-3146 USA Tel: +1 978 589 5800 Email: mib@Juniper.net')
if mibBuilder.loadTexts: juniDhcpMIB.setDescription('The DHCP MIB for the Juniper Networks enterprise.')
class JuniDhcpLocalServerPoolName(TextualConvention, OctetString):
    reference = 'RFC 854: NVT ASCII character set. See SNMPv2-TC.DisplayString DESCRIPTION for a summary.'
    description = 'DHCP Local Server Pool name. Represents textual information taken from the NVT ASCII character set.'
    status = 'current'
    displayHint = '64a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 64)

class JuniDhcpLocalServerPoolGroupName(TextualConvention, OctetString):
    reference = 'RFC 854: NVT ASCII character set. See SNMPv2-TC.DisplayString DESCRIPTION for a summary.'
    description = 'DHCP Local Server Pool group name. Represents textual information taken from the NVT ASCII character set. The pool group name is created by appending -Group to the name of the first pool in the group.'
    status = 'current'
    displayHint = '64a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 64)

class JuniDhcpLocalServerPoolDomainName(TextualConvention, OctetString):
    reference = 'RFC 854: NVT ASCII character set. See SNMPv2-TC.DisplayString DESCRIPTION for a summary.'
    description = 'DHCP Local Server Pool domain name. Represents textual information taken from the NVT ASCII character set.'
    status = 'current'
    displayHint = '64a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 64)

class JuniDhcpLocalServerPoolNetBiosNodeType(TextualConvention, Integer32):
    description = 'The set of netbios node types that may be assigned to the DHCP local server pool.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("netBiosNodeTypeNone", 1), ("netBiosNodeTypeBroadcast", 2), ("netBiosNodeTypePeerToPeer", 3), ("netBiosNodeTypeMixed", 4), ("netBiosNodeTypeHybrid", 5))

class JuniDhcpLocalServerModeType(TextualConvention, Integer32):
    description = 'The set of DHCP Local Server operational Mode types.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("localServerModeTypeEqualAccess", 1), ("localServerModeTypeStandalone", 2))

class JuniDhcpLocalServerPhysAddressString(TextualConvention, OctetString):
    reference = 'RFC 854: NVT ASCII character set. See SNMPv2-TC.DisplayString DESCRIPTION for a summary.'
    description = 'DHCP local server MAC address. Represents the physical address in textual form, eg. 00-d0-b7-09-e0-00-00-00-00-00-00-00-00-00-00-00. Only hexidecimal digits (0-9, a-f) and the dash (-) from the NVT ASCII character set are valid.'
    status = 'current'
    displayHint = '48a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 48)

juniDhcpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1))
juniDhcpRelay = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1))
juniDhcpProxy = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2))
juniDhcpLocalServerObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3))
juniDhcpRelayScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1))
juniDhcpRelayAgentInfoEnable = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 1), JuniEnable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDhcpRelayAgentInfoEnable.setStatus('deprecated')
if mibBuilder.loadTexts: juniDhcpRelayAgentInfoEnable.setDescription('Enable/disable use of the DHCP relay agent information option.')
juniDhcpRelayBadMessages = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpRelayBadMessages.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayBadMessages.setDescription('Number of received DHCP relay messages that were discarded because their message operation (e.g. BOOTREQUEST, BOOTREPLY) was unknown, possibly due to corruption.')
juniDhcpRelayUnknownMessages = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpRelayUnknownMessages.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayUnknownMessages.setDescription('Number of received DHCP relay messages that were discarded because their message type (e.g. Discover, Offer, Ack) was unknown, possibly due to corruption. This value is the sum of received request and reply messages with this error.')
juniDhcpRelayAgentInfoAlreadyPresents = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpRelayAgentInfoAlreadyPresents.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayAgentInfoAlreadyPresents.setDescription('Number of received DHCP relay requests that were discarded because they already contained the Relay Agent Info option when this agent was configured to insert it.')
juniDhcpRelayGatewayAddrSpoofs = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpRelayGatewayAddrSpoofs.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayGatewayAddrSpoofs.setDescription("Number of received DHCP relay requests that were discarded because the gateway IP address field already contained this agent's IP address.")
juniDhcpRelayAgentCircuitIdEnable = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 6), JuniEnable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDhcpRelayAgentCircuitIdEnable.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayAgentCircuitIdEnable.setDescription('Enable/disable use of the DHCP Relay Agent Info option Circuit Id suboption.')
juniDhcpRelayAgentRemoteIdEnable = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 7), JuniEnable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDhcpRelayAgentRemoteIdEnable.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayAgentRemoteIdEnable.setDescription('Enable/disable use of the DHCP Relay Agent Info option Remote Id suboption.')
juniDhcpRelayAgentHostnameEnable = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 8), JuniEnable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDhcpRelayAgentHostnameEnable.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayAgentHostnameEnable.setDescription('Enable/disable addition of Host Name to the DHCP Relay Agent Info option Circuit Id suboption.')
juniDhcpRelayAgentVrnameEnable = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 9), JuniEnable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDhcpRelayAgentVrnameEnable.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayAgentVrnameEnable.setDescription('Enable/disable addition of Virtual Router Name to the DHCP Relay Agent Info option Circuit Id suboption.')
juniDhcpRelayAgentExcludeSubIdEnable = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 10), JuniEnable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDhcpRelayAgentExcludeSubIdEnable.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayAgentExcludeSubIdEnable.setDescription('Enable/disable excluding of the subinterface identifier in the DHCP Relay Agent Info option Circuit Id suboption.')
juniDhcpRelayAgentTrustAllEnable = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 11), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDhcpRelayAgentTrustAllEnable.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayAgentTrustAllEnable.setDescription('Enable/disable Trust-all processing of the DHCP Relay Agent Info option.')
juniDhcpRelayAgentInfoAlreadyPresentForwards = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpRelayAgentInfoAlreadyPresentForwards.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayAgentInfoAlreadyPresentForwards.setDescription('Number of received DHCP relay requests forwarded to DHCP server(s) that already contain the Relay Agent Info option.')
juniDhcpRelayAgentGiaddrOverrides = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpRelayAgentGiaddrOverrides.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayAgentGiaddrOverrides.setDescription('Number of received DHCP relay requests whose giaddr field was overridden with IP address 0.0.0.0.')
juniDhcpRelayAgentOptionOverrides = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpRelayAgentOptionOverrides.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayAgentOptionOverrides.setDescription('Number of received DHCP relay requests whose Relay Agent Info option was overridden with one created by this agent.')
juniDhcpRelayDiscoverDiscards = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpRelayDiscoverDiscards.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayDiscoverDiscards.setDescription('Number of received DHCP relay Discover messages that were discarded because of lack of resources in this agent.')
juniDhcpRelayPacketDiscards = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpRelayPacketDiscards.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayPacketDiscards.setDescription('Number of received DHCP relay messages, other than Discover messages, that were discarded because of lack of resource in this agent.')
juniDhcpRelayUnknownRequestMessages = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpRelayUnknownRequestMessages.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayUnknownRequestMessages.setDescription('Number of received DHCP relay request messages that were discarded because their message type (e.g. Discover, Offer, Ack) was unknown, possibly due to corruption.')
juniDhcpRelayUnknownReplyMessages = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpRelayUnknownReplyMessages.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayUnknownReplyMessages.setDescription('Number of received DHCP relay reply messages that were discarded because their message type (e.g. Discover, Offer, Ack) was unknown, possibly due to corruption.')
juniDhcpRelayDuplicateRequestDiscards = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpRelayDuplicateRequestDiscards.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayDuplicateRequestDiscards.setDescription('Number of received DHCP relay requests that were discarded because they had a matching server address and XID of an outstanding DHCP server request.')
juniDhcpRelayPacketsTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpRelayPacketsTransmitted.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayPacketsTransmitted.setDescription('Number of DHCP relay requests successfully transmitted to DHCP servers.')
juniDhcpRelayPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpRelayPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayPacketsReceived.setDescription('Number of DHCP relay replies successfully received from DHCP servers.')
juniDhcpRelayUnknownXidDiscards = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpRelayUnknownXidDiscards.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayUnknownXidDiscards.setDescription('Number of DHCP relay replies received from DHCP servers that were discarded because their server address and XID did not match an outstanding DHCP server request.')
juniDhcpRelayDroppedStaleRequestDiscards = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpRelayDroppedStaleRequestDiscards.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayDroppedStaleRequestDiscards.setDescription('Number of DHCP relay requests sent to DHCP server that were discarded because their replies timed out.')
juniDhcpRelayLayer2UnicastReplies = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 24), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDhcpRelayLayer2UnicastReplies.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayLayer2UnicastReplies.setDescription('Enable/disable the layer 2 unicast / layer 3 broadcast of DHCP reply packets to DHCP clients. Mutually exclusive with broadcast flag replies setting.')
juniDhcpRelayGiaddrSelectsInterface = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 25), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDhcpRelayGiaddrSelectsInterface.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayGiaddrSelectsInterface.setDescription('Enable/disable the determination of the client interface by the giaddr in the ACK message.')
juniDhcpRelayAgentVendorSpecificSuboption = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 26), Bits().clone(namedValues=NamedValues(("juniDhcpRelayAgentVendorSpecificLayer2CircuitId", 0), ("juniDhcpRelayAgentVendorSpecificUserPacketClass", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDhcpRelayAgentVendorSpecificSuboption.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayAgentVendorSpecificSuboption.setDescription('Enable/disable addition of the Layer 2 Circuit ID and/or User Packet Class to the Vendor-Specific sub-option of the DHCP Relay Agent Info option.')
juniDhcpRelayBroadcastFlagReplies = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 1, 27), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDhcpRelayBroadcastFlagReplies.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayBroadcastFlagReplies.setDescription('Enable/disable using broadcast flag from the packet when sending DHCP reply packets to DHCP clients. Mutually exclusive with layer2 unicast replies setting.')
juniDhcpRelayServerTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 2), )
if mibBuilder.loadTexts: juniDhcpRelayServerTable.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayServerTable.setDescription('The (conceptual) table listing the DHCP Relay servers.')
juniDhcpRelayServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 2, 1), ).setIndexNames((0, "Juniper-DHCP-MIB", "juniDhcpRelayServerAddress"))
if mibBuilder.loadTexts: juniDhcpRelayServerEntry.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayServerEntry.setDescription('An entry (conceptual row) representing a DHCP Relay server.')
juniDhcpRelayServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: juniDhcpRelayServerAddress.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayServerAddress.setDescription('The IP address of the DHCP server to which DHCP requests received from attached DHCP clients are forwarded.')
juniDhcpRelayServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpRelayServerRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayServerRowStatus.setDescription("Supports 'createAndGo' and 'destroy' only.")
juniDhcpProxyClient = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1))
juniDhcpProxyServer = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 2))
juniDhcpProxyClientScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1, 1))
juniDhcpProxyClientUnknownServers = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpProxyClientUnknownServers.setStatus('current')
if mibBuilder.loadTexts: juniDhcpProxyClientUnknownServers.setDescription('Total number of DHCP Proxy messages received from servers not listed in the juniDhcpProxyClientServerTable.')
juniDhcpProxyClientServerTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1, 2), )
if mibBuilder.loadTexts: juniDhcpProxyClientServerTable.setStatus('current')
if mibBuilder.loadTexts: juniDhcpProxyClientServerTable.setDescription('The (conceptual) table listing the DHCP Proxy servers known to the client.')
juniDhcpProxyClientServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1, 2, 1), ).setIndexNames((0, "Juniper-DHCP-MIB", "juniDhcpProxyClientServerAddress"))
if mibBuilder.loadTexts: juniDhcpProxyClientServerEntry.setStatus('current')
if mibBuilder.loadTexts: juniDhcpProxyClientServerEntry.setDescription('An entry (conceptual row) representing a DHCP Proxy server known to the client.')
juniDhcpProxyClientServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: juniDhcpProxyClientServerAddress.setStatus('current')
if mibBuilder.loadTexts: juniDhcpProxyClientServerAddress.setDescription('The IP address of a DHCP server with which DHCP transactions are conducted by this client.')
juniDhcpProxyClientServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpProxyClientServerRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniDhcpProxyClientServerRowStatus.setDescription("Supports 'createAndGo' and 'destroy' only.")
juniDhcpProxyClientServerAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("drain", 1), ("enable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpProxyClientServerAdminStatus.setStatus('current')
if mibBuilder.loadTexts: juniDhcpProxyClientServerAdminStatus.setDescription("Permits configuration of the client's operation status with respect to this server: disable Bar the client from using this server to obtain new address leases; and cause any leases from that server, that are currently in use by the client, to be released. drain Bar the client from using this server to obtain new address leases; but permit any leases from that server, that are currently in use by the client, to remain in use until they expire naturally. enabled Allow the client to use the server to obtain new address leases. Implementations that don't support administrative control of the server always report the value of enable(2), and disallow setting this object to any other value.")
juniDhcpProxyClientServerOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("draining", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpProxyClientServerOperStatus.setStatus('current')
if mibBuilder.loadTexts: juniDhcpProxyClientServerOperStatus.setDescription("Reports the client's current operation status with respect to this server: disabled The client is barred from using this server to obtain new address leases; and any leases from that server, that were in use by the client, have been released. draining The client is barred from using this server to obtain new address leases, but one or more leases from that server, that are in use by the client, will remain in use until they expire naturally. enabled The client may use the server to obtain new address leases, and may have one or more leases currently in use. Implementations that don't support administrative control of the server always report the value enabled(2).")
juniDhcpProxyClientServerLeases = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpProxyClientServerLeases.setStatus('current')
if mibBuilder.loadTexts: juniDhcpProxyClientServerLeases.setDescription('Total number of address leases granted to the client by this server (including those that have expired). The number of active leases from this server is determined by subtracting the value of juniDhcpProxyClientServerReleases from the value of this object.')
juniDhcpProxyClientServerDiscovers = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpProxyClientServerDiscovers.setStatus('current')
if mibBuilder.loadTexts: juniDhcpProxyClientServerDiscovers.setDescription('Number of DHCP Discovers directed (i.e. nonbroadcast) by the client to this server.')
juniDhcpProxyClientServerOffers = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpProxyClientServerOffers.setStatus('current')
if mibBuilder.loadTexts: juniDhcpProxyClientServerOffers.setDescription('Number of DHCP Offers received by the client from this server.')
juniDhcpProxyClientServerRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpProxyClientServerRequests.setStatus('current')
if mibBuilder.loadTexts: juniDhcpProxyClientServerRequests.setDescription('Number of DHCP Requests sent by the client to this server.')
juniDhcpProxyClientServerAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpProxyClientServerAcks.setStatus('current')
if mibBuilder.loadTexts: juniDhcpProxyClientServerAcks.setDescription('Number of DHCP ACKS received by the client from this server.')
juniDhcpProxyClientServerNaks = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpProxyClientServerNaks.setStatus('current')
if mibBuilder.loadTexts: juniDhcpProxyClientServerNaks.setDescription('Number of DHCP NAKS received by the client from this server.')
juniDhcpProxyClientServerDeclines = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpProxyClientServerDeclines.setStatus('current')
if mibBuilder.loadTexts: juniDhcpProxyClientServerDeclines.setDescription('Number of DHCP Declines sent by the client to this server.')
juniDhcpProxyClientServerReleases = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpProxyClientServerReleases.setStatus('current')
if mibBuilder.loadTexts: juniDhcpProxyClientServerReleases.setDescription('Number of DHCP Releases sent by the client to this server.')
juniDhcpProxyClientServerInforms = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpProxyClientServerInforms.setStatus('current')
if mibBuilder.loadTexts: juniDhcpProxyClientServerInforms.setDescription('Number of DHCP Informs sent by the client to this server.')
juniDhcpProxyClientServerBadMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpProxyClientServerBadMessages.setStatus('current')
if mibBuilder.loadTexts: juniDhcpProxyClientServerBadMessages.setDescription('Number of DHCP Proxy messages received by the client from this server, that were discarded because of apparent corruption.')
juniDhcpProxyClientServerUnknownMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpProxyClientServerUnknownMessages.setStatus('current')
if mibBuilder.loadTexts: juniDhcpProxyClientServerUnknownMessages.setDescription('Number of DHCP Proxy messages received by the client from this server, that were discarded because they contained information or options not recognized by the client.')
juniDhcpLocalServerStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1))
juniDhcpLocalServerBindings = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 2))
juniDhcpLocalServerPool = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3))
juniDhcpLocalServerAttributes = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 4))
juniDhcpLocalServerReserves = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 5))
juniDhcpLocalServerCableModemServers = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 6))
juniDhcpLocalServerCableModemStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 7))
juniDhcpLocalServerPoolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 8))
juniDhcpLocalServerMemUsage = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerMemUsage.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerMemUsage.setDescription('The amount (in bytes) of memory currently allocated to this local server.')
juniDhcpLocalServerNumBindings = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerNumBindings.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerNumBindings.setDescription('The number of address bindings maintained by this local server.')
juniDhcpLocalServerRxDiscovers = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerRxDiscovers.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerRxDiscovers.setDescription('The number of discover messages received by this local server.')
juniDhcpLocalServerRxAccepts = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerRxAccepts.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerRxAccepts.setDescription('The number of accept messages received by this local server.')
juniDhcpLocalServerRxRenews = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerRxRenews.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerRxRenews.setDescription('The number of renew messages received by this local server.')
juniDhcpLocalServerRxDeclines = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerRxDeclines.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerRxDeclines.setDescription('The number of decline messages received by this local server.')
juniDhcpLocalServerRxReleases = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerRxReleases.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerRxReleases.setDescription('The number of release messages received by this local server.')
juniDhcpLocalServerRxInforms = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerRxInforms.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerRxInforms.setDescription('The number of inform messages received by this local server.')
juniDhcpLocalServerTxOffers = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerTxOffers.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerTxOffers.setDescription('The number of offer messages sent by this local server.')
juniDhcpLocalServerTxAcks = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerTxAcks.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerTxAcks.setDescription('The number of accept ack messages sent by this local server.')
juniDhcpLocalServerTxNaks = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerTxNaks.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerTxNaks.setDescription('The number of nak messages sent by this local server.')
juniDhcpLocalServerUnknownMessages = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerUnknownMessages.setStatus('deprecated')
if mibBuilder.loadTexts: juniDhcpLocalServerUnknownMessages.setDescription('The number of unknown messages processed by this local server. This object is deprecated and will return 0.')
juniDhcpLocalServerBadMessages = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerBadMessages.setStatus('deprecated')
if mibBuilder.loadTexts: juniDhcpLocalServerBadMessages.setDescription('The number of bad messages processed by this local server. This object is deprecated and will return 0.')
juniDhcpLocalServerPacketsIn = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerPacketsIn.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPacketsIn.setDescription('The number of input packets processed by this local server.')
juniDhcpLocalServerPacketsOut = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerPacketsOut.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPacketsOut.setDescription('The number of output packets processed by this local server.')
juniDhcpLocalServerRxRebinds = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerRxRebinds.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerRxRebinds.setDescription('The number of rebind messages received by this local server.')
juniDhcpLocalServerRxUnknownClients = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerRxUnknownClients.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerRxUnknownClients.setDescription('The number of non-request messages received by this local server that have no matching entry in the server database.')
juniDhcpLocalServerRxInErrors = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerRxInErrors.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerRxInErrors.setDescription('The number of packets received by this local server that can not be processed due to protocol or configuration errors.')
juniDhcpLocalServerRxInDiscards = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerRxInDiscards.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerRxInDiscards.setDescription('The number of packets received by this local server that can not be processed due to system resource issues.')
juniDhcpLocalServerTxRenewAcks = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerTxRenewAcks.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerTxRenewAcks.setDescription('The number of renew ack messages sent by this local server.')
juniDhcpLocalServerTxRebindAcks = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerTxRebindAcks.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerTxRebindAcks.setDescription('The number of rebind ack messages sent by this local server.')
juniDhcpLocalServerTxRenewNaks = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerTxRenewNaks.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerTxRenewNaks.setDescription('The number of renew nak messages sent by this local server.')
juniDhcpLocalServerTxRebindNaks = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerTxRebindNaks.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerTxRebindNaks.setDescription('The number of rebind nak messages sent by this local server.')
juniDhcpLocalServerTxOutErrors = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerTxOutErrors.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerTxOutErrors.setDescription('The number of packets that could not be transmitted by this local server due to protocol or configuration errors.')
juniDhcpLocalServerTxOutDiscards = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerTxOutDiscards.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerTxOutDiscards.setDescription('The number of packets that could not be transmitted by this local server due to system resource issues.')
juniDhcpLocalServerRxOtherRequests = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerRxOtherRequests.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerRxOtherRequests.setDescription('The number of requests for which the request type cannot be determined. For example, a request from an unknown client.')
juniDhcpLocalServerSubInterfaceStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30), )
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceStatisticsTable.setDescription('A table of subinterface statistics maintained by this DHCP Local Server.')
juniDhcpLocalServerSubInterfaceStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1), ).setIndexNames((0, "IF-MIB", "InterfaceIndex"))
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceStatisticsEntry.setDescription('An entry (conceptual row) representing an address binding maintained by this DHCP Local Server.')
juniDhcpLocalServerSubInterfaceMemUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceMemUsage.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceMemUsage.setDescription('The amount (in bytes) of memory currently allocated to this local server.')
juniDhcpLocalServerSubInterfaceNumBindings = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceNumBindings.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceNumBindings.setDescription('The number of address bindings maintained by this local server.')
juniDhcpLocalServerSubInterfaceRxDiscovers = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxDiscovers.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxDiscovers.setDescription('The number of discover messages received by this local server.')
juniDhcpLocalServerSubInterfaceRxAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxAccepts.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxAccepts.setDescription('The number of accept messages received by this local server.')
juniDhcpLocalServerSubInterfaceRxRenews = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxRenews.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxRenews.setDescription('The number of renew messages received by this local server.')
juniDhcpLocalServerSubInterfaceRxDeclines = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxDeclines.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxDeclines.setDescription('The number of decline messages received by this local server.')
juniDhcpLocalServerSubInterfaceRxReleases = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxReleases.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxReleases.setDescription('The number of release messages received by this local server.')
juniDhcpLocalServerSubInterfaceRxInforms = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxInforms.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxInforms.setDescription('The number of inform messages received by this local server.')
juniDhcpLocalServerSubInterfaceTxOffers = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTxOffers.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTxOffers.setDescription('The number of offer messages sent by this local server.')
juniDhcpLocalServerSubInterfaceTxAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTxAcks.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTxAcks.setDescription('The number of ack messages sent by this local server.')
juniDhcpLocalServerSubInterfaceTxNaks = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTxNaks.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTxNaks.setDescription('The number of nak messages sent by this local server.')
juniDhcpLocalServerSubInterfaceUnknownMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceUnknownMessages.setStatus('deprecated')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceUnknownMessages.setDescription('The number of unknown messages processed by this local server. This object has been deprecated and will return 0.')
juniDhcpLocalServerSubInterfaceBadMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceBadMessages.setStatus('deprecated')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceBadMessages.setDescription('The number of bad messages processed by this local server. This object has been deprecated and will return 0.')
juniDhcpLocalServerSubInterfacePacketsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfacePacketsIn.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfacePacketsIn.setDescription('The number of input packets processed by this local server.')
juniDhcpLocalServerSubInterfacePacketsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfacePacketsOut.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfacePacketsOut.setDescription('The number of output packets processed by this local server.')
juniDhcpLocalServerSubInterfaceClientCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceClientCount.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceClientCount.setDescription('The number of clients active on this subinterface.')
juniDhcpLocalServerSubInterfaceDeniedLogins = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceDeniedLogins.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceDeniedLogins.setDescription('The number of logins denied on this subinterface since the last allowed login.')
juniDhcpLocalServerSubInterfaceDeniedTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceDeniedTotal.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceDeniedTotal.setDescription('The total number of logins denied on this subinterface.')
juniDhcpLocalServerSubInterfaceRxRebinds = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxRebinds.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxRebinds.setDescription('The number of rebind messages received on this interface.')
juniDhcpLocalServerSubInterfaceRxUnknownClients = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxUnknownClients.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxUnknownClients.setDescription('The number of non-request messages received on this interface that have no matching entry in the server database.')
juniDhcpLocalServerSubInterfaceRxInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxInErrors.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxInErrors.setDescription('The number of packets received on this interface that can not be processed due to protocol or configuration errors.')
juniDhcpLocalServerSubInterfaceRxInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxInDiscards.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxInDiscards.setDescription('The number of packets received on this interface that can not be processed due to system resource issues.')
juniDhcpLocalServerSubInterfaceTxRenewAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTxRenewAcks.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTxRenewAcks.setDescription('The number of renew ack messages sent on this interface.')
juniDhcpLocalServerSubInterfaceTxRebindAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTxRebindAcks.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTxRebindAcks.setDescription('The number of rebind ack messages sent on this interface.')
juniDhcpLocalServerSubInterfaceTxRenewNaks = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTxRenewNaks.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTxRenewNaks.setDescription('The number of renew nak messages sent on this interface.')
juniDhcpLocalServerSubInterfaceTxRebindNaks = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTxRebindNaks.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTxRebindNaks.setDescription('The number of rebind nak messages sent on this interface.')
juniDhcpLocalServerSubInterfaceTxOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTxOutErrors.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTxOutErrors.setDescription('The number of packets that could not be transmitted on this interface due to protocol or configuration errors.')
juniDhcpLocalServerSubInterfaceTxOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTxOutDiscards.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTxOutDiscards.setDescription('The number of packets that could not be transmitted on this interface due to system resource issues.')
juniDhcpLocalServerSubInterfaceRxOtherRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 1, 30, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxOtherRequests.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceRxOtherRequests.setDescription('The number of requests for which the request type cannot be determined. For example, a request from an unknown client.')
juniDhcpLocalServerBindingsTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 2, 1), )
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsTable.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsTable.setDescription('A table of address bindings maintained by this DHCP Local Server.')
juniDhcpLocalServerBindingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 2, 1, 1), ).setIndexNames((0, "Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsIpAddress"))
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsEntry.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsEntry.setDescription('An entry (conceptual row) representing an address binding maintained by this DHCP Local Server.')
juniDhcpLocalServerBindingsIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 2, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsIpAddress.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsIpAddress.setDescription('The IP Address associated with this entry in the bindings table.')
juniDhcpLocalServerBindingsPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 2, 1, 1, 2), PhysAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsPhysAddress.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsPhysAddress.setDescription('The Physical (MAC) Address associated with this entry in the bindings table and corresponding to the IP Address denoted by the table index.')
juniDhcpLocalServerBindingsInfinite = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 2, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsInfinite.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsInfinite.setDescription('If true, then this binding will be maintained indefinitely. If false, then this binding will expire in accordance with the value of juniDhcpLocalServerBindingsExpireTime.')
juniDhcpLocalServerBindingsExpireTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsExpireTime.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsExpireTime.setDescription('If juniDhcpLocalServerBindingsInfinite is false, then this is the time remaining prior to expiration of the address binding associated with this entry.')
juniDhcpLocalServerBindingsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 2, 1, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsRowStatus.setDescription('Entries in this table are created only via DHCP operation, never via SNMP. Has the value active(1) when an entry exists. Set to destroy(6) to cause this IP address binding and user-specific routes to be removed. The effect is the same as if the user had released his address binding, or his address lease had expired. No other RowStatus enumeration values are supported.')
juniDhcpLocalServerBindingsLeaseInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsLeaseInterval.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsLeaseInterval.setDescription('If juniDhcpLocalServerBindingsInfinite is false, then this object is the time, in seconds, of the current lease.')
juniDhcpLocalServerBindingsLeaseStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 2, 1, 1, 7), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsLeaseStartTime.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsLeaseStartTime.setDescription('The time the current lease was started.')
juniDhcpLocalServerBindingsInitialLeaseStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 2, 1, 1, 8), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsInitialLeaseStartTime.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerBindingsInitialLeaseStartTime.setDescription('The initial time the lease was offered.')
juniDhcpLocalServerPoolTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1), )
if mibBuilder.loadTexts: juniDhcpLocalServerPoolTable.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolTable.setDescription("A table of address pools associated this DHCP Local Server. A DHCP Local Server may have multiple uniquely-named pools configured; however, only a single pool (with the name 'default') may have a network address and mask assigned.")
juniDhcpLocalServerPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1), ).setIndexNames((0, "Juniper-DHCP-MIB", "juniDhcpLocalServerPoolName"))
if mibBuilder.loadTexts: juniDhcpLocalServerPoolEntry.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolEntry.setDescription('An entry (conceptual row) representing an address pool associated this DHCP Local Server.')
juniDhcpLocalServerPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 1), JuniDhcpLocalServerPoolName())
if mibBuilder.loadTexts: juniDhcpLocalServerPoolName.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolName.setDescription("The name of the local server pool to which this entry belongs. Only an entry with the name 'default' may have a network address and mask assigned.")
juniDhcpLocalServerPoolDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 2), JuniDhcpLocalServerPoolDomainName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolDomainName.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolDomainName.setDescription('The domain name assigned to this local server pool. Modification of extant values for this object require that it first be cleared (via set to null string) and then modified (via set to new string).')
juniDhcpLocalServerPoolNetworkIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 3), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolNetworkIpAddress.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolNetworkIpAddress.setDescription("The IP Address assigned to this local server pool. This object must be set in conjunction with juniDhcpLocalServerPoolNetworkMask. Modification of extant values for this object require that it first be cleared (via set to null IP address) and then modified (via set to new IP address). Only configurable/valid for entries with the index name (juniDhcpLocalServerPoolName) 'default'.")
juniDhcpLocalServerPoolNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 4), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolNetworkMask.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolNetworkMask.setDescription("The network mask assigned to this local server pool. This object must be set in conjunction with juniDhcpLocalServerPoolNetworkIpAddress. Modification of extant values for this object require that it first be cleared (via set to null IP mask) and then modified (via set to new IP mask). Only configurable/valid for entries with the index name (juniDhcpLocalServerPoolName) 'default'.")
juniDhcpLocalServerPoolNetBiosNodeType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 5), JuniDhcpLocalServerPoolNetBiosNodeType().clone('netBiosNodeTypeHybrid')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolNetBiosNodeType.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolNetBiosNodeType.setDescription('The NetBios node type assigned to this local server pool.')
juniDhcpLocalServerPoolLeaseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 6), TimeInterval()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolLeaseTime.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolLeaseTime.setDescription('The time interval for address renewal required of a client using the address associated with this local server pool entry. Setting a zero value will effect an infinite lease, which in turn is indicated by the value -1 returned via a get.')
juniDhcpLocalServerPoolPrimaryDnsServer = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 7), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolPrimaryDnsServer.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolPrimaryDnsServer.setDescription('The address of the primary DNS Server associated with this local server pool. This object must be set in conjunction with juniDhcpLocalServerPoolSecondaryDnsServer. Modification of extant values for this object require that it first be cleared (via set to null IP address) and then modified (via set to new IP address).')
juniDhcpLocalServerPoolSecondaryDnsServer = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 8), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolSecondaryDnsServer.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolSecondaryDnsServer.setDescription('The address of the secondary DNS Server associated with this local server pool. This object must be set in conjunction with juniDhcpLocalServerPoolPrimaryDnsServer. Modification of extant values for this object require that it first be cleared (via set to null IP address) and then modified (via set to new IP address).')
juniDhcpLocalServerPoolPrimaryNetBiosNameServer = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 9), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolPrimaryNetBiosNameServer.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolPrimaryNetBiosNameServer.setDescription('The address of the primary NetBios Name Server associated with this local server pool. This object must be set in conjunction with juniDhcpLocalServerPoolSecondaryNetBiosNameServer. Modification of extant values for this object require that it first be cleared (via set to null IP address) and then modified (via set to new IP address).')
juniDhcpLocalServerPoolSecondaryNetBiosNameServer = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 10), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolSecondaryNetBiosNameServer.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolSecondaryNetBiosNameServer.setDescription('The address of the secondary NetBios Name Server associated with this local server pool. This object must be set in conjunction with juniDhcpLocalServerPoolPrimaryNetBiosNameServer. Modification of extant values for this object require that it first be cleared (via set to null IP address) and then modified (via set to new IP address).')
juniDhcpLocalServerPoolPrimaryDefaultRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 11), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolPrimaryDefaultRouter.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolPrimaryDefaultRouter.setDescription('The address of the primary Default Router associated with this local server pool. This object must be set in conjunction with juniDhcpLocalServerPoolSecondaryDefaultRouter. Modification of extant values for this object require that it first be cleared (via set to null IP address) and then modified (via set to new IP address).')
juniDhcpLocalServerPoolSecondaryDefaultRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 12), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolSecondaryDefaultRouter.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolSecondaryDefaultRouter.setDescription('The address of the secondary Default Router associated with this local server pool. This object must be set in conjunction with juniDhcpLocalServerPoolPrimaryDefaultRouter. Modification of extant values for this object require that it first be cleared (via set to null IP address) and then modified (via set to new IP address).')
juniDhcpLocalServerPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolRowStatus.setDescription("Supports 'createAndGo' and 'destroy' only.")
juniDhcpLocalServerPoolLinkName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 14), JuniDhcpLocalServerPoolName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolLinkName.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolLinkName.setDescription("The name of this local server pool's backup pool.")
juniDhcpLocalServerPoolHighUtilThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(85)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolHighUtilThreshold.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolHighUtilThreshold.setDescription("The value of address pool utilization, where if reached for the first time, will generate a high address pool utilization event to the management entity on this system. The value of this object must be greater than the value of juniDhcpLocalServerPoolAbatedUtilThreshold. The following pseudo-code states when high address pool utilization notification will be generated comparing this object value to the value of juniDhcpLocalServerPoolUtilPct object. Address pool utilization state will be set to 'ok' when the pool was created first time and after that it will only be set in the context of and while triggering high and abated threshold notifications. if ( percentageOfAddressPoolUtil >= percentageOfAddressPoolHighUtilThreshold ) { if ( addressPoolUtilState == addressPoolUtilStateOk ) { addressPoolUtilState = addressPoolUtilStateWarning; if ( addressPoolUtilTrapsEnabled ) triggerAddressPoolHighUtilTrap(); } } ")
juniDhcpLocalServerPoolAbatedUtilThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(75)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolAbatedUtilThreshold.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolAbatedUtilThreshold.setDescription("The value of address pool utilization that is used to determine when to generate an abated address pool utilization event notification to the management entity on this system. The value of this object must be less than the value of the juniDhcpLocalServerPoolHighUtilThreshold. The abated address pool utilization event is sent once if the high address pool utilization threshold is reached and utilization falls to the value of this object. The following pseudo-code states when abated address pool utilization notification will be generated comparing this object value to the value of juniDhcpLocalServerPoolUtilPct object. Address pool utilization state will be set to 'ok' when the pool was created first time and after that it will only be set in the context of and while triggering high and abated threshold notifications. if ( percentageOfAddressPoolUtil >= percentageOfAddressPoolAbatedUtilThreshold ) { if ( addressPoolUtilState == addressPoolUtilStateWarning ) { addressPoolUtilState = addressPoolUtilStateOk; if ( addressPoolUtilTrapsEnabled ) triggerAddressPoolAbatedUtilTrap(); } } ")
juniDhcpLocalServerPoolUtilPct = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolUtilPct.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolUtilPct.setDescription("The current address utilization for this pool. When all the addresses in the pool are exhausted this object value becomes 100, i.e, poolUtil = 100%. When the pool reaches this stage, there won't be anymore addresses available from the pool. Any attempt to allocate an address from the pool will each time result in a juniDhcpLocalServerPoolNoAddresses notification.")
juniDhcpLocalServerPoolTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 18), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolTrapEnable.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolTrapEnable.setDescription('The configuration setting for address pool notifications. Setting this object to true(1) will enable the sending of address pool event notifications to the management entity on this device. Setting this object to false(2) will disable event notification reports.')
juniDhcpLocalServerPoolInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolInUse.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolInUse.setDescription('The number of addresses currently allocated from this pool.')
juniDhcpLocalServerPoolSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolSize.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolSize.setDescription('The number of addresses available in this pool.')
juniDhcpLocalServerPoolSharedInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 3, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolSharedInUse.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolSharedInUse.setDescription('The number of addresses currently allocated from this pool to an application other than DHCP.')
juniDhcpLocalServerAttributesMode = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 4, 1), JuniDhcpLocalServerModeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerAttributesMode.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerAttributesMode.setDescription('An object representing the mode in which the DHCP Local Server is operating.')
juniDhcpLocalServerSubInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 4, 2), )
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTable.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceTable.setDescription('A table of subinterface configuration maintained by this DHCP Local Server.')
juniDhcpLocalServerSubInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 4, 2, 1), ).setIndexNames((0, "Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceIndex"))
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceEntry.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceEntry.setDescription('An entry (conceptual row) representing a subinterface binding for this DHCP Local Server. Rows in this table cannot be created via SNMP. They are created at run time by the Local Server')
juniDhcpLocalServerSubInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 4, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceIndex.setDescription('The index value of this table entry.')
juniDhcpLocalServerSubInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceName.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceName.setDescription('The string that identifies the subinterface for this entry.')
juniDhcpLocalServerSubInterfaceLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceLimit.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSubInterfaceLimit.setDescription('The number of clients allowed by the local server on this subinterface.')
juniDhcpLocalServerSnmpTrap = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 4, 3), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDhcpLocalServerSnmpTrap.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerSnmpTrap.setDescription('An object that determines whether or not the DHCP Local Server generates SNMP traps when conditions that trigger traps occur.')
juniDhcpLocalServerInhibitRoaming = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 4, 4), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDhcpLocalServerInhibitRoaming.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerInhibitRoaming.setDescription('An object representing the mode in which the DHCP Local Server is operating as it pertains to roaming clients.')
juniDhcpLocalServerUniqueClientIds = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 4, 5), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDhcpLocalServerUniqueClientIds.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerUniqueClientIds.setDescription('An object representing the mode in which the DHCP Local Server is operating as it pertains to allowing multiple clients having identical client IDs or hardware addresses.')
juniDhcpLocalServerPoolGroupTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 8, 1), )
if mibBuilder.loadTexts: juniDhcpLocalServerPoolGroupTable.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolGroupTable.setDescription('A table of address pool groups associated this DHCP Local Server. A DHCP Local Server may have multiple uniquely-named pool groups configured. This table is only used for pool group traps.')
juniDhcpLocalServerPoolGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 8, 1, 1), ).setIndexNames((0, "Juniper-DHCP-MIB", "juniDhcpLocalServerPoolGroupName"))
if mibBuilder.loadTexts: juniDhcpLocalServerPoolGroupEntry.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolGroupEntry.setDescription('An entry (conceptual row) representing an address pool group associated this DHCP Local Server.')
juniDhcpLocalServerPoolGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 8, 1, 1, 1), JuniDhcpLocalServerPoolGroupName())
if mibBuilder.loadTexts: juniDhcpLocalServerPoolGroupName.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolGroupName.setDescription('The name of the local server pool group to which this entry belongs.')
juniDhcpLocalServerPoolGroupSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 8, 1, 1, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolGroupSize.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolGroupSize.setDescription('Total number of addresses in the pool group for utilization events.')
juniDhcpLocalServerPoolGroupInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 8, 1, 1, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolGroupInUse.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolGroupInUse.setDescription('Total number of addresses in use for pool group for utilization events.')
juniDhcpLocalServerPoolGroupUtilPct = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: juniDhcpLocalServerPoolGroupUtilPct.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolGroupUtilPct.setDescription('Percentage of pool addresses in use for pool group for utilization events.')
juniDhcpLocalServerReservesTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 5, 1), )
if mibBuilder.loadTexts: juniDhcpLocalServerReservesTable.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerReservesTable.setDescription('A table of pool name, MAC address, and IP address reservation groups that are maintained by this DHCP Local Server.')
juniDhcpLocalServerReservesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 5, 1, 1), ).setIndexNames((0, "Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryIpAddress"))
if mibBuilder.loadTexts: juniDhcpLocalServerReservesEntry.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerReservesEntry.setDescription('An entry (conceptual row) representing an MAC address, IP address, pool name reservation maintained by this DHCP Local Server.')
juniDhcpLocalServerReservesEntryIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 5, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: juniDhcpLocalServerReservesEntryIpAddress.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerReservesEntryIpAddress.setDescription('The IP Address associated with this entry in reserves table.')
juniDhcpLocalServerReservesEntryPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 5, 1, 1, 2), JuniDhcpLocalServerPoolName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerReservesEntryPoolName.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerReservesEntryPoolName.setDescription('The name of the local server pool associated with this entry in the reserves table and corresponding to the IP Address denoted by the table index.')
juniDhcpLocalServerReservesEntryPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 5, 1, 1, 3), JuniDhcpLocalServerPhysAddressString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerReservesEntryPhysAddress.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerReservesEntryPhysAddress.setDescription('The physical (MAC) address string associated with this entry in the reserves table and corresponding to the IP Address denoted by the table index.')
juniDhcpLocalServerReservesEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 5, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerReservesEntryRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerReservesEntryRowStatus.setDescription("Supports 'createAndGo' and 'destroy' only.")
juniDhcpLocalServerCableModemServerTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 6, 1), )
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemServerTable.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemServerTable.setDescription('The (conceptual) table listing the DHCP Cable Modem Relay servers.')
juniDhcpLocalServerCableModemServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 6, 1, 1), ).setIndexNames((0, "Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemServerEntryAddress"))
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemServerEntry.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemServerEntry.setDescription('An entry (conceptual row) representing a DHCP Cable Modem DHCP server.')
juniDhcpLocalServerCableModemServerEntryAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 6, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemServerEntryAddress.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemServerEntryAddress.setDescription('The IP address of the DHCP server to which DHCP requests received from attached Cable Modem DHCP clients are forwarded.')
juniDhcpLocalServerCableModemServerEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 6, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemServerEntryRowStatus.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemServerEntryRowStatus.setDescription("Supports 'createAndGo' and 'destroy' only.")
juniDhcpLocalServerCableModemRequestIn = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 7, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemRequestIn.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemRequestIn.setDescription('The number of Cable Modem DHCP Client Requests that are received.')
juniDhcpLocalServerCableModemResponseIn = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 7, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemResponseIn.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemResponseIn.setDescription('The number of Cable Modem DHCP Server Responses that are received.')
juniDhcpLocalServerCableModemRequestOut = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 7, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemRequestOut.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemRequestOut.setDescription('The number of Cable Modem DHCP Client Request that are transmitted.')
juniDhcpLocalServerCableModemResponseOut = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 7, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemResponseOut.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemResponseOut.setDescription('The number of Cable Modem DHCP Server Responses that are transmitted.')
juniDhcpLocalServerCableModemRequestDropped = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 7, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemRequestDropped.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemRequestDropped.setDescription('The number of Cable Modem DHCP Client Request that are dropped.')
juniDhcpLocalServerCableModemResponseDropped = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 7, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemResponseDropped.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemResponseDropped.setDescription('The number of Cable Modem DHCP Server Responses that are dropped.')
juniDhcpLocalServerCableModemRequestBad = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 7, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemRequestBad.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemRequestBad.setDescription('The number of Cable Modem DHCP Client Request that are bad.')
juniDhcpLocalServerCableModemResponseBad = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 7, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemResponseBad.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemResponseBad.setDescription('The number of Cable Modem DHCP Server Responses that are bad.')
juniDhcpLocalServerCableModemRequestDeleted = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 7, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemRequestDeleted.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemRequestDeleted.setDescription('The number of Cable Modem DHCP Requests that were deleted because they were stale.')
juniDhcpLocalServerCableModemPacketsIn = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 7, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemPacketsIn.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemPacketsIn.setDescription('The number of Cable Modem DHCP Packets received.')
juniDhcpLocalServerCableModemPacketsOut = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 7, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemPacketsOut.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemPacketsOut.setDescription('The number of Cable Modem DHCP Packets transmitted.')
juniDhcpLocalServerCableModemPacketsDropped = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 7, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemPacketsDropped.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerCableModemPacketsDropped.setDescription('The number of Cable Modem DHCP Packets dropped.')
juniDhcpTrapControl = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 2))
juniDhcpLocalServerRelayTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 1, 0))
juniDhcpLocalServerProxyTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 2, 0))
juniDhcpLocalServerTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 0))
juniDhcpLocalServerPoolHighAddrUtil = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 0, 1)).setObjects(("Juniper-ROUTER-MIB", "juniRouterName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSize"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolInUse"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolUtilPct"))
if mibBuilder.loadTexts: juniDhcpLocalServerPoolHighAddrUtil.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolHighAddrUtil.setDescription('Reports when the address pool utilization has reached the configured high utilization threshold. See the DESCRIPTIONs for the juniDhcpLocalServerPoolTable elements for details on what conditions trigger a high pool utilization notification.')
juniDhcpLocalServerPoolAbatedAddrUtil = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 0, 2)).setObjects(("Juniper-ROUTER-MIB", "juniRouterName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSize"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolInUse"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolUtilPct"))
if mibBuilder.loadTexts: juniDhcpLocalServerPoolAbatedAddrUtil.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolAbatedAddrUtil.setDescription('Reports when the address pool utilization has fallen to the configured abated threshold level. See the DESCRIPTIONs for the juniDhcpLocalServerPoolTable elements for details on what conditions trigger a abated pool utilization notification.')
juniDhcpLocalServerPoolNoAddresses = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 0, 3)).setObjects(("Juniper-ROUTER-MIB", "juniRouterName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSize"))
if mibBuilder.loadTexts: juniDhcpLocalServerPoolNoAddresses.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolNoAddresses.setDescription('Reports when the address pool has exhausted its supply of addresses. This trap is issued every time a request is made to allocate an address from a fully utilized pool. See the DESCRIPTIONs for the juniDhcpLocalServerPoolTable elements for details on what conditions trigger a no address pool utilization notification.')
juniDhcpLocalServerHealth = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 0, 4)).setObjects(("Juniper-ROUTER-MIB", "juniRouterName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerEventSeverity"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerEventString"))
if mibBuilder.loadTexts: juniDhcpLocalServerHealth.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerHealth.setDescription('Reports when a health event occurs in the DhcpLocalServer application on the router identified by juniRouterName.')
juniDhcpLocalServerPoolGroupHighAddrUtil = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 0, 5)).setObjects(("Juniper-ROUTER-MIB", "juniRouterName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolGroupSize"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolGroupInUse"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolGroupUtilPct"))
if mibBuilder.loadTexts: juniDhcpLocalServerPoolGroupHighAddrUtil.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolGroupHighAddrUtil.setDescription('Reports when the address pool group utilization has reached the configured high utilization threshold. See the DESCRIPTIONs for the juniDhcpLocalServerPoolTable elements for details on what conditions trigger a high pool group utilization notification.')
juniDhcpLocalServerPoolGroupAbatedAddrUtil = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 0, 6)).setObjects(("Juniper-ROUTER-MIB", "juniRouterName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolGroupSize"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolGroupInUse"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolGroupUtilPct"))
if mibBuilder.loadTexts: juniDhcpLocalServerPoolGroupAbatedAddrUtil.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolGroupAbatedAddrUtil.setDescription('Reports when the address pool group utilization has fallen to the configured abated threshold level. See the DESCRIPTIONs for the juniDhcpLocalServerPoolTable elements for details on what conditions trigger a abated pool group utilization notification.')
juniDhcpLocalServerPoolGroupNoAddresses = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 0, 7)).setObjects(("Juniper-ROUTER-MIB", "juniRouterName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolGroupSize"))
if mibBuilder.loadTexts: juniDhcpLocalServerPoolGroupNoAddresses.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolGroupNoAddresses.setDescription('Reports when the address pool group has exhausted its supply of addresses. This trap is issued every time a request is made to allocate an address from a fully utilized pool. See the DESCRIPTIONs for the juniDhcpLocalServerPoolTable elements for details on what conditions trigger a no address pool group utilization notification.')
juniDhcpLocalServerInterfaceLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 0, 8)).setObjects(("Juniper-ROUTER-MIB", "juniRouterName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceLimit"))
if mibBuilder.loadTexts: juniDhcpLocalServerInterfaceLimitExceeded.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerInterfaceLimitExceeded.setDescription('Reports when a subinterface has exceeded the limit of clients allowed on that subinterface.')
juniDhcpLocalServerInterfaceLimitAbated = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 0, 9)).setObjects(("Juniper-ROUTER-MIB", "juniRouterName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceLimit"))
if mibBuilder.loadTexts: juniDhcpLocalServerInterfaceLimitAbated.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerInterfaceLimitAbated.setDescription('Reports when the number of clients on a subinterface has fallen below the limit allowed on that subinterface.')
juniDhcpLocalServerDuplicateClient = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 1, 3, 0, 10)).setObjects(("Juniper-ROUTER-MIB", "juniRouterName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerMacAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerInterfaceString"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerLastDetected"))
if mibBuilder.loadTexts: juniDhcpLocalServerDuplicateClient.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerDuplicateClient.setDescription('Reports the first occurance of detection of a DHCP client that changed interfaces.')
juniDhcpLocalServerEventSeverity = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 2, 1), JuniLogSeverity()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: juniDhcpLocalServerEventSeverity.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerEventSeverity.setDescription('The syslog severity of this server health event')
juniDhcpLocalServerEventString = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 2, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: juniDhcpLocalServerEventString.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerEventString.setDescription('The text of the event string associated with the server health event')
juniDhcpLocalServerMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 2, 3), JuniDhcpLocalServerPhysAddressString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: juniDhcpLocalServerMacAddress.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerMacAddress.setDescription('The MAC address of the client that changed interfaces.')
juniDhcpLocalServerInterfaceString = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 2, 4), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: juniDhcpLocalServerInterfaceString.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerInterfaceString.setDescription('The interface where the DHCP client was detected')
juniDhcpLocalServerLastDetected = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 2, 5), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: juniDhcpLocalServerLastDetected.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerLastDetected.setDescription('The time the duplicate client was last detected')
juniDhcpMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4))
juniDhcpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 1))
juniDhcpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2))
juniDhcpRelayCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 1, 1)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayGroup"), ("Juniper-DHCP-MIB", "juniDhcpProxyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpRelayCompliance = juniDhcpRelayCompliance.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpRelayCompliance.setDescription('Obsolete compliance statement for systems supporting DHCP Relay. This statement became obsolete when Local Server support objects were added.')
juniDhcpProxyCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 1, 2)).setObjects(("Juniper-DHCP-MIB", "juniDhcpProxyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpProxyCompliance = juniDhcpProxyCompliance.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpProxyCompliance.setDescription('Obsolete compliance statement for systems supporting DHCP Proxy. This statement became obsolete when Local Server support objects were added.')
juniDhcpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 1, 3)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayGroup"), ("Juniper-DHCP-MIB", "juniDhcpProxyGroup"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpCompliance = juniDhcpCompliance.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpCompliance.setDescription('Obsolete compliance statement for systems supporting DHCP. This compliance statement became obsolete when support was added for reservations and cable modem servers.')
juniDhcpCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 1, 4)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayGroup2"), ("Juniper-DHCP-MIB", "juniDhcpProxyGroup"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpCompliance2 = juniDhcpCompliance2.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpCompliance2.setDescription('Obsolete compliance statement for systems supporting DHCP. This compliance statement became obsolete when support was added for adding host name or virtual router name to relay agent option 82.')
juniDhcpCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 1, 5)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayGroup3"), ("Juniper-DHCP-MIB", "juniDhcpProxyGroup"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpCompliance3 = juniDhcpCompliance3.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpCompliance3.setDescription('Obsolete compliance statement for systems supporting DHCP. This compliance statement became obsolete when support was added for excluding the subinterface ID from relay agent option 82.')
juniDhcpCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 1, 6)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayGroup4"), ("Juniper-DHCP-MIB", "juniDhcpProxyGroup"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpCompliance4 = juniDhcpCompliance4.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpCompliance4.setDescription('Obsolete compliance statement for systems supporting DHCP. This compliance statement became obsolete when support was added for DHCP local address pool utilizations support.')
juniDhcpCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 1, 7)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayGroup4"), ("Juniper-DHCP-MIB", "juniDhcpProxyGroup"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerGroup3"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpCompliance5 = juniDhcpCompliance5.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpCompliance5.setDescription('Obsolete compliance statement for systems supporting DHCP. This compliance statement became obsolete when support was added for the DHCP Relay Trust-all mode.')
juniDhcpCompliance6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 1, 8)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayGroup4"), ("Juniper-DHCP-MIB", "juniDhcpProxyGroup"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerGroup5"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpCompliance6 = juniDhcpCompliance6.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpCompliance6.setDescription('Obsolete compliance statement for systems supporting DHCP. This compliance statement became obsolete when support was added to administratively delete entries in juniDhcpLocalServerBindingsTable.')
juniDhcpCompliance7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 1, 9)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayGroup4"), ("Juniper-DHCP-MIB", "juniDhcpProxyGroup"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerGroup5"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpCompliance7 = juniDhcpCompliance7.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpCompliance7.setDescription('Obsolete compliance statement for systems supporting DHCP.')
juniDhcpCompliance8 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 1, 10)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayGroup4"), ("Juniper-DHCP-MIB", "juniDhcpProxyGroup"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerGroup6"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpCompliance8 = juniDhcpCompliance8.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpCompliance8.setDescription('Obsolete compliance statement for systems supporting DHCP. This compliance statement became obsolete when support was added for new DHCP Relay statistics in juniDhcpRelayScalars.')
juniDhcpCompliance9 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 1, 11)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayGroup6"), ("Juniper-DHCP-MIB", "juniDhcpProxyGroup"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerGroup6"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpCompliance9 = juniDhcpCompliance9.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpCompliance9.setDescription('Obsolete compliance statement for systems supporting DHCP.')
juniDhcpCompliance10 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 1, 12)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayGroup7"), ("Juniper-DHCP-MIB", "juniDhcpProxyGroup"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerGroup6"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpCompliance10 = juniDhcpCompliance10.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpCompliance10.setDescription('The compliance statement for systems supporting DHCP.')
juniDhcpCompliance11 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 1, 13)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayGroup8"), ("Juniper-DHCP-MIB", "juniDhcpProxyGroup"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerGroup6"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpCompliance11 = juniDhcpCompliance11.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpCompliance11.setDescription('The compliance statement for systems supporting DHCP.')
juniDhcpCompliance12 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 1, 14)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayGroup10"), ("Juniper-DHCP-MIB", "juniDhcpProxyGroup"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerGroup8"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpCompliance12 = juniDhcpCompliance12.setStatus('current')
if mibBuilder.loadTexts: juniDhcpCompliance12.setDescription('The compliance statement for systems supporting DHCP.')
juniDhcpRelayGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 1)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayAgentInfoEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentInfoAlreadyPresents"), ("Juniper-DHCP-MIB", "juniDhcpRelayGatewayAddrSpoofs"), ("Juniper-DHCP-MIB", "juniDhcpRelayServerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpRelayGroup = juniDhcpRelayGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpRelayGroup.setDescription('Obsolete collection of basic objects providing management of DHCP Relay functionality. This group became obsolete when the agent info enable was divided into agent circuit ID enable and agent remote ID enable.')
juniDhcpProxyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 2)).setObjects(("Juniper-DHCP-MIB", "juniDhcpProxyClientUnknownServers"), ("Juniper-DHCP-MIB", "juniDhcpProxyClientServerRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpProxyClientServerAdminStatus"), ("Juniper-DHCP-MIB", "juniDhcpProxyClientServerOperStatus"), ("Juniper-DHCP-MIB", "juniDhcpProxyClientServerLeases"), ("Juniper-DHCP-MIB", "juniDhcpProxyClientServerDiscovers"), ("Juniper-DHCP-MIB", "juniDhcpProxyClientServerOffers"), ("Juniper-DHCP-MIB", "juniDhcpProxyClientServerRequests"), ("Juniper-DHCP-MIB", "juniDhcpProxyClientServerAcks"), ("Juniper-DHCP-MIB", "juniDhcpProxyClientServerNaks"), ("Juniper-DHCP-MIB", "juniDhcpProxyClientServerDeclines"), ("Juniper-DHCP-MIB", "juniDhcpProxyClientServerReleases"), ("Juniper-DHCP-MIB", "juniDhcpProxyClientServerInforms"), ("Juniper-DHCP-MIB", "juniDhcpProxyClientServerBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpProxyClientServerUnknownMessages"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpProxyGroup = juniDhcpProxyGroup.setStatus('current')
if mibBuilder.loadTexts: juniDhcpProxyGroup.setDescription('The basic collection of objects providing management of DHCP Proxy functionality.')
juniDhcpLocalServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 3)).setObjects(("Juniper-DHCP-MIB", "juniDhcpLocalServerMemUsage"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerNumBindings"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxDiscovers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxAccepts"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxRenews"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxDeclines"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxReleases"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxInforms"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxOffers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPacketsIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsPhysAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsInfinite"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsExpireTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolDomainName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetworkIpAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetworkMask"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetBiosNodeType"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolLeaseTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryDnsServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryDnsServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryNetBiosNameServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryNetBiosNameServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryDefaultRouter"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryDefaultRouter"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpLocalServerGroup = juniDhcpLocalServerGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerGroup.setDescription('Obsolete basic collection of objects providing management of DHCP Local Server functionality. This group became obsolete when support was added for reservations and cable modem servers.')
juniDhcpLocalServerGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 4)).setObjects(("Juniper-DHCP-MIB", "juniDhcpLocalServerMemUsage"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerNumBindings"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxDiscovers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxAccepts"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxRenews"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxDeclines"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxReleases"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxInforms"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxOffers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPacketsIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsPhysAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsInfinite"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsExpireTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolDomainName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetworkIpAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetworkMask"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetBiosNodeType"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolLeaseTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryDnsServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryDnsServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryNetBiosNameServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryNetBiosNameServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryDefaultRouter"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryDefaultRouter"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolLinkName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerAttributesMode"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryPoolName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryPhysAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemServerEntryRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestDropped"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseDropped"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestBad"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseBad"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestDeleted"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemPacketsIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemPacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemPacketsDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpLocalServerGroup2 = juniDhcpLocalServerGroup2.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerGroup2.setDescription('Obsolete basic collection of objects providing management of DHCP Local Server functionality. This group became obsolete when support was added for DHCP local pool utilization.')
juniDhcpRelayGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 5)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentInfoAlreadyPresents"), ("Juniper-DHCP-MIB", "juniDhcpRelayGatewayAddrSpoofs"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentCircuitIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentRemoteIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayServerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpRelayGroup2 = juniDhcpRelayGroup2.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpRelayGroup2.setDescription('Obsolete basic collection of objects providing management of DHCP Relay functionality. This group became obsolete when support was added for adding host name or virtual router name to Option 82 circuit ID field.')
juniDhcpRelayGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 6)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentInfoAlreadyPresents"), ("Juniper-DHCP-MIB", "juniDhcpRelayGatewayAddrSpoofs"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentCircuitIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentRemoteIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentHostnameEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentVrnameEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayServerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpRelayGroup3 = juniDhcpRelayGroup3.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpRelayGroup3.setDescription('Obsolete collection of objects providing management of DHCP Relay functionality. This group became obsolete when support was added for excluding the subinterface ID in the Option 82 circuit ID field.')
juniDhcpRelayGroup4 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 7)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentInfoAlreadyPresents"), ("Juniper-DHCP-MIB", "juniDhcpRelayGatewayAddrSpoofs"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentCircuitIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentRemoteIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentHostnameEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentVrnameEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentExcludeSubIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayServerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpRelayGroup4 = juniDhcpRelayGroup4.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpRelayGroup4.setDescription('Obsolete collection of objects providing management of DHCP Relay functionality. This group became obsolete when support was added for the Trust-all mode.')
juniDhcpRelayDeprecatedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 8)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayAgentInfoEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpRelayDeprecatedGroup = juniDhcpRelayDeprecatedGroup.setStatus('deprecated')
if mibBuilder.loadTexts: juniDhcpRelayDeprecatedGroup.setDescription('Deprecated object providing management of DHCP Relay functionality. This group became deprecated when the agent info enable was divided into agent circuit ID enable and agent remote ID enable.')
juniDhcpLocalServerGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 9)).setObjects(("Juniper-DHCP-MIB", "juniDhcpLocalServerMemUsage"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerNumBindings"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxDiscovers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxAccepts"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxRenews"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxDeclines"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxReleases"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxInforms"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxOffers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPacketsIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsPhysAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsInfinite"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsExpireTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolDomainName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetworkIpAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetworkMask"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetBiosNodeType"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolLeaseTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryDnsServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryDnsServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryNetBiosNameServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryNetBiosNameServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryDefaultRouter"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryDefaultRouter"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolLinkName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolHighUtilThreshold"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolAbatedUtilThreshold"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolUtilPct"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolTrapEnable"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolInUse"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSize"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerAttributesMode"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryPoolName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryPhysAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemServerEntryRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestDropped"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseDropped"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestBad"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseBad"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestDeleted"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemPacketsIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemPacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemPacketsDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpLocalServerGroup3 = juniDhcpLocalServerGroup3.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerGroup3.setDescription('The basic collection of objects providing management of DHCP Local Server functionality.')
juniDhcpLocalServerGroup4 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 11)).setObjects(("Juniper-DHCP-MIB", "juniDhcpLocalServerMemUsage"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerNumBindings"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxDiscovers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxAccepts"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxRenews"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxDeclines"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxReleases"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxInforms"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxOffers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPacketsIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsPhysAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsInfinite"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsExpireTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolDomainName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetworkIpAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetworkMask"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetBiosNodeType"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolLeaseTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryDnsServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryDnsServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryNetBiosNameServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryNetBiosNameServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryDefaultRouter"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryDefaultRouter"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolLinkName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolHighUtilThreshold"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolAbatedUtilThreshold"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolUtilPct"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolTrapEnable"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolInUse"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSize"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerAttributesMode"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryPoolName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryPhysAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemServerEntryRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestDropped"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseDropped"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestBad"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseBad"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestDeleted"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemPacketsIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemPacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemPacketsDropped"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceMemUsage"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceNumBindings"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxDiscovers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxRenews"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxDeclines"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxReleases"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxInforms"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxOffers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfacePacketsIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfacePacketsOut"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpLocalServerGroup4 = juniDhcpLocalServerGroup4.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerGroup4.setDescription('Deprecated DHCP Local Server group of objects providing management of DHCP Local Server functionality. This object became deprecated when the Duplicate Client trap was added')
juniDhcpLocalServerPoolTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 10)).setObjects(("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolHighAddrUtil"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolAbatedAddrUtil"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNoAddresses"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerHealth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpLocalServerPoolTrapGroup = juniDhcpLocalServerPoolTrapGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolTrapGroup.setDescription('Deprecated notifications providing alarms for high pool utilization and pool exhaustion of DHCP local address pools. This was deprecated when the roaming client trap was added.')
juniDhcpRelayGroup5 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 12)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentInfoAlreadyPresents"), ("Juniper-DHCP-MIB", "juniDhcpRelayGatewayAddrSpoofs"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentCircuitIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentRemoteIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentHostnameEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentVrnameEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentExcludeSubIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentTrustAllEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentInfoAlreadyPresentForwards"), ("Juniper-DHCP-MIB", "juniDhcpRelayServerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpRelayGroup5 = juniDhcpRelayGroup5.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpRelayGroup5.setDescription('Obsolete basic collection of objects providing management of DHCP Relay functionality.')
juniDhcpLocalServerGroup5 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 13)).setObjects(("Juniper-DHCP-MIB", "juniDhcpLocalServerMemUsage"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerNumBindings"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxDiscovers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxAccepts"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxRenews"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxDeclines"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxReleases"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxInforms"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxOffers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPacketsIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsPhysAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsInfinite"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsExpireTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsLeaseInterval"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsLeaseStartTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsInitialLeaseStartTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolDomainName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetworkIpAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetworkMask"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetBiosNodeType"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolLeaseTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryDnsServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryDnsServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryNetBiosNameServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryNetBiosNameServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryDefaultRouter"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryDefaultRouter"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolLinkName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolHighUtilThreshold"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolAbatedUtilThreshold"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolUtilPct"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolTrapEnable"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolInUse"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSize"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSharedInUse"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerAttributesMode"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSnmpTrap"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerInhibitRoaming"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryPoolName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryPhysAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemServerEntryRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestDropped"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseDropped"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestBad"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseBad"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestDeleted"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemPacketsIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemPacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemPacketsDropped"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceMemUsage"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceNumBindings"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxDiscovers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxRenews"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxDeclines"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxReleases"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxInforms"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxOffers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfacePacketsIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfacePacketsOut"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpLocalServerGroup5 = juniDhcpLocalServerGroup5.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerGroup5.setDescription('Obsolete basic collection of objects providing management of DHCP Local Server functionality.')
juniDhcpLocalServerGroup6 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 14)).setObjects(("Juniper-DHCP-MIB", "juniDhcpLocalServerMemUsage"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerNumBindings"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxDiscovers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxAccepts"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxRenews"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxDeclines"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxReleases"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxInforms"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxOffers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPacketsIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxRebinds"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxUnknownClients"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxInErrors"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxInDiscards"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxRenewAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxRebindAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxRenewNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxRebindNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxOutErrors"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxOutDiscards"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxOtherRequests"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsPhysAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsInfinite"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsExpireTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsLeaseInterval"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsLeaseStartTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsInitialLeaseStartTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolDomainName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetworkIpAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetworkMask"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetBiosNodeType"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolLeaseTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryDnsServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryDnsServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryNetBiosNameServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryNetBiosNameServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryDefaultRouter"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryDefaultRouter"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolLinkName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolHighUtilThreshold"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolAbatedUtilThreshold"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolUtilPct"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolTrapEnable"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolInUse"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSize"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSharedInUse"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerAttributesMode"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSnmpTrap"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerInhibitRoaming"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryPoolName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryPhysAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemServerEntryRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestDropped"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseDropped"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestBad"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseBad"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestDeleted"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemPacketsIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemPacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemPacketsDropped"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceMemUsage"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceNumBindings"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxDiscovers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxRenews"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxDeclines"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxReleases"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxInforms"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxOffers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfacePacketsIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfacePacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceLimit"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceClientCount"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceDeniedLogins"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceDeniedTotal"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfacePacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxRebinds"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxUnknownClients"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxInErrors"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxInDiscards"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxRenewAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxRebindAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxRenewNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxRebindNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxOutErrors"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxOutDiscards"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxOtherRequests"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpLocalServerGroup6 = juniDhcpLocalServerGroup6.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerGroup6.setDescription('Obsolete basic collection of objects providing management of DHCP Local Server functionality.')
juniDhcpLocalServerPoolTrapGroup2 = NotificationGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 15)).setObjects(("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolHighAddrUtil"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolAbatedAddrUtil"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNoAddresses"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerHealth"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolGroupHighAddrUtil"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolGroupAbatedAddrUtil"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolGroupNoAddresses"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerInterfaceLimitExceeded"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerInterfaceLimitAbated"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerDuplicateClient"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpLocalServerPoolTrapGroup2 = juniDhcpLocalServerPoolTrapGroup2.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerPoolTrapGroup2.setDescription('Obsolete notifications providing alarms for high pool utilization and pool exhaustion of DHCP local address pools and interface limit events.')
juniDhcpLocalServerTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 16)).setObjects(("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolHighAddrUtil"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolAbatedAddrUtil"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNoAddresses"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerHealth"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolGroupHighAddrUtil"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolGroupAbatedAddrUtil"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolGroupNoAddresses"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerInterfaceLimitExceeded"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerInterfaceLimitAbated"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerDuplicateClient"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpLocalServerTrapGroup = juniDhcpLocalServerTrapGroup.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerTrapGroup.setDescription('The notifications providing alarms for high pool utilization and pool exhaustion of DHCP local address pools and interface limit events and duplicate (roaming) clients.')
juniDhcpRelayGroup6 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 17)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentInfoAlreadyPresents"), ("Juniper-DHCP-MIB", "juniDhcpRelayGatewayAddrSpoofs"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentCircuitIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentRemoteIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentHostnameEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentVrnameEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentExcludeSubIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentTrustAllEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentInfoAlreadyPresentForwards"), ("Juniper-DHCP-MIB", "juniDhcpRelayServerRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentGiaddrOverrides"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentOptionOverrides"), ("Juniper-DHCP-MIB", "juniDhcpRelayDiscoverDiscards"), ("Juniper-DHCP-MIB", "juniDhcpRelayPacketDiscards"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownRequestMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownReplyMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayDuplicateRequestDiscards"), ("Juniper-DHCP-MIB", "juniDhcpRelayPacketsTransmitted"), ("Juniper-DHCP-MIB", "juniDhcpRelayPacketsReceived"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownXidDiscards"), ("Juniper-DHCP-MIB", "juniDhcpRelayDroppedStaleRequestDiscards"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpRelayGroup6 = juniDhcpRelayGroup6.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpRelayGroup6.setDescription('Obsolete basic collection of objects providing management of DHCP Relay functionality.')
juniDhcpRelayGroup7 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 18)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentInfoAlreadyPresents"), ("Juniper-DHCP-MIB", "juniDhcpRelayGatewayAddrSpoofs"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentCircuitIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentRemoteIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentHostnameEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentVrnameEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentExcludeSubIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentTrustAllEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentInfoAlreadyPresentForwards"), ("Juniper-DHCP-MIB", "juniDhcpRelayServerRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpRelayLayer2UnicastReplies"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpRelayGroup7 = juniDhcpRelayGroup7.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpRelayGroup7.setDescription('Obsolete basic collection of objects providing management of DHCP Relay functionality.')
juniDhcpRelayGroup8 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 19)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentInfoAlreadyPresents"), ("Juniper-DHCP-MIB", "juniDhcpRelayGatewayAddrSpoofs"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentCircuitIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentRemoteIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentHostnameEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentVrnameEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentExcludeSubIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentTrustAllEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentInfoAlreadyPresentForwards"), ("Juniper-DHCP-MIB", "juniDhcpRelayServerRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentGiaddrOverrides"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentOptionOverrides"), ("Juniper-DHCP-MIB", "juniDhcpRelayDiscoverDiscards"), ("Juniper-DHCP-MIB", "juniDhcpRelayPacketDiscards"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownRequestMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownReplyMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayDuplicateRequestDiscards"), ("Juniper-DHCP-MIB", "juniDhcpRelayPacketsTransmitted"), ("Juniper-DHCP-MIB", "juniDhcpRelayPacketsReceived"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownXidDiscards"), ("Juniper-DHCP-MIB", "juniDhcpRelayDroppedStaleRequestDiscards"), ("Juniper-DHCP-MIB", "juniDhcpRelayLayer2UnicastReplies"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpRelayGroup8 = juniDhcpRelayGroup8.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpRelayGroup8.setDescription('Obsolete basic collection of objects providing management of DHCP Relay functionality.')
juniDhcpRelayGroup9 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 20)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentInfoAlreadyPresents"), ("Juniper-DHCP-MIB", "juniDhcpRelayGatewayAddrSpoofs"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentCircuitIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentRemoteIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentHostnameEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentVrnameEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentExcludeSubIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentTrustAllEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentInfoAlreadyPresentForwards"), ("Juniper-DHCP-MIB", "juniDhcpRelayServerRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentGiaddrOverrides"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentOptionOverrides"), ("Juniper-DHCP-MIB", "juniDhcpRelayDiscoverDiscards"), ("Juniper-DHCP-MIB", "juniDhcpRelayPacketDiscards"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownRequestMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownReplyMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayDuplicateRequestDiscards"), ("Juniper-DHCP-MIB", "juniDhcpRelayPacketsTransmitted"), ("Juniper-DHCP-MIB", "juniDhcpRelayPacketsReceived"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownXidDiscards"), ("Juniper-DHCP-MIB", "juniDhcpRelayDroppedStaleRequestDiscards"), ("Juniper-DHCP-MIB", "juniDhcpRelayLayer2UnicastReplies"), ("Juniper-DHCP-MIB", "juniDhcpRelayGiaddrSelectsInterface"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentVendorSpecificSuboption"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpRelayGroup9 = juniDhcpRelayGroup9.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpRelayGroup9.setDescription('Obsolete basic collection of objects providing management of DHCP Relay functionality.')
juniDhcpLocalServerGroup7 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 21)).setObjects(("Juniper-DHCP-MIB", "juniDhcpLocalServerMemUsage"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerNumBindings"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxDiscovers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxAccepts"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxRenews"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxDeclines"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxReleases"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxInforms"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxOffers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPacketsIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxRebinds"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxUnknownClients"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxInErrors"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxInDiscards"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxRenewAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxRebindAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxRenewNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxRebindNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxOutErrors"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxOutDiscards"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxOtherRequests"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsPhysAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsInfinite"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsExpireTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsLeaseInterval"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsLeaseStartTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsInitialLeaseStartTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolDomainName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetworkIpAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetworkMask"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetBiosNodeType"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolLeaseTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryDnsServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryDnsServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryNetBiosNameServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryNetBiosNameServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryDefaultRouter"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryDefaultRouter"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolLinkName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolHighUtilThreshold"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolAbatedUtilThreshold"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolUtilPct"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolTrapEnable"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolInUse"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSize"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSharedInUse"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerAttributesMode"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSnmpTrap"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerInhibitRoaming"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerUniqueClientIds"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryPoolName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryPhysAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemServerEntryRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestDropped"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseDropped"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestBad"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemResponseBad"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemRequestDeleted"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemPacketsIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemPacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerCableModemPacketsDropped"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceMemUsage"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceNumBindings"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxDiscovers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxRenews"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxDeclines"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxReleases"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxInforms"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxOffers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfacePacketsIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfacePacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceLimit"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceClientCount"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceDeniedLogins"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceDeniedTotal"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfacePacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxRebinds"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxUnknownClients"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxInErrors"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxInDiscards"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxRenewAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxRebindAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxRenewNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxRebindNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxOutErrors"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxOutDiscards"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxOtherRequests"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpLocalServerGroup7 = juniDhcpLocalServerGroup7.setStatus('obsolete')
if mibBuilder.loadTexts: juniDhcpLocalServerGroup7.setDescription('Obsolete the basic collection of objects providing management of DHCP Local Server functionality. This group has been obsoleted when support for DHCP Option 60 feature was added to achieve the obsoleted cable-modem functionality.')
juniDhcpRelayGroup10 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 22)).setObjects(("Juniper-DHCP-MIB", "juniDhcpRelayBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentInfoAlreadyPresents"), ("Juniper-DHCP-MIB", "juniDhcpRelayGatewayAddrSpoofs"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentCircuitIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentRemoteIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentHostnameEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentVrnameEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentExcludeSubIdEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentTrustAllEnable"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentInfoAlreadyPresentForwards"), ("Juniper-DHCP-MIB", "juniDhcpRelayServerRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentGiaddrOverrides"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentOptionOverrides"), ("Juniper-DHCP-MIB", "juniDhcpRelayDiscoverDiscards"), ("Juniper-DHCP-MIB", "juniDhcpRelayPacketDiscards"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownRequestMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownReplyMessages"), ("Juniper-DHCP-MIB", "juniDhcpRelayDuplicateRequestDiscards"), ("Juniper-DHCP-MIB", "juniDhcpRelayPacketsTransmitted"), ("Juniper-DHCP-MIB", "juniDhcpRelayPacketsReceived"), ("Juniper-DHCP-MIB", "juniDhcpRelayUnknownXidDiscards"), ("Juniper-DHCP-MIB", "juniDhcpRelayDroppedStaleRequestDiscards"), ("Juniper-DHCP-MIB", "juniDhcpRelayLayer2UnicastReplies"), ("Juniper-DHCP-MIB", "juniDhcpRelayGiaddrSelectsInterface"), ("Juniper-DHCP-MIB", "juniDhcpRelayAgentVendorSpecificSuboption"), ("Juniper-DHCP-MIB", "juniDhcpRelayBroadcastFlagReplies"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpRelayGroup10 = juniDhcpRelayGroup10.setStatus('current')
if mibBuilder.loadTexts: juniDhcpRelayGroup10.setDescription('The basic collection of objects providing management of DHCP Relay functionality.')
juniDhcpLocalServerGroup8 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 22, 4, 2, 23)).setObjects(("Juniper-DHCP-MIB", "juniDhcpLocalServerMemUsage"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerNumBindings"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxDiscovers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxAccepts"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxRenews"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxDeclines"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxReleases"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxInforms"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxOffers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPacketsIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxRebinds"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxUnknownClients"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxInErrors"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxInDiscards"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxRenewAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxRebindAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxRenewNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxRebindNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxOutErrors"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerTxOutDiscards"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerRxOtherRequests"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsPhysAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsInfinite"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsExpireTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsLeaseInterval"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsLeaseStartTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerBindingsInitialLeaseStartTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolDomainName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetworkIpAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetworkMask"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolNetBiosNodeType"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolLeaseTime"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryDnsServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryDnsServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryNetBiosNameServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryNetBiosNameServer"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolPrimaryDefaultRouter"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSecondaryDefaultRouter"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolLinkName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolHighUtilThreshold"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolAbatedUtilThreshold"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolUtilPct"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolTrapEnable"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolInUse"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSize"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerPoolSharedInUse"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerAttributesMode"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSnmpTrap"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerInhibitRoaming"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerUniqueClientIds"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryPoolName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryPhysAddress"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerReservesEntryRowStatus"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceMemUsage"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceNumBindings"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxDiscovers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxRenews"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxDeclines"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxReleases"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxInforms"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxOffers"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceUnknownMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceBadMessages"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfacePacketsIn"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfacePacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceName"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceLimit"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceClientCount"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceDeniedLogins"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceDeniedTotal"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfacePacketsOut"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxRebinds"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxUnknownClients"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxInErrors"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxInDiscards"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxRenewAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxRebindAcks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxRenewNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxRebindNaks"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxOutErrors"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceTxOutDiscards"), ("Juniper-DHCP-MIB", "juniDhcpLocalServerSubInterfaceRxOtherRequests"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDhcpLocalServerGroup8 = juniDhcpLocalServerGroup8.setStatus('current')
if mibBuilder.loadTexts: juniDhcpLocalServerGroup8.setDescription('The basic collection of objects providing management of DHCP Local Server functionality.')
mibBuilder.exportSymbols("Juniper-DHCP-MIB", juniDhcpObjects=juniDhcpObjects, juniDhcpLocalServerSubInterfaceNumBindings=juniDhcpLocalServerSubInterfaceNumBindings, juniDhcpLocalServerSnmpTrap=juniDhcpLocalServerSnmpTrap, juniDhcpRelayPacketDiscards=juniDhcpRelayPacketDiscards, juniDhcpLocalServerBadMessages=juniDhcpLocalServerBadMessages, juniDhcpLocalServerSubInterfaceTxOutDiscards=juniDhcpLocalServerSubInterfaceTxOutDiscards, juniDhcpRelayAgentTrustAllEnable=juniDhcpRelayAgentTrustAllEnable, juniDhcpLocalServerSubInterfaceMemUsage=juniDhcpLocalServerSubInterfaceMemUsage, juniDhcpLocalServerBindingsLeaseStartTime=juniDhcpLocalServerBindingsLeaseStartTime, juniDhcpProxyClientServerNaks=juniDhcpProxyClientServerNaks, juniDhcpProxyClientServerBadMessages=juniDhcpProxyClientServerBadMessages, JuniDhcpLocalServerPoolName=JuniDhcpLocalServerPoolName, juniDhcpLocalServerMemUsage=juniDhcpLocalServerMemUsage, JuniDhcpLocalServerPoolNetBiosNodeType=JuniDhcpLocalServerPoolNetBiosNodeType, juniDhcpLocalServerPoolPrimaryDnsServer=juniDhcpLocalServerPoolPrimaryDnsServer, juniDhcpLocalServerPoolGroupTable=juniDhcpLocalServerPoolGroupTable, juniDhcpLocalServerReservesEntryRowStatus=juniDhcpLocalServerReservesEntryRowStatus, juniDhcpLocalServerEventString=juniDhcpLocalServerEventString, juniDhcpLocalServerLastDetected=juniDhcpLocalServerLastDetected, juniDhcpLocalServerPoolNetworkMask=juniDhcpLocalServerPoolNetworkMask, juniDhcpRelayAgentOptionOverrides=juniDhcpRelayAgentOptionOverrides, juniDhcpCompliance6=juniDhcpCompliance6, juniDhcpLocalServerTxRenewAcks=juniDhcpLocalServerTxRenewAcks, juniDhcpLocalServerPoolTrapGroup2=juniDhcpLocalServerPoolTrapGroup2, juniDhcpLocalServerSubInterfaceRxRebinds=juniDhcpLocalServerSubInterfaceRxRebinds, juniDhcpLocalServerBindings=juniDhcpLocalServerBindings, juniDhcpRelayGroup2=juniDhcpRelayGroup2, juniDhcpRelayGiaddrSelectsInterface=juniDhcpRelayGiaddrSelectsInterface, juniDhcpRelayDuplicateRequestDiscards=juniDhcpRelayDuplicateRequestDiscards, juniDhcpLocalServerSubInterfaceRxRenews=juniDhcpLocalServerSubInterfaceRxRenews, juniDhcpLocalServerPoolDomainName=juniDhcpLocalServerPoolDomainName, juniDhcpLocalServerSubInterfaceRxInDiscards=juniDhcpLocalServerSubInterfaceRxInDiscards, juniDhcpProxyClientServerEntry=juniDhcpProxyClientServerEntry, juniDhcpLocalServerSubInterfaceTxRenewNaks=juniDhcpLocalServerSubInterfaceTxRenewNaks, juniDhcpLocalServerRxDiscovers=juniDhcpLocalServerRxDiscovers, juniDhcpLocalServerGroup6=juniDhcpLocalServerGroup6, juniDhcpLocalServerInterfaceLimitAbated=juniDhcpLocalServerInterfaceLimitAbated, juniDhcpCompliance5=juniDhcpCompliance5, juniDhcpRelayUnknownXidDiscards=juniDhcpRelayUnknownXidDiscards, juniDhcpLocalServerSubInterfaceRxReleases=juniDhcpLocalServerSubInterfaceRxReleases, juniDhcpLocalServerRxRenews=juniDhcpLocalServerRxRenews, juniDhcpLocalServerSubInterfaceDeniedTotal=juniDhcpLocalServerSubInterfaceDeniedTotal, juniDhcpLocalServerPoolInUse=juniDhcpLocalServerPoolInUse, juniDhcpLocalServerTxRebindNaks=juniDhcpLocalServerTxRebindNaks, juniDhcpLocalServerSubInterfaceTxRebindAcks=juniDhcpLocalServerSubInterfaceTxRebindAcks, juniDhcpLocalServerSubInterfaceRxAccepts=juniDhcpLocalServerSubInterfaceRxAccepts, juniDhcpLocalServerReservesEntryIpAddress=juniDhcpLocalServerReservesEntryIpAddress, juniDhcpLocalServerAttributesMode=juniDhcpLocalServerAttributesMode, juniDhcpRelayLayer2UnicastReplies=juniDhcpRelayLayer2UnicastReplies, juniDhcpRelayGatewayAddrSpoofs=juniDhcpRelayGatewayAddrSpoofs, juniDhcpRelayGroup4=juniDhcpRelayGroup4, juniDhcpProxyClientServerDiscovers=juniDhcpProxyClientServerDiscovers, juniDhcpLocalServerPoolGroupNoAddresses=juniDhcpLocalServerPoolGroupNoAddresses, juniDhcpLocalServerAttributes=juniDhcpLocalServerAttributes, juniDhcpLocalServerPoolSize=juniDhcpLocalServerPoolSize, juniDhcpLocalServerPoolName=juniDhcpLocalServerPoolName, juniDhcpLocalServerRxAccepts=juniDhcpLocalServerRxAccepts, juniDhcpLocalServerPacketsOut=juniDhcpLocalServerPacketsOut, juniDhcpLocalServerPacketsIn=juniDhcpLocalServerPacketsIn, juniDhcpLocalServerPoolEntry=juniDhcpLocalServerPoolEntry, juniDhcpLocalServerPoolAbatedUtilThreshold=juniDhcpLocalServerPoolAbatedUtilThreshold, juniDhcpLocalServerSubInterfaceTxNaks=juniDhcpLocalServerSubInterfaceTxNaks, juniDhcpMIBCompliances=juniDhcpMIBCompliances, juniDhcpRelayDeprecatedGroup=juniDhcpRelayDeprecatedGroup, juniDhcpProxyClientServerOperStatus=juniDhcpProxyClientServerOperStatus, juniDhcpProxyClientServerAcks=juniDhcpProxyClientServerAcks, juniDhcpLocalServerSubInterfaceRxInforms=juniDhcpLocalServerSubInterfaceRxInforms, juniDhcpLocalServerCableModemRequestDeleted=juniDhcpLocalServerCableModemRequestDeleted, juniDhcpCompliance10=juniDhcpCompliance10, juniDhcpLocalServerBindingsEntry=juniDhcpLocalServerBindingsEntry, juniDhcpLocalServerStatistics=juniDhcpLocalServerStatistics, juniDhcpLocalServerEventSeverity=juniDhcpLocalServerEventSeverity, juniDhcpRelayCompliance=juniDhcpRelayCompliance, juniDhcpRelayUnknownMessages=juniDhcpRelayUnknownMessages, juniDhcpLocalServerBindingsInfinite=juniDhcpLocalServerBindingsInfinite, juniDhcpProxyClientServerAdminStatus=juniDhcpProxyClientServerAdminStatus, juniDhcpLocalServerRelayTraps=juniDhcpLocalServerRelayTraps, juniDhcpRelayPacketsTransmitted=juniDhcpRelayPacketsTransmitted, juniDhcpLocalServerSubInterfaceTxOffers=juniDhcpLocalServerSubInterfaceTxOffers, juniDhcpLocalServerDuplicateClient=juniDhcpLocalServerDuplicateClient, PYSNMP_MODULE_ID=juniDhcpMIB, juniDhcpRelayAgentGiaddrOverrides=juniDhcpRelayAgentGiaddrOverrides, juniDhcpProxyClientServerAddress=juniDhcpProxyClientServerAddress, juniDhcpProxyClientServerRowStatus=juniDhcpProxyClientServerRowStatus, juniDhcpLocalServerPoolRowStatus=juniDhcpLocalServerPoolRowStatus, juniDhcpTrapControl=juniDhcpTrapControl, juniDhcpLocalServerSubInterfaceRxDiscovers=juniDhcpLocalServerSubInterfaceRxDiscovers, juniDhcpCompliance7=juniDhcpCompliance7, juniDhcpLocalServerSubInterfaceRxDeclines=juniDhcpLocalServerSubInterfaceRxDeclines, juniDhcpLocalServerTxRebindAcks=juniDhcpLocalServerTxRebindAcks, juniDhcpLocalServerTxOutErrors=juniDhcpLocalServerTxOutErrors, juniDhcpRelayAgentVendorSpecificSuboption=juniDhcpRelayAgentVendorSpecificSuboption, juniDhcpLocalServerGroup4=juniDhcpLocalServerGroup4, juniDhcpLocalServerInterfaceLimitExceeded=juniDhcpLocalServerInterfaceLimitExceeded, juniDhcpLocalServerSubInterfaceTxRenewAcks=juniDhcpLocalServerSubInterfaceTxRenewAcks, juniDhcpLocalServerInhibitRoaming=juniDhcpLocalServerInhibitRoaming, juniDhcpLocalServerSubInterfaceUnknownMessages=juniDhcpLocalServerSubInterfaceUnknownMessages, juniDhcpLocalServerSubInterfacePacketsIn=juniDhcpLocalServerSubInterfacePacketsIn, JuniDhcpLocalServerPoolDomainName=JuniDhcpLocalServerPoolDomainName, juniDhcpLocalServerCableModemServerEntryRowStatus=juniDhcpLocalServerCableModemServerEntryRowStatus, juniDhcpLocalServerCableModemServerTable=juniDhcpLocalServerCableModemServerTable, juniDhcpProxyClientServerTable=juniDhcpProxyClientServerTable, juniDhcpRelayServerTable=juniDhcpRelayServerTable, juniDhcpLocalServerTrapGroup=juniDhcpLocalServerTrapGroup, juniDhcpLocalServerSubInterfaceTxOutErrors=juniDhcpLocalServerSubInterfaceTxOutErrors, juniDhcpLocalServerReservesTable=juniDhcpLocalServerReservesTable, juniDhcpLocalServerGroup7=juniDhcpLocalServerGroup7, juniDhcpCompliance12=juniDhcpCompliance12, juniDhcpLocalServerCableModemStatistics=juniDhcpLocalServerCableModemStatistics, juniDhcpLocalServerSubInterfaceBadMessages=juniDhcpLocalServerSubInterfaceBadMessages, juniDhcpRelayGroup9=juniDhcpRelayGroup9, juniDhcpLocalServerSubInterfaceStatisticsEntry=juniDhcpLocalServerSubInterfaceStatisticsEntry, juniDhcpLocalServerPoolSecondaryNetBiosNameServer=juniDhcpLocalServerPoolSecondaryNetBiosNameServer, juniDhcpLocalServerProxyTraps=juniDhcpLocalServerProxyTraps, juniDhcpLocalServerCableModemResponseBad=juniDhcpLocalServerCableModemResponseBad, juniDhcpRelayServerEntry=juniDhcpRelayServerEntry, juniDhcpLocalServerPoolGroupAbatedAddrUtil=juniDhcpLocalServerPoolGroupAbatedAddrUtil, juniDhcpLocalServerGroup8=juniDhcpLocalServerGroup8, juniDhcpRelayAgentRemoteIdEnable=juniDhcpRelayAgentRemoteIdEnable, juniDhcpLocalServerNumBindings=juniDhcpLocalServerNumBindings, juniDhcpProxyClientServerLeases=juniDhcpProxyClientServerLeases, juniDhcpLocalServerGroup5=juniDhcpLocalServerGroup5, juniDhcpLocalServerRxDeclines=juniDhcpLocalServerRxDeclines, juniDhcpRelayAgentHostnameEnable=juniDhcpRelayAgentHostnameEnable, juniDhcpLocalServerSubInterfaceTxRebindNaks=juniDhcpLocalServerSubInterfaceTxRebindNaks, juniDhcpProxyClientScalars=juniDhcpProxyClientScalars, juniDhcpCompliance=juniDhcpCompliance, juniDhcpCompliance4=juniDhcpCompliance4, juniDhcpLocalServerSubInterfaceRxOtherRequests=juniDhcpLocalServerSubInterfaceRxOtherRequests, juniDhcpLocalServerTxAcks=juniDhcpLocalServerTxAcks, juniDhcpRelayAgentInfoAlreadyPresentForwards=juniDhcpRelayAgentInfoAlreadyPresentForwards, juniDhcpRelayPacketsReceived=juniDhcpRelayPacketsReceived, JuniDhcpLocalServerPhysAddressString=JuniDhcpLocalServerPhysAddressString, juniDhcpRelayBroadcastFlagReplies=juniDhcpRelayBroadcastFlagReplies, juniDhcpLocalServerPoolSharedInUse=juniDhcpLocalServerPoolSharedInUse, juniDhcpLocalServerPoolHighAddrUtil=juniDhcpLocalServerPoolHighAddrUtil, juniDhcpLocalServerRxRebinds=juniDhcpLocalServerRxRebinds, juniDhcpLocalServerSubInterfaceIndex=juniDhcpLocalServerSubInterfaceIndex, juniDhcpLocalServerPoolGroupName=juniDhcpLocalServerPoolGroupName, juniDhcpLocalServerPoolSecondaryDefaultRouter=juniDhcpLocalServerPoolSecondaryDefaultRouter, juniDhcpLocalServerSubInterfaceRxUnknownClients=juniDhcpLocalServerSubInterfaceRxUnknownClients, juniDhcpProxyServer=juniDhcpProxyServer, juniDhcpLocalServerPoolGroupEntry=juniDhcpLocalServerPoolGroupEntry, juniDhcpCompliance2=juniDhcpCompliance2, juniDhcpLocalServerReservesEntryPhysAddress=juniDhcpLocalServerReservesEntryPhysAddress, JuniDhcpLocalServerPoolGroupName=JuniDhcpLocalServerPoolGroupName, juniDhcpMIB=juniDhcpMIB, juniDhcpLocalServerPoolLeaseTime=juniDhcpLocalServerPoolLeaseTime, juniDhcpCompliance9=juniDhcpCompliance9, juniDhcpLocalServerUniqueClientIds=juniDhcpLocalServerUniqueClientIds, juniDhcpLocalServerRxInErrors=juniDhcpLocalServerRxInErrors, juniDhcpLocalServerCableModemPacketsDropped=juniDhcpLocalServerCableModemPacketsDropped, juniDhcpLocalServerGroup2=juniDhcpLocalServerGroup2, juniDhcpProxyClientServerInforms=juniDhcpProxyClientServerInforms, juniDhcpLocalServerRxReleases=juniDhcpLocalServerRxReleases, juniDhcpLocalServerPoolSecondaryDnsServer=juniDhcpLocalServerPoolSecondaryDnsServer, juniDhcpLocalServerPoolAbatedAddrUtil=juniDhcpLocalServerPoolAbatedAddrUtil, juniDhcpLocalServerTraps=juniDhcpLocalServerTraps, juniDhcpRelayAgentInfoEnable=juniDhcpRelayAgentInfoEnable, juniDhcpRelayUnknownReplyMessages=juniDhcpRelayUnknownReplyMessages, juniDhcpMIBConformance=juniDhcpMIBConformance, juniDhcpRelayDiscoverDiscards=juniDhcpRelayDiscoverDiscards, juniDhcpLocalServerSubInterfaceRxInErrors=juniDhcpLocalServerSubInterfaceRxInErrors, juniDhcpProxy=juniDhcpProxy, juniDhcpLocalServerPoolPrimaryNetBiosNameServer=juniDhcpLocalServerPoolPrimaryNetBiosNameServer, juniDhcpRelayDroppedStaleRequestDiscards=juniDhcpRelayDroppedStaleRequestDiscards, juniDhcpLocalServerMacAddress=juniDhcpLocalServerMacAddress, juniDhcpLocalServerSubInterfaceEntry=juniDhcpLocalServerSubInterfaceEntry, juniDhcpLocalServerPoolNoAddresses=juniDhcpLocalServerPoolNoAddresses, juniDhcpLocalServerRxOtherRequests=juniDhcpLocalServerRxOtherRequests, juniDhcpCompliance3=juniDhcpCompliance3, juniDhcpLocalServerSubInterfaceDeniedLogins=juniDhcpLocalServerSubInterfaceDeniedLogins, juniDhcpLocalServerBindingsPhysAddress=juniDhcpLocalServerBindingsPhysAddress, juniDhcpLocalServerBindingsRowStatus=juniDhcpLocalServerBindingsRowStatus, juniDhcpLocalServerReservesEntry=juniDhcpLocalServerReservesEntry, juniDhcpLocalServerCableModemRequestIn=juniDhcpLocalServerCableModemRequestIn, juniDhcpLocalServerCableModemRequestDropped=juniDhcpLocalServerCableModemRequestDropped, juniDhcpLocalServerCableModemRequestBad=juniDhcpLocalServerCableModemRequestBad, juniDhcpRelayAgentVrnameEnable=juniDhcpRelayAgentVrnameEnable, juniDhcpLocalServerReservesEntryPoolName=juniDhcpLocalServerReservesEntryPoolName, juniDhcpLocalServerCableModemPacketsIn=juniDhcpLocalServerCableModemPacketsIn, juniDhcpLocalServerSubInterfaceStatisticsTable=juniDhcpLocalServerSubInterfaceStatisticsTable, juniDhcpLocalServerUnknownMessages=juniDhcpLocalServerUnknownMessages, juniDhcpLocalServerPoolPrimaryDefaultRouter=juniDhcpLocalServerPoolPrimaryDefaultRouter, juniDhcpRelayAgentCircuitIdEnable=juniDhcpRelayAgentCircuitIdEnable, juniDhcpRelay=juniDhcpRelay, juniDhcpLocalServerBindingsInitialLeaseStartTime=juniDhcpLocalServerBindingsInitialLeaseStartTime, juniDhcpRelayServerAddress=juniDhcpRelayServerAddress, juniDhcpProxyClientServerRequests=juniDhcpProxyClientServerRequests, juniDhcpLocalServerHealth=juniDhcpLocalServerHealth, juniDhcpRelayGroup5=juniDhcpRelayGroup5, juniDhcpLocalServerCableModemResponseOut=juniDhcpLocalServerCableModemResponseOut, juniDhcpLocalServerBindingsTable=juniDhcpLocalServerBindingsTable, juniDhcpCompliance11=juniDhcpCompliance11, juniDhcpLocalServerTxOutDiscards=juniDhcpLocalServerTxOutDiscards, juniDhcpLocalServerPoolNetBiosNodeType=juniDhcpLocalServerPoolNetBiosNodeType, juniDhcpLocalServerInterfaceString=juniDhcpLocalServerInterfaceString, juniDhcpRelayGroup10=juniDhcpRelayGroup10, juniDhcpLocalServerPoolLinkName=juniDhcpLocalServerPoolLinkName, juniDhcpLocalServerCableModemRequestOut=juniDhcpLocalServerCableModemRequestOut, juniDhcpLocalServerRxInforms=juniDhcpLocalServerRxInforms, juniDhcpProxyClient=juniDhcpProxyClient, juniDhcpLocalServerSubInterfaceName=juniDhcpLocalServerSubInterfaceName, juniDhcpProxyClientUnknownServers=juniDhcpProxyClientUnknownServers, juniDhcpRelayScalars=juniDhcpRelayScalars, juniDhcpProxyClientServerReleases=juniDhcpProxyClientServerReleases, juniDhcpLocalServerCableModemServers=juniDhcpLocalServerCableModemServers, juniDhcpLocalServerBindingsIpAddress=juniDhcpLocalServerBindingsIpAddress, juniDhcpLocalServerPoolGroupSize=juniDhcpLocalServerPoolGroupSize, juniDhcpRelayServerRowStatus=juniDhcpRelayServerRowStatus, juniDhcpRelayGroup=juniDhcpRelayGroup, juniDhcpProxyClientServerDeclines=juniDhcpProxyClientServerDeclines, juniDhcpLocalServerPoolGroupUtilPct=juniDhcpLocalServerPoolGroupUtilPct, juniDhcpProxyCompliance=juniDhcpProxyCompliance, juniDhcpLocalServerBindingsLeaseInterval=juniDhcpLocalServerBindingsLeaseInterval, juniDhcpRelayGroup6=juniDhcpRelayGroup6, juniDhcpLocalServerSubInterfaceTable=juniDhcpLocalServerSubInterfaceTable, juniDhcpMIBGroups=juniDhcpMIBGroups, juniDhcpCompliance8=juniDhcpCompliance8, juniDhcpLocalServerPool=juniDhcpLocalServerPool, juniDhcpLocalServerPoolNetworkIpAddress=juniDhcpLocalServerPoolNetworkIpAddress, juniDhcpLocalServerRxInDiscards=juniDhcpLocalServerRxInDiscards, juniDhcpLocalServerTxNaks=juniDhcpLocalServerTxNaks, juniDhcpRelayGroup3=juniDhcpRelayGroup3, juniDhcpLocalServerPoolHighUtilThreshold=juniDhcpLocalServerPoolHighUtilThreshold, juniDhcpLocalServerPoolTrapGroup=juniDhcpLocalServerPoolTrapGroup, juniDhcpLocalServerSubInterfaceClientCount=juniDhcpLocalServerSubInterfaceClientCount, juniDhcpRelayAgentInfoAlreadyPresents=juniDhcpRelayAgentInfoAlreadyPresents, juniDhcpProxyClientServerUnknownMessages=juniDhcpProxyClientServerUnknownMessages, juniDhcpLocalServerCableModemResponseDropped=juniDhcpLocalServerCableModemResponseDropped, juniDhcpRelayGroup7=juniDhcpRelayGroup7, juniDhcpLocalServerObjects=juniDhcpLocalServerObjects, juniDhcpLocalServerPoolUtilPct=juniDhcpLocalServerPoolUtilPct, juniDhcpLocalServerGroup=juniDhcpLocalServerGroup, juniDhcpLocalServerTxOffers=juniDhcpLocalServerTxOffers, juniDhcpLocalServerSubInterfaceTxAcks=juniDhcpLocalServerSubInterfaceTxAcks, juniDhcpLocalServerPoolTable=juniDhcpLocalServerPoolTable, juniDhcpRelayGroup8=juniDhcpRelayGroup8, juniDhcpRelayUnknownRequestMessages=juniDhcpRelayUnknownRequestMessages, juniDhcpLocalServerReserves=juniDhcpLocalServerReserves, juniDhcpLocalServerCableModemServerEntry=juniDhcpLocalServerCableModemServerEntry, juniDhcpLocalServerCableModemResponseIn=juniDhcpLocalServerCableModemResponseIn, juniDhcpLocalServerRxUnknownClients=juniDhcpLocalServerRxUnknownClients, juniDhcpLocalServerGroup3=juniDhcpLocalServerGroup3, juniDhcpRelayBadMessages=juniDhcpRelayBadMessages, juniDhcpLocalServerSubInterfaceLimit=juniDhcpLocalServerSubInterfaceLimit, juniDhcpLocalServerPoolGroupHighAddrUtil=juniDhcpLocalServerPoolGroupHighAddrUtil, JuniDhcpLocalServerModeType=JuniDhcpLocalServerModeType, juniDhcpProxyGroup=juniDhcpProxyGroup, juniDhcpRelayAgentExcludeSubIdEnable=juniDhcpRelayAgentExcludeSubIdEnable, juniDhcpProxyClientServerOffers=juniDhcpProxyClientServerOffers, juniDhcpLocalServerPoolGroupInUse=juniDhcpLocalServerPoolGroupInUse, juniDhcpLocalServerBindingsExpireTime=juniDhcpLocalServerBindingsExpireTime, juniDhcpLocalServerPoolTrapEnable=juniDhcpLocalServerPoolTrapEnable)
mibBuilder.exportSymbols("Juniper-DHCP-MIB", juniDhcpLocalServerCableModemServerEntryAddress=juniDhcpLocalServerCableModemServerEntryAddress, juniDhcpLocalServerPoolGroup=juniDhcpLocalServerPoolGroup, juniDhcpLocalServerTxRenewNaks=juniDhcpLocalServerTxRenewNaks, juniDhcpLocalServerCableModemPacketsOut=juniDhcpLocalServerCableModemPacketsOut, juniDhcpLocalServerSubInterfacePacketsOut=juniDhcpLocalServerSubInterfacePacketsOut)
