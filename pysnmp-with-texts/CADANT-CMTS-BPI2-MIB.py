#
# PySNMP MIB module CADANT-CMTS-BPI2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CADANT-CMTS-BPI2-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:44:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
cadSystem, = mibBuilder.importSymbols("CADANT-PRODUCTS-MIB", "cadSystem")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Integer32, Counter32, Gauge32, Counter64, iso, MibIdentifier, Bits, NotificationType, IpAddress, TimeTicks, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Integer32", "Counter32", "Gauge32", "Counter64", "iso", "MibIdentifier", "Bits", "NotificationType", "IpAddress", "TimeTicks", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
cadBpi2Mib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 5))
cadBpi2Mib.setRevisions(('2014-07-30 00:00', '2006-12-18 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cadBpi2Mib.setRevisionsDescriptions(('Add cadBpi2CmtsAES128Enable.', 'Add default value to cadBpi2CmtsDefaultAuthLifetime = 604800 cadBpi2CmtsDefaultTEKLifetime = 43200 cadBpi2CmtsDefaultSelfSignedManufCertTrust = untrusted cadBpi2CmtsCheckCertValidityPeriods = false',))
if mibBuilder.loadTexts: cadBpi2Mib.setLastUpdated('201407300000Z')
if mibBuilder.loadTexts: cadBpi2Mib.setOrganization('Cadant Inc')
if mibBuilder.loadTexts: cadBpi2Mib.setContactInfo('Cadant Technical Support')
if mibBuilder.loadTexts: cadBpi2Mib.setDescription('Cadant Bpi+ mib derived from the DOCS-BPI2-MIB')
cadBpi2CmtsBaseTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 5, 1), )
if mibBuilder.loadTexts: cadBpi2CmtsBaseTable.setStatus('current')
if mibBuilder.loadTexts: cadBpi2CmtsBaseTable.setDescription('')
cadBpi2CmtsBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 5, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cadBpi2CmtsBaseEntry.setStatus('current')
if mibBuilder.loadTexts: cadBpi2CmtsBaseEntry.setDescription('')
cadBpi2CmtsDefaultAuthLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6048000)).clone(604800)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadBpi2CmtsDefaultAuthLifetime.setReference('DOCSIS Baseline Privacy Plus Interface Specification, Appendix A.2.')
if mibBuilder.loadTexts: cadBpi2CmtsDefaultAuthLifetime.setStatus('current')
if mibBuilder.loadTexts: cadBpi2CmtsDefaultAuthLifetime.setDescription('The value of this object is the default lifetime, in seconds, the CMTS assigns to a new authorization key.')
cadBpi2CmtsDefaultTEKLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 604800)).clone(43200)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadBpi2CmtsDefaultTEKLifetime.setReference('DOCSIS Baseline Privacy Plus Interface Specification, Appendix A.2.')
if mibBuilder.loadTexts: cadBpi2CmtsDefaultTEKLifetime.setStatus('current')
if mibBuilder.loadTexts: cadBpi2CmtsDefaultTEKLifetime.setDescription('The value of this object is the default lifetime, in seconds, the CMTS assigns to a new Traffic Encryption Key (TEK).')
cadBpi2CmtsDefaultSelfSignedManufCertTrust = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trusted", 1), ("untrusted", 2))).clone('untrusted')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadBpi2CmtsDefaultSelfSignedManufCertTrust.setReference('DOCSIS Baseline Privacy Plus Interface Specification, Section 9.4.1')
if mibBuilder.loadTexts: cadBpi2CmtsDefaultSelfSignedManufCertTrust.setStatus('current')
if mibBuilder.loadTexts: cadBpi2CmtsDefaultSelfSignedManufCertTrust.setDescription('This object determines the default trust of all (new) self-signed manufacturer certificates obtained after setting the object.')
cadBpi2CmtsCheckCertValidityPeriods = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 5, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadBpi2CmtsCheckCertValidityPeriods.setReference('DOCSIS Baseline Privacy Plus Interface Specification, Section 9.4.2')
if mibBuilder.loadTexts: cadBpi2CmtsCheckCertValidityPeriods.setStatus('current')
if mibBuilder.loadTexts: cadBpi2CmtsCheckCertValidityPeriods.setDescription("Setting this object to TRUE causes all certificates obtained thereafter to have their validity periods (and their chain's validity periods) checked against the current time of day. A FALSE setting will cause all certificates obtained thereafter to not have their validity periods (nor their chain's validity periods) checked against the current time of day.")
cadBpi2CmtsConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 5, 2))
cadBpi2CmtsAES128Enable = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 5, 2, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadBpi2CmtsAES128Enable.setStatus('current')
if mibBuilder.loadTexts: cadBpi2CmtsAES128Enable.setDescription('Enables AES-128 Cryptography Suite for BPI+ when true.')
mibBuilder.exportSymbols("CADANT-CMTS-BPI2-MIB", cadBpi2CmtsDefaultTEKLifetime=cadBpi2CmtsDefaultTEKLifetime, cadBpi2CmtsDefaultSelfSignedManufCertTrust=cadBpi2CmtsDefaultSelfSignedManufCertTrust, cadBpi2Mib=cadBpi2Mib, cadBpi2CmtsBaseEntry=cadBpi2CmtsBaseEntry, cadBpi2CmtsDefaultAuthLifetime=cadBpi2CmtsDefaultAuthLifetime, PYSNMP_MODULE_ID=cadBpi2Mib, cadBpi2CmtsAES128Enable=cadBpi2CmtsAES128Enable, cadBpi2CmtsBaseTable=cadBpi2CmtsBaseTable, cadBpi2CmtsConfig=cadBpi2CmtsConfig, cadBpi2CmtsCheckCertValidityPeriods=cadBpi2CmtsCheckCertValidityPeriods)
