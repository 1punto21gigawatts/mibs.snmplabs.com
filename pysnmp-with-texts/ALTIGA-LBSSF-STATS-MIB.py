#
# PySNMP MIB module ALTIGA-LBSSF-STATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALTIGA-LBSSF-STATS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:21:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
alLBSSFMibModule, = mibBuilder.importSymbols("ALTIGA-GLOBAL-REG", "alLBSSFMibModule")
alStatsLBSSF, alLBSSFGroup = mibBuilder.importSymbols("ALTIGA-MIB", "alStatsLBSSF", "alLBSSFGroup")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, MibIdentifier, Gauge32, TimeTicks, ObjectIdentity, IpAddress, iso, Integer32, Counter32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "MibIdentifier", "Gauge32", "TimeTicks", "ObjectIdentity", "IpAddress", "iso", "Integer32", "Counter32", "Unsigned32")
TruthValue, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowStatus", "TextualConvention")
altigaLBSSFStatsMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3076, 1, 1, 41, 2))
altigaLBSSFStatsMibModule.setRevisions(('2002-09-05 13:00', '2002-07-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: altigaLBSSFStatsMibModule.setRevisionsDescriptions(('Added module compliance.', 'Updated with new header',))
if mibBuilder.loadTexts: altigaLBSSFStatsMibModule.setLastUpdated('200209051300Z')
if mibBuilder.loadTexts: altigaLBSSFStatsMibModule.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: altigaLBSSFStatsMibModule.setContactInfo('Cisco Systems 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-cvpn3000@cisco.com')
if mibBuilder.loadTexts: altigaLBSSFStatsMibModule.setDescription('The Altiga Load Balancing and Secure Session Failover Statistics MIB models counters and objects that are of management interest for LBSSF. Acronyms The following acronyms are used in this document: LBSSF: Load Balancing and Secure Session Failover MIB: Management Information Base ')
class DeviceType(TextualConvention, Integer32):
    description = 'LBSSF Device Type.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("unknown", 1), ("vpn3005", 3), ("vpn3015", 4), ("vpn3030", 5), ("vpn3060", 6), ("vpn3080", 7), ("vpn3002", 8))

class DeviceRole(TextualConvention, Integer32):
    description = 'Load balancing device roles within a LBSSF cluster. virtualMaster: master of load balancing cluster slave : slave in load balancing cluster '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("virtualMaster", 1), ("slave", 2))

alStatsLBSSFGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 1))
alLBSSFRole = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 1, 1), DeviceRole()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBSSFRole.setStatus('current')
if mibBuilder.loadTexts: alLBSSFRole.setDescription('The role of this device.')
alLBSSFDeviceType = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 1, 2), DeviceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBSSFDeviceType.setStatus('current')
if mibBuilder.loadTexts: alLBSSFDeviceType.setDescription('Device type of this device.')
alLBSSFActive = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBSSFActive.setStatus('current')
if mibBuilder.loadTexts: alLBSSFActive.setDescription('Indicates if device is active or not.')
alLBSSFNumberOfPeers = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBSSFNumberOfPeers.setStatus('current')
if mibBuilder.loadTexts: alLBSSFNumberOfPeers.setDescription('The number of total current peers.')
alLBSSFLoad = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBSSFLoad.setStatus('current')
if mibBuilder.loadTexts: alLBSSFLoad.setDescription('The current calculated load of this device in percentage.')
alLBSSFPeerTable = MibTable((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 2), )
if mibBuilder.loadTexts: alLBSSFPeerTable.setStatus('current')
if mibBuilder.loadTexts: alLBSSFPeerTable.setDescription('List of LBSSF peers within a LBSSF cluster.')
alLBSSFPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 2, 1), ).setIndexNames((0, "ALTIGA-LBSSF-STATS-MIB", "alLBSSFPeerPrivIpAddress"))
if mibBuilder.loadTexts: alLBSSFPeerEntry.setStatus('current')
if mibBuilder.loadTexts: alLBSSFPeerEntry.setDescription('An entry in the alLBSSFStatsPeerTable.')
alLBSSFPeerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 2, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBSSFPeerRowStatus.setStatus('current')
if mibBuilder.loadTexts: alLBSSFPeerRowStatus.setDescription('The status of this row.')
alLBSSFPeerPrivIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBSSFPeerPrivIpAddress.setStatus('current')
if mibBuilder.loadTexts: alLBSSFPeerPrivIpAddress.setDescription('Private LAN Ip address of this peer entry.')
alLBSSFPeerPubIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBSSFPeerPubIpAddress.setStatus('current')
if mibBuilder.loadTexts: alLBSSFPeerPubIpAddress.setDescription('Public LAN Ip address of this peer entry.')
alLBSSFPeerMappedPubIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBSSFPeerMappedPubIpAddress.setStatus('current')
if mibBuilder.loadTexts: alLBSSFPeerMappedPubIpAddress.setDescription("The NAT'ed Public Ip address of this peer entry.")
alLBSSFPeerActive = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBSSFPeerActive.setStatus('current')
if mibBuilder.loadTexts: alLBSSFPeerActive.setDescription('Indicates if this peer is active or not.')
alLBSSFPeerFaultZone = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBSSFPeerFaultZone.setStatus('current')
if mibBuilder.loadTexts: alLBSSFPeerFaultZone.setDescription('Indicates which fault zone this peer belongs.')
alLBSSFPeerRole = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 2, 1, 7), DeviceRole()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBSSFPeerRole.setStatus('current')
if mibBuilder.loadTexts: alLBSSFPeerRole.setDescription('Role of current peer')
alLBSSFPeerDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 2, 1, 8), DeviceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBSSFPeerDeviceType.setStatus('current')
if mibBuilder.loadTexts: alLBSSFPeerDeviceType.setDescription('Device type of this peer.')
alLBSSFPeerLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 2, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBSSFPeerLoad.setStatus('current')
if mibBuilder.loadTexts: alLBSSFPeerLoad.setDescription('Current load of the peer in percentage.')
alLBSSFPeerPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBSSFPeerPriority.setStatus('current')
if mibBuilder.loadTexts: alLBSSFPeerPriority.setDescription('Priority of the peer.')
alLBSSFPeerActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 2, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBSSFPeerActiveSessions.setStatus('current')
if mibBuilder.loadTexts: alLBSSFPeerActiveSessions.setDescription('Number of current active sessions on this peer')
alLBSSFPeerJoinTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 36, 2, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBSSFPeerJoinTime.setStatus('current')
if mibBuilder.loadTexts: alLBSSFPeerJoinTime.setDescription('Time in time-ticks when this peer join the virtual cluster')
altigaLBSSFStatsMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 1, 1, 41, 2, 1))
altigaLBSSFStatsMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 1, 1, 41, 2, 1, 1))
altigaLBSSFStatsMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 3076, 1, 1, 41, 2, 1, 1, 1)).setObjects(("ALTIGA-LBSSF-STATS-MIB", "altigaStatsLBSSFGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaLBSSFStatsMibCompliance = altigaLBSSFStatsMibCompliance.setStatus('current')
if mibBuilder.loadTexts: altigaLBSSFStatsMibCompliance.setDescription('The compliance statement for agents which implement the Altiga Load Balancing and Secure Session Failover Statistics MIB.')
altigaStatsLBSSFGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3076, 2, 1, 1, 1, 36, 3)).setObjects(("ALTIGA-LBSSF-STATS-MIB", "alLBSSFRole"), ("ALTIGA-LBSSF-STATS-MIB", "alLBSSFDeviceType"), ("ALTIGA-LBSSF-STATS-MIB", "alLBSSFActive"), ("ALTIGA-LBSSF-STATS-MIB", "alLBSSFNumberOfPeers"), ("ALTIGA-LBSSF-STATS-MIB", "alLBSSFLoad"), ("ALTIGA-LBSSF-STATS-MIB", "alLBSSFPeerRowStatus"), ("ALTIGA-LBSSF-STATS-MIB", "alLBSSFPeerPrivIpAddress"), ("ALTIGA-LBSSF-STATS-MIB", "alLBSSFPeerPubIpAddress"), ("ALTIGA-LBSSF-STATS-MIB", "alLBSSFPeerMappedPubIpAddress"), ("ALTIGA-LBSSF-STATS-MIB", "alLBSSFPeerActive"), ("ALTIGA-LBSSF-STATS-MIB", "alLBSSFPeerFaultZone"), ("ALTIGA-LBSSF-STATS-MIB", "alLBSSFPeerRole"), ("ALTIGA-LBSSF-STATS-MIB", "alLBSSFPeerDeviceType"), ("ALTIGA-LBSSF-STATS-MIB", "alLBSSFPeerLoad"), ("ALTIGA-LBSSF-STATS-MIB", "alLBSSFPeerPriority"), ("ALTIGA-LBSSF-STATS-MIB", "alLBSSFPeerActiveSessions"), ("ALTIGA-LBSSF-STATS-MIB", "alLBSSFPeerJoinTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaStatsLBSSFGroup = altigaStatsLBSSFGroup.setStatus('current')
if mibBuilder.loadTexts: altigaStatsLBSSFGroup.setDescription('The objects for the LBSSF statistics.')
mibBuilder.exportSymbols("ALTIGA-LBSSF-STATS-MIB", alLBSSFPeerPubIpAddress=alLBSSFPeerPubIpAddress, altigaLBSSFStatsMibModule=altigaLBSSFStatsMibModule, alLBSSFPeerDeviceType=alLBSSFPeerDeviceType, altigaLBSSFStatsMibCompliances=altigaLBSSFStatsMibCompliances, alLBSSFPeerJoinTime=alLBSSFPeerJoinTime, alLBSSFPeerLoad=alLBSSFPeerLoad, alLBSSFPeerTable=alLBSSFPeerTable, alLBSSFPeerActiveSessions=alLBSSFPeerActiveSessions, alLBSSFLoad=alLBSSFLoad, alLBSSFPeerMappedPubIpAddress=alLBSSFPeerMappedPubIpAddress, alLBSSFPeerPrivIpAddress=alLBSSFPeerPrivIpAddress, alLBSSFActive=alLBSSFActive, alLBSSFPeerEntry=alLBSSFPeerEntry, altigaLBSSFStatsMibCompliance=altigaLBSSFStatsMibCompliance, DeviceType=DeviceType, alLBSSFRole=alLBSSFRole, DeviceRole=DeviceRole, alLBSSFPeerRowStatus=alLBSSFPeerRowStatus, alLBSSFPeerRole=alLBSSFPeerRole, alLBSSFDeviceType=alLBSSFDeviceType, altigaLBSSFStatsMibConformance=altigaLBSSFStatsMibConformance, alStatsLBSSFGlobal=alStatsLBSSFGlobal, alLBSSFPeerActive=alLBSSFPeerActive, alLBSSFNumberOfPeers=alLBSSFNumberOfPeers, altigaStatsLBSSFGroup=altigaStatsLBSSFGroup, PYSNMP_MODULE_ID=altigaLBSSFStatsMibModule, alLBSSFPeerFaultZone=alLBSSFPeerFaultZone, alLBSSFPeerPriority=alLBSSFPeerPriority)
