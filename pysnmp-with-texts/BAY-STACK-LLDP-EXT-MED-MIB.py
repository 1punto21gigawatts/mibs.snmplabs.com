#
# PySNMP MIB module BAY-STACK-LLDP-EXT-MED-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BAY-STACK-LLDP-EXT-MED-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:35:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
Dscp, = mibBuilder.importSymbols("DIFFSERV-DSCP-TC", "Dscp")
PolicyAppType, = mibBuilder.importSymbols("LLDP-EXT-MED-MIB", "PolicyAppType")
lldpLocPortNum, = mibBuilder.importSymbols("LLDP-MIB", "lldpLocPortNum")
VlanIdOrAnyOrNone, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIdOrAnyOrNone")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Integer32, Bits, Gauge32, Unsigned32, Counter64, IpAddress, TimeTicks, ModuleIdentity, MibIdentifier, ObjectIdentity, Counter32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Integer32", "Bits", "Gauge32", "Unsigned32", "Counter64", "IpAddress", "TimeTicks", "ModuleIdentity", "MibIdentifier", "ObjectIdentity", "Counter32", "NotificationType")
RowStatus, DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention", "TruthValue")
bayStackMibs, = mibBuilder.importSymbols("SYNOPTICS-ROOT-MIB", "bayStackMibs")
bayStackLldpExtMedMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 5, 33))
bayStackLldpExtMedMib.setRevisions(('2009-03-30 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: bayStackLldpExtMedMib.setRevisionsDescriptions(('Ver 1: Initial version.',))
if mibBuilder.loadTexts: bayStackLldpExtMedMib.setLastUpdated('200903300000Z')
if mibBuilder.loadTexts: bayStackLldpExtMedMib.setOrganization('Nortel Ltd.')
if mibBuilder.loadTexts: bayStackLldpExtMedMib.setContactInfo('nortel.com')
if mibBuilder.loadTexts: bayStackLldpExtMedMib.setDescription('This MIB module is an extension to the standard LLDP-EXT-MED MIB.')
bsLldpExtMedNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 33, 0))
bsLldpExtMedObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 33, 1))
bsLldpXMedLocMediaPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 33, 1, 1), )
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyTable.setStatus('current')
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyTable.setDescription('This table contains one row per policy type per port of media policy information (as a part of the MED organizational extension) on the local system known to this agent.')
bsLldpXMedLocMediaPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 33, 1, 1, 1), ).setIndexNames((0, "LLDP-MIB", "lldpLocPortNum"), (0, "BAY-STACK-LLDP-EXT-MED-MIB", "bsLldpXMedLocMediaPolicyAppType"))
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyEntry.setStatus('current')
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyEntry.setDescription('Information about a particular policy on a specific port component.')
bsLldpXMedLocMediaPolicyAppType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 33, 1, 1, 1, 1), PolicyAppType())
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyAppType.setReference('ANSI/TIA-1057, Section 10.2.3.1')
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyAppType.setStatus('current')
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyAppType.setDescription('The media type that defines the primary function of the application for the policy advertised by an endpoint.')
bsLldpXMedLocMediaPolicyVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 33, 1, 1, 1, 2), VlanIdOrAnyOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyVlanID.setReference(' ANSI/TIA-1057, Section 10.2.3.5')
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyVlanID.setStatus('current')
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyVlanID.setDescription('An extension of the VLAN Identifier for the port, as defined in IEEE 802.1P-1998. A value of 1 through 4094 is used to define a valid PVID. A value of 0 shall be used if the device is using priority tagged frames, meaning that only the 802.1p priority level is significant and the default VID of the ingress port is being used instead. A value of 4095 is reserved for implementation use.')
bsLldpXMedLocMediaPolicyPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 33, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyPriority.setReference(' ANSI/TIA-1057, Section 10.2.3.6 ')
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyPriority.setStatus('current')
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyPriority.setDescription('This object contains the value of the 802.1p priority which is associated with the given port on the local system.')
bsLldpXMedLocMediaPolicyDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 33, 1, 1, 1, 4), Dscp()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyDscp.setReference(' ANSI/TIA-1057, Section 10.2.3.7')
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyDscp.setStatus('current')
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyDscp.setDescription('This object contains the value of the Differentiated Service Code Point (DSCP) as defined in IETF RFC 2474 and RFC 2475 which is associated with the given port on the local system.')
bsLldpXMedLocMediaPolicyUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 33, 1, 1, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyUnknown.setReference(' ANSI/TIA-1057, Section 10.2.3.2')
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyUnknown.setStatus('current')
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyUnknown.setDescription("A value of 'true' indicates that the network policy for the specified application type is currently unknown. In this case, the VLAN ID, the layer 2 priority and the DSCP value fields are ignored. A value of 'false' indicates that this network policy is defined ")
bsLldpXMedLocMediaPolicyTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 33, 1, 1, 1, 6), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyTagged.setReference(' ANSI/TIA-1057, Section 10.2.3.3')
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyTagged.setStatus('current')
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyTagged.setDescription("A value of 'true' indicates that the application is using a tagged VLAN. A value of 'false' indicates that for the specific application the device either is using an untagged VLAN or does not support port based VLAN operation. In this case, both the VLAN ID and the Layer 2 priority fields are ignored and only the DSCP value has relevance ")
bsLldpXMedLocMediaPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 33, 1, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyRowStatus.setStatus('current')
if mibBuilder.loadTexts: bsLldpXMedLocMediaPolicyRowStatus.setDescription('This object is used to create/delete entries in this table. Note that all columns in an entry must be set before an entry can be made valid. Also note that while an entry is valid, any column in the entry may be modified.')
mibBuilder.exportSymbols("BAY-STACK-LLDP-EXT-MED-MIB", bsLldpExtMedObjects=bsLldpExtMedObjects, bsLldpXMedLocMediaPolicyTable=bsLldpXMedLocMediaPolicyTable, bsLldpXMedLocMediaPolicyVlanID=bsLldpXMedLocMediaPolicyVlanID, bsLldpXMedLocMediaPolicyDscp=bsLldpXMedLocMediaPolicyDscp, bsLldpXMedLocMediaPolicyPriority=bsLldpXMedLocMediaPolicyPriority, PYSNMP_MODULE_ID=bayStackLldpExtMedMib, bsLldpExtMedNotifications=bsLldpExtMedNotifications, bsLldpXMedLocMediaPolicyRowStatus=bsLldpXMedLocMediaPolicyRowStatus, bayStackLldpExtMedMib=bayStackLldpExtMedMib, bsLldpXMedLocMediaPolicyUnknown=bsLldpXMedLocMediaPolicyUnknown, bsLldpXMedLocMediaPolicyAppType=bsLldpXMedLocMediaPolicyAppType, bsLldpXMedLocMediaPolicyEntry=bsLldpXMedLocMediaPolicyEntry, bsLldpXMedLocMediaPolicyTagged=bsLldpXMedLocMediaPolicyTagged)
