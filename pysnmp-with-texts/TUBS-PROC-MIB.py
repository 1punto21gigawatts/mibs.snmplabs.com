#
# PySNMP MIB module TUBS-PROC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TUBS-PROC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:27:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, NotificationType, MibIdentifier, ModuleIdentity, Counter64, ObjectIdentity, IpAddress, TimeTicks, Integer32, Counter32, Gauge32, iso, Unsigned32, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "NotificationType", "MibIdentifier", "ModuleIdentity", "Counter64", "ObjectIdentity", "IpAddress", "TimeTicks", "Integer32", "Counter32", "Gauge32", "iso", "Unsigned32", "enterprises")
DisplayString, TAddress, TextualConvention, TimeStamp, DateAndTime, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TAddress", "TextualConvention", "TimeStamp", "DateAndTime", "RowStatus", "TruthValue")
procMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1575, 1, 3))
if mibBuilder.loadTexts: procMIB.setLastUpdated('9411152024Z')
if mibBuilder.loadTexts: procMIB.setOrganization('TU Braunschweig')
if mibBuilder.loadTexts: procMIB.setContactInfo(' Juergen Schoenwaelder Postal: TU Braunschweig Bueltenweg 74/75 D-38108 Braunschweig GERMANY Tel: +49 531 391 3249 Fax: +49 531 391 5936 E-mail: schoenw@ibr.cs.tu-bs.de')
if mibBuilder.loadTexts: procMIB.setDescription('Experimental MIB modules for process listings.')
procReload = MibScalar((1, 3, 6, 1, 4, 1, 1575, 1, 3, 1), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: procReload.setStatus('current')
if mibBuilder.loadTexts: procReload.setDescription('Any set operation will reload the process table. It contains a time stamp when the proc table was reloaded the last time.')
procTable = MibTable((1, 3, 6, 1, 4, 1, 1575, 1, 3, 2), )
if mibBuilder.loadTexts: procTable.setStatus('current')
if mibBuilder.loadTexts: procTable.setDescription('The process table.')
procEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1575, 1, 3, 2, 1), ).setIndexNames((0, "TUBS-PROC-MIB", "procID"))
if mibBuilder.loadTexts: procEntry.setStatus('current')
if mibBuilder.loadTexts: procEntry.setDescription('An entry for a process in the processes table.')
procID = MibTableColumn((1, 3, 6, 1, 4, 1, 1575, 1, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: procID.setStatus('current')
if mibBuilder.loadTexts: procID.setDescription('The unique process ID.')
procCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 1575, 1, 3, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: procCmd.setStatus('current')
if mibBuilder.loadTexts: procCmd.setDescription('The command name used to start this process.')
mibBuilder.exportSymbols("TUBS-PROC-MIB", procCmd=procCmd, procTable=procTable, procID=procID, procReload=procReload, procEntry=procEntry, procMIB=procMIB, PYSNMP_MODULE_ID=procMIB)
