#
# PySNMP MIB module DEVETHERNET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DEVETHERNET-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:41:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
device, = mibBuilder.importSymbols("ANIROOT-MIB", "device")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Integer32, IpAddress, Unsigned32, MibIdentifier, Bits, iso, ObjectIdentity, NotificationType, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Integer32", "IpAddress", "Unsigned32", "MibIdentifier", "Bits", "iso", "ObjectIdentity", "NotificationType", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ModuleIdentity", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
aniDevEthernet = ModuleIdentity((1, 3, 6, 1, 4, 1, 4325, 2, 11))
if mibBuilder.loadTexts: aniDevEthernet.setLastUpdated('0210251725Z')
if mibBuilder.loadTexts: aniDevEthernet.setOrganization('Aperto Networks')
if mibBuilder.loadTexts: aniDevEthernet.setContactInfo(' Postal: Aperto Networks Inc 1637 S Main Street Milpitas, California 95035 Tel: +1 408 719 9977 ')
if mibBuilder.loadTexts: aniDevEthernet.setDescription('This group provides Ethernet related information for BSU or SU. ')
aniDevEthernetConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 4325, 2, 11, 1))
aniDevEthernetConfigMode = MibScalar((1, 3, 6, 1, 4, 1, 4325, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto-negotiate", 1), ("speed-100mbps-full", 2), ("speed-100mbps-half", 3), ("speed-10mbps-full", 4), ("speed-10mbps-half", 5))).clone('auto-negotiate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aniDevEthernetConfigMode.setStatus('current')
if mibBuilder.loadTexts: aniDevEthernetConfigMode.setDescription('Specifies the Ethernet Speed (10 or 100 Mbps) and Duplex Setting (Half or Full) or to set the device to auto-negotiate. ')
aniDevEthernetCurrentLinkStatus = MibScalar((1, 3, 6, 1, 4, 1, 4325, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevEthernetCurrentLinkStatus.setStatus('current')
if mibBuilder.loadTexts: aniDevEthernetCurrentLinkStatus.setDescription('Displays the current ethernet link status of the device ')
aniDevEthernetCurrentSpeed = MibScalar((1, 3, 6, 1, 4, 1, 4325, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("speed-10-mbps", 1), ("speed-100-mbps", 2), ("not-applicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevEthernetCurrentSpeed.setStatus('current')
if mibBuilder.loadTexts: aniDevEthernetCurrentSpeed.setDescription('Displays the current ethernet speed of the device ')
aniDevEthernetCurrentDuplex = MibScalar((1, 3, 6, 1, 4, 1, 4325, 2, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("half-duplex", 1), ("full-duplex", 2), ("not-applicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevEthernetCurrentDuplex.setStatus('current')
if mibBuilder.loadTexts: aniDevEthernetCurrentDuplex.setDescription('Displays the current ethernet duplex mode of the device ')
mibBuilder.exportSymbols("DEVETHERNET-MIB", aniDevEthernetCurrentLinkStatus=aniDevEthernetCurrentLinkStatus, aniDevEthernetConfigMode=aniDevEthernetConfigMode, aniDevEthernetConfig=aniDevEthernetConfig, aniDevEthernet=aniDevEthernet, aniDevEthernetCurrentDuplex=aniDevEthernetCurrentDuplex, aniDevEthernetCurrentSpeed=aniDevEthernetCurrentSpeed, PYSNMP_MODULE_ID=aniDevEthernet)
