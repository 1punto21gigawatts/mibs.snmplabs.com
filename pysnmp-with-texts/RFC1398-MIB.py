#
# PySNMP MIB module RFC1398-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RFC1398-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:56:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, MibIdentifier, Counter64, Unsigned32, IpAddress, Bits, NotificationType, Counter32, Integer32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Gauge32, transmission, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "Counter64", "Unsigned32", "IpAddress", "Bits", "NotificationType", "Counter32", "Integer32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Gauge32", "transmission", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
dot3 = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7))
dot3StatsTable = MibTable((1, 3, 6, 1, 2, 1, 10, 7, 2), )
if mibBuilder.loadTexts: dot3StatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: dot3StatsTable.setDescription('Statistics for a collection of ethernet-like interfaces attached to a particular system.')
dot3StatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 7, 2, 1), ).setIndexNames((0, "RFC1398-MIB", "dot3StatsIndex"))
if mibBuilder.loadTexts: dot3StatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: dot3StatsEntry.setDescription('Statistics for a particular interface to an ethernet-like medium.')
dot3StatsIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsIndex.setStatus('mandatory')
if mibBuilder.loadTexts: dot3StatsIndex.setDescription('An index value that uniquely identifies an interface to an ethernet-like medium. The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex.')
dot3StatsAlignmentErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsAlignmentErrors.setReference('IEEE 802.3 Layer Management')
if mibBuilder.loadTexts: dot3StatsAlignmentErrors.setStatus('mandatory')
if mibBuilder.loadTexts: dot3StatsAlignmentErrors.setDescription('A count of frames received on a particular interface that are not an integral number of octets in length and do not pass the FCS check. The count represented by an instance of this object is incremented when the alignmentError status is returned by the MAC service to the LLC (or other MAC user). Received frames for which multiple error conditions obtain are, according to the conventions of IEEE 802.3 Layer Management, counted exclusively according to the error status presented to the LLC.')
dot3StatsFCSErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsFCSErrors.setReference('IEEE 802.3 Layer Management')
if mibBuilder.loadTexts: dot3StatsFCSErrors.setStatus('mandatory')
if mibBuilder.loadTexts: dot3StatsFCSErrors.setDescription('A count of frames received on a particular interface that are an integral number of octets in length but do not pass the FCS check. The count represented by an instance of this object is incremented when the frameCheckError status is returned by the MAC service to the LLC (or other MAC user). Received frames for which multiple error conditions obtain are, according to the conventions of IEEE 802.3 Layer Management, counted exclusively according to the error status presented to the LLC.')
dot3StatsSingleCollisionFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsSingleCollisionFrames.setReference('IEEE 802.3 Layer Management')
if mibBuilder.loadTexts: dot3StatsSingleCollisionFrames.setStatus('mandatory')
if mibBuilder.loadTexts: dot3StatsSingleCollisionFrames.setDescription('A count of successfully transmitted frames on a particular interface for which transmission is inhibited by exactly one collision. A frame that is counted by an instance of this object is also counted by the corresponding instance of either the ifOutUcastPkts or ifOutNUcastPkts object and is not counted by the corresponding instance of the dot3StatsMultipleCollisionFrames object.')
dot3StatsMultipleCollisionFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsMultipleCollisionFrames.setReference('IEEE 802.3 Layer Management')
if mibBuilder.loadTexts: dot3StatsMultipleCollisionFrames.setStatus('mandatory')
if mibBuilder.loadTexts: dot3StatsMultipleCollisionFrames.setDescription('A count of successfully transmitted frames on a particular interface for which transmission is inhibited by more than one collision. A frame that is counted by an instance of this object is also counted by the corresponding instance of either the ifOutUcastPkts or ifOutNUcastPkts object and is not counted by the corresponding instance of the dot3StatsSingleCollisionFrames object.')
dot3StatsSQETestErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsSQETestErrors.setReference('ANSI/IEEE Std 802.3-1985 Carrier Sense Multiple Access with Collision Detection Access Method and Physical Layer Specifications')
if mibBuilder.loadTexts: dot3StatsSQETestErrors.setStatus('mandatory')
if mibBuilder.loadTexts: dot3StatsSQETestErrors.setDescription('A count of times that the SQE TEST ERROR message is generated by the PLS sublayer for a particular interface. The SQE TEST ERROR message is defined in section 7.2.2.2.4 of ANSI/IEEE 802.3-1985 and its generation is described in section 7.2.4.6 of the same document.')
dot3StatsDeferredTransmissions = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsDeferredTransmissions.setReference('IEEE 802.3 Layer Management')
if mibBuilder.loadTexts: dot3StatsDeferredTransmissions.setStatus('mandatory')
if mibBuilder.loadTexts: dot3StatsDeferredTransmissions.setDescription('A count of frames for which the first transmission attempt on a particular interface is delayed because the medium is busy. The count represented by an instance of this object does not include frames involved in collisions.')
dot3StatsLateCollisions = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsLateCollisions.setReference('IEEE 802.3 Layer Management')
if mibBuilder.loadTexts: dot3StatsLateCollisions.setStatus('mandatory')
if mibBuilder.loadTexts: dot3StatsLateCollisions.setDescription('The number of times that a collision is detected on a particular interface later than 512 bit-times into the transmission of a packet. Five hundred and twelve bit-times corresponds to 51.2 microseconds on a 10 Mbit/s system. A (late) collision included in a count represented by an instance of this object is also considered as a (generic) collision for purposes of other collision-related statistics.')
dot3StatsExcessiveCollisions = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsExcessiveCollisions.setReference('IEEE 802.3 Layer Management')
if mibBuilder.loadTexts: dot3StatsExcessiveCollisions.setStatus('mandatory')
if mibBuilder.loadTexts: dot3StatsExcessiveCollisions.setDescription('A count of frames for which transmission on a particular interface fails due to excessive collisions.')
dot3StatsInternalMacTransmitErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsInternalMacTransmitErrors.setReference('IEEE 802.3 Layer Management')
if mibBuilder.loadTexts: dot3StatsInternalMacTransmitErrors.setStatus('mandatory')
if mibBuilder.loadTexts: dot3StatsInternalMacTransmitErrors.setDescription('A count of frames for which transmission on a particular interface fails due to an internal MAC sublayer transmit error. A frame is only counted by an instance of this object if it is not counted by the corresponding instance of either the dot3StatsLateCollisions object, the dot3StatsExcessiveCollisions object, or the dot3StatsCarrierSenseErrors object. The precise meaning of the count represented by an instance of this object is implementation- specific. In particular, an instance of this object may represent a count of transmission errors on a particular interface that are not otherwise counted.')
dot3StatsCarrierSenseErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsCarrierSenseErrors.setReference('IEEE 802.3 Layer Management')
if mibBuilder.loadTexts: dot3StatsCarrierSenseErrors.setStatus('mandatory')
if mibBuilder.loadTexts: dot3StatsCarrierSenseErrors.setDescription('The number of times that the carrier sense condition was lost or never asserted when attempting to transmit a frame on a particular interface. The count represented by an instance of this object is incremented at most once per transmission attempt, even if the carrier sense condition fluctuates during a transmission attempt.')
dot3StatsFrameTooLongs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsFrameTooLongs.setReference('IEEE 802.3 Layer Management')
if mibBuilder.loadTexts: dot3StatsFrameTooLongs.setStatus('mandatory')
if mibBuilder.loadTexts: dot3StatsFrameTooLongs.setDescription('A count of frames received on a particular interface that exceed the maximum permitted frame size. The count represented by an instance of this object is incremented when the frameTooLong status is returned by the MAC service to the LLC (or other MAC user). Received frames for which multiple error conditions obtain are, according to the conventions of IEEE 802.3 Layer Management, counted exclusively according to the error status presented to the LLC.')
dot3StatsInternalMacReceiveErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsInternalMacReceiveErrors.setReference('IEEE 802.3 Layer Management')
if mibBuilder.loadTexts: dot3StatsInternalMacReceiveErrors.setStatus('mandatory')
if mibBuilder.loadTexts: dot3StatsInternalMacReceiveErrors.setDescription('A count of frames for which reception on a particular interface fails due to an internal MAC sublayer receive error. A frame is only counted by an instance of this object if it is not counted by the corresponding instance of either the dot3StatsFrameTooLongs object, the dot3StatsAlignmentErrors object, or the dot3StatsFCSErrors object. The precise meaning of the count represented by an instance of this object is implementation- specific. In particular, an instance of this object may represent a count of receive errors on a particular interface that are not otherwise counted.')
dot3CollTable = MibTable((1, 3, 6, 1, 2, 1, 10, 7, 5), )
if mibBuilder.loadTexts: dot3CollTable.setStatus('mandatory')
if mibBuilder.loadTexts: dot3CollTable.setDescription('A collection of collision histograms for a particular set of interfaces.')
dot3CollEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 7, 5, 1), ).setIndexNames((0, "RFC1398-MIB", "dot3CollIndex"), (0, "RFC1398-MIB", "dot3CollCount"))
if mibBuilder.loadTexts: dot3CollEntry.setStatus('mandatory')
if mibBuilder.loadTexts: dot3CollEntry.setDescription('A cell in the histogram of per-frame collisions for a particular interface. An instance of this object represents the frequency of individual MAC frames for which the transmission (successful or otherwise) on a particular interface is accompanied by a particular number of media collisions.')
dot3CollIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3CollIndex.setStatus('mandatory')
if mibBuilder.loadTexts: dot3CollIndex.setDescription('The index value that uniquely identifies the interface to which a particular collision histogram cell pertains. The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex.')
dot3CollCount = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3CollCount.setStatus('mandatory')
if mibBuilder.loadTexts: dot3CollCount.setDescription('The number of per-frame media collisions for which a particular collision histogram cell represents the frequency on a particular interface.')
dot3CollFrequencies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3CollFrequencies.setStatus('mandatory')
if mibBuilder.loadTexts: dot3CollFrequencies.setDescription('A count of individual MAC frames for which the transmission (successful or otherwise) on a particular interface is accompanied by a particular number of media collisions.')
dot3Errors = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 7))
dot3ErrorInitError = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 7, 1))
dot3ErrorLoopbackError = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 7, 2))
dot3Tests = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 6))
dot3TestTdr = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 6, 1))
dot3ChipSets = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8))
dot3ChipSetAMD = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 1))
dot3ChipSetAMD7990 = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 1, 1))
dot3ChipSetAMD79900 = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 1, 2))
dot3ChipSetIntel = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 2))
dot3ChipSetIntel82586 = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 2, 1))
dot3ChipSetIntel82596 = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 2, 2))
dot3ChipSetSeeq = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 3))
dot3ChipSetSeeq8003 = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 3, 1))
dot3ChipSetNational = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 4))
dot3ChipSetNational8390 = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 4, 1))
dot3ChipSetNationalSonic = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 4, 2))
dot3ChipSetFujitsu = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 5))
dot3ChipSetFujitsu86950 = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 5, 1))
dot3ChipSetFujitsu86960 = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 8, 5, 2))
mibBuilder.exportSymbols("RFC1398-MIB", dot3ChipSetIntel82596=dot3ChipSetIntel82596, dot3Errors=dot3Errors, dot3ErrorInitError=dot3ErrorInitError, dot3CollFrequencies=dot3CollFrequencies, dot3ErrorLoopbackError=dot3ErrorLoopbackError, dot3StatsIndex=dot3StatsIndex, dot3CollIndex=dot3CollIndex, dot3StatsSQETestErrors=dot3StatsSQETestErrors, dot3ChipSets=dot3ChipSets, dot3StatsAlignmentErrors=dot3StatsAlignmentErrors, dot3CollCount=dot3CollCount, dot3ChipSetNational8390=dot3ChipSetNational8390, dot3CollEntry=dot3CollEntry, dot3ChipSetIntel82586=dot3ChipSetIntel82586, dot3ChipSetFujitsu86950=dot3ChipSetFujitsu86950, dot3StatsFCSErrors=dot3StatsFCSErrors, dot3StatsExcessiveCollisions=dot3StatsExcessiveCollisions, dot3StatsTable=dot3StatsTable, dot3ChipSetFujitsu86960=dot3ChipSetFujitsu86960, dot3ChipSetIntel=dot3ChipSetIntel, dot3StatsDeferredTransmissions=dot3StatsDeferredTransmissions, dot3Tests=dot3Tests, dot3StatsCarrierSenseErrors=dot3StatsCarrierSenseErrors, dot3CollTable=dot3CollTable, dot3StatsLateCollisions=dot3StatsLateCollisions, dot3ChipSetAMD79900=dot3ChipSetAMD79900, dot3=dot3, dot3ChipSetAMD7990=dot3ChipSetAMD7990, dot3StatsInternalMacReceiveErrors=dot3StatsInternalMacReceiveErrors, dot3ChipSetNational=dot3ChipSetNational, dot3ChipSetAMD=dot3ChipSetAMD, dot3StatsInternalMacTransmitErrors=dot3StatsInternalMacTransmitErrors, dot3ChipSetFujitsu=dot3ChipSetFujitsu, dot3StatsSingleCollisionFrames=dot3StatsSingleCollisionFrames, dot3StatsMultipleCollisionFrames=dot3StatsMultipleCollisionFrames, dot3StatsFrameTooLongs=dot3StatsFrameTooLongs, dot3TestTdr=dot3TestTdr, dot3StatsEntry=dot3StatsEntry, dot3ChipSetNationalSonic=dot3ChipSetNationalSonic, dot3ChipSetSeeq8003=dot3ChipSetSeeq8003, dot3ChipSetSeeq=dot3ChipSetSeeq)
