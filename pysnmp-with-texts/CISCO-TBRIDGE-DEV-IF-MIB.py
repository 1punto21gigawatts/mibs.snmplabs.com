#
# PySNMP MIB module CISCO-TBRIDGE-DEV-IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-TBRIDGE-DEV-IF-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:14:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, TimeTicks, Unsigned32, Gauge32, Counter32, NotificationType, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, Counter64, MibIdentifier, ObjectIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "Unsigned32", "Gauge32", "Counter32", "NotificationType", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "Counter64", "MibIdentifier", "ObjectIdentity", "Integer32")
TextualConvention, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress")
ciscoTBridgeDevIfMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 269))
ciscoTBridgeDevIfMIB.setRevisions(('2002-04-03 00:01',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoTBridgeDevIfMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoTBridgeDevIfMIB.setLastUpdated('200204030001Z')
if mibBuilder.loadTexts: ciscoTBridgeDevIfMIB.setOrganization('Cisco System Inc.')
if mibBuilder.loadTexts: ciscoTBridgeDevIfMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 West Tasman Drive, San Jose CA 95134-1706. USA Tel: +1 800 553-NETS E-mail: cs-dot11@cisco.com')
if mibBuilder.loadTexts: ciscoTBridgeDevIfMIB.setDescription('This MIB module provides network management support for configuration and status information of devices supporting transparent bridging functions.')
ciscoTBridgeDevIfMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 269, 1))
ctbrDevInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 269, 1, 1))
ctbrDevInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 269, 1, 1, 1), )
if mibBuilder.loadTexts: ctbrDevInterfaceTable.setStatus('current')
if mibBuilder.loadTexts: ctbrDevInterfaceTable.setDescription('This table provides configuration and information of the device interfaces supporting transparent bridging. This table has a sparse dependent relationship with the ifTable.')
ctbrDevInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 269, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ctbrDevInterfaceEntry.setStatus('current')
if mibBuilder.loadTexts: ctbrDevInterfaceEntry.setDescription('Each entry provides MAC and IP address related configuration information of an interface.')
ctbrDefaultPhyAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 269, 1, 1, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctbrDefaultPhyAddress.setStatus('current')
if mibBuilder.loadTexts: ctbrDefaultPhyAddress.setDescription('The default, factory-assigned MAC address of the interface. Guaranteed to be unique across all IEEE 802 devices.')
ctbrPhyAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 269, 1, 1, 1, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctbrPhyAddress.setStatus('current')
if mibBuilder.loadTexts: ctbrPhyAddress.setDescription("The MAC address to be used by the interface. If ctbrDefaultPhyAddress is used, this is '00:00:00:00:00:00'.")
ctbrDefaultIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 269, 1, 1, 1, 1, 3), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctbrDefaultIpAddrType.setStatus('current')
if mibBuilder.loadTexts: ctbrDefaultIpAddrType.setDescription('The IP address type of the ctbrDefaultIpAddress object.')
ctbrDefaultIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 269, 1, 1, 1, 1, 4), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctbrDefaultIpAddress.setStatus('current')
if mibBuilder.loadTexts: ctbrDefaultIpAddress.setDescription('The default IP address of the interface. If BOOTP or DHCP is enabled, this may be overridden by the BOOTP or DHCP server.')
ctbrDefaultIpMaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 269, 1, 1, 1, 1, 5), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctbrDefaultIpMaskType.setStatus('current')
if mibBuilder.loadTexts: ctbrDefaultIpMaskType.setDescription('The IP address type of the ctbrDefaultIpMask object.')
ctbrDefaultIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 269, 1, 1, 1, 1, 6), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctbrDefaultIpMask.setStatus('current')
if mibBuilder.loadTexts: ctbrDefaultIpMask.setDescription('The default IP netmask of the interface. If BOOTP or DHCP is enabled, this may be overridden by the BOOTP or DHCP server.')
ctbrIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 269, 1, 1, 1, 1, 7), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctbrIpAddressType.setStatus('current')
if mibBuilder.loadTexts: ctbrIpAddressType.setDescription('The IP address type of the ctbrIpAddress object.')
ctbrIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 269, 1, 1, 1, 1, 8), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctbrIpAddress.setStatus('current')
if mibBuilder.loadTexts: ctbrIpAddress.setDescription('The IP address currently in use by the interface.')
ctbrIpMaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 269, 1, 1, 1, 1, 9), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctbrIpMaskType.setStatus('current')
if mibBuilder.loadTexts: ctbrIpMaskType.setDescription('The IP address type of the ctbrIpMask object.')
ctbrIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 269, 1, 1, 1, 1, 10), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctbrIpMask.setStatus('current')
if mibBuilder.loadTexts: ctbrIpMask.setDescription('The IP netmask currently in use by the interface.')
ctbrMSDUMaxLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 269, 1, 1, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctbrMSDUMaxLength.setStatus('current')
if mibBuilder.loadTexts: ctbrMSDUMaxLength.setDescription('Maximum length of the data portion of a packet for this particular interface. This is the maximum MAC Service Data Unit length, which is greater than or equal to ifMtu, depending on the configured MAC-level encapsulation.')
ciscoTBridgeDevIfMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 269, 2))
ciscoTBridgeDevIfMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 269, 2, 1))
ciscoTBridgeDevIfMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 269, 2, 2))
ciscoTBridgeDevIfCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 269, 2, 1, 1)).setObjects(("CISCO-TBRIDGE-DEV-IF-MIB", "ctbrDevIfConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTBridgeDevIfCompliance = ciscoTBridgeDevIfCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoTBridgeDevIfCompliance.setDescription('The compliance statement for the interface configuration ctbrDevIfConfigGroup.')
ctbrDevIfConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 269, 2, 2, 1)).setObjects(("CISCO-TBRIDGE-DEV-IF-MIB", "ctbrDefaultPhyAddress"), ("CISCO-TBRIDGE-DEV-IF-MIB", "ctbrPhyAddress"), ("CISCO-TBRIDGE-DEV-IF-MIB", "ctbrDefaultIpAddrType"), ("CISCO-TBRIDGE-DEV-IF-MIB", "ctbrDefaultIpAddress"), ("CISCO-TBRIDGE-DEV-IF-MIB", "ctbrDefaultIpMaskType"), ("CISCO-TBRIDGE-DEV-IF-MIB", "ctbrDefaultIpMask"), ("CISCO-TBRIDGE-DEV-IF-MIB", "ctbrIpAddressType"), ("CISCO-TBRIDGE-DEV-IF-MIB", "ctbrIpAddress"), ("CISCO-TBRIDGE-DEV-IF-MIB", "ctbrIpMaskType"), ("CISCO-TBRIDGE-DEV-IF-MIB", "ctbrIpMask"), ("CISCO-TBRIDGE-DEV-IF-MIB", "ctbrMSDUMaxLength"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctbrDevIfConfigGroup = ctbrDevIfConfigGroup.setStatus('current')
if mibBuilder.loadTexts: ctbrDevIfConfigGroup.setDescription('Information to support configuration of network interfaces.')
mibBuilder.exportSymbols("CISCO-TBRIDGE-DEV-IF-MIB", ciscoTBridgeDevIfMIBObjects=ciscoTBridgeDevIfMIBObjects, ctbrDefaultPhyAddress=ctbrDefaultPhyAddress, ciscoTBridgeDevIfCompliance=ciscoTBridgeDevIfCompliance, ctbrDevInterface=ctbrDevInterface, ciscoTBridgeDevIfMIBCompliances=ciscoTBridgeDevIfMIBCompliances, ctbrMSDUMaxLength=ctbrMSDUMaxLength, PYSNMP_MODULE_ID=ciscoTBridgeDevIfMIB, ctbrIpAddress=ctbrIpAddress, ctbrPhyAddress=ctbrPhyAddress, ctbrDevInterfaceEntry=ctbrDevInterfaceEntry, ctbrIpMaskType=ctbrIpMaskType, ciscoTBridgeDevIfMIB=ciscoTBridgeDevIfMIB, ctbrDefaultIpAddress=ctbrDefaultIpAddress, ctbrDefaultIpAddrType=ctbrDefaultIpAddrType, ctbrDevIfConfigGroup=ctbrDevIfConfigGroup, ciscoTBridgeDevIfMIBConformance=ciscoTBridgeDevIfMIBConformance, ciscoTBridgeDevIfMIBGroups=ciscoTBridgeDevIfMIBGroups, ctbrDevInterfaceTable=ctbrDevInterfaceTable, ctbrDefaultIpMaskType=ctbrDefaultIpMaskType, ctbrDefaultIpMask=ctbrDefaultIpMask, ctbrIpAddressType=ctbrIpAddressType, ctbrIpMask=ctbrIpMask)
