#
# PySNMP MIB module BTI7800-NOTIFICATIONS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BTI7800-NOTIFICATIONS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:41:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, TimeTicks, Bits, ObjectIdentity, NotificationType, MibIdentifier, Unsigned32, IpAddress, enterprises, Gauge32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "TimeTicks", "Bits", "ObjectIdentity", "NotificationType", "MibIdentifier", "Unsigned32", "IpAddress", "enterprises", "Gauge32", "Counter64")
TextualConvention, DateAndTime, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "DisplayString", "TruthValue")
bTI7800_NOTIFICATIONS_MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2)).setLabel("bTI7800-NOTIFICATIONS-MIB")
bTI7800_NOTIFICATIONS_MIB.setRevisions(('2014-02-02 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: bTI7800_NOTIFICATIONS_MIB.setRevisionsDescriptions(('Initial revision.',))
if mibBuilder.loadTexts: bTI7800_NOTIFICATIONS_MIB.setLastUpdated('201405050000Z')
if mibBuilder.loadTexts: bTI7800_NOTIFICATIONS_MIB.setOrganization('BTI Systems Inc.')
if mibBuilder.loadTexts: bTI7800_NOTIFICATIONS_MIB.setContactInfo('Technical Support BTI Systems Inc. 200-1000 Innovation Drive Kanata, Ontario, Canada, K2K 3E7 NA Toll Free: +1 866-431-4967 International: +1 613-239-4781 support@btisystems.com')
if mibBuilder.loadTexts: bTI7800_NOTIFICATIONS_MIB.setDescription('The bti7800-conditions submodule defines the data modeling that supports the retrieval of active alarms and conditions on the BTI7800 system.')
class String(TextualConvention, OctetString):
    description = 'xs:string'
    status = 'current'
    displayHint = '1t'

class Severity(TextualConvention, Integer32):
    description = ''
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("critical", 1), ("major", 2), ("minor", 3), ("not-alarmed", 4), ("not-reported", 5))

class ConditionCode(TextualConvention, Integer32):
    description = ''
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134))
    namedValues = NamedValues(("eqptMiss", 1), ("eqptUnkn", 2), ("eqptMism", 3), ("eqptFail", 4), ("eqptDgrd", 5), ("eqptComm", 6), ("upgr", 7), ("lpbk", 8), ("los", 9), ("lof", 10), ("loSync", 11), ("lola", 12), ("lom", 13), ("tim", 14), ("sd", 15), ("bdi", 16), ("pyldMism", 17), ("odtgMism", 18), ("ais-l", 19), ("ms-ais", 20), ("otu-ais", 21), ("odu-ais", 22), ("lck", 23), ("oci", 24), ("highBer", 25), ("lf", 26), ("rf", 27), ("rdi-l", 28), ("ms-rdi", 29), ("oprHighTh", 30), ("oprLowTh", 31), ("optHighTh", 32), ("optLowTh", 33), ("laserTempHighTh", 34), ("laserTempLowTh", 35), ("laserFail", 36), ("cfgUnsupp", 37), ("cfgFail", 38), ("lolightRx", 39), ("lolightTx", 40), ("feim", 41), ("feci", 42), ("contComS", 43), ("contComE", 44), ("loSpecRx", 45), ("tLossRxHt", 46), ("iaocp", 47), ("iaocm", 48), ("iaocb", 49), ("apsd", 50), ("pmi", 51), ("uneqO", 52), ("aisO", 53), ("posRx", 54), ("posTx", 55), ("obros", 56), ("chnDfc", 57), ("replUnitDegrade", 58), ("cnxMea", 59), ("cnxVldTmout", 60), ("posRxHigh", 61), ("posRxLow", 62), ("oprHighFail", 63), ("obrHt", 64), ("apr", 65), ("modTempHighTh", 66), ("modTempLowTh", 67), ("modTempShutdown", 68), ("envTempHighTh", 69), ("envTempLowTh", 70), ("envTempFail", 71), ("envVoltHighTh", 72), ("envVoltLowTh", 73), ("envVoltFail", 74), ("scmNmiDown", 75), ("scmNoNmConn", 76), ("eqptLatchOpen", 77), ("powerAbsent", 78), ("fanSpeedLowTh", 79), ("nonCoLocatedController", 80), ("preFecBerTh", 81), ("firmUpgrdReqd", 82), ("otuBerTh", 83), ("oduBerTh", 84), ("pcsBerTh", 85), ("berTh-s", 86), ("berTh-l", 87), ("rs-berTh", 88), ("ms-berTh", 89), ("oneCableDisconnected", 90), ("envCurrentHighTh", 91), ("envCurrentLowTh", 92), ("prbs", 93), ("forced", 94), ("lockout", 95), ("tLossRxLt", 96), ("omsBdi", 97), ("ochAis", 98), ("ochRdi", 99), ("ochUeq", 100), ("ochOci", 101), ("defRDICCM", 102), ("defMACStatus", 103), ("defRemoteCCM", 104), ("defErrorCCM", 105), ("defXconCCM", 106), ("defBfdDown", 107), ("lf-tx", 108), ("apsData", 109), ("omsAis", 110), ("isisDbOvrld", 111), ("isisXDown", 112), ("isisAdjDown", 113), ("isisAdjRejected", 114), ("rsvpAdjDown", 115), ("diskHighUsage", 116), ("memHighUsage", 117), ("invUnknown", 118), ("airfilterAbsense", 119), ("tx-msais", 120), ("tx-msrdi", 121), ("tx-aisl", 122), ("tx-rdil", 123), ("tx-rf", 124), ("tx-oduAis", 125), ("tx-oduLck", 126), ("tx-oduOci", 127), ("tx-opuCsf", 128), ("firmUpgrdInProg", 129), ("firmUpgrdFail", 130), ("partitionFault", 131), ("oom", 132), ("lolck", 133), ("inventoryUnsupp", 134))

notificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1))
variables = MibIdentifier((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 1))
entityName = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: entityName.setStatus('current')
if mibBuilder.loadTexts: entityName.setDescription('The entityName identifies the system-unique name of the entity against which the condition is raised.')
code = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 1, 2), ConditionCode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: code.setStatus('current')
if mibBuilder.loadTexts: code.setDescription('Identifies the type of condition raised.')
reportType = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("non-alarmed", 1), ("alarmed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reportType.setStatus('current')
if mibBuilder.loadTexts: reportType.setDescription('If set to non-alarmed, the list entry is a non-alarmed condition. If set to alarmed, the entry is an alarmed condition.')
timeStamp = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 1, 4), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeStamp.setStatus('current')
if mibBuilder.loadTexts: timeStamp.setDescription('The date and time at which the condition became active.')
severity = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 1, 5), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: severity.setStatus('current')
if mibBuilder.loadTexts: severity.setDescription('The severity level of the condition.')
serviceAffecting = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: serviceAffecting.setStatus('current')
if mibBuilder.loadTexts: serviceAffecting.setDescription('If true, the condition is known to disrupt the normal service provided by the entity.')
description = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 1, 7), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: description.setStatus('current')
if mibBuilder.loadTexts: description.setDescription('Provides a description of the condition raised that may include context specific information.')
notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2))
traps = MibIdentifier((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1))
eqptMissRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 1)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: eqptMissRaise.setStatus('current')
if mibBuilder.loadTexts: eqptMissRaise.setDescription('Equipment Missing Raise')
eqptMissClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 2)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: eqptMissClear.setStatus('current')
if mibBuilder.loadTexts: eqptMissClear.setDescription('Equipment Missing Clear')
eqptUnknRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 3)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: eqptUnknRaise.setStatus('current')
if mibBuilder.loadTexts: eqptUnknRaise.setDescription('Equipment Unknown Raise')
eqptUnknClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 4)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: eqptUnknClear.setStatus('current')
if mibBuilder.loadTexts: eqptUnknClear.setDescription('Equipment Unknown Clear')
eqptMismRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 5)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: eqptMismRaise.setStatus('current')
if mibBuilder.loadTexts: eqptMismRaise.setDescription('Equipment Mismatch Raise')
eqptMismClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 6)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: eqptMismClear.setStatus('current')
if mibBuilder.loadTexts: eqptMismClear.setDescription('Equipment Mismatch Clear')
eqptFailRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 7)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: eqptFailRaise.setStatus('current')
if mibBuilder.loadTexts: eqptFailRaise.setDescription('Equipment Failed Raise')
eqptFailClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 8)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: eqptFailClear.setStatus('current')
if mibBuilder.loadTexts: eqptFailClear.setDescription('Equipment Failed Clear')
eqptDgrdRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 9)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: eqptDgrdRaise.setStatus('current')
if mibBuilder.loadTexts: eqptDgrdRaise.setDescription('Equipment Degrade Raise')
eqptDgrdClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 10)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: eqptDgrdClear.setStatus('current')
if mibBuilder.loadTexts: eqptDgrdClear.setDescription('Equipment Degrade Clear')
eqptCommRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 11)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: eqptCommRaise.setStatus('current')
if mibBuilder.loadTexts: eqptCommRaise.setDescription('Equipment Comms Raise')
eqptCommClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 12)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: eqptCommClear.setStatus('current')
if mibBuilder.loadTexts: eqptCommClear.setDescription('Equipment Comms Clear')
upgrRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 13)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: upgrRaise.setStatus('current')
if mibBuilder.loadTexts: upgrRaise.setDescription('Upgrade Raise')
upgrClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 14)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: upgrClear.setStatus('current')
if mibBuilder.loadTexts: upgrClear.setDescription('Upgrade Clear')
lpbkRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 15)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lpbkRaise.setStatus('current')
if mibBuilder.loadTexts: lpbkRaise.setDescription('Loopback Operated Raise')
lpbkClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 16)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lpbkClear.setStatus('current')
if mibBuilder.loadTexts: lpbkClear.setDescription('Loopback Operated Clear')
losRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 17)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: losRaise.setStatus('current')
if mibBuilder.loadTexts: losRaise.setDescription('Loss of Signal Raise')
losClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 18)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: losClear.setStatus('current')
if mibBuilder.loadTexts: losClear.setDescription('Loss of Signal Clear')
lofRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 19)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lofRaise.setStatus('current')
if mibBuilder.loadTexts: lofRaise.setDescription('Loss of Frame Raise')
lofClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 20)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lofClear.setStatus('current')
if mibBuilder.loadTexts: lofClear.setDescription('Loss of Frame Clear')
loSyncRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 21)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: loSyncRaise.setStatus('current')
if mibBuilder.loadTexts: loSyncRaise.setDescription('Loss of Synchronization Raise')
loSyncClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 22)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: loSyncClear.setStatus('current')
if mibBuilder.loadTexts: loSyncClear.setDescription('Loss of Synchronization Clear')
lolaRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 23)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lolaRaise.setStatus('current')
if mibBuilder.loadTexts: lolaRaise.setDescription('Loss of Lane Alignment Raise')
lolaClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 24)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lolaClear.setStatus('current')
if mibBuilder.loadTexts: lolaClear.setDescription('Loss of Lane Alignment Clear')
lomRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 25)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lomRaise.setStatus('current')
if mibBuilder.loadTexts: lomRaise.setDescription('Loss of Multiframe Raise')
lomClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 26)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lomClear.setStatus('current')
if mibBuilder.loadTexts: lomClear.setDescription('Loss of Multiframe Clear')
timRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 27)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: timRaise.setStatus('current')
if mibBuilder.loadTexts: timRaise.setDescription('Trace Identifier Mismatch Raise')
timClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 28)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: timClear.setStatus('current')
if mibBuilder.loadTexts: timClear.setDescription('Trace Identifier Mismatch Clear')
sdRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 29)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: sdRaise.setStatus('current')
if mibBuilder.loadTexts: sdRaise.setDescription('Signal Degrade Raise')
sdClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 30)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: sdClear.setStatus('current')
if mibBuilder.loadTexts: sdClear.setDescription('Signal Degrade Clear')
bdiRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 31)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: bdiRaise.setStatus('current')
if mibBuilder.loadTexts: bdiRaise.setDescription('Backward Defect Indication Raise')
bdiClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 32)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: bdiClear.setStatus('current')
if mibBuilder.loadTexts: bdiClear.setDescription('Backward Defect Indication Clear')
pyldMismRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 33)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: pyldMismRaise.setStatus('current')
if mibBuilder.loadTexts: pyldMismRaise.setDescription('Payload Mismatch Raise')
pyldMismClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 34)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: pyldMismClear.setStatus('current')
if mibBuilder.loadTexts: pyldMismClear.setDescription('Payload Mismatch Clear')
odtgMismRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 35)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: odtgMismRaise.setStatus('current')
if mibBuilder.loadTexts: odtgMismRaise.setDescription('ODTG Mismatch Raise')
odtgMismClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 36)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: odtgMismClear.setStatus('current')
if mibBuilder.loadTexts: odtgMismClear.setDescription('ODTG Mismatch Clear')
ais_lRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 37)).setLabel("ais-lRaise").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: ais_lRaise.setStatus('current')
if mibBuilder.loadTexts: ais_lRaise.setDescription('Alarm Indication Signal, Line Raise')
ais_lClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 38)).setLabel("ais-lClear").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: ais_lClear.setStatus('current')
if mibBuilder.loadTexts: ais_lClear.setDescription('Alarm Indication Signal, Line Clear')
ms_aisRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 39)).setLabel("ms-aisRaise").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: ms_aisRaise.setStatus('current')
if mibBuilder.loadTexts: ms_aisRaise.setDescription('Multiplex Section Alarm Indication Signal Raise')
ms_aisClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 40)).setLabel("ms-aisClear").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: ms_aisClear.setStatus('current')
if mibBuilder.loadTexts: ms_aisClear.setDescription('Multiplex Section Alarm Indication Signal Clear')
otu_aisRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 41)).setLabel("otu-aisRaise").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: otu_aisRaise.setStatus('current')
if mibBuilder.loadTexts: otu_aisRaise.setDescription('OTU Alarm Indication Signal Raise')
otu_aisClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 42)).setLabel("otu-aisClear").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: otu_aisClear.setStatus('current')
if mibBuilder.loadTexts: otu_aisClear.setDescription('OTU Alarm Indication Signal Clear')
odu_aisRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 43)).setLabel("odu-aisRaise").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: odu_aisRaise.setStatus('current')
if mibBuilder.loadTexts: odu_aisRaise.setDescription('ODU Alarm Indication Signal Raise')
odu_aisClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 44)).setLabel("odu-aisClear").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: odu_aisClear.setStatus('current')
if mibBuilder.loadTexts: odu_aisClear.setDescription('ODU Alarm Indication Signal Clear')
lckRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 45)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lckRaise.setStatus('current')
if mibBuilder.loadTexts: lckRaise.setDescription('ODU Locked Raise')
lckClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 46)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lckClear.setStatus('current')
if mibBuilder.loadTexts: lckClear.setDescription('ODU Locked Clear')
ociRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 47)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: ociRaise.setStatus('current')
if mibBuilder.loadTexts: ociRaise.setDescription('ODU Open Connection Indication Raise')
ociClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 48)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: ociClear.setStatus('current')
if mibBuilder.loadTexts: ociClear.setDescription('ODU Open Connection Indication Clear')
highBerRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 49)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: highBerRaise.setStatus('current')
if mibBuilder.loadTexts: highBerRaise.setDescription('High Bite Error Ratio Raise')
highBerClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 50)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: highBerClear.setStatus('current')
if mibBuilder.loadTexts: highBerClear.setDescription('High Bit Error Ratio Clear')
lfRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 51)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lfRaise.setStatus('current')
if mibBuilder.loadTexts: lfRaise.setDescription('Local Fault Raise')
lfClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 52)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lfClear.setStatus('current')
if mibBuilder.loadTexts: lfClear.setDescription('Local Fault Clear')
rfRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 53)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: rfRaise.setStatus('current')
if mibBuilder.loadTexts: rfRaise.setDescription('Remote Fault Raise')
rfClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 54)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: rfClear.setStatus('current')
if mibBuilder.loadTexts: rfClear.setDescription('Remote Fault Clear')
rdi_lRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 55)).setLabel("rdi-lRaise").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: rdi_lRaise.setStatus('current')
if mibBuilder.loadTexts: rdi_lRaise.setDescription('Remote Defect Indication, Line Raise')
rdi_lClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 56)).setLabel("rdi-lClear").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: rdi_lClear.setStatus('current')
if mibBuilder.loadTexts: rdi_lClear.setDescription('Remote Defect Indication, Line Clear')
ms_rdiRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 57)).setLabel("ms-rdiRaise").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: ms_rdiRaise.setStatus('current')
if mibBuilder.loadTexts: ms_rdiRaise.setDescription('Multiplex Section Remote Defect Indication Raise')
ms_rdiClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 58)).setLabel("ms-rdiClear").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: ms_rdiClear.setStatus('current')
if mibBuilder.loadTexts: ms_rdiClear.setDescription('Multiplex Section Remote Defect Indication Clear')
oprHighThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 59)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: oprHighThRaise.setStatus('current')
if mibBuilder.loadTexts: oprHighThRaise.setDescription('Optical Power Rx High Threshold Raise')
oprHighThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 60)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: oprHighThClear.setStatus('current')
if mibBuilder.loadTexts: oprHighThClear.setDescription('Optical Power Rx High Threshold Clear')
oprLowThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 61)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: oprLowThRaise.setStatus('current')
if mibBuilder.loadTexts: oprLowThRaise.setDescription('Optical Power Rx Low Threshold Raise')
oprLowThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 62)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: oprLowThClear.setStatus('current')
if mibBuilder.loadTexts: oprLowThClear.setDescription('Optical Power Rx Low Threshold Clear')
optHighThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 63)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: optHighThRaise.setStatus('current')
if mibBuilder.loadTexts: optHighThRaise.setDescription('Optical Power Tx High Threshold Raise')
optHighThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 64)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: optHighThClear.setStatus('current')
if mibBuilder.loadTexts: optHighThClear.setDescription('Optical Power Tx High Threshold Clear')
optLowThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 65)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: optLowThRaise.setStatus('current')
if mibBuilder.loadTexts: optLowThRaise.setDescription('Optical Power Tx Low Threshold Raise')
optLowThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 66)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: optLowThClear.setStatus('current')
if mibBuilder.loadTexts: optLowThClear.setDescription('Optical Power Tx Low Threshold Clear')
laserTempHighThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 67)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: laserTempHighThRaise.setStatus('current')
if mibBuilder.loadTexts: laserTempHighThRaise.setDescription('Tx Laser Above High Temperature Threshold Raise')
laserTempHighThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 68)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: laserTempHighThClear.setStatus('current')
if mibBuilder.loadTexts: laserTempHighThClear.setDescription('Tx Laser Above High Temperature Threshold Clear')
laserTempLowThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 69)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: laserTempLowThRaise.setStatus('current')
if mibBuilder.loadTexts: laserTempLowThRaise.setDescription('Tx Laser Below Low Temperature Threshold Raise')
laserTempLowThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 70)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: laserTempLowThClear.setStatus('current')
if mibBuilder.loadTexts: laserTempLowThClear.setDescription('Tx Laser Below Low Temperature Threshold Clear')
laserFailRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 71)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: laserFailRaise.setStatus('current')
if mibBuilder.loadTexts: laserFailRaise.setDescription('Tx Laser Fail Raise')
laserFailClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 72)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: laserFailClear.setStatus('current')
if mibBuilder.loadTexts: laserFailClear.setDescription('Tx Laser Fail Clear')
cfgUnsuppRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 73)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: cfgUnsuppRaise.setStatus('current')
if mibBuilder.loadTexts: cfgUnsuppRaise.setDescription('Configuration Unsupported Raise')
cfgUnsuppClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 74)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: cfgUnsuppClear.setStatus('current')
if mibBuilder.loadTexts: cfgUnsuppClear.setDescription('Configuration Unsupported Clear')
cfgFailRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 75)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: cfgFailRaise.setStatus('current')
if mibBuilder.loadTexts: cfgFailRaise.setDescription('Configuration Failure Raise')
cfgFailClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 76)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: cfgFailClear.setStatus('current')
if mibBuilder.loadTexts: cfgFailClear.setDescription('Configuration Failure Clear')
lolightRxRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 77)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lolightRxRaise.setStatus('current')
if mibBuilder.loadTexts: lolightRxRaise.setDescription('Loss of light, receive Raise')
lolightRxClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 78)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lolightRxClear.setStatus('current')
if mibBuilder.loadTexts: lolightRxClear.setDescription('Loss of light, receive Clear')
lolightTxRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 79)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lolightTxRaise.setStatus('current')
if mibBuilder.loadTexts: lolightTxRaise.setDescription('Loss of light, transmit Raise')
lolightTxClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 80)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lolightTxClear.setStatus('current')
if mibBuilder.loadTexts: lolightTxClear.setDescription('Loss of light, transmit Clear')
feimRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 81)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: feimRaise.setStatus('current')
if mibBuilder.loadTexts: feimRaise.setDescription('Far-end node identification mismatch Raise')
feimClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 82)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: feimClear.setStatus('current')
if mibBuilder.loadTexts: feimClear.setDescription('Far-end node identification mismatch Clear')
feciRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 83)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: feciRaise.setStatus('current')
if mibBuilder.loadTexts: feciRaise.setDescription('Far-end node configuration mismatch Raise')
feciClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 84)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: feciClear.setStatus('current')
if mibBuilder.loadTexts: feciClear.setDescription('Far-end node configuration mismatch Clear')
contComSRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 85)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: contComSRaise.setStatus('current')
if mibBuilder.loadTexts: contComSRaise.setDescription('Control comms failure, span section Raise')
contComSClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 86)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: contComSClear.setStatus('current')
if mibBuilder.loadTexts: contComSClear.setDescription('Control comms failure, span section Clear')
contComERaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 87)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: contComERaise.setStatus('current')
if mibBuilder.loadTexts: contComERaise.setDescription('Control comms failure, eqlz. section Raise')
contComEClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 88)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: contComEClear.setStatus('current')
if mibBuilder.loadTexts: contComEClear.setDescription('Control comms failure, eqlz. section Clear')
loSpecRxRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 89)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: loSpecRxRaise.setStatus('current')
if mibBuilder.loadTexts: loSpecRxRaise.setDescription('Loss out of specification, receive Raise')
loSpecRxClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 90)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: loSpecRxClear.setStatus('current')
if mibBuilder.loadTexts: loSpecRxClear.setDescription('Loss out of specification, receive Clear')
tLossRxHtRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 91)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: tLossRxHtRaise.setStatus('current')
if mibBuilder.loadTexts: tLossRxHtRaise.setDescription('Loss high threshold exceeded, receive Raise')
tLossRxHtClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 92)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: tLossRxHtClear.setStatus('current')
if mibBuilder.loadTexts: tLossRxHtClear.setDescription('Loss high threshold exceeded, receive Clear')
iaocpRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 93)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: iaocpRaise.setStatus('current')
if mibBuilder.loadTexts: iaocpRaise.setDescription('Invalid pre-amplifier operating cfg Raise')
iaocpClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 94)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: iaocpClear.setStatus('current')
if mibBuilder.loadTexts: iaocpClear.setDescription('Invalid pre-amplifier operating cfg Clear')
iaocmRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 95)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: iaocmRaise.setStatus('current')
if mibBuilder.loadTexts: iaocmRaise.setDescription('Invalid mid-amplifier operating cfg Raise')
iaocmClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 96)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: iaocmClear.setStatus('current')
if mibBuilder.loadTexts: iaocmClear.setDescription('Invalid mid-amplifier operating cfg Clear')
iaocbRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 97)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: iaocbRaise.setStatus('current')
if mibBuilder.loadTexts: iaocbRaise.setDescription('Invalid boost-amp. operating cfg Raise')
iaocbClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 98)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: iaocbClear.setStatus('current')
if mibBuilder.loadTexts: iaocbClear.setDescription('Invalid boost-amp. operating cfg Clear')
apsdRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 99)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: apsdRaise.setStatus('current')
if mibBuilder.loadTexts: apsdRaise.setDescription('Automatic power shutdown Raise')
apsdClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 100)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: apsdClear.setStatus('current')
if mibBuilder.loadTexts: apsdClear.setDescription('Automatic power shutdown Clear')
pmiRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 101)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: pmiRaise.setStatus('current')
if mibBuilder.loadTexts: pmiRaise.setDescription('Payload missing indication Raise')
pmiClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 102)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: pmiClear.setStatus('current')
if mibBuilder.loadTexts: pmiClear.setDescription('Payload missing indication Clear')
uneqORaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 103)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: uneqORaise.setStatus('current')
if mibBuilder.loadTexts: uneqORaise.setDescription('Optical channel unequipped Raise')
uneqOClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 104)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: uneqOClear.setStatus('current')
if mibBuilder.loadTexts: uneqOClear.setDescription('Optical channel unequipped Clear')
aisORaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 105)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: aisORaise.setStatus('current')
if mibBuilder.loadTexts: aisORaise.setDescription('Alarm indication signal, optical Raise')
aisOClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 106)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: aisOClear.setStatus('current')
if mibBuilder.loadTexts: aisOClear.setDescription('Alarm indication signal, optical Clear')
posRxRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 107)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: posRxRaise.setStatus('current')
if mibBuilder.loadTexts: posRxRaise.setDescription('Power out of specification, receive Raise')
posRxClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 108)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: posRxClear.setStatus('current')
if mibBuilder.loadTexts: posRxClear.setDescription('Power out of specification, receive Clear')
posTxRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 109)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: posTxRaise.setStatus('current')
if mibBuilder.loadTexts: posTxRaise.setDescription('Power out of specification, transmit Raise')
posTxClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 110)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: posTxClear.setStatus('current')
if mibBuilder.loadTexts: posTxClear.setDescription('Power out of specification, transmit Clear')
obrosRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 111)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: obrosRaise.setStatus('current')
if mibBuilder.loadTexts: obrosRaise.setDescription('Optical back reflection out of spec Raise')
obrosClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 112)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: obrosClear.setStatus('current')
if mibBuilder.loadTexts: obrosClear.setDescription('Optical back reflection out of spec Clear')
chnDfcRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 113)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: chnDfcRaise.setStatus('current')
if mibBuilder.loadTexts: chnDfcRaise.setDescription('Channel count deficiency Raise')
chnDfcClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 114)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: chnDfcClear.setStatus('current')
if mibBuilder.loadTexts: chnDfcClear.setDescription('Channel count deficiency Clear')
replUnitDegradeRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 115)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: replUnitDegradeRaise.setStatus('current')
if mibBuilder.loadTexts: replUnitDegradeRaise.setDescription('Replaceable unit degrade Raise')
replUnitDegradeClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 116)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: replUnitDegradeClear.setStatus('current')
if mibBuilder.loadTexts: replUnitDegradeClear.setDescription('Replaceable unit degrade Clear')
cnxMeaRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 117)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: cnxMeaRaise.setStatus('current')
if mibBuilder.loadTexts: cnxMeaRaise.setDescription('Connection Mismatch Raise')
cnxMeaClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 118)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: cnxMeaClear.setStatus('current')
if mibBuilder.loadTexts: cnxMeaClear.setDescription('Connection Mismatch Clear')
cnxVldTmoutRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 119)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: cnxVldTmoutRaise.setStatus('current')
if mibBuilder.loadTexts: cnxVldTmoutRaise.setDescription('Connection Validation Timeout Raise')
cnxVldTmoutClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 120)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: cnxVldTmoutClear.setStatus('current')
if mibBuilder.loadTexts: cnxVldTmoutClear.setDescription('Connection Validation Timeout Clear')
posRxHighRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 121)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: posRxHighRaise.setStatus('current')
if mibBuilder.loadTexts: posRxHighRaise.setDescription('Receive power out of spec, High Raise')
posRxHighClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 122)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: posRxHighClear.setStatus('current')
if mibBuilder.loadTexts: posRxHighClear.setDescription('Receive power out of spec, High Clear')
posRxLowRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 123)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: posRxLowRaise.setStatus('current')
if mibBuilder.loadTexts: posRxLowRaise.setDescription('Receive power out of spec, Low Raise')
posRxLowClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 124)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: posRxLowClear.setStatus('current')
if mibBuilder.loadTexts: posRxLowClear.setDescription('Receive power out of spec, Low Clear')
oprHighFailRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 125)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: oprHighFailRaise.setStatus('current')
if mibBuilder.loadTexts: oprHighFailRaise.setDescription('Optical Power Received High Fail Raise')
oprHighFailClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 126)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: oprHighFailClear.setStatus('current')
if mibBuilder.loadTexts: oprHighFailClear.setDescription('Optical Power Received High Fail Clear')
obrHtRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 127)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: obrHtRaise.setStatus('current')
if mibBuilder.loadTexts: obrHtRaise.setDescription('Optical back reflection high threshold exceeded Raise')
obrHtClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 128)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: obrHtClear.setStatus('current')
if mibBuilder.loadTexts: obrHtClear.setDescription('Optical back reflection high threshold exceeded Clear')
aprRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 129)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: aprRaise.setStatus('current')
if mibBuilder.loadTexts: aprRaise.setDescription('Automatic Power Reduction Raise')
aprClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 130)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: aprClear.setStatus('current')
if mibBuilder.loadTexts: aprClear.setDescription('Automatic Power Reduction Clear')
modTempHighThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 131)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: modTempHighThRaise.setStatus('current')
if mibBuilder.loadTexts: modTempHighThRaise.setDescription('Transceiver Module Above High Temperature Threshold Raise')
modTempHighThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 132)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: modTempHighThClear.setStatus('current')
if mibBuilder.loadTexts: modTempHighThClear.setDescription('Transceiver Module Above High Temperature Threshold Clear')
modTempLowThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 133)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: modTempLowThRaise.setStatus('current')
if mibBuilder.loadTexts: modTempLowThRaise.setDescription('Transceiver Module Below Low Temperature Threshold Raise')
modTempLowThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 134)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: modTempLowThClear.setStatus('current')
if mibBuilder.loadTexts: modTempLowThClear.setDescription('Transceiver Module Below Low Temperature Threshold Clear')
modTempShutdownRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 135)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: modTempShutdownRaise.setStatus('current')
if mibBuilder.loadTexts: modTempShutdownRaise.setDescription('Transceiver Module Temperature Shutdown Raise')
modTempShutdownClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 136)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: modTempShutdownClear.setStatus('current')
if mibBuilder.loadTexts: modTempShutdownClear.setDescription('Transceiver Module Temperature Shutdown Clear')
envTempHighThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 137)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: envTempHighThRaise.setStatus('current')
if mibBuilder.loadTexts: envTempHighThRaise.setDescription('Environment Above High Temperature Threshold Raise')
envTempHighThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 138)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: envTempHighThClear.setStatus('current')
if mibBuilder.loadTexts: envTempHighThClear.setDescription('Environment Above High Temperature Threshold Clear')
envTempLowThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 139)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: envTempLowThRaise.setStatus('current')
if mibBuilder.loadTexts: envTempLowThRaise.setDescription('Environment Below Low Temperature Threshold Raise')
envTempLowThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 140)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: envTempLowThClear.setStatus('current')
if mibBuilder.loadTexts: envTempLowThClear.setDescription('Environment Below Low Temperature Threshold Clear')
envTempFailRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 141)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: envTempFailRaise.setStatus('current')
if mibBuilder.loadTexts: envTempFailRaise.setDescription('Environment temperature failure Raise')
envTempFailClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 142)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: envTempFailClear.setStatus('current')
if mibBuilder.loadTexts: envTempFailClear.setDescription('Environment temperature failure Clear')
envVoltHighThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 143)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: envVoltHighThRaise.setStatus('current')
if mibBuilder.loadTexts: envVoltHighThRaise.setDescription('Environment Above High Voltage Threshold Raise')
envVoltHighThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 144)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: envVoltHighThClear.setStatus('current')
if mibBuilder.loadTexts: envVoltHighThClear.setDescription('Environment Above High Voltage Threshold Clear')
envVoltLowThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 145)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: envVoltLowThRaise.setStatus('current')
if mibBuilder.loadTexts: envVoltLowThRaise.setDescription('Environment Below Low Voltage Threshold Raise')
envVoltLowThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 146)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: envVoltLowThClear.setStatus('current')
if mibBuilder.loadTexts: envVoltLowThClear.setDescription('Environment Below Low Voltage Threshold Clear')
envVoltFailRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 147)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: envVoltFailRaise.setStatus('current')
if mibBuilder.loadTexts: envVoltFailRaise.setDescription('Environment voltage failure Raise')
envVoltFailClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 148)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: envVoltFailClear.setStatus('current')
if mibBuilder.loadTexts: envVoltFailClear.setDescription('Environment voltage failure Clear')
scmNmiDownRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 149)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: scmNmiDownRaise.setStatus('current')
if mibBuilder.loadTexts: scmNmiDownRaise.setDescription('SCM Network Management Interface down Raise')
scmNmiDownClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 150)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: scmNmiDownClear.setStatus('current')
if mibBuilder.loadTexts: scmNmiDownClear.setDescription('SCM Network Management Interface down Clear')
scmNoNmConnRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 151)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: scmNoNmConnRaise.setStatus('current')
if mibBuilder.loadTexts: scmNoNmConnRaise.setDescription('No Network Management Connectivity on both SCMs Raise')
scmNoNmConnClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 152)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: scmNoNmConnClear.setStatus('current')
if mibBuilder.loadTexts: scmNoNmConnClear.setDescription('No Network Management Connectivity on both SCMs Clear')
eqptLatchOpenRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 153)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: eqptLatchOpenRaise.setStatus('current')
if mibBuilder.loadTexts: eqptLatchOpenRaise.setDescription('Equipment Latch Open Raise')
eqptLatchOpenClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 154)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: eqptLatchOpenClear.setStatus('current')
if mibBuilder.loadTexts: eqptLatchOpenClear.setDescription('Equipment Latch Open Clear')
powerAbsentRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 155)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: powerAbsentRaise.setStatus('current')
if mibBuilder.loadTexts: powerAbsentRaise.setDescription('No Power available Raise')
powerAbsentClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 156)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: powerAbsentClear.setStatus('current')
if mibBuilder.loadTexts: powerAbsentClear.setDescription('No Power available Clear')
fanSpeedLowThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 157)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: fanSpeedLowThRaise.setStatus('current')
if mibBuilder.loadTexts: fanSpeedLowThRaise.setDescription('Fan speed below low threshold Raise')
fanSpeedLowThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 158)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: fanSpeedLowThClear.setStatus('current')
if mibBuilder.loadTexts: fanSpeedLowThClear.setDescription('Fan speed below low threshold Clear')
nonCoLocatedControllerRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 159)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: nonCoLocatedControllerRaise.setStatus('current')
if mibBuilder.loadTexts: nonCoLocatedControllerRaise.setDescription('Controllers are in different chassis Raise')
nonCoLocatedControllerClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 160)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: nonCoLocatedControllerClear.setStatus('current')
if mibBuilder.loadTexts: nonCoLocatedControllerClear.setDescription('Controllers are in different chassis Clear')
preFecBerThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 161)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: preFecBerThRaise.setStatus('current')
if mibBuilder.loadTexts: preFecBerThRaise.setDescription('Pre-FEC Bit Error Ratio Above High Threshold Raise')
preFecBerThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 162)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: preFecBerThClear.setStatus('current')
if mibBuilder.loadTexts: preFecBerThClear.setDescription('Pre-FEC Bit Error Ratio Above High Threshold Clear')
firmUpgrdReqdRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 163)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: firmUpgrdReqdRaise.setStatus('current')
if mibBuilder.loadTexts: firmUpgrdReqdRaise.setDescription('Firmware Upgrade Required Raise')
firmUpgrdReqdClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 164)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: firmUpgrdReqdClear.setStatus('current')
if mibBuilder.loadTexts: firmUpgrdReqdClear.setDescription('Firmware Upgrade Required Clear')
otuBerThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 165)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: otuBerThRaise.setStatus('current')
if mibBuilder.loadTexts: otuBerThRaise.setDescription('OTU Bit Error Ratio Above High Threshold Raise')
otuBerThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 166)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: otuBerThClear.setStatus('current')
if mibBuilder.loadTexts: otuBerThClear.setDescription('OTU Bit Error Ratio Above High Threshold Clear')
oduBerThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 167)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: oduBerThRaise.setStatus('current')
if mibBuilder.loadTexts: oduBerThRaise.setDescription('ODU Bit Error Ratio Above High Threshold Raise')
oduBerThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 168)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: oduBerThClear.setStatus('current')
if mibBuilder.loadTexts: oduBerThClear.setDescription('ODU Bit Error Ratio Above High Threshold Clear')
pcsBerThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 169)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: pcsBerThRaise.setStatus('current')
if mibBuilder.loadTexts: pcsBerThRaise.setDescription('PCS Bit Error Ratio Above High Threshold Raise')
pcsBerThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 170)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: pcsBerThClear.setStatus('current')
if mibBuilder.loadTexts: pcsBerThClear.setDescription('PCS Bit Error Ratio Above High Threshold Clear')
berTh_sRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 171)).setLabel("berTh-sRaise").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: berTh_sRaise.setStatus('current')
if mibBuilder.loadTexts: berTh_sRaise.setDescription('Section Level Bit Error Ratio Above High Threshold Raise')
berTh_sClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 172)).setLabel("berTh-sClear").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: berTh_sClear.setStatus('current')
if mibBuilder.loadTexts: berTh_sClear.setDescription('Section Level Bit Error Ratio Above High Threshold Clear')
berTh_lRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 173)).setLabel("berTh-lRaise").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: berTh_lRaise.setStatus('current')
if mibBuilder.loadTexts: berTh_lRaise.setDescription('Line Level Bit Error Ratio Above High Threshold Raise')
berTh_lClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 174)).setLabel("berTh-lClear").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: berTh_lClear.setStatus('current')
if mibBuilder.loadTexts: berTh_lClear.setDescription('Line Level Bit Error Ratio Above High Threshold Clear')
rs_berThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 175)).setLabel("rs-berThRaise").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: rs_berThRaise.setStatus('current')
if mibBuilder.loadTexts: rs_berThRaise.setDescription('Regenerator Section Bit Error Ratio Above High Threshold Raise')
rs_berThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 176)).setLabel("rs-berThClear").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: rs_berThClear.setStatus('current')
if mibBuilder.loadTexts: rs_berThClear.setDescription('Regenerator Section Bit Error Ratio Above High Threshold Clear')
ms_berThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 177)).setLabel("ms-berThRaise").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: ms_berThRaise.setStatus('current')
if mibBuilder.loadTexts: ms_berThRaise.setDescription('Multiplex Section Bit Error Ratio Above High Threshold Raise')
ms_berThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 178)).setLabel("ms-berThClear").setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: ms_berThClear.setStatus('current')
if mibBuilder.loadTexts: ms_berThClear.setDescription('Multiplex Section Bit Error Ratio Above High Threshold Clear')
oneCableDisconnectedRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 179)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: oneCableDisconnectedRaise.setStatus('current')
if mibBuilder.loadTexts: oneCableDisconnectedRaise.setDescription('One Multichassis Cable Disconnected Raise')
oneCableDisconnectedClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 180)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: oneCableDisconnectedClear.setStatus('current')
if mibBuilder.loadTexts: oneCableDisconnectedClear.setDescription('One Multichassis Cable Disconnected Clear')
envCurrentHighThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 181)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: envCurrentHighThRaise.setStatus('current')
if mibBuilder.loadTexts: envCurrentHighThRaise.setDescription('High Current Threshold Required Raise')
envCurrentHighThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 182)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: envCurrentHighThClear.setStatus('current')
if mibBuilder.loadTexts: envCurrentHighThClear.setDescription('High Current Threshold Requires Clear')
envCurrentLowThRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 183)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: envCurrentLowThRaise.setStatus('current')
if mibBuilder.loadTexts: envCurrentLowThRaise.setDescription('Low Current Threshold Required Raise')
envCurrentLowThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 184)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: envCurrentLowThClear.setStatus('current')
if mibBuilder.loadTexts: envCurrentLowThClear.setDescription('Low Current Threshold Requires Clear')
prbsRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 185)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: prbsRaise.setStatus('current')
if mibBuilder.loadTexts: prbsRaise.setDescription('PRBS test active')
prbsClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 186)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: prbsClear.setStatus('current')
if mibBuilder.loadTexts: prbsClear.setDescription('PRBS test active cleared')
forcedRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 187)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: forcedRaise.setStatus('current')
if mibBuilder.loadTexts: forcedRaise.setDescription('Forced protection switch Raise')
forcedClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 188)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: forcedClear.setStatus('current')
if mibBuilder.loadTexts: forcedClear.setDescription('Forced protection switch Clear')
defRDICCMRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 189)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: defRDICCMRaise.setStatus('current')
if mibBuilder.loadTexts: defRDICCMRaise.setDescription('Receiving RDI from remote MEP Raise')
defRDICCMClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 190)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: defRDICCMClear.setStatus('current')
if mibBuilder.loadTexts: defRDICCMClear.setDescription('Receiving RDI from remote MEP Clear')
defMACStatusRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 191)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: defMACStatusRaise.setStatus('current')
if mibBuilder.loadTexts: defMACStatusRaise.setDescription('Port status failure of remote MEP Raise')
defMACStatusClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 192)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: defMACStatusClear.setStatus('current')
if mibBuilder.loadTexts: defMACStatusClear.setDescription('Port status failure of remote MEP Clear')
defRemoteCCMRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 193)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: defRemoteCCMRaise.setStatus('current')
if mibBuilder.loadTexts: defRemoteCCMRaise.setDescription('Lost connection with remote MEP Raise')
defRemoteCCMClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 194)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: defRemoteCCMClear.setStatus('current')
if mibBuilder.loadTexts: defRemoteCCMClear.setDescription('Lost connection with remote MEP Clear')
defErrorCCMRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 195)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: defErrorCCMRaise.setStatus('current')
if mibBuilder.loadTexts: defErrorCCMRaise.setDescription('Receiving invalid CCM packet from remote MEP Raise')
defErrorCCMClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 196)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: defErrorCCMClear.setStatus('current')
if mibBuilder.loadTexts: defErrorCCMClear.setDescription('Receiving invalid CCM packet from remote MEP Clear')
defXconCCMRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 197)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: defXconCCMRaise.setStatus('current')
if mibBuilder.loadTexts: defXconCCMRaise.setDescription('Receiving cross connect CCMs Raise')
defXconCCMClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 198)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: defXconCCMClear.setStatus('current')
if mibBuilder.loadTexts: defXconCCMClear.setDescription('Receiving cross connect CCMs Clear')
defBfdDownRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 199)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: defBfdDownRaise.setStatus('current')
if mibBuilder.loadTexts: defBfdDownRaise.setDescription('BFD session down Raise')
defBfdDownClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 200)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: defBfdDownClear.setStatus('current')
if mibBuilder.loadTexts: defBfdDownClear.setDescription('BFD session down Clear')
isisDbOvrldRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 201)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: isisDbOvrldRaise.setStatus('current')
if mibBuilder.loadTexts: isisDbOvrldRaise.setDescription('ISIS Database Overloaded Raise')
isisDbOvrldClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 202)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: isisDbOvrldClear.setStatus('current')
if mibBuilder.loadTexts: isisDbOvrldClear.setDescription('ISIS Database Overloaded Clear')
isisXDownRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 203)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: isisXDownRaise.setStatus('current')
if mibBuilder.loadTexts: isisXDownRaise.setDescription('ISIS Circuit Down Raise')
isisXDownClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 204)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: isisXDownClear.setStatus('current')
if mibBuilder.loadTexts: isisXDownClear.setDescription('ISIS Circuit Down Clear')
isisAdjDownRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 205)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: isisAdjDownRaise.setStatus('current')
if mibBuilder.loadTexts: isisAdjDownRaise.setDescription('ISIS Adjacency Down Raise')
isisAdjDownClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 206)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: isisAdjDownClear.setStatus('current')
if mibBuilder.loadTexts: isisAdjDownClear.setDescription('ISIS Adjacency Down Clear')
isisAdjRejectedRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 207)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: isisAdjRejectedRaise.setStatus('current')
if mibBuilder.loadTexts: isisAdjRejectedRaise.setDescription('ISIS Adjacency Rejected Raise')
isisAdjRejectedClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 208)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: isisAdjRejectedClear.setStatus('current')
if mibBuilder.loadTexts: isisAdjRejectedClear.setDescription('ISIS Adjacency Rejected Clear')
rsvpAdjDownRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 209)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: rsvpAdjDownRaise.setStatus('current')
if mibBuilder.loadTexts: rsvpAdjDownRaise.setDescription('RSVP Adjacency Down Raise')
rsvpAdjDownClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 210)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: rsvpAdjDownClear.setStatus('current')
if mibBuilder.loadTexts: rsvpAdjDownClear.setDescription('RSVP Adjacency Down Clear')
diskHighUsageRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 211)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: diskHighUsageRaise.setStatus('current')
if mibBuilder.loadTexts: diskHighUsageRaise.setDescription('Disk High Usage Raise')
diskHighUsageClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 212)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: diskHighUsageClear.setStatus('current')
if mibBuilder.loadTexts: diskHighUsageClear.setDescription('Disk High Usage Clear')
memHighUsageRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 213)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: memHighUsageRaise.setStatus('current')
if mibBuilder.loadTexts: memHighUsageRaise.setDescription('Memory High Usage Raise')
memHighUsageClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 214)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: memHighUsageClear.setStatus('current')
if mibBuilder.loadTexts: memHighUsageClear.setDescription('Memory High Usage Clear')
lockoutRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 215)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lockoutRaise.setStatus('current')
if mibBuilder.loadTexts: lockoutRaise.setDescription('Lockout protection switch Raise')
lockoutClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 216)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lockoutClear.setStatus('current')
if mibBuilder.loadTexts: lockoutClear.setDescription('Lockout protection switch Clear')
invUnknownRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 217)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: invUnknownRaise.setStatus('current')
if mibBuilder.loadTexts: invUnknownRaise.setDescription('Inventory Unknown raise')
invUnknownClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 218)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: invUnknownClear.setStatus('current')
if mibBuilder.loadTexts: invUnknownClear.setDescription('Inventory Unknown clear')
airfilterAbsenseRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 219)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: airfilterAbsenseRaise.setStatus('current')
if mibBuilder.loadTexts: airfilterAbsenseRaise.setDescription('AirFilter Absense Raise')
airfilterAbsenseClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 220)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: airfilterAbsenseClear.setStatus('current')
if mibBuilder.loadTexts: airfilterAbsenseClear.setDescription('AirFilter Absense Clear')
firmUpgrdFailRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 221)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: firmUpgrdFailRaise.setStatus('current')
if mibBuilder.loadTexts: firmUpgrdFailRaise.setDescription('Shelf manager firmware upgrade failed Raise')
firmUpgrdFailClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 222)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: firmUpgrdFailClear.setStatus('current')
if mibBuilder.loadTexts: firmUpgrdFailClear.setDescription('Shelf manager firmware upgrade failed Clear')
partitionFaultRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 223)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: partitionFaultRaise.setStatus('current')
if mibBuilder.loadTexts: partitionFaultRaise.setDescription('Disk partition fault detected Raise')
partitionFaultClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 224)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: partitionFaultClear.setStatus('current')
if mibBuilder.loadTexts: partitionFaultClear.setDescription('Disk partition fault detected Clear')
lolckRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 225)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lolckRaise.setStatus('current')
if mibBuilder.loadTexts: lolckRaise.setDescription('Loss of Lock Raise')
lolckClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 226)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: lolckClear.setStatus('current')
if mibBuilder.loadTexts: lolckClear.setDescription('Loss of Lock Clear')
inventoryUnsuppRaise = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 227)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: inventoryUnsuppRaise.setStatus('current')
if mibBuilder.loadTexts: inventoryUnsuppRaise.setDescription('Inventory Item Unsupported Raise')
inventoryUnsuppClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 9, 2, 1, 2, 1, 228)).setObjects(("BTI7800-NOTIFICATIONS-MIB", "entityName"), ("BTI7800-NOTIFICATIONS-MIB", "code"), ("BTI7800-NOTIFICATIONS-MIB", "reportType"), ("BTI7800-NOTIFICATIONS-MIB", "timeStamp"), ("BTI7800-NOTIFICATIONS-MIB", "severity"), ("BTI7800-NOTIFICATIONS-MIB", "serviceAffecting"), ("BTI7800-NOTIFICATIONS-MIB", "description"))
if mibBuilder.loadTexts: inventoryUnsuppClear.setStatus('current')
if mibBuilder.loadTexts: inventoryUnsuppClear.setDescription('Inventory Item Unsupported Clear')
mibBuilder.exportSymbols("BTI7800-NOTIFICATIONS-MIB", iaocpRaise=iaocpRaise, posTxClear=posTxClear, ConditionCode=ConditionCode, envTempHighThClear=envTempHighThClear, ms_aisRaise=ms_aisRaise, ms_berThRaise=ms_berThRaise, defRemoteCCMRaise=defRemoteCCMRaise, defXconCCMRaise=defXconCCMRaise, berTh_lClear=berTh_lClear, rdi_lRaise=rdi_lRaise, envCurrentHighThRaise=envCurrentHighThRaise, modTempLowThClear=modTempLowThClear, berTh_sRaise=berTh_sRaise, eqptCommClear=eqptCommClear, prbsRaise=prbsRaise, posTxRaise=posTxRaise, traps=traps, isisXDownClear=isisXDownClear, pmiClear=pmiClear, tLossRxHtClear=tLossRxHtClear, lolckClear=lolckClear, lfClear=lfClear, preFecBerThClear=preFecBerThClear, lomRaise=lomRaise, rfClear=rfClear, feciClear=feciClear, scmNoNmConnRaise=scmNoNmConnRaise, nonCoLocatedControllerRaise=nonCoLocatedControllerRaise, prbsClear=prbsClear, feimClear=feimClear, eqptLatchOpenClear=eqptLatchOpenClear, loSyncClear=loSyncClear, preFecBerThRaise=preFecBerThRaise, obrosClear=obrosClear, otuBerThClear=otuBerThClear, berTh_lRaise=berTh_lRaise, lofClear=lofClear, obrHtRaise=obrHtRaise, highBerRaise=highBerRaise, modTempHighThClear=modTempHighThClear, entityName=entityName, oduBerThRaise=oduBerThRaise, lpbkClear=lpbkClear, pcsBerThClear=pcsBerThClear, lfRaise=lfRaise, lpbkRaise=lpbkRaise, nonCoLocatedControllerClear=nonCoLocatedControllerClear, bTI7800_NOTIFICATIONS_MIB=bTI7800_NOTIFICATIONS_MIB, lckRaise=lckRaise, iaocbClear=iaocbClear, contComSRaise=contComSRaise, apsdRaise=apsdRaise, obrHtClear=obrHtClear, envCurrentLowThRaise=envCurrentLowThRaise, eqptFailRaise=eqptFailRaise, envTempFailClear=envTempFailClear, modTempLowThRaise=modTempLowThRaise, envVoltFailRaise=envVoltFailRaise, aprRaise=aprRaise, lolightTxClear=lolightTxClear, severity=severity, defRemoteCCMClear=defRemoteCCMClear, eqptMissClear=eqptMissClear, powerAbsentRaise=powerAbsentRaise, lckClear=lckClear, defErrorCCMRaise=defErrorCCMRaise, loSyncRaise=loSyncRaise, eqptUnknRaise=eqptUnknRaise, chnDfcClear=chnDfcClear, cnxMeaClear=cnxMeaClear, airfilterAbsenseClear=airfilterAbsenseClear, scmNoNmConnClear=scmNoNmConnClear, aisORaise=aisORaise, notifications=notifications, pyldMismRaise=pyldMismRaise, lolightRxClear=lolightRxClear, optHighThRaise=optHighThRaise, posRxRaise=posRxRaise, ociClear=ociClear, losClear=losClear, upgrRaise=upgrRaise, laserTempLowThClear=laserTempLowThClear, pmiRaise=pmiRaise, scmNmiDownClear=scmNmiDownClear, defXconCCMClear=defXconCCMClear, reportType=reportType, diskHighUsageClear=diskHighUsageClear, otu_aisRaise=otu_aisRaise, ms_rdiRaise=ms_rdiRaise, tLossRxHtRaise=tLossRxHtRaise, uneqORaise=uneqORaise, oneCableDisconnectedClear=oneCableDisconnectedClear, obrosRaise=obrosRaise, description=description, envVoltLowThRaise=envVoltLowThRaise, defBfdDownRaise=defBfdDownRaise, isisAdjDownRaise=isisAdjDownRaise, firmUpgrdFailRaise=firmUpgrdFailRaise, partitionFaultClear=partitionFaultClear, optHighThClear=optHighThClear, oneCableDisconnectedRaise=oneCableDisconnectedRaise, sdClear=sdClear, rsvpAdjDownClear=rsvpAdjDownClear, cfgFailRaise=cfgFailRaise, chnDfcRaise=chnDfcRaise, contComEClear=contComEClear, odtgMismClear=odtgMismClear, otu_aisClear=otu_aisClear, eqptCommRaise=eqptCommRaise, laserTempHighThRaise=laserTempHighThRaise, defRDICCMRaise=defRDICCMRaise, optLowThClear=optLowThClear, notificationObjects=notificationObjects, isisXDownRaise=isisXDownRaise, posRxHighRaise=posRxHighRaise, invUnknownClear=invUnknownClear, invUnknownRaise=invUnknownRaise, posRxClear=posRxClear, otuBerThRaise=otuBerThRaise, apsdClear=apsdClear, envTempFailRaise=envTempFailRaise, eqptUnknClear=eqptUnknClear, forcedClear=forcedClear, defRDICCMClear=defRDICCMClear, defErrorCCMClear=defErrorCCMClear, fanSpeedLowThClear=fanSpeedLowThClear, posRxLowClear=posRxLowClear, sdRaise=sdRaise, ms_aisClear=ms_aisClear, cfgUnsuppClear=cfgUnsuppClear, eqptDgrdRaise=eqptDgrdRaise, eqptMissRaise=eqptMissRaise, inventoryUnsuppRaise=inventoryUnsuppRaise, isisAdjDownClear=isisAdjDownClear, envTempLowThRaise=envTempLowThRaise, envTempLowThClear=envTempLowThClear, envCurrentLowThClear=envCurrentLowThClear, defBfdDownClear=defBfdDownClear, inventoryUnsuppClear=inventoryUnsuppClear, cnxVldTmoutClear=cnxVldTmoutClear, loSpecRxClear=loSpecRxClear, ais_lClear=ais_lClear, firmUpgrdReqdRaise=firmUpgrdReqdRaise, bdiClear=bdiClear, envVoltHighThClear=envVoltHighThClear, oprLowThClear=oprLowThClear, serviceAffecting=serviceAffecting, PYSNMP_MODULE_ID=bTI7800_NOTIFICATIONS_MIB, lolightTxRaise=lolightTxRaise, loSpecRxRaise=loSpecRxRaise, feimRaise=feimRaise, optLowThRaise=optLowThRaise, oprHighThRaise=oprHighThRaise, laserFailClear=laserFailClear, oprLowThRaise=oprLowThRaise, replUnitDegradeRaise=replUnitDegradeRaise, cfgUnsuppRaise=cfgUnsuppRaise, oprHighFailClear=oprHighFailClear, isisDbOvrldClear=isisDbOvrldClear, variables=variables, odu_aisRaise=odu_aisRaise, modTempHighThRaise=modTempHighThRaise, code=code, pcsBerThRaise=pcsBerThRaise, partitionFaultRaise=partitionFaultRaise, forcedRaise=forcedRaise, ociRaise=ociRaise, eqptFailClear=eqptFailClear, lockoutRaise=lockoutRaise, lolaRaise=lolaRaise, fanSpeedLowThRaise=fanSpeedLowThRaise, memHighUsageRaise=memHighUsageRaise, oduBerThClear=oduBerThClear, cnxMeaRaise=cnxMeaRaise, envVoltFailClear=envVoltFailClear, rs_berThRaise=rs_berThRaise, envCurrentHighThClear=envCurrentHighThClear, scmNmiDownRaise=scmNmiDownRaise, rdi_lClear=rdi_lClear, rs_berThClear=rs_berThClear, losRaise=losRaise, envVoltHighThRaise=envVoltHighThRaise, laserTempLowThRaise=laserTempLowThRaise, defMACStatusClear=defMACStatusClear, feciRaise=feciRaise, lolaClear=lolaClear, firmUpgrdFailClear=firmUpgrdFailClear, aisOClear=aisOClear, String=String, laserFailRaise=laserFailRaise, lomClear=lomClear, highBerClear=highBerClear, rfRaise=rfRaise, modTempShutdownClear=modTempShutdownClear, berTh_sClear=berTh_sClear, laserTempHighThClear=laserTempHighThClear, timClear=timClear, eqptDgrdClear=eqptDgrdClear, modTempShutdownRaise=modTempShutdownRaise, oprHighFailRaise=oprHighFailRaise, envVoltLowThClear=envVoltLowThClear, isisAdjRejectedClear=isisAdjRejectedClear, lolightRxRaise=lolightRxRaise, timeStamp=timeStamp, oprHighThClear=oprHighThClear, airfilterAbsenseRaise=airfilterAbsenseRaise, iaocbRaise=iaocbRaise, timRaise=timRaise, odu_aisClear=odu_aisClear, bdiRaise=bdiRaise, cfgFailClear=cfgFailClear, cnxVldTmoutRaise=cnxVldTmoutRaise, iaocmClear=iaocmClear, rsvpAdjDownRaise=rsvpAdjDownRaise, diskHighUsageRaise=diskHighUsageRaise, lolckRaise=lolckRaise, isisAdjRejectedRaise=isisAdjRejectedRaise, iaocpClear=iaocpClear, upgrClear=upgrClear, envTempHighThRaise=envTempHighThRaise, ms_rdiClear=ms_rdiClear, lofRaise=lofRaise, contComSClear=contComSClear, aprClear=aprClear, defMACStatusRaise=defMACStatusRaise, eqptMismClear=eqptMismClear, contComERaise=contComERaise, pyldMismClear=pyldMismClear, replUnitDegradeClear=replUnitDegradeClear, posRxHighClear=posRxHighClear, posRxLowRaise=posRxLowRaise, eqptLatchOpenRaise=eqptLatchOpenRaise, ms_berThClear=ms_berThClear, firmUpgrdReqdClear=firmUpgrdReqdClear, eqptMismRaise=eqptMismRaise, lockoutClear=lockoutClear, powerAbsentClear=powerAbsentClear, uneqOClear=uneqOClear, iaocmRaise=iaocmRaise, Severity=Severity, odtgMismRaise=odtgMismRaise, isisDbOvrldRaise=isisDbOvrldRaise, ais_lRaise=ais_lRaise, memHighUsageClear=memHighUsageClear)
