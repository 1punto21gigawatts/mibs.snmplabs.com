#
# PySNMP MIB module REDSTONE-PPPOE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/REDSTONE-PPPOE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:55:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero")
rsMgmt, = mibBuilder.importSymbols("REDSTONE-SMI", "rsMgmt")
RsNextIfIndex, = mibBuilder.importSymbols("REDSTONE-TC", "RsNextIfIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
TimeTicks, NotificationType, ModuleIdentity, IpAddress, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Integer32, Gauge32, Bits, MibIdentifier, Counter64, Unsigned32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "NotificationType", "ModuleIdentity", "IpAddress", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Integer32", "Gauge32", "Bits", "MibIdentifier", "Counter64", "Unsigned32", "ObjectIdentity")
DisplayString, RowStatus, TimeStamp, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TimeStamp", "TextualConvention")
rsPPPoEMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2773, 2, 18))
rsPPPoEMIB.setRevisions(('1998-01-01 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: rsPPPoEMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: rsPPPoEMIB.setLastUpdated('9801010000Z')
if mibBuilder.loadTexts: rsPPPoEMIB.setOrganization('Redstone Communications, Inc.')
if mibBuilder.loadTexts: rsPPPoEMIB.setContactInfo(' Redstone Communications, Inc. 5 Carlisle Road Westford MA 01886 USA Tel: +1-978-692-1999 Email: mib@redstonecom.com ')
if mibBuilder.loadTexts: rsPPPoEMIB.setDescription('The PPPoE MIB for the Redstone Communications Inc. enterprise.')
rsPPPoEObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1))
rsPPPoEIfLayer = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1))
rsPPPoESubIfLayer = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 2))
rsPPPoENextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 1), RsNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoENextIfIndex.setStatus('current')
if mibBuilder.loadTexts: rsPPPoENextIfIndex.setDescription('Coordinate ifIndex value allocation for entries in rsPPPoEIfTable. A GET of this object returns the next available ifIndex value to be used to create an entry in the associated interface table; or zero, if no valid ifIndex value is available. This object also returns a value of zero when it is the lexicographic successor of a varbind presented in an SNMP GETNEXT or GETBULK request, for which circumstance it is assumed that ifIndex allocation is unintended. Successive GETs will typically return different values, thus avoiding collisions among cooperating management clients seeking to create table entries simultaneously. ')
rsPPPoEIfTable = MibTable((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 2), )
if mibBuilder.loadTexts: rsPPPoEIfTable.setReference('RFC 2156 A method for transmitting PPP over Ethernet')
if mibBuilder.loadTexts: rsPPPoEIfTable.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfTable.setDescription('The parameters for the PPPoE service on this interface.')
rsPPPoEIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 2, 1), ).setIndexNames((0, "REDSTONE-PPPOE-MIB", "rsPPPoEIfIfIndex"))
if mibBuilder.loadTexts: rsPPPoEIfEntry.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfEntry.setDescription('The Parameters for a particular PPPoE interface. Creating/deleting entries in this table causes corresponding entries for be created/deleted in ifTable/ifXTable/rsIfTable, and rsPPPoEIfStatsTable.')
rsPPPoEIfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfIfIndex.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfIfIndex.setDescription('The ifIndex value of the corresponding ifEntry.')
rsPPPoEIfMaxNumSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65336))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsPPPoEIfMaxNumSessions.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfMaxNumSessions.setDescription('The number of sessions allowed on the PPPoE interface, zero indicates unlimited')
rsPPPoEIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsPPPoEIfRowStatus.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfRowStatus.setDescription('Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: rsPPPoEIfRowStatus rsPPPoEIfLowerIfIndex In addition, when creating an entry the following conditions must hold: A value for rsPPPoEIfIndex must have been determined previously, by reading rsPPPoENextIfIndex. The interface identified by rsPPPoEIfLowerIfIndex must exist, and must be an interface type that permits layering of PPPoE above it. A corresponding entry in ifTable/ifXTable/rsIfTable is created/destroyed as a result of creating/destroying an entry in this table. ')
rsPPPoEIfLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 2, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsPPPoEIfLowerIfIndex.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfLowerIfIndex.setDescription('The ifIndex of an interface over which this PPPoE interface is to be layered. A value of zero indicates no layering. An implementation may choose to require that a nonzero value be configured at entry creation.')
rsPPPoEIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3), )
if mibBuilder.loadTexts: rsPPPoEIfStatsTable.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfStatsTable.setDescription('The statistics for the PPP over Ethernet Interface for the PPPoE service on this interface.')
rsPPPoEIfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1), ).setIndexNames((0, "REDSTONE-PPPOE-MIB", "rsPPPoEIfIfIndex"))
if mibBuilder.loadTexts: rsPPPoEIfStatsEntry.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfStatsEntry.setDescription('The statistics for a particular PPPoE Interface.')
rsPPPoEIfStatsRxPADI = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxPADI.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfStatsRxPADI.setDescription('Number of PADI packets received.')
rsPPPoEIfStatsTxPADO = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsTxPADO.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfStatsTxPADO.setDescription('Number of PADO packets transmitted.')
rsPPPoEIfStatsRxPADR = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxPADR.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfStatsRxPADR.setDescription('Number of PADR packets received.')
rsPPPoEIfStatsTxPADS = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsTxPADS.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfStatsTxPADS.setDescription('Number of PADS packets transmitted.')
rsPPPoEIfStatsRxPADT = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxPADT.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfStatsRxPADT.setDescription('Number of PADT packets received.')
rsPPPoEIfStatsTxPADT = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsTxPADT.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfStatsTxPADT.setDescription('Number of PADT packets transmitted.')
rsPPPoEIfStatsRxInvVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInvVersion.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInvVersion.setDescription('Number of packets received with invalid version.')
rsPPPoEIfStatsRxInvCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInvCode.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInvCode.setDescription('Number of packets received with invalid code.')
rsPPPoEIfStatsRxInvTags = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInvTags.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInvTags.setDescription('Number of packets received with invalid tags.')
rsPPPoEIfStatsRxInvSession = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInvSession.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInvSession.setDescription('Number of packets received with invalid session identifiers.')
rsPPPoEIfStatsRxInvTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInvTypes.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInvTypes.setDescription('Number of packets received with invalid types.')
rsPPPoEIfStatsRxInvPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInvPackets.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInvPackets.setDescription('Number of invalid packets received.')
rsPPPoEIfStatsRxInsufficientResources = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInsufficientResources.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInsufficientResources.setDescription('Number of session requests that could not be honored due to invalid resources.')
rsPPPoESubIfNextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 2, 1), RsNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoESubIfNextIfIndex.setStatus('current')
if mibBuilder.loadTexts: rsPPPoESubIfNextIfIndex.setDescription('Coordinate ifIndex value allocation for entries in rsPPPoESubIfTable. A GET of this object returns the next available ifIndex value to be used to create an entry in the associated interface table; or zero, if no valid ifIndex value is available. This object also returns a value of zero when it is the lexicographic successor of a varbind presented in an SNMP GETNEXT or GETBULK request, for which circumstance it is assumed that ifIndex allocation is unintended. Successive GETs will typically return different values, thus avoiding collisions among cooperating management clients seeking to create table entries simultaneously. ')
rsPPPoESubIfTable = MibTable((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 2, 2), )
if mibBuilder.loadTexts: rsPPPoESubIfTable.setStatus('current')
if mibBuilder.loadTexts: rsPPPoESubIfTable.setDescription('This table contains entries for PPPoE Subinterfaces present in the system.')
rsPPPoESubIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 2, 2, 1), ).setIndexNames((0, "REDSTONE-PPPOE-MIB", "rsPPPoESubIfIndex"))
if mibBuilder.loadTexts: rsPPPoESubIfEntry.setStatus('current')
if mibBuilder.loadTexts: rsPPPoESubIfEntry.setDescription('Each entry describes the characteristics of a PPPoE Subinterface. Creating/deleting entries in this table causes corresponding entries for be created /deleted in ifTable/ifXTable/rsIfTable.')
rsPPPoESubIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 2, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rsPPPoESubIfIndex.setStatus('current')
if mibBuilder.loadTexts: rsPPPoESubIfIndex.setDescription('The ifIndex of the PPPoE Subinterface. When creating entries in this table, suitable values for this object are determined by reading rsPPPoESubNextIfIndex.')
rsPPPoESubIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 2, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsPPPoESubIfRowStatus.setStatus('current')
if mibBuilder.loadTexts: rsPPPoESubIfRowStatus.setDescription('Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: rsPPPoESubIfRowStatus rsPPPoESubIfLowerIfIndex In addition, when creating an entry the following conditions must hold: A value for rsPPPoESubIfIndex must have been determined previously, by reading rsPPPoESubIfNextIfIndex. The interface identified by rsPPPoESubIfLowerIfIndex must exist, and must be a PPPoE interface. A positive value configured for rsPPPoESubIfId must not already be assigned to another subinterface layered onto the same underlying PPPoE interface. A corresponding entry in ifTable/ifXTable/rsIfTable is created/destroyed as a result of creating/destroying an entry in this table. ')
rsPPPoESubIfLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 2, 2, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsPPPoESubIfLowerIfIndex.setStatus('current')
if mibBuilder.loadTexts: rsPPPoESubIfLowerIfIndex.setDescription('The ifIndex of a PPPoE interface over which this PPPoE Subinterface is to be layered. A value of zero indicates no layering. An implementation may choose to require that a nonzero value be configured at entry creation.')
rsPPPoESubIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsPPPoESubIfId.setStatus('current')
if mibBuilder.loadTexts: rsPPPoESubIfId.setDescription('An integer identifier for the PPPoE subinterface, used in conjunction with the command-line interface. It is provided here for cross-reference purposes only. The value must be unique among subinterfaces configured on the same underlying PPPoE interface. If this object is not configured, or is configured with a value of -1, a nonzero value will be allocated internally and can be retrieved from this object after table entry creation has succeeded. A value of zero for this object is reserved for future use.')
rsPPPoESubIfSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoESubIfSessionId.setStatus('current')
if mibBuilder.loadTexts: rsPPPoESubIfSessionId.setDescription('The current sessionId associated with this sub-interface.')
rsPPPoEConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 18, 4))
rsPPPoECompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 18, 4, 1))
rsPPPoEGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 18, 4, 2))
rsPPPoECompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2773, 2, 18, 4, 1, 1)).setObjects(("REDSTONE-PPPOE-MIB", "rsPPPoEGroup"), ("REDSTONE-PPPOE-MIB", "rsPPPoESubIfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsPPPoECompliance = rsPPPoECompliance.setStatus('current')
if mibBuilder.loadTexts: rsPPPoECompliance.setDescription('The compliance statement for entities which implement the Redstone PPPoE MIB.')
rsPPPoEGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2773, 2, 18, 4, 2, 1)).setObjects(("REDSTONE-PPPOE-MIB", "rsPPPoENextIfIndex"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfIfIndex"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfMaxNumSessions"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfRowStatus"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfLowerIfIndex"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsRxPADI"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsTxPADO"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsRxPADR"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsTxPADS"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsRxPADT"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsTxPADT"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsRxInvVersion"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsRxInvCode"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsRxInvTags"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsRxInvSession"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsPPPoEGroup = rsPPPoEGroup.setStatus('current')
if mibBuilder.loadTexts: rsPPPoEGroup.setDescription('A collection of objects providing management of PPPoE interfaces in a Redstone product.')
rsPPPoESubIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2773, 2, 18, 4, 2, 2)).setObjects(("REDSTONE-PPPOE-MIB", "rsPPPoESubIfNextIfIndex"), ("REDSTONE-PPPOE-MIB", "rsPPPoESubIfRowStatus"), ("REDSTONE-PPPOE-MIB", "rsPPPoESubIfLowerIfIndex"), ("REDSTONE-PPPOE-MIB", "rsPPPoESubIfId"), ("REDSTONE-PPPOE-MIB", "rsPPPoESubIfSessionId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsPPPoESubIfGroup = rsPPPoESubIfGroup.setStatus('current')
if mibBuilder.loadTexts: rsPPPoESubIfGroup.setDescription('A collection of objects providing management of PPPoE subinterfaces in a Redstone product.')
mibBuilder.exportSymbols("REDSTONE-PPPOE-MIB", rsPPPoESubIfId=rsPPPoESubIfId, rsPPPoEIfLowerIfIndex=rsPPPoEIfLowerIfIndex, rsPPPoEIfStatsRxInvTypes=rsPPPoEIfStatsRxInvTypes, rsPPPoESubIfTable=rsPPPoESubIfTable, rsPPPoEIfStatsRxInvPackets=rsPPPoEIfStatsRxInvPackets, rsPPPoESubIfLowerIfIndex=rsPPPoESubIfLowerIfIndex, rsPPPoEObjects=rsPPPoEObjects, rsPPPoEIfStatsRxInvSession=rsPPPoEIfStatsRxInvSession, rsPPPoEIfLayer=rsPPPoEIfLayer, rsPPPoESubIfRowStatus=rsPPPoESubIfRowStatus, rsPPPoEIfStatsRxInvCode=rsPPPoEIfStatsRxInvCode, rsPPPoENextIfIndex=rsPPPoENextIfIndex, rsPPPoEIfStatsTxPADO=rsPPPoEIfStatsTxPADO, rsPPPoECompliances=rsPPPoECompliances, rsPPPoEIfStatsRxInvTags=rsPPPoEIfStatsRxInvTags, rsPPPoESubIfEntry=rsPPPoESubIfEntry, rsPPPoEIfIfIndex=rsPPPoEIfIfIndex, rsPPPoEIfStatsRxInsufficientResources=rsPPPoEIfStatsRxInsufficientResources, rsPPPoEIfStatsEntry=rsPPPoEIfStatsEntry, rsPPPoECompliance=rsPPPoECompliance, rsPPPoEGroups=rsPPPoEGroups, rsPPPoEIfStatsTxPADS=rsPPPoEIfStatsTxPADS, rsPPPoEConformance=rsPPPoEConformance, rsPPPoEIfStatsRxInvVersion=rsPPPoEIfStatsRxInvVersion, rsPPPoEIfEntry=rsPPPoEIfEntry, rsPPPoEIfStatsRxPADR=rsPPPoEIfStatsRxPADR, rsPPPoEIfTable=rsPPPoEIfTable, rsPPPoEIfRowStatus=rsPPPoEIfRowStatus, rsPPPoEIfStatsTxPADT=rsPPPoEIfStatsTxPADT, rsPPPoESubIfIndex=rsPPPoESubIfIndex, rsPPPoEGroup=rsPPPoEGroup, rsPPPoESubIfLayer=rsPPPoESubIfLayer, rsPPPoEIfMaxNumSessions=rsPPPoEIfMaxNumSessions, rsPPPoEIfStatsTable=rsPPPoEIfStatsTable, rsPPPoESubIfGroup=rsPPPoESubIfGroup, rsPPPoEIfStatsRxPADT=rsPPPoEIfStatsRxPADT, rsPPPoESubIfNextIfIndex=rsPPPoESubIfNextIfIndex, PYSNMP_MODULE_ID=rsPPPoEMIB, rsPPPoEIfStatsRxPADI=rsPPPoEIfStatsRxPADI, rsPPPoESubIfSessionId=rsPPPoESubIfSessionId, rsPPPoEMIB=rsPPPoEMIB)
