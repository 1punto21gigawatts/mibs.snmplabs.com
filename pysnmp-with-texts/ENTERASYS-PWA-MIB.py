#
# PySNMP MIB module ENTERASYS-PWA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-PWA-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:04:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ZeroBasedCounter32, = mibBuilder.importSymbols("RMON2-MIB", "ZeroBasedCounter32")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter32, ObjectIdentity, iso, ModuleIdentity, MibIdentifier, Bits, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, IpAddress, Unsigned32, NotificationType, TimeTicks, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "iso", "ModuleIdentity", "MibIdentifier", "Bits", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "IpAddress", "Unsigned32", "NotificationType", "TimeTicks", "Integer32")
TimeInterval, TruthValue, MacAddress, DisplayString, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TimeInterval", "TruthValue", "MacAddress", "DisplayString", "TextualConvention", "TimeStamp")
etsysPwaMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8))
etsysPwaMIB.setRevisions(('2003-11-05 16:56', '2003-08-04 11:22', '2003-05-14 19:32', '2002-12-13 21:56', '2002-05-15 20:44', '2002-05-14 21:30', '2002-03-21 21:49', '2001-06-07 16:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: etsysPwaMIB.setRevisionsDescriptions(('Added the etsysPwaSystemEnhancedModeRefreshTime object.', 'Added objects to support Guest Networking.', 'Added the etsysPwaLogoDisplayStatus object.', 'Added the etsysPwaSystemAuthEnhancedMode object. Updated the CONTACT-INFO clause.', 'Changed the syntax of etsysPwaAuthQuietPeriod and etsysPwaAuthMaxReq to Integer32. Corrected the conformance section to reflect the changes that were made yesterday.', 'Changed the syntax of etsysPwaSystemAuthIPAddress from InetAddress to IpAddress, to match existing and shipping implementations, and deprecated it as well. Deprecated etsysPwaSystemAuthIPAddressType. Added the etsysPwaSystemAuthInetAddressType and etsysPwaSystemAuthInetAddress objects to replace the deprecated functionality. Updated the CONTACT-INFO.', 'Changed the definition of etsysPwaSystemAuthHostName from OCTET-STRING to DisplayString.', 'The initial version of this MIB module',))
if mibBuilder.loadTexts: etsysPwaMIB.setLastUpdated('200311051656Z')
if mibBuilder.loadTexts: etsysPwaMIB.setOrganization('Enterasys Networks, Inc')
if mibBuilder.loadTexts: etsysPwaMIB.setContactInfo('Postal: Enterasys Networks 50 Minuteman Rd. Andover, MA 01810-1008 USA Phone: +1 978 684 1000 E-mail: support@enterasys.com WWW: http://www.enterasys.com')
if mibBuilder.loadTexts: etsysPwaMIB.setDescription("This MIB module provides the ability to configure the Port Web Authentication (PWA) component in a switch. PWA provides a way of authenticating a user on a switch port before allowing the user general access to the network. Only the essential protocols and services required by the authentication process are allowed on the segment between the end-station and the switch port. All other traffic will be discarded. When a user is in the unauthenticated state, any traffic generated by the end-station will not go beyond the switch port that they are connected to. The PWA/login process from the user standpoint is simple. The user makes a request via their favorite web browser for the 'secureharbour' web page. Depending upon the authenticated state of the port, a login page is provided so that the user can enter their username and password, or a logout page is presented to the user. When they submit their login page, the switch will then authenticate them via a preconfigured radius server. If the login is successful, then the port that the end-station is connected to will be turned on and full network access will be granted according to the users port configuration on the switch. This MIB module also provides status about the PWA component and statistics about all current users who are logged into the switch.")
etsysPwaSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 1))
etsysPwaPortConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 2))
etsysPwaPortStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 3))
etsysPwaSession = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4))
etsysPwaSystemAuthControl = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 1, 1), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaSystemAuthControl.setReference('Port Web Authentication Architectural Specification')
if mibBuilder.loadTexts: etsysPwaSystemAuthControl.setStatus('current')
if mibBuilder.loadTexts: etsysPwaSystemAuthControl.setDescription('The administrative enable/disable state for Port Web Authentication Control in a System. Enabling this object turns on the PWA system.')
etsysPwaSystemAuthHostName = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('secureharbour')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaSystemAuthHostName.setStatus('current')
if mibBuilder.loadTexts: etsysPwaSystemAuthHostName.setDescription('This is the hostname part the Uniform Resource Locator (URL). This object is a DNS/WINS name and is considered to be bound to the etsysPwaSystemAuthIPAddress. This object must not contain the protocol portion of the URL nor any directory or filenames. Changing this objects value changes the default name of the http server located at the local switch. An administrator can change this objects value to whatever name is appropriate for their network.')
etsysPwaSystemAuthBanner = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 1, 3), SnmpAdminString().clone('Enterasys Networks Incorporated\n              P.O. Box 5005\n              Rochester, NH 03866-5005 USA\n              603 337-9400')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaSystemAuthBanner.setStatus('current')
if mibBuilder.loadTexts: etsysPwaSystemAuthBanner.setDescription('The banner that will be displayed on the web login page of the Port Web Authentication Control in a System. This banner is a courtesy introduction to the network, which the user sees on the login page.')
etsysPwaSystemPwaNameServicesEnable = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 1, 4), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaSystemPwaNameServicesEnable.setStatus('current')
if mibBuilder.loadTexts: etsysPwaSystemPwaNameServicesEnable.setDescription('The enable state of the name services application. Enabling this object turns on the Domain Name Service (DNS) and the Windows Internet Naming Services (WINS) clients. These clients will resolve only requests for the etsysPwaSystemAuthHostName. Disabling this object would require users in the network to know and use the etsysPwaSystemAuthIPAddress of this system.')
etsysPwaSystemAuthIPAddressType = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 1, 5), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaSystemAuthIPAddressType.setStatus('deprecated')
if mibBuilder.loadTexts: etsysPwaSystemAuthIPAddressType.setDescription('This object has been deprecated. Refer to etsysPwaSystemAuthIPAddress for the reason. The textual convention for InetAddressType states that this object must be registered immediately before the InetAddress that it defines. etsysPwaSystemAuthInetAddressType MUST be used for all future implementations of this MIB.')
etsysPwaSystemAuthIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaSystemAuthIPAddress.setStatus('deprecated')
if mibBuilder.loadTexts: etsysPwaSystemAuthIPAddress.setDescription('This object has been deprecated due to an incorrect initial implementation of this MIB. This object was originally an InetAddress but some versions of the E7 firmware implemented it as an IpAddress. The syntax of this object was changed to allow management of the existing products. The etsysPwaSystemAuthInetAddress object MUST be used for all future implementations of this MIB.')
etsysPwaSystemAuthProtocol = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("chap", 1), ("pap", 2))).clone('pap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaSystemAuthProtocol.setStatus('current')
if mibBuilder.loadTexts: etsysPwaSystemAuthProtocol.setDescription("The authentication protocol used for this switch module. When set to a chap(1), the authentication scheme used will be the 'PPP Challenge Handshake Authentication Protocol (CHAP)', when set to a pap(2), the scheme will be 'Password Authentication Protocol (PAP)'. When using the CHAP protocol, the username and password utilize the CHAP protocol method of encryption to encrypt the users password in the http transmission of the submitted form on the segment between the end-station and the switch port. The PAP protocol is less secure than CHAP and does not provide any encryption on the segment between the end-station the switch port. The username and password go over this segment in the http transmission of the submitted form in plain text format.")
etsysPwaSystemAuthDomain = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 1, 8), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaSystemAuthDomain.setStatus('current')
if mibBuilder.loadTexts: etsysPwaSystemAuthDomain.setDescription('The domain name for which this module resides in.')
etsysPwaSystemAuthInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 1, 9), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaSystemAuthInetAddressType.setStatus('current')
if mibBuilder.loadTexts: etsysPwaSystemAuthInetAddressType.setDescription('A value that represents a type of etsysPwaSystemAuthInetAddress. unknown(0) An unknown address type. This value MUST be used if the value of the corresponding InetAddress object is a zero-length string. It may also be used to indicate an IP address which is not in one of the formats defined below. ipv4(1) An IPv4 address as defined by the InetAddressIPv4 textual convention. ipv6(2) An IPv6 address as defined by the InetAddressIPv6 textual convention.')
etsysPwaSystemAuthInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 1, 10), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaSystemAuthInetAddress.setStatus('current')
if mibBuilder.loadTexts: etsysPwaSystemAuthInetAddress.setDescription('The IP address bound to the etsysPwaSystemAuthHostName. The format of this object is defined in the etsysPwaSystemAuthInetAddressType object. This address MUST be supplied for authentication to work. This is a globally unique address and must be the same value configured into every authenticating switch in the domain. Each switch terminates any IP traffic destined to this etsysPwaSystemAuthInetAddress. If the port is in either promiscousAuto(4) or auto(2) mode, described in the etsysPwaControlledPortControl object, then the local switch in question responds to http requests with a login page. If the port is in any other mode, then all traffic destined for etsysPwaSystemAuthInetAddress is discarded. Please note that neither the etsysPwaSystemAuthHostName object nor this object refer to any specific machine in the network. These objects are always relative to the connection between an end station and a switch. Traffic destined for this IP is never seen over interswitch links.')
etsysPwaSystemAuthEnhancedMode = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 1, 11), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaSystemAuthEnhancedMode.setStatus('current')
if mibBuilder.loadTexts: etsysPwaSystemAuthEnhancedMode.setDescription('The enable state of the PWA enhanced mode. When this feature is enabled users on unauthenticated ports will be presented the login page on their initial web access. The etsysPwaControlledPortControl object MUST be set to auto(2) for this feature to function correctly. If etsysPwaControlledPortControl is not set to auto(2), or if this feature is disabled, users must enter the value of etsysPwaSystemAuthHostName in order to get the login page.')
etsysPwaLogoDisplayStatus = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 1, 12), EnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaLogoDisplayStatus.setStatus('current')
if mibBuilder.loadTexts: etsysPwaLogoDisplayStatus.setDescription('When this object is set to enabled, the secureharbour logo will be displayed on the PWA login web pages. When it is set to disabled, the logo will not be displayed.')
etsysPwaSystemGuestUsername = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('guest')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaSystemGuestUsername.setStatus('current')
if mibBuilder.loadTexts: etsysPwaSystemGuestUsername.setDescription('The username that the Guest Networking feature will use to authenticate users that do not override this value in the login page.')
etsysPwaSystemGuestPassword = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaSystemGuestPassword.setStatus('current')
if mibBuilder.loadTexts: etsysPwaSystemGuestPassword.setDescription('The password that the Guest Networking feature will use to authenticate users that do not override the guest username. On a read this object will always return an empty string.')
etsysPwaSystemGuestPasswordValid = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 1, 15), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaSystemGuestPasswordValid.setStatus('current')
if mibBuilder.loadTexts: etsysPwaSystemGuestPasswordValid.setDescription('true(1) - indicates that etsysPwaGuestPassword was last set with some value other than the empty string. false(2) - indicates that etsysPwaGuestPassword has never been set, or was last set to the empty string.')
etsysPwaSystemGuestNetworkingStatus = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("authNone", 2), ("authRadius", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaSystemGuestNetworkingStatus.setStatus('current')
if mibBuilder.loadTexts: etsysPwaSystemGuestNetworkingStatus.setDescription('Guest Networking is a feature that allows a user to get default policy access to the network without having to know a username or password. When this feature is not disabled(1), the username on the login page will be populated with the value from the object etsysPwaGuestUsername and the password will be mask out with asterisks. The password in the login page should never be populated with the value from etsysPwaGuestPassword. When Guest Networking is enabled, and a user submits a request for authentication, and the username is the same as the value from etsysPwaGuestUsername, PWA will use the value from etsysPwaGuestPassword as the password for authentication. When this object is set to disabled(1), Guest Networking will be unavailable. When set to authNone(2) Guest Networking will be enabled and it will not authenticate the guest user using any authentication method. Once the user submits the login page with the username that matches the value from etsysPwaGuestUsername, the default policy of that port will become the active policy. When set to authRadius(3) Guest Networking will be enabled and it will authenticate the guest user using RADIUS authentication Upon a successful authentication from RADIUS, this port will apply the policy returned from RADIUS to that port.')
etsysPwaSystemEnhancedModeRefreshTime = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaSystemEnhancedModeRefreshTime.setStatus('current')
if mibBuilder.loadTexts: etsysPwaSystemEnhancedModeRefreshTime.setDescription("This is the value that is displayed on the PWA login success page as the redirect time. If a user, using PWA enhanced mode, enters a URL of 'http://enterasys.com' prior to being presented with the PWA login page and then successfully authenticates into the network they would be presented with a login success page that displays 'Welcome to the Network. Completing network connections. You will be redirected to http://enterasys.com in approximately 30 seconds'. An end-station that is utilizing the Dynamic Host Configuration Protocol (DHCP) as a means of obtaining an IP address will take some time to transition from the temporary IP address issued by PWA, as part of the authentication process, to the official IP address issued by the network. etsysPwaSystemEnhancedModeRefreshTime provides a configurable time period for the end-stations on a given switch to complete the process of obtaining their official IP addresses and to begin using them. The default value of 30 seconds has been shown to be adequate in most environments. In some networks this time period may need to be longer, and in other networks it could be shorter. In networks that only use static IP addresses a time period on the order of 5 to 10 seconds may be sufficient. A period of less than 5 seconds is not recommended as there is a slight delay after a successful login before the switch transitions the port to forwarding.")
etsysPwaPortConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 2, 1), )
if mibBuilder.loadTexts: etsysPwaPortConfigurationTable.setStatus('current')
if mibBuilder.loadTexts: etsysPwaPortConfigurationTable.setDescription('A table of configuration objects for each port that are supported by the Port Web Authentication Entity. An entry appears in this table for each port in this system. All objects/instances in this table are stored persistent memory.')
etsysPwaPortConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 2, 1, 1), ).setIndexNames((0, "ENTERASYS-PWA-MIB", "etsysPwaPortNumber"))
if mibBuilder.loadTexts: etsysPwaPortConfigurationEntry.setStatus('current')
if mibBuilder.loadTexts: etsysPwaPortConfigurationEntry.setDescription('The ifIndex number, maximum number of requests, quiet period between failed attempts, and initialization control for a Port. This table holds the objects for configuring the PWA system.')
etsysPwaPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 2, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: etsysPwaPortNumber.setStatus('current')
if mibBuilder.loadTexts: etsysPwaPortNumber.setDescription('The ifIndex number associated with this port.')
etsysPwaInitializePort = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 2, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaInitializePort.setStatus('current')
if mibBuilder.loadTexts: etsysPwaInitializePort.setDescription('The initialization control for this ifIndex. This object can be used to unauthenticate a user on a port or to return the port to its initial default state due to some unknown condition. Setting this attribute to true(1) causes the Port to be initialized. The attribute value reverts to false(2) once initialization has completed. Initializing a port returns the etsysPwaAuthPwaState to disconnected(1) and if the etsysPwaControlledPortControl setting is either promiscousAuto(4) or auto(2), and the etsysPwaAuthPwaState was authenticated(3), then the current session is terminated, and the user is forced off the network.')
etsysPwaAuthQuietPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaAuthQuietPeriod.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthQuietPeriod.setDescription('The value, in seconds, of the quietPeriod constant currently in use by the Port Web Authenticator state machine. After the user attempts unsuccessfully to login a number of times equal to the etsysPwaAuthMaxReq constant, then the ifIndex is locked for a time period equal to the value of this MIB entry. In the initial released version of this MIB this object was an Unsigned32. The initial implementation on the E7 returned an Integer32. The syntax of this object was changed to reflect the existing product in the field. All future implementations of this object should return an Integer32.')
etsysPwaAuthMaxReq = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaAuthMaxReq.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthMaxReq.setDescription('The value of the maxReq constant currently in use by the Port Web Authenticator state machine. This represents the maximum number of failed retry attempts before preventing any further attempts for a time period equal to the value of etsysPwaAuthQuietPeriod. In the initial released version of this MIB this object was an Unsigned32. The initial implementation on the E7 returned an Integer32. The syntax of this object was changed to reflect the existing product in the field. All future implementations of this object should return an Integer32.')
etsysPwaControlledPortControl = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("forceUnauthorized", 1), ("auto", 2), ("forceAuthorized", 3), ("promiscousAuto", 4))).clone('forceAuthorized')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPwaControlledPortControl.setStatus('current')
if mibBuilder.loadTexts: etsysPwaControlledPortControl.setDescription('The authentication method of the ifIndex. A value of forceUnauthorized(1) indicates that the port is always unauthenticated. When set to this value the ifindex is essentially disabled. A value of auto(2) indicates that the ifindex will authenticate users using PWA process. In this mode the switch will provide all the services the end-station will need to complete the login. These services include a Dynamic Host Configuration Protocol (DHCP) server, a Windows Internet Naming Server (WINS), and a Domain Name Service (DNS) Server. A value of forceAuthorized(3) indicates the port is always authorized. When set to this value, the ifindex will always be authenticated. When set to promiscousAuto(4) the services that are required to complete the network login are not provided by the switch. These services must be provided on a back-end network that the end-station can communicate with. These services might be specific to the particular Operating System of the end-station and could also include the same services as provided in auto mode.')
etsysPwaAuthStatusTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 3, 1), )
if mibBuilder.loadTexts: etsysPwaAuthStatusTable.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthStatusTable.setDescription('A table that contains the status objects for the Port Web Authenticator associated with each ifIndex. An entry appears in this table for each ifIndex that may authenticate access to itself. All objects/instances in this table are stored in persistent memory.')
etsysPwaAuthStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 3, 1, 1), ).setIndexNames((0, "ENTERASYS-PWA-MIB", "etsysPwaPortNumber"))
if mibBuilder.loadTexts: etsysPwaAuthStatusEntry.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthStatusEntry.setDescription('The status information for an Authenticator PWA.')
etsysPwaAuthPwaState = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disconnected", 1), ("authenticating", 2), ("authenticated", 3), ("held", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaAuthPwaState.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthPwaState.setDescription('The current value of the Port Web Authenticator state machine. When set to disconnected(1) no user is logged in. When set to authenticating(2), it indicates that a login is in process and has not yet completed. A value of authenticated(3) indicates a user has successfully logged in. When the value is held(4) it indicates that the port is locked down because the number of failed login attempts is greater than etsysPwaAuthMaxReq.The port will be locked until the etsysPwaAuthQuietPeriod has expired.')
etsysPwaMaxFailedAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 3, 1, 1, 2), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaMaxFailedAttempts.setStatus('current')
if mibBuilder.loadTexts: etsysPwaMaxFailedAttempts.setDescription('The total number of failed logon attempts on this ifIndex.')
etsysPwaFailedAttemptsSinceLogon = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 3, 1, 1, 3), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaFailedAttemptsSinceLogon.setStatus('current')
if mibBuilder.loadTexts: etsysPwaFailedAttemptsSinceLogon.setDescription('The total number of failed logon attempts since the last successful logon on this ifIndex.')
etsysPwaLastLogonResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 3, 1, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaLastLogonResult.setStatus('current')
if mibBuilder.loadTexts: etsysPwaLastLogonResult.setDescription('This ASCII string provides an unstructured way for the web based auth agent to communicate detailed error and status indications to a network administrator.')
etsysPwaAuthSessionStatsTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 1), )
if mibBuilder.loadTexts: etsysPwaAuthSessionStatsTable.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionStatsTable.setDescription('A table that contains the session statistics objects for the Authenticator PWA associated with each ifIndex. An entry appears in this table for each ifIndex that may authenticate access to itself. Session entries are collected for each ifIndex. All objects/instances in this table are stored in non-persistent memory. The instancing in this table and the etsysPwaAuthSessionStatsHCTable are dependent upon the switch port configuration and will always be identical in any given switch.')
etsysPwaAuthSessionStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 1, 1), ).setIndexNames((0, "ENTERASYS-PWA-MIB", "etsysPwaPortNumber"), (0, "ENTERASYS-PWA-MIB", "etsysPwaAuthSessionID"))
if mibBuilder.loadTexts: etsysPwaAuthSessionStatsEntry.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionStatsEntry.setDescription('The session statistics information for an Authenticator PWA. This shows the current values being collected for each session that is still in progress, or the final values for the last valid session on each ifIndex where there is no session currently active.')
etsysPwaAuthSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaAuthSessionID.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionID.setDescription('A unique ID that identifies the session on this ifindex.')
etsysPwaAuthSessionOctetsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaAuthSessionOctetsRx.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionOctetsRx.setDescription('The number of octets received in user data frames on this ifIndex during the session.')
etsysPwaAuthSessionOctetsRxOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaAuthSessionOctetsRxOverflow.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionOctetsRxOverflow.setDescription('The number of times the associated etsysPwaAuthSessionOctetsRx counter has overflowed.')
etsysPwaAuthSessionOctetsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaAuthSessionOctetsTx.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionOctetsTx.setDescription('The number of octets transmitted in user data frames on this ifIndex during the session.')
etsysPwaAuthSessionOctetsTxOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaAuthSessionOctetsTxOverflow.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionOctetsTxOverflow.setDescription('The number of times the associated etsysPwaAuthSessionOctetsTx counter has overflowed.')
etsysPwaAuthSessionFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaAuthSessionFramesRx.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionFramesRx.setDescription('The number of user data frames received on this ifIndex during the session.')
etsysPwaAuthSessionFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaAuthSessionFramesTx.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionFramesTx.setDescription('The number of user data frames transmitted on this ifIndex during the session.')
etsysPwaAuthSessionStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 1, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaAuthSessionStartTime.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionStartTime.setDescription('The start time of the session in hundredths of seconds since reset.')
etsysPwaAuthSessionDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 1, 1, 9), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaAuthSessionDuration.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionDuration.setDescription('The duration of the session in hundredths of seconds.')
etsysPwaAuthSessionTerminateCause = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 999))).clone(namedValues=NamedValues(("linkDown", 1), ("logoff", 2), ("authControlForceUnauth", 3), ("portReInit", 4), ("portDisabled", 5), ("notTerminatedYet", 999)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaAuthSessionTerminateCause.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionTerminateCause.setDescription('The reason for the session termination. When set to linkDown(1), the ifindex has no link. When set to logoff(2), a user has successfully logged off the network on this ifindex. When set to authControlForceUnauth(3) an administrator has terminated the user session on this ifindex by setting etsysPwaControlledPortControl to forceUnauthorized(1). When set to portReInit(4) the ifindex has been re-initialized by setting the object etsysPwaInitializePort. When set to portDisabled(5) the ifindex has been disabled. When set notTerminatedYet(999) the ifindex has an active session.')
etsysPwaAuthSessionMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 1, 1, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaAuthSessionMacAddress.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionMacAddress.setDescription('The mac address of the remote user of this session entry stored for this ifIndex.')
etsysPwaAuthSessionIPAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 1, 1, 12), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaAuthSessionIPAddressType.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionIPAddressType.setDescription('A value that represents a type of etsysPwaAuthSessionIPAddress. unknown(0) An unknown address type. This value MUST be used if the value of the corresponding InetAddress object is a zero-length string. It may also be used to indicate an IP address which is not in one of the formats defined below. ipv4(1) An IPv4 address as defined by the InetAddressIPv4 textual convention. ipv6(2) An IPv6 address as defined by the InetAddressIPv6 textual convention.')
etsysPwaAuthSessionIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 1, 1, 13), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaAuthSessionIPAddress.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionIPAddress.setDescription('The ip address of the remote user of this session entry stored for this ifIndex. The format of this object is defined in the etsysPwaAuthSessionIPAddressType object.')
etsysPwaAuthSessionUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 1, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaAuthSessionUserName.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionUserName.setDescription('The username that logged on to this ifIndex.')
etsysPwaAuthSessionStatsHCTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 2), )
if mibBuilder.loadTexts: etsysPwaAuthSessionStatsHCTable.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionStatsHCTable.setDescription('A table that contains the session statistics objects for the Authenticator PWA associated with each ifIndex. An entry appears in this table for each ifIndex that may authenticate access to itself. Session entries are collected for each ifIndex up to the maximum allowed. When the maximum number of allowed sessions has been reached, the oldest session entries will be replaced with newer ones as necessary. All objects/instances in this table are stored in non-persistent memory.')
etsysPwaAuthSessionStatsHCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 2, 1), ).setIndexNames((0, "ENTERASYS-PWA-MIB", "etsysPwaPortNumber"), (0, "ENTERASYS-PWA-MIB", "etsysPwaAuthSessionHCID"))
if mibBuilder.loadTexts: etsysPwaAuthSessionStatsHCEntry.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionStatsHCEntry.setDescription('The session statistics information for an Authenticator PWA. This shows the current values being collected for each session that is still in progress, or the final values for the last valid session on each ifIndex where there is no session currently active.')
etsysPwaAuthSessionHCID = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaAuthSessionHCID.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionHCID.setDescription('A unique ID that identifies the session on this ifindex.')
etsysPwaAuthSessionOctetsRxHc = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaAuthSessionOctetsRxHc.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionOctetsRxHc.setDescription('The number of octets received in user data frames on this ifIndex during the session.')
etsysPwaAuthSessionOctetsTxHc = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 4, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPwaAuthSessionOctetsTxHc.setStatus('current')
if mibBuilder.loadTexts: etsysPwaAuthSessionOctetsTxHc.setDescription('The number of octets transmitted in user data frames on this ifIndex during the session.')
etsysPwaMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 5))
etsysPwaMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 6))
etsysPwaSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 5, 1)).setObjects(("ENTERASYS-PWA-MIB", "etsysPwaSystemAuthControl"), ("ENTERASYS-PWA-MIB", "etsysPwaSystemAuthHostName"), ("ENTERASYS-PWA-MIB", "etsysPwaSystemAuthBanner"), ("ENTERASYS-PWA-MIB", "etsysPwaSystemPwaNameServicesEnable"), ("ENTERASYS-PWA-MIB", "etsysPwaSystemAuthIPAddressType"), ("ENTERASYS-PWA-MIB", "etsysPwaSystemAuthIPAddress"), ("ENTERASYS-PWA-MIB", "etsysPwaSystemAuthProtocol"), ("ENTERASYS-PWA-MIB", "etsysPwaSystemAuthDomain"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPwaSystemGroup = etsysPwaSystemGroup.setStatus('deprecated')
if mibBuilder.loadTexts: etsysPwaSystemGroup.setDescription('This section has been deprecated. See etsysPwaSystemGroupI.')
etsysPwaPortConfigurationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 5, 2)).setObjects(("ENTERASYS-PWA-MIB", "etsysPwaInitializePort"), ("ENTERASYS-PWA-MIB", "etsysPwaAuthQuietPeriod"), ("ENTERASYS-PWA-MIB", "etsysPwaAuthMaxReq"), ("ENTERASYS-PWA-MIB", "etsysPwaControlledPortControl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPwaPortConfigurationGroup = etsysPwaPortConfigurationGroup.setStatus('current')
if mibBuilder.loadTexts: etsysPwaPortConfigurationGroup.setDescription('This section is for ifIndex based configuration of the PWA system.')
etsysPwaPortStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 5, 3)).setObjects(("ENTERASYS-PWA-MIB", "etsysPwaAuthPwaState"), ("ENTERASYS-PWA-MIB", "etsysPwaMaxFailedAttempts"), ("ENTERASYS-PWA-MIB", "etsysPwaFailedAttemptsSinceLogon"), ("ENTERASYS-PWA-MIB", "etsysPwaLastLogonResult"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPwaPortStatusGroup = etsysPwaPortStatusGroup.setStatus('current')
if mibBuilder.loadTexts: etsysPwaPortStatusGroup.setDescription('The status of all login information on a per ifIndex basis can be obtained here.')
etsysPwaSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 5, 4)).setObjects(("ENTERASYS-PWA-MIB", "etsysPwaAuthSessionID"), ("ENTERASYS-PWA-MIB", "etsysPwaAuthSessionOctetsRx"), ("ENTERASYS-PWA-MIB", "etsysPwaAuthSessionOctetsRxOverflow"), ("ENTERASYS-PWA-MIB", "etsysPwaAuthSessionOctetsTx"), ("ENTERASYS-PWA-MIB", "etsysPwaAuthSessionOctetsTxOverflow"), ("ENTERASYS-PWA-MIB", "etsysPwaAuthSessionFramesRx"), ("ENTERASYS-PWA-MIB", "etsysPwaAuthSessionFramesTx"), ("ENTERASYS-PWA-MIB", "etsysPwaAuthSessionStartTime"), ("ENTERASYS-PWA-MIB", "etsysPwaAuthSessionDuration"), ("ENTERASYS-PWA-MIB", "etsysPwaAuthSessionTerminateCause"), ("ENTERASYS-PWA-MIB", "etsysPwaAuthSessionMacAddress"), ("ENTERASYS-PWA-MIB", "etsysPwaAuthSessionIPAddressType"), ("ENTERASYS-PWA-MIB", "etsysPwaAuthSessionIPAddress"), ("ENTERASYS-PWA-MIB", "etsysPwaAuthSessionUserName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPwaSessionGroup = etsysPwaSessionGroup.setStatus('current')
if mibBuilder.loadTexts: etsysPwaSessionGroup.setDescription('This section contains statistics associated with each ifIndex/login.')
etsysPwaSessionHCGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 5, 5)).setObjects(("ENTERASYS-PWA-MIB", "etsysPwaAuthSessionHCID"), ("ENTERASYS-PWA-MIB", "etsysPwaAuthSessionOctetsRxHc"), ("ENTERASYS-PWA-MIB", "etsysPwaAuthSessionOctetsTxHc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPwaSessionHCGroup = etsysPwaSessionHCGroup.setStatus('current')
if mibBuilder.loadTexts: etsysPwaSessionHCGroup.setDescription('This section contains statistics associated with each ifIndex/login.')
etsysPwaSystemGroupI = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 5, 6)).setObjects(("ENTERASYS-PWA-MIB", "etsysPwaSystemAuthControl"), ("ENTERASYS-PWA-MIB", "etsysPwaSystemAuthHostName"), ("ENTERASYS-PWA-MIB", "etsysPwaSystemAuthBanner"), ("ENTERASYS-PWA-MIB", "etsysPwaSystemPwaNameServicesEnable"), ("ENTERASYS-PWA-MIB", "etsysPwaSystemAuthProtocol"), ("ENTERASYS-PWA-MIB", "etsysPwaSystemAuthDomain"), ("ENTERASYS-PWA-MIB", "etsysPwaSystemAuthInetAddressType"), ("ENTERASYS-PWA-MIB", "etsysPwaSystemAuthInetAddress"), ("ENTERASYS-PWA-MIB", "etsysPwaLogoDisplayStatus"), ("ENTERASYS-PWA-MIB", "etsysPwaSystemGuestUsername"), ("ENTERASYS-PWA-MIB", "etsysPwaSystemGuestPassword"), ("ENTERASYS-PWA-MIB", "etsysPwaSystemGuestPasswordValid"), ("ENTERASYS-PWA-MIB", "etsysPwaSystemGuestNetworkingStatus"), ("ENTERASYS-PWA-MIB", "etsysPwaSystemEnhancedModeRefreshTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPwaSystemGroupI = etsysPwaSystemGroupI.setStatus('current')
if mibBuilder.loadTexts: etsysPwaSystemGroupI.setDescription('This section is for the basic configuration parameters used by the PWA system.')
etsysPwaSystemAuthEnhancedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 5, 7)).setObjects(("ENTERASYS-PWA-MIB", "etsysPwaSystemAuthEnhancedMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPwaSystemAuthEnhancedGroup = etsysPwaSystemAuthEnhancedGroup.setStatus('current')
if mibBuilder.loadTexts: etsysPwaSystemAuthEnhancedGroup.setDescription('This section is for the configuration of the PWA enhanced mode of operation.')
etsysPwaMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 6, 1)).setObjects(("ENTERASYS-PWA-MIB", "etsysPwaSystemGroup"), ("ENTERASYS-PWA-MIB", "etsysPwaPortConfigurationGroup"), ("ENTERASYS-PWA-MIB", "etsysPwaPortStatusGroup"), ("ENTERASYS-PWA-MIB", "etsysPwaSessionGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPwaMIBCompliance = etsysPwaMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: etsysPwaMIBCompliance.setDescription('Deprecated, see etsysPwaMIBComplianceI.')
etsysPwaMIBComplianceI = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 8, 6, 2)).setObjects(("ENTERASYS-PWA-MIB", "etsysPwaSystemGroupI"), ("ENTERASYS-PWA-MIB", "etsysPwaPortConfigurationGroup"), ("ENTERASYS-PWA-MIB", "etsysPwaPortStatusGroup"), ("ENTERASYS-PWA-MIB", "etsysPwaSessionGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPwaMIBComplianceI = etsysPwaMIBComplianceI.setStatus('current')
if mibBuilder.loadTexts: etsysPwaMIBComplianceI.setDescription('The compliance statement for hosts using Port Web Authentication.')
mibBuilder.exportSymbols("ENTERASYS-PWA-MIB", etsysPwaMIB=etsysPwaMIB, etsysPwaSystemAuthControl=etsysPwaSystemAuthControl, etsysPwaMIBGroups=etsysPwaMIBGroups, etsysPwaPortConfigurationTable=etsysPwaPortConfigurationTable, etsysPwaLogoDisplayStatus=etsysPwaLogoDisplayStatus, etsysPwaAuthStatusTable=etsysPwaAuthStatusTable, etsysPwaAuthPwaState=etsysPwaAuthPwaState, etsysPwaMIBComplianceI=etsysPwaMIBComplianceI, etsysPwaAuthSessionMacAddress=etsysPwaAuthSessionMacAddress, etsysPwaAuthSessionUserName=etsysPwaAuthSessionUserName, etsysPwaAuthSessionStatsHCTable=etsysPwaAuthSessionStatsHCTable, etsysPwaAuthSessionStatsEntry=etsysPwaAuthSessionStatsEntry, etsysPwaSystemAuthIPAddress=etsysPwaSystemAuthIPAddress, etsysPwaSystemAuthInetAddress=etsysPwaSystemAuthInetAddress, etsysPwaSystemGroup=etsysPwaSystemGroup, etsysPwaSystemGuestPasswordValid=etsysPwaSystemGuestPasswordValid, etsysPwaSystemAuthIPAddressType=etsysPwaSystemAuthIPAddressType, etsysPwaAuthSessionHCID=etsysPwaAuthSessionHCID, etsysPwaSystemPwaNameServicesEnable=etsysPwaSystemPwaNameServicesEnable, etsysPwaSystemAuthEnhancedGroup=etsysPwaSystemAuthEnhancedGroup, etsysPwaAuthSessionOctetsTxOverflow=etsysPwaAuthSessionOctetsTxOverflow, etsysPwaSessionHCGroup=etsysPwaSessionHCGroup, etsysPwaAuthSessionFramesRx=etsysPwaAuthSessionFramesRx, etsysPwaSystemGuestPassword=etsysPwaSystemGuestPassword, etsysPwaAuthSessionTerminateCause=etsysPwaAuthSessionTerminateCause, etsysPwaAuthSessionStatsTable=etsysPwaAuthSessionStatsTable, etsysPwaAuthSessionDuration=etsysPwaAuthSessionDuration, etsysPwaAuthSessionStatsHCEntry=etsysPwaAuthSessionStatsHCEntry, etsysPwaSystem=etsysPwaSystem, etsysPwaPortConfigurationEntry=etsysPwaPortConfigurationEntry, etsysPwaMIBCompliances=etsysPwaMIBCompliances, etsysPwaPortConfiguration=etsysPwaPortConfiguration, etsysPwaPortConfigurationGroup=etsysPwaPortConfigurationGroup, etsysPwaPortStatusGroup=etsysPwaPortStatusGroup, etsysPwaLastLogonResult=etsysPwaLastLogonResult, etsysPwaAuthMaxReq=etsysPwaAuthMaxReq, etsysPwaAuthSessionStartTime=etsysPwaAuthSessionStartTime, etsysPwaAuthSessionOctetsRxHc=etsysPwaAuthSessionOctetsRxHc, etsysPwaSystemGuestNetworkingStatus=etsysPwaSystemGuestNetworkingStatus, etsysPwaMaxFailedAttempts=etsysPwaMaxFailedAttempts, etsysPwaAuthSessionIPAddress=etsysPwaAuthSessionIPAddress, etsysPwaPortNumber=etsysPwaPortNumber, etsysPwaAuthSessionFramesTx=etsysPwaAuthSessionFramesTx, etsysPwaAuthSessionOctetsTx=etsysPwaAuthSessionOctetsTx, etsysPwaSystemAuthInetAddressType=etsysPwaSystemAuthInetAddressType, etsysPwaInitializePort=etsysPwaInitializePort, etsysPwaAuthSessionOctetsRx=etsysPwaAuthSessionOctetsRx, etsysPwaSession=etsysPwaSession, etsysPwaPortStatus=etsysPwaPortStatus, etsysPwaSystemAuthHostName=etsysPwaSystemAuthHostName, etsysPwaSystemGroupI=etsysPwaSystemGroupI, etsysPwaAuthSessionID=etsysPwaAuthSessionID, etsysPwaAuthSessionIPAddressType=etsysPwaAuthSessionIPAddressType, PYSNMP_MODULE_ID=etsysPwaMIB, etsysPwaSystemAuthDomain=etsysPwaSystemAuthDomain, etsysPwaSystemAuthEnhancedMode=etsysPwaSystemAuthEnhancedMode, etsysPwaSystemGuestUsername=etsysPwaSystemGuestUsername, etsysPwaAuthSessionOctetsRxOverflow=etsysPwaAuthSessionOctetsRxOverflow, etsysPwaAuthSessionOctetsTxHc=etsysPwaAuthSessionOctetsTxHc, etsysPwaSessionGroup=etsysPwaSessionGroup, etsysPwaMIBCompliance=etsysPwaMIBCompliance, etsysPwaSystemEnhancedModeRefreshTime=etsysPwaSystemEnhancedModeRefreshTime, etsysPwaAuthQuietPeriod=etsysPwaAuthQuietPeriod, etsysPwaFailedAttemptsSinceLogon=etsysPwaFailedAttemptsSinceLogon, etsysPwaSystemAuthProtocol=etsysPwaSystemAuthProtocol, etsysPwaAuthStatusEntry=etsysPwaAuthStatusEntry, etsysPwaSystemAuthBanner=etsysPwaSystemAuthBanner, etsysPwaControlledPortControl=etsysPwaControlledPortControl)
