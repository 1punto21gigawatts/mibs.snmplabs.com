#
# PySNMP MIB module CISCOSB-POE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCOSB-POE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:23:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
switch001, = mibBuilder.importSymbols("CISCOSB-MIB", "switch001")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, MibIdentifier, Integer32, iso, TimeTicks, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter32, Counter64, Unsigned32, Gauge32, IpAddress, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "Integer32", "iso", "TimeTicks", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter32", "Counter64", "Unsigned32", "Gauge32", "IpAddress", "NotificationType")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
rlPoe = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108))
rlPoe.setRevisions(('2010-06-02 00:00', '2009-11-26 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: rlPoe.setRevisionsDescriptions(('The private MIB module definition for Power Over Ethernet.', 'Initial revision.',))
if mibBuilder.loadTexts: rlPoe.setLastUpdated('200911260000Z')
if mibBuilder.loadTexts: rlPoe.setOrganization('Cisco Small Business')
if mibBuilder.loadTexts: rlPoe.setContactInfo('Postal: 170 West Tasman Drive San Jose , CA 95134-1706 USA Website: Cisco Small Business Home http://www.cisco.com/smb>;, Cisco Small Business Support Community <http://www.cisco.com/go/smallbizsupport>')
if mibBuilder.loadTexts: rlPoe.setDescription('Add a new field in the PoE MIB to indicate Max power allocation allowed')
rlPethPsePortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 1), )
if mibBuilder.loadTexts: rlPethPsePortTable.setStatus('current')
if mibBuilder.loadTexts: rlPethPsePortTable.setDescription(' The table listing additional information for Power Over Ethernet ports.')
rlPethPsePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 1, 1), ).setIndexNames((0, "CISCOSB-POE-MIB", "rlPethPsePortGroupIndex"), (0, "CISCOSB-POE-MIB", "rlPethPsePortIndex"))
if mibBuilder.loadTexts: rlPethPsePortEntry.setStatus('current')
if mibBuilder.loadTexts: rlPethPsePortEntry.setDescription(' An entry in the rlPethPsePortTable.')
rlPethPsePortGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rlPethPsePortGroupIndex.setStatus('current')
if mibBuilder.loadTexts: rlPethPsePortGroupIndex.setDescription('This variable uniquely identifies the group containing the port to which a power Ethernet PSE is connected. Group means box in the stack, module in a rack and the value 1 MUST be used for non-modular devices. Furthermore, the same value MUST be used in this variable, pethMainPseGroupIndex, and pethNotificationControlGroupIndex to refer to a given box in a stack or module in the rack.')
rlPethPsePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rlPethPsePortIndex.setStatus('current')
if mibBuilder.loadTexts: rlPethPsePortIndex.setDescription('This variable uniquely identifies the power Ethernet PSE port within group pethPsePortGroupIndex to which the power Ethernet PSE entry is connected.')
rlPethPsePortOutputVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortOutputVoltage.setStatus('current')
if mibBuilder.loadTexts: rlPethPsePortOutputVoltage.setDescription('This variable indicates on the output voltage level in milli volts from rlPethPsePortIndex.')
rlPethPsePortOutputCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortOutputCurrent.setStatus('current')
if mibBuilder.loadTexts: rlPethPsePortOutputCurrent.setDescription('This variable indicates on the output current level in milli amper from rlPethPsePortIndex.')
rlPethPsePortOutputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortOutputPower.setStatus('current')
if mibBuilder.loadTexts: rlPethPsePortOutputPower.setDescription('This variable indicates on the output power level in milli watts from rlPethPsePortIndex.')
rlPethPsePortPowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPsePortPowerLimit.setStatus('current')
if mibBuilder.loadTexts: rlPethPsePortPowerLimit.setDescription('This variable indicates on the user configured power level in milli watts which is available from rlPethPsePortIndex.')
rlPethPsePortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortStatus.setStatus('current')
if mibBuilder.loadTexts: rlPethPsePortStatus.setDescription('This variable indicates on the hardware status of rlPethPsePortIndex.')
rlPethPsePortStatusDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortStatusDescription.setStatus('current')
if mibBuilder.loadTexts: rlPethPsePortStatusDescription.setDescription('This variable indicates the description of the hardware status of rlPethPsePortIndex.')
rlPethPsePortOperPowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortOperPowerLimit.setStatus('current')
if mibBuilder.loadTexts: rlPethPsePortOperPowerLimit.setDescription('This variable indicates the maximum power level in milli watts which is available from rlPethPsePortIndex.')
rlPethPsePortSupportPoePlus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortSupportPoePlus.setStatus('current')
if mibBuilder.loadTexts: rlPethPsePortSupportPoePlus.setDescription('This variable indicates if the port supports poe plus.')
rlPethPsePortTimeRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPsePortTimeRangeName.setStatus('current')
if mibBuilder.loadTexts: rlPethPsePortTimeRangeName.setDescription('This variable is used to bind PoE port to time range.')
rlPethPsePortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortOperStatus.setStatus('current')
if mibBuilder.loadTexts: rlPethPsePortOperStatus.setDescription('This Read-Only variable indicates PoE port current status affected by time range active/inactive and admin status.')
rlPethPsePortMaxPowerAllocAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortMaxPowerAllocAllowed.setStatus('current')
if mibBuilder.loadTexts: rlPethPsePortMaxPowerAllocAllowed.setDescription('This variable indicates the maximum power allocation allowed per port (including wire power loses) in milli-watts which is available from rlPethPsePortIndex.')
rlPethPsePortSupportPoe = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortSupportPoe.setStatus('current')
if mibBuilder.loadTexts: rlPethPsePortSupportPoe.setDescription('This variable indicates if the port is a poe port')
rlPethMainPseTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 2), )
if mibBuilder.loadTexts: rlPethMainPseTable.setStatus('current')
if mibBuilder.loadTexts: rlPethMainPseTable.setDescription(' The table listing additional read - only information for Power Over Ethernet.')
rlPethMainPseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 2, 1), ).setIndexNames((0, "CISCOSB-POE-MIB", "rlPethMainPseGroupIndex"))
if mibBuilder.loadTexts: rlPethMainPseEntry.setStatus('current')
if mibBuilder.loadTexts: rlPethMainPseEntry.setDescription(' An entry in the rlPethMainPseTable.')
rlPethMainPseGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rlPethMainPseGroupIndex.setStatus('current')
if mibBuilder.loadTexts: rlPethMainPseGroupIndex.setDescription('This variable uniquely identifies the group containing the port to which a power Ethernet PSE is connected. Group means box in the stack, module in a rack and the value 1 MUST be used for non-modular devices. Furthermore, the same value MUST be used in this variable, pethMainPseGroupIndex, and pethNotificationControlGroupIndex to refer to a given box in a stack or module in the rack.')
rlPethMainPseSwVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethMainPseSwVersion.setStatus('current')
if mibBuilder.loadTexts: rlPethMainPseSwVersion.setDescription('This variable identifies the MCU SW version.')
rlPethMainPseHwVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethMainPseHwVersion.setStatus('current')
if mibBuilder.loadTexts: rlPethMainPseHwVersion.setDescription('This variable identifies the MCU HW version.')
rlPethMainPseHwType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("enhanced", 1), ("plus", 2), ("auto", 3), ("nonPoe", 4), ("enhancedPlus", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethMainPseHwType.setStatus('current')
if mibBuilder.loadTexts: rlPethMainPseHwType.setDescription('This variable identifies the MCU HW type (enhanced, plus, none).')
rlPethMainPsePowerGuardBand = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethMainPsePowerGuardBand.setStatus('current')
if mibBuilder.loadTexts: rlPethMainPsePowerGuardBand.setDescription('This variable identifies the guard band in [W] for not connecting additional ports.')
rlPethPowerPseTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 3), )
if mibBuilder.loadTexts: rlPethPowerPseTable.setStatus('current')
if mibBuilder.loadTexts: rlPethPowerPseTable.setDescription(' The table listing additional read-write information for Power Over Ethernet.')
rlPethPowerPseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 3, 1), ).setIndexNames((0, "CISCOSB-POE-MIB", "rlPethPowerPseGroupIndex"))
if mibBuilder.loadTexts: rlPethPowerPseEntry.setStatus('current')
if mibBuilder.loadTexts: rlPethPowerPseEntry.setDescription(' An entry in the rlPethPowerPseTable.')
rlPethPowerPseGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: rlPethPowerPseGroupIndex.setStatus('current')
if mibBuilder.loadTexts: rlPethPowerPseGroupIndex.setDescription('This variable uniquely identifies the group containing the port to which a power Ethernet PSE is connected. Group means box in the stack, module in a rack and the value 1 MUST be used for non-modular devices. Furthermore, the same value MUST be used in this variable, PethPowerPseGroupIndex, and pethNotificationControlGroupIndex to refer to a given box in a stack or module in the rack.')
rlPethPowerPsePower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("ps1", 1), ("ps2", 2), ("ps3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPowerPsePower.setStatus('current')
if mibBuilder.loadTexts: rlPethPowerPsePower.setDescription('This variable identifies the maximum power in [W] supplied by PSE.')
rlPethPowerPseRpsPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("rps1", 1), ("rps2", 2), ("rps3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPowerPseRpsPower.setStatus('current')
if mibBuilder.loadTexts: rlPethPowerPseRpsPower.setDescription('This variable identifies the maximum power in [W] supplied by PSE + RPS.')
rlPethPowerPsePowerManagementMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 5, 6))).clone(namedValues=NamedValues(("portlimit", 0), ("classlimit", 5), ("maxlimit", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPowerPsePowerManagementMode.setStatus('current')
if mibBuilder.loadTexts: rlPethPowerPsePowerManagementMode.setDescription('This variable identifies power management mode.')
rlPethPowerPsedisconnectMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("lowestpriority", 0), ("nextport", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPowerPsedisconnectMethod.setStatus('current')
if mibBuilder.loadTexts: rlPethPowerPsedisconnectMethod.setDescription('This variable identifies disconnect method. ')
rlPethPowerPseTemperatureSensor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-200, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPowerPseTemperatureSensor.setStatus('current')
if mibBuilder.loadTexts: rlPethPowerPseTemperatureSensor.setDescription('This variable identifies the pd temperature sensor. ')
rlPethPowerPseInrushTestEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 108, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPowerPseInrushTestEnabled.setStatus('current')
if mibBuilder.loadTexts: rlPethPowerPseInrushTestEnabled.setDescription('This variable identifies if HW inrush test will be disabled. by default HW inrush test is enabled.')
mibBuilder.exportSymbols("CISCOSB-POE-MIB", rlPethPowerPseEntry=rlPethPowerPseEntry, rlPethPsePortTimeRangeName=rlPethPsePortTimeRangeName, rlPethPsePortMaxPowerAllocAllowed=rlPethPsePortMaxPowerAllocAllowed, rlPethPowerPsePowerManagementMode=rlPethPowerPsePowerManagementMode, rlPethPsePortStatus=rlPethPsePortStatus, rlPethPsePortOutputPower=rlPethPsePortOutputPower, rlPethMainPsePowerGuardBand=rlPethMainPsePowerGuardBand, rlPethPowerPsedisconnectMethod=rlPethPowerPsedisconnectMethod, rlPethPsePortGroupIndex=rlPethPsePortGroupIndex, rlPethPsePortOperPowerLimit=rlPethPsePortOperPowerLimit, rlPethMainPseSwVersion=rlPethMainPseSwVersion, rlPethPowerPsePower=rlPethPowerPsePower, rlPethPsePortOperStatus=rlPethPsePortOperStatus, rlPethMainPseEntry=rlPethMainPseEntry, rlPethMainPseGroupIndex=rlPethMainPseGroupIndex, rlPethMainPseHwType=rlPethMainPseHwType, rlPethPsePortOutputCurrent=rlPethPsePortOutputCurrent, rlPethPsePortEntry=rlPethPsePortEntry, rlPethPsePortTable=rlPethPsePortTable, rlPethMainPseTable=rlPethMainPseTable, rlPethPowerPseTemperatureSensor=rlPethPowerPseTemperatureSensor, rlPethPsePortSupportPoe=rlPethPsePortSupportPoe, PYSNMP_MODULE_ID=rlPoe, rlPethPowerPseGroupIndex=rlPethPowerPseGroupIndex, rlPethPsePortIndex=rlPethPsePortIndex, rlPethPsePortOutputVoltage=rlPethPsePortOutputVoltage, rlPethPowerPseTable=rlPethPowerPseTable, rlPethMainPseHwVersion=rlPethMainPseHwVersion, rlPethPowerPseInrushTestEnabled=rlPethPowerPseInrushTestEnabled, rlPethPowerPseRpsPower=rlPethPowerPseRpsPower, rlPoe=rlPoe, rlPethPsePortSupportPoePlus=rlPethPsePortSupportPoePlus, rlPethPsePortStatusDescription=rlPethPsePortStatusDescription, rlPethPsePortPowerLimit=rlPethPsePortPowerLimit)
