#
# PySNMP MIB module CISCO-RTTMON-RTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-RTTMON-RTP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:11:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
rttMonLatestOper, rttMonStats, rttMonCtrlAdminIndex = mibBuilder.importSymbols("CISCO-RTTMON-MIB", "rttMonLatestOper", "rttMonStats", "rttMonCtrlAdminIndex")
RttResponseSense, = mibBuilder.importSymbols("CISCO-RTTMON-TC-MIB", "RttResponseSense")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Bits, Counter32, TimeTicks, MibIdentifier, Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, ObjectIdentity, Gauge32, Unsigned32, ModuleIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "TimeTicks", "MibIdentifier", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "ObjectIdentity", "Gauge32", "Unsigned32", "ModuleIdentity", "Counter64")
TextualConvention, TimeStamp, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeStamp", "DisplayString")
ciscoRttMonRtpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 487))
ciscoRttMonRtpMIB.setRevisions(('2005-08-09 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoRttMonRtpMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoRttMonRtpMIB.setLastUpdated('200508090000Z')
if mibBuilder.loadTexts: ciscoRttMonRtpMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoRttMonRtpMIB.setContactInfo('Cisco Systems, Inc. Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 Tel: +1 800 553 NETS Email: cs-ipsla@cisco.com')
if mibBuilder.loadTexts: ciscoRttMonRtpMIB.setDescription('An extension to the CISCO-RTTMON-MIB for Cisco IP SLA RTP operation, Real-Time Transport Protocol(RFC 1889). This operation provides capability to measure voice quality metrics such as RTT (Round Trip Time), Jitter, MOS (Mean Opinion Score) scores by setting up RTP stream between two routers. In voice communications, particularly Internet telephony, MOS provides a numerical measure of the quality of human speech at the destination end of the circuit.')
ciscoRttMonRtpMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 487, 0))
ciscoRttMonRtpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 487, 1))
rttMonLatestRtpOperTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3), )
if mibBuilder.loadTexts: rttMonLatestRtpOperTable.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperTable.setDescription("A table which contains the status of latest RTP operation. Each conceptual row corresponds to a RTP operation defined in rttMonCtrlAdminTable and has same index as rttMonCtrlAdminTable. An entry in this table is created only if the rttMonCtrlAdminRttType is 'rtp', the rttMonEchoAdminProtocol is 'rtpAppl' and the rttMonEchoAdminTargetAddress is appropriately configured. The entry will start to collect data when the rttMonCtrlAdminStatus is moved into 'active' state. The entry will be removed when the corresponding rttMonCtrlAdminStatus is in 'destroy' state.")
rttMonLatestRtpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonCtrlAdminIndex"))
if mibBuilder.loadTexts: rttMonLatestRtpOperEntry.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperEntry.setDescription('An entry in RTP operation talbe. Each entry specifies the results and statistics for the latest RTP operation.')
rttMonLatestRtpOperRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperRTT.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperRTT.setDescription('Round trip time for RTP packet.')
rttMonLatestRtpOperIAJitterDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperIAJitterDS.setReference('Inter-arrival Jitter: RFC 1889')
if mibBuilder.loadTexts: rttMonLatestRtpOperIAJitterDS.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperIAJitterDS.setDescription('Inter-arrival Jitter at source for the latest operation.')
rttMonLatestRtpOperPacketLossDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperPacketLossDS.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperPacketLossDS.setDescription('Number of packets lost from destination to source for the latest operation.')
rttMonLatestRtpOperPacketLateDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperPacketLateDS.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperPacketLateDS.setDescription('Number of late packets at source for the latest operation.')
rttMonLatestRtpOperPacketEarlyDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperPacketEarlyDS.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperPacketEarlyDS.setDescription('Number of early packets at source for the latest operation.')
rttMonLatestRtpOperPacketOOSDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperPacketOOSDS.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperPacketOOSDS.setDescription('Number of out of sequence packets at source for the latest operation.')
rttMonLatestRtpOperFrameLossDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperFrameLossDS.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperFrameLossDS.setDescription('Number of CODEC frame loss events at source for latest operation.')
rttMonLatestRtpOperRFactorDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperRFactorDS.setReference('R-factor: ITU-T Recommendation G.107, The E-model, a computational model for use in transmission planning.')
if mibBuilder.loadTexts: rttMonLatestRtpOperRFactorDS.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperRFactorDS.setDescription('Computed value of R factor at source for latest operation.')
rttMonLatestRtpOperMOSCQDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperMOSCQDS.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperMOSCQDS.setDescription('Estimated Mean Opinion Score for conversational quality at source for latest operation.')
rttMonLatestRtpOperMOSLQDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperMOSLQDS.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperMOSLQDS.setDescription('Estimated Mean Opinion Score for listening quality at source for latest operation.')
rttMonLatestRtpOperSense = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 11), RttResponseSense()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperSense.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperSense.setDescription('An application specific sense code for the completion status of the latest operation.')
rttMonLatestRtpErrorSenseDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpErrorSenseDescription.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpErrorSenseDescription.setDescription('An sense description for the completion status of the latest RTP operation. ')
rttMonLatestRtpOperIAJitterSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 13), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperIAJitterSD.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperIAJitterSD.setDescription('Inter-arrival jitter at destination for latest operation.')
rttMonLatestRtpOperPacketLossSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 14), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperPacketLossSD.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperPacketLossSD.setDescription('Number of packets lost from source to destination for latest operation.')
rttMonLatestRtpOperPacketsMIA = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 15), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperPacketsMIA.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperPacketsMIA.setDescription('Number of packets missing in action while measuring statistics in source to destination direction')
rttMonLatestRtpOperRFactorSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperRFactorSD.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperRFactorSD.setDescription('Estimated value of R-factor at destination for latest operation.')
rttMonLatestRtpOperMOSCQSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 17), Gauge32()).setUnits('voice quality').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperMOSCQSD.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperMOSCQSD.setDescription('Estimated mean opinion score for conversational quality at destination for latest operation.')
rttMonLatestRtpOperMinOWSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 18), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperMinOWSD.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperMinOWSD.setDescription('Minimum one way latency value in source to destination direction.')
rttMonLatestRtpOperMaxOWSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 19), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperMaxOWSD.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperMaxOWSD.setDescription('Maximum one way latency value in source to destination direction.')
rttMonLatestRtpOperAvgOWSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 20), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperAvgOWSD.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperAvgOWSD.setDescription('Average one way latency value in source to destination direction.')
rttMonLatestRtpOperMinOWDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 21), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperMinOWDS.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperMinOWDS.setDescription('Minimum one way latency value in destination to source direction.')
rttMonLatestRtpOperMaxOWDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 22), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperMaxOWDS.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperMaxOWDS.setDescription('Maximum one way latency value in destination to source direction.')
rttMonLatestRtpOperAvgOWDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 23), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperAvgOWDS.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperAvgOWDS.setDescription('Average one way latency value in destination to source direction')
rttMonLatestRtpOperTotalPaksSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 24), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperTotalPaksSD.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperTotalPaksSD.setDescription('Total number of packets sent in source to destination direction')
rttMonLatestRtpOperTotalPaksDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 3, 1, 25), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRtpOperTotalPaksDS.setStatus('current')
if mibBuilder.loadTexts: rttMonLatestRtpOperTotalPaksDS.setDescription('Total number of packets sent in destination to source direction')
rttMonRtpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6), )
if mibBuilder.loadTexts: rttMonRtpStatsTable.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsTable.setDescription("The table is for RTP operation statistics. It contains summarized information of the results for one RTP operation. A rolling accumulated history of this information is maintained in a series of hourly 'group(s)'. The operation of this table is same as that of rttMonStatsCaptureTable, except that this table will store 2 hours of data. It is a rollover table. When rttMonRtpStatsStartTimeIndex groups exceeds the rttMonStatisticsAdminNumHourGroups value, the oldest corresponding hourly group will be deleted and will be replaced with the new rttMonRtpStatsStartTimeIndex hourly group.")
rttMonRtpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonCtrlAdminIndex"), (0, "CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsStartTimeIndex"))
if mibBuilder.loadTexts: rttMonRtpStatsEntry.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsEntry.setDescription("A list of objects which accumulate the results of a series of RTP operations over a 60 minute time period or a time period stored in rttMonScheduleAdminRttLife, whichever is smaller. This entry is created only if the rttMonCtrlAdminRttType is 'rtp'.")
rttMonRtpStatsStartTimeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 1), TimeStamp())
if mibBuilder.loadTexts: rttMonRtpStatsStartTimeIndex.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsStartTimeIndex.setDescription('The time when this row was created.')
rttMonRtpStatsRTTAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 2), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsRTTAvg.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsRTTAvg.setDescription('Average Round trip time.')
rttMonRtpStatsRTTMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 3), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsRTTMin.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsRTTMin.setDescription('Minimum Round trip time.')
rttMonRtpStatsRTTMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 4), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsRTTMax.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsRTTMax.setDescription('Maximum Round trip time.')
rttMonRtpStatsIAJitterDSAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 5), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsIAJitterDSAvg.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsIAJitterDSAvg.setDescription('Average of inter-arrival jitter at source.')
rttMonRtpStatsIAJitterDSMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 6), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsIAJitterDSMin.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsIAJitterDSMin.setDescription('Minimum of inter-arrival jitter at source.')
rttMonRtpStatsIAJitterDSMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 7), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsIAJitterDSMax.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsIAJitterDSMax.setDescription('Maximum of inter-arrival jitter at source.')
rttMonRtpStatsPacketLossDSAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 8), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsPacketLossDSAvg.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsPacketLossDSAvg.setDescription('Average number of packets lost from destination to source.')
rttMonRtpStatsPacketLossDSMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 9), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsPacketLossDSMin.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsPacketLossDSMin.setDescription('Minimum number of packets lost from destination to source.')
rttMonRtpStatsPacketLossDSMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 10), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsPacketLossDSMax.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsPacketLossDSMax.setDescription('Maximum number of packets lost from destination to source.')
rttMonRtpStatsPacketLateDSAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 11), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsPacketLateDSAvg.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsPacketLateDSAvg.setDescription('Average number of late packets at source.')
rttMonRtpStatsPacketEarlyDSAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 12), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsPacketEarlyDSAvg.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsPacketEarlyDSAvg.setDescription('Average number of early packets at source.')
rttMonRtpStatsPacketOOSDSAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 13), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsPacketOOSDSAvg.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsPacketOOSDSAvg.setDescription('Average number of out of sequence packets at source.')
rttMonRtpStatsFrameLossDSAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 14), Gauge32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsFrameLossDSAvg.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsFrameLossDSAvg.setDescription('Average Number of Codec Frame loss events at Source.')
rttMonRtpStatsFrameLossDSMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 15), Gauge32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsFrameLossDSMin.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsFrameLossDSMin.setDescription('Minimum Number of Codec Frame loss events at Source.')
rttMonRtpStatsFrameLossDSMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 16), Gauge32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsFrameLossDSMax.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsFrameLossDSMax.setDescription('Maximum number of Codec Frame loss events at Source.')
rttMonRtpStatsRFactorDSAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 17), Gauge32()).setUnits('voice quality').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsRFactorDSAvg.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsRFactorDSAvg.setDescription('Average Computed value of R factor at Source.')
rttMonRtpStatsRFactorDSMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 18), Gauge32()).setUnits('voice quality').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsRFactorDSMin.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsRFactorDSMin.setDescription('Minimum Computed value of R factor at Source.')
rttMonRtpStatsRFactorDSMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 19), Gauge32()).setUnits('voice quality').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsRFactorDSMax.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsRFactorDSMax.setDescription('Maximum Computed value of R factor at Source.')
rttMonRtpStatsMOSCQDSAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 20), Gauge32()).setUnits('voice quality').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsMOSCQDSAvg.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsMOSCQDSAvg.setDescription('Average Estimated Mean Opinion Score for conversational quality at Source.')
rttMonRtpStatsMOSCQDSMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 21), Gauge32()).setUnits('voice quality').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsMOSCQDSMin.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsMOSCQDSMin.setDescription('Minimum Estimated Mean Opinion Score for conversational quality at Source.')
rttMonRtpStatsMOSCQDSMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 22), Gauge32()).setUnits('voice quality').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsMOSCQDSMax.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsMOSCQDSMax.setDescription('Maximum Estimated Mean Opinion Score for conversational quality at Source.')
rttMonRtpStatsMOSLQDSAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 23), Gauge32()).setUnits('voice quality').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsMOSLQDSAvg.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsMOSLQDSAvg.setDescription('Average Estimated Mean Opinion Score for listening quality at Source.')
rttMonRtpStatsMOSLQDSMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 24), Gauge32()).setUnits('voice quality').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsMOSLQDSMin.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsMOSLQDSMin.setDescription('Minimum Estimated Mean Opinion Score for listening quality at Source.')
rttMonRtpStatsMOSLQDSMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 25), Gauge32()).setUnits('voice quality').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsMOSLQDSMax.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsMOSLQDSMax.setDescription('Maximum Estimated Mean Opinion Score for listening quality at Source.')
rttMonRtpStatsIAJitterSDAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 26), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsIAJitterSDAvg.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsIAJitterSDAvg.setDescription('Average of inter-arrival jitter at destination.')
rttMonRtpStatsIAJitterSDMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 27), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsIAJitterSDMin.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsIAJitterSDMin.setDescription('Minimum of inter-arrival jitter at destination.')
rttMonRtpStatsIAJitterSDMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 28), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsIAJitterSDMax.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsIAJitterSDMax.setDescription('Maximum of inter-arrival jitter at destination.')
rttMonRtpStatsPacketLossSDAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 29), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsPacketLossSDAvg.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsPacketLossSDAvg.setDescription('Average number of packets lost from source to destination.')
rttMonRtpStatsPacketLossSDMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 30), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsPacketLossSDMin.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsPacketLossSDMin.setDescription('Minimum number of packets lost from source to destination.')
rttMonRtpStatsPacketLossSDMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 31), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsPacketLossSDMax.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsPacketLossSDMax.setDescription('Maximum number of packets lost from source to destination.')
rttMonRtpStatsPacketsMIAAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 32), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsPacketsMIAAvg.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsPacketsMIAAvg.setDescription("Average number of lost packets whose loss direction couldn't be determined.")
rttMonRtpStatsRFactorSDAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 33), Gauge32()).setUnits('voice quality').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsRFactorSDAvg.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsRFactorSDAvg.setDescription('Average estimated value of R-factor at destination.')
rttMonRtpStatsRFactorSDMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 34), Gauge32()).setUnits('voice quality').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsRFactorSDMin.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsRFactorSDMin.setDescription('Minimum estimated value of R-factor at destination.')
rttMonRtpStatsRFactorSDMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 35), Gauge32()).setUnits('voice quality').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsRFactorSDMax.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsRFactorSDMax.setDescription('Maximum estimated value of R-factor at destination.')
rttMonRtpStatsMOSCQSDAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 36), Gauge32()).setUnits('voice quality').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsMOSCQSDAvg.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsMOSCQSDAvg.setDescription('Average estimated mean opinion score for conversational quality at destination.')
rttMonRtpStatsMOSCQSDMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 37), Gauge32()).setUnits('voice quality').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsMOSCQSDMin.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsMOSCQSDMin.setDescription('Minimum estimated mean opinion score for conversational quality at destination.')
rttMonRtpStatsMOSCQSDMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 39), Gauge32()).setUnits('voice quality').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsMOSCQSDMax.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsMOSCQSDMax.setDescription('Maximum estimated mean opinion score for conversational quality at destination.')
rttMonRtpStatsOperAvgOWSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 40), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsOperAvgOWSD.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsOperAvgOWSD.setDescription('Average one way latency value from source to destination')
rttMonRtpStatsOperMinOWSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 41), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsOperMinOWSD.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsOperMinOWSD.setDescription('Minimum one way latency value from source to destination')
rttMonRtpStatsOperMaxOWSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 42), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsOperMaxOWSD.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsOperMaxOWSD.setDescription('Maximum one way latency value from source to destination')
rttMonRtpStatsOperAvgOWDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 43), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsOperAvgOWDS.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsOperAvgOWDS.setDescription('Average one way latency value from destination to source')
rttMonRtpStatsOperMinOWDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 44), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsOperMinOWDS.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsOperMinOWDS.setDescription('Minimum one way latency value from destination to source')
rttMonRtpStatsOperMaxOWDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 45), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsOperMaxOWDS.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsOperMaxOWDS.setDescription('Maximum one way latency value from destination to source')
rttMonRtpStatsTotalPacketsSDAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 46), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsTotalPacketsSDAvg.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsTotalPacketsSDAvg.setDescription('Average number of packets sent from source to destination')
rttMonRtpStatsTotalPacketsSDMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 47), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsTotalPacketsSDMin.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsTotalPacketsSDMin.setDescription('Minimum number of packets sent from source to destination')
rttMonRtpStatsTotalPacketsSDMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 48), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsTotalPacketsSDMax.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsTotalPacketsSDMax.setDescription('Maximum number of packets sent from source to destination')
rttMonRtpStatsTotalPacketsDSAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 49), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsTotalPacketsDSAvg.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsTotalPacketsDSAvg.setDescription('Average number of packets sent from destination to source')
rttMonRtpStatsTotalPacketsDSMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 50), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsTotalPacketsDSMax.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsTotalPacketsDSMax.setDescription('Maximum number of packets sent from destination to source')
rttMonRtpStatsTotalPacketsDSMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 6, 1, 51), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonRtpStatsTotalPacketsDSMin.setStatus('current')
if mibBuilder.loadTexts: rttMonRtpStatsTotalPacketsDSMin.setDescription('Minimum number of packets sent from destination to source')
ciscoRttMonRtpMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 487, 2))
ciscoRttMonRtpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 487, 2, 1))
ciscoRttMonRtpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 487, 2, 2))
ciscoRttMonRtpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 487, 2, 1, 1)).setObjects(("CISCO-RTTMON-RTP-MIB", "ciscoRttMonRtpGroup"), ("CISCO-RTTMON-RTP-MIB", "ciscoRttMonRtpGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRttMonRtpMIBCompliance = ciscoRttMonRtpMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoRttMonRtpMIBCompliance.setDescription('The compliance statement for new MIB extensions for (1) Rtp operation and statistics')
ciscoRttMonRtpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 487, 2, 2, 1)).setObjects(("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperRTT"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperIAJitterDS"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperPacketLossDS"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperPacketLateDS"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperPacketEarlyDS"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperPacketOOSDS"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperFrameLossDS"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperRFactorDS"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperMOSCQDS"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperMOSLQDS"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperSense"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpErrorSenseDescription"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsRTTAvg"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsRTTMin"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsRTTMax"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsIAJitterDSAvg"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsIAJitterDSMin"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsIAJitterDSMax"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsPacketLossDSAvg"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsPacketLossDSMin"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsPacketLossDSMax"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsPacketLateDSAvg"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsPacketEarlyDSAvg"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsPacketOOSDSAvg"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsFrameLossDSAvg"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsFrameLossDSMin"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsFrameLossDSMax"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsRFactorDSAvg"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsRFactorDSMin"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsRFactorDSMax"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsMOSCQDSAvg"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsMOSCQDSMin"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsMOSCQDSMax"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsMOSLQDSAvg"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsMOSLQDSMin"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsMOSLQDSMax"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRttMonRtpGroup = ciscoRttMonRtpGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoRttMonRtpGroup.setDescription('A collection of objects related to the statistics for RTP operation.')
ciscoRttMonRtpGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 487, 2, 2, 2)).setObjects(("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperIAJitterSD"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperPacketLossSD"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperPacketsMIA"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperRFactorSD"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperMOSCQSD"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperMinOWSD"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperMaxOWSD"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperAvgOWSD"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperMinOWDS"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperMaxOWDS"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperAvgOWDS"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperTotalPaksSD"), ("CISCO-RTTMON-RTP-MIB", "rttMonLatestRtpOperTotalPaksDS"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsIAJitterSDAvg"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsIAJitterSDMin"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsIAJitterSDMax"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsPacketLossSDAvg"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsPacketLossSDMin"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsPacketLossSDMax"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsPacketsMIAAvg"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsRFactorSDAvg"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsRFactorSDMin"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsRFactorSDMax"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsMOSCQSDAvg"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsMOSCQSDMin"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsMOSCQSDMax"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsOperAvgOWSD"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsOperMinOWSD"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsOperMaxOWSD"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsOperAvgOWDS"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsOperMinOWDS"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsOperMaxOWDS"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsTotalPacketsSDAvg"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsTotalPacketsSDMin"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsTotalPacketsSDMax"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsTotalPacketsDSAvg"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsTotalPacketsDSMin"), ("CISCO-RTTMON-RTP-MIB", "rttMonRtpStatsTotalPacketsDSMax"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRttMonRtpGroupRev1 = ciscoRttMonRtpGroupRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoRttMonRtpGroupRev1.setDescription('A collection of objects related to the Source to Destination statistics for RTP Operation.')
mibBuilder.exportSymbols("CISCO-RTTMON-RTP-MIB", rttMonRtpStatsMOSCQSDMin=rttMonRtpStatsMOSCQSDMin, rttMonLatestRtpOperIAJitterSD=rttMonLatestRtpOperIAJitterSD, rttMonRtpStatsRFactorSDAvg=rttMonRtpStatsRFactorSDAvg, rttMonRtpStatsPacketLossSDMin=rttMonRtpStatsPacketLossSDMin, rttMonLatestRtpOperPacketEarlyDS=rttMonLatestRtpOperPacketEarlyDS, rttMonRtpStatsOperMinOWDS=rttMonRtpStatsOperMinOWDS, rttMonRtpStatsIAJitterDSMin=rttMonRtpStatsIAJitterDSMin, rttMonRtpStatsIAJitterDSMax=rttMonRtpStatsIAJitterDSMax, ciscoRttMonRtpMIBConformance=ciscoRttMonRtpMIBConformance, rttMonRtpStatsRFactorDSMax=rttMonRtpStatsRFactorDSMax, rttMonLatestRtpOperMinOWSD=rttMonLatestRtpOperMinOWSD, ciscoRttMonRtpGroup=ciscoRttMonRtpGroup, rttMonRtpStatsTotalPacketsSDMax=rttMonRtpStatsTotalPacketsSDMax, rttMonLatestRtpOperAvgOWSD=rttMonLatestRtpOperAvgOWSD, rttMonLatestRtpOperSense=rttMonLatestRtpOperSense, rttMonLatestRtpOperRFactorDS=rttMonLatestRtpOperRFactorDS, rttMonRtpStatsPacketLossDSMin=rttMonRtpStatsPacketLossDSMin, rttMonLatestRtpOperRTT=rttMonLatestRtpOperRTT, ciscoRttMonRtpMIBObjects=ciscoRttMonRtpMIBObjects, PYSNMP_MODULE_ID=ciscoRttMonRtpMIB, rttMonRtpStatsMOSCQDSMax=rttMonRtpStatsMOSCQDSMax, rttMonLatestRtpOperMaxOWSD=rttMonLatestRtpOperMaxOWSD, rttMonRtpStatsPacketLossDSAvg=rttMonRtpStatsPacketLossDSAvg, rttMonLatestRtpOperTotalPaksSD=rttMonLatestRtpOperTotalPaksSD, rttMonRtpStatsFrameLossDSMax=rttMonRtpStatsFrameLossDSMax, rttMonLatestRtpOperPacketLossDS=rttMonLatestRtpOperPacketLossDS, ciscoRttMonRtpGroupRev1=ciscoRttMonRtpGroupRev1, rttMonRtpStatsRFactorDSMin=rttMonRtpStatsRFactorDSMin, rttMonRtpStatsPacketLossDSMax=rttMonRtpStatsPacketLossDSMax, rttMonLatestRtpOperRFactorSD=rttMonLatestRtpOperRFactorSD, rttMonLatestRtpOperPacketsMIA=rttMonLatestRtpOperPacketsMIA, rttMonRtpStatsIAJitterSDMin=rttMonRtpStatsIAJitterSDMin, rttMonRtpStatsTotalPacketsDSMax=rttMonRtpStatsTotalPacketsDSMax, rttMonRtpStatsMOSLQDSMin=rttMonRtpStatsMOSLQDSMin, ciscoRttMonRtpMIBGroups=ciscoRttMonRtpMIBGroups, rttMonRtpStatsMOSCQDSAvg=rttMonRtpStatsMOSCQDSAvg, rttMonRtpStatsPacketEarlyDSAvg=rttMonRtpStatsPacketEarlyDSAvg, rttMonLatestRtpOperTable=rttMonLatestRtpOperTable, rttMonRtpStatsPacketsMIAAvg=rttMonRtpStatsPacketsMIAAvg, rttMonLatestRtpOperMOSCQSD=rttMonLatestRtpOperMOSCQSD, ciscoRttMonRtpMIBNotifs=ciscoRttMonRtpMIBNotifs, rttMonRtpStatsPacketLossSDAvg=rttMonRtpStatsPacketLossSDAvg, rttMonRtpStatsPacketLossSDMax=rttMonRtpStatsPacketLossSDMax, rttMonLatestRtpOperEntry=rttMonLatestRtpOperEntry, rttMonRtpStatsFrameLossDSAvg=rttMonRtpStatsFrameLossDSAvg, rttMonRtpStatsMOSLQDSMax=rttMonRtpStatsMOSLQDSMax, rttMonRtpStatsRFactorSDMin=rttMonRtpStatsRFactorSDMin, rttMonRtpStatsRTTMin=rttMonRtpStatsRTTMin, rttMonRtpStatsRFactorDSAvg=rttMonRtpStatsRFactorDSAvg, rttMonRtpStatsTable=rttMonRtpStatsTable, rttMonRtpStatsOperMaxOWSD=rttMonRtpStatsOperMaxOWSD, rttMonRtpStatsMOSLQDSAvg=rttMonRtpStatsMOSLQDSAvg, rttMonLatestRtpOperIAJitterDS=rttMonLatestRtpOperIAJitterDS, rttMonRtpStatsIAJitterSDMax=rttMonRtpStatsIAJitterSDMax, rttMonLatestRtpOperMaxOWDS=rttMonLatestRtpOperMaxOWDS, ciscoRttMonRtpMIBCompliances=ciscoRttMonRtpMIBCompliances, rttMonLatestRtpOperTotalPaksDS=rttMonLatestRtpOperTotalPaksDS, rttMonRtpStatsMOSCQSDMax=rttMonRtpStatsMOSCQSDMax, rttMonRtpStatsTotalPacketsSDAvg=rttMonRtpStatsTotalPacketsSDAvg, rttMonRtpStatsRFactorSDMax=rttMonRtpStatsRFactorSDMax, rttMonRtpStatsMOSCQDSMin=rttMonRtpStatsMOSCQDSMin, rttMonRtpStatsMOSCQSDAvg=rttMonRtpStatsMOSCQSDAvg, rttMonRtpStatsOperAvgOWSD=rttMonRtpStatsOperAvgOWSD, rttMonRtpStatsRTTAvg=rttMonRtpStatsRTTAvg, rttMonRtpStatsOperAvgOWDS=rttMonRtpStatsOperAvgOWDS, rttMonLatestRtpOperPacketLossSD=rttMonLatestRtpOperPacketLossSD, rttMonLatestRtpOperAvgOWDS=rttMonLatestRtpOperAvgOWDS, ciscoRttMonRtpMIBCompliance=ciscoRttMonRtpMIBCompliance, rttMonLatestRtpOperMOSCQDS=rttMonLatestRtpOperMOSCQDS, rttMonRtpStatsIAJitterDSAvg=rttMonRtpStatsIAJitterDSAvg, rttMonRtpStatsTotalPacketsDSMin=rttMonRtpStatsTotalPacketsDSMin, rttMonRtpStatsRTTMax=rttMonRtpStatsRTTMax, rttMonRtpStatsTotalPacketsDSAvg=rttMonRtpStatsTotalPacketsDSAvg, rttMonRtpStatsFrameLossDSMin=rttMonRtpStatsFrameLossDSMin, ciscoRttMonRtpMIB=ciscoRttMonRtpMIB, rttMonLatestRtpOperPacketOOSDS=rttMonLatestRtpOperPacketOOSDS, rttMonRtpStatsEntry=rttMonRtpStatsEntry, rttMonLatestRtpErrorSenseDescription=rttMonLatestRtpErrorSenseDescription, rttMonRtpStatsOperMinOWSD=rttMonRtpStatsOperMinOWSD, rttMonRtpStatsStartTimeIndex=rttMonRtpStatsStartTimeIndex, rttMonRtpStatsIAJitterSDAvg=rttMonRtpStatsIAJitterSDAvg, rttMonLatestRtpOperPacketLateDS=rttMonLatestRtpOperPacketLateDS, rttMonLatestRtpOperMOSLQDS=rttMonLatestRtpOperMOSLQDS, rttMonLatestRtpOperFrameLossDS=rttMonLatestRtpOperFrameLossDS, rttMonLatestRtpOperMinOWDS=rttMonLatestRtpOperMinOWDS, rttMonRtpStatsPacketOOSDSAvg=rttMonRtpStatsPacketOOSDSAvg, rttMonRtpStatsPacketLateDSAvg=rttMonRtpStatsPacketLateDSAvg, rttMonRtpStatsTotalPacketsSDMin=rttMonRtpStatsTotalPacketsSDMin, rttMonRtpStatsOperMaxOWDS=rttMonRtpStatsOperMaxOWDS)
