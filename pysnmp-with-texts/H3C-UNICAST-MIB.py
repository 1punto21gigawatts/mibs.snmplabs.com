#
# PySNMP MIB module H3C-UNICAST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-UNICAST-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:24:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
h3cCommon, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cCommon")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Integer32, iso, TimeTicks, NotificationType, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ObjectIdentity, Bits, ModuleIdentity, IpAddress, Gauge32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "iso", "TimeTicks", "NotificationType", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ObjectIdentity", "Bits", "ModuleIdentity", "IpAddress", "Gauge32", "Counter64")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
h3cUnicast = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 44))
h3cUnicast.setRevisions(('2005-03-24 14:54',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: h3cUnicast.setRevisionsDescriptions((' Revisions made by Hangzhou MIB team.',))
if mibBuilder.loadTexts: h3cUnicast.setLastUpdated('200501311454Z')
if mibBuilder.loadTexts: h3cUnicast.setOrganization('Huawei 3com Technologies Co.,Ltd')
if mibBuilder.loadTexts: h3cUnicast.setContactInfo('Platform Team Hangzhou Institute Huawei-3Com Tech, Inc.')
if mibBuilder.loadTexts: h3cUnicast.setDescription(' This MIB is a framework MIB for unicast related features.')
h3cURPFTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 44, 1), )
if mibBuilder.loadTexts: h3cURPFTable.setStatus('current')
if mibBuilder.loadTexts: h3cURPFTable.setDescription(' Unicast Reverse Path Forwarding (URPF) is used to prevent the network attacks caused by source address spoofing. This table is used to configure URPF on specific interfaces.')
h3cURPFEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 44, 1, 1), ).setIndexNames((0, "H3C-UNICAST-MIB", "h3cURPFIfIndex"))
if mibBuilder.loadTexts: h3cURPFEntry.setStatus('current')
if mibBuilder.loadTexts: h3cURPFEntry.setDescription(' The entry of h3cURPFTable, indexed by vlan interface index.')
h3cURPFIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 44, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cURPFIfIndex.setStatus('current')
if mibBuilder.loadTexts: h3cURPFIfIndex.setDescription(' The ifIndex of vlan interface.')
h3cURPFEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 44, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cURPFEnabled.setStatus('current')
if mibBuilder.loadTexts: h3cURPFEnabled.setDescription(' This object is used to enable or disable URPF on certain vlan interfaces.')
h3cURPFSlotID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 44, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cURPFSlotID.setStatus('current')
if mibBuilder.loadTexts: h3cURPFSlotID.setDescription(' This object specifies to which slot packets are redirected in order to perform URPF check.')
h3cURPFTotalReceivedPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 44, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cURPFTotalReceivedPacket.setStatus('current')
if mibBuilder.loadTexts: h3cURPFTotalReceivedPacket.setDescription(' This object provides total received packets number.')
h3cURPFDroppedPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 44, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cURPFDroppedPacket.setStatus('current')
if mibBuilder.loadTexts: h3cURPFDroppedPacket.setDescription(' This object provides total dropped invalid packets number.')
h3cURPFClearStat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 44, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("reserved", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cURPFClearStat.setStatus('current')
if mibBuilder.loadTexts: h3cURPFClearStat.setDescription(' This object is used to clear the URPF statistics on certain vlan interfaces. This object is actually a write-only object. When read, it always returns 0. When set to 1, the objects h3cURPFTotalReceivedPacket and h3cURPFDroppedPacket are reset to 0.')
mibBuilder.exportSymbols("H3C-UNICAST-MIB", h3cURPFSlotID=h3cURPFSlotID, h3cURPFEnabled=h3cURPFEnabled, h3cURPFClearStat=h3cURPFClearStat, h3cURPFTable=h3cURPFTable, h3cURPFEntry=h3cURPFEntry, h3cURPFTotalReceivedPacket=h3cURPFTotalReceivedPacket, h3cUnicast=h3cUnicast, h3cURPFIfIndex=h3cURPFIfIndex, h3cURPFDroppedPacket=h3cURPFDroppedPacket, PYSNMP_MODULE_ID=h3cUnicast)
