#
# PySNMP MIB module TERAWAVE-terabridge-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TERAWAVE-terabridge-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:16:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, IpAddress, Counter64, NotificationType, iso, TimeTicks, MibIdentifier, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Gauge32, Integer32, Counter32, enterprises, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "IpAddress", "Counter64", "NotificationType", "iso", "TimeTicks", "MibIdentifier", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Gauge32", "Integer32", "Counter32", "enterprises", "Unsigned32")
DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention")
terawave = MibIdentifier((1, 3, 6, 1, 4, 1, 4513))
tera1dBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 4513, 3))
teraDot1dStpTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 3, 1), )
if mibBuilder.loadTexts: teraDot1dStpTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStpTable.setDescription(' table teraDot1dStpTable')
teraDot1dStpTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 3, 1, 1), ).setIndexNames((0, "TERAWAVE-terabridge-MIB", "teraStpId"))
if mibBuilder.loadTexts: teraDot1dStpTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStpTableEntry.setDescription(' table entry teraDot1dStpTableEntry ')
teraStpId = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraStpId.setStatus('mandatory')
if mibBuilder.loadTexts: teraStpId.setDescription('')
teraDot1dStpProtocolSpecification = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("decLb100", 2), ("ieee8021d", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dStpProtocolSpecification.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStpProtocolSpecification.setDescription('')
teraDot1dStpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDot1dStpPriority.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStpPriority.setDescription('')
teraDot1dStpTimeSinceTopologyChange = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dStpTimeSinceTopologyChange.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStpTimeSinceTopologyChange.setDescription('')
teraDot1dStpTopChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dStpTopChanges.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStpTopChanges.setDescription('')
teraDot1dStpDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 1, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dStpDesignatedRoot.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStpDesignatedRoot.setDescription('')
teraDot1dStpRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dStpRootCost.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStpRootCost.setDescription('')
teraDot1dStpRootPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dStpRootPort.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStpRootPort.setDescription('')
teraDot1dStpMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 1, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dStpMaxAge.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStpMaxAge.setDescription('')
teraDot1dStpHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 1, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dStpHelloTime.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStpHelloTime.setDescription('')
teraDot1dStpHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 1, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dStpHoldTime.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStpHoldTime.setDescription('')
teraDot1dStpForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 1, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dStpForwardDelay.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStpForwardDelay.setDescription('')
teraDot1dStpBridgeMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 1, 1, 13), TimeTicks().subtype(subtypeSpec=ValueRangeConstraint(600, 4000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDot1dStpBridgeMaxAge.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStpBridgeMaxAge.setDescription('')
teraDot1dStpBridgeHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 1, 1, 14), TimeTicks().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDot1dStpBridgeHelloTime.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStpBridgeHelloTime.setDescription('')
teraDot1dStpBridgeForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 1, 1, 15), TimeTicks().subtype(subtypeSpec=ValueRangeConstraint(400, 3000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDot1dStpBridgeForwardDelay.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStpBridgeForwardDelay.setDescription('')
teraDot1dStpBridgeGroupList = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 1, 1, 16), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDot1dStpBridgeGroupList.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStpBridgeGroupList.setDescription('')
teraDot1dStpState = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ok", 1), ("delete", 2), ("unknown", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDot1dStpState.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStpState.setDescription('')
teraBridgePVCPortTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 3, 3), )
if mibBuilder.loadTexts: teraBridgePVCPortTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraBridgePVCPortTable.setDescription(' table teraBridgePVCPortTable')
teraBridgePVCPortTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 3, 3, 1), ).setIndexNames((0, "TERAWAVE-terabridge-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: teraBridgePVCPortTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraBridgePVCPortTableEntry.setDescription(' table entry teraBridgePVCPortTableEntry ')
teraBridgeEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("raw", 1), ("llcBrNoFCS", 2), ("vcMuxBrNoFCS", 3), ("other", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraBridgeEncapsulation.setStatus('mandatory')
if mibBuilder.loadTexts: teraBridgeEncapsulation.setDescription('')
teraBridgePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraBridgePriority.setStatus('mandatory')
if mibBuilder.loadTexts: teraBridgePriority.setDescription('')
teraPVCPortLocalHostFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraPVCPortLocalHostFilter.setStatus('mandatory')
if mibBuilder.loadTexts: teraPVCPortLocalHostFilter.setDescription('')
teraPVCPortTrunkFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sendOnlyUntagged", 1), ("sendOnlyVlanTagged", 2), ("sendAll", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraPVCPortTrunkFrameType.setStatus('mandatory')
if mibBuilder.loadTexts: teraPVCPortTrunkFrameType.setDescription('')
teraPVCPortTrunkTagSwap = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraPVCPortTrunkTagSwap.setStatus('mandatory')
if mibBuilder.loadTexts: teraPVCPortTrunkTagSwap.setDescription('')
teraDot1dTpPortTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 3, 4), )
if mibBuilder.loadTexts: teraDot1dTpPortTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dTpPortTable.setDescription(' table teraDot1dTpPortTable')
teraDot1dTpPortTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 3, 4, 1), ).setIndexNames((0, "TERAWAVE-terabridge-MIB", "teraDot1dTpPort"))
if mibBuilder.loadTexts: teraDot1dTpPortTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dTpPortTableEntry.setDescription(' table entry teraDot1dTpPortTableEntry ')
teraDot1dTpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dTpPort.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dTpPort.setDescription('')
teraDot1dFFType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("static", 1), ("combined", 2), ("dynamic", 3), ("vlanTag", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDot1dFFType.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dFFType.setDescription('')
teraDot1dLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("terminal", 1), ("facility", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDot1dLoopback.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dLoopback.setDescription('')
teraDot1dTpUseDefaultFwd = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDot1dTpUseDefaultFwd.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dTpUseDefaultFwd.setDescription('')
teraDot1dTpDefaultFwdPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 89))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDot1dTpDefaultFwdPort.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dTpDefaultFwdPort.setDescription('')
teraDot1dStaticTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 3, 5), )
if mibBuilder.loadTexts: teraDot1dStaticTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStaticTable.setDescription(' table teraDot1dStaticTable')
teraDot1dStaticTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 3, 5, 1), ).setIndexNames((0, "TERAWAVE-terabridge-MIB", "teraDot1dStaticReceivePort"), (0, "TERAWAVE-terabridge-MIB", "teraDot1dStaticAddress"))
if mibBuilder.loadTexts: teraDot1dStaticTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStaticTableEntry.setDescription(' table entry teraDot1dStaticTableEntry ')
teraDot1dStaticReceivePort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dStaticReceivePort.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStaticReceivePort.setDescription('')
teraDot1dStaticAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 5, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dStaticAddress.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStaticAddress.setDescription('')
teraDot1dStaticAllowedToGoTo = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 5, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDot1dStaticAllowedToGoTo.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStaticAllowedToGoTo.setDescription('')
teraDot1dStaticStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("allowed", 1), ("disallowed", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDot1dStaticStatus.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dStaticStatus.setDescription('')
teraDot1dBasePortTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 3, 6), )
if mibBuilder.loadTexts: teraDot1dBasePortTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dBasePortTable.setDescription(' table teraDot1dBasePortTable')
teraDot1dBasePortTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 3, 6, 1), ).setIndexNames((0, "TERAWAVE-terabridge-MIB", "teraDot1dBaseInternalVPI"), (0, "TERAWAVE-terabridge-MIB", "teraDot1dBaseInternalVCI"), (0, "TERAWAVE-terabridge-MIB", "teraDot1dBaseParentPortIfIndex"))
if mibBuilder.loadTexts: teraDot1dBasePortTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dBasePortTableEntry.setDescription(' table entry teraDot1dBasePortTableEntry ')
teraDot1dBasePort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dBasePort.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dBasePort.setDescription('')
teraDot1dBaseParentPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dBaseParentPortIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dBaseParentPortIfIndex.setDescription('')
teraDot1dBaseInternalVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dBaseInternalVPI.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dBaseInternalVPI.setDescription('')
teraDot1dBaseInternalVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dBaseInternalVCI.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dBaseInternalVCI.setDescription('')
teraDot1dBaseParentVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dBaseParentVPI.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dBaseParentVPI.setDescription('')
teraDot1dBaseParentVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dBaseParentVCI.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dBaseParentVCI.setDescription('')
teraVlanPortGroupTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 3, 7), )
if mibBuilder.loadTexts: teraVlanPortGroupTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanPortGroupTable.setDescription(' table teraVlanPortGroupTable')
teraVlanPortGroupTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 3, 7, 1), ).setIndexNames((0, "TERAWAVE-terabridge-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: teraVlanPortGroupTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanPortGroupTableEntry.setDescription(' table entry teraVlanPortGroupTableEntry ')
dot1qVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qVlanIndex.setStatus('mandatory')
if mibBuilder.loadTexts: dot1qVlanIndex.setDescription('')
teraVlanPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 7, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraVlanPorts.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanPorts.setDescription('')
teraVlanPortGroupTableAction = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraVlanPortGroupTableAction.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanPortGroupTableAction.setDescription('')
teraDot1qVlanPortTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 3, 8), )
if mibBuilder.loadTexts: teraDot1qVlanPortTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1qVlanPortTable.setDescription(' table teraDot1qVlanPortTable')
teraDot1qVlanPortTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 3, 8, 1), ).setIndexNames((0, "TERAWAVE-terabridge-MIB", "teraDot1qVlanPort"))
if mibBuilder.loadTexts: teraDot1qVlanPortTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1qVlanPortTableEntry.setDescription(' table entry teraDot1qVlanPortTableEntry ')
teraDot1qVlanPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 81))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1qVlanPort.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1qVlanPort.setDescription('')
teraDot1qVlanPortIngressFrameTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("admitAll", 1), ("admitOnlyVlanTagged", 2), ("admitOnlyUntagged", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDot1qVlanPortIngressFrameTypes.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1qVlanPortIngressFrameTypes.setDescription('')
teraDot1qVlanPortIngressFiltering = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDot1qVlanPortIngressFiltering.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1qVlanPortIngressFiltering.setDescription('')
teraDot1qVlanPortEgressFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sendOnlyUntagged", 1), ("sendOnlyVlanTagged", 2), ("sendAll", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDot1qVlanPortEgressFrameType.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1qVlanPortEgressFrameType.setDescription('')
teraDot1qVlanPortEgressTagSwap = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDot1qVlanPortEgressTagSwap.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1qVlanPortEgressTagSwap.setDescription('')
teraDot1qVlanPortDisUntaggedBcast = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDot1qVlanPortDisUntaggedBcast.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1qVlanPortDisUntaggedBcast.setDescription('')
teraDot1dTp = MibTable((1, 3, 6, 1, 4, 1, 4513, 3, 9), )
if mibBuilder.loadTexts: teraDot1dTp.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dTp.setDescription(' table teraDot1dTp')
teraDot1dTpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 3, 9, 1), ).setIndexNames((0, "TERAWAVE-terabridge-MIB", "teraDot1dTpSlot"), (0, "TERAWAVE-terabridge-MIB", "teraDot1dTpProcessor"))
if mibBuilder.loadTexts: teraDot1dTpEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dTpEntry.setDescription(' table entry teraDot1dTpEntry ')
teraDot1dTpSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dTpSlot.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dTpSlot.setDescription('')
teraDot1dTpProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dTpProcessor.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dTpProcessor.setDescription('')
teraDot1dTpLearnedEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dTpLearnedEntryDiscards.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dTpLearnedEntryDiscards.setDescription('')
teraDot1dTpAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDot1dTpAgingTime.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dTpAgingTime.setDescription('')
teraDot1qFdbTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 3, 10), )
if mibBuilder.loadTexts: teraDot1qFdbTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1qFdbTable.setDescription(' table teraDot1qFdbTable')
teraDot1qFdbTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 3, 10, 1), ).setIndexNames((0, "TERAWAVE-terabridge-MIB", "teraDot1dTpSlot"), (0, "TERAWAVE-terabridge-MIB", "teraDot1dTpProcessor"), (0, "TERAWAVE-terabridge-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: teraDot1qFdbTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1qFdbTableEntry.setDescription(' table entry teraDot1qFdbTableEntry ')
teraDot1qFdbDynamicCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 10, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1qFdbDynamicCount.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1qFdbDynamicCount.setDescription('')
teraDot1qTpFdbTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 3, 11), )
if mibBuilder.loadTexts: teraDot1qTpFdbTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1qTpFdbTable.setDescription(' table teraDot1qTpFdbTable')
teraDot1qTpFdbTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 3, 11, 1), ).setIndexNames((0, "TERAWAVE-terabridge-MIB", "teraDot1dTpSlot"), (0, "TERAWAVE-terabridge-MIB", "teraDot1dTpProcessor"), (0, "TERAWAVE-terabridge-MIB", "dot1qFdbId"), (0, "TERAWAVE-terabridge-MIB", "teraDot1qTpFdbAddress"))
if mibBuilder.loadTexts: teraDot1qTpFdbTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1qTpFdbTableEntry.setDescription(' table entry teraDot1qTpFdbTableEntry ')
teraDot1qTpFdbAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 11, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1qTpFdbAddress.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1qTpFdbAddress.setDescription('')
teraDot1qTpFdbPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1qTpFdbPort.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1qTpFdbPort.setDescription('')
teraDot1qTpFdbStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("learned", 3), ("self", 4), ("mgmt", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1qTpFdbStatus.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1qTpFdbStatus.setDescription('')
teraDot1dPvcStatTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 3, 12), )
if mibBuilder.loadTexts: teraDot1dPvcStatTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dPvcStatTable.setDescription(' table teraDot1dPvcStatTable')
teraDot1dPvcStatTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 3, 12, 1), ).setIndexNames((0, "TERAWAVE-terabridge-MIB", "teraDot1dTpPort"))
if mibBuilder.loadTexts: teraDot1dPvcStatTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dPvcStatTableEntry.setDescription(' table entry teraDot1dPvcStatTableEntry ')
teraDot1dPvcStatTxPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dPvcStatTxPktCount.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dPvcStatTxPktCount.setDescription('')
teraDot1dPvcStatTxOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dPvcStatTxOverrun.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dPvcStatTxOverrun.setDescription('')
teraDot1dPvcStatTxUnderrun = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dPvcStatTxUnderrun.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dPvcStatTxUnderrun.setDescription('')
teraDot1dPvcStatRxPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dPvcStatRxPktCount.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dPvcStatRxPktCount.setDescription('')
teraDot1dPvcStatRxOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dPvcStatRxOverrun.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dPvcStatRxOverrun.setDescription('')
teraDot1dPvcStatRxUnderrun = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 12, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dPvcStatRxUnderrun.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dPvcStatRxUnderrun.setDescription('')
teraDot1dPvcStatRxCrcError = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 12, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dPvcStatRxCrcError.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dPvcStatRxCrcError.setDescription('')
teraDot1dPvcStatRxLengthError = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 12, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dPvcStatRxLengthError.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dPvcStatRxLengthError.setDescription('')
teraDot1dPvcStatRxAbort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 12, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dPvcStatRxAbort.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dPvcStatRxAbort.setDescription('')
teraDot1dPvcStatRxSlip = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 12, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dPvcStatRxSlip.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dPvcStatRxSlip.setDescription('')
teraDot1dPvcStatRxNoBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 12, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDot1dPvcStatRxNoBuffer.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dPvcStatRxNoBuffer.setDescription('')
teraDot1dPvcStatState = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 12, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDot1dPvcStatState.setStatus('mandatory')
if mibBuilder.loadTexts: teraDot1dPvcStatState.setDescription('')
teraBridgeConnIdTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 3, 13), )
if mibBuilder.loadTexts: teraBridgeConnIdTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraBridgeConnIdTable.setDescription(' table teraBridgeConnIdTable')
teraBridgeConnIdTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 3, 13, 1), ).setIndexNames((0, "TERAWAVE-terabridge-MIB", "teraPvcLogPortId"))
if mibBuilder.loadTexts: teraBridgeConnIdTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraBridgeConnIdTableEntry.setDescription(' table entry teraBridgeConnIdTableEntry ')
teraPvcLogPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraPvcLogPortId.setStatus('mandatory')
if mibBuilder.loadTexts: teraPvcLogPortId.setDescription('')
teraConnId = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 13, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraConnId.setStatus('mandatory')
if mibBuilder.loadTexts: teraConnId.setDescription('')
teraVlanStatTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 3, 14), )
if mibBuilder.loadTexts: teraVlanStatTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanStatTable.setDescription(' table teraVlanStatTable')
teraVlanStatTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 3, 14, 1), ).setIndexNames((0, "TERAWAVE-terabridge-MIB", "dot1dBasePort"), (0, "TERAWAVE-terabridge-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: teraVlanStatTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanStatTableEntry.setDescription(' table entry teraVlanStatTableEntry ')
teraVlanStatState = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraVlanStatState.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanStatState.setDescription('')
teraVlanStatRxMcastSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraVlanStatRxMcastSrcAddr.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanStatRxMcastSrcAddr.setDescription('')
teraVlanStatRxInvalidVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 14, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraVlanStatRxInvalidVlanId.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanStatRxInvalidVlanId.setDescription('')
teraVlanStatRxMacAddrNotInStaticTbl = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 14, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraVlanStatRxMacAddrNotInStaticTbl.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanStatRxMacAddrNotInStaticTbl.setDescription('')
teraVlanStatRxMacAddrInStaticTbl = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 14, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraVlanStatRxMacAddrInStaticTbl.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanStatRxMacAddrInStaticTbl.setDescription('')
teraVlanStatRxInvalidOutPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 14, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraVlanStatRxInvalidOutPort.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanStatRxInvalidOutPort.setDescription('')
teraVlanStatRxInvalidInPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 14, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraVlanStatRxInvalidInPort.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanStatRxInvalidInPort.setDescription('')
teraVlanStatRxDestMacAddrDisallowed = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 14, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraVlanStatRxDestMacAddrDisallowed.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanStatRxDestMacAddrDisallowed.setDescription('')
teraVlanStatRxPortBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 14, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraVlanStatRxPortBlocked.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanStatRxPortBlocked.setDescription('')
teraVlanStatRxDiscardTaggedFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 14, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraVlanStatRxDiscardTaggedFrame.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanStatRxDiscardTaggedFrame.setDescription('')
teraVlanStatRxDiscardUntaggedFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 14, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraVlanStatRxDiscardUntaggedFrame.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanStatRxDiscardUntaggedFrame.setDescription('')
teraVlanStatRxDiscardBcastBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 14, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraVlanStatRxDiscardBcastBlocked.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanStatRxDiscardBcastBlocked.setDescription('')
teraVlanStatRxDiscardLocalDest = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 14, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraVlanStatRxDiscardLocalDest.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanStatRxDiscardLocalDest.setDescription('')
teraVlanStatRxFFTypeMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 14, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraVlanStatRxFFTypeMismatch.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanStatRxFFTypeMismatch.setDescription('')
teraVlanStatRxNoBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 14, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraVlanStatRxNoBuffer.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanStatRxNoBuffer.setDescription('')
teraVlanStatRxTxFail = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 14, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraVlanStatRxTxFail.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanStatRxTxFail.setDescription('')
teraVlanStatRxInvalidEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 14, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraVlanStatRxInvalidEncap.setStatus('mandatory')
if mibBuilder.loadTexts: teraVlanStatRxInvalidEncap.setDescription('')
teraEtherStatTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 3, 15), )
if mibBuilder.loadTexts: teraEtherStatTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatTable.setDescription(' table teraEtherStatTable')
teraEtherStatTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1), ).setIndexNames((0, "TERAWAVE-terabridge-MIB", "etherStatsIndex"))
if mibBuilder.loadTexts: teraEtherStatTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatTableEntry.setDescription(' table entry teraEtherStatTableEntry ')
teraEtherStatRxTotalFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatRxTotalFrames.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatRxTotalFrames.setDescription('')
teraEtherStatRxGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatRxGoodFrames.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatRxGoodFrames.setDescription('')
teraEtherStatRxForwardFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatRxForwardFrames.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatRxForwardFrames.setDescription('')
teraEtherStatRxForwardOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatRxForwardOctets.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatRxForwardOctets.setDescription('')
teraEtherStatRxPause = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatRxPause.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatRxPause.setDescription('')
teraEtherStatRxTotalDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatRxTotalDiscard.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatRxTotalDiscard.setDescription('')
teraEtherStatRxNoBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatRxNoBuffer.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatRxNoBuffer.setDescription('')
teraEtherStatRxTotalBadFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatRxTotalBadFrames.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatRxTotalBadFrames.setDescription('')
teraEtherStatRxBadFrameLenViolation = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatRxBadFrameLenViolation.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatRxBadFrameLenViolation.setDescription('')
teraEtherStatRxBadFrameNotAlign = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatRxBadFrameNotAlign.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatRxBadFrameNotAlign.setDescription('')
teraEtherStatRxBadFrameTooShort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatRxBadFrameTooShort.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatRxBadFrameTooShort.setDescription('')
teraEtherStatRxBadFrameCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatRxBadFrameCRC.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatRxBadFrameCRC.setDescription('')
teraEtherStatRxBadFrameOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatRxBadFrameOverrun.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatRxBadFrameOverrun.setDescription('')
teraEtherStatRxBadFrameCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatRxBadFrameCollision.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatRxBadFrameCollision.setDescription('')
teraEtherStatTxTotalFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatTxTotalFrames.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatTxTotalFrames.setDescription('')
teraEtherStatTxGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatTxGoodFrames.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatTxGoodFrames.setDescription('')
teraEtherStatTxFramesSentOut = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatTxFramesSentOut.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatTxFramesSentOut.setDescription('')
teraEtherStatTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatTxOctets.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatTxOctets.setDescription('')
teraEtherStatTxPause = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatTxPause.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatTxPause.setDescription('')
teraEtherStatTxQueueOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatTxQueueOverflow.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatTxQueueOverflow.setDescription('')
teraEtherStatTxTotalBadFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatTxTotalBadFrames.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatTxTotalBadFrames.setDescription('')
teraEtherStatTxBadFrameCarrierLost = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatTxBadFrameCarrierLost.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatTxBadFrameCarrierLost.setDescription('')
teraEtherStatTxBadFrameUnderrun = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatTxBadFrameUnderrun.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatTxBadFrameUnderrun.setDescription('')
teraEtherStatTxBadFrameRexmitLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatTxBadFrameRexmitLimit.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatTxBadFrameRexmitLimit.setDescription('')
teraEtherStatTxBadFrameLateCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatTxBadFrameLateCollision.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatTxBadFrameLateCollision.setDescription('')
teraEtherStatTxBadFrameTxErr = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatTxBadFrameTxErr.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatTxBadFrameTxErr.setDescription('')
teraEtherStatTxBadFrameReset1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatTxBadFrameReset1.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatTxBadFrameReset1.setDescription('')
teraEtherStatTxBadFrameReset2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatTxBadFrameReset2.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatTxBadFrameReset2.setDescription('')
teraEtherStatTxBadFramePortDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEtherStatTxBadFramePortDisable.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatTxBadFramePortDisable.setDescription('')
teraEtherStatState = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 15, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraEtherStatState.setStatus('mandatory')
if mibBuilder.loadTexts: teraEtherStatState.setDescription('')
teraLanPolicingTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 3, 16), )
if mibBuilder.loadTexts: teraLanPolicingTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanPolicingTable.setDescription(' table teraLanPolicingTable')
teraLanPolicingTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 3, 16, 1), ).setIndexNames((0, "TERAWAVE-terabridge-MIB", "etherStatsIndex"))
if mibBuilder.loadTexts: teraLanPolicingTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanPolicingTableEntry.setDescription(' table entry teraLanPolicingTableEntry ')
teraLanIngPolicing = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLanIngPolicing.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanIngPolicing.setDescription('')
teraLanIngPolicingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 16, 1, 2), Counter32().subtype(subtypeSpec=ValueRangeConstraint(200, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLanIngPolicingInterval.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanIngPolicingInterval.setDescription('')
teraLanIngPolicingRate = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 16, 1, 3), Counter32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLanIngPolicingRate.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanIngPolicingRate.setDescription('')
teraLanIngPolicingMaxAccr = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 16, 1, 4), Counter32().subtype(subtypeSpec=ValueRangeConstraint(200, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLanIngPolicingMaxAccr.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanIngPolicingMaxAccr.setDescription('')
teraLanEgrShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLanEgrShaping.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanEgrShaping.setDescription('')
teraLanEgrShapingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 16, 1, 6), Counter32().subtype(subtypeSpec=ValueRangeConstraint(200, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLanEgrShapingInterval.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanEgrShapingInterval.setDescription('')
teraLanEgrShapingRate = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 16, 1, 7), Counter32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLanEgrShapingRate.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanEgrShapingRate.setDescription('')
teraLanUsageHistoryControlTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 3, 17), )
if mibBuilder.loadTexts: teraLanUsageHistoryControlTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageHistoryControlTable.setDescription(' table teraLanUsageHistoryControlTable')
teraLanUsageHistoryControlTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 3, 17, 1), ).setIndexNames((0, "TERAWAVE-terabridge-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: teraLanUsageHistoryControlTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageHistoryControlTableEntry.setDescription(' table entry teraLanUsageHistoryControlTableEntry ')
teraLanUsageHistoryControlBucketsRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLanUsageHistoryControlBucketsRequested.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageHistoryControlBucketsRequested.setDescription('')
teraLanUsageHistoryControlBucketsGranted = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 17, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLanUsageHistoryControlBucketsGranted.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageHistoryControlBucketsGranted.setDescription('')
teraLanUsageHistoryControlInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 17, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLanUsageHistoryControlInterval.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageHistoryControlInterval.setDescription('')
teraLanUsageHistoryControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("valid", 1), ("createRequest", 2), ("underCreation", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLanUsageHistoryControlStatus.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageHistoryControlStatus.setDescription('')
teraLanUsageTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 3, 18), )
if mibBuilder.loadTexts: teraLanUsageTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageTable.setDescription(' table teraLanUsageTable')
teraLanUsageTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 3, 18, 1), ).setIndexNames((0, "TERAWAVE-terabridge-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: teraLanUsageTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageTableEntry.setDescription(' table entry teraLanUsageTableEntry ')
teraLanUsageIngRcvBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 18, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLanUsageIngRcvBytes.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageIngRcvBytes.setDescription('')
teraLanUsageIngPolicingDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 18, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLanUsageIngPolicingDropBytes.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageIngPolicingDropBytes.setDescription('')
teraLanUsageEgrRcvBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 18, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLanUsageEgrRcvBytes.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageEgrRcvBytes.setDescription('')
teraLanUsageEgrSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 18, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLanUsageEgrSentBytes.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageEgrSentBytes.setDescription('')
teraLanUsageStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 18, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLanUsageStatus.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageStatus.setDescription('')
teraLanUsageHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 3, 19), )
if mibBuilder.loadTexts: teraLanUsageHistoryTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageHistoryTable.setDescription(' table teraLanUsageHistoryTable')
teraLanUsageHistoryTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 3, 19, 1), ).setIndexNames((0, "TERAWAVE-terabridge-MIB", "dot1dBasePort"), (0, "TERAWAVE-terabridge-MIB", "teraLanUsageHistorySampleIndex"))
if mibBuilder.loadTexts: teraLanUsageHistoryTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageHistoryTableEntry.setDescription(' table entry teraLanUsageHistoryTableEntry ')
teraLanUsageHistorySampleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLanUsageHistorySampleIndex.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageHistorySampleIndex.setDescription('')
teraLanUsageHistoryIntervalStart = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 19, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLanUsageHistoryIntervalStart.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageHistoryIntervalStart.setDescription('')
teraLanUsageHistoryIngRcvBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLanUsageHistoryIngRcvBytes.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageHistoryIngRcvBytes.setDescription('')
teraLanUsageHistoryIngPolicingDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLanUsageHistoryIngPolicingDropBytes.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageHistoryIngPolicingDropBytes.setDescription('')
teraLanUsageHistoryEgrRcvBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLanUsageHistoryEgrRcvBytes.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageHistoryEgrRcvBytes.setDescription('')
teraLanUsageHistoryEgrSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 19, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLanUsageHistoryEgrSentBytes.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanUsageHistoryEgrSentBytes.setDescription('')
teraLanCardModeTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 3, 20), )
if mibBuilder.loadTexts: teraLanCardModeTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanCardModeTable.setDescription(' table teraLanCardModeTable')
teraLanCardModeTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 3, 20, 1), ).setIndexNames((0, "TERAWAVE-terabridge-MIB", "teraDot1dTpSlot"))
if mibBuilder.loadTexts: teraLanCardModeTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanCardModeTableEntry.setDescription(' table entry teraLanCardModeTableEntry ')
teraLanCardMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 3, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("port-2", 1), ("port-4", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraLanCardMode.setStatus('mandatory')
if mibBuilder.loadTexts: teraLanCardMode.setDescription('')
mibBuilder.exportSymbols("TERAWAVE-terabridge-MIB", teraVlanStatRxDiscardTaggedFrame=teraVlanStatRxDiscardTaggedFrame, teraBridgeEncapsulation=teraBridgeEncapsulation, teraVlanStatTableEntry=teraVlanStatTableEntry, teraDot1dStpRootCost=teraDot1dStpRootCost, teraEtherStatRxNoBuffer=teraEtherStatRxNoBuffer, teraVlanStatRxMcastSrcAddr=teraVlanStatRxMcastSrcAddr, teraVlanStatRxMacAddrInStaticTbl=teraVlanStatRxMacAddrInStaticTbl, teraDot1qTpFdbTableEntry=teraDot1qTpFdbTableEntry, teraDot1dStpProtocolSpecification=teraDot1dStpProtocolSpecification, teraDot1dStpHelloTime=teraDot1dStpHelloTime, teraDot1qVlanPortEgressFrameType=teraDot1qVlanPortEgressFrameType, teraDot1qTpFdbPort=teraDot1qTpFdbPort, teraLanUsageEgrRcvBytes=teraLanUsageEgrRcvBytes, teraLanUsageHistoryIntervalStart=teraLanUsageHistoryIntervalStart, teraLanPolicingTable=teraLanPolicingTable, teraVlanStatRxPortBlocked=teraVlanStatRxPortBlocked, teraDot1dBasePortTableEntry=teraDot1dBasePortTableEntry, teraVlanPorts=teraVlanPorts, teraVlanStatRxInvalidVlanId=teraVlanStatRxInvalidVlanId, teraDot1dPvcStatTxUnderrun=teraDot1dPvcStatTxUnderrun, teraPVCPortLocalHostFilter=teraPVCPortLocalHostFilter, teraEtherStatTxOctets=teraEtherStatTxOctets, teraDot1dStpRootPort=teraDot1dStpRootPort, teraDot1dStaticTable=teraDot1dStaticTable, teraEtherStatTxQueueOverflow=teraEtherStatTxQueueOverflow, teraDot1dPvcStatRxAbort=teraDot1dPvcStatRxAbort, teraDot1dStpTimeSinceTopologyChange=teraDot1dStpTimeSinceTopologyChange, teraEtherStatTxBadFrameLateCollision=teraEtherStatTxBadFrameLateCollision, teraDot1dStpTableEntry=teraDot1dStpTableEntry, teraDot1dPvcStatRxLengthError=teraDot1dPvcStatRxLengthError, teraDot1qTpFdbAddress=teraDot1qTpFdbAddress, teraLanUsageHistoryTable=teraLanUsageHistoryTable, teraDot1dPvcStatRxCrcError=teraDot1dPvcStatRxCrcError, teraDot1dTpLearnedEntryDiscards=teraDot1dTpLearnedEntryDiscards, teraDot1dStpBridgeMaxAge=teraDot1dStpBridgeMaxAge, teraBridgeConnIdTable=teraBridgeConnIdTable, teraDot1dPvcStatRxNoBuffer=teraDot1dPvcStatRxNoBuffer, teraDot1dStpTopChanges=teraDot1dStpTopChanges, teraDot1dTpUseDefaultFwd=teraDot1dTpUseDefaultFwd, teraDot1qFdbDynamicCount=teraDot1qFdbDynamicCount, teraDot1qVlanPortEgressTagSwap=teraDot1qVlanPortEgressTagSwap, teraEtherStatRxBadFrameOverrun=teraEtherStatRxBadFrameOverrun, teraEtherStatRxForwardFrames=teraEtherStatRxForwardFrames, teraEtherStatTxBadFrameTxErr=teraEtherStatTxBadFrameTxErr, teraDot1dPvcStatRxSlip=teraDot1dPvcStatRxSlip, teraEtherStatRxTotalDiscard=teraEtherStatRxTotalDiscard, teraDot1dStaticReceivePort=teraDot1dStaticReceivePort, teraDot1dTpPortTableEntry=teraDot1dTpPortTableEntry, teraLanUsageHistoryIngRcvBytes=teraLanUsageHistoryIngRcvBytes, teraEtherStatRxBadFrameNotAlign=teraEtherStatRxBadFrameNotAlign, teraEtherStatTableEntry=teraEtherStatTableEntry, teraLanCardMode=teraLanCardMode, teraVlanStatRxFFTypeMismatch=teraVlanStatRxFFTypeMismatch, teraDot1dStpTable=teraDot1dStpTable, teraDot1dStpMaxAge=teraDot1dStpMaxAge, teraEtherStatRxPause=teraEtherStatRxPause, teraLanPolicingTableEntry=teraLanPolicingTableEntry, teraLanUsageIngRcvBytes=teraLanUsageIngRcvBytes, teraBridgePVCPortTable=teraBridgePVCPortTable, teraPVCPortTrunkFrameType=teraPVCPortTrunkFrameType, teraVlanStatRxNoBuffer=teraVlanStatRxNoBuffer, teraLanIngPolicingMaxAccr=teraLanIngPolicingMaxAccr, teraLanUsageStatus=teraLanUsageStatus, teraDot1dTpProcessor=teraDot1dTpProcessor, teraEtherStatRxForwardOctets=teraEtherStatRxForwardOctets, teraEtherStatTxFramesSentOut=teraEtherStatTxFramesSentOut, teraDot1dTpEntry=teraDot1dTpEntry, teraDot1dStpPriority=teraDot1dStpPriority, teraDot1qTpFdbTable=teraDot1qTpFdbTable, teraDot1dStpHoldTime=teraDot1dStpHoldTime, teraBridgePVCPortTableEntry=teraBridgePVCPortTableEntry, teraDot1qVlanPortTable=teraDot1qVlanPortTable, teraEtherStatTxTotalBadFrames=teraEtherStatTxTotalBadFrames, teraVlanStatRxInvalidEncap=teraVlanStatRxInvalidEncap, teraDot1dFFType=teraDot1dFFType, teraDot1dBasePortTable=teraDot1dBasePortTable, teraEtherStatRxGoodFrames=teraEtherStatRxGoodFrames, teraLanIngPolicing=teraLanIngPolicing, teraPVCPortTrunkTagSwap=teraPVCPortTrunkTagSwap, teraLanUsageHistoryControlTableEntry=teraLanUsageHistoryControlTableEntry, teraEtherStatTxBadFrameCarrierLost=teraEtherStatTxBadFrameCarrierLost, teraDot1dPvcStatRxPktCount=teraDot1dPvcStatRxPktCount, teraLanEgrShaping=teraLanEgrShaping, teraDot1dBaseParentPortIfIndex=teraDot1dBaseParentPortIfIndex, teraDot1qVlanPort=teraDot1qVlanPort, teraDot1dBaseInternalVPI=teraDot1dBaseInternalVPI, teraLanIngPolicingRate=teraLanIngPolicingRate, teraLanUsageTableEntry=teraLanUsageTableEntry, teraDot1dPvcStatState=teraDot1dPvcStatState, teraDot1dPvcStatTxPktCount=teraDot1dPvcStatTxPktCount, teraDot1dStpDesignatedRoot=teraDot1dStpDesignatedRoot, teraEtherStatRxTotalBadFrames=teraEtherStatRxTotalBadFrames, teraDot1dStaticAddress=teraDot1dStaticAddress, teraDot1dTpPortTable=teraDot1dTpPortTable, teraDot1dTpDefaultFwdPort=teraDot1dTpDefaultFwdPort, teraDot1dPvcStatTxOverrun=teraDot1dPvcStatTxOverrun, teraDot1dBaseParentVCI=teraDot1dBaseParentVCI, teraVlanStatTable=teraVlanStatTable, teraLanUsageHistorySampleIndex=teraLanUsageHistorySampleIndex, teraDot1dStaticTableEntry=teraDot1dStaticTableEntry, teraEtherStatRxBadFrameTooShort=teraEtherStatRxBadFrameTooShort, teraLanIngPolicingInterval=teraLanIngPolicingInterval, teraDot1qFdbTable=teraDot1qFdbTable, teraDot1dPvcStatRxUnderrun=teraDot1dPvcStatRxUnderrun, teraDot1dStpState=teraDot1dStpState, teraEtherStatRxTotalFrames=teraEtherStatRxTotalFrames, teraDot1qFdbTableEntry=teraDot1qFdbTableEntry, teraEtherStatTxBadFramePortDisable=teraEtherStatTxBadFramePortDisable, teraEtherStatState=teraEtherStatState, teraLanUsageHistoryTableEntry=teraLanUsageHistoryTableEntry, teraLanUsageHistoryControlInterval=teraLanUsageHistoryControlInterval, teraStpId=teraStpId, teraDot1qVlanPortTableEntry=teraDot1qVlanPortTableEntry, teraLanCardModeTableEntry=teraLanCardModeTableEntry, teraVlanStatRxDiscardUntaggedFrame=teraVlanStatRxDiscardUntaggedFrame, teraVlanPortGroupTableAction=teraVlanPortGroupTableAction, teraEtherStatTxBadFrameReset1=teraEtherStatTxBadFrameReset1, teraDot1dStpBridgeGroupList=teraDot1dStpBridgeGroupList, teraEtherStatTxBadFrameUnderrun=teraEtherStatTxBadFrameUnderrun, teraEtherStatTxBadFrameReset2=teraEtherStatTxBadFrameReset2, teraBridgePriority=teraBridgePriority, teraLanUsageHistoryEgrSentBytes=teraLanUsageHistoryEgrSentBytes, teraDot1dPvcStatRxOverrun=teraDot1dPvcStatRxOverrun, teraLanCardModeTable=teraLanCardModeTable, teraVlanStatRxMacAddrNotInStaticTbl=teraVlanStatRxMacAddrNotInStaticTbl, teraDot1dBaseInternalVCI=teraDot1dBaseInternalVCI, teraLanUsageHistoryEgrRcvBytes=teraLanUsageHistoryEgrRcvBytes, teraVlanStatRxDiscardLocalDest=teraVlanStatRxDiscardLocalDest, teraDot1dBaseParentVPI=teraDot1dBaseParentVPI, teraVlanStatRxInvalidOutPort=teraVlanStatRxInvalidOutPort, teraLanEgrShapingInterval=teraLanEgrShapingInterval, dot1qVlanIndex=dot1qVlanIndex, teraDot1dTpPort=teraDot1dTpPort, teraLanUsageTable=teraLanUsageTable, teraVlanStatRxDestMacAddrDisallowed=teraVlanStatRxDestMacAddrDisallowed, teraBridgeConnIdTableEntry=teraBridgeConnIdTableEntry, teraDot1dBasePort=teraDot1dBasePort, teraEtherStatTxTotalFrames=teraEtherStatTxTotalFrames, teraDot1qVlanPortIngressFrameTypes=teraDot1qVlanPortIngressFrameTypes, teraEtherStatTxPause=teraEtherStatTxPause, teraDot1dStaticAllowedToGoTo=teraDot1dStaticAllowedToGoTo, teraEtherStatTxGoodFrames=teraEtherStatTxGoodFrames, teraVlanPortGroupTableEntry=teraVlanPortGroupTableEntry, teraLanEgrShapingRate=teraLanEgrShapingRate, terawave=terawave, teraDot1dPvcStatTable=teraDot1dPvcStatTable, teraLanUsageHistoryControlTable=teraLanUsageHistoryControlTable, teraEtherStatRxBadFrameCRC=teraEtherStatRxBadFrameCRC, teraVlanStatState=teraVlanStatState, teraDot1qVlanPortDisUntaggedBcast=teraDot1qVlanPortDisUntaggedBcast, teraPvcLogPortId=teraPvcLogPortId, teraEtherStatRxBadFrameCollision=teraEtherStatRxBadFrameCollision, teraLanUsageHistoryControlStatus=teraLanUsageHistoryControlStatus, teraDot1dLoopback=teraDot1dLoopback, teraVlanStatRxTxFail=teraVlanStatRxTxFail, teraDot1dTp=teraDot1dTp, teraEtherStatTable=teraEtherStatTable, teraLanUsageHistoryControlBucketsRequested=teraLanUsageHistoryControlBucketsRequested, teraLanUsageEgrSentBytes=teraLanUsageEgrSentBytes, teraDot1dStpBridgeForwardDelay=teraDot1dStpBridgeForwardDelay, teraDot1dTpAgingTime=teraDot1dTpAgingTime, teraVlanPortGroupTable=teraVlanPortGroupTable, teraDot1qVlanPortIngressFiltering=teraDot1qVlanPortIngressFiltering, teraDot1dStpForwardDelay=teraDot1dStpForwardDelay, teraLanUsageIngPolicingDropBytes=teraLanUsageIngPolicingDropBytes, teraLanUsageHistoryControlBucketsGranted=teraLanUsageHistoryControlBucketsGranted, teraDot1dTpSlot=teraDot1dTpSlot, teraDot1dStaticStatus=teraDot1dStaticStatus, teraEtherStatRxBadFrameLenViolation=teraEtherStatRxBadFrameLenViolation, tera1dBridge=tera1dBridge, teraEtherStatTxBadFrameRexmitLimit=teraEtherStatTxBadFrameRexmitLimit, teraLanUsageHistoryIngPolicingDropBytes=teraLanUsageHistoryIngPolicingDropBytes, teraVlanStatRxDiscardBcastBlocked=teraVlanStatRxDiscardBcastBlocked, teraDot1qTpFdbStatus=teraDot1qTpFdbStatus, teraDot1dStpBridgeHelloTime=teraDot1dStpBridgeHelloTime, teraConnId=teraConnId, teraVlanStatRxInvalidInPort=teraVlanStatRxInvalidInPort, teraDot1dPvcStatTableEntry=teraDot1dPvcStatTableEntry)
