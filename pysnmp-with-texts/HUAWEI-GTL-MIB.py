#
# PySNMP MIB module HUAWEI-GTL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-GTL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:44:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
entPhysicalName, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalName")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Integer32, IpAddress, Gauge32, MibIdentifier, iso, Counter64, NotificationType, Counter32, ModuleIdentity, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Bits, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "IpAddress", "Gauge32", "MibIdentifier", "iso", "Counter64", "NotificationType", "Counter32", "ModuleIdentity", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Bits", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hwGtl = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142))
if mibBuilder.loadTexts: hwGtl.setLastUpdated('200611221414Z')
if mibBuilder.loadTexts: hwGtl.setOrganization('Huawei Technologies Co.,Ltd.')
if mibBuilder.loadTexts: hwGtl.setContactInfo('VRP Team Huawei Technologies Co.,Ltd. Huawei Bld.,NO.3 Xinxi Rd., Shang-Di Information Industry Base, Hai-Dian District Beijing P.R. China http://www.huawei.com Zip:100085 ')
if mibBuilder.loadTexts: hwGtl.setDescription('The private mib file includes the general extent information of the device.hwDatacomm(25).htGtl(142)')
hwGtlMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 1))
hwGtlDefaultValueReason = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwGtlDefaultValueReason.setStatus('current')
if mibBuilder.loadTexts: hwGtlDefaultValueReason.setDescription('The object specifies the reason why the system uses the default value.')
hwGtlResourceItem = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwGtlResourceItem.setStatus('current')
if mibBuilder.loadTexts: hwGtlResourceItem.setDescription('The object specifies the resource item which is nearly exhausted.')
hwGtlFeatureName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwGtlFeatureName.setStatus('current')
if mibBuilder.loadTexts: hwGtlFeatureName.setDescription('The object specifies the feature name which is near deadline.')
hwGtlRemainTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 1, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwGtlRemainTime.setStatus('current')
if mibBuilder.loadTexts: hwGtlRemainTime.setDescription('Remain time of the feature which is near deadline.The unit is day.')
hwGtlVerifyCode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 1, 5), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwGtlVerifyCode.setStatus('current')
if mibBuilder.loadTexts: hwGtlVerifyCode.setDescription('The verify code returned when verify license file failed.')
hwGtlActive = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(5, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwGtlActive.setStatus('current')
if mibBuilder.loadTexts: hwGtlActive.setDescription('Active GTL license')
hwGtlShowActLCSName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(5, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwGtlShowActLCSName.setStatus('current')
if mibBuilder.loadTexts: hwGtlShowActLCSName.setDescription('Show active GTL license file name')
hwGtlItemTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 1, 8), )
if mibBuilder.loadTexts: hwGtlItemTable.setStatus('current')
if mibBuilder.loadTexts: hwGtlItemTable.setDescription('A table of item infomation in GTL license. Especially for show usage of reource item.')
hwGtlChassisID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwGtlChassisID.setStatus('current')
if mibBuilder.loadTexts: hwGtlChassisID.setDescription('Show chassis description.')
hwGtlItemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 1, 8, 1), ).setIndexNames((0, "HUAWEI-GTL-MIB", "hwGtlItemIndex"))
if mibBuilder.loadTexts: hwGtlItemEntry.setStatus('current')
if mibBuilder.loadTexts: hwGtlItemEntry.setDescription('A GTL license item information entry. Each entry consists of information of a item.')
hwGtlItemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 1, 8, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwGtlItemIndex.setStatus('current')
if mibBuilder.loadTexts: hwGtlItemIndex.setDescription('The index of the GTL license item.')
hwGtlItemName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 1, 8, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwGtlItemName.setStatus('current')
if mibBuilder.loadTexts: hwGtlItemName.setDescription('Item name.')
hwGtlItemControlValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 1, 8, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwGtlItemControlValue.setStatus('current')
if mibBuilder.loadTexts: hwGtlItemControlValue.setDescription('Control value of the item. Control value will always be non-zero.')
hwGtlItemUsedValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 1, 8, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwGtlItemUsedValue.setStatus('current')
if mibBuilder.loadTexts: hwGtlItemUsedValue.setDescription('Used value of the item.')
hwGtlItemDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 1, 8, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwGtlItemDescription.setStatus('current')
if mibBuilder.loadTexts: hwGtlItemDescription.setDescription('Description of the item.')
hwGtlNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 2))
hwGtlDefaultValue = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 2, 1)).setObjects(("HUAWEI-GTL-MIB", "hwGtlDefaultValueReason"), ("ENTITY-MIB", "entPhysicalName"))
if mibBuilder.loadTexts: hwGtlDefaultValue.setStatus('current')
if mibBuilder.loadTexts: hwGtlDefaultValue.setDescription('Notification represents that the system will use default value if the license file fails to pass the verification.')
hwGtlResourceUsedUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 2, 2)).setObjects(("HUAWEI-GTL-MIB", "hwGtlResourceItem"))
if mibBuilder.loadTexts: hwGtlResourceUsedUp.setStatus('current')
if mibBuilder.loadTexts: hwGtlResourceUsedUp.setDescription('Notification represents the resource is nearly exhausted.')
hwGtlNearDeadline = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 2, 3)).setObjects(("HUAWEI-GTL-MIB", "hwGtlFeatureName"), ("HUAWEI-GTL-MIB", "hwGtlRemainTime"), ("ENTITY-MIB", "entPhysicalName"))
if mibBuilder.loadTexts: hwGtlNearDeadline.setStatus('current')
if mibBuilder.loadTexts: hwGtlNearDeadline.setDescription('Notification represents the feature is near deadline.')
hwGtlLicenseVerifyFailed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 2, 4)).setObjects(("HUAWEI-GTL-MIB", "hwGtlVerifyCode"))
if mibBuilder.loadTexts: hwGtlLicenseVerifyFailed.setStatus('current')
if mibBuilder.loadTexts: hwGtlLicenseVerifyFailed.setDescription('Notification represents license verification failed. The reason why license verification failed can be: 1 represents that the ESN or version of the device and the license file mismatch. 2 represents that the license file has expired. 3 represents that the product type of the device and the license file mismatch. 4 represents that the license file is invalid.')
hwGtlExpired = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 2, 5))
if mibBuilder.loadTexts: hwGtlExpired.setStatus('current')
if mibBuilder.loadTexts: hwGtlExpired.setDescription('Notification represents the license has expired.')
hwGtlItemMismatch = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 2, 6)).setObjects(("HUAWEI-GTL-MIB", "hwGtlChassisID"))
if mibBuilder.loadTexts: hwGtlItemMismatch.setStatus('current')
if mibBuilder.loadTexts: hwGtlItemMismatch.setDescription('License item mismatch with the main chassis.')
hwGtlConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 3))
hwGtlCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 3, 1))
hwGtlCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 3, 1, 1)).setObjects(("HUAWEI-GTL-MIB", "hwGtlObjectGroup"), ("HUAWEI-GTL-MIB", "hwGtlNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwGtlCompliance = hwGtlCompliance.setStatus('current')
if mibBuilder.loadTexts: hwGtlCompliance.setDescription('The compliance statement for systems supporting the HUAWEI-GTL-MIB.')
hwGtlGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 3, 2))
hwGtlObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 3, 2, 1)).setObjects(("HUAWEI-GTL-MIB", "hwGtlDefaultValueReason"), ("HUAWEI-GTL-MIB", "hwGtlResourceItem"), ("HUAWEI-GTL-MIB", "hwGtlFeatureName"), ("HUAWEI-GTL-MIB", "hwGtlRemainTime"), ("HUAWEI-GTL-MIB", "hwGtlVerifyCode"), ("HUAWEI-GTL-MIB", "hwGtlActive"), ("HUAWEI-GTL-MIB", "hwGtlShowActLCSName"), ("HUAWEI-GTL-MIB", "hwGtlItemName"), ("HUAWEI-GTL-MIB", "hwGtlItemControlValue"), ("HUAWEI-GTL-MIB", "hwGtlItemUsedValue"), ("HUAWEI-GTL-MIB", "hwGtlItemDescription"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwGtlObjectGroup = hwGtlObjectGroup.setStatus('current')
if mibBuilder.loadTexts: hwGtlObjectGroup.setDescription('The GTL attribute group.')
hwGtlNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 142, 3, 2, 2)).setObjects(("HUAWEI-GTL-MIB", "hwGtlDefaultValue"), ("HUAWEI-GTL-MIB", "hwGtlResourceUsedUp"), ("HUAWEI-GTL-MIB", "hwGtlNearDeadline"), ("HUAWEI-GTL-MIB", "hwGtlLicenseVerifyFailed"), ("HUAWEI-GTL-MIB", "hwGtlExpired"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwGtlNotificationGroup = hwGtlNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: hwGtlNotificationGroup.setDescription('The notification group.')
mibBuilder.exportSymbols("HUAWEI-GTL-MIB", hwGtlDefaultValue=hwGtlDefaultValue, hwGtlItemEntry=hwGtlItemEntry, hwGtlItemControlValue=hwGtlItemControlValue, hwGtlMibObjects=hwGtlMibObjects, hwGtlItemIndex=hwGtlItemIndex, hwGtlResourceItem=hwGtlResourceItem, hwGtlNearDeadline=hwGtlNearDeadline, hwGtlRemainTime=hwGtlRemainTime, hwGtlActive=hwGtlActive, hwGtlShowActLCSName=hwGtlShowActLCSName, hwGtlLicenseVerifyFailed=hwGtlLicenseVerifyFailed, PYSNMP_MODULE_ID=hwGtl, hwGtlObjectGroup=hwGtlObjectGroup, hwGtlItemMismatch=hwGtlItemMismatch, hwGtlNotificationGroup=hwGtlNotificationGroup, hwGtlResourceUsedUp=hwGtlResourceUsedUp, hwGtlItemDescription=hwGtlItemDescription, hwGtlDefaultValueReason=hwGtlDefaultValueReason, hwGtlItemUsedValue=hwGtlItemUsedValue, hwGtlChassisID=hwGtlChassisID, hwGtlGroups=hwGtlGroups, hwGtlConformance=hwGtlConformance, hwGtlCompliances=hwGtlCompliances, hwGtlItemName=hwGtlItemName, hwGtlCompliance=hwGtlCompliance, hwGtlExpired=hwGtlExpired, hwGtlVerifyCode=hwGtlVerifyCode, hwGtlNotifications=hwGtlNotifications, hwGtlItemTable=hwGtlItemTable, hwGtlFeatureName=hwGtlFeatureName, hwGtl=hwGtl)
