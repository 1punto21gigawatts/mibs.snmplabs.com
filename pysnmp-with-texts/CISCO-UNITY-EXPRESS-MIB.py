#
# PySNMP MIB module CISCO-UNITY-EXPRESS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-UNITY-EXPRESS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:18:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetAddressType, InetPortNumber, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetPortNumber", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Integer32, NotificationType, Counter64, TimeTicks, Gauge32, Bits, IpAddress, Counter32, iso, MibIdentifier, ModuleIdentity, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Integer32", "NotificationType", "Counter64", "TimeTicks", "Gauge32", "Bits", "IpAddress", "Counter32", "iso", "MibIdentifier", "ModuleIdentity", "ObjectIdentity")
TextualConvention, TruthValue, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString", "DateAndTime")
ciscoUnityExpressMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 420))
ciscoUnityExpressMIB.setRevisions(('2007-01-08 00:00', '2005-09-02 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoUnityExpressMIB.setRevisionsDescriptions(('Deprecated cueHardwareModuleType.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoUnityExpressMIB.setLastUpdated('200509020000Z')
if mibBuilder.loadTexts: ciscoUnityExpressMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoUnityExpressMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W. Tasman Drive San Jose, CA 95134 USA Phone: +1 800 553-NETS Email: cs-cue@cisco.com')
if mibBuilder.loadTexts: ciscoUnityExpressMIB.setDescription('The MIB Module for the management of the Cisco Unity Express (CUE) service. CUE is a voicemail service that runs in a Cisco router. CUE accepts connections from Cisco Call Manager Express (CCME), or from Cisco Call Manager (CCM). *** ABBREVIATIONS, ACRONYMS, AND SYMBOLS *** JTAPI - Java Telephony Application Programming Interface AVT - Administration Via Telephone MWI - Message Waiting Indicator AA - Auto Attendent SIP - Session Initiation Protocol AIM - Advanced Integration Module NM - Network Module')
ciscoUnityExpressMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 0))
ciscoUnityExpressMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 1))
ciscoUnityExpressMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 2))
cueSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1))
cueSystemControl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 1))
cueShutdownRequest = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cueShutdownRequest.setStatus('current')
if mibBuilder.loadTexts: cueShutdownRequest.setDescription('Shutdown all applications and halt the system.')
cueSystemScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 2))
cueAVTNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 2, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueAVTNumber.setStatus('current')
if mibBuilder.loadTexts: cueAVTNumber.setDescription('Administration Via Telephone (AVT) pilot number. AVT plays your personalized greeting when you are away and takes the message.')
cueVoicemailNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 2, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueVoicemailNumber.setStatus('current')
if mibBuilder.loadTexts: cueVoicemailNumber.setDescription('Voicemail pilot number. This is used to play back your messages.')
cueAANumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 2, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueAANumber.setStatus('current')
if mibBuilder.loadTexts: cueAANumber.setDescription("Auto Attendant (AA) pilot number. AA is the generic voicemail entrance to the company. (If you know your party's extension...)")
cueHardwareModuleType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("aim", 1), ("nm", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueHardwareModuleType.setStatus('deprecated')
if mibBuilder.loadTexts: cueHardwareModuleType.setDescription("Type of hardware module running this Cisco Unity Express (CUE) software. 'aim' - Advanced Integration Module (AIM). 'nm' - Network Module (NM). 'other' - This information is provided by the SNMPv2-MIB sysObjectID.")
cueCallControlAgentType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ccm", 1), ("ccme", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueCallControlAgentType.setStatus('current')
if mibBuilder.loadTexts: cueCallControlAgentType.setDescription("Type of call control agent delivering calls to this voicemail application. 'ccm' - Cisco Call Manager. 'ccme' - Cisco Call Manager Express.")
cueSIPInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 3))
cueSIPGatewayName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 3, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueSIPGatewayName.setStatus('current')
if mibBuilder.loadTexts: cueSIPGatewayName.setDescription('Session Initiation Protocol (SIP) gateway hostname.')
cueSIPGatewayIPType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 3, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueSIPGatewayIPType.setStatus('current')
if mibBuilder.loadTexts: cueSIPGatewayIPType.setDescription('Session Initiation Protocol (SIP) gateway IP address type.')
cueSIPGatewayIP = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 3, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueSIPGatewayIP.setStatus('current')
if mibBuilder.loadTexts: cueSIPGatewayIP.setDescription('Session Initiation Protocol (SIP) gateway IP address. The type of internet address is indicated by the value of cueSIPGatewayIPType.')
cueSIPPort = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 3, 4), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueSIPPort.setStatus('current')
if mibBuilder.loadTexts: cueSIPPort.setDescription('Session Initiation Protocol (SIP) port number.')
cueJTAPIInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 4))
cueJTAPIServerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 4, 1), )
if mibBuilder.loadTexts: cueJTAPIServerTable.setStatus('current')
if mibBuilder.loadTexts: cueJTAPIServerTable.setDescription('List of JTAPI Servers.')
cueJTAPIServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-UNITY-EXPRESS-MIB", "cueJTAPIServerIndex"))
if mibBuilder.loadTexts: cueJTAPIServerEntry.setStatus('current')
if mibBuilder.loadTexts: cueJTAPIServerEntry.setDescription('An entry containing information about a JTAPI Server.')
cueJTAPIServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cueJTAPIServerIndex.setStatus('current')
if mibBuilder.loadTexts: cueJTAPIServerIndex.setDescription('An arbitrary integer, a unique value for each JTAPI Server.')
cueJTAPIServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 4, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueJTAPIServerName.setStatus('current')
if mibBuilder.loadTexts: cueJTAPIServerName.setDescription('Java Telephony Application Programming Interface (JTAPI) session server hostname.')
cueJTAPIServerIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 4, 1, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueJTAPIServerIPType.setStatus('current')
if mibBuilder.loadTexts: cueJTAPIServerIPType.setDescription('Java Telephony Application Programming Interface (JTAPI) session server IP address type.')
cueJTAPIServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 4, 1, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueJTAPIServerIP.setStatus('current')
if mibBuilder.loadTexts: cueJTAPIServerIP.setDescription('Java Telephony Application Programming Interface (JTAPI) session server IP address. The type of internet address is indicated by the value of cueJTAPIServerIPType.')
cueJTAPISubsystemState = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 1), ("initializing", 2), ("inService", 3), ("outOfService", 4), ("shuttingDown", 5), ("shutDown", 6), ("partialService", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueJTAPISubsystemState.setStatus('current')
if mibBuilder.loadTexts: cueJTAPISubsystemState.setDescription("Java Telephony Application Programming Interface (JTAPI) subsystem functional state. 'unknown' - Unknown. 'initializing' - Initializing. 'inService' - In service. 'outOfService' - Out of service. 'shuttingDown' - Shutting down. 'shutDown' - Shut down. 'partialService' - Partial service.")
cueJTAPIUsername = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 4, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueJTAPIUsername.setStatus('current')
if mibBuilder.loadTexts: cueJTAPIUsername.setDescription('Java Telephony Application Programming Interface (JTAPI) session user name.')
cueJTAPISoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 4, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueJTAPISoftwareVersion.setStatus('current')
if mibBuilder.loadTexts: cueJTAPISoftwareVersion.setDescription('Java Telephony Application Programming Interface (JTAPI) software version string.')
cueJTAPIPortsRegistered = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 4, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueJTAPIPortsRegistered.setStatus('current')
if mibBuilder.loadTexts: cueJTAPIPortsRegistered.setDescription('Current number of Java Telephony Application Programming Interface (JTAPI) ports registered.')
cueSystemDefaults = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 5))
cueDefaultMailboxSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 5, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cueDefaultMailboxSize.setStatus('current')
if mibBuilder.loadTexts: cueDefaultMailboxSize.setDescription('Default mailbox size in seconds. New mailboxes will have this default size.')
cueDefaultGreetingSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 5, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cueDefaultGreetingSize.setStatus('current')
if mibBuilder.loadTexts: cueDefaultGreetingSize.setDescription('Default greeting length in seconds. New mailboxes will have this default maximum greeting length.')
cueDefaultMessageSizeMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 5, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cueDefaultMessageSizeMax.setStatus('current')
if mibBuilder.loadTexts: cueDefaultMessageSizeMax.setDescription('Default maximum message length in seconds. New mailboxes will have this default maximum single message length.')
cueDefaultMessageExpiryTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 1, 5, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('days').setMaxAccess("readonly")
if mibBuilder.loadTexts: cueDefaultMessageExpiryTime.setStatus('current')
if mibBuilder.loadTexts: cueDefaultMessageExpiryTime.setDescription('Default message age before deletion in days. New mailboxes will have this default age limit.')
cueUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2))
cueUsageScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1))
cueLicensedPortsMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueLicensedPortsMax.setStatus('current')
if mibBuilder.loadTexts: cueLicensedPortsMax.setDescription('Maximum number of call processing ports. This is limited by the type of license purchased.')
cueActiveCalls = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueActiveCalls.setStatus('current')
if mibBuilder.loadTexts: cueActiveCalls.setDescription('Number of calls in progress. The number of active calls is limited by cueLicensedPortsMax.')
cuePersonalMailboxes = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuePersonalMailboxes.setStatus('current')
if mibBuilder.loadTexts: cuePersonalMailboxes.setDescription("Current number of personal mailboxes. A personal mailbox holds a user's voicemail messages.")
cueGeneralDeliveryMailboxes = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueGeneralDeliveryMailboxes.setStatus('current')
if mibBuilder.loadTexts: cueGeneralDeliveryMailboxes.setDescription('Current number of general delivery mailboxes. A general delivery mailbox is used to distribute a message to a list of users. Examples would be department or company wide messages via voicemail.')
cueOrphanedMailboxes = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueOrphanedMailboxes.setStatus('current')
if mibBuilder.loadTexts: cueOrphanedMailboxes.setDescription('Current number of mailboxes not associated with an owner. This may occur if the user is deleted, but the mailbox is not. The mailbox will continue to take up its defined cueAllocatedCapacity on the storage media.')
cueCapacityOfVoicemail = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cueCapacityOfVoicemail.setStatus('current')
if mibBuilder.loadTexts: cueCapacityOfVoicemail.setDescription("Licensed maximum capacity of voicemail in minutes. It is the ceiling for the sum of all user's mailboxes.")
cueAllocatedCapacity = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cueAllocatedCapacity.setStatus('current')
if mibBuilder.loadTexts: cueAllocatedCapacity.setDescription("Allocated capacity of voicemail in minutes. This is the sum of each user's defined mailbox size, regardless of whether they are full or empty. The cueAllocatedCapacity cannot exceed the licensed cueCapacityOfVoicemail.")
cueTotalTimeUsed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cueTotalTimeUsed.setStatus('current')
if mibBuilder.loadTexts: cueTotalTimeUsed.setDescription('Total time used in minutes for greetings and messages in all mailboxes. This cannot exceed the cueAllocatedCapacity. If all mailboxes are full, cueTotalTimeUsed will equal cueAllocatedCapacity.')
cuePercentTimeUsed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuePercentTimeUsed.setStatus('current')
if mibBuilder.loadTexts: cuePercentTimeUsed.setDescription('Percentage of total time used for greetings and messages in all mailboxes relative to the licensed cueCapacityOfVoicemail.')
cueMessageTimeUsed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMessageTimeUsed.setStatus('current')
if mibBuilder.loadTexts: cueMessageTimeUsed.setDescription('Message time used in seconds. This is the total of all messages stored in all mailboxes.')
cueMessageCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMessageCount.setStatus('current')
if mibBuilder.loadTexts: cueMessageCount.setDescription('Total number of messages stored in all mailboxes.')
cueAverageMessageLength = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 12), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cueAverageMessageLength.setStatus('current')
if mibBuilder.loadTexts: cueAverageMessageLength.setDescription('Average message length in seconds of all messages stored in all mailboxes.')
cueGreetingTimeUsed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 13), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cueGreetingTimeUsed.setStatus('current')
if mibBuilder.loadTexts: cueGreetingTimeUsed.setDescription('Greeting time used in seconds for all greetings in all mailboxes.')
cueGreetingCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 14), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueGreetingCount.setStatus('current')
if mibBuilder.loadTexts: cueGreetingCount.setDescription('The number of greetings in all mailboxes.')
cueAverageGreetingLength = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 15), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cueAverageGreetingLength.setStatus('current')
if mibBuilder.loadTexts: cueAverageGreetingLength.setDescription('Average greeting length in seconds.')
cueMessagesLeft = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMessagesLeft.setStatus('current')
if mibBuilder.loadTexts: cueMessagesLeft.setDescription('Number of messages left in all mailboxes since the last boot.')
cueMessagesRetrieved = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMessagesRetrieved.setStatus('current')
if mibBuilder.loadTexts: cueMessagesRetrieved.setDescription('Number of messages retrieved from all mailboxes since the last boot.')
cueMessagesDeleted = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMessagesDeleted.setStatus('current')
if mibBuilder.loadTexts: cueMessagesDeleted.setDescription('Number of messages deleted from all mailboxes since the last boot.')
cueLicensedMailboxesMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueLicensedMailboxesMax.setStatus('current')
if mibBuilder.loadTexts: cueLicensedMailboxesMax.setDescription('Licensed maximum number of mailboxes. Enhanced licenses may be purchased to increase this limit.')
cueMailboxesAbove90PercentFull = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMailboxesAbove90PercentFull.setStatus('current')
if mibBuilder.loadTexts: cueMailboxesAbove90PercentFull.setDescription('Number of mailboxes that are at least 90 percent full. This is an indication of general use.')
cueMboxTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2), )
if mibBuilder.loadTexts: cueMboxTable.setStatus('current')
if mibBuilder.loadTexts: cueMboxTable.setDescription('A list of mailbox entries.')
cueMboxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-UNITY-EXPRESS-MIB", "cueMboxIndex"))
if mibBuilder.loadTexts: cueMboxEntry.setStatus('current')
if mibBuilder.loadTexts: cueMboxEntry.setDescription('An entry containing information about a particular mailbox.')
cueMboxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cueMboxIndex.setStatus('current')
if mibBuilder.loadTexts: cueMboxIndex.setDescription('A unique value, greater than zero, for each mailbox.')
cueMboxOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMboxOwner.setStatus('current')
if mibBuilder.loadTexts: cueMboxOwner.setDescription('The user name of the mailbox owner.')
cueMboxPrimaryExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMboxPrimaryExtension.setStatus('current')
if mibBuilder.loadTexts: cueMboxPrimaryExtension.setDescription('The phone extension number of the mailbox owner.')
cueMboxType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("personal", 1), ("generalDelivery", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMboxType.setStatus('current')
if mibBuilder.loadTexts: cueMboxType.setDescription("The type of mailbox. A personal mailbox stores messages for a user. A general delivery mailbox distributes broadcast messages to a list of users. 'personal' - Personal mailbox of the owner. 'generalDelivery' - Assigned to a group for delivery.")
cueMboxDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMboxDescription.setStatus('current')
if mibBuilder.loadTexts: cueMboxDescription.setDescription('A textual string containing information about the mailbox.')
cueMboxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMboxSize.setStatus('current')
if mibBuilder.loadTexts: cueMboxSize.setDescription('Total number of seconds allocated for greetings and messages.')
cueMboxTimeUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMboxTimeUsed.setStatus('current')
if mibBuilder.loadTexts: cueMboxTimeUsed.setDescription('Time used for greetings and messages in seconds for this mailbox. cueMboxTimeUsed cannot exceed cueMboxSize.')
cueMboxPercentTimeUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMboxPercentTimeUsed.setStatus('current')
if mibBuilder.loadTexts: cueMboxPercentTimeUsed.setDescription('Percentage of cueMboxSize taken by greetings and messages in this mailbox.')
cueMboxNumberOfMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMboxNumberOfMessages.setStatus('current')
if mibBuilder.loadTexts: cueMboxNumberOfMessages.setDescription('Number of messages in the mailbox.')
cueMboxNumberOfNewMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMboxNumberOfNewMessages.setStatus('current')
if mibBuilder.loadTexts: cueMboxNumberOfNewMessages.setDescription('Number of new messages in the mailbox.')
cueMboxNumberOfSavedMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMboxNumberOfSavedMessages.setStatus('current')
if mibBuilder.loadTexts: cueMboxNumberOfSavedMessages.setDescription('Number of saved messages in the mailbox.')
cueMboxMessageSizeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMboxMessageSizeMax.setStatus('current')
if mibBuilder.loadTexts: cueMboxMessageSizeMax.setDescription('Maximum number of seconds for a single message.')
cueMboxMessageExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('days').setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMboxMessageExpiryTime.setStatus('current')
if mibBuilder.loadTexts: cueMboxMessageExpiryTime.setDescription('Message expiration time in days before a message is deleted from the mailbox.')
cueMboxPlayTutorial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMboxPlayTutorial.setStatus('current')
if mibBuilder.loadTexts: cueMboxPlayTutorial.setDescription("Indicates if the tutorial will be played at the next message retrieval. 'true' - The tutorial will be played at the next message retrieval. 'false' - The tutorial will not be played at the next message retrieval.")
cueMboxGreetingType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("standard", 1), ("alternate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMboxGreetingType.setStatus('current')
if mibBuilder.loadTexts: cueMboxGreetingType.setDescription("The type of greeting played to the caller. A standard greeting uses only the owner's recorded name. A custom greeting allows the user to record the full message played to callers. 'standard' - System greeting with owner's recorded name. 'alternate' - Owner custom greeting.")
cueMboxEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMboxEnabled.setStatus('current')
if mibBuilder.loadTexts: cueMboxEnabled.setDescription('Indicates if the mailbox is enabled for use.')
cueMboxBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMboxBusy.setStatus('current')
if mibBuilder.loadTexts: cueMboxBusy.setDescription('Indicates if the mailbox currently in use.')
cueMboxMWIState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 2, 2, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueMboxMWIState.setStatus('current')
if mibBuilder.loadTexts: cueMboxMWIState.setDescription("Indicates if the message waiting indicator (MWI) light on the user's phone is activated.")
cueSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 3))
cueLoginInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 3, 1))
cueLoginAttempts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueLoginAttempts.setStatus('current')
if mibBuilder.loadTexts: cueLoginAttempts.setDescription('Total number of login attempts from the GUI. This includes both success and failure.')
cueLoginUsernameFailures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueLoginUsernameFailures.setStatus('current')
if mibBuilder.loadTexts: cueLoginUsernameFailures.setDescription('Number of GUI logins rejected for unknown username.')
cueLoginPasswordFailures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueLoginPasswordFailures.setStatus('current')
if mibBuilder.loadTexts: cueLoginPasswordFailures.setDescription('Number of GUI logins rejected for incorrect password.')
cuePINInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 3, 2))
cuePINAttempts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 3, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuePINAttempts.setStatus('current')
if mibBuilder.loadTexts: cuePINAttempts.setDescription('Total number of voicemail PIN password attempts while trying to access a mailbox. This includes successes and failures.')
cuePINResets = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 3, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuePINResets.setStatus('current')
if mibBuilder.loadTexts: cuePINResets.setDescription('Number of PIN resets, overriding a current voicemail PIN password.')
cuePINUidFailures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 3, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuePINUidFailures.setStatus('current')
if mibBuilder.loadTexts: cuePINUidFailures.setDescription('Number of failed voicemail PIN attempts due to a bad User ID (uid) while trying to access a mailbox.')
cuePINPasswordFailures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 3, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuePINPasswordFailures.setStatus('current')
if mibBuilder.loadTexts: cuePINPasswordFailures.setDescription('Number of failed voicemail PIN attempts due to a bad password while trying to access a mailbox.')
cueNotif = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 4))
cueNotifConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 4, 1))
cueNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 4, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cueNotifEnable.setStatus('current')
if mibBuilder.loadTexts: cueNotifEnable.setDescription("Indicates if notifications should be generated. 'true' - Notifications will be sent to targets registered via the CUE CLI. 'false' - Notifications will not be sent. Default value for this object is true because frequency of the notification generation is not very high. The following notifications are controlled by this object. - ciscoUnityExpressApplAlert - ciscoUnityExpressStorageAlert - ciscoUnityExpressSecurityAlert - ciscoUnityExpressCallMgrAlert - ciscoUnityExpressRescExhausted - ciscoUnityExpressBackupAlert - ciscoUnityExpressNTPAlert")
cueNotifInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 4, 2))
cueNotifSeverity = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 4, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("error", 1), ("warning", 2), ("informational", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cueNotifSeverity.setStatus('current')
if mibBuilder.loadTexts: cueNotifSeverity.setDescription("The classification on the event severity. 'error' - Significant problem. 'warning' - Not immediately significant. 'informational' - Information only.")
cueNotifDate = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 4, 2, 2), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cueNotifDate.setStatus('current')
if mibBuilder.loadTexts: cueNotifDate.setDescription('The date and time the notification occurred at the source.')
cueNotifDescription = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 4, 2, 3), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cueNotifDescription.setStatus('current')
if mibBuilder.loadTexts: cueNotifDescription.setDescription('Description of the notification.')
cueNotifDetail = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 4, 2, 4), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cueNotifDetail.setStatus('current')
if mibBuilder.loadTexts: cueNotifDetail.setDescription('Detail information on error encountered.')
cueNotifSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 4, 3))
cueLoginUsernameThresh = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 4, 3, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueLoginUsernameThresh.setStatus('current')
if mibBuilder.loadTexts: cueLoginUsernameThresh.setDescription('Notification threshold for failed login attempts due to bad user name. A notification is sent if this threshold is exceeded within a 5 minute period.')
cueLoginPasswordThresh = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 4, 3, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueLoginPasswordThresh.setStatus('current')
if mibBuilder.loadTexts: cueLoginPasswordThresh.setDescription('Notification threshold for failed login attempts due to bad password. A notification is sent if this threshold is exceeded within a 5 minute period.')
cuePINUidThresh = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 4, 3, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuePINUidThresh.setStatus('current')
if mibBuilder.loadTexts: cuePINUidThresh.setDescription('Notification threshold for failed PIN authentication attempts due to bad user id number. A notification is sent if this threshold is exceeded within a 5 minute period.')
cuePINPasswordThresh = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 4, 3, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuePINPasswordThresh.setStatus('current')
if mibBuilder.loadTexts: cuePINPasswordThresh.setDescription('Notification threshold for failed PIN authentication attempts due to bad password. A notification is sent if this threshold is exceeded within a 5 minute period.')
cuePINResetThresh = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 4, 3, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuePINResetThresh.setStatus('current')
if mibBuilder.loadTexts: cuePINResetThresh.setDescription('Notification threshold for PIN password resets. A notification is sent if this threshold is exceeded within a 5 minute period.')
cueBackupRestore = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 5))
cueBRHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 5, 1), )
if mibBuilder.loadTexts: cueBRHistoryTable.setStatus('current')
if mibBuilder.loadTexts: cueBRHistoryTable.setDescription('A list of voicemail backup restore entries.')
cueBRHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-UNITY-EXPRESS-MIB", "cueBRHistoryIndex"))
if mibBuilder.loadTexts: cueBRHistoryEntry.setStatus('current')
if mibBuilder.loadTexts: cueBRHistoryEntry.setDescription('An entry containing information about a past voicemail backup or restore operation.')
cueBRHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 5, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cueBRHistoryIndex.setStatus('current')
if mibBuilder.loadTexts: cueBRHistoryIndex.setDescription('A unique value, greater than zero, for each entry.')
cueBRHistoryOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("backup", 1), ("restore", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueBRHistoryOperation.setStatus('current')
if mibBuilder.loadTexts: cueBRHistoryOperation.setDescription("The type of operation. 'backup' - Backup of voicemail information. 'restore' - Restore of voicemail information.")
cueBRHistoryDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 5, 1, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueBRHistoryDate.setStatus('current')
if mibBuilder.loadTexts: cueBRHistoryDate.setDescription('Date and time of the operation.')
cueBRHistoryResult = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 420, 1, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("success", 1), ("failure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cueBRHistoryResult.setStatus('current')
if mibBuilder.loadTexts: cueBRHistoryResult.setDescription("Backup or Restore operation result. 'success' - The operation was a success. 'failure' - The operation was a failure.")
ciscoUnityExpressApplAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 420, 0, 1)).setObjects(("CISCO-UNITY-EXPRESS-MIB", "cueNotifSeverity"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDate"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDescription"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDetail"))
if mibBuilder.loadTexts: ciscoUnityExpressApplAlert.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityExpressApplAlert.setDescription('Notification related to applications running on Cisco Unity Express. This notification is sent when application state is changed for example changed from running to down or vice versa.')
ciscoUnityExpressStorageAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 420, 0, 2)).setObjects(("CISCO-UNITY-EXPRESS-MIB", "cueNotifSeverity"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDate"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDescription"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDetail"))
if mibBuilder.loadTexts: ciscoUnityExpressStorageAlert.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityExpressStorageAlert.setDescription('Notification when storage device degradation is excessive.')
ciscoUnityExpressSecurityAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 420, 0, 3)).setObjects(("CISCO-UNITY-EXPRESS-MIB", "cueNotifSeverity"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDate"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDescription"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDetail"))
if mibBuilder.loadTexts: ciscoUnityExpressSecurityAlert.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityExpressSecurityAlert.setDescription('Notification when a possible security issue is detected.')
ciscoUnityExpressCallMgrAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 420, 0, 4)).setObjects(("CISCO-UNITY-EXPRESS-MIB", "cueNotifSeverity"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDate"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDescription"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDetail"))
if mibBuilder.loadTexts: ciscoUnityExpressCallMgrAlert.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityExpressCallMgrAlert.setDescription('Notification when the connection to the call manager is lost.')
ciscoUnityExpressRescExhausted = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 420, 0, 5)).setObjects(("CISCO-UNITY-EXPRESS-MIB", "cueNotifSeverity"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDate"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDescription"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDetail"))
if mibBuilder.loadTexts: ciscoUnityExpressRescExhausted.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityExpressRescExhausted.setDescription('Notification indicates that the CUE has run out of a certain specified type of resource. For example, when all JTAPI or SIP ports are in used, new incoming call can not be made, at that time this notification will be generated.')
ciscoUnityExpressBackupAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 420, 0, 6)).setObjects(("CISCO-UNITY-EXPRESS-MIB", "cueNotifSeverity"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDate"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDescription"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDetail"))
if mibBuilder.loadTexts: ciscoUnityExpressBackupAlert.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityExpressBackupAlert.setDescription('Notification of a voicemail backup failure.')
ciscoUnityExpressNTPAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 420, 0, 7)).setObjects(("CISCO-UNITY-EXPRESS-MIB", "cueNotifSeverity"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDate"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDescription"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDetail"))
if mibBuilder.loadTexts: ciscoUnityExpressNTPAlert.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityExpressNTPAlert.setDescription('Notification of a Network Time Protocol (NTP) error.')
ciscoUnityExpressMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 2, 1))
ciscoUnityExpressMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 420, 2, 2))
ciscoUnityExpressMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 420, 2, 1, 1)).setObjects(("CISCO-UNITY-EXPRESS-MIB", "cueSystemGroup"), ("CISCO-UNITY-EXPRESS-MIB", "cueUsageGroup"), ("CISCO-UNITY-EXPRESS-MIB", "cueSecurityGroup"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifGroup"), ("CISCO-UNITY-EXPRESS-MIB", "ciscoUnityExpressMIBNotificationsGroup"), ("CISCO-UNITY-EXPRESS-MIB", "cueBackupRestoreGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUnityExpressMIBCompliance = ciscoUnityExpressMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityExpressMIBCompliance.setDescription('The compliance statement for entities which implement the Cisco Unity Express MIB.')
ciscoUnityExpressMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 420, 2, 1, 2)).setObjects(("CISCO-UNITY-EXPRESS-MIB", "cueSystemGroupRev1"), ("CISCO-UNITY-EXPRESS-MIB", "cueUsageGroup"), ("CISCO-UNITY-EXPRESS-MIB", "cueSecurityGroup"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifGroup"), ("CISCO-UNITY-EXPRESS-MIB", "ciscoUnityExpressMIBNotificationsGroup"), ("CISCO-UNITY-EXPRESS-MIB", "cueBackupRestoreGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUnityExpressMIBComplianceRev1 = ciscoUnityExpressMIBComplianceRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityExpressMIBComplianceRev1.setDescription('The compliance statement for entities which implement the Cisco Unity Express MIB.')
cueSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 420, 2, 2, 1)).setObjects(("CISCO-UNITY-EXPRESS-MIB", "cueShutdownRequest"), ("CISCO-UNITY-EXPRESS-MIB", "cueAVTNumber"), ("CISCO-UNITY-EXPRESS-MIB", "cueVoicemailNumber"), ("CISCO-UNITY-EXPRESS-MIB", "cueAANumber"), ("CISCO-UNITY-EXPRESS-MIB", "cueHardwareModuleType"), ("CISCO-UNITY-EXPRESS-MIB", "cueCallControlAgentType"), ("CISCO-UNITY-EXPRESS-MIB", "cueSIPGatewayName"), ("CISCO-UNITY-EXPRESS-MIB", "cueSIPGatewayIPType"), ("CISCO-UNITY-EXPRESS-MIB", "cueSIPGatewayIP"), ("CISCO-UNITY-EXPRESS-MIB", "cueSIPPort"), ("CISCO-UNITY-EXPRESS-MIB", "cueJTAPIServerName"), ("CISCO-UNITY-EXPRESS-MIB", "cueJTAPIServerIPType"), ("CISCO-UNITY-EXPRESS-MIB", "cueJTAPIServerIP"), ("CISCO-UNITY-EXPRESS-MIB", "cueJTAPISubsystemState"), ("CISCO-UNITY-EXPRESS-MIB", "cueJTAPIUsername"), ("CISCO-UNITY-EXPRESS-MIB", "cueJTAPISoftwareVersion"), ("CISCO-UNITY-EXPRESS-MIB", "cueJTAPIPortsRegistered"), ("CISCO-UNITY-EXPRESS-MIB", "cueDefaultMailboxSize"), ("CISCO-UNITY-EXPRESS-MIB", "cueDefaultGreetingSize"), ("CISCO-UNITY-EXPRESS-MIB", "cueDefaultMessageSizeMax"), ("CISCO-UNITY-EXPRESS-MIB", "cueDefaultMessageExpiryTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cueSystemGroup = cueSystemGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cueSystemGroup.setDescription('General system parameters. It comprises of everything under cueSystem object.')
cueUsageGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 420, 2, 2, 2)).setObjects(("CISCO-UNITY-EXPRESS-MIB", "cueLicensedPortsMax"), ("CISCO-UNITY-EXPRESS-MIB", "cueActiveCalls"), ("CISCO-UNITY-EXPRESS-MIB", "cuePersonalMailboxes"), ("CISCO-UNITY-EXPRESS-MIB", "cueGeneralDeliveryMailboxes"), ("CISCO-UNITY-EXPRESS-MIB", "cueOrphanedMailboxes"), ("CISCO-UNITY-EXPRESS-MIB", "cueCapacityOfVoicemail"), ("CISCO-UNITY-EXPRESS-MIB", "cueAllocatedCapacity"), ("CISCO-UNITY-EXPRESS-MIB", "cueTotalTimeUsed"), ("CISCO-UNITY-EXPRESS-MIB", "cuePercentTimeUsed"), ("CISCO-UNITY-EXPRESS-MIB", "cueMessageTimeUsed"), ("CISCO-UNITY-EXPRESS-MIB", "cueMessageCount"), ("CISCO-UNITY-EXPRESS-MIB", "cueAverageMessageLength"), ("CISCO-UNITY-EXPRESS-MIB", "cueGreetingTimeUsed"), ("CISCO-UNITY-EXPRESS-MIB", "cueGreetingCount"), ("CISCO-UNITY-EXPRESS-MIB", "cueAverageGreetingLength"), ("CISCO-UNITY-EXPRESS-MIB", "cueMboxOwner"), ("CISCO-UNITY-EXPRESS-MIB", "cueMboxPrimaryExtension"), ("CISCO-UNITY-EXPRESS-MIB", "cueMboxType"), ("CISCO-UNITY-EXPRESS-MIB", "cueMboxDescription"), ("CISCO-UNITY-EXPRESS-MIB", "cueMboxSize"), ("CISCO-UNITY-EXPRESS-MIB", "cueMboxTimeUsed"), ("CISCO-UNITY-EXPRESS-MIB", "cueMboxPercentTimeUsed"), ("CISCO-UNITY-EXPRESS-MIB", "cueMboxNumberOfMessages"), ("CISCO-UNITY-EXPRESS-MIB", "cueMboxNumberOfNewMessages"), ("CISCO-UNITY-EXPRESS-MIB", "cueMboxNumberOfSavedMessages"), ("CISCO-UNITY-EXPRESS-MIB", "cueMboxMessageSizeMax"), ("CISCO-UNITY-EXPRESS-MIB", "cueMboxMessageExpiryTime"), ("CISCO-UNITY-EXPRESS-MIB", "cueMboxPlayTutorial"), ("CISCO-UNITY-EXPRESS-MIB", "cueMboxGreetingType"), ("CISCO-UNITY-EXPRESS-MIB", "cueMboxEnabled"), ("CISCO-UNITY-EXPRESS-MIB", "cueMboxBusy"), ("CISCO-UNITY-EXPRESS-MIB", "cueMboxMWIState"), ("CISCO-UNITY-EXPRESS-MIB", "cueMessagesLeft"), ("CISCO-UNITY-EXPRESS-MIB", "cueMessagesRetrieved"), ("CISCO-UNITY-EXPRESS-MIB", "cueMessagesDeleted"), ("CISCO-UNITY-EXPRESS-MIB", "cueLicensedMailboxesMax"), ("CISCO-UNITY-EXPRESS-MIB", "cueMailboxesAbove90PercentFull"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cueUsageGroup = cueUsageGroup.setStatus('current')
if mibBuilder.loadTexts: cueUsageGroup.setDescription('Voicemail usage parameters. It comprises of everything under cueUsage object.')
cueSecurityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 420, 2, 2, 3)).setObjects(("CISCO-UNITY-EXPRESS-MIB", "cueLoginAttempts"), ("CISCO-UNITY-EXPRESS-MIB", "cueLoginUsernameFailures"), ("CISCO-UNITY-EXPRESS-MIB", "cueLoginPasswordFailures"), ("CISCO-UNITY-EXPRESS-MIB", "cuePINAttempts"), ("CISCO-UNITY-EXPRESS-MIB", "cuePINResets"), ("CISCO-UNITY-EXPRESS-MIB", "cuePINUidFailures"), ("CISCO-UNITY-EXPRESS-MIB", "cuePINPasswordFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cueSecurityGroup = cueSecurityGroup.setStatus('current')
if mibBuilder.loadTexts: cueSecurityGroup.setDescription('Security information. It comprises of everything under cueSecurity object.')
cueNotifGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 420, 2, 2, 4)).setObjects(("CISCO-UNITY-EXPRESS-MIB", "cueNotifEnable"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifSeverity"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDate"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDescription"), ("CISCO-UNITY-EXPRESS-MIB", "cueNotifDetail"), ("CISCO-UNITY-EXPRESS-MIB", "cueLoginUsernameThresh"), ("CISCO-UNITY-EXPRESS-MIB", "cueLoginPasswordThresh"), ("CISCO-UNITY-EXPRESS-MIB", "cuePINUidThresh"), ("CISCO-UNITY-EXPRESS-MIB", "cuePINPasswordThresh"), ("CISCO-UNITY-EXPRESS-MIB", "cuePINResetThresh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cueNotifGroup = cueNotifGroup.setStatus('current')
if mibBuilder.loadTexts: cueNotifGroup.setDescription('Notification parameters. It comprises of everything under cueNotif object.')
ciscoUnityExpressMIBNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 420, 2, 2, 5)).setObjects(("CISCO-UNITY-EXPRESS-MIB", "ciscoUnityExpressApplAlert"), ("CISCO-UNITY-EXPRESS-MIB", "ciscoUnityExpressStorageAlert"), ("CISCO-UNITY-EXPRESS-MIB", "ciscoUnityExpressSecurityAlert"), ("CISCO-UNITY-EXPRESS-MIB", "ciscoUnityExpressCallMgrAlert"), ("CISCO-UNITY-EXPRESS-MIB", "ciscoUnityExpressRescExhausted"), ("CISCO-UNITY-EXPRESS-MIB", "ciscoUnityExpressBackupAlert"), ("CISCO-UNITY-EXPRESS-MIB", "ciscoUnityExpressNTPAlert"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUnityExpressMIBNotificationsGroup = ciscoUnityExpressMIBNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoUnityExpressMIBNotificationsGroup.setDescription('A collection of traps.')
cueBackupRestoreGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 420, 2, 2, 6)).setObjects(("CISCO-UNITY-EXPRESS-MIB", "cueBRHistoryOperation"), ("CISCO-UNITY-EXPRESS-MIB", "cueBRHistoryDate"), ("CISCO-UNITY-EXPRESS-MIB", "cueBRHistoryResult"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cueBackupRestoreGroup = cueBackupRestoreGroup.setStatus('current')
if mibBuilder.loadTexts: cueBackupRestoreGroup.setDescription('Voicemail backup and restore parameters.')
cueSystemGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 420, 2, 2, 7)).setObjects(("CISCO-UNITY-EXPRESS-MIB", "cueShutdownRequest"), ("CISCO-UNITY-EXPRESS-MIB", "cueAVTNumber"), ("CISCO-UNITY-EXPRESS-MIB", "cueVoicemailNumber"), ("CISCO-UNITY-EXPRESS-MIB", "cueAANumber"), ("CISCO-UNITY-EXPRESS-MIB", "cueCallControlAgentType"), ("CISCO-UNITY-EXPRESS-MIB", "cueSIPGatewayName"), ("CISCO-UNITY-EXPRESS-MIB", "cueSIPGatewayIPType"), ("CISCO-UNITY-EXPRESS-MIB", "cueSIPGatewayIP"), ("CISCO-UNITY-EXPRESS-MIB", "cueSIPPort"), ("CISCO-UNITY-EXPRESS-MIB", "cueJTAPIServerName"), ("CISCO-UNITY-EXPRESS-MIB", "cueJTAPIServerIPType"), ("CISCO-UNITY-EXPRESS-MIB", "cueJTAPIServerIP"), ("CISCO-UNITY-EXPRESS-MIB", "cueJTAPISubsystemState"), ("CISCO-UNITY-EXPRESS-MIB", "cueJTAPIUsername"), ("CISCO-UNITY-EXPRESS-MIB", "cueJTAPISoftwareVersion"), ("CISCO-UNITY-EXPRESS-MIB", "cueJTAPIPortsRegistered"), ("CISCO-UNITY-EXPRESS-MIB", "cueDefaultMailboxSize"), ("CISCO-UNITY-EXPRESS-MIB", "cueDefaultGreetingSize"), ("CISCO-UNITY-EXPRESS-MIB", "cueDefaultMessageSizeMax"), ("CISCO-UNITY-EXPRESS-MIB", "cueDefaultMessageExpiryTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cueSystemGroupRev1 = cueSystemGroupRev1.setStatus('current')
if mibBuilder.loadTexts: cueSystemGroupRev1.setDescription('General system parameters. It comprises of everything under cueSystem object.')
mibBuilder.exportSymbols("CISCO-UNITY-EXPRESS-MIB", cueNotifConfig=cueNotifConfig, cueLoginAttempts=cueLoginAttempts, cueHardwareModuleType=cueHardwareModuleType, cueJTAPIUsername=cueJTAPIUsername, ciscoUnityExpressMIBCompliances=ciscoUnityExpressMIBCompliances, cueAVTNumber=cueAVTNumber, cueMboxGreetingType=cueMboxGreetingType, cueMboxDescription=cueMboxDescription, cueMboxNumberOfSavedMessages=cueMboxNumberOfSavedMessages, cueLicensedMailboxesMax=cueLicensedMailboxesMax, cueMboxIndex=cueMboxIndex, cueBackupRestoreGroup=cueBackupRestoreGroup, cueSIPInfo=cueSIPInfo, cueOrphanedMailboxes=cueOrphanedMailboxes, cueNotifGroup=cueNotifGroup, cueUsage=cueUsage, cueSIPGatewayIP=cueSIPGatewayIP, cueBackupRestore=cueBackupRestore, cueMboxEntry=cueMboxEntry, ciscoUnityExpressMIBNotifs=ciscoUnityExpressMIBNotifs, cuePINUidFailures=cuePINUidFailures, cuePINPasswordFailures=cuePINPasswordFailures, ciscoUnityExpressMIB=ciscoUnityExpressMIB, cueMboxOwner=cueMboxOwner, cueLoginUsernameThresh=cueLoginUsernameThresh, cueJTAPISubsystemState=cueJTAPISubsystemState, cueSystemDefaults=cueSystemDefaults, cueShutdownRequest=cueShutdownRequest, cueMboxMessageExpiryTime=cueMboxMessageExpiryTime, cueSecurityGroup=cueSecurityGroup, cueSystemControl=cueSystemControl, cueDefaultMessageSizeMax=cueDefaultMessageSizeMax, ciscoUnityExpressMIBConform=ciscoUnityExpressMIBConform, cueNotifDate=cueNotifDate, ciscoUnityExpressBackupAlert=ciscoUnityExpressBackupAlert, ciscoUnityExpressStorageAlert=ciscoUnityExpressStorageAlert, cueMboxNumberOfMessages=cueMboxNumberOfMessages, cuePINAttempts=cuePINAttempts, cueSystem=cueSystem, cueMboxSize=cueMboxSize, cueMessageTimeUsed=cueMessageTimeUsed, cueBRHistoryDate=cueBRHistoryDate, cueMboxEnabled=cueMboxEnabled, cueAverageMessageLength=cueAverageMessageLength, cueSystemGroupRev1=cueSystemGroupRev1, ciscoUnityExpressMIBNotificationsGroup=ciscoUnityExpressMIBNotificationsGroup, cueJTAPIServerEntry=cueJTAPIServerEntry, cueBRHistoryEntry=cueBRHistoryEntry, cueMboxPrimaryExtension=cueMboxPrimaryExtension, cueUsageScalars=cueUsageScalars, cueSIPPort=cueSIPPort, cueDefaultMessageExpiryTime=cueDefaultMessageExpiryTime, cueNotifInfo=cueNotifInfo, cueMboxMWIState=cueMboxMWIState, cueSecurity=cueSecurity, cueJTAPIInfo=cueJTAPIInfo, cueMboxTable=cueMboxTable, cuePINPasswordThresh=cuePINPasswordThresh, cueBRHistoryResult=cueBRHistoryResult, cueLoginPasswordFailures=cueLoginPasswordFailures, cueMboxPercentTimeUsed=cueMboxPercentTimeUsed, cueAANumber=cueAANumber, cueMessagesLeft=cueMessagesLeft, cueMessagesDeleted=cueMessagesDeleted, cueNotifDetail=cueNotifDetail, cueBRHistoryTable=cueBRHistoryTable, ciscoUnityExpressMIBComplianceRev1=ciscoUnityExpressMIBComplianceRev1, cueBRHistoryOperation=cueBRHistoryOperation, cueNotifSecurity=cueNotifSecurity, cueAllocatedCapacity=cueAllocatedCapacity, cuePercentTimeUsed=cuePercentTimeUsed, ciscoUnityExpressApplAlert=ciscoUnityExpressApplAlert, cueMboxBusy=cueMboxBusy, cueJTAPIServerTable=cueJTAPIServerTable, cueGeneralDeliveryMailboxes=cueGeneralDeliveryMailboxes, cuePINResets=cuePINResets, cueDefaultMailboxSize=cueDefaultMailboxSize, cueLoginPasswordThresh=cueLoginPasswordThresh, ciscoUnityExpressSecurityAlert=ciscoUnityExpressSecurityAlert, cueNotif=cueNotif, cueLicensedPortsMax=cueLicensedPortsMax, PYSNMP_MODULE_ID=ciscoUnityExpressMIB, cuePINUidThresh=cuePINUidThresh, cueVoicemailNumber=cueVoicemailNumber, cueCapacityOfVoicemail=cueCapacityOfVoicemail, cueJTAPIServerName=cueJTAPIServerName, cueTotalTimeUsed=cueTotalTimeUsed, cueNotifEnable=cueNotifEnable, cueMboxType=cueMboxType, cueDefaultGreetingSize=cueDefaultGreetingSize, cueMessagesRetrieved=cueMessagesRetrieved, cueJTAPIServerIndex=cueJTAPIServerIndex, ciscoUnityExpressRescExhausted=ciscoUnityExpressRescExhausted, cueGreetingCount=cueGreetingCount, cueLoginInfo=cueLoginInfo, cueNotifSeverity=cueNotifSeverity, cueMboxNumberOfNewMessages=cueMboxNumberOfNewMessages, ciscoUnityExpressCallMgrAlert=ciscoUnityExpressCallMgrAlert, cueSIPGatewayIPType=cueSIPGatewayIPType, cueNotifDescription=cueNotifDescription, cueCallControlAgentType=cueCallControlAgentType, cueUsageGroup=cueUsageGroup, cueSystemGroup=cueSystemGroup, ciscoUnityExpressNTPAlert=ciscoUnityExpressNTPAlert, cueMboxPlayTutorial=cueMboxPlayTutorial, cueJTAPIServerIP=cueJTAPIServerIP, cueBRHistoryIndex=cueBRHistoryIndex, cueLoginUsernameFailures=cueLoginUsernameFailures, cueMboxTimeUsed=cueMboxTimeUsed, cueMessageCount=cueMessageCount, ciscoUnityExpressMIBGroups=ciscoUnityExpressMIBGroups, cueAverageGreetingLength=cueAverageGreetingLength, cuePersonalMailboxes=cuePersonalMailboxes, ciscoUnityExpressMIBObjects=ciscoUnityExpressMIBObjects, cueJTAPIServerIPType=cueJTAPIServerIPType, cueSystemScalars=cueSystemScalars, cuePINInfo=cuePINInfo, cueJTAPIPortsRegistered=cueJTAPIPortsRegistered, cueMboxMessageSizeMax=cueMboxMessageSizeMax, cuePINResetThresh=cuePINResetThresh, cueMailboxesAbove90PercentFull=cueMailboxesAbove90PercentFull, cueActiveCalls=cueActiveCalls, cueGreetingTimeUsed=cueGreetingTimeUsed, cueJTAPISoftwareVersion=cueJTAPISoftwareVersion, cueSIPGatewayName=cueSIPGatewayName, ciscoUnityExpressMIBCompliance=ciscoUnityExpressMIBCompliance)
