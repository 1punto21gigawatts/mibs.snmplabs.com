#
# PySNMP MIB module HPICF-SAVI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPICF-SAVI-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:33:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
hpSwitchExperimental, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitchExperimental")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetVersion, InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetVersion", "InetAddressType", "InetAddress")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Integer32, Bits, ModuleIdentity, Unsigned32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, NotificationType, IpAddress, Counter32, Gauge32, ObjectIdentity, Counter64, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Bits", "ModuleIdentity", "Unsigned32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "NotificationType", "IpAddress", "Counter32", "Gauge32", "ObjectIdentity", "Counter64", "MibIdentifier")
TextualConvention, MacAddress, RowStatus, DisplayString, TimeInterval = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "MacAddress", "RowStatus", "DisplayString", "TimeInterval")
hpicfSaviMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1))
hpicfSaviMIB.setRevisions(('2017-11-08 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpicfSaviMIB.setRevisionsDescriptions(('Initial version',))
if mibBuilder.loadTexts: hpicfSaviMIB.setLastUpdated('201711080000Z')
if mibBuilder.loadTexts: hpicfSaviMIB.setOrganization('HP Networking')
if mibBuilder.loadTexts: hpicfSaviMIB.setContactInfo('Hewlett-Packard Company 8000 Foothills Blvd. Roseville, CA 95747')
if mibBuilder.loadTexts: hpicfSaviMIB.setDescription('This MIB Module is designed to support the configuration and monitoring of DHCPv6 Snooping protocol. This MIB module was based off the IETF draft of SAVI mib, which was designed to support configuration and monitoring of SAVI protocol by Changging An(acq@cernet.edu.cn) and Jiahai Yang(yang@cernet.edu.cu), https://tools.ietf.org/html/draft-an-savi-mib-02.\\u201d.')
hpicfSaviObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1))
hpicfSaviObjectsPortTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 1), )
if mibBuilder.loadTexts: hpicfSaviObjectsPortTable.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjectsPortTable.setDescription('The table containing hpicfSAVI parameters of each anchor.')
hpicfSaviObjectsPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 1, 1), ).setIndexNames((0, "HPICF-SAVI-MIB", "hpicfSaviObjectsPortIPVersion"), (0, "HPICF-SAVI-MIB", "hpicfSaviObjectsPortIfIndex"))
if mibBuilder.loadTexts: hpicfSaviObjectsPortEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjectsPortEntry.setDescription('An entry containing hpicfSAVI running parameters of an anchor.')
hpicfSaviObjectsPortIPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 1, 1, 1), InetVersion())
if mibBuilder.loadTexts: hpicfSaviObjectsPortIPVersion.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjectsPortIPVersion.setDescription('The IP version.')
hpicfSaviObjectsPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 1, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: hpicfSaviObjectsPortIfIndex.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjectsPortIfIndex.setDescription("The index value that uniquely identifies the interface to which this entry is applicable. The interface identified by a particular value of this index is the same interface as identified by the same value of the IF-MIB's ifIndex.")
hpicfSaviObjPortDhcpTrustAttr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfSaviObjPortDhcpTrustAttr.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjPortDhcpTrustAttr.setDescription('The DHCP trust attribute of the port. enable(1), the attribute is set. disable(2), the attribute is not set.')
hpicfSaviObjectsPortFilteringNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfSaviObjectsPortFilteringNum.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjectsPortFilteringNum.setDescription('The max filtering number of the Port.')
hpicfSaviObjectsBindingTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 2), )
if mibBuilder.loadTexts: hpicfSaviObjectsBindingTable.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjectsBindingTable.setDescription('The table containing the state of binding between source address and anchor.')
hpicfSaviObjectsBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 2, 1), ).setIndexNames((0, "HPICF-SAVI-MIB", "hpicfSaviObjBindingIpAddrType"), (0, "HPICF-SAVI-MIB", "hpicfSaviObjectsBindingType"), (0, "HPICF-SAVI-MIB", "hpicfSaviObjectsBindingIfIndex"), (0, "HPICF-SAVI-MIB", "hpicfSaviObjectsBindingIpAddress"))
if mibBuilder.loadTexts: hpicfSaviObjectsBindingEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjectsBindingEntry.setDescription('An entry containing the state of binding between source address and anchor. Entries are keyed on the source IP address type, binding type, anchor, and source IP address.')
hpicfSaviObjBindingIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpicfSaviObjBindingIpAddrType.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjBindingIpAddrType.setDescription('IP address type of the binding source IP.')
hpicfSaviObjectsBindingType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("manual", 1), ("slaac", 2), ("dhcp", 3), ("send", 4))))
if mibBuilder.loadTexts: hpicfSaviObjectsBindingType.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjectsBindingType.setDescription('IP address assignment methods.')
hpicfSaviObjectsBindingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 2, 1, 3), InterfaceIndex())
if mibBuilder.loadTexts: hpicfSaviObjectsBindingIfIndex.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjectsBindingIfIndex.setDescription("The index value that uniquely identifies the interface to which this entry is applicable. The interface identified by a particular value of this index is the same interface as identified by the same value of the IF-MIB's ifIndex.")
hpicfSaviObjectsBindingIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 2, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: hpicfSaviObjectsBindingIpAddress.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjectsBindingIpAddress.setDescription('The binding source IP address.')
hpicfSaviObjectsBindingMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 2, 1, 5), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSaviObjectsBindingMacAddr.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjectsBindingMacAddr.setDescription('The binding source mac address.')
hpicfSaviObjectsBindingLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 2, 1, 6), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSaviObjectsBindingLifetime.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjectsBindingLifetime.setDescription("The remaining lifetime of the entry. TimeInterval is defined in RFC 2579, it's a period of time, measured in units of 0.01 seconds, and the value is (0..2147483647). If hpicfSaviObjectsBindingType=manual, a value of 2147483647 represents infinity.")
hpicfSaviObjectsBindingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSaviObjectsBindingRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjectsBindingRowStatus.setDescription('The status of this row, by which new entries may be created, or old entries deleted from this table. An Entry can be created or deleted only when hpicfSaviObjectsBindingType=manual. Row statuses createAndWait(5), notReady(3) and notInService(2) are not supported.')
hpicfSaviObjectsFilteringTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 3), )
if mibBuilder.loadTexts: hpicfSaviObjectsFilteringTable.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjectsFilteringTable.setDescription('The table containing the filtering entries.')
hpicfSaviObjectsFilteringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 3, 1), ).setIndexNames((0, "HPICF-SAVI-MIB", "hpicfSaviObjFilteringIpAddrType"), (0, "HPICF-SAVI-MIB", "hpicfSaviObjectsFilteringIfIndex"), (0, "HPICF-SAVI-MIB", "hpicfSaviObjFilteringIpAddr"))
if mibBuilder.loadTexts: hpicfSaviObjectsFilteringEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjectsFilteringEntry.setDescription('An entry containing the filtering parameters. Entries are keyed on the source IP address type, anchor, and source IP address.')
hpicfSaviObjFilteringIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpicfSaviObjFilteringIpAddrType.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjFilteringIpAddrType.setDescription('IP address type of the filtering source IP.')
hpicfSaviObjectsFilteringIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 3, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: hpicfSaviObjectsFilteringIfIndex.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjectsFilteringIfIndex.setDescription("The index value that uniquely identifies the interface to which this entry is applicable. The interface identified by a particular value of this index is the same interface as identified by the same value of the IF-MIB's ifIndex.")
hpicfSaviObjFilteringIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 3, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: hpicfSaviObjFilteringIpAddr.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjFilteringIpAddr.setDescription('The filtering source IP address.')
hpicfSaviObjectsFilteringMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 1, 3, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSaviObjectsFilteringMacAddr.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviObjectsFilteringMacAddr.setDescription('The filtering source mac address.')
hpicfSaviConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 2))
hpicfSaviCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 2, 1))
hpicfSaviCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 2, 1, 1)).setObjects(("HPICF-SAVI-MIB", "hpicfSaviportGroup"), ("HPICF-SAVI-MIB", "hpicfSavibindingGroup"), ("HPICF-SAVI-MIB", "hpicfSavifilteringGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSaviCompliance = hpicfSaviCompliance.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviCompliance.setDescription('The compliance statement for entities which implement hpicfSAVI protocol.')
hpicfSaviGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 2, 2))
hpicfSaviportGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 2, 2, 1)).setObjects(("HPICF-SAVI-MIB", "hpicfSaviObjPortDhcpTrustAttr"), ("HPICF-SAVI-MIB", "hpicfSaviObjectsPortFilteringNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSaviportGroup = hpicfSaviportGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfSaviportGroup.setDescription('The if group contains objects corresponding to the hpicfSavi running parameters of each anchor.')
hpicfSavibindingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 2, 2, 2)).setObjects(("HPICF-SAVI-MIB", "hpicfSaviObjectsBindingMacAddr"), ("HPICF-SAVI-MIB", "hpicfSaviObjectsBindingLifetime"), ("HPICF-SAVI-MIB", "hpicfSaviObjectsBindingRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSavibindingGroup = hpicfSavibindingGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfSavibindingGroup.setDescription('The binding group contains the binding information of anchor and source ip address.')
hpicfSavifilteringGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1, 2, 2, 3)).setObjects(("HPICF-SAVI-MIB", "hpicfSaviObjectsFilteringMacAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSavifilteringGroup = hpicfSavifilteringGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfSavifilteringGroup.setDescription('The filtering group contains the filtering information of anchor and source ip address.')
mibBuilder.exportSymbols("HPICF-SAVI-MIB", hpicfSaviObjectsBindingEntry=hpicfSaviObjectsBindingEntry, hpicfSaviObjectsBindingMacAddr=hpicfSaviObjectsBindingMacAddr, hpicfSaviObjPortDhcpTrustAttr=hpicfSaviObjPortDhcpTrustAttr, hpicfSaviGroups=hpicfSaviGroups, hpicfSaviportGroup=hpicfSaviportGroup, hpicfSaviObjectsFilteringIfIndex=hpicfSaviObjectsFilteringIfIndex, hpicfSaviConformance=hpicfSaviConformance, hpicfSaviObjBindingIpAddrType=hpicfSaviObjBindingIpAddrType, hpicfSaviObjFilteringIpAddr=hpicfSaviObjFilteringIpAddr, hpicfSaviObjectsPortIPVersion=hpicfSaviObjectsPortIPVersion, hpicfSaviCompliances=hpicfSaviCompliances, hpicfSaviObjFilteringIpAddrType=hpicfSaviObjFilteringIpAddrType, hpicfSavifilteringGroup=hpicfSavifilteringGroup, hpicfSaviObjectsBindingLifetime=hpicfSaviObjectsBindingLifetime, hpicfSaviObjectsPortFilteringNum=hpicfSaviObjectsPortFilteringNum, PYSNMP_MODULE_ID=hpicfSaviMIB, hpicfSaviMIB=hpicfSaviMIB, hpicfSaviObjectsFilteringMacAddr=hpicfSaviObjectsFilteringMacAddr, hpicfSaviObjectsFilteringEntry=hpicfSaviObjectsFilteringEntry, hpicfSaviObjectsPortEntry=hpicfSaviObjectsPortEntry, hpicfSaviObjectsBindingIfIndex=hpicfSaviObjectsBindingIfIndex, hpicfSaviObjectsBindingType=hpicfSaviObjectsBindingType, hpicfSaviObjectsFilteringTable=hpicfSaviObjectsFilteringTable, hpicfSaviObjectsBindingIpAddress=hpicfSaviObjectsBindingIpAddress, hpicfSaviObjectsPortTable=hpicfSaviObjectsPortTable, hpicfSaviObjectsPortIfIndex=hpicfSaviObjectsPortIfIndex, hpicfSaviCompliance=hpicfSaviCompliance, hpicfSaviObjects=hpicfSaviObjects, hpicfSaviObjectsBindingTable=hpicfSaviObjectsBindingTable, hpicfSaviObjectsBindingRowStatus=hpicfSaviObjectsBindingRowStatus, hpicfSavibindingGroup=hpicfSavibindingGroup)
