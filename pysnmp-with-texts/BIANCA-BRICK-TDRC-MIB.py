#
# PySNMP MIB module BIANCA-BRICK-TDRC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BIANCA-BRICK-TDRC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:38:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
DisplayString, = mibBuilder.importSymbols("RFC1158-MIB", "DisplayString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, iso, TimeTicks, NotificationType, Gauge32, ObjectIdentity, Counter32, Unsigned32, ModuleIdentity, IpAddress, MibIdentifier, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "iso", "TimeTicks", "NotificationType", "Gauge32", "ObjectIdentity", "Counter32", "Unsigned32", "ModuleIdentity", "IpAddress", "MibIdentifier", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
bintec = MibIdentifier((1, 3, 6, 1, 4, 1, 272))
bibo = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4))
biboip = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 5))
ipTdrcTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 5, 43), )
if mibBuilder.loadTexts: ipTdrcTable.setStatus('mandatory')
if mibBuilder.loadTexts: ipTdrcTable.setDescription("The ipTdrcTable enables the TCP Download Rate Control (TDRC) on the interface specified by ipTdrcIfIndex (interface index). Creating entries: Entries are created by assigning an interface index to the ipTdrcIfIndex object. Deleting entries: Entries are removed by setting an entry's ipTdrcMode object to 'delete'.")
ipTdrcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 5, 43, 1), ).setIndexNames((0, "BIANCA-BRICK-TDRC-MIB", "ipTdrcIfIndex"))
if mibBuilder.loadTexts: ipTdrcEntry.setStatus('mandatory')
if mibBuilder.loadTexts: ipTdrcEntry.setDescription('')
ipTdrcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 43, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: ipTdrcIfIndex.setDescription('The associated Interface Index.')
ipTdrcMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 43, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("ack-prioritisation", 2), ("static", 3), ("dynamic", 4), ("delete", 5))).clone('static')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcMode.setStatus('mandatory')
if mibBuilder.loadTexts: ipTdrcMode.setDescription('The TDRC mode for the associated interface. disabled(1): no TDRC active ack-prioritisation(2): preferential transmission of TCP ACK messages static(3): static TCP download limitation determined by ipTdrcMaxRate dynamic(4): dynamic TCP download limitation determined by ipTdrcMaxRate less amount of high priority traffic send via the associated interface delete(5): this entry will be deleted')
ipTdrcMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 43, 1, 3), Integer32().clone(1024000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcMaxRate.setStatus('mandatory')
if mibBuilder.loadTexts: ipTdrcMaxRate.setDescription('The maximum TCP download rate in bits per second.')
ipTdrcWindowScaling = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 43, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcWindowScaling.setStatus('mandatory')
if mibBuilder.loadTexts: ipTdrcWindowScaling.setDescription('The TCP window scaling used for TDRC.')
ipTdrcMss = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 43, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4056)).clone(1452)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcMss.setStatus('mandatory')
if mibBuilder.loadTexts: ipTdrcMss.setDescription('The TCP MSS used for TDRC.')
ipTdrcServices = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 43, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("listed-only", 1), ("all", 2))).clone('all')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcServices.setStatus('mandatory')
if mibBuilder.loadTexts: ipTdrcServices.setDescription('Determines the TCP services to be considered for TDRC. If set to listed-only(1), only the predefined and listed services (see ipTdrcServiceTable) will be controlled. If set to all(2) each TCP service will be controlled.')
ipTdrcServiceTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 5, 44), )
if mibBuilder.loadTexts: ipTdrcServiceTable.setStatus('mandatory')
if mibBuilder.loadTexts: ipTdrcServiceTable.setDescription("The ipTdrcServiceTable specifies TCP services to be considered for the TCP Download Rate Control (TDRC) if enabled on the interface specified by ipTdrcServiceIfIndex (interface index). Creating entries: Entries are created by assigning an interface index to the ipTdrcServiceIfIndex object. Deleting entries: Entries are removed by setting an entry's ipTdrcServiceStatus object to 'delete'.")
ipTdrcServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 5, 44, 1), ).setIndexNames((0, "BIANCA-BRICK-TDRC-MIB", "ipTdrcServiceIfIndex"))
if mibBuilder.loadTexts: ipTdrcServiceEntry.setStatus('mandatory')
if mibBuilder.loadTexts: ipTdrcServiceEntry.setDescription('')
ipTdrcServiceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 44, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcServiceIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: ipTdrcServiceIfIndex.setDescription('The associated Interface Index.')
ipTdrcServicePort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 44, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcServicePort.setStatus('mandatory')
if mibBuilder.loadTexts: ipTdrcServicePort.setDescription('The associated TCP service/port.')
ipTdrcServiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 44, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 5))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("delete", 5))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcServiceStatus.setStatus('mandatory')
if mibBuilder.loadTexts: ipTdrcServiceStatus.setDescription('The status of this entry. enabled(1): service will be TDRC controlled disabled(2): service will not be TDRC controlled delete(5): this entry will be deleted. ')
ipTdrcServiceAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 44, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcServiceAlias.setStatus('mandatory')
if mibBuilder.loadTexts: ipTdrcServiceAlias.setDescription('Alias Name for the Service Entry')
mibBuilder.exportSymbols("BIANCA-BRICK-TDRC-MIB", ipTdrcServicePort=ipTdrcServicePort, ipTdrcMaxRate=ipTdrcMaxRate, biboip=biboip, ipTdrcTable=ipTdrcTable, bintec=bintec, ipTdrcMss=ipTdrcMss, ipTdrcMode=ipTdrcMode, ipTdrcServiceTable=ipTdrcServiceTable, ipTdrcServices=ipTdrcServices, ipTdrcServiceIfIndex=ipTdrcServiceIfIndex, ipTdrcServiceAlias=ipTdrcServiceAlias, ipTdrcWindowScaling=ipTdrcWindowScaling, ipTdrcServiceEntry=ipTdrcServiceEntry, ipTdrcIfIndex=ipTdrcIfIndex, ipTdrcServiceStatus=ipTdrcServiceStatus, bibo=bibo, ipTdrcEntry=ipTdrcEntry)
