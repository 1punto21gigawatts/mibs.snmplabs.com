#
# PySNMP MIB module INTEL-LAPB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTEL-LAPB-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:54:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
mib2ext, = mibBuilder.importSymbols("INTEL-GEN-MIB", "mib2ext")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Bits, ModuleIdentity, iso, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Gauge32, Counter64, NotificationType, Integer32, MibIdentifier, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Bits", "ModuleIdentity", "iso", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Gauge32", "Counter64", "NotificationType", "Integer32", "MibIdentifier", "IpAddress", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
lapb2 = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 31))
lapbFrameType = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 31, 1))
lapbFrameTypeTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1), )
if mibBuilder.loadTexts: lapbFrameTypeTable.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeTable.setDescription('The LAPB frame type counters.')
lapbFrameTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1), ).setIndexNames((0, "INTEL-LAPB-MIB", "lapbFrameTypeIndex"))
if mibBuilder.loadTexts: lapbFrameTypeEntry.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeEntry.setDescription('')
lapbFrameTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeIndex.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeIndex.setDescription('The IfIndex for the LAPB layer of the inspected link.')
lapbFrameTypeRxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeRxInfo.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeRxInfo.setDescription('The number of received Info frames.')
lapbFrameTypeTxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeTxInfo.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeTxInfo.setDescription('The number of transmitted Info frames.')
lapbFrameTypeRxRR = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeRxRR.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeRxRR.setDescription('The number of received RRs.')
lapbFrameTypeTxRR = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeTxRR.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeTxRR.setDescription('The number of transmitted RRs')
lapbFrameTypeRxRNR = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeRxRNR.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeRxRNR.setDescription('The number of received RNRs')
lapbFrameTypeTxRNR = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeTxRNR.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeTxRNR.setDescription('The number of transmitted RNRs')
lapbFrameTypeRxREJ = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeRxREJ.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeRxREJ.setDescription('The number of received REJs')
lapbFrameTypeTxREJ = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeTxREJ.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeTxREJ.setDescription('The number of transmitted REJs')
lapbFrameTypeRxFRMR = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeRxFRMR.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeRxFRMR.setDescription('The number of received FRMRs')
lapbFrameTypeTxFRMR = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeTxFRMR.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeTxFRMR.setDescription('The number of transmitted FRMRs')
lapbFrameTypeRxSABM = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeRxSABM.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeRxSABM.setDescription('The number of received SABMs')
lapbFrameTypeTxSABM = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeTxSABM.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeTxSABM.setDescription('The number of transmitted SABMs')
lapbFrameTypeRxUA = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeRxUA.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeRxUA.setDescription('The number of received UAs')
lapbFrameTypeTxUA = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeTxUA.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeTxUA.setDescription('The number of transmitted UAs')
lapbFrameTypeRxDISC = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeRxDISC.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeRxDISC.setDescription('The number of received DISCs')
lapbFrameTypeTxDISC = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeTxDISC.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeTxDISC.setDescription('The number of transmitted DISCs')
lapbFrameTypeRxDM = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeRxDM.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeRxDM.setDescription('The number of received DMs')
lapbFrameTypeTxDM = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeTxDM.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeTxDM.setDescription('The number of transmitted DMs')
lapbFrameTypeRxPOLL = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeRxPOLL.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeRxPOLL.setDescription('The number of received frames with the POLL flag set')
lapbFrameTypeTxPOLL = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeTxPOLL.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeTxPOLL.setDescription('The number of transmitted frames with the POLL flag set')
lapbFrameTypeRxFINAL = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeRxFINAL.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeRxFINAL.setDescription('The number of received frames with the FINAL flag set')
lapbFrameTypeTxFINAL = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeTxFINAL.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeTxFINAL.setDescription('The number of transmitted frames with the FINAL flag set')
lapbFrameTypeRxComUndef = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeRxComUndef.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeRxComUndef.setDescription('The number of received frames with unknown command code.')
lapbFrameTypeRxIllAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeRxIllAddr.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeRxIllAddr.setDescription('The number of received frames with illegal address fields.')
lapbFrameTypeRxLong = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeRxLong.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeRxLong.setDescription('The number of received frames that were too long.')
lapbFrameTypeTxRe = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeTxRe.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeTxRe.setDescription('The number of times one or more frames had to be retransmitted.')
lapbFrameTypeReset = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 31, 1, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lapbFrameTypeReset.setStatus('mandatory')
if mibBuilder.loadTexts: lapbFrameTypeReset.setDescription('The number of times the link was reset due to the reception of a SABM while up.')
mibBuilder.exportSymbols("INTEL-LAPB-MIB", lapbFrameTypeRxDM=lapbFrameTypeRxDM, lapbFrameTypeRxRNR=lapbFrameTypeRxRNR, lapbFrameTypeTxRNR=lapbFrameTypeTxRNR, lapbFrameTypeRxLong=lapbFrameTypeRxLong, lapbFrameTypeRxSABM=lapbFrameTypeRxSABM, lapbFrameTypeTxREJ=lapbFrameTypeTxREJ, lapbFrameTypeRxFINAL=lapbFrameTypeRxFINAL, lapbFrameTypeTxUA=lapbFrameTypeTxUA, lapbFrameTypeRxComUndef=lapbFrameTypeRxComUndef, lapbFrameTypeEntry=lapbFrameTypeEntry, lapbFrameTypeRxDISC=lapbFrameTypeRxDISC, lapbFrameTypeRxInfo=lapbFrameTypeRxInfo, lapbFrameTypeTxFRMR=lapbFrameTypeTxFRMR, lapbFrameTypeTxPOLL=lapbFrameTypeTxPOLL, lapbFrameType=lapbFrameType, lapbFrameTypeTxRR=lapbFrameTypeTxRR, lapb2=lapb2, lapbFrameTypeTxDISC=lapbFrameTypeTxDISC, lapbFrameTypeRxRR=lapbFrameTypeRxRR, lapbFrameTypeRxREJ=lapbFrameTypeRxREJ, lapbFrameTypeRxFRMR=lapbFrameTypeRxFRMR, lapbFrameTypeTxInfo=lapbFrameTypeTxInfo, lapbFrameTypeTable=lapbFrameTypeTable, lapbFrameTypeRxUA=lapbFrameTypeRxUA, lapbFrameTypeTxDM=lapbFrameTypeTxDM, lapbFrameTypeRxPOLL=lapbFrameTypeRxPOLL, lapbFrameTypeTxRe=lapbFrameTypeTxRe, lapbFrameTypeTxFINAL=lapbFrameTypeTxFINAL, lapbFrameTypeIndex=lapbFrameTypeIndex, lapbFrameTypeTxSABM=lapbFrameTypeTxSABM, lapbFrameTypeRxIllAddr=lapbFrameTypeRxIllAddr, lapbFrameTypeReset=lapbFrameTypeReset)
