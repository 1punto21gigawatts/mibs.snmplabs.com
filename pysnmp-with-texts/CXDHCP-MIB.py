#
# PySNMP MIB module CXDHCP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CXDHCP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:32:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
cxCfgIp, = mibBuilder.importSymbols("CXProduct-SMI", "cxCfgIp")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, NotificationType, MibIdentifier, iso, ModuleIdentity, IpAddress, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ObjectIdentity, Gauge32, TimeTicks, Counter32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "NotificationType", "MibIdentifier", "iso", "ModuleIdentity", "IpAddress", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ObjectIdentity", "Gauge32", "TimeTicks", "Counter32", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cxCfgDhcpRATable = MibTable((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 16, 4), )
if mibBuilder.loadTexts: cxCfgDhcpRATable.setStatus('mandatory')
if mibBuilder.loadTexts: cxCfgDhcpRATable.setDescription('Provides the configuration for a BOOTP / DHCP Relay Agenr. The table contains one default entry (row) which can be modified.')
cxCfgDhcpRAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 16, 4, 1), ).setIndexNames((0, "CXDHCP-MIB", "cxCfgDhcpRAIndex"))
if mibBuilder.loadTexts: cxCfgDhcpRAEntry.setStatus('mandatory')
if mibBuilder.loadTexts: cxCfgDhcpRAEntry.setDescription('Identifies the configuration of a Relay Agent table.')
cxCfgDhcpRAIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 16, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cxCfgDhcpRAIndex.setStatus('mandatory')
if mibBuilder.loadTexts: cxCfgDhcpRAIndex.setDescription('Determines the number used to index the Relay Agent entry table. Range of Values: From 1 - 32 Default Value: None Configuration Changed: Administrative')
cxCfgDhcpRASrvAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 16, 4, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cxCfgDhcpRASrvAddr.setStatus('mandatory')
if mibBuilder.loadTexts: cxCfgDhcpRASrvAddr.setDescription('The IP Address of the DHCP or BOOTP Server the IP Address of another Relay Agent, a unique IP number. Default Value: None ')
cxCfgDhcpRARowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 16, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cxCfgDhcpRARowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: cxCfgDhcpRARowStatus.setDescription('Determines the status of the objects in a table row. Options: invalid (1): Row is flagged. After next reset the values will be disabled and the row will be deleted from the table. valid (2): Values are enabled. Default Value: (2) Configuration Changed: Administrative')
cxCfgDhcpRAStatTx = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 16, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cxCfgDhcpRAStatTx.setStatus('mandatory')
if mibBuilder.loadTexts: cxCfgDhcpRAStatTx.setDescription('The number of DHCP or BOOTP frames transmitted.')
cxCfgDhcpRAStatRx = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 16, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cxCfgDhcpRAStatRx.setStatus('mandatory')
if mibBuilder.loadTexts: cxCfgDhcpRAStatRx.setDescription('The number of DHCP or BOOTP frames recieved.')
mibBuilder.exportSymbols("CXDHCP-MIB", cxCfgDhcpRATable=cxCfgDhcpRATable, cxCfgDhcpRASrvAddr=cxCfgDhcpRASrvAddr, cxCfgDhcpRARowStatus=cxCfgDhcpRARowStatus, cxCfgDhcpRAEntry=cxCfgDhcpRAEntry, cxCfgDhcpRAStatTx=cxCfgDhcpRAStatTx, cxCfgDhcpRAIndex=cxCfgDhcpRAIndex, cxCfgDhcpRAStatRx=cxCfgDhcpRAStatRx)
