#
# PySNMP MIB module INFORMANT-BIZTALK (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INFORMANT-BIZTALK
# Produced by pysmi-0.3.4 at Wed May  1 13:53:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, TimeTicks, NotificationType, IpAddress, MibIdentifier, ModuleIdentity, iso, ObjectIdentity, Unsigned32, Counter64, Integer32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "TimeTicks", "NotificationType", "IpAddress", "MibIdentifier", "ModuleIdentity", "iso", "ObjectIdentity", "Unsigned32", "Counter64", "Integer32", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
InstanceName, informant = mibBuilder.importSymbols("WTCS", "InstanceName", "informant")
bizTalkServer = ModuleIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 4))
bizTalkServer.setRevisions(('2007-05-24 22:10', '2004-02-29 06:33', '2004-01-22 06:12',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: bizTalkServer.setRevisionsDescriptions(('Refactored to match the Microsoft BizTalk 2006.', 'Changed the syntax of the datapoints from integer to gauge.', 'The initial revision of this MIB module.',))
if mibBuilder.loadTexts: bizTalkServer.setLastUpdated('200705242210Z')
if mibBuilder.loadTexts: bizTalkServer.setOrganization('Informant Systems, Inc.')
if mibBuilder.loadTexts: bizTalkServer.setContactInfo('Garth Williams 11135-23A Ave Edmonton, AB T6J4W5 Canada Tel: +1 780 434 4113 E-mail: garth.williams@wtcs.org')
if mibBuilder.loadTexts: bizTalkServer.setDescription('The MIB module for SNMP Informant BizTalk performance counter entries.')
bizTalkFILEReceiveAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 1), )
if mibBuilder.loadTexts: bizTalkFILEReceiveAdapterTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkFILEReceiveAdapterTable.setDescription("A table containing performance information for instances of 'BizTalk:FILE Receive Adapter' objects.")
bizTalkFILEReceiveAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 1, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "btfileraInstance"))
if mibBuilder.loadTexts: bizTalkFILEReceiveAdapterEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkFILEReceiveAdapterEntry.setDescription("Performance information for one particular instance of 'BizTalk:FILE Receive Adapter' object.")
btfileraInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 1, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btfileraInstance.setStatus('current')
if mibBuilder.loadTexts: btfileraInstance.setDescription('Instance name.')
btfileraBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btfileraBytesReceived.setStatus('current')
if mibBuilder.loadTexts: btfileraBytesReceived.setDescription('Total number of bytes received by adapter. The counter is incremented after a message is completely read by the adapter from the file system.')
btfileraBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btfileraBytesReceivedPerSec.setStatus('current')
if mibBuilder.loadTexts: btfileraBytesReceivedPerSec.setDescription('Number of bytes received by adapter per second. The counter applies only to messages that have been completely read by the adapter from the file system.')
btfileraDeleteRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btfileraDeleteRetries.setStatus('current')
if mibBuilder.loadTexts: btfileraDeleteRetries.setDescription('Number of times adapter attempts to delete a file that has been read.')
btfileraLockFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btfileraLockFailures.setStatus('current')
if mibBuilder.loadTexts: btfileraLockFailures.setDescription('Number of times the file receive adapter failed to lock the file.')
btfileraLockFailuresPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btfileraLockFailuresPerSec.setStatus('current')
if mibBuilder.loadTexts: btfileraLockFailuresPerSec.setDescription('Number of times file receive adapter failed to lock the file per second.')
btfileraMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btfileraMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: btfileraMessagesReceived.setDescription('Total number of messages received by adapter. The counter is incremented after a message is completely read by the adapter from the file system.')
btfileraMessagesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btfileraMessagesReceivedPerSec.setStatus('current')
if mibBuilder.loadTexts: btfileraMessagesReceivedPerSec.setDescription('Number of messages received by adapter per second. The counter applies only to messages that have been completely read by the adapter from the file system.')
btfileraTimeToBuildBatch = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btfileraTimeToBuildBatch.setStatus('current')
if mibBuilder.loadTexts: btfileraTimeToBuildBatch.setDescription('Average time taken by file receive adapter to build a batch')
bizTalkFILESendAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 2), )
if mibBuilder.loadTexts: bizTalkFILESendAdapterTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkFILESendAdapterTable.setDescription("A table containing performance information for instances of 'BizTalk:FILE Send Adapter' objects.")
bizTalkFILESendAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 2, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "btfilesaInstance"))
if mibBuilder.loadTexts: bizTalkFILESendAdapterEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkFILESendAdapterEntry.setDescription("Performance information for one particular instance of 'BizTalk:FILE Send Adapter' object.")
btfilesaInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 2, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btfilesaInstance.setStatus('current')
if mibBuilder.loadTexts: btfilesaInstance.setDescription('Instance name.')
btfilesaBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btfilesaBytesSent.setStatus('current')
if mibBuilder.loadTexts: btfilesaBytesSent.setDescription('Total number of bytes sent by adapter. The counter is incremented only for messages that have been completely written to file system')
btfilesaBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btfilesaBytesSentPerSec.setStatus('current')
if mibBuilder.loadTexts: btfilesaBytesSentPerSec.setDescription('Number of bytes sent by adapter per second. The counter applies only to messages that have been completely written to file system')
btfilesaMessagesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btfilesaMessagesSent.setStatus('current')
if mibBuilder.loadTexts: btfilesaMessagesSent.setDescription('Total number of messages sent by adapter. The counter is incremented only for messages that have been completely written to file system.')
btfilesaMessagesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btfilesaMessagesSentPerSec.setStatus('current')
if mibBuilder.loadTexts: btfilesaMessagesSentPerSec.setDescription('Number of messages sent by adapter per second. The counter applies only to messages that have been completely written to file system.')
bizTalkFTPReceiveAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 3), )
if mibBuilder.loadTexts: bizTalkFTPReceiveAdapterTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkFTPReceiveAdapterTable.setDescription("A table containing performance information for instances of 'BizTalk:FTP Receive Adapter' objects.")
bizTalkFTPReceiveAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 3, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "btftpraInstance"))
if mibBuilder.loadTexts: bizTalkFTPReceiveAdapterEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkFTPReceiveAdapterEntry.setDescription("Performance information for one particular instance of 'BizTalk:FTP Receive Adapter' object.")
btftpraInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 3, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btftpraInstance.setStatus('current')
if mibBuilder.loadTexts: btftpraInstance.setDescription('Instance name.')
btftpraBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btftpraBytesReceived.setStatus('current')
if mibBuilder.loadTexts: btftpraBytesReceived.setDescription('Total number of bytes received by adapter. The counter is incremented after a message is completely read by the adapter from the FTP server.')
btftpraBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btftpraBytesReceivedPerSec.setStatus('current')
if mibBuilder.loadTexts: btftpraBytesReceivedPerSec.setDescription('Number of bytes received by adapter per second. The counter applies only to messages that have been completely read by the adapter from the FTP server.')
btftpraMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btftpraMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: btftpraMessagesReceived.setDescription('Total number of messages received by adapter. The counter is incremented after a message is completely read by the adapter from the FTP server.')
btftpraMessagesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btftpraMessagesReceivedPerSec.setStatus('current')
if mibBuilder.loadTexts: btftpraMessagesReceivedPerSec.setDescription('Number of messages received by adapter per second. The counter applies only to messages that have been completely read by the adapter from the FTP server.')
bizTalkFTPSendAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 4), )
if mibBuilder.loadTexts: bizTalkFTPSendAdapterTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkFTPSendAdapterTable.setDescription("A table containing performance information for instances of 'BizTalk:FTP Send Adapter' objects.")
bizTalkFTPSendAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 4, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "btftpsaInstance"))
if mibBuilder.loadTexts: bizTalkFTPSendAdapterEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkFTPSendAdapterEntry.setDescription("Performance information for one particular instance of 'BizTalk:FTP Send Adapter' object.")
btftpsaInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 4, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btftpsaInstance.setStatus('current')
if mibBuilder.loadTexts: btftpsaInstance.setDescription('Instance name.')
btftpsaBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 4, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btftpsaBytesSent.setStatus('current')
if mibBuilder.loadTexts: btftpsaBytesSent.setDescription('Total number of bytes sent by adapter. The counter is incremented only for messages that have been written to destination FTP server.')
btftpsaBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btftpsaBytesSentPerSec.setStatus('current')
if mibBuilder.loadTexts: btftpsaBytesSentPerSec.setDescription('Number of bytes sent by adapter per second. The counter applies only to messages that have been written to destination FTP server.')
btftpsaMessagesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btftpsaMessagesSent.setStatus('current')
if mibBuilder.loadTexts: btftpsaMessagesSent.setDescription('Total number of messages sent by adapter. The counter is incremented only for messages that have been written to destination FTP server.')
btftpsaMessagesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btftpsaMessagesSentPerSec.setStatus('current')
if mibBuilder.loadTexts: btftpsaMessagesSentPerSec.setDescription('Number of messages sent by adpater per second. The counter applies only to messages that have been written to destination FTP server.')
bizTalkHTTPReceiveAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 5), )
if mibBuilder.loadTexts: bizTalkHTTPReceiveAdapterTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkHTTPReceiveAdapterTable.setDescription("A table containing performance information for instances of 'BizTalk:HTTP Receive Adapter' objects.")
bizTalkHTTPReceiveAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 5, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "bthttpraInstance"))
if mibBuilder.loadTexts: bizTalkHTTPReceiveAdapterEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkHTTPReceiveAdapterEntry.setDescription("Performance information for one particular instance of 'BizTalk:HTTP Receive Adapter' object.")
bthttpraInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 5, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bthttpraInstance.setStatus('current')
if mibBuilder.loadTexts: bthttpraInstance.setDescription('Instance name.')
bthttpraMemoryQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 5, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bthttpraMemoryQueueSize.setStatus('current')
if mibBuilder.loadTexts: bthttpraMemoryQueueSize.setDescription("Number of incoming messages in internal adapter's queue")
bthttpraMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 5, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bthttpraMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: bthttpraMessagesReceived.setDescription('Total number of HTTP requests received by adapter. The counter is incremented after a request message is completely read by the adapter from HTTP client.')
bthttpraMessagesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 5, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bthttpraMessagesReceivedPerSec.setStatus('current')
if mibBuilder.loadTexts: bthttpraMessagesReceivedPerSec.setDescription('Number of HTTP requests received by adapter per second. The counter applies only to request messages that have been completely read by the adapter from HTTP client.')
bthttpraMessagesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 5, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bthttpraMessagesSent.setStatus('current')
if mibBuilder.loadTexts: bthttpraMessagesSent.setDescription('Total number of HTTP responses sent by adapter. The counter is incremented only for response messages that have been successfully sent to HTTP client.')
bthttpraMessagesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 5, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bthttpraMessagesSentPerSec.setStatus('current')
if mibBuilder.loadTexts: bthttpraMessagesSentPerSec.setDescription('Number of HTTP responses sent by adapter per second. The counter applies only to response messages that have been successfully sent to HTTP client.')
bthttpraTimeToAddMessageToBatch = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 5, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bthttpraTimeToAddMessageToBatch.setStatus('current')
if mibBuilder.loadTexts: bthttpraTimeToAddMessageToBatch.setDescription('Average time between when message is given to adapter by IIS and till message is added to a batch')
bthttpraTimeToBuildBatch = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 5, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bthttpraTimeToBuildBatch.setStatus('current')
if mibBuilder.loadTexts: bthttpraTimeToBuildBatch.setDescription('Average time taken by adapter to build a batch')
bizTalkHTTPSendAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 6), )
if mibBuilder.loadTexts: bizTalkHTTPSendAdapterTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkHTTPSendAdapterTable.setDescription("A table containing performance information for instances of 'BizTalk:HTTP Send Adapter' objects.")
bizTalkHTTPSendAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 6, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "bthttpsaInstance"))
if mibBuilder.loadTexts: bizTalkHTTPSendAdapterEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkHTTPSendAdapterEntry.setDescription("Performance information for one particular instance of 'BizTalk:HTTP Send Adapter' object.")
bthttpsaInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 6, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bthttpsaInstance.setStatus('current')
if mibBuilder.loadTexts: bthttpsaInstance.setDescription('Instance name.')
bthttpsaMemoryQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 6, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bthttpsaMemoryQueueSize.setStatus('current')
if mibBuilder.loadTexts: bthttpsaMemoryQueueSize.setDescription("Number of outgoing messages in internal adapter's queue")
bthttpsaMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 6, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bthttpsaMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: bthttpsaMessagesReceived.setDescription('Total number of HTTP response messages received by adapter. The counter is incremented after a response message is completely read by the adapter from HTTP server.')
bthttpsaMessagesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 6, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bthttpsaMessagesReceivedPerSec.setStatus('current')
if mibBuilder.loadTexts: bthttpsaMessagesReceivedPerSec.setDescription('Number of HTTP responses received by adapter per second. The counter applies only to response messages that have been completely read by the adapter from HTTP server.')
bthttpsaMessagesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 6, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bthttpsaMessagesSent.setStatus('current')
if mibBuilder.loadTexts: bthttpsaMessagesSent.setDescription('Total number of HTTP requests sent by adapter. The counter is incremented only for request messages that have reached destination URL.')
bthttpsaMessagesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 6, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bthttpsaMessagesSentPerSec.setStatus('current')
if mibBuilder.loadTexts: bthttpsaMessagesSentPerSec.setDescription('Number of HTTP requests sent by adapter per second. The counter applies only to request messages that have reached destination URL.')
bizTalkMSMQReceiveAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 7), )
if mibBuilder.loadTexts: bizTalkMSMQReceiveAdapterTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkMSMQReceiveAdapterTable.setDescription("A table containing performance information for instances of 'BizTalk:MSMQ Receive Adapter' objects.")
bizTalkMSMQReceiveAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 7, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "btmsmqraInstance"))
if mibBuilder.loadTexts: bizTalkMSMQReceiveAdapterEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkMSMQReceiveAdapterEntry.setDescription("Performance information for one particular instance of 'BizTalk:MSMQ Receive Adapter' object.")
btmsmqraInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 7, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmsmqraInstance.setStatus('current')
if mibBuilder.loadTexts: btmsmqraInstance.setDescription('Instance name.')
btmsmqraBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 7, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmsmqraBytesReceived.setStatus('current')
if mibBuilder.loadTexts: btmsmqraBytesReceived.setDescription('Total number of bytes received by adapter. The counter is incremented after a message is completely read by the adapter from the source queue.')
btmsmqraBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 7, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmsmqraBytesReceivedPerSec.setStatus('current')
if mibBuilder.loadTexts: btmsmqraBytesReceivedPerSec.setDescription('Number of bytes received by adapter per second. The counter applies only to messages that have been completely read by the adapter from the source queue.')
btmsmqraMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 7, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmsmqraMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: btmsmqraMessagesReceived.setDescription('Total number of messages received by adapter. The counter is incremented after a message is completely read by the adapter from the source queue.')
btmsmqraMessagesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 7, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmsmqraMessagesReceivedPerSec.setStatus('current')
if mibBuilder.loadTexts: btmsmqraMessagesReceivedPerSec.setDescription('Number of messages received by adapter per second. The counter applies only to messages that have been completely read by the adapter from the source queue.')
bizTalkMSMQSendAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 8), )
if mibBuilder.loadTexts: bizTalkMSMQSendAdapterTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkMSMQSendAdapterTable.setDescription("A table containing performance information for instances of 'BizTalk:MSMQ Send Adapter' objects.")
bizTalkMSMQSendAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 8, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "btmsmqsaInstance"))
if mibBuilder.loadTexts: bizTalkMSMQSendAdapterEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkMSMQSendAdapterEntry.setDescription("Performance information for one particular instance of 'BizTalk:MSMQ Send Adapter' object.")
btmsmqsaInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 8, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmsmqsaInstance.setStatus('current')
if mibBuilder.loadTexts: btmsmqsaInstance.setDescription('Instance name.')
btmsmqsaBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 8, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmsmqsaBytesSent.setStatus('current')
if mibBuilder.loadTexts: btmsmqsaBytesSent.setDescription('Total number of bytes sent by adapter. The counter is incremented only for messages that have reached destination queue.')
btmsmqsaBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 8, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmsmqsaBytesSentPerSec.setStatus('current')
if mibBuilder.loadTexts: btmsmqsaBytesSentPerSec.setDescription('Number of bytes sent by adapter per second. The counter applies only to messages that have reached destination queue.')
btmsmqsaMessagesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 8, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmsmqsaMessagesSent.setStatus('current')
if mibBuilder.loadTexts: btmsmqsaMessagesSent.setDescription('Total number of messages sent by adapter. The counter is incremented only for messages that have reached destination queue.')
btmsmqsaMessagesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 8, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmsmqsaMessagesSentPerSec.setStatus('current')
if mibBuilder.loadTexts: btmsmqsaMessagesSentPerSec.setDescription('Number of messages sent by adapter per second. The counter applies only to messages that have reached destination queue.')
bizTalkMessageAgentTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9), )
if mibBuilder.loadTexts: bizTalkMessageAgentTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkMessageAgentTable.setDescription("A table containing performance information for instances of 'BizTalk:Message Agent' objects.")
bizTalkMessageAgentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "btmaInstance"))
if mibBuilder.loadTexts: bizTalkMessageAgentEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkMessageAgentEntry.setDescription("Performance information for one particular instance of 'BizTalk:Message Agent' object.")
btmaInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaInstance.setStatus('current')
if mibBuilder.loadTexts: btmaInstance.setDescription('Instance name.')
btmaActiveInstanceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaActiveInstanceCount.setStatus('current')
if mibBuilder.loadTexts: btmaActiveInstanceCount.setDescription('The current number of active instances loaded in memory, including the standby instances')
btmaDatabaseSession = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaDatabaseSession.setStatus('current')
if mibBuilder.loadTexts: btmaDatabaseSession.setDescription('Number of open database connections to the messagebox')
btmaDatabaseSessionThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaDatabaseSessionThreshold.setStatus('current')
if mibBuilder.loadTexts: btmaDatabaseSessionThreshold.setDescription('The current threshold for the number of open database connections to the messagebox')
btmaDatabaseSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaDatabaseSize.setStatus('current')
if mibBuilder.loadTexts: btmaDatabaseSize.setDescription('The destination queue depth of all messagebox databases. If the host publishes to multiple hosts, the weighted average across all the destination queues is computed based on recent publish statistics. Queue depth refers to the aggregated record count of t')
btmaHighDatabaseSession = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaHighDatabaseSession.setStatus('current')
if mibBuilder.loadTexts: btmaHighDatabaseSession.setDescription('The number of currently opened database sessions exceeds the threshold')
btmaHighDatabaseSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaHighDatabaseSize.setStatus('current')
if mibBuilder.loadTexts: btmaHighDatabaseSize.setDescription('The destination queue depth of all messagebox databases exceeds the threshold. If the host publishes to multiple queues, the weighted average across all destination queues is computed (based on recent publish statistics) and compared with the threshold')
btmaHighInprocessMessageCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaHighInprocessMessageCount.setStatus('current')
if mibBuilder.loadTexts: btmaHighInprocessMessageCount.setDescription('The number of in-process messages exceeds the threshold')
btmaHighMessageDeliveryRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaHighMessageDeliveryRate.setStatus('current')
if mibBuilder.loadTexts: btmaHighMessageDeliveryRate.setDescription('The message delivery rate is higher than the message processing rate')
btmaHighMessagePublishingRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaHighMessagePublishingRate.setStatus('current')
if mibBuilder.loadTexts: btmaHighMessagePublishingRate.setDescription('The message publishing request rate is higher than the message publishing completion rate')
btmaHighProcessMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaHighProcessMemory.setStatus('current')
if mibBuilder.loadTexts: btmaHighProcessMemory.setDescription('The process memory consumption exceeds the threshold')
btmaHighSystemMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaHighSystemMemory.setStatus('current')
if mibBuilder.loadTexts: btmaHighSystemMemory.setDescription('The system-wide physical memory consumption exceeds the threshold')
btmaHighThreadCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaHighThreadCount.setStatus('current')
if mibBuilder.loadTexts: btmaHighThreadCount.setDescription('The thread count exceeds the threshold')
btmaInprocessMessageCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaInprocessMessageCount.setStatus('current')
if mibBuilder.loadTexts: btmaInprocessMessageCount.setDescription('The number of concurrent messages that the service class is processing')
btmaInprocessMsgCountThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaInprocessMsgCountThreshold.setStatus('current')
if mibBuilder.loadTexts: btmaInprocessMsgCountThreshold.setDescription('The current threshold for the number of concurrent messages that the service class is processing')
btmaMsgDeliveryDelayms = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaMsgDeliveryDelayms.setStatus('current')
if mibBuilder.loadTexts: btmaMsgDeliveryDelayms.setDescription('The delay injected in each batch for throttling the delivery of messages')
btmaMsgDeliveryIncomingRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaMsgDeliveryIncomingRate.setStatus('current')
if mibBuilder.loadTexts: btmaMsgDeliveryIncomingRate.setDescription('The number of messages delivered to the service class per second')
btmaMsgDeliveryOutgoingRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaMsgDeliveryOutgoingRate.setStatus('current')
if mibBuilder.loadTexts: btmaMsgDeliveryOutgoingRate.setDescription('The number of messages processed by the service class per second')
btmaMsgDeliveryThrottlingState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaMsgDeliveryThrottlingState.setStatus('current')
if mibBuilder.loadTexts: btmaMsgDeliveryThrottlingState.setDescription('The throttling state of the message delivery. A non-zero value indicates that the message delivery is being throttled due to one of the following reasons: 1- rate, 3- unprocessed message, 4- process memory, 5- system memory, 9- thread count, 10- user ove')
btmaMsgDlvryThrottlingStDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaMsgDlvryThrottlingStDuration.setStatus('current')
if mibBuilder.loadTexts: btmaMsgDlvryThrottlingStDuration.setDescription('Seconds spent in the current state (throttling or not throttling) of message delivery throttling')
btmaMsgDlvryThrottleUserOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaMsgDlvryThrottleUserOverride.setStatus('current')
if mibBuilder.loadTexts: btmaMsgDlvryThrottleUserOverride.setDescription('The user override for the message delivery')
btmaMsgPublishingDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaMsgPublishingDelay.setStatus('current')
if mibBuilder.loadTexts: btmaMsgPublishingDelay.setDescription('The delay injected in each qualifying batch for throttling the publishing of messages')
btmaMsgPublishingIncomingRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaMsgPublishingIncomingRate.setStatus('current')
if mibBuilder.loadTexts: btmaMsgPublishingIncomingRate.setDescription('The number of message publish requests issued by the service class per second')
btmaMsgPublishingOutgoingRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaMsgPublishingOutgoingRate.setStatus('current')
if mibBuilder.loadTexts: btmaMsgPublishingOutgoingRate.setDescription('The number of messages actually published by the service class per second')
btmaMsgPublishingThrottlingState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaMsgPublishingThrottlingState.setStatus('current')
if mibBuilder.loadTexts: btmaMsgPublishingThrottlingState.setDescription('The throttling state of the message publishing. A non-zero value indicates that the message publishing is being throttled due to one of the following reasons: 2- rate, 4- process memory, 5- system memory, 6- database size, 8- database session count, 9- th')
btmaMsgPubThrottlingStDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaMsgPubThrottlingStDuration.setStatus('current')
if mibBuilder.loadTexts: btmaMsgPubThrottlingStDuration.setDescription('Seconds spent in the current state (throttling or not throttling) of message publish throttling')
btmaMsgPubThrottlingUsrOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaMsgPubThrottlingUsrOverride.setStatus('current')
if mibBuilder.loadTexts: btmaMsgPubThrottlingUsrOverride.setDescription('The user override for the message publishing')
btmaPhysicalMemoryUsageMB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaPhysicalMemoryUsageMB.setStatus('current')
if mibBuilder.loadTexts: btmaPhysicalMemoryUsageMB.setDescription('The system-wide physical memory usage (MB)')
btmaProcessMemoryUsageMB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaProcessMemoryUsageMB.setStatus('current')
if mibBuilder.loadTexts: btmaProcessMemoryUsageMB.setDescription('The memory usage of current process (MB)')
btmaProcessMemUsageThresholdMB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaProcessMemUsageThresholdMB.setStatus('current')
if mibBuilder.loadTexts: btmaProcessMemUsageThresholdMB.setDescription('The current threshold for the memory usage of current process (MB). The threshold may be dynamically adjusted depending on the actual amount of memory available to this process and its memory consumption pattern')
btmaServiceClassID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaServiceClassID.setStatus('current')
if mibBuilder.loadTexts: btmaServiceClassID.setDescription('The decimal value of the initial part of the service class GUID that this performance counter instance corresponds to. A process may host more than one service class and the message agent performance counters show the data for the most active service clas')
btmaThreadCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaThreadCount.setStatus('current')
if mibBuilder.loadTexts: btmaThreadCount.setDescription('The total number of threads in the process')
btmaThreadCountThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaThreadCountThreshold.setStatus('current')
if mibBuilder.loadTexts: btmaThreadCountThreshold.setDescription('The current threshold for the total number of threads in the process')
btmaTotalBatchesCommitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaTotalBatchesCommitted.setStatus('current')
if mibBuilder.loadTexts: btmaTotalBatchesCommitted.setDescription('Total number of batches committed by the service class')
btmaTotalMessagesDelivered = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaTotalMessagesDelivered.setStatus('current')
if mibBuilder.loadTexts: btmaTotalMessagesDelivered.setDescription('The total number of messages delivered to the service class')
btmaTotalMessagesPublished = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 9, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmaTotalMessagesPublished.setStatus('current')
if mibBuilder.loadTexts: btmaTotalMessagesPublished.setDescription('The total number of messages published by the service class')
bizTalkMsgBoxGeneralCounterTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 10), )
if mibBuilder.loadTexts: bizTalkMsgBoxGeneralCounterTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkMsgBoxGeneralCounterTable.setDescription("A table containing performance information for instances of 'BizTalk:Message Box:General Counters' objects.")
bizTalkMsgBoxGeneralCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 10, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "btmbgcInstance"))
if mibBuilder.loadTexts: bizTalkMsgBoxGeneralCounterEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkMsgBoxGeneralCounterEntry.setDescription("Performance information for one particular instance of 'BizTalk:Message Box:General Counters' object.")
btmbgcInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 10, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmbgcInstance.setStatus('current')
if mibBuilder.loadTexts: btmbgcInstance.setDescription('Instance name.')
btmbgcInstancesTotalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 10, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmbgcInstancesTotalNumber.setStatus('current')
if mibBuilder.loadTexts: btmbgcInstancesTotalNumber.setDescription('Instances - Total Number: Tracks the sum of all the instances of each host, which exist within a particular Message Box.')
btmbgcMsgBoxDeadProcCleanup = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 10, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmbgcMsgBoxDeadProcCleanup.setStatus('current')
if mibBuilder.loadTexts: btmbgcMsgBoxDeadProcCleanup.setDescription('Time in seconds for most recent run of SQL agent job which releases database rows associated with dead BTS processes.')
btmbgcMsgBoxMsgCleanupPurgeJobs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 10, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmbgcMsgBoxMsgCleanupPurgeJobs.setStatus('current')
if mibBuilder.loadTexts: btmbgcMsgBoxMsgCleanupPurgeJobs.setDescription('Time in seconds for most recent run of SQL agent job which cleans up message box tables associated with removed messages.')
btmbgcMsgBoxPartsCleanupPurgeJob = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 10, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmbgcMsgBoxPartsCleanupPurgeJob.setStatus('current')
if mibBuilder.loadTexts: btmbgcMsgBoxPartsCleanupPurgeJob.setDescription('Time in seconds for most recent run of SQL agent job which clean up message box tables associated with removed message parts.')
btmbgcMsgBoxPurgeSubPurgeJobs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 10, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmbgcMsgBoxPurgeSubPurgeJobs.setStatus('current')
if mibBuilder.loadTexts: btmbgcMsgBoxPurgeSubPurgeJobs.setDescription('Time in seconds for most recent run of SQL agent job which purges subscriptions which are no longer in use.')
btmbgcSpoolSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 10, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmbgcSpoolSize.setStatus('current')
if mibBuilder.loadTexts: btmbgcSpoolSize.setDescription('Spool size: Tracks the size of the spool on a particular message box on a particular server.')
btmbgcTrackedMsgsCopyPurgeJobs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 10, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmbgcTrackedMsgsCopyPurgeJobs.setStatus('current')
if mibBuilder.loadTexts: btmbgcTrackedMsgsCopyPurgeJobs.setDescription('Time in seconds for most recent run of SQL agent job which copies tracked message bodies for tracked messages.')
btmbgcTrackingDataSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 10, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmbgcTrackingDataSize.setStatus('current')
if mibBuilder.loadTexts: btmbgcTrackingDataSize.setDescription('Tracking data size: Tracks the size of the tracking data table on a particular message box on a particular server.')
btmbgcTrackingSpoolCleanup = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 10, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmbgcTrackingSpoolCleanup.setStatus('current')
if mibBuilder.loadTexts: btmbgcTrackingSpoolCleanup.setDescription('Time in seconds for most recent run of SQL agent job which purges the inactive tracking spool tables.')
bizTalkMsgBoxHostCountersTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 11), )
if mibBuilder.loadTexts: bizTalkMsgBoxHostCountersTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkMsgBoxHostCountersTable.setDescription("A table containing performance information for instances of 'BizTalk:Message Box:Host Counters' objects.")
bizTalkMsgBoxHostCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 11, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "btmbhcInstance"))
if mibBuilder.loadTexts: bizTalkMsgBoxHostCountersEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkMsgBoxHostCountersEntry.setDescription("Performance information for one particular instance of 'BizTalk:Message Box:Host Counters' object.")
btmbhcInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 11, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmbhcInstance.setStatus('current')
if mibBuilder.loadTexts: btmbhcInstance.setDescription('Instance name.')
btmbhcHostQueInstStateMsgRefsLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 11, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmbhcHostQueInstStateMsgRefsLen.setStatus('current')
if mibBuilder.loadTexts: btmbhcHostQueInstStateMsgRefsLen.setDescription('Host Queue - Instance State Msg Refs - Length: Tracks the number of message references in the instance state queue for this particular host.')
btmbhcHostQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 11, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmbhcHostQueueLength.setStatus('current')
if mibBuilder.loadTexts: btmbhcHostQueueLength.setDescription('Host Queue - Length: Tracks the total number of messages in the particular host queue.')
btmbhcHostQueueNumberOfInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 11, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmbhcHostQueueNumberOfInstances.setStatus('current')
if mibBuilder.loadTexts: btmbhcHostQueueNumberOfInstances.setDescription('Host Queue - Number of Instances: Tracks the number of instances of this particular host.')
btmbhcHostQueueSuspendedMsgsLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 11, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmbhcHostQueueSuspendedMsgsLen.setStatus('current')
if mibBuilder.loadTexts: btmbhcHostQueueSuspendedMsgsLen.setDescription('Host Queue - Suspended Msgs - Length: Tracks the total number of suspended messages for the particular host.')
bizTalkMessagingTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12), )
if mibBuilder.loadTexts: bizTalkMessagingTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkMessagingTable.setDescription("A table containing performance information for instances of 'BizTalk:Messaging' objects.")
bizTalkMessagingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "btmInstance"))
if mibBuilder.loadTexts: bizTalkMessagingEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkMessagingEntry.setDescription("Performance information for one particular instance of 'BizTalk:Messaging' object.")
btmInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmInstance.setStatus('current')
if mibBuilder.loadTexts: btmInstance.setDescription('Instance name.')
btmActiveReceiveLocations = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmActiveReceiveLocations.setStatus('current')
if mibBuilder.loadTexts: btmActiveReceiveLocations.setDescription('Number of receive locations currently enabled in this host instance')
btmActiveReceiveThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmActiveReceiveThreads.setStatus('current')
if mibBuilder.loadTexts: btmActiveReceiveThreads.setDescription('Number of threads in the Messaging Engine currently processing messages received from adapters running in this host instance. These include messages that have been processed asynchronously by send adapters')
btmActiveSendMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmActiveSendMessages.setStatus('current')
if mibBuilder.loadTexts: btmActiveSendMessages.setDescription('Number of messages the Messaging Engine has currently in send processing. This includes messages currently in send pipeline processing as well as response messages for receive adapters')
btmActiveSendThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmActiveSendThreads.setStatus('current')
if mibBuilder.loadTexts: btmActiveSendThreads.setDescription('Number of threads in the Messaging Engine currently processing messages to send to adapters. This includes response messages to receive adapters')
btmDocumentsProcessed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmDocumentsProcessed.setStatus('current')
if mibBuilder.loadTexts: btmDocumentsProcessed.setDescription('Documents processed')
btmDocumentsProcessedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmDocumentsProcessedPerSec.setStatus('current')
if mibBuilder.loadTexts: btmDocumentsProcessedPerSec.setDescription('Documents processed per second')
btmDocumentsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmDocumentsReceived.setStatus('current')
if mibBuilder.loadTexts: btmDocumentsReceived.setDescription('Documents received')
btmDocumentsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmDocumentsReceivedPerSec.setStatus('current')
if mibBuilder.loadTexts: btmDocumentsReceivedPerSec.setDescription('Documents received per second')
btmDocumentsResubmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmDocumentsResubmitted.setStatus('current')
if mibBuilder.loadTexts: btmDocumentsResubmitted.setDescription('Total number of documents resubmitted by send adapters')
btmDocumentsSubmittedPerBatch = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmDocumentsSubmittedPerBatch.setStatus('current')
if mibBuilder.loadTexts: btmDocumentsSubmittedPerBatch.setDescription('Average number of documents submitted per batch.')
btmDocumentsSuspended = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmDocumentsSuspended.setStatus('current')
if mibBuilder.loadTexts: btmDocumentsSuspended.setDescription('Documents suspended')
btmDocumentsSuspendedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmDocumentsSuspendedPerSec.setStatus('current')
if mibBuilder.loadTexts: btmDocumentsSuspendedPerSec.setDescription('Documents suspended per second')
btmDocumentsTransmittedPerBatch = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmDocumentsTransmittedPerBatch.setStatus('current')
if mibBuilder.loadTexts: btmDocumentsTransmittedPerBatch.setDescription('Average number of messages transmitted per batch.')
btmIDProcess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmIDProcess.setStatus('current')
if mibBuilder.loadTexts: btmIDProcess.setDescription('The process identifier for this host instance')
btmPendingReceiveBatches = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmPendingReceiveBatches.setStatus('current')
if mibBuilder.loadTexts: btmPendingReceiveBatches.setDescription('Number of batches received by the Messaging Engine that have not completed processing. These include batches that have been processed asynchronously by send adapters')
btmPendingTransmittedMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmPendingTransmittedMessages.setStatus('current')
if mibBuilder.loadTexts: btmPendingTransmittedMessages.setDescription('Number of messages given by the Messaging Engine to send adapters that have not completed processing. This includes response messages for receive adapters')
btmRequestPerResponseTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmRequestPerResponseTimeouts.setStatus('current')
if mibBuilder.loadTexts: btmRequestPerResponseTimeouts.setDescription('Number of request messages that have not received a response message within the time limit specified by the adapter')
btmThrottledReceiveBatches = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 12, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmThrottledReceiveBatches.setStatus('current')
if mibBuilder.loadTexts: btmThrottledReceiveBatches.setDescription('Number of batches that have been blocked on receive by the Messaging Engine due to high service load. These batches contain new messages to be processed')
bizTalkMessagingLatencyTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 13), )
if mibBuilder.loadTexts: bizTalkMessagingLatencyTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkMessagingLatencyTable.setDescription("A table containing performance information for instances of 'BizTalk:Messaging Latency' objects.")
bizTalkMessagingLatencyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 13, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "btmlInstance"))
if mibBuilder.loadTexts: bizTalkMessagingLatencyEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkMessagingLatencyEntry.setDescription("Performance information for one particular instance of 'BizTalk:Messaging Latency' object.")
btmlInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 13, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmlInstance.setStatus('current')
if mibBuilder.loadTexts: btmlInstance.setDescription('Instance name.')
btmlInboundLatencysec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 13, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmlInboundLatencysec.setStatus('current')
if mibBuilder.loadTexts: btmlInboundLatencysec.setDescription('Average latency in seconds from when the Messaging Engine receives a document from the adapter until the time it is published to Message Box.')
btmlOutboundAdapterLatencysec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 13, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmlOutboundAdapterLatencysec.setStatus('current')
if mibBuilder.loadTexts: btmlOutboundAdapterLatencysec.setDescription('Average latency in seconds from when the adapter gets a document from the Messaging Engine until the time it is sent by the adapter.')
btmlOutboundLatencysec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 13, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmlOutboundLatencysec.setStatus('current')
if mibBuilder.loadTexts: btmlOutboundLatencysec.setDescription('Average latency in seconds from when the Messaging Engine receives a document from the Message Box until the time document is sent by the adapter.')
btmlRequestResponseLatencysec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 13, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btmlRequestResponseLatencysec.setStatus('current')
if mibBuilder.loadTexts: btmlRequestResponseLatencysec.setDescription('Average latency in seconds from when the Messaging Engine receives a request document from the adapter until the time a response document is given back to the adapter')
bizTalkPOP3ReceiveAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 14), )
if mibBuilder.loadTexts: bizTalkPOP3ReceiveAdapterTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkPOP3ReceiveAdapterTable.setDescription("A table containing performance information for instances of 'BizTalk:POP3 Receive Adapter' objects.")
bizTalkPOP3ReceiveAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 14, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "btpopraInstance"))
if mibBuilder.loadTexts: bizTalkPOP3ReceiveAdapterEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkPOP3ReceiveAdapterEntry.setDescription("Performance information for one particular instance of 'BizTalk:POP3 Receive Adapter' object.")
btpopraInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 14, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btpopraInstance.setStatus('current')
if mibBuilder.loadTexts: btpopraInstance.setDescription('Instance name.')
btpopraActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 14, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btpopraActiveSessions.setStatus('current')
if mibBuilder.loadTexts: btpopraActiveSessions.setDescription('Number of open POP3 connections adapter is managing at a time')
btpopraBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 14, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btpopraBytesReceived.setStatus('current')
if mibBuilder.loadTexts: btpopraBytesReceived.setDescription('Total number of bytes downloaded by adapter from a mail server.')
btpopraBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 14, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btpopraBytesReceivedPerSec.setStatus('current')
if mibBuilder.loadTexts: btpopraBytesReceivedPerSec.setDescription('Number of bytes downloaded from mail server per second.')
btpopraMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 14, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btpopraMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: btpopraMessagesReceived.setDescription('Total number of email messages downloaded by adapter from a mail server.')
btpopraMessagesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 14, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btpopraMessagesReceivedPerSec.setStatus('current')
if mibBuilder.loadTexts: btpopraMessagesReceivedPerSec.setDescription('Number of email messages downloaded from mail server per second.')
bizTalkSMTPSendAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 15), )
if mibBuilder.loadTexts: bizTalkSMTPSendAdapterTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkSMTPSendAdapterTable.setDescription("A table containing performance information for instances of 'BizTalk:SMTP Send Adapter' objects.")
bizTalkSMTPSendAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 15, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "btsmtpsaInstance"))
if mibBuilder.loadTexts: bizTalkSMTPSendAdapterEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkSMTPSendAdapterEntry.setDescription("Performance information for one particular instance of 'BizTalk:SMTP Send Adapter' object.")
btsmtpsaInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 15, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btsmtpsaInstance.setStatus('current')
if mibBuilder.loadTexts: btsmtpsaInstance.setDescription('Instance name.')
btsmtpsaMessagesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 15, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btsmtpsaMessagesSent.setStatus('current')
if mibBuilder.loadTexts: btsmtpsaMessagesSent.setDescription('Total number of messages sent by adapter. The counter is incremented only for messages that have been transmitted to SMTP server.')
btsmtpsaMessagesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 15, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btsmtpsaMessagesSentPerSec.setStatus('current')
if mibBuilder.loadTexts: btsmtpsaMessagesSentPerSec.setDescription('Number of messages sent by adapter per second. The counter applies only to messages that have been transmitted to SMTP server.')
bizTalkSOAPReceiveAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 16), )
if mibBuilder.loadTexts: bizTalkSOAPReceiveAdapterTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkSOAPReceiveAdapterTable.setDescription("A table containing performance information for instances of 'BizTalk:SOAP Receive Adapter' objects.")
bizTalkSOAPReceiveAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 16, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "btsoapraInstance"))
if mibBuilder.loadTexts: bizTalkSOAPReceiveAdapterEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkSOAPReceiveAdapterEntry.setDescription("Performance information for one particular instance of 'BizTalk:SOAP Receive Adapter' object.")
btsoapraInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 16, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btsoapraInstance.setStatus('current')
if mibBuilder.loadTexts: btsoapraInstance.setDescription('Instance name.')
btsoapraMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 16, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btsoapraMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: btsoapraMessagesReceived.setDescription('Total number of messages received by adapter. The counter is incremented after a request message is completely read by the adapter from SOAP client.')
btsoapraMessagesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 16, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btsoapraMessagesReceivedPerSec.setStatus('current')
if mibBuilder.loadTexts: btsoapraMessagesReceivedPerSec.setDescription('Number of messages received by adapter per second. The counter applies only to request messages that have been completely read by the adapter from SOAP client')
bizTalkSOAPSendAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 17), )
if mibBuilder.loadTexts: bizTalkSOAPSendAdapterTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkSOAPSendAdapterTable.setDescription("A table containing performance information for instances of 'BizTalk:SOAP Send Adapter' objects.")
bizTalkSOAPSendAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 17, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "btsoapsaInstance"))
if mibBuilder.loadTexts: bizTalkSOAPSendAdapterEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkSOAPSendAdapterEntry.setDescription("Performance information for one particular instance of 'BizTalk:SOAP Send Adapter' object.")
btsoapsaInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 17, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btsoapsaInstance.setStatus('current')
if mibBuilder.loadTexts: btsoapsaInstance.setDescription('Instance name.')
btsoapsaMessagesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 17, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btsoapsaMessagesSent.setStatus('current')
if mibBuilder.loadTexts: btsoapsaMessagesSent.setDescription('Total number of messages sent by adapter. The counter is incremented only for messages that have reached destination URL.')
btsoapsaMessagesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 17, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btsoapsaMessagesSentPerSec.setStatus('current')
if mibBuilder.loadTexts: btsoapsaMessagesSentPerSec.setDescription('Number of messages sent by adapter per second. The counter applies only to messages that have reached destination URL.')
bizTalkSQLReceiveAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 18), )
if mibBuilder.loadTexts: bizTalkSQLReceiveAdapterTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkSQLReceiveAdapterTable.setDescription("A table containing performance information for instances of 'BizTalk:SQL Receive Adapter' objects.")
bizTalkSQLReceiveAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 18, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "btsqlraInstance"))
if mibBuilder.loadTexts: bizTalkSQLReceiveAdapterEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkSQLReceiveAdapterEntry.setDescription("Performance information for one particular instance of 'BizTalk:SQL Receive Adapter' object.")
btsqlraInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 18, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btsqlraInstance.setStatus('current')
if mibBuilder.loadTexts: btsqlraInstance.setDescription('Instance name.')
btsqlraMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 18, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btsqlraMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: btsqlraMessagesReceived.setDescription('Total number of messages read by adapter from a SQL server.')
btsqlraMessagesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 18, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btsqlraMessagesReceivedPerSec.setStatus('current')
if mibBuilder.loadTexts: btsqlraMessagesReceivedPerSec.setDescription('Number of messages read from a SQL server per second.')
bizTalkSQLSendAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 19), )
if mibBuilder.loadTexts: bizTalkSQLSendAdapterTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkSQLSendAdapterTable.setDescription("A table containing performance information for instances of 'BizTalk:SQL Send Adapter' objects.")
bizTalkSQLSendAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 19, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "btsqlsaInstance"))
if mibBuilder.loadTexts: bizTalkSQLSendAdapterEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkSQLSendAdapterEntry.setDescription("Performance information for one particular instance of 'BizTalk:SQL Send Adapter' object.")
btsqlsaInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 19, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btsqlsaInstance.setStatus('current')
if mibBuilder.loadTexts: btsqlsaInstance.setDescription('Instance name.')
btsqlsaMessagesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 19, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btsqlsaMessagesSent.setStatus('current')
if mibBuilder.loadTexts: btsqlsaMessagesSent.setDescription('Total number of messages sent by adapter. The counter is incremented only for messages that have been written to destination SQL table.')
btsqlsaMessagesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 19, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btsqlsaMessagesSentPerSec.setStatus('current')
if mibBuilder.loadTexts: btsqlsaMessagesSentPerSec.setDescription('Number of messages sent by adapter per second. The counter applies only to messages that have been written to destination SQL table.')
bizTalkTDDSTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 20), )
if mibBuilder.loadTexts: bizTalkTDDSTable.setStatus('current')
if mibBuilder.loadTexts: bizTalkTDDSTable.setDescription("A table containing performance information for instances of 'BizTalk:TDDS' objects.")
bizTalkTDDSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 20, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "bttddsInstance"))
if mibBuilder.loadTexts: bizTalkTDDSEntry.setStatus('current')
if mibBuilder.loadTexts: bizTalkTDDSEntry.setDescription("Performance information for one particular instance of 'BizTalk:TDDS' object.")
bttddsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 20, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bttddsInstance.setStatus('current')
if mibBuilder.loadTexts: bttddsInstance.setDescription('Instance name.')
bttddsBatchesCommitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 20, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bttddsBatchesCommitted.setStatus('current')
if mibBuilder.loadTexts: bttddsBatchesCommitted.setDescription('Number of batches committed to destination database')
bttddsBatchesBeingProcessed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 20, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bttddsBatchesBeingProcessed.setStatus('current')
if mibBuilder.loadTexts: bttddsBatchesBeingProcessed.setDescription('Number of batches are being processed inside SQL transaction currently')
bttddsEventsCommitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 20, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bttddsEventsCommitted.setStatus('current')
if mibBuilder.loadTexts: bttddsEventsCommitted.setDescription('Number of events committed to destination database within this second')
bttddsEventsBeingProcessed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 20, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bttddsEventsBeingProcessed.setStatus('current')
if mibBuilder.loadTexts: bttddsEventsBeingProcessed.setDescription('Number of events are being processed inside SQL transaction currently')
bttddsRecordsCommitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 20, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bttddsRecordsCommitted.setStatus('current')
if mibBuilder.loadTexts: bttddsRecordsCommitted.setDescription('Number of records committed to destination database during this second.')
bttddsRecordsBeingProcessed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 20, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bttddsRecordsBeingProcessed.setStatus('current')
if mibBuilder.loadTexts: bttddsRecordsBeingProcessed.setDescription('Number of records are being processed inside SQL transaction currently')
bttddsTotalBatches = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 20, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bttddsTotalBatches.setStatus('current')
if mibBuilder.loadTexts: bttddsTotalBatches.setDescription('Total batches processed by TDDS')
bttddsTotalEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 20, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bttddsTotalEvents.setStatus('current')
if mibBuilder.loadTexts: bttddsTotalEvents.setDescription('Total events processed by TDDS')
bttddsTotalFailedBatches = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 20, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bttddsTotalFailedBatches.setStatus('current')
if mibBuilder.loadTexts: bttddsTotalFailedBatches.setDescription('Total batches failed to run by TDDS')
bttddsTotalFailedEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 20, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bttddsTotalFailedEvents.setStatus('current')
if mibBuilder.loadTexts: bttddsTotalFailedEvents.setDescription('Total events failed to run by TDDS')
bttddsTotalRecords = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 20, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bttddsTotalRecords.setStatus('current')
if mibBuilder.loadTexts: bttddsTotalRecords.setDescription('Total records processed by TDDS')
bizTalkSharePointServicesAdapter = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 4, 21))
btwspsaPercentReceiveMsgFailures = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 4, 21, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btwspsaPercentReceiveMsgFailures.setStatus('current')
if mibBuilder.loadTexts: btwspsaPercentReceiveMsgFailures.setDescription('The percentage of Windows SharePoint Services files that have not been processed by BizTalk Server due to errors.')
btwspsaPercentSendMsgFailures = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 4, 21, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btwspsaPercentSendMsgFailures.setStatus('current')
if mibBuilder.loadTexts: btwspsaPercentSendMsgFailures.setDescription('The percentage of failed messages BizTalk Server attempted to send to Windows SharePoint Services.')
btwspsaPercentWebServiceCallFail = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 4, 21, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btwspsaPercentWebServiceCallFail.setStatus('current')
if mibBuilder.loadTexts: btwspsaPercentWebServiceCallFail.setDescription('The percentage of Windows SharePoint Services adapter Web service calls that have failed.')
btwspsaTotalReceiveCommitFailure = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 4, 21, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btwspsaTotalReceiveCommitFailure.setStatus('current')
if mibBuilder.loadTexts: btwspsaTotalReceiveCommitFailure.setDescription('The total number of Windows SharePoint Services errors raised when updating the status of the SharePoint documents.')
btwspsaTotalReceiveMsgFailures = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 4, 21, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btwspsaTotalReceiveMsgFailures.setStatus('current')
if mibBuilder.loadTexts: btwspsaTotalReceiveMsgFailures.setDescription('The total number of Windows SharePoint Services files that have not been processed by BizTalk Server due to errors.')
btwspsaTotalReceivedMsgs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 4, 21, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btwspsaTotalReceivedMsgs.setStatus('current')
if mibBuilder.loadTexts: btwspsaTotalReceivedMsgs.setDescription('The total number of Windows SharePoint Services files received by the adapter, including files that failed to process.')
btwspsaTotalSendMsgFailures = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 4, 21, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btwspsaTotalSendMsgFailures.setStatus('current')
if mibBuilder.loadTexts: btwspsaTotalSendMsgFailures.setDescription('The total number of failed messages BizTalk Server attempted to send to Windows SharePoint Services.')
btwspsaTotalSentMsgs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 4, 21, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btwspsaTotalSentMsgs.setStatus('current')
if mibBuilder.loadTexts: btwspsaTotalSentMsgs.setDescription('The total number of messages BizTalk Server sent to Windows SharePoint Services, including files that failed to process.')
btwspsaTotalWebServiceCallFail = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 4, 21, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btwspsaTotalWebServiceCallFail.setStatus('current')
if mibBuilder.loadTexts: btwspsaTotalWebServiceCallFail.setDescription('The total number of Windows SharePoint Services adapter Web service calls that have failed.')
btwspsaWebServiceCallsPerSecond = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 4, 21, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btwspsaWebServiceCallsPerSecond.setStatus('current')
if mibBuilder.loadTexts: btwspsaWebServiceCallsPerSecond.setDescription('The number of Windows SharePoint Services adapter Web service calls per second.')
xLANGPerSOrchestrationsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22), )
if mibBuilder.loadTexts: xLANGPerSOrchestrationsTable.setStatus('current')
if mibBuilder.loadTexts: xLANGPerSOrchestrationsTable.setDescription("A table containing performance information for instances of 'XLANG/s Orchestrations' objects.")
xLANGPerSOrchestrationsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1), ).setIndexNames((0, "INFORMANT-BIZTALK", "btoInstance"))
if mibBuilder.loadTexts: xLANGPerSOrchestrationsEntry.setStatus('current')
if mibBuilder.loadTexts: xLANGPerSOrchestrationsEntry.setDescription("Performance information for one particular instance of XLANG/s Orchestrations' object.")
btoInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoInstance.setStatus('current')
if mibBuilder.loadTexts: btoInstance.setDescription('Instance name.')
btoPercentUsedPhysicalMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoPercentUsedPhysicalMemory.setStatus('current')
if mibBuilder.loadTexts: btoPercentUsedPhysicalMemory.setDescription('Percentage of used physical memory out of total physical memory on the computer.')
btoActiveApplicationDomains = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoActiveApplicationDomains.setStatus('current')
if mibBuilder.loadTexts: btoActiveApplicationDomains.setDescription('The number of application domains currently existing for hosting orchestrations')
btoAverageBatchFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoAverageBatchFactor.setStatus('current')
if mibBuilder.loadTexts: btoAverageBatchFactor.setDescription('The current ratio between the number of persistence points committed and underlying database transactions committed')
btoDatabaseTransactions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoDatabaseTransactions.setStatus('current')
if mibBuilder.loadTexts: btoDatabaseTransactions.setDescription('Number of underlying database transactions used to commit orchestrations work')
btoDatabaseTransactionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoDatabaseTransactionsPerSec.setStatus('current')
if mibBuilder.loadTexts: btoDatabaseTransactionsPerSec.setDescription('Number of underlying databse trasnactions used per second')
btoDehydratableOrchestrations = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoDehydratableOrchestrations.setStatus('current')
if mibBuilder.loadTexts: btoDehydratableOrchestrations.setDescription('Total number of idle orchestrations currently hosted by the application instance which may be dehydrated')
btoDehydratingOrchestrations = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoDehydratingOrchestrations.setStatus('current')
if mibBuilder.loadTexts: btoDehydratingOrchestrations.setDescription('Total number of dehydratable orchestrations which are currently in the process of dehydrating')
btoDehydrationCycleInProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoDehydrationCycleInProgress.setStatus('current')
if mibBuilder.loadTexts: btoDehydrationCycleInProgress.setDescription('Indicates whether there is a dehydration cycle in progress at the moment')
btoDehydrationCycles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoDehydrationCycles.setStatus('current')
if mibBuilder.loadTexts: btoDehydrationCycles.setDescription('Number of dehydration cycles completed')
btoDehydrationThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoDehydrationThreshold.setStatus('current')
if mibBuilder.loadTexts: btoDehydrationThreshold.setDescription('A metric, measured in milliseconds, that controls how aggresively services are being dehydrated.')
btoIdleOrchestrations = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoIdleOrchestrations.setStatus('current')
if mibBuilder.loadTexts: btoIdleOrchestrations.setDescription('Total number of idle service instances currently hosted by the application instance')
btoMBAllocatedPrivateMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoMBAllocatedPrivateMemory.setStatus('current')
if mibBuilder.loadTexts: btoMBAllocatedPrivateMemory.setDescription('Megabytes allocated for private memory')
btoMBAllocatedVirtualMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoMBAllocatedVirtualMemory.setStatus('current')
if mibBuilder.loadTexts: btoMBAllocatedVirtualMemory.setDescription('Megabytes allocated for virtual memory')
btoMsgBoxDBConnectionFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoMsgBoxDBConnectionFailures.setStatus('current')
if mibBuilder.loadTexts: btoMsgBoxDBConnectionFailures.setDescription('Number of database-wide errors occured')
btoOnlineMessageBoxDatabases = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoOnlineMessageBoxDatabases.setStatus('current')
if mibBuilder.loadTexts: btoOnlineMessageBoxDatabases.setDescription('Number of databases currently serving orchestrations')
btoOrchestrationsCompleted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoOrchestrationsCompleted.setStatus('current')
if mibBuilder.loadTexts: btoOrchestrationsCompleted.setDescription('Total number of orchestrations completed since the application instance started')
btoOrchestrationsCompletedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoOrchestrationsCompletedPerSec.setStatus('current')
if mibBuilder.loadTexts: btoOrchestrationsCompletedPerSec.setDescription('Number of orchestrations completed per second')
btoOrchestrationsCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoOrchestrationsCreated.setStatus('current')
if mibBuilder.loadTexts: btoOrchestrationsCreated.setDescription('Total number of orchestrations created since the application instance started')
btoOrchestrationsCreatedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoOrchestrationsCreatedPerSec.setStatus('current')
if mibBuilder.loadTexts: btoOrchestrationsCreatedPerSec.setDescription('Number of orchestrations created per second')
btoOrchestrationsDehydrated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoOrchestrationsDehydrated.setStatus('current')
if mibBuilder.loadTexts: btoOrchestrationsDehydrated.setDescription('Total number of orchestrations dehydrated since the application instance started')
btoOrchestrationDehydratedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoOrchestrationDehydratedPerSec.setStatus('current')
if mibBuilder.loadTexts: btoOrchestrationDehydratedPerSec.setDescription('Number of orchestrations dehydrated per second')
btoOrchestrationsDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoOrchestrationsDiscarded.setStatus('current')
if mibBuilder.loadTexts: btoOrchestrationsDiscarded.setDescription('Total number of orchestrations discarded from memory due to a database problem')
btoOrchestrationsDiscardedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoOrchestrationsDiscardedPerSec.setStatus('current')
if mibBuilder.loadTexts: btoOrchestrationsDiscardedPerSec.setDescription('Number of orchestrations discarded per second')
btoOrchestrationsRehydrated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoOrchestrationsRehydrated.setStatus('current')
if mibBuilder.loadTexts: btoOrchestrationsRehydrated.setDescription('Total number of orchestrations rehydrated since the application instance started')
btoOrchestrationRehydratedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoOrchestrationRehydratedPerSec.setStatus('current')
if mibBuilder.loadTexts: btoOrchestrationRehydratedPerSec.setDescription('Number of orchestrations rehydrated per second')
btoOrchestrationResidentInmemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoOrchestrationResidentInmemory.setStatus('current')
if mibBuilder.loadTexts: btoOrchestrationResidentInmemory.setDescription('Total number of service instances currently hosted by the application instance')
btoOrchestrationsSchedForDehyd = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoOrchestrationsSchedForDehyd.setStatus('current')
if mibBuilder.loadTexts: btoOrchestrationsSchedForDehyd.setDescription('Total number of dehydratable orchestrations for which there is a dehydration request pending')
btoOrchestrationsSuspended = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoOrchestrationsSuspended.setStatus('current')
if mibBuilder.loadTexts: btoOrchestrationsSuspended.setDescription('Total number of orchestrations who were suspended')
btoOrchestrationsSuspendedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoOrchestrationsSuspendedPerSec.setStatus('current')
if mibBuilder.loadTexts: btoOrchestrationsSuspendedPerSec.setDescription('Number of orchestrations suspended per second')
btoPendingMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoPendingMessages.setStatus('current')
if mibBuilder.loadTexts: btoPendingMessages.setDescription('Number of received messages the receipt of which has not yet been acknowledged to the message box')
btoPendingWorkItems = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoPendingWorkItems.setStatus('current')
if mibBuilder.loadTexts: btoPendingWorkItems.setDescription('Number of basic code blocks that are scheduled for to run')
btoPersistencePoints = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoPersistencePoints.setStatus('current')
if mibBuilder.loadTexts: btoPersistencePoints.setDescription('The number of times an orchestration state was persisted')
btoPersistencePointsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoPersistencePointsPerSec.setStatus('current')
if mibBuilder.loadTexts: btoPersistencePointsPerSec.setDescription('Number of persistence points per second')
btoRunnableOrchestrations = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoRunnableOrchestrations.setStatus('current')
if mibBuilder.loadTexts: btoRunnableOrchestrations.setDescription('Total number of service instances ready to run')
btoRunningOrchestrations = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoRunningOrchestrations.setStatus('current')
if mibBuilder.loadTexts: btoRunningOrchestrations.setDescription('Total number of service instances running')
btoTransactionalScopesAborted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoTransactionalScopesAborted.setStatus('current')
if mibBuilder.loadTexts: btoTransactionalScopesAborted.setDescription('Total number of transactional scopes not completed successfully since the application instance started')
btoTransactionalScopeAbortPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoTransactionalScopeAbortPerSec.setStatus('current')
if mibBuilder.loadTexts: btoTransactionalScopeAbortPerSec.setDescription('Rate of transactional scopes not completed successfully per second')
btoTransactionalScopesCommitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoTransactionalScopesCommitted.setStatus('current')
if mibBuilder.loadTexts: btoTransactionalScopesCommitted.setDescription('Total number of transactional scopes completed successfully since the application instance started')
btoTransactionScopeCommitPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoTransactionScopeCommitPerSec.setStatus('current')
if mibBuilder.loadTexts: btoTransactionScopeCommitPerSec.setDescription('Rate of transactional scopes completed successfully per second')
btoTransactionalScopesCompensate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoTransactionalScopesCompensate.setStatus('current')
if mibBuilder.loadTexts: btoTransactionalScopesCompensate.setDescription('Total number of transactional scopes compensated since the application instance started')
btoTransScopeCompensatePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 4, 22, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btoTransScopeCompensatePerSec.setStatus('current')
if mibBuilder.loadTexts: btoTransScopeCompensatePerSec.setDescription('Rate of transactional scopes compensated per second')
mibBuilder.exportSymbols("INFORMANT-BIZTALK", bizTalkFILEReceiveAdapterEntry=bizTalkFILEReceiveAdapterEntry, btoRunnableOrchestrations=btoRunnableOrchestrations, bizTalkFILESendAdapterTable=bizTalkFILESendAdapterTable, btmaThreadCount=btmaThreadCount, btmPendingReceiveBatches=btmPendingReceiveBatches, btoMBAllocatedVirtualMemory=btoMBAllocatedVirtualMemory, bthttpsaInstance=bthttpsaInstance, btftpsaInstance=btftpsaInstance, bizTalkPOP3ReceiveAdapterTable=bizTalkPOP3ReceiveAdapterTable, btmaMsgDeliveryDelayms=btmaMsgDeliveryDelayms, btmlRequestResponseLatencysec=btmlRequestResponseLatencysec, btoOrchestrationsCompleted=btoOrchestrationsCompleted, bthttpraTimeToAddMessageToBatch=bthttpraTimeToAddMessageToBatch, bizTalkFTPSendAdapterEntry=bizTalkFTPSendAdapterEntry, btoTransactionalScopesAborted=btoTransactionalScopesAborted, btmaInstance=btmaInstance, btmDocumentsReceived=btmDocumentsReceived, btmaMsgDlvryThrottlingStDuration=btmaMsgDlvryThrottlingStDuration, btwspsaTotalReceivedMsgs=btwspsaTotalReceivedMsgs, btsoapraInstance=btsoapraInstance, bthttpsaMessagesReceivedPerSec=bthttpsaMessagesReceivedPerSec, xLANGPerSOrchestrationsTable=xLANGPerSOrchestrationsTable, btoOrchestrationResidentInmemory=btoOrchestrationResidentInmemory, btpopraActiveSessions=btpopraActiveSessions, btoAverageBatchFactor=btoAverageBatchFactor, bthttpraInstance=bthttpraInstance, btfileraMessagesReceived=btfileraMessagesReceived, btoDatabaseTransactions=btoDatabaseTransactions, bizTalkFILEReceiveAdapterTable=bizTalkFILEReceiveAdapterTable, btwspsaTotalSendMsgFailures=btwspsaTotalSendMsgFailures, bizTalkFTPReceiveAdapterEntry=bizTalkFTPReceiveAdapterEntry, btmaServiceClassID=btmaServiceClassID, bthttpraMessagesSentPerSec=bthttpraMessagesSentPerSec, btsmtpsaInstance=btsmtpsaInstance, btoActiveApplicationDomains=btoActiveApplicationDomains, btmaMsgPubThrottlingUsrOverride=btmaMsgPubThrottlingUsrOverride, bizTalkSOAPReceiveAdapterEntry=bizTalkSOAPReceiveAdapterEntry, btoOrchestrationsDiscarded=btoOrchestrationsDiscarded, btmaMsgPublishingDelay=btmaMsgPublishingDelay, btoOrchestrationsSuspendedPerSec=btoOrchestrationsSuspendedPerSec, bizTalkMsgBoxHostCountersEntry=bizTalkMsgBoxHostCountersEntry, bizTalkSMTPSendAdapterTable=bizTalkSMTPSendAdapterTable, btmaDatabaseSize=btmaDatabaseSize, btpopraMessagesReceived=btpopraMessagesReceived, btmaTotalMessagesDelivered=btmaTotalMessagesDelivered, bizTalkMSMQSendAdapterTable=bizTalkMSMQSendAdapterTable, bthttpraMessagesReceivedPerSec=bthttpraMessagesReceivedPerSec, bizTalkMsgBoxGeneralCounterTable=bizTalkMsgBoxGeneralCounterTable, btmPendingTransmittedMessages=btmPendingTransmittedMessages, bthttpraTimeToBuildBatch=bthttpraTimeToBuildBatch, btoTransactionScopeCommitPerSec=btoTransactionScopeCommitPerSec, btmaHighMessagePublishingRate=btmaHighMessagePublishingRate, btoDatabaseTransactionsPerSec=btoDatabaseTransactionsPerSec, btftpraBytesReceived=btftpraBytesReceived, bttddsTotalFailedEvents=bttddsTotalFailedEvents, btwspsaTotalWebServiceCallFail=btwspsaTotalWebServiceCallFail, bizTalkTDDSEntry=bizTalkTDDSEntry, bttddsRecordsBeingProcessed=bttddsRecordsBeingProcessed, btmDocumentsProcessedPerSec=btmDocumentsProcessedPerSec, btoOrchestrationsCreatedPerSec=btoOrchestrationsCreatedPerSec, btmlOutboundAdapterLatencysec=btmlOutboundAdapterLatencysec, btoPercentUsedPhysicalMemory=btoPercentUsedPhysicalMemory, btoOrchestrationsSuspended=btoOrchestrationsSuspended, btoTransactionalScopesCompensate=btoTransactionalScopesCompensate, btwspsaPercentSendMsgFailures=btwspsaPercentSendMsgFailures, btmbgcMsgBoxDeadProcCleanup=btmbgcMsgBoxDeadProcCleanup, btmlInstance=btmlInstance, btmlOutboundLatencysec=btmlOutboundLatencysec, bizTalkFTPReceiveAdapterTable=bizTalkFTPReceiveAdapterTable, btmIDProcess=btmIDProcess, btmbhcHostQueInstStateMsgRefsLen=btmbhcHostQueInstStateMsgRefsLen, btmaProcessMemUsageThresholdMB=btmaProcessMemUsageThresholdMB, btfileraBytesReceivedPerSec=btfileraBytesReceivedPerSec, bttddsBatchesCommitted=bttddsBatchesCommitted, bizTalkSQLReceiveAdapterEntry=bizTalkSQLReceiveAdapterEntry, btoOrchestrationsRehydrated=btoOrchestrationsRehydrated, btmThrottledReceiveBatches=btmThrottledReceiveBatches, btpopraMessagesReceivedPerSec=btpopraMessagesReceivedPerSec, btmaHighDatabaseSession=btmaHighDatabaseSession, btfilesaBytesSent=btfilesaBytesSent, bttddsBatchesBeingProcessed=bttddsBatchesBeingProcessed, bizTalkHTTPReceiveAdapterTable=bizTalkHTTPReceiveAdapterTable, btoOrchestrationRehydratedPerSec=btoOrchestrationRehydratedPerSec, btoPersistencePointsPerSec=btoPersistencePointsPerSec, bthttpsaMessagesSent=bthttpsaMessagesSent, btmbgcTrackingDataSize=btmbgcTrackingDataSize, btwspsaWebServiceCallsPerSecond=btwspsaWebServiceCallsPerSecond, btwspsaTotalReceiveCommitFailure=btwspsaTotalReceiveCommitFailure, bttddsTotalRecords=bttddsTotalRecords, btmDocumentsSuspended=btmDocumentsSuspended, btmsmqraBytesReceivedPerSec=btmsmqraBytesReceivedPerSec, btmaHighMessageDeliveryRate=btmaHighMessageDeliveryRate, btsqlsaMessagesSent=btsqlsaMessagesSent, btsoapsaMessagesSentPerSec=btsoapsaMessagesSentPerSec, bizTalkFTPSendAdapterTable=bizTalkFTPSendAdapterTable, btmbgcInstancesTotalNumber=btmbgcInstancesTotalNumber, btmbgcSpoolSize=btmbgcSpoolSize, btmaMsgPublishingIncomingRate=btmaMsgPublishingIncomingRate, btmDocumentsResubmitted=btmDocumentsResubmitted, bizTalkMessageAgentTable=bizTalkMessageAgentTable, bizTalkSOAPSendAdapterEntry=bizTalkSOAPSendAdapterEntry, bizTalkSQLReceiveAdapterTable=bizTalkSQLReceiveAdapterTable, btmActiveReceiveLocations=btmActiveReceiveLocations, btoDehydrationCycles=btoDehydrationCycles, btmsmqraMessagesReceivedPerSec=btmsmqraMessagesReceivedPerSec, btmsmqsaBytesSentPerSec=btmsmqsaBytesSentPerSec, btoMBAllocatedPrivateMemory=btoMBAllocatedPrivateMemory, btmaMsgPublishingThrottlingState=btmaMsgPublishingThrottlingState, btoDehydratableOrchestrations=btoDehydratableOrchestrations, bizTalkSQLSendAdapterEntry=bizTalkSQLSendAdapterEntry, btftpraBytesReceivedPerSec=btftpraBytesReceivedPerSec, bthttpsaMemoryQueueSize=bthttpsaMemoryQueueSize, btmaMsgDeliveryOutgoingRate=btmaMsgDeliveryOutgoingRate, btoOrchestrationsCompletedPerSec=btoOrchestrationsCompletedPerSec, btfileraInstance=btfileraInstance, bttddsRecordsCommitted=bttddsRecordsCommitted, bizTalkMsgBoxHostCountersTable=bizTalkMsgBoxHostCountersTable, bizTalkFILESendAdapterEntry=bizTalkFILESendAdapterEntry, btftpraInstance=btftpraInstance, btmaThreadCountThreshold=btmaThreadCountThreshold, bizTalkSOAPReceiveAdapterTable=bizTalkSOAPReceiveAdapterTable, PYSNMP_MODULE_ID=bizTalkServer, bizTalkTDDSTable=bizTalkTDDSTable, bizTalkSOAPSendAdapterTable=bizTalkSOAPSendAdapterTable, btfileraDeleteRetries=btfileraDeleteRetries, btoPersistencePoints=btoPersistencePoints, btoDehydrationThreshold=btoDehydrationThreshold, btoTransactionalScopeAbortPerSec=btoTransactionalScopeAbortPerSec, btmbgcInstance=btmbgcInstance, btmaActiveInstanceCount=btmaActiveInstanceCount, btmActiveSendThreads=btmActiveSendThreads, btpopraBytesReceivedPerSec=btpopraBytesReceivedPerSec, btsmtpsaMessagesSent=btsmtpsaMessagesSent, btmbgcMsgBoxPurgeSubPurgeJobs=btmbgcMsgBoxPurgeSubPurgeJobs, btmbhcHostQueueSuspendedMsgsLen=btmbhcHostQueueSuspendedMsgsLen, bttddsTotalBatches=bttddsTotalBatches, btsoapsaMessagesSent=btsoapsaMessagesSent, btwspsaPercentReceiveMsgFailures=btwspsaPercentReceiveMsgFailures, btwspsaPercentWebServiceCallFail=btwspsaPercentWebServiceCallFail, btoOrchestrationDehydratedPerSec=btoOrchestrationDehydratedPerSec, btoOrchestrationsCreated=btoOrchestrationsCreated, bizTalkMessagingTable=bizTalkMessagingTable, bizTalkServer=bizTalkServer, btftpraMessagesReceived=btftpraMessagesReceived, bthttpraMemoryQueueSize=bthttpraMemoryQueueSize, bthttpsaMessagesSentPerSec=bthttpsaMessagesSentPerSec, btsqlraMessagesReceived=btsqlraMessagesReceived, btfilesaInstance=btfilesaInstance, btmbhcInstance=btmbhcInstance, btoDehydrationCycleInProgress=btoDehydrationCycleInProgress, btmaTotalBatchesCommitted=btmaTotalBatchesCommitted, btfilesaMessagesSentPerSec=btfilesaMessagesSentPerSec, btftpsaBytesSentPerSec=btftpsaBytesSentPerSec, btmaMsgDlvryThrottleUserOverride=btmaMsgDlvryThrottleUserOverride, btmaProcessMemoryUsageMB=btmaProcessMemoryUsageMB, btmbgcMsgBoxMsgCleanupPurgeJobs=btmbgcMsgBoxMsgCleanupPurgeJobs, btmsmqraBytesReceived=btmsmqraBytesReceived, btfileraMessagesReceivedPerSec=btfileraMessagesReceivedPerSec, btsqlraMessagesReceivedPerSec=btsqlraMessagesReceivedPerSec, btoMsgBoxDBConnectionFailures=btoMsgBoxDBConnectionFailures, btmlInboundLatencysec=btmlInboundLatencysec, btmaHighInprocessMessageCount=btmaHighInprocessMessageCount, btmaTotalMessagesPublished=btmaTotalMessagesPublished, btmaHighProcessMemory=btmaHighProcessMemory, btmDocumentsTransmittedPerBatch=btmDocumentsTransmittedPerBatch, bthttpraMessagesReceived=bthttpraMessagesReceived, bizTalkMSMQSendAdapterEntry=bizTalkMSMQSendAdapterEntry, bthttpsaMessagesReceived=bthttpsaMessagesReceived, btmbhcHostQueueLength=btmbhcHostQueueLength, btoTransScopeCompensatePerSec=btoTransScopeCompensatePerSec, btsqlraInstance=btsqlraInstance, bttddsTotalFailedBatches=bttddsTotalFailedBatches, bttddsEventsBeingProcessed=bttddsEventsBeingProcessed, btmaInprocessMsgCountThreshold=btmaInprocessMsgCountThreshold, btmbgcTrackedMsgsCopyPurgeJobs=btmbgcTrackedMsgsCopyPurgeJobs, btftpsaMessagesSent=btftpsaMessagesSent, bizTalkHTTPSendAdapterEntry=bizTalkHTTPSendAdapterEntry, bizTalkMessagingLatencyEntry=bizTalkMessagingLatencyEntry, btmaDatabaseSession=btmaDatabaseSession, bizTalkMSMQReceiveAdapterTable=bizTalkMSMQReceiveAdapterTable, btmsmqsaMessagesSentPerSec=btmsmqsaMessagesSentPerSec, bizTalkPOP3ReceiveAdapterEntry=bizTalkPOP3ReceiveAdapterEntry, btmInstance=btmInstance, btwspsaTotalReceiveMsgFailures=btwspsaTotalReceiveMsgFailures, bizTalkSQLSendAdapterTable=bizTalkSQLSendAdapterTable, btmaMsgPubThrottlingStDuration=btmaMsgPubThrottlingStDuration, btmDocumentsProcessed=btmDocumentsProcessed, bizTalkMessagingEntry=bizTalkMessagingEntry, btoInstance=btoInstance, btftpsaBytesSent=btftpsaBytesSent, bizTalkHTTPSendAdapterTable=bizTalkHTTPSendAdapterTable, bttddsEventsCommitted=bttddsEventsCommitted, btmDocumentsSubmittedPerBatch=btmDocumentsSubmittedPerBatch, btoOrchestrationsDehydrated=btoOrchestrationsDehydrated, btfileraLockFailures=btfileraLockFailures, btmaHighSystemMemory=btmaHighSystemMemory, btmaHighDatabaseSize=btmaHighDatabaseSize, bizTalkMessagingLatencyTable=bizTalkMessagingLatencyTable, btfileraTimeToBuildBatch=btfileraTimeToBuildBatch, bizTalkSharePointServicesAdapter=bizTalkSharePointServicesAdapter, btoOnlineMessageBoxDatabases=btoOnlineMessageBoxDatabases, btwspsaTotalSentMsgs=btwspsaTotalSentMsgs, btoPendingWorkItems=btoPendingWorkItems, btmsmqsaMessagesSent=btmsmqsaMessagesSent, btmRequestPerResponseTimeouts=btmRequestPerResponseTimeouts, btsqlsaMessagesSentPerSec=btsqlsaMessagesSentPerSec, btftpraMessagesReceivedPerSec=btftpraMessagesReceivedPerSec, btmsmqsaInstance=btmsmqsaInstance, btmDocumentsReceivedPerSec=btmDocumentsReceivedPerSec, btmbhcHostQueueNumberOfInstances=btmbhcHostQueueNumberOfInstances, btsmtpsaMessagesSentPerSec=btsmtpsaMessagesSentPerSec, btmaMsgDeliveryIncomingRate=btmaMsgDeliveryIncomingRate, btmaHighThreadCount=btmaHighThreadCount, btoIdleOrchestrations=btoIdleOrchestrations, btfilesaMessagesSent=btfilesaMessagesSent, btmaDatabaseSessionThreshold=btmaDatabaseSessionThreshold, btmaInprocessMessageCount=btmaInprocessMessageCount, btmaMsgPublishingOutgoingRate=btmaMsgPublishingOutgoingRate, bizTalkMSMQReceiveAdapterEntry=bizTalkMSMQReceiveAdapterEntry, btmaMsgDeliveryThrottlingState=btmaMsgDeliveryThrottlingState, btoDehydratingOrchestrations=btoDehydratingOrchestrations, btoPendingMessages=btoPendingMessages, bttddsTotalEvents=bttddsTotalEvents, btmActiveReceiveThreads=btmActiveReceiveThreads, btsoapraMessagesReceivedPerSec=btsoapraMessagesReceivedPerSec, btfileraLockFailuresPerSec=btfileraLockFailuresPerSec, btoRunningOrchestrations=btoRunningOrchestrations, btoOrchestrationsSchedForDehyd=btoOrchestrationsSchedForDehyd, btmsmqraInstance=btmsmqraInstance, bizTalkSMTPSendAdapterEntry=bizTalkSMTPSendAdapterEntry, btfilesaBytesSentPerSec=btfilesaBytesSentPerSec, btpopraBytesReceived=btpopraBytesReceived, btmaPhysicalMemoryUsageMB=btmaPhysicalMemoryUsageMB, btoOrchestrationsDiscardedPerSec=btoOrchestrationsDiscardedPerSec, btpopraInstance=btpopraInstance, btsoapraMessagesReceived=btsoapraMessagesReceived, bizTalkMsgBoxGeneralCounterEntry=bizTalkMsgBoxGeneralCounterEntry, bthttpraMessagesSent=bthttpraMessagesSent, btmActiveSendMessages=btmActiveSendMessages, btmbgcMsgBoxPartsCleanupPurgeJob=btmbgcMsgBoxPartsCleanupPurgeJob, btmbgcTrackingSpoolCleanup=btmbgcTrackingSpoolCleanup, btsoapsaInstance=btsoapsaInstance, btsqlsaInstance=btsqlsaInstance, btmDocumentsSuspendedPerSec=btmDocumentsSuspendedPerSec, btmsmqsaBytesSent=btmsmqsaBytesSent, xLANGPerSOrchestrationsEntry=xLANGPerSOrchestrationsEntry, bizTalkHTTPReceiveAdapterEntry=bizTalkHTTPReceiveAdapterEntry, bttddsInstance=bttddsInstance, btoTransactionalScopesCommitted=btoTransactionalScopesCommitted, btmsmqraMessagesReceived=btmsmqraMessagesReceived, btfileraBytesReceived=btfileraBytesReceived, btftpsaMessagesSentPerSec=btftpsaMessagesSentPerSec, bizTalkMessageAgentEntry=bizTalkMessageAgentEntry)
