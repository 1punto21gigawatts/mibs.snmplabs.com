#
# PySNMP MIB module TOS-IDS (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TOS-IDS
# Produced by pysmi-0.3.4 at Wed May  1 15:24:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, IpAddress, Integer32, ObjectIdentity, Counter64, Gauge32, Gauge, Bits, Counter32, Unsigned32, MibIdentifier, NotificationType, Opaque, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "IpAddress", "Integer32", "ObjectIdentity", "Counter64", "Gauge32", "Gauge", "Bits", "Counter32", "Unsigned32", "MibIdentifier", "NotificationType", "Opaque", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity")
TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "DateAndTime")
tosMib, = mibBuilder.importSymbols("TOS-SMI", "tosMib")
tosIDS = ModuleIdentity((1, 3, 6, 1, 4, 1, 14331, 5, 5, 1, 11))
tosIDS.setRevisions(('1970-01-01 00:00', '1970-01-01 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: tosIDS.setRevisionsDescriptions(('Initial version.', 'split the whole mib file into several part',))
if mibBuilder.loadTexts: tosIDS.setLastUpdated('08-03-14')
if mibBuilder.loadTexts: tosIDS.setOrganization('TOPSEC')
if mibBuilder.loadTexts: tosIDS.setContactInfo(' Topsec Beijing China E-mail: support@topsec.com.cn ')
if mibBuilder.loadTexts: tosIDS.setDescription('The (conceptual) table containing information on IDS table.')
idsTotal = MibScalar((1, 3, 6, 1, 4, 1, 14331, 5, 5, 1, 11, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsTotal.setStatus('current')
if mibBuilder.loadTexts: idsTotal.setDescription('attack totals.')
idsIpoption = MibScalar((1, 3, 6, 1, 4, 1, 14331, 5, 5, 1, 11, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsIpoption.setStatus('current')
if mibBuilder.loadTexts: idsIpoption.setDescription('ipoption.')
idsIpprotocol = MibScalar((1, 3, 6, 1, 4, 1, 14331, 5, 5, 1, 11, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsIpprotocol.setStatus('current')
if mibBuilder.loadTexts: idsIpprotocol.setDescription('ipprotocol.')
idsPort = MibScalar((1, 3, 6, 1, 4, 1, 14331, 5, 5, 1, 11, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsPort.setStatus('current')
if mibBuilder.loadTexts: idsPort.setDescription('port.')
idsTcpscan = MibScalar((1, 3, 6, 1, 4, 1, 14331, 5, 5, 1, 11, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsTcpscan.setStatus('current')
if mibBuilder.loadTexts: idsTcpscan.setDescription('tcpscan.')
idsWinnuke = MibScalar((1, 3, 6, 1, 4, 1, 14331, 5, 5, 1, 11, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsWinnuke.setStatus('current')
if mibBuilder.loadTexts: idsWinnuke.setDescription('winnuke.')
idsIcmpContent = MibScalar((1, 3, 6, 1, 4, 1, 14331, 5, 5, 1, 11, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsIcmpContent.setStatus('current')
if mibBuilder.loadTexts: idsIcmpContent.setDescription('icmp_content.')
idsSmurf = MibScalar((1, 3, 6, 1, 4, 1, 14331, 5, 5, 1, 11, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsSmurf.setStatus('current')
if mibBuilder.loadTexts: idsSmurf.setDescription('smurf.')
idsLand = MibScalar((1, 3, 6, 1, 4, 1, 14331, 5, 5, 1, 11, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsLand.setStatus('current')
if mibBuilder.loadTexts: idsLand.setDescription('land .')
idsPingofdeath = MibScalar((1, 3, 6, 1, 4, 1, 14331, 5, 5, 1, 11, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsPingofdeath.setStatus('current')
if mibBuilder.loadTexts: idsPingofdeath.setDescription('pingofdeath.')
idsTeardrop = MibScalar((1, 3, 6, 1, 4, 1, 14331, 5, 5, 1, 11, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsTeardrop.setStatus('current')
if mibBuilder.loadTexts: idsTeardrop.setDescription('teardrop .')
idsTarga3 = MibScalar((1, 3, 6, 1, 4, 1, 14331, 5, 5, 1, 11, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsTarga3.setStatus('current')
if mibBuilder.loadTexts: idsTarga3.setDescription('targa3.')
idsIpspoof = MibScalar((1, 3, 6, 1, 4, 1, 14331, 5, 5, 1, 11, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsIpspoof.setStatus('current')
if mibBuilder.loadTexts: idsIpspoof.setDescription('ipspoof .')
idsPortscan = MibScalar((1, 3, 6, 1, 4, 1, 14331, 5, 5, 1, 11, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsPortscan.setStatus('current')
if mibBuilder.loadTexts: idsPortscan.setDescription('portscan.')
idsSynflood = MibScalar((1, 3, 6, 1, 4, 1, 14331, 5, 5, 1, 11, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsSynflood.setStatus('current')
if mibBuilder.loadTexts: idsSynflood.setDescription('synflood.')
idsUdpflood = MibScalar((1, 3, 6, 1, 4, 1, 14331, 5, 5, 1, 11, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsUdpflood.setStatus('current')
if mibBuilder.loadTexts: idsUdpflood.setDescription('udpflood.')
idsIcmpflood = MibScalar((1, 3, 6, 1, 4, 1, 14331, 5, 5, 1, 11, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsIcmpflood.setStatus('current')
if mibBuilder.loadTexts: idsIcmpflood.setDescription('icmpflood .')
idsIpsweep = MibScalar((1, 3, 6, 1, 4, 1, 14331, 5, 5, 1, 11, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsIpsweep.setStatus('current')
if mibBuilder.loadTexts: idsIpsweep.setDescription('ipsweep .')
mibBuilder.exportSymbols("TOS-IDS", PYSNMP_MODULE_ID=tosIDS, idsTarga3=idsTarga3, idsIcmpflood=idsIcmpflood, idsSynflood=idsSynflood, idsIpprotocol=idsIpprotocol, idsPingofdeath=idsPingofdeath, idsTeardrop=idsTeardrop, idsIcmpContent=idsIcmpContent, idsWinnuke=idsWinnuke, idsIpoption=idsIpoption, idsPort=idsPort, idsIpspoof=idsIpspoof, idsSmurf=idsSmurf, idsIpsweep=idsIpsweep, idsUdpflood=idsUdpflood, idsPortscan=idsPortscan, tosIDS=tosIDS, idsTotal=idsTotal, idsLand=idsLand, idsTcpscan=idsTcpscan)
