#
# PySNMP MIB module HUAWEI-TAD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-TAD-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:48:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, iso, Gauge32, Integer32, Bits, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, TimeTicks, ObjectIdentity, Unsigned32, MibIdentifier, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "iso", "Gauge32", "Integer32", "Bits", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "TimeTicks", "ObjectIdentity", "Unsigned32", "MibIdentifier", "NotificationType")
TextualConvention, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "DisplayString")
hwTAD = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128))
if mibBuilder.loadTexts: hwTAD.setLastUpdated('200606281600Z')
if mibBuilder.loadTexts: hwTAD.setOrganization('Huawei Technologies co.,Ltd.')
if mibBuilder.loadTexts: hwTAD.setContactInfo('VRP Platform Team Huawei Technologies co.,Ltd. Huawei Bld.,NO.3 Xinxi Rd., Shang-Di Information Industry Base, Hai-Dian District Beijing P.R. China http://www.huawei.com Zip:100085')
if mibBuilder.loadTexts: hwTAD.setDescription('The Custom damping MIB module is defined to manage the configuration under system or interface view.')
class HWEnableValue(TextualConvention, Integer32):
    description = 'A simple status value for the object.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enable", 1), ("disable", 2))

hwTADObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1))
hwTADInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 1), )
if mibBuilder.loadTexts: hwTADInterfaceTable.setStatus('current')
if mibBuilder.loadTexts: hwTADInterfaceTable.setDescription('Transmission alarm damping interface configuration table.')
hwTADInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 1, 1), ).setIndexNames((0, "HUAWEI-TAD-MIB", "hwTADInterfaceIndex"))
if mibBuilder.loadTexts: hwTADInterfaceEntry.setStatus('current')
if mibBuilder.loadTexts: hwTADInterfaceEntry.setDescription('The entry of a SDH or SONET interface with damping function enabled.')
hwTADInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwTADInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: hwTADInterfaceIndex.setDescription('Index number of the interface.')
hwTADFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 1, 1, 2), HWEnableValue().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTADFilterEnable.setStatus('current')
if mibBuilder.loadTexts: hwTADFilterEnable.setDescription('Whether filter function is enabled.')
hwTADFilterExpireTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 10000)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTADFilterExpireTime.setStatus('current')
if mibBuilder.loadTexts: hwTADFilterExpireTime.setDescription('How long the alarm will be postponed to process. Unit: millisecond.')
hwTADDampingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 1, 1, 4), HWEnableValue().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTADDampingEnable.setStatus('current')
if mibBuilder.loadTexts: hwTADDampingEnable.setDescription('Whether damping function is enabled.')
hwTADSuppress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 19999)).clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTADSuppress.setStatus('current')
if mibBuilder.loadTexts: hwTADSuppress.setDescription('The suppressing value. When figure-of-merit of alarm exceeds this value, this alarm will be damped.')
hwTADCeiling = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1001, 20000)).clone(6000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTADCeiling.setStatus('current')
if mibBuilder.loadTexts: hwTADCeiling.setDescription("The ceiling value. Figure-of-merit can't exceed this value. The ceiling value must be larger than suppressing value.")
hwTADReuse = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 19998)).clone(750)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTADReuse.setStatus('current')
if mibBuilder.loadTexts: hwTADReuse.setDescription('The reusing value. When figure-of-merit becomes lower than this value. The alarm will be reused (exit from suppressing status). The reusing value must be less than suppressing value.')
hwTADDecayOk = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(500, 10000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTADDecayOk.setStatus('current')
if mibBuilder.loadTexts: hwTADDecayOk.setDescription('The half decay time when alarm status is down. Unit: millisecond.')
hwTADDecayNg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(500, 10000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTADDecayNg.setStatus('current')
if mibBuilder.loadTexts: hwTADDecayNg.setDescription('The half decay time when alarm status is up. Unit: millisecond.')
hwTADResetStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("unreset", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTADResetStatistics.setStatus('current')
if mibBuilder.loadTexts: hwTADResetStatistics.setDescription('Whether to reset alarm statistics. 1 means resetting statistics once.')
hwTADResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 1, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTADResetTime.setStatus('current')
if mibBuilder.loadTexts: hwTADResetTime.setDescription('Last reset time.')
hwTADB3tcaThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 9)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTADB3tcaThreshold.setStatus('current')
if mibBuilder.loadTexts: hwTADB3tcaThreshold.setDescription('B3tca threshold in form of 10e-n.')
hwTADSdbereThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 9)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTADSdbereThreshold.setStatus('current')
if mibBuilder.loadTexts: hwTADSdbereThreshold.setDescription('Sdbere threshold in form of 10e-n.')
hwTADSfbereThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 9)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTADSfbereThreshold.setStatus('current')
if mibBuilder.loadTexts: hwTADSfbereThreshold.setDescription('Sfbere threshold in form of 10e-n.')
hwTADAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 2), )
if mibBuilder.loadTexts: hwTADAlarmTable.setStatus('current')
if mibBuilder.loadTexts: hwTADAlarmTable.setDescription('Transmission alarm damping alarm configuration table.')
hwTADAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 2, 1), ).setIndexNames((0, "HUAWEI-TAD-MIB", "hwTADAlarmIfIndex"), (0, "HUAWEI-TAD-MIB", "hwTADAlarmType"))
if mibBuilder.loadTexts: hwTADAlarmEntry.setStatus('current')
if mibBuilder.loadTexts: hwTADAlarmEntry.setDescription('The entry of an alarm.')
hwTADAlarmIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwTADAlarmIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwTADAlarmIfIndex.setDescription('Index number of the interface.')
hwTADAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("auais", 1), ("b3tca", 2), ("lais", 3), ("lof", 4), ("lom", 5), ("lop", 6), ("los", 7), ("lrdi", 8), ("lrei", 9), ("oof", 10), ("pais", 11), ("prdi", 12), ("prei", 13), ("pplm", 14), ("rdool", 15), ("rrool", 16), ("sdbere", 17), ("sfbere", 18), ("trool", 19), ("puneq", 20), ("lcd", 21), ("wlnk", 22))))
if mibBuilder.loadTexts: hwTADAlarmType.setStatus('current')
if mibBuilder.loadTexts: hwTADAlarmType.setDescription('Index number of the alarm. The range is from 1 to 22, corresponding to: auais, batca, lais, lof, lom, lop, los, lrdi, lrei, oof, pais, prdi, prei, pplm, rdool, rrool, sdbere, sfbere, trool, puneq, lcd, wlnk.')
hwTADAlarmIfDown = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 2, 1, 3), HWEnableValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTADAlarmIfDown.setStatus('current')
if mibBuilder.loadTexts: hwTADAlarmIfDown.setDescription('Whether this alarm leads to interface down. In default lais, lof and los are enabled to lead interface down.')
hwTADAlarmLog = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 2, 1, 4), HWEnableValue().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTADAlarmLog.setStatus('current')
if mibBuilder.loadTexts: hwTADAlarmLog.setDescription("Whether this alarm will be logged. In default all alarm types won't be logged.")
hwTADAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTADAlarmStatus.setStatus('current')
if mibBuilder.loadTexts: hwTADAlarmStatus.setDescription('The status of the alarm. 1 means alarm is up, 2 means alarm is down.')
hwTADAlarmInFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("in", 1), ("out", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTADAlarmInFilter.setStatus('current')
if mibBuilder.loadTexts: hwTADAlarmInFilter.setDescription("Whether this alarm is in filtering status. 1 means alarm is in filtering status, 2 means alarm isn't in filtering status.")
hwTADAlarmFigure = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTADAlarmFigure.setStatus('current')
if mibBuilder.loadTexts: hwTADAlarmFigure.setDescription('This figure is used to evaluate the stability of the alarm. Large value means un-stability.')
hwTADAlarmInSuppress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("suppressed", 1), ("unsuppressed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTADAlarmInSuppress.setStatus('current')
if mibBuilder.loadTexts: hwTADAlarmInSuppress.setDescription("Whether this alarm is in suppressing status. 1 means alarm is in suppressing status, 2 means alarm isn't in suppressing status.")
hwTADAlarmFlappingCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTADAlarmFlappingCount.setStatus('current')
if mibBuilder.loadTexts: hwTADAlarmFlappingCount.setDescription("How many times alarm's status changed.")
hwTADAlarmSuppressCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTADAlarmSuppressCount.setStatus('current')
if mibBuilder.loadTexts: hwTADAlarmSuppressCount.setDescription('How many times alarm is suppressed.')
hwTADConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 2))
hwTADGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 2, 1))
hwTADInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 2, 1, 1)).setObjects(("HUAWEI-TAD-MIB", "hwTADFilterEnable"), ("HUAWEI-TAD-MIB", "hwTADFilterExpireTime"), ("HUAWEI-TAD-MIB", "hwTADDampingEnable"), ("HUAWEI-TAD-MIB", "hwTADSuppress"), ("HUAWEI-TAD-MIB", "hwTADCeiling"), ("HUAWEI-TAD-MIB", "hwTADReuse"), ("HUAWEI-TAD-MIB", "hwTADDecayOk"), ("HUAWEI-TAD-MIB", "hwTADDecayNg"), ("HUAWEI-TAD-MIB", "hwTADResetStatistics"), ("HUAWEI-TAD-MIB", "hwTADResetTime"), ("HUAWEI-TAD-MIB", "hwTADB3tcaThreshold"), ("HUAWEI-TAD-MIB", "hwTADSdbereThreshold"), ("HUAWEI-TAD-MIB", "hwTADSfbereThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTADInterfaceGroup = hwTADInterfaceGroup.setStatus('current')
if mibBuilder.loadTexts: hwTADInterfaceGroup.setDescription('A collection of objects providing device level control and status information for the interface.')
hwTADAlarmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 128, 2, 1, 2)).setObjects(("HUAWEI-TAD-MIB", "hwTADAlarmIfDown"), ("HUAWEI-TAD-MIB", "hwTADAlarmLog"), ("HUAWEI-TAD-MIB", "hwTADAlarmStatus"), ("HUAWEI-TAD-MIB", "hwTADAlarmInFilter"), ("HUAWEI-TAD-MIB", "hwTADAlarmFigure"), ("HUAWEI-TAD-MIB", "hwTADAlarmInSuppress"), ("HUAWEI-TAD-MIB", "hwTADAlarmFlappingCount"), ("HUAWEI-TAD-MIB", "hwTADAlarmSuppressCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTADAlarmGroup = hwTADAlarmGroup.setStatus('current')
if mibBuilder.loadTexts: hwTADAlarmGroup.setDescription('A collection of objects providing device level control and status information for the alarm.')
mibBuilder.exportSymbols("HUAWEI-TAD-MIB", hwTADDampingEnable=hwTADDampingEnable, hwTADInterfaceGroup=hwTADInterfaceGroup, hwTADFilterExpireTime=hwTADFilterExpireTime, hwTADObjects=hwTADObjects, hwTAD=hwTAD, hwTADGroups=hwTADGroups, hwTADAlarmIfDown=hwTADAlarmIfDown, hwTADAlarmFlappingCount=hwTADAlarmFlappingCount, hwTADB3tcaThreshold=hwTADB3tcaThreshold, HWEnableValue=HWEnableValue, hwTADInterfaceIndex=hwTADInterfaceIndex, hwTADAlarmInFilter=hwTADAlarmInFilter, hwTADAlarmFigure=hwTADAlarmFigure, hwTADAlarmType=hwTADAlarmType, hwTADSdbereThreshold=hwTADSdbereThreshold, hwTADAlarmSuppressCount=hwTADAlarmSuppressCount, hwTADReuse=hwTADReuse, hwTADCeiling=hwTADCeiling, hwTADAlarmTable=hwTADAlarmTable, hwTADConformance=hwTADConformance, hwTADAlarmIfIndex=hwTADAlarmIfIndex, hwTADDecayOk=hwTADDecayOk, hwTADSfbereThreshold=hwTADSfbereThreshold, hwTADAlarmEntry=hwTADAlarmEntry, hwTADAlarmInSuppress=hwTADAlarmInSuppress, hwTADInterfaceTable=hwTADInterfaceTable, hwTADInterfaceEntry=hwTADInterfaceEntry, PYSNMP_MODULE_ID=hwTAD, hwTADFilterEnable=hwTADFilterEnable, hwTADAlarmGroup=hwTADAlarmGroup, hwTADResetTime=hwTADResetTime, hwTADAlarmLog=hwTADAlarmLog, hwTADResetStatistics=hwTADResetStatistics, hwTADAlarmStatus=hwTADAlarmStatus, hwTADSuppress=hwTADSuppress, hwTADDecayNg=hwTADDecayNg)
