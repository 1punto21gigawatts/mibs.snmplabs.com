#
# PySNMP MIB module DPI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DPI-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:54:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, iso, NotificationType, ObjectIdentity, Unsigned32, Counter32, enterprises, Gauge32, Bits, Integer32, IpAddress, ModuleIdentity, MibIdentifier, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "iso", "NotificationType", "ObjectIdentity", "Unsigned32", "Counter32", "enterprises", "Gauge32", "Bits", "Integer32", "IpAddress", "ModuleIdentity", "MibIdentifier", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
zte = MibIdentifier((1, 3, 6, 1, 4, 1, 3902))
fwdpi = ModuleIdentity((1, 3, 6, 1, 4, 1, 3902, 51))
fwdpi.setRevisions(('2008-11-04 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: fwdpi.setRevisionsDescriptions(('test for DPI',))
if mibBuilder.loadTexts: fwdpi.setLastUpdated('200504120000Z')
if mibBuilder.loadTexts: fwdpi.setOrganization('ZTE Corporation')
if mibBuilder.loadTexts: fwdpi.setContactInfo('')
if mibBuilder.loadTexts: fwdpi.setDescription('ZXROS DPI MIB')
zxrDPI = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1))
dpiSystemControl = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 1))
dpiSlotNumber = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiSlotNumber.setStatus('current')
if mibBuilder.loadTexts: dpiSlotNumber.setDescription('An 32 bit unsigned integer description of the selected slot for DPI board.')
dpiRestartFunc = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiRestartFunc.setStatus('current')
if mibBuilder.loadTexts: dpiRestartFunc.setDescription('Using for restarting the DPI system.')
dpiConfigMode = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2))
dpiBindMngServiceIp = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 2))
dpiMngServerSlot = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiMngServerSlot.setStatus('current')
if mibBuilder.loadTexts: dpiMngServerSlot.setDescription('the slot for DPI board')
dpiMngIp = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiMngIp.setStatus('current')
if mibBuilder.loadTexts: dpiMngIp.setDescription('the mng-ip for DPI board')
dpiServerIp = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiServerIp.setStatus('current')
if mibBuilder.loadTexts: dpiServerIp.setDescription('the server-ip for DPI board')
dpiMngServerOK = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiMngServerOK.setStatus('current')
if mibBuilder.loadTexts: dpiMngServerOK.setDescription('the commit of command.')
dpiSignatureEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 3))
dpiCurrentSignatureEntry = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12287))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiCurrentSignatureEntry.setStatus('current')
if mibBuilder.loadTexts: dpiCurrentSignatureEntry.setDescription('the current SignatureEntry mode')
dpiShowSignatureEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 3, 2))
dpiSignatureEntryTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 3, 2, 1), )
if mibBuilder.loadTexts: dpiSignatureEntryTable.setStatus('current')
if mibBuilder.loadTexts: dpiSignatureEntryTable.setDescription('Dpi SignatureEntry Table')
dpiSignatureTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 3, 2, 1, 1), ).setIndexNames((0, "DPI-MIB", "dpiSignatureEntryID"))
if mibBuilder.loadTexts: dpiSignatureTableEntry.setStatus('current')
if mibBuilder.loadTexts: dpiSignatureTableEntry.setDescription('Dpi Signaturetable entry')
dpiSignatureEntryID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 3, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12287))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiSignatureEntryID.setStatus('current')
if mibBuilder.loadTexts: dpiSignatureEntryID.setDescription('the number of dpi Signature Entry')
dpiSignatureEntryContent = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiSignatureEntryContent.setStatus('current')
if mibBuilder.loadTexts: dpiSignatureEntryContent.setDescription('A string description of the Key Content.')
dpiSetContent = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiSetContent.setStatus('current')
if mibBuilder.loadTexts: dpiSetContent.setDescription('A string description of the Key Content.')
dpiSignatureSymbol = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 4))
dpiCurrentSignatureSymbol = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6143))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiCurrentSignatureSymbol.setStatus('current')
if mibBuilder.loadTexts: dpiCurrentSignatureSymbol.setDescription('the current SignatureSymbol mode')
dpiShowSignatureSymbol = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 4, 2))
dpiSignatureSymbolTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 4, 2, 1), )
if mibBuilder.loadTexts: dpiSignatureSymbolTable.setStatus('current')
if mibBuilder.loadTexts: dpiSignatureSymbolTable.setDescription('Dpi SignatureSymbol Table')
dpiSignatureSymbolTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 4, 2, 1, 1), ).setIndexNames((0, "DPI-MIB", "dpiSignatureSymbolID"))
if mibBuilder.loadTexts: dpiSignatureSymbolTableEntry.setStatus('current')
if mibBuilder.loadTexts: dpiSignatureSymbolTableEntry.setDescription('Dpi SignatureSymbol-table entry')
dpiSignatureSymbolID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 4, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6143))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiSignatureSymbolID.setStatus('current')
if mibBuilder.loadTexts: dpiSignatureSymbolID.setDescription('the number of dpi Signature Symbol Entry')
dpiSignatureSymbolEntryID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiSignatureSymbolEntryID.setStatus('current')
if mibBuilder.loadTexts: dpiSignatureSymbolEntryID.setDescription('the number of dpi Signature Entry')
dpiSignatureSymbolHitNumLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 4, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiSignatureSymbolHitNumLimit.setStatus('current')
if mibBuilder.loadTexts: dpiSignatureSymbolHitNumLimit.setDescription('A string description of the Key.')
dpiAddSignatureEntry = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12287))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiAddSignatureEntry.setStatus('current')
if mibBuilder.loadTexts: dpiAddSignatureEntry.setDescription('the SignatureEntry ID which you want to add into the current Symbol')
dpiNoAddSignatureEntry = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12287))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiNoAddSignatureEntry.setStatus('current')
if mibBuilder.loadTexts: dpiNoAddSignatureEntry.setDescription('the SignatureEntry ID which you want to remove from the current Symbol')
dpiSetHitNumLimit = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiSetHitNumLimit.setStatus('current')
if mibBuilder.loadTexts: dpiSetHitNumLimit.setDescription('the hit-num-limit of the current Symbol')
dpiFlowPool = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5))
dpiCurrentFlowPool = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiCurrentFlowPool.setStatus('current')
if mibBuilder.loadTexts: dpiCurrentFlowPool.setDescription('the current flow-pool mode')
dpiShowFlowPool = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 2))
dpiStreamLimitTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 2, 1), )
if mibBuilder.loadTexts: dpiStreamLimitTable.setStatus('current')
if mibBuilder.loadTexts: dpiStreamLimitTable.setDescription('Dpi stream-rate-limit Table')
dpiStreamLimitTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 2, 1, 1), ).setIndexNames((0, "DPI-MIB", "dpiStreamLimitID"), (0, "DPI-MIB", "dpiStreamLimitType"))
if mibBuilder.loadTexts: dpiStreamLimitTableEntry.setStatus('current')
if mibBuilder.loadTexts: dpiStreamLimitTableEntry.setDescription('Dpi Stream-rate-Limit Table entry')
dpiStreamLimitID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 8191))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiStreamLimitID.setStatus('current')
if mibBuilder.loadTexts: dpiStreamLimitID.setDescription('the ID of dpi Stream limit')
dpiStreamLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("down", 1), ("up", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiStreamLimitType.setStatus('current')
if mibBuilder.loadTexts: dpiStreamLimitType.setDescription('the type of dpi Stream limit')
dpiStreamRate = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiStreamRate.setStatus('current')
if mibBuilder.loadTexts: dpiStreamRate.setDescription('the rate of dpi DownStream limit')
dpiStreamCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiStreamCbs.setStatus('current')
if mibBuilder.loadTexts: dpiStreamCbs.setDescription('the cbs of the rate-limit.')
dpiStreamEbs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiStreamEbs.setStatus('current')
if mibBuilder.loadTexts: dpiStreamEbs.setDescription('the ebs of the rate-limit.')
dpiUpStreamRateLimit = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 3))
dpiUpStreamRate = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiUpStreamRate.setStatus('current')
if mibBuilder.loadTexts: dpiUpStreamRate.setDescription('the rate of dpi Up Stream limit')
dpiUpStreamCbs = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiUpStreamCbs.setStatus('current')
if mibBuilder.loadTexts: dpiUpStreamCbs.setDescription('the cbs of the rate-limit.')
dpiUpStreamEbs = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 3, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiUpStreamEbs.setStatus('current')
if mibBuilder.loadTexts: dpiUpStreamEbs.setDescription('the ebs of the rate-limit.')
dpiUpStreamOK = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiUpStreamOK.setStatus('current')
if mibBuilder.loadTexts: dpiUpStreamOK.setDescription('the commit of the up stream-rate-limit.')
dpiNoUpStreamRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiNoUpStreamRateLimit.setStatus('current')
if mibBuilder.loadTexts: dpiNoUpStreamRateLimit.setDescription('the commit of the No up stream-rate-limit.')
dpiDownStreamRateLimit = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 5))
dpiDownStreamRate = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiDownStreamRate.setStatus('current')
if mibBuilder.loadTexts: dpiDownStreamRate.setDescription('the rate of dpi DownStream limit')
dpiDownStreamCbs = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 5, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiDownStreamCbs.setStatus('current')
if mibBuilder.loadTexts: dpiDownStreamCbs.setDescription('the cbs of the rate-limit.')
dpiDownStreamEbs = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 5, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiDownStreamEbs.setStatus('current')
if mibBuilder.loadTexts: dpiDownStreamEbs.setDescription('the ebs of the rate-limit.')
dpiDownStreamOK = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiDownStreamOK.setStatus('current')
if mibBuilder.loadTexts: dpiDownStreamOK.setDescription('the commit of the down stream-rate-limit.')
dpiNoDownStreamRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 5, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiNoDownStreamRateLimit.setStatus('current')
if mibBuilder.loadTexts: dpiNoDownStreamRateLimit.setDescription('the commit of the No down stream-rate-limit.')
dpiSubservice = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6))
dpiCurrentSubservice = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiCurrentSubservice.setStatus('current')
if mibBuilder.loadTexts: dpiCurrentSubservice.setDescription('the current ID of dpi Subservice')
dpiShowSubservice = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 2))
dpiSubserviceTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 2, 1), )
if mibBuilder.loadTexts: dpiSubserviceTable.setStatus('current')
if mibBuilder.loadTexts: dpiSubserviceTable.setDescription('Dpi Subservice Table')
dpiSubserviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 2, 1, 1), ).setIndexNames((0, "DPI-MIB", "dpiSubserviceID"))
if mibBuilder.loadTexts: dpiSubserviceEntry.setStatus('current')
if mibBuilder.loadTexts: dpiSubserviceEntry.setDescription('Dpi SubserviceTable entry')
dpiSubserviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiSubserviceID.setStatus('current')
if mibBuilder.loadTexts: dpiSubserviceID.setDescription('the ID of dpi Subservice')
dpiSubserviceSymbolNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6143))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiSubserviceSymbolNum.setStatus('current')
if mibBuilder.loadTexts: dpiSubserviceSymbolNum.setDescription('the number of the bound Symbol')
dpiSubserviceFlowpoolID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 8191))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiSubserviceFlowpoolID.setStatus('current')
if mibBuilder.loadTexts: dpiSubserviceFlowpoolID.setDescription('the ID of the bound Flow-pool')
dpiSubserviceAction = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("permit", 1), ("deny", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiSubserviceAction.setStatus('current')
if mibBuilder.loadTexts: dpiSubserviceAction.setDescription('the status of the subservice')
dpiSubserviceAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiSubserviceAgingTime.setStatus('current')
if mibBuilder.loadTexts: dpiSubserviceAgingTime.setDescription('the time of the aging')
dpiSubserviceSymbolList = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiSubserviceSymbolList.setStatus('current')
if mibBuilder.loadTexts: dpiSubserviceSymbolList.setDescription('the Symbol List.')
dpiAddSignatureSymbol = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 3))
dpiAddSignatureSymbolId = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiAddSignatureSymbolId.setStatus('current')
if mibBuilder.loadTexts: dpiAddSignatureSymbolId.setDescription('the related symbol IDs.')
dpiAddSignatureSymbolRelationName = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiAddSignatureSymbolRelationName.setStatus('current')
if mibBuilder.loadTexts: dpiAddSignatureSymbolRelationName.setDescription('the relation Name.')
dpiAddSignatureSymbolOK = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiAddSignatureSymbolOK.setStatus('current')
if mibBuilder.loadTexts: dpiAddSignatureSymbolOK.setDescription('the commit of the add signature-symbol.')
dpiNoAddSignatureSymbol = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiNoAddSignatureSymbol.setStatus('current')
if mibBuilder.loadTexts: dpiNoAddSignatureSymbol.setDescription('the commit of the no add signature-symbol.')
dpiAddProtocol = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiAddProtocol.setStatus('current')
if mibBuilder.loadTexts: dpiAddProtocol.setDescription('the commit of the add protocol.')
dpiNoAddProtocol = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiNoAddProtocol.setStatus('current')
if mibBuilder.loadTexts: dpiNoAddProtocol.setDescription('the commit of the no add protocol.')
dpiBindFlowPool = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiBindFlowPool.setStatus('current')
if mibBuilder.loadTexts: dpiBindFlowPool.setDescription('the commit of the bind flow-pool.')
dpiNoBindFlowPool = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiNoBindFlowPool.setStatus('current')
if mibBuilder.loadTexts: dpiNoBindFlowPool.setDescription('the commit of the no bind flow-pool.')
dpiSetAction = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("permit", 0), ("deny", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiSetAction.setStatus('current')
if mibBuilder.loadTexts: dpiSetAction.setDescription('the status of the subservice')
dpiSetAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 6, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiSetAgingTime.setStatus('current')
if mibBuilder.loadTexts: dpiSetAgingTime.setDescription('the time of the aging')
dpiService = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 7))
dpiCurrentService = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2047))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiCurrentService.setStatus('current')
if mibBuilder.loadTexts: dpiCurrentService.setDescription('the current ID of dpi service')
dpiShowService = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 7, 2))
dpiServiceTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 7, 2, 1), )
if mibBuilder.loadTexts: dpiServiceTable.setStatus('current')
if mibBuilder.loadTexts: dpiServiceTable.setDescription('Dpi Service Table')
dpiServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 7, 2, 1, 1), ).setIndexNames((0, "DPI-MIB", "dpiServiceID"))
if mibBuilder.loadTexts: dpiServiceEntry.setStatus('current')
if mibBuilder.loadTexts: dpiServiceEntry.setDescription('Dpi Service entry')
dpiServiceID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 7, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2047))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiServiceID.setStatus('current')
if mibBuilder.loadTexts: dpiServiceID.setDescription('the ID of dpi Service')
dpiServiceFlowPoolID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 7, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 8191))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiServiceFlowPoolID.setStatus('current')
if mibBuilder.loadTexts: dpiServiceFlowPoolID.setDescription('the ID of dpi Service bound Flow-pool')
dpiServiceConnectionLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 7, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1310719))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiServiceConnectionLimit.setStatus('current')
if mibBuilder.loadTexts: dpiServiceConnectionLimit.setDescription('the max number of the limited connections')
dpiServiceSubserviceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 7, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiServiceSubserviceNum.setStatus('current')
if mibBuilder.loadTexts: dpiServiceSubserviceNum.setDescription('the number of dpi Subservice in Service')
dpiServiceSubserviceList = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 7, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiServiceSubserviceList.setStatus('current')
if mibBuilder.loadTexts: dpiServiceSubserviceList.setDescription('the SubService List.')
dpiAddSubservice = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 7, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiAddSubservice.setStatus('current')
if mibBuilder.loadTexts: dpiAddSubservice.setDescription('the commit of add subservice')
dpiNoAddSubservice = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 7, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiNoAddSubservice.setStatus('current')
if mibBuilder.loadTexts: dpiNoAddSubservice.setDescription('the commit of no add subservice')
dpiImportSubservice = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 7, 5))
dpiImportDestSubservice = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 7, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiImportDestSubservice.setStatus('current')
if mibBuilder.loadTexts: dpiImportDestSubservice.setDescription('the dest of import subservice')
dpiImportSrcSubservice = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 7, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiImportSrcSubservice.setStatus('current')
if mibBuilder.loadTexts: dpiImportSrcSubservice.setDescription('the source of import subservice')
dpiImportSubserviceOK = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 7, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiImportSubserviceOK.setStatus('current')
if mibBuilder.loadTexts: dpiImportSubserviceOK.setDescription('the commit of import subservice')
dpiNoImportSubservice = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 7, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiNoImportSubservice.setStatus('current')
if mibBuilder.loadTexts: dpiNoImportSubservice.setDescription('the cancel of import subservice')
dpiServiceBindFlowPool = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 7, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiServiceBindFlowPool.setStatus('current')
if mibBuilder.loadTexts: dpiServiceBindFlowPool.setDescription('the ID of dpi Service bound Flow-pool')
dpiServiceNoBindFlowPool = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 7, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiServiceNoBindFlowPool.setStatus('current')
if mibBuilder.loadTexts: dpiServiceNoBindFlowPool.setDescription('the ID of No Service bound Flow-pool')
dpiTemplate = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 8))
dpiCurrentTemplate = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiCurrentTemplate.setStatus('current')
if mibBuilder.loadTexts: dpiCurrentTemplate.setDescription('the current ID of dpi-template')
dpiBindSlot = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiBindSlot.setStatus('current')
if mibBuilder.loadTexts: dpiBindSlot.setDescription('the current slot of dpi-template')
dpiNoBindSlot = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiNoBindSlot.setStatus('current')
if mibBuilder.loadTexts: dpiNoBindSlot.setDescription('remove the current slot of dpi-template')
dpiBindService = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2047))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiBindService.setStatus('current')
if mibBuilder.loadTexts: dpiBindService.setDescription('the bind-service ID of dpi-template')
dpiNoBindService = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 8, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2047))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiNoBindService.setStatus('current')
if mibBuilder.loadTexts: dpiNoBindService.setDescription('remove the bind-service ID of dpi-template')
dpiBindSipAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 8, 6))
dpiSipAddress = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 8, 6, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiSipAddress.setStatus('current')
if mibBuilder.loadTexts: dpiSipAddress.setDescription('the bind-sip-addr address')
dpiSipMask = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 8, 6, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiSipMask.setStatus('current')
if mibBuilder.loadTexts: dpiSipMask.setDescription('the bind-sip-addr mask')
dpiSipServiceID = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 8, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2047))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiSipServiceID.setStatus('current')
if mibBuilder.loadTexts: dpiSipServiceID.setDescription('the bind-sip-addr Service Id')
dpiBindSipAddrOK = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 8, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiBindSipAddrOK.setStatus('current')
if mibBuilder.loadTexts: dpiBindSipAddrOK.setDescription('the commit of bind-sip-addr')
dpiNoBindSipAddr = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 8, 6, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiNoBindSipAddr.setStatus('current')
if mibBuilder.loadTexts: dpiNoBindSipAddr.setDescription('the commit of no bind-sip-addr')
dpiShowIpService = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 8, 6, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2047))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiShowIpService.setStatus('current')
if mibBuilder.loadTexts: dpiShowIpService.setDescription('show the current bind-sip-addr Service Id')
dpiBindSwitchport = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 8, 7))
dpiBindSwitchportPort = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 8, 7, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiBindSwitchportPort.setStatus('current')
if mibBuilder.loadTexts: dpiBindSwitchportPort.setDescription('the local port id of bind-switchport')
dpiBindSwitchService = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 8, 7, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2047))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiBindSwitchService.setStatus('current')
if mibBuilder.loadTexts: dpiBindSwitchService.setDescription('the service id of bind-switchport')
dpiBindSwitchportOK = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 8, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiBindSwitchportOK.setStatus('current')
if mibBuilder.loadTexts: dpiBindSwitchportOK.setDescription('the commit of bind-switchport')
dpiNoBindSwitchport = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 8, 7, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiNoBindSwitchport.setStatus('current')
if mibBuilder.loadTexts: dpiNoBindSwitchport.setDescription('the commit of no bind-switchport')
dpiShowPortService = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 8, 7, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2047))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiShowPortService.setStatus('current')
if mibBuilder.loadTexts: dpiShowPortService.setDescription('show the current service id of bind-switchport')
dpiSetActiceConnectionSaveInterval = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiSetActiceConnectionSaveInterval.setStatus('current')
if mibBuilder.loadTexts: dpiSetActiceConnectionSaveInterval.setDescription('set active-connection-save-interval')
dpiClearConnectionAll = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiClearConnectionAll.setStatus('current')
if mibBuilder.loadTexts: dpiClearConnectionAll.setDescription('clear connection-all')
dpiMonitorLog = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3))
dpiUploadAuto = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 1))
dpiUploadAutoSlot = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiUploadAutoSlot.setStatus('current')
if mibBuilder.loadTexts: dpiUploadAutoSlot.setDescription('the slot id of upload-auto')
dpiUploadAutoEnable = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enable", 1), ("disable", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiUploadAutoEnable.setStatus('current')
if mibBuilder.loadTexts: dpiUploadAutoEnable.setDescription('the enable of upload-auto')
dpiUploadAutoOK = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiUploadAutoOK.setStatus('current')
if mibBuilder.loadTexts: dpiUploadAutoOK.setDescription('the commit of upload-auto')
dpiUploadInterval = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 2))
dpiUploadIntervalSlot = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiUploadIntervalSlot.setStatus('current')
if mibBuilder.loadTexts: dpiUploadIntervalSlot.setDescription('the slot id of upload-interval')
dpiUploadTimeInterval = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiUploadTimeInterval.setStatus('current')
if mibBuilder.loadTexts: dpiUploadTimeInterval.setDescription('the time-interval of upload-interval')
dpiUploadIntervalOK = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiUploadIntervalOK.setStatus('current')
if mibBuilder.loadTexts: dpiUploadIntervalOK.setDescription('the commit of upload-interval')
dpiLogFileListDir = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 3))
dpiLogFileListDirSlot = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiLogFileListDirSlot.setStatus('current')
if mibBuilder.loadTexts: dpiLogFileListDirSlot.setDescription('the slot id of Log-File-List-Dir')
dpiLogFileListDirFtpFile = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiLogFileListDirFtpFile.setStatus('current')
if mibBuilder.loadTexts: dpiLogFileListDirFtpFile.setDescription('the file on ftp')
dpiLogFileListDirLocalDir = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiLogFileListDirLocalDir.setStatus('current')
if mibBuilder.loadTexts: dpiLogFileListDirLocalDir.setDescription('the local directory')
dpiLogFileListDirOK = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiLogFileListDirOK.setStatus('current')
if mibBuilder.loadTexts: dpiLogFileListDirOK.setDescription('the commit of logo-file list-dir')
dpiLogFileDeleteDir = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 4))
dpiLogFileDeleteDirSlot = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiLogFileDeleteDirSlot.setStatus('current')
if mibBuilder.loadTexts: dpiLogFileDeleteDirSlot.setDescription('the slot id of Log-File-Delete-Dir ')
dpiLogFileDeleteDirName = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 4, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiLogFileDeleteDirName.setStatus('current')
if mibBuilder.loadTexts: dpiLogFileDeleteDirName.setDescription('the directory name of Log-File-Delete-Dir')
dpiLogFileDeleteDirOK = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiLogFileDeleteDirOK.setStatus('current')
if mibBuilder.loadTexts: dpiLogFileDeleteDirOK.setDescription('the commit of Log-File-Delete-Dir')
dpiLogFileDeleteFile = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 5))
dpiLogFileDeleteFileSlot = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiLogFileDeleteFileSlot.setStatus('current')
if mibBuilder.loadTexts: dpiLogFileDeleteFileSlot.setDescription('the slot id of Log-File-Delete-File ')
dpiLogFileDeleteFileName = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 5, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiLogFileDeleteFileName.setStatus('current')
if mibBuilder.loadTexts: dpiLogFileDeleteFileName.setDescription('the directory name of Log-File-Delete-File')
dpiLogFileDeleteFileOK = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiLogFileDeleteFileOK.setStatus('current')
if mibBuilder.loadTexts: dpiLogFileDeleteFileOK.setDescription('the commit of Log-File-Delete-File')
dpiUpdateDpiLog = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 6))
dpiUpdateDpiLogSlot = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiUpdateDpiLogSlot.setStatus('current')
if mibBuilder.loadTexts: dpiUpdateDpiLogSlot.setDescription('the slot id of Update-Dpi-Log ')
dpiLogServerFileName = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 6, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiLogServerFileName.setStatus('current')
if mibBuilder.loadTexts: dpiLogServerFileName.setDescription('the file name of Log-update')
dpiLogLocalFileName = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 6, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiLogLocalFileName.setStatus('current')
if mibBuilder.loadTexts: dpiLogLocalFileName.setDescription('the loacl file name of Log-update')
dpiUpdateDpiLogOK = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 6, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiUpdateDpiLogOK.setStatus('current')
if mibBuilder.loadTexts: dpiUpdateDpiLogOK.setDescription('the commit of Update Dpi Log')
dpiUploadTodayLog = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiUploadTodayLog.setStatus('current')
if mibBuilder.loadTexts: dpiUploadTodayLog.setDescription('the slot id of Upload today log ')
dpiCommit = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiCommit.setStatus('current')
if mibBuilder.loadTexts: dpiCommit.setDescription('the commit of the DPI Config')
dpiUpdateSignatureVersion = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiUpdateSignatureVersion.setStatus('current')
if mibBuilder.loadTexts: dpiUpdateSignatureVersion.setDescription('update the DPI signature version')
dpiVlanBindDpiTemplate = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 51, 1, 6))
dpiVlanInterfaceName = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 6, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiVlanInterfaceName.setStatus('current')
if mibBuilder.loadTexts: dpiVlanInterfaceName.setDescription('enter the Interface Name')
dpiBindDpiTemplate = MibScalar((1, 3, 6, 1, 4, 1, 3902, 51, 1, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpiBindDpiTemplate.setStatus('current')
if mibBuilder.loadTexts: dpiBindDpiTemplate.setDescription('bind the Dpi-template ID')
dpiShowAllSignatureEntryTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 51, 1, 7), )
if mibBuilder.loadTexts: dpiShowAllSignatureEntryTable.setStatus('current')
if mibBuilder.loadTexts: dpiShowAllSignatureEntryTable.setDescription('A Signature-Entry table.')
dpiShowAllSignatureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 51, 1, 7, 1), ).setIndexNames((0, "DPI-MIB", "dpiAllSignatureEntryID"))
if mibBuilder.loadTexts: dpiShowAllSignatureEntry.setStatus('current')
if mibBuilder.loadTexts: dpiShowAllSignatureEntry.setDescription('A list of entries of Signature-Entry.')
dpiAllSignatureEntryID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12287))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllSignatureEntryID.setStatus('current')
if mibBuilder.loadTexts: dpiAllSignatureEntryID.setDescription('the id of dpi Signature Entry')
dpiAllSignatureEntryContent = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllSignatureEntryContent.setStatus('current')
if mibBuilder.loadTexts: dpiAllSignatureEntryContent.setDescription('A string description of the Key Content.')
dpiShowAllSignatureSymbolTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 51, 1, 8), )
if mibBuilder.loadTexts: dpiShowAllSignatureSymbolTable.setStatus('current')
if mibBuilder.loadTexts: dpiShowAllSignatureSymbolTable.setDescription('A Signature-Symbol table.')
dpiShowAllSignatureSymbolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 51, 1, 8, 1), ).setIndexNames((0, "DPI-MIB", "dpiAllSignatureSymbolID"))
if mibBuilder.loadTexts: dpiShowAllSignatureSymbolEntry.setStatus('current')
if mibBuilder.loadTexts: dpiShowAllSignatureSymbolEntry.setDescription('A list of entries of Signature-Symbol.')
dpiAllSignatureSymbolID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6143))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllSignatureSymbolID.setStatus('current')
if mibBuilder.loadTexts: dpiAllSignatureSymbolID.setDescription('the id of dpi Signature Symbol')
dpiAllSignatureSymbolEntryList = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 8, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllSignatureSymbolEntryList.setStatus('current')
if mibBuilder.loadTexts: dpiAllSignatureSymbolEntryList.setDescription('The id-bitmap of the signature-entry included by signature-symbol ,display 16 entries at most. ')
dpiAllSignatureSymbolHitNumLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllSignatureSymbolHitNumLimit.setStatus('current')
if mibBuilder.loadTexts: dpiAllSignatureSymbolHitNumLimit.setDescription('A string description of the Key.')
dpiAllSignatureSymbolProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("inherit", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllSignatureSymbolProtocol.setStatus('current')
if mibBuilder.loadTexts: dpiAllSignatureSymbolProtocol.setDescription('the protocol of the symbol: normal=1,inherit=2')
dpiShowAllFlowPoolTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 51, 1, 9), )
if mibBuilder.loadTexts: dpiShowAllFlowPoolTable.setStatus('current')
if mibBuilder.loadTexts: dpiShowAllFlowPoolTable.setDescription('A Flow-Pool table.')
dpiShowAllFlowPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 51, 1, 9, 1), ).setIndexNames((0, "DPI-MIB", "dpiAllFlowPoolID"))
if mibBuilder.loadTexts: dpiShowAllFlowPoolEntry.setStatus('current')
if mibBuilder.loadTexts: dpiShowAllFlowPoolEntry.setDescription('A list of entries of flow-pool.')
dpiAllFlowPoolID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 8191))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllFlowPoolID.setStatus('current')
if mibBuilder.loadTexts: dpiAllFlowPoolID.setDescription('the ID of dpi Stream limit')
dpiAllUpStreamRate = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllUpStreamRate.setStatus('current')
if mibBuilder.loadTexts: dpiAllUpStreamRate.setDescription('the rate of dpi Stream limit')
dpiAllUpStreamCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllUpStreamCbs.setStatus('current')
if mibBuilder.loadTexts: dpiAllUpStreamCbs.setDescription('the cbs of the rate-limit.')
dpiAllUpStreamEbs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllUpStreamEbs.setStatus('current')
if mibBuilder.loadTexts: dpiAllUpStreamEbs.setDescription('the ebs of the rate-limit.')
dpiAllDownStreamRate = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllDownStreamRate.setStatus('current')
if mibBuilder.loadTexts: dpiAllDownStreamRate.setDescription('the rate of dpi Stream limit')
dpiAllDownStreamCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllDownStreamCbs.setStatus('current')
if mibBuilder.loadTexts: dpiAllDownStreamCbs.setDescription('the cbs of the rate-limit.')
dpiAllDownStreamEbs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 9, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllDownStreamEbs.setStatus('current')
if mibBuilder.loadTexts: dpiAllDownStreamEbs.setDescription('the ebs of the rate-limit.')
dpiShowAllSubserviceTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 51, 1, 10), )
if mibBuilder.loadTexts: dpiShowAllSubserviceTable.setStatus('current')
if mibBuilder.loadTexts: dpiShowAllSubserviceTable.setDescription('A subservice table.')
dpiShowAllSubserviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 51, 1, 10, 1), ).setIndexNames((0, "DPI-MIB", "dpiAllSubserviceID"))
if mibBuilder.loadTexts: dpiShowAllSubserviceEntry.setStatus('current')
if mibBuilder.loadTexts: dpiShowAllSubserviceEntry.setDescription('A list of entries of subservice.')
dpiAllSubserviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllSubserviceID.setStatus('current')
if mibBuilder.loadTexts: dpiAllSubserviceID.setDescription('the ID of dpi Subservice')
dpiAllSubserviceFlowpoolID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 8191))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllSubserviceFlowpoolID.setStatus('current')
if mibBuilder.loadTexts: dpiAllSubserviceFlowpoolID.setDescription('the ID of the bound Flow-pool')
dpiAllSubserviceAction = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("permit", 1), ("deny", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllSubserviceAction.setStatus('current')
if mibBuilder.loadTexts: dpiAllSubserviceAction.setDescription('the status of the subservice')
dpiAllSubserviceAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllSubserviceAgingTime.setStatus('current')
if mibBuilder.loadTexts: dpiAllSubserviceAgingTime.setDescription('the time of the aging')
dpiAllSubserviceSymbolList = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 10, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllSubserviceSymbolList.setStatus('current')
if mibBuilder.loadTexts: dpiAllSubserviceSymbolList.setDescription('the string of symbols included by Subservice.')
dpiAllSubserviceProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 10, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllSubserviceProtocol.setStatus('current')
if mibBuilder.loadTexts: dpiAllSubserviceProtocol.setDescription('All the protocol supported by Subservice.')
dpiShowAllServiceTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 51, 1, 11), )
if mibBuilder.loadTexts: dpiShowAllServiceTable.setStatus('current')
if mibBuilder.loadTexts: dpiShowAllServiceTable.setDescription('A Service table.')
dpiShowAllServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 51, 1, 11, 1), ).setIndexNames((0, "DPI-MIB", "dpiAllServiceID"))
if mibBuilder.loadTexts: dpiShowAllServiceEntry.setStatus('current')
if mibBuilder.loadTexts: dpiShowAllServiceEntry.setDescription('A list of entries of Service.')
dpiAllServiceID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2047))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllServiceID.setStatus('current')
if mibBuilder.loadTexts: dpiAllServiceID.setDescription('the ID of dpi Service')
dpiAllServiceFlowPoolID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 8191))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllServiceFlowPoolID.setStatus('current')
if mibBuilder.loadTexts: dpiAllServiceFlowPoolID.setDescription('the ID of dpi Service bound Flow-pool')
dpiAllServiceSubserviceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 11, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllServiceSubserviceNum.setStatus('current')
if mibBuilder.loadTexts: dpiAllServiceSubserviceNum.setDescription('the number of dpi Subservice in Service')
dpiAllServiceSubserviceList = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 11, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1049))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllServiceSubserviceList.setStatus('current')
if mibBuilder.loadTexts: dpiAllServiceSubserviceList.setDescription('the bitmap of subservice included by service.')
dpiShowAllTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 51, 1, 12), )
if mibBuilder.loadTexts: dpiShowAllTemplateTable.setStatus('current')
if mibBuilder.loadTexts: dpiShowAllTemplateTable.setDescription('A Template table.')
dpiShowAllTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 51, 1, 12, 1), ).setIndexNames((0, "DPI-MIB", "dpiAllTemplateID"))
if mibBuilder.loadTexts: dpiShowAllTemplateEntry.setStatus('current')
if mibBuilder.loadTexts: dpiShowAllTemplateEntry.setDescription('A list of entries of Template.')
dpiAllTemplateID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllTemplateID.setStatus('current')
if mibBuilder.loadTexts: dpiAllTemplateID.setDescription('the ID of dpi template')
dpiAllTemplateCfgCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 12, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllTemplateCfgCmd.setStatus('current')
if mibBuilder.loadTexts: dpiAllTemplateCfgCmd.setDescription('the configure commands of dpi template')
dpiShowAllMnpIpTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 51, 1, 13), )
if mibBuilder.loadTexts: dpiShowAllMnpIpTable.setStatus('current')
if mibBuilder.loadTexts: dpiShowAllMnpIpTable.setDescription('the mng-ip table.')
dpiShowAllMngIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 51, 1, 13, 1), ).setIndexNames((0, "DPI-MIB", "dpiAllSlotID"))
if mibBuilder.loadTexts: dpiShowAllMngIpEntry.setStatus('current')
if mibBuilder.loadTexts: dpiShowAllMngIpEntry.setDescription('A list of entries of Mng-ip.')
dpiAllSlotID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllSlotID.setStatus('current')
if mibBuilder.loadTexts: dpiAllSlotID.setDescription('the ID of dpi slot')
dpiAllMngIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 13, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllMngIp.setStatus('current')
if mibBuilder.loadTexts: dpiAllMngIp.setDescription('the Mng-Ip')
dpiAllServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 13, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllServerIp.setStatus('current')
if mibBuilder.loadTexts: dpiAllServerIp.setDescription('the Server-Ip')
dpiAllMngIpIsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("used", 1), ("notUsed", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllMngIpIsUsed.setStatus('current')
if mibBuilder.loadTexts: dpiAllMngIpIsUsed.setDescription('the state of mng-ip')
dpiAllLogSaveInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 13, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllLogSaveInterval.setStatus('current')
if mibBuilder.loadTexts: dpiAllLogSaveInterval.setDescription('the interval-time of saving dpi-log')
dpiAllLogAutoUpload = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enable", 1), ("disable", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllLogAutoUpload.setStatus('current')
if mibBuilder.loadTexts: dpiAllLogAutoUpload.setDescription('the state of auto-uploading dpi-log')
dpiAllLogUploadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 13, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllLogUploadInterval.setStatus('current')
if mibBuilder.loadTexts: dpiAllLogUploadInterval.setDescription('the interval-time of auto-uploading dpi-log')
dpiShowAllVlanDpiTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 51, 1, 14), )
if mibBuilder.loadTexts: dpiShowAllVlanDpiTable.setStatus('current')
if mibBuilder.loadTexts: dpiShowAllVlanDpiTable.setDescription('the vlan-dpi binding table.')
dpiShowAllVlanDpiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 51, 1, 14, 1), ).setIndexNames((0, "DPI-MIB", "dpiAllVlanID"))
if mibBuilder.loadTexts: dpiShowAllVlanDpiEntry.setStatus('current')
if mibBuilder.loadTexts: dpiShowAllVlanDpiEntry.setDescription('A list of entries of vlan-dpi.')
dpiAllVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllVlanID.setStatus('current')
if mibBuilder.loadTexts: dpiAllVlanID.setDescription('the ID of Vlan')
dpiAllVlanBindTemplateID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 14, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllVlanBindTemplateID.setStatus('current')
if mibBuilder.loadTexts: dpiAllVlanBindTemplateID.setDescription('the ID of Vlan-binding template')
dpiAllVlanBindSlotID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 14, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllVlanBindSlotID.setStatus('current')
if mibBuilder.loadTexts: dpiAllVlanBindSlotID.setDescription('the ID of Vlan-binding dpi-slot ')
dpiAllVlanBindServiceID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 14, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllVlanBindServiceID.setStatus('current')
if mibBuilder.loadTexts: dpiAllVlanBindServiceID.setDescription('the ID of Vlan-binding service ')
dpiAllVlanBindIsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 51, 1, 14, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("used", 1), ("notUsed", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpiAllVlanBindIsUsed.setStatus('current')
if mibBuilder.loadTexts: dpiAllVlanBindIsUsed.setDescription('the state of Vlan-binding ')
mibBuilder.exportSymbols("DPI-MIB", dpiAllTemplateCfgCmd=dpiAllTemplateCfgCmd, dpiLogLocalFileName=dpiLogLocalFileName, dpiAllSubserviceAction=dpiAllSubserviceAction, dpiShowAllVlanDpiTable=dpiShowAllVlanDpiTable, dpiUpdateDpiLogOK=dpiUpdateDpiLogOK, dpiFlowPool=dpiFlowPool, dpiSipServiceID=dpiSipServiceID, dpiNoBindFlowPool=dpiNoBindFlowPool, dpiServiceSubserviceNum=dpiServiceSubserviceNum, dpiShowAllServiceTable=dpiShowAllServiceTable, dpiServiceNoBindFlowPool=dpiServiceNoBindFlowPool, dpiUploadTimeInterval=dpiUploadTimeInterval, dpiShowSubservice=dpiShowSubservice, dpiServiceTable=dpiServiceTable, dpiShowAllMnpIpTable=dpiShowAllMnpIpTable, dpiSubserviceAction=dpiSubserviceAction, dpiBindSwitchportPort=dpiBindSwitchportPort, dpiSetActiceConnectionSaveInterval=dpiSetActiceConnectionSaveInterval, dpiLogServerFileName=dpiLogServerFileName, dpiMngIp=dpiMngIp, dpiLogFileDeleteFileName=dpiLogFileDeleteFileName, dpiAddSignatureSymbolOK=dpiAddSignatureSymbolOK, dpiNoBindService=dpiNoBindService, dpiImportDestSubservice=dpiImportDestSubservice, dpiDownStreamEbs=dpiDownStreamEbs, dpiShowService=dpiShowService, dpiNoImportSubservice=dpiNoImportSubservice, dpiSubservice=dpiSubservice, dpiServerIp=dpiServerIp, dpiUpStreamRateLimit=dpiUpStreamRateLimit, dpiShowSignatureEntry=dpiShowSignatureEntry, dpiServiceSubserviceList=dpiServiceSubserviceList, dpiLogFileDeleteFile=dpiLogFileDeleteFile, dpiDownStreamRate=dpiDownStreamRate, dpiUploadAuto=dpiUploadAuto, dpiSubserviceFlowpoolID=dpiSubserviceFlowpoolID, dpiAllSignatureSymbolID=dpiAllSignatureSymbolID, dpiMngServerSlot=dpiMngServerSlot, dpiBindDpiTemplate=dpiBindDpiTemplate, dpiVlanInterfaceName=dpiVlanInterfaceName, dpiShowAllTemplateEntry=dpiShowAllTemplateEntry, dpiShowSignatureSymbol=dpiShowSignatureSymbol, dpiSubserviceTable=dpiSubserviceTable, dpiNoDownStreamRateLimit=dpiNoDownStreamRateLimit, dpiConfigMode=dpiConfigMode, dpiStreamCbs=dpiStreamCbs, dpiUpdateDpiLogSlot=dpiUpdateDpiLogSlot, dpiCommit=dpiCommit, dpiAllVlanID=dpiAllVlanID, dpiShowAllTemplateTable=dpiShowAllTemplateTable, dpiNoAddProtocol=dpiNoAddProtocol, dpiNoAddSignatureSymbol=dpiNoAddSignatureSymbol, dpiAllServiceSubserviceList=dpiAllServiceSubserviceList, dpiSignatureEntry=dpiSignatureEntry, dpiShowAllServiceEntry=dpiShowAllServiceEntry, dpiMonitorLog=dpiMonitorLog, dpiUpdateSignatureVersion=dpiUpdateSignatureVersion, dpiShowAllVlanDpiEntry=dpiShowAllVlanDpiEntry, dpiLogFileListDirOK=dpiLogFileListDirOK, dpiAllSubserviceAgingTime=dpiAllSubserviceAgingTime, dpiAllSubserviceFlowpoolID=dpiAllSubserviceFlowpoolID, dpiUploadAutoSlot=dpiUploadAutoSlot, dpiAllSignatureEntryContent=dpiAllSignatureEntryContent, dpiSignatureSymbol=dpiSignatureSymbol, dpiServiceConnectionLimit=dpiServiceConnectionLimit, dpiSipMask=dpiSipMask, dpiBindService=dpiBindService, dpiCurrentSignatureSymbol=dpiCurrentSignatureSymbol, zxrDPI=zxrDPI, dpiSetAction=dpiSetAction, dpiCurrentSubservice=dpiCurrentSubservice, dpiAllUpStreamRate=dpiAllUpStreamRate, dpiAllServiceSubserviceNum=dpiAllServiceSubserviceNum, dpiNoAddSignatureEntry=dpiNoAddSignatureEntry, dpiSetContent=dpiSetContent, dpiAllSignatureSymbolEntryList=dpiAllSignatureSymbolEntryList, dpiServiceID=dpiServiceID, dpiSubserviceSymbolNum=dpiSubserviceSymbolNum, dpiShowAllMngIpEntry=dpiShowAllMngIpEntry, dpiImportSubserviceOK=dpiImportSubserviceOK, dpiCurrentFlowPool=dpiCurrentFlowPool, dpiLogFileDeleteFileOK=dpiLogFileDeleteFileOK, dpiShowAllSubserviceEntry=dpiShowAllSubserviceEntry, dpiAllDownStreamRate=dpiAllDownStreamRate, dpiUploadAutoOK=dpiUploadAutoOK, dpiService=dpiService, dpiAllSubserviceProtocol=dpiAllSubserviceProtocol, dpiCurrentService=dpiCurrentService, dpiAllLogSaveInterval=dpiAllLogSaveInterval, dpiAllMngIp=dpiAllMngIp, dpiAllVlanBindServiceID=dpiAllVlanBindServiceID, dpiBindSlot=dpiBindSlot, dpiShowAllSignatureEntryTable=dpiShowAllSignatureEntryTable, dpiLogFileListDirSlot=dpiLogFileListDirSlot, dpiBindSwitchport=dpiBindSwitchport, dpiImportSubservice=dpiImportSubservice, dpiDownStreamCbs=dpiDownStreamCbs, dpiAllLogAutoUpload=dpiAllLogAutoUpload, dpiNoBindSipAddr=dpiNoBindSipAddr, dpiShowAllSignatureEntry=dpiShowAllSignatureEntry, dpiShowAllSignatureSymbolEntry=dpiShowAllSignatureSymbolEntry, dpiAllVlanBindTemplateID=dpiAllVlanBindTemplateID, dpiSubserviceAgingTime=dpiSubserviceAgingTime, dpiShowIpService=dpiShowIpService, dpiLogFileListDirFtpFile=dpiLogFileListDirFtpFile, dpiLogFileDeleteFileSlot=dpiLogFileDeleteFileSlot, dpiAllSignatureEntryID=dpiAllSignatureEntryID, dpiAllSubserviceSymbolList=dpiAllSubserviceSymbolList, dpiAllDownStreamEbs=dpiAllDownStreamEbs, dpiTemplate=dpiTemplate, dpiUploadIntervalSlot=dpiUploadIntervalSlot, dpiBindSipAddr=dpiBindSipAddr, dpiLogFileDeleteDirName=dpiLogFileDeleteDirName, dpiLogFileDeleteDirOK=dpiLogFileDeleteDirOK, dpiBindMngServiceIp=dpiBindMngServiceIp, dpiBindSwitchService=dpiBindSwitchService, dpiBindSwitchportOK=dpiBindSwitchportOK, dpiLogFileDeleteDir=dpiLogFileDeleteDir, dpiSignatureEntryTable=dpiSignatureEntryTable, dpiServiceFlowPoolID=dpiServiceFlowPoolID, dpiAllVlanBindSlotID=dpiAllVlanBindSlotID, dpiAllSignatureSymbolHitNumLimit=dpiAllSignatureSymbolHitNumLimit, dpiVlanBindDpiTemplate=dpiVlanBindDpiTemplate, PYSNMP_MODULE_ID=fwdpi, dpiNoBindSlot=dpiNoBindSlot, dpiUpStreamRate=dpiUpStreamRate, dpiNoUpStreamRateLimit=dpiNoUpStreamRateLimit, dpiAddSubservice=dpiAddSubservice, dpiUploadTodayLog=dpiUploadTodayLog, dpiSignatureSymbolEntryID=dpiSignatureSymbolEntryID, dpiSignatureSymbolTableEntry=dpiSignatureSymbolTableEntry, dpiAllServiceID=dpiAllServiceID, dpiStreamLimitTable=dpiStreamLimitTable, dpiShowAllSignatureSymbolTable=dpiShowAllSignatureSymbolTable, dpiStreamLimitTableEntry=dpiStreamLimitTableEntry, dpiDownStreamOK=dpiDownStreamOK, dpiUpdateDpiLog=dpiUpdateDpiLog, dpiSignatureSymbolTable=dpiSignatureSymbolTable, dpiUploadInterval=dpiUploadInterval, dpiUpStreamEbs=dpiUpStreamEbs, dpiSubserviceSymbolList=dpiSubserviceSymbolList, dpiSignatureTableEntry=dpiSignatureTableEntry, dpiDownStreamRateLimit=dpiDownStreamRateLimit, dpiAllLogUploadInterval=dpiAllLogUploadInterval, dpiSubserviceEntry=dpiSubserviceEntry, dpiAddSignatureSymbolId=dpiAddSignatureSymbolId, dpiShowPortService=dpiShowPortService, dpiServiceBindFlowPool=dpiServiceBindFlowPool, dpiAllUpStreamCbs=dpiAllUpStreamCbs, dpiLogFileListDirLocalDir=dpiLogFileListDirLocalDir, dpiUpStreamCbs=dpiUpStreamCbs, dpiServiceEntry=dpiServiceEntry, dpiSignatureSymbolID=dpiSignatureSymbolID, dpiSipAddress=dpiSipAddress, dpiAllServerIp=dpiAllServerIp, dpiSignatureSymbolHitNumLimit=dpiSignatureSymbolHitNumLimit, dpiStreamLimitID=dpiStreamLimitID, dpiNoBindSwitchport=dpiNoBindSwitchport, dpiAllServiceFlowPoolID=dpiAllServiceFlowPoolID, fwdpi=fwdpi, dpiSignatureEntryID=dpiSignatureEntryID, dpiAddSignatureSymbol=dpiAddSignatureSymbol, dpiClearConnectionAll=dpiClearConnectionAll, dpiAddProtocol=dpiAddProtocol, dpiSetHitNumLimit=dpiSetHitNumLimit, dpiAllMngIpIsUsed=dpiAllMngIpIsUsed, dpiNoAddSubservice=dpiNoAddSubservice, dpiSlotNumber=dpiSlotNumber, dpiAllVlanBindIsUsed=dpiAllVlanBindIsUsed, dpiSystemControl=dpiSystemControl, dpiRestartFunc=dpiRestartFunc, dpiLogFileListDir=dpiLogFileListDir, dpiUploadAutoEnable=dpiUploadAutoEnable, dpiBindSipAddrOK=dpiBindSipAddrOK, dpiCurrentTemplate=dpiCurrentTemplate, dpiCurrentSignatureEntry=dpiCurrentSignatureEntry, dpiUploadIntervalOK=dpiUploadIntervalOK, dpiAllFlowPoolID=dpiAllFlowPoolID, dpiSubserviceID=dpiSubserviceID, dpiAddSignatureSymbolRelationName=dpiAddSignatureSymbolRelationName, dpiShowAllFlowPoolEntry=dpiShowAllFlowPoolEntry, dpiShowAllSubserviceTable=dpiShowAllSubserviceTable, dpiMngServerOK=dpiMngServerOK, dpiAddSignatureEntry=dpiAddSignatureEntry, dpiSignatureEntryContent=dpiSignatureEntryContent, dpiShowFlowPool=dpiShowFlowPool, dpiLogFileDeleteDirSlot=dpiLogFileDeleteDirSlot, dpiAllSignatureSymbolProtocol=dpiAllSignatureSymbolProtocol, dpiAllDownStreamCbs=dpiAllDownStreamCbs, dpiUpStreamOK=dpiUpStreamOK, dpiStreamEbs=dpiStreamEbs, dpiAllTemplateID=dpiAllTemplateID, dpiAllUpStreamEbs=dpiAllUpStreamEbs, dpiAllSubserviceID=dpiAllSubserviceID, zte=zte, dpiStreamLimitType=dpiStreamLimitType, dpiAllSlotID=dpiAllSlotID, dpiShowAllFlowPoolTable=dpiShowAllFlowPoolTable, dpiImportSrcSubservice=dpiImportSrcSubservice, dpiSetAgingTime=dpiSetAgingTime, dpiStreamRate=dpiStreamRate, dpiBindFlowPool=dpiBindFlowPool)
