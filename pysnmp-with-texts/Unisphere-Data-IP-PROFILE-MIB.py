#
# PySNMP MIB module Unisphere-Data-IP-PROFILE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Unisphere-Data-IP-PROFILE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:31:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Unsigned32, iso, Counter32, ObjectIdentity, ModuleIdentity, Bits, IpAddress, Counter64, MibIdentifier, TimeTicks, Integer32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Unsigned32", "iso", "Counter32", "ObjectIdentity", "ModuleIdentity", "Bits", "IpAddress", "Counter64", "MibIdentifier", "TimeTicks", "Integer32", "NotificationType")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
usDataMibs, = mibBuilder.importSymbols("Unisphere-Data-MIBs", "usDataMibs")
UsdEnable, UsdSetMap, UsdName = mibBuilder.importSymbols("Unisphere-Data-TC", "UsdEnable", "UsdSetMap", "UsdName")
usdIpProfileMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26))
usdIpProfileMIB.setRevisions(('2001-01-24 20:06', '2000-05-08 00:00', '1999-08-25 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: usdIpProfileMIB.setRevisionsDescriptions(('Deprecated usdIpProfileRowStatus; the table is now dense and populated as a side-effect of creation of an entry in the usdProfileNameTable in Unisphere-Data-PROFILE-MIB. Also, added usdIpProfileSetMap and usdIpProfileSrcAddrValidEnable.', 'Obsoleted usdIpProfileLoopbackIfIndex, replacing it with usdIpProfileLoopback.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: usdIpProfileMIB.setLastUpdated('200101242006Z')
if mibBuilder.loadTexts: usdIpProfileMIB.setOrganization('Unisphere Networks Inc.')
if mibBuilder.loadTexts: usdIpProfileMIB.setContactInfo(' Unisphere Networks, Inc. Postal: 10 Technology Park Drive Westford MA 01886 USA Tel: +1 978 589 5800 Email: mib@UnisphereNetworks.com')
if mibBuilder.loadTexts: usdIpProfileMIB.setDescription('The IP Profile MIB for the Unisphere Networks Inc. enterprise.')
usdIpProfileObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 1))
usdIpProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 1, 1))
usdIpProfileTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 1, 1, 1), )
if mibBuilder.loadTexts: usdIpProfileTable.setStatus('current')
if mibBuilder.loadTexts: usdIpProfileTable.setDescription('The entries in this table describe profiles for configuring IP interfaces. Entries in this table are created/deleted as a side-effect of corresponding operations to the usdProfileNameTable in the Unisphere-Data-PROFILE-MIB.')
usdIpProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 1, 1, 1, 1), ).setIndexNames((0, "Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileId"))
if mibBuilder.loadTexts: usdIpProfileEntry.setStatus('current')
if mibBuilder.loadTexts: usdIpProfileEntry.setDescription('A profile describing configuration of an IP interface.')
usdIpProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 1, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: usdIpProfileId.setStatus('current')
if mibBuilder.loadTexts: usdIpProfileId.setDescription('The integer identifier associated with this profile. A value for this identifier is determined by locating or creating a profile name in the usdProfileNameTable.')
usdIpProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIpProfileRowStatus.setStatus('deprecated')
if mibBuilder.loadTexts: usdIpProfileRowStatus.setDescription("Controls creation/deletion of entries in this table. Only the values 'createAndGo' and 'destroy' may be SET. The value of usdIpProfileId must match that of a profile name configured in usdProfileNameTable.")
usdIpProfileRouterName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 1, 1, 1, 1, 3), UsdName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIpProfileRouterName.setStatus('current')
if mibBuilder.loadTexts: usdIpProfileRouterName.setDescription('The virtual router to which an IP interface configured by this profile will be assigned, if other mechanisms do not otherwise specify a virtual router assignment.')
usdIpProfileIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 1, 1, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIpProfileIpAddr.setStatus('current')
if mibBuilder.loadTexts: usdIpProfileIpAddr.setDescription('An IP address to be used by an IP interface configured by this profile. This object will have a value of 0.0.0.0 for an unnumbered interface.')
usdIpProfileIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 1, 1, 1, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIpProfileIpMask.setStatus('current')
if mibBuilder.loadTexts: usdIpProfileIpMask.setDescription('An IP address mask to be used by an IP interface configured by this profile. This object will have a value of 0.0.0.0 for an unnumbered interface.')
usdIpProfileDirectedBcastEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 1, 1, 1, 1, 6), UsdEnable().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIpProfileDirectedBcastEnable.setStatus('current')
if mibBuilder.loadTexts: usdIpProfileDirectedBcastEnable.setDescription('Enable/disable forwarding of directed broadcasts on this IP network interface.')
usdIpProfileIcmpRedirectEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 1, 1, 1, 1, 7), UsdEnable().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIpProfileIcmpRedirectEnable.setStatus('current')
if mibBuilder.loadTexts: usdIpProfileIcmpRedirectEnable.setDescription('Enable/disable transmission of ICMP Redirect messages on this IP network interface.')
usdIpProfileAccessRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 1, 1, 1, 1, 8), UsdEnable().clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIpProfileAccessRoute.setStatus('current')
if mibBuilder.loadTexts: usdIpProfileAccessRoute.setDescription('Enable/disable whether a host route is automatically created for a remote host attached to an IP interface that is configured using this profile.')
usdIpProfileMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(512, 10240), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIpProfileMtu.setStatus('current')
if mibBuilder.loadTexts: usdIpProfileMtu.setDescription('The configured MTU size for this IP network interface. If set to zero, the default MTU size, as determined by the underlying network media, is used.')
usdIpProfileLoopbackIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 1, 1, 1, 1, 10), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIpProfileLoopbackIfIndex.setStatus('obsolete')
if mibBuilder.loadTexts: usdIpProfileLoopbackIfIndex.setDescription('For unnumbered interfaces, the IfIndex of the IP loopback interface whose IP address is used as the source address for transmitted IP packets. A value of zero means the loopback interface is unspecified (e.g., when the interface is numbered).')
usdIpProfileLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIpProfileLoopback.setStatus('current')
if mibBuilder.loadTexts: usdIpProfileLoopback.setDescription("The number of the loopback interface, associated with the specified virtual router, whose IP address is used as the source address when transmitting IP packets on unnumbered remote access user links. For example, if the loopback interface for the associated router was configured via the console as 'loopback 2', this object would contain the integer value 2. A value of -1 indicates the loopback interface is unspecified, e.g., when the IP interface is numbered.")
usdIpProfileSetMap = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 1, 1, 1, 1, 12), UsdSetMap()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIpProfileSetMap.setStatus('current')
if mibBuilder.loadTexts: usdIpProfileSetMap.setDescription("A bitmap representing which objects in this entry have been explicitly configured. See the definition of the UsdSetMap TEXTUAL-CONVENTION for details of use. The INDEX object(s) and this object are excluded from representation (i.e. their bits are never set). When a SET request does not explicitly configure UsdSetMap, bits in UsdSetMap are set as a side-effect of configuring other profile attributes in the same entry. If, however, a SET request explicitly configures UsdSetMap, the explicitly configured value overrides 1) any previous bit settings, and 2) any simultaneous 'side-effect' settings that would otherwise occur. Once set, bits can only be cleared by explicitly configuring UsdSetMap.")
usdIpProfileSrcAddrValidEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 1, 1, 1, 1, 13), UsdEnable().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIpProfileSrcAddrValidEnable.setStatus('current')
if mibBuilder.loadTexts: usdIpProfileSrcAddrValidEnable.setDescription('Enable/disable whether source addresses in received IP packets are validated. Validation is performed by looking up the source IP address in the routing database and determining whether the packet arrived on the expected interface; if not, the packet is discarded.')
usdIpProfileMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 4))
usdIpProfileMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 4, 1))
usdIpProfileMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 4, 2))
usdIpProfileCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 4, 1, 1)).setObjects(("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdIpProfileCompliance = usdIpProfileCompliance.setStatus('obsolete')
if mibBuilder.loadTexts: usdIpProfileCompliance.setDescription('Obsolete compliance statement for systems supporting IP configuration profiles. This statement became obsolete when usdIpProfileLoopback replaced usdIpProfileLoopbackIfIndex.')
usdIpProfileCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 4, 1, 2)).setObjects(("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdIpProfileCompliance1 = usdIpProfileCompliance1.setStatus('obsolete')
if mibBuilder.loadTexts: usdIpProfileCompliance1.setDescription('Obsolete compliance statement for systems supporting IP configuration profiles. This statement became obsolete when usdIpProfileRowStatus was deprecate and the usdIpProfileSetMap and usdIpProfileSrcAddrValidEnable objects were added.')
usdIpProfileCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 4, 1, 3)).setObjects(("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdIpProfileCompliance2 = usdIpProfileCompliance2.setStatus('current')
if mibBuilder.loadTexts: usdIpProfileCompliance2.setDescription('The compliance statement for systems supporting IP configuration profiles, incorporating UsdSetMap.')
usdIpProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 4, 2, 1)).setObjects(("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileRowStatus"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileRouterName"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileIpAddr"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileIpMask"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileDirectedBcastEnable"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileIcmpRedirectEnable"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileAccessRoute"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileMtu"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileLoopbackIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdIpProfileGroup = usdIpProfileGroup.setStatus('obsolete')
if mibBuilder.loadTexts: usdIpProfileGroup.setDescription('An obsolete collection of objects providing management of IP Profile functionality in a Unisphere product. This group became obsolete when usdIpProfileLoopback replaced usdIpProfileLoopbackIfIndex.')
usdIpProfileGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 4, 2, 2)).setObjects(("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileRowStatus"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileRouterName"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileIpAddr"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileIpMask"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileDirectedBcastEnable"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileIcmpRedirectEnable"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileAccessRoute"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileMtu"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileLoopback"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdIpProfileGroup1 = usdIpProfileGroup1.setStatus('obsolete')
if mibBuilder.loadTexts: usdIpProfileGroup1.setDescription('An obsolete collection of objects providing management of IP Profile functionality in a Unisphere product. This group became obsolete when usdIpProfileRowStatus was deprecate and the usdIpProfileSetMap and usdIpProfileSrcAddrValidEnable objects were added.')
usdIpProfileGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 4, 2, 3)).setObjects(("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileRouterName"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileIpAddr"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileIpMask"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileDirectedBcastEnable"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileIcmpRedirectEnable"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileAccessRoute"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileMtu"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileLoopback"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileSetMap"), ("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileSrcAddrValidEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdIpProfileGroup2 = usdIpProfileGroup2.setStatus('current')
if mibBuilder.loadTexts: usdIpProfileGroup2.setDescription('The basic collection of objects providing management of IP Profile functionality in a Unisphere product.')
usdIpProfileDeprecatedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 26, 4, 2, 4)).setObjects(("Unisphere-Data-IP-PROFILE-MIB", "usdIpProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdIpProfileDeprecatedGroup = usdIpProfileDeprecatedGroup.setStatus('deprecated')
if mibBuilder.loadTexts: usdIpProfileDeprecatedGroup.setDescription('Deprecated object providing management of IP Profile functionality in a Juniper product. This group has been deprecated but may still be supported on some implementations.')
mibBuilder.exportSymbols("Unisphere-Data-IP-PROFILE-MIB", usdIpProfileLoopback=usdIpProfileLoopback, usdIpProfileMtu=usdIpProfileMtu, usdIpProfile=usdIpProfile, usdIpProfileMIBConformance=usdIpProfileMIBConformance, usdIpProfileGroup=usdIpProfileGroup, usdIpProfileCompliance=usdIpProfileCompliance, usdIpProfileRowStatus=usdIpProfileRowStatus, usdIpProfileIcmpRedirectEnable=usdIpProfileIcmpRedirectEnable, usdIpProfileGroup1=usdIpProfileGroup1, usdIpProfileEntry=usdIpProfileEntry, usdIpProfileMIBCompliances=usdIpProfileMIBCompliances, usdIpProfileMIBGroups=usdIpProfileMIBGroups, usdIpProfileId=usdIpProfileId, usdIpProfileAccessRoute=usdIpProfileAccessRoute, usdIpProfileSrcAddrValidEnable=usdIpProfileSrcAddrValidEnable, usdIpProfileIpAddr=usdIpProfileIpAddr, usdIpProfileSetMap=usdIpProfileSetMap, usdIpProfileTable=usdIpProfileTable, usdIpProfileGroup2=usdIpProfileGroup2, usdIpProfileDeprecatedGroup=usdIpProfileDeprecatedGroup, usdIpProfileIpMask=usdIpProfileIpMask, usdIpProfileLoopbackIfIndex=usdIpProfileLoopbackIfIndex, usdIpProfileCompliance2=usdIpProfileCompliance2, usdIpProfileMIB=usdIpProfileMIB, usdIpProfileRouterName=usdIpProfileRouterName, usdIpProfileObjects=usdIpProfileObjects, usdIpProfileCompliance1=usdIpProfileCompliance1, usdIpProfileDirectedBcastEnable=usdIpProfileDirectedBcastEnable, PYSNMP_MODULE_ID=usdIpProfileMIB)
