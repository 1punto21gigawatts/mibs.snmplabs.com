#
# PySNMP MIB module HUAWEI-BRAS-DPI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-BRAS-DPI-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:43:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
hwBRASMib, = mibBuilder.importSymbols("HUAWEI-MIB", "hwBRASMib")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Counter32, Bits, Unsigned32, ObjectIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, NotificationType, TimeTicks, Integer32, Counter64, IpAddress, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "Bits", "Unsigned32", "ObjectIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "NotificationType", "TimeTicks", "Integer32", "Counter64", "IpAddress", "MibIdentifier")
TruthValue, RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "TextualConvention", "DisplayString")
hwBRASDpi = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16))
if mibBuilder.loadTexts: hwBRASDpi.setLastUpdated('200604181334Z')
if mibBuilder.loadTexts: hwBRASDpi.setOrganization(' NanJing Institute,Huawei Technologies Co.,Ltd. HuiHong Mansion,No.91 BaiXia Rd. NanJing, P.R. of China Zipcode:210001 Http://www.huawei.com E-mail:support@huawei.com ')
if mibBuilder.loadTexts: hwBRASDpi.setContactInfo('The MIB contains objects of module DPI.')
if mibBuilder.loadTexts: hwBRASDpi.setDescription('Description.')
hwDpiPolicyObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16, 1))
hwDpiPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16, 1, 1), )
if mibBuilder.loadTexts: hwDpiPolicyTable.setStatus('current')
if mibBuilder.loadTexts: hwDpiPolicyTable.setDescription(' DPI Service Policy Configuration. ')
hwDpiPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16, 1, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-DPI-MIB", "hwDpiPolicyName"))
if mibBuilder.loadTexts: hwDpiPolicyEntry.setStatus('current')
if mibBuilder.loadTexts: hwDpiPolicyEntry.setDescription(' Dpi Policy Entry. The dpi policy table is uniquely identified by the policy name. The policy name is the key word entered when the policy table is created, and cannot be changed. The index is hwDpiPolicyName. This table is used to configure the dpi policy. The description of operation constraints is as follows: 1.The DPI policy name must be entered when the policy table is created. 2.The DPI policy cannot be changed if it is referenced by some user. 3.The current DPI policy cannot be deleted if it is referenced by some domain. ')
hwDpiServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("p2p", 0), ("other", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDpiServiceType.setStatus('current')
if mibBuilder.loadTexts: hwDpiServiceType.setDescription(' Service Type. P2P/OTHER. ')
hwDpiPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDpiPolicyName.setStatus('current')
if mibBuilder.loadTexts: hwDpiPolicyName.setDescription(' Dpi Policy Name. The policy name is the key word entered when the policy table is created, and cannot be changed later. The DPI policy name is assigned when DPI policy is created. ')
hwDpiUpBehaviorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDpiUpBehaviorName.setStatus('current')
if mibBuilder.loadTexts: hwDpiUpBehaviorName.setDescription(' Up Behavior Name. Binding up DPI behavior policy is choosen to do, if up DPI behavior is binded, it need assingn behavior name. ')
hwDpiDownBehaviorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDpiDownBehaviorName.setStatus('current')
if mibBuilder.loadTexts: hwDpiDownBehaviorName.setDescription(' Down Behavior Name. Binding down DPI behavior policy is choosen to do, if down DPI behavior is binded, it need assingn behavior name. ')
hwDpiPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16, 1, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDpiPolicyRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwDpiPolicyRowStatus.setDescription('Row admin status,either Add or Del. Supports add and delete. ')
hwDpiBehaviorTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16, 1, 2), )
if mibBuilder.loadTexts: hwDpiBehaviorTable.setStatus('current')
hwDpiBehaviorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16, 1, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-DPI-MIB", "hwDpiBehaviorName"))
if mibBuilder.loadTexts: hwDpiBehaviorEntry.setStatus('current')
if mibBuilder.loadTexts: hwDpiBehaviorEntry.setDescription(' Dpi Behavior Entry. The dpi behavior table is uniquely identified by the behavior name. The behavior name is the key word entered when the behavior table is created, and cannot be changed. The index is hwDpiBehaviorName. This table is used to configure the dpi behavior. The description of operation constraints is as follows: 1.The DPI behavior name must be entered when the behavior table is created. 2.The DPI behavior cannot be changed if it is referenced by some DPI policy. 3.The current DPI behavior cannot be deleted if it is referenced by global application. ')
hwDpiBehaviorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDpiBehaviorName.setStatus('current')
if mibBuilder.loadTexts: hwDpiBehaviorName.setDescription(' Dpi Behavior Name. The behavior name is the key word entered when the behavior table is created, and cannot be changed. The DPI behavior name is assigned when DPI behavior is created. ')
hwDpiBehaviorCarCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 3000000)).clone(100000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDpiBehaviorCarCir.setStatus('current')
if mibBuilder.loadTexts: hwDpiBehaviorCarCir.setDescription(' Dpi Car Cir. Car Cir.')
hwDpiBehaviorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDpiBehaviorRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwDpiBehaviorRowStatus.setDescription('Row admin status,either Add or Del. Supports add and delete. ')
hwDpiConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16, 2))
hwDpiCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16, 2, 1))
hwDpiCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16, 2, 1, 1)).setObjects(("HUAWEI-BRAS-DPI-MIB", "hwDpiPolicyGroup"), ("HUAWEI-BRAS-DPI-MIB", "hwDpiBehaviorGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDpiCompliance = hwDpiCompliance.setStatus('current')
if mibBuilder.loadTexts: hwDpiCompliance.setDescription('The compliance statement for systems supporting the this module.')
hwDpiGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16, 2, 2))
hwDpiPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16, 2, 2, 1)).setObjects(("HUAWEI-BRAS-DPI-MIB", "hwDpiServiceType"), ("HUAWEI-BRAS-DPI-MIB", "hwDpiPolicyName"), ("HUAWEI-BRAS-DPI-MIB", "hwDpiUpBehaviorName"), ("HUAWEI-BRAS-DPI-MIB", "hwDpiDownBehaviorName"), ("HUAWEI-BRAS-DPI-MIB", "hwDpiPolicyRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDpiPolicyGroup = hwDpiPolicyGroup.setStatus('current')
if mibBuilder.loadTexts: hwDpiPolicyGroup.setDescription('The Dpi policy group.')
hwDpiBehaviorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 16, 2, 2, 2)).setObjects(("HUAWEI-BRAS-DPI-MIB", "hwDpiBehaviorName"), ("HUAWEI-BRAS-DPI-MIB", "hwDpiBehaviorCarCir"), ("HUAWEI-BRAS-DPI-MIB", "hwDpiBehaviorRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDpiBehaviorGroup = hwDpiBehaviorGroup.setStatus('current')
if mibBuilder.loadTexts: hwDpiBehaviorGroup.setDescription('The Dpi behavior group.')
mibBuilder.exportSymbols("HUAWEI-BRAS-DPI-MIB", hwDpiConformance=hwDpiConformance, hwDpiCompliance=hwDpiCompliance, hwDpiServiceType=hwDpiServiceType, hwDpiDownBehaviorName=hwDpiDownBehaviorName, hwDpiPolicyName=hwDpiPolicyName, hwDpiPolicyEntry=hwDpiPolicyEntry, hwBRASDpi=hwBRASDpi, hwDpiBehaviorEntry=hwDpiBehaviorEntry, hwDpiCompliances=hwDpiCompliances, hwDpiPolicyGroup=hwDpiPolicyGroup, hwDpiBehaviorName=hwDpiBehaviorName, hwDpiPolicyObject=hwDpiPolicyObject, hwDpiPolicyTable=hwDpiPolicyTable, hwDpiUpBehaviorName=hwDpiUpBehaviorName, hwDpiGroups=hwDpiGroups, hwDpiBehaviorGroup=hwDpiBehaviorGroup, hwDpiPolicyRowStatus=hwDpiPolicyRowStatus, hwDpiBehaviorTable=hwDpiBehaviorTable, PYSNMP_MODULE_ID=hwBRASDpi, hwDpiBehaviorRowStatus=hwDpiBehaviorRowStatus, hwDpiBehaviorCarCir=hwDpiBehaviorCarCir)
