#
# PySNMP MIB module FUJITSU-EXTENDED-NONOS-AWN-MIB-V06 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FUJITSU-EXTENDED-NONOS-AWN-MIB-V06
# Produced by pysmi-0.3.4 at Wed May  1 13:16:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, NotificationType, MibIdentifier, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, iso, ModuleIdentity, ObjectIdentity, Integer32, Unsigned32, Gauge32, IpAddress, Bits, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "NotificationType", "MibIdentifier", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "iso", "ModuleIdentity", "ObjectIdentity", "Integer32", "Unsigned32", "Gauge32", "IpAddress", "Bits", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
fujitsu = MibIdentifier((1, 3, 6, 1, 4, 1, 211))
product = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1))
nonos = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127))
awn = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29))
awnSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1))
awnSysNode = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 1))
awnSysNodeInformation = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(512, 512)).setFixedLength(512)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysNodeInformation.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysNodeInformation.setDescription('System information')
awnSysNodeCommonStatus = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysNodeCommonStatus.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysNodeCommonStatus.setDescription('System status')
awnSysNodeClk = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysNodeClk.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysNodeClk.setDescription('Not supported')
awnSysCom = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 2))
awnSysComDevice = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(80, 80)).setFixedLength(80)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysComDevice.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysComDevice.setDescription('COM unit package status')
awnSysComPort = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 2, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(192, 192)).setFixedLength(192)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysComPort.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysComPort.setDescription('COM unit port status')
awnSysComDevice2 = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 2, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(68, 68)).setFixedLength(68)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysComDevice2.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysComDevice2.setDescription('COM unit package status')
awnSysComPort2 = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 2, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(120, 120)).setFixedLength(120)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysComPort2.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysComPort2.setDescription('COM unit port status')
awnSysLs = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 3))
awnSysLsTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 3, 1), )
if mibBuilder.loadTexts: awnSysLsTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysLsTable.setDescription('Table')
awnSysLsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 3, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysLsUnit"))
if mibBuilder.loadTexts: awnSysLsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysLsEntry.setDescription('Entry')
awnSysLsUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysLsUnit.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysLsUnit.setDescription('LS unit number')
awnSysLsDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysLsDevice.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysLsDevice.setDescription('Package status')
awnSysLsPort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(560, 560)).setFixedLength(560)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysLsPort.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysLsPort.setDescription('Port status')
awnSysLsDevice2 = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 3, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(80, 80)).setFixedLength(80)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysLsDevice2.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysLsDevice2.setDescription('Package status')
awnSysLsPort2 = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 3, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(720, 720)).setFixedLength(720)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysLsPort2.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysLsPort2.setDescription('Port status')
awnSysLine = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 4))
awnSysLineTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 4, 1), )
if mibBuilder.loadTexts: awnSysLineTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysLineTable.setDescription('Table')
awnSysLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 4, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysLineUnit"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysLineCard"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysLinePort"))
if mibBuilder.loadTexts: awnSysLineEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysLineEntry.setDescription('Entry')
awnSysLineUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysLineUnit.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysLineUnit.setDescription('LS unit number')
awnSysLineCard = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysLineCard.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysLineCard.setDescription('LS card number')
awnSysLinePort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysLinePort.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysLinePort.setDescription('LS port number')
awnSysLineChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 4, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(384, 384)).setFixedLength(384)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysLineChannel.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysLineChannel.setDescription('Channel status')
awnSysLineMegalink = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 4, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysLineMegalink.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysLineMegalink.setDescription('Megalink status')
awnSysError = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 5))
awnSysErrorLog = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 5, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysErrorLog.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysErrorLog.setDescription('Error logging')
awnSysChannel = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 6))
awnSysChannelTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 6, 1), )
if mibBuilder.loadTexts: awnSysChannelTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysChannelTable.setDescription('Table')
awnSysChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 6, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysChannelUnit"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysChannelCard"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysChannelPort"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysChannelTimeslot"))
if mibBuilder.loadTexts: awnSysChannelEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysChannelEntry.setDescription('Entry')
awnSysChannelUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysChannelUnit.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysChannelUnit.setDescription('LS unit number')
awnSysChannelCard = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysChannelCard.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysChannelCard.setDescription('LS card number')
awnSysChannelPort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysChannelPort.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysChannelPort.setDescription('LS port number')
awnSysChannelTimeslot = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysChannelTimeslot.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysChannelTimeslot.setDescription('TS number')
awnSysChannelBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 6, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(576, 576)).setFixedLength(576)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysChannelBackup.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysChannelBackup.setDescription('Backup status(part 1)')
awnSysChannelBackup2 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 6, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(512, 512)).setFixedLength(512)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysChannelBackup2.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysChannelBackup2.setDescription('Backup status(part 2)')
awnSysEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 7))
awnSysEventTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 7, 1), )
if mibBuilder.loadTexts: awnSysEventTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysEventTable.setDescription('Table')
awnSysEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 7, 1, 1), )
if mibBuilder.loadTexts: awnSysEventEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysEventEntry.setDescription('Entry')
awnSysEventThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 7, 1, 1, 1), DisplayString())
if mibBuilder.loadTexts: awnSysEventThreshold.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysEventThreshold.setDescription('Threshold alarm')
awnSysPort = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 8))
awnSysPortTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 8, 1), )
if mibBuilder.loadTexts: awnSysPortTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysPortTable.setDescription('Table')
awnSysPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 8, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysPortSlot"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysPortAdapter"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysPortPort"))
if mibBuilder.loadTexts: awnSysPortEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysPortEntry.setDescription('Entry')
awnSysPortSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysPortSlot.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysPortSlot.setDescription('COM port number')
awnSysPortAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysPortAdapter.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysPortAdapter.setDescription('COM adapter number')
awnSysPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysPortPort.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysPortPort.setDescription('COM port number')
awnSysPortMegalink = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 8, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(244, 244)).setFixedLength(244)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysPortMegalink.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysPortMegalink.setDescription('Megalink status(part 1)')
awnSysPortMegalink2 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 8, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysPortMegalink2.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysPortMegalink2.setDescription('Megalink status(part 2)')
awnSysConnComVcc = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 9))
awnSysConnComVccTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 9, 1), )
if mibBuilder.loadTexts: awnSysConnComVccTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysConnComVccTable.setDescription('Table')
awnSysConnComVccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 9, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysConnComVccSlot"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysConnComVccAdapter"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysConnComVccPort"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysConnComVccVpi"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysConnComVccVci"))
if mibBuilder.loadTexts: awnSysConnComVccEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysConnComVccEntry.setDescription('Entry')
awnSysConnComVccSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysConnComVccSlot.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysConnComVccSlot.setDescription('COM slot number')
awnSysConnComVccAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysConnComVccAdapter.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysConnComVccAdapter.setDescription('COM adapter number')
awnSysConnComVccPort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysConnComVccPort.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysConnComVccPort.setDescription('COM port number')
awnSysConnComVccVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysConnComVccVpi.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysConnComVccVpi.setDescription('VPI')
awnSysConnComVccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysConnComVccVci.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysConnComVccVci.setDescription('VCI')
awnSysConnComVccState = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 9, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(100, 100)).setFixedLength(100)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysConnComVccState.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysConnComVccState.setDescription('State')
awnSysConnLsVcc = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 10))
awnSysConnLsVccTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 10, 1), )
if mibBuilder.loadTexts: awnSysConnLsVccTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysConnLsVccTable.setDescription('Table')
awnSysConnLsVccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 10, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysConnLsVccSlot"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysConnLsVccUnit"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysConnLsVccCard"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysConnLsVccPort"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysConnLsVccTimeslot"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysConnLsVccVpi"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnSysConnLsVccVci"))
if mibBuilder.loadTexts: awnSysConnLsVccEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysConnLsVccEntry.setDescription('Entry')
awnSysConnLsVccUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysConnLsVccUnit.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysConnLsVccUnit.setDescription('LS unit number')
awnSysConnLSVccCard = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysConnLSVccCard.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysConnLSVccCard.setDescription('LS card number')
awnSysConnLsVccPort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysConnLsVccPort.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysConnLsVccPort.setDescription('LS port number')
awnSysConnLsVccTimeslot = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysConnLsVccTimeslot.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysConnLsVccTimeslot.setDescription('Timeslot number')
awnSysConnLsVccVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysConnLsVccVpi.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysConnLsVccVpi.setDescription('VPI')
awnSysConnLsVccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysConnLsVccVci.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysConnLsVccVci.setDescription('VCI')
awnSysConnLsVccState = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 10, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(100, 100)).setFixedLength(100)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnSysConnLsVccState.setStatus('mandatory')
if mibBuilder.loadTexts: awnSysConnLsVccState.setDescription('State')
awnSysBackIpAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 1, 11))
awnStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2))
awnStatisticsSw = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 1))
awnStatisticsSwport = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4))
if mibBuilder.loadTexts: awnStatisticsSwport.setStatus('obsolete')
if mibBuilder.loadTexts: awnStatisticsSwport.setDescription('Not supported')
awnStatisticsLine = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 2))
awnStatisticsLineTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 2, 1), )
if mibBuilder.loadTexts: awnStatisticsLineTable.setStatus('obsolete')
if mibBuilder.loadTexts: awnStatisticsLineTable.setDescription('Table')
awnStatisticsLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 2, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLineUnit"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLineCard"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLinePort"))
if mibBuilder.loadTexts: awnStatisticsLineEntry.setStatus('obsolete')
if mibBuilder.loadTexts: awnStatisticsLineEntry.setDescription('Entry')
awnStatisticsLineUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLineUnit.setStatus('obsolete')
if mibBuilder.loadTexts: awnStatisticsLineUnit.setDescription('LS unit number')
awnStatisticsLineCard = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLineCard.setStatus('obsolete')
if mibBuilder.loadTexts: awnStatisticsLineCard.setDescription('LS card number')
awnStatisticsLinePort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLinePort.setStatus('obsolete')
if mibBuilder.loadTexts: awnStatisticsLinePort.setDescription('LS port number')
awnStatisticsLinePriWan = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(24, 24)).setFixedLength(24)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLinePriWan.setStatus('obsolete')
if mibBuilder.loadTexts: awnStatisticsLinePriWan.setDescription('PRI-WAN statistics')
awnStatisticsLineSriWan = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 2, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(24, 24)).setFixedLength(24))
if mibBuilder.loadTexts: awnStatisticsLineSriWan.setStatus('obsolete')
if mibBuilder.loadTexts: awnStatisticsLineSriWan.setDescription('Not supported')
awnStatisticsLineBriWan = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 2, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(24, 24)).setFixedLength(24)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLineBriWan.setStatus('obsolete')
if mibBuilder.loadTexts: awnStatisticsLineBriWan.setDescription('Statistics of BRI-WAN')
awnStatisticsComLine = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 3))
awnStatisticsComLineTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 3, 1), )
if mibBuilder.loadTexts: awnStatisticsComLineTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComLineTable.setDescription('Table')
awnStatisticsComLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 3, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComLineSlot"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComLineAdapter"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComLinePort"))
if mibBuilder.loadTexts: awnStatisticsComLineEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComLineEntry.setDescription('Entry')
awnStatisticsComLineSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComLineSlot.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComLineSlot.setDescription('COM slot number')
awnStatisticsComLineAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComLineAdapter.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComLineAdapter.setDescription('COM adapter number')
awnStatisticsComLinePort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComLinePort.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComLinePort.setDescription('COM port number')
awnStatisticsComLineAtm = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 3, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(132, 132)).setFixedLength(132)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComLineAtm.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComLineAtm.setDescription('Statictics of ATM')
awnStatisticsComLan = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 3, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(264, 264)).setFixedLength(264)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComLan.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComLan.setDescription('Statictics of LAN')
awnStatisticsLsLine = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4))
awnStatisticsLsLineTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1), )
if mibBuilder.loadTexts: awnStatisticsLsLineTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineTable.setDescription('Table')
awnStatisticsLsLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsLineUnit"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsLineCard"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsLinePort"))
if mibBuilder.loadTexts: awnStatisticsLsLineEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineEntry.setDescription('Entry')
awnStatisticsLsLineUnit = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineUnit.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineUnit.setDescription('LS unit number')
awnStatisticsLsLineCard = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineCard.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineCard.setDescription('LS card number')
awnStatisticsLsLinePort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLinePort.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLinePort.setDescription('LS port number')
awnStatisticsLsLinePriWan = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(504, 504)).setFixedLength(504)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLinePriWan.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLinePriWan.setDescription('Statictics of PRI-WAN')
awnStatisticsLsLineBriWan = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(120, 120)).setFixedLength(120)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineBriWan.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineBriWan.setDescription('Statictics of BRI-WAN')
awnStatisticsLsLinePriBup = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(120, 120)).setFixedLength(120)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLinePriBup.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLinePriBup.setDescription('Statictics of PRI-BUP')
awnStatisticsLsLineFrclad = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(504, 504)).setFixedLength(504)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineFrclad.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineFrclad.setDescription('Statictics of FR-CLAD(part 1)')
awnStatisticsLsLineFrclad2 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(584, 584)).setFixedLength(584)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineFrclad2.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineFrclad2.setDescription('Statictics of FR-CLAD(part 2)')
awnStatisticsLsLineFrclad3 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(584, 584)).setFixedLength(584)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineFrclad3.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineFrclad3.setDescription('Statictics of FR-CLAD(part 3)')
awnStatisticsLsLineLineDif = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineLineDif.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineLineDif.setDescription('Statictics of DIF1(D-CLAD)')
awnStatisticsLsLineDifFrclad = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(160, 160)).setFixedLength(160)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineDifFrclad.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineDifFrclad.setDescription('Statictics of DIF1/DIF2(FR-CLAD)')
awnStatisticsLsLinePriCes = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(328, 328)).setFixedLength(328)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLinePriCes.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLinePriCes.setDescription('Statictics of PRI-CES')
awnStatisticsLsLineDtkCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(724, 724)).setFixedLength(724)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineDtkCodec.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineDtkCodec.setDescription('Statictics of DTK(CODEC)')
awnStatisticsLsLineDtkDclad = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(600, 600)).setFixedLength(600)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineDtkDclad.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineDtkDclad.setDescription('Statictics of DTK(D-CLAD)(part 1)')
awnStatisticsLsLineDtkDclad2 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(352, 352)).setFixedLength(352)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineDtkDclad2.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineDtkDclad2.setDescription('Statictics of DTK(D-CLAD)(part 2)')
awnStatisticsLsLineOdtCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(124, 124)).setFixedLength(124)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineOdtCodec.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineOdtCodec.setDescription('Statictics of ODT(CODEC)')
awnStatisticsLsLineOdtDclad = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineOdtDclad.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineOdtDclad.setDescription('Statictics of ODT(D-CLAD)')
awnStatisticsLsLineSriCes = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(112, 112)).setFixedLength(112)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineSriCes.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineSriCes.setDescription('Statictics of ODT(D-CLAD)')
awnStatisticsLsLineBriBup = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(120, 120)).setFixedLength(120)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineBriBup.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineBriBup.setDescription('Statictics of BRI-BUP')
awnStatisticsLsLineLrcrad = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(124, 124)).setFixedLength(124)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineLrcrad.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineLrcrad.setDescription('Statictics of LR-CLAD')
awnStatisticsLsLine45Mwan = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(152, 152)).setFixedLength(152)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLine45Mwan.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLine45Mwan.setDescription('Statictics of 45M-WAN')
awnStatisticsLsLineOdtCodecS = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 22), OctetString().subtype(subtypeSpec=ValueSizeConstraint(144, 144)).setFixedLength(144)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineOdtCodecS.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineOdtCodecS.setDescription('Statictics of ODT(CODEC)+signal')
awnStatisticsLsLinePriWan24 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(500, 500)).setFixedLength(500)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLinePriWan24.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLinePriWan24.setDescription('Statictics of PRI-WAN24')
awnStatisticsLsLineFfclad24a = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 24), OctetString().subtype(subtypeSpec=ValueSizeConstraint(496, 496)).setFixedLength(496)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineFfclad24a.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineFfclad24a.setDescription('Statictics of FF-CLAD24(part 1)')
awnStatisticsLsLineFfclad24b = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(584, 584)).setFixedLength(584)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineFfclad24b.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineFfclad24b.setDescription('Statictics of FF-CLAD24(part 2)')
awnStatisticsLsLineFfclad24c = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 26), OctetString().subtype(subtypeSpec=ValueSizeConstraint(588, 588)).setFixedLength(588)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineFfclad24c.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineFfclad24c.setDescription('Statictics of FF-CLAD24(part 3)')
awnStatisticsLsLineVxaWan = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 27), OctetString().subtype(subtypeSpec=ValueSizeConstraint(116, 116)).setFixedLength(116)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineVxaWan.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineVxaWan.setDescription('Statictics of VXA-WAN')
awnStatisticsLsLineBriClad = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 4, 1, 1, 28), OctetString().subtype(subtypeSpec=ValueSizeConstraint(160, 160)).setFixedLength(160)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsLineBriClad.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsLineBriClad.setDescription('Statictics of BRI-CLAD')
awnStatisticsComNniPort = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 5))
awnStatisticsComNniPortTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 5, 1), )
if mibBuilder.loadTexts: awnStatisticsComNniPortTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniPortTable.setDescription('Table')
awnStatisticsComNniPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 5, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComNniPortSlot"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComNniPortAdapter"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComNniPortPort"))
if mibBuilder.loadTexts: awnStatisticsComNniPortEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniPortEntry.setDescription('Entry')
awnStatisticsComNniPortSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniPortSlot.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniPortSlot.setDescription('COM slot number')
awnStatisticsComNniPortAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniPortAdapter.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniPortAdapter.setDescription('COM adapter number')
awnStatisticsComNniPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniPortPort.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniPortPort.setDescription('COM port number')
awnStatisticsComNniPortData = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 5, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(456, 456)).setFixedLength(456)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniPortData.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniPortData.setDescription('Data')
awnStatisticsComNniVp = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 6))
awnStatisticsComNniVpTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 6, 1), )
if mibBuilder.loadTexts: awnStatisticsComNniVpTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniVpTable.setDescription('Table')
awnStatisticsComNniVpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 6, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComNniVpSlot"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComNniVpAdapter"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComNniVpPort"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComNniVpVpi"))
if mibBuilder.loadTexts: awnStatisticsComNniVpEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniVpEntry.setDescription('Entry')
awnStatisticsComNniVpSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniVpSlot.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniVpSlot.setDescription('COM slot number')
awnStatisticsComNniVpAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniVpAdapter.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniVpAdapter.setDescription('COM adapter number')
awnStatisticsComNniVpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniVpPort.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniVpPort.setDescription('COM port number')
awnStatisticsComNniVpVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniVpVpi.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniVpVpi.setDescription('VPI')
awnStatisticsComNniVptData = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 6, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(456, 456)).setFixedLength(456)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniVptData.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniVptData.setDescription('Data')
awnStatisticsLsWanTs = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 7))
awnStatisticsLsWanTsTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 7, 1), )
if mibBuilder.loadTexts: awnStatisticsLsWanTsTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanTsTable.setDescription('Table')
awnStatisticsLsWanTsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 7, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanTsUnit"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanTsCard"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanTsPort"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanTsTs"))
if mibBuilder.loadTexts: awnStatisticsLsWanTsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanTsEntry.setDescription('Entry')
awnStatisticsLsWanTsUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanTsUnit.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanTsUnit.setDescription('LS unit number')
awnStatisticsLsWanTsCard = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanTsCard.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanTsCard.setDescription('LS card number')
awnStatisticsLsWanTsPort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanTsPort.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanTsPort.setDescription('LS port number')
awnStatisticsLsWanTsTs = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanTsTs.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanTsTs.setDescription('TS number')
awnStatisticsLsWanTsData = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 7, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(456, 456)).setFixedLength(456)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanTsData.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanTsData.setDescription('Data')
awnStatisticsComNniPortRt = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 8))
awnStatisticsComNniPortRtTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 8, 1), )
if mibBuilder.loadTexts: awnStatisticsComNniPortRtTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniPortRtTable.setDescription('Table')
awnStatisticsComNniPortRtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 8, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComNniPortRtSlot"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComNniPortRtAdapter"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComNniPortRtPort"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComNniPortRtCategory"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComNniPortRtType"))
if mibBuilder.loadTexts: awnStatisticsComNniPortRtEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniPortRtEntry.setDescription('Entry')
awnStatisticsComNniPortRtSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniPortRtSlot.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniPortRtSlot.setDescription('Com slot number')
awnStatisticsComNniPortRtAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniPortRtAdapter.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniPortRtAdapter.setDescription('COM adapter number')
awnStatisticsComNniPortRtPort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniPortRtPort.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniPortRtPort.setDescription('COM port number')
awnStatisticsComNniPortRtCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniPortRtCategory.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniPortRtCategory.setDescription('Category')
awnStatisticsComNniPortRtType = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 8, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniPortRtType.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniPortRtType.setDescription('Type')
awnStatisticsComNniPortRtData = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 8, 1, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniPortRtData.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniPortRtData.setDescription('Data')
awnStatisticsComNniVpRt = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 9))
awnStatisticsComNniVpRtTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 9, 1), )
if mibBuilder.loadTexts: awnStatisticsComNniVpRtTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniVpRtTable.setDescription('Table')
awnStatisticsComNniVpRtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 9, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComNniVpRtSlot"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComNniVpRtAdapter"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComNniVpRtPort"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComNniVpRtVpi"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComNniVpRtCategory"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComNniVpRtType"))
if mibBuilder.loadTexts: awnStatisticsComNniVpRtEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniVpRtEntry.setDescription('Entry')
awnStatisticsComNniVpRtSlot = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniVpRtSlot.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniVpRtSlot.setDescription('Com slot number')
awnStatisticsComNniVpRtAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniVpRtAdapter.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniVpRtAdapter.setDescription('COM adapter number')
awnStatisticsComNniVpRtPort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniVpRtPort.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniVpRtPort.setDescription('COM port number')
awnStatisticsComNniVpRtVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniVpRtVpi.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniVpRtVpi.setDescription('VPI')
awnStatisticsComNniVpRtCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniVpRtCategory.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniVpRtCategory.setDescription('Category')
awnStatisticsComNniVpRtType = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 9, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniVpRtType.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniVpRtType.setDescription('Type')
awnStatisticsComNniVpRtData = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 9, 1, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComNniVpRtData.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComNniVpRtData.setDescription('Data')
awnStatisticsLsWanTsRt = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 10))
awnStatisticsLsWanTsRtTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 10, 1), )
if mibBuilder.loadTexts: awnStatisticsLsWanTsRtTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanTsRtTable.setDescription('Table')
awnStatisticsLsWanTsRtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 10, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanTsRtUnit"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanTsRtCard"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanTsRtPort"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanTsRtTs"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanTsRtCategory"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanTsRtType"))
if mibBuilder.loadTexts: awnStatisticsLsWanTsRtEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanTsRtEntry.setDescription('Entry')
awnStatisticsLsWanTsRtUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanTsRtUnit.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanTsRtUnit.setDescription('LS unit number')
awnStatisticsLsWanTsRtCard = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanTsRtCard.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanTsRtCard.setDescription('LS card number')
awnStatisticsLsWanTsRtPort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanTsRtPort.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanTsRtPort.setDescription('LS port number')
awnStatisticsLsWanTsRtTs = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanTsRtTs.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanTsRtTs.setDescription('TS number')
awnStatisticsLsWanTsRtCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanTsRtCategory.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanTsRtCategory.setDescription('Category')
awnStatisticsLsWanTsRtType = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanTsRtType.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanTsRtType.setDescription('Type')
awnStatisticsLsWanTsRtData = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 10, 1, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanTsRtData.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanTsRtData.setDescription('Data')
awnStatisticsVccAtmLine = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 11))
awnStatisticsVccAtmLineTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 11, 1), )
if mibBuilder.loadTexts: awnStatisticsVccAtmLineTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccAtmLineTable.setDescription('Table')
awnStatisticsVccAtmLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 11, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccAtmLineSlot"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccAtmLineAdapter"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccAtmLinePort"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccAtmLineVpi"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccAtmLineVci"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccAtmLineType"))
if mibBuilder.loadTexts: awnStatisticsVccAtmLineEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccAtmLineEntry.setDescription('Entry')
awnStatisticsVccAtmLineSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccAtmLineSlot.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccAtmLineSlot.setDescription('Com slot number')
awnStatisticsVccAtmLineAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccAtmLineAdapter.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccAtmLineAdapter.setDescription('COM adapter number')
awnStatisticsVccAtmLinePort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 11, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccAtmLinePort.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccAtmLinePort.setDescription('COM port number')
awnStatisticsVccAtmLineVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 11, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccAtmLineVpi.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccAtmLineVpi.setDescription('VPI')
awnStatisticsVccAtmLineVci = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 11, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccAtmLineVci.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccAtmLineVci.setDescription('VCI')
awnStatisticsVccAtmLineType = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 11, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccAtmLineType.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccAtmLineType.setDescription('Type')
awnStatisticsVccAtmLineData = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 11, 1, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccAtmLineData.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccAtmLineData.setDescription('Data')
awnStatisticsVpcAtmLine = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 12))
awnStatisticsVpcAtmLineTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 12, 1), )
if mibBuilder.loadTexts: awnStatisticsVpcAtmLineTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVpcAtmLineTable.setDescription('Table')
awnStatisticsVpcAtmLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 12, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVpcAtmLineSlot"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVpcAtmLineAdapter"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVpcAtmLinePort"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVpcAtmLineVpi"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVpcAtmLineType"))
if mibBuilder.loadTexts: awnStatisticsVpcAtmLineEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVpcAtmLineEntry.setDescription('Entry')
awnStatisticsVpcAtmLineSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVpcAtmLineSlot.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVpcAtmLineSlot.setDescription('Com slot number')
awnStatisticsVpcAtmLineAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 12, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVpcAtmLineAdapter.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVpcAtmLineAdapter.setDescription('COM adapter number')
awnStatisticsVpcAtmLinePort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVpcAtmLinePort.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVpcAtmLinePort.setDescription('COM port number')
awnStatisticsVpcAtmLineVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVpcAtmLineVpi.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVpcAtmLineVpi.setDescription('VPI')
awnStatisticsVpcAtmLineType = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVpcAtmLineType.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVpcAtmLineType.setDescription('Type')
awnStatisticsVpcAtmLineData = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 12, 1, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVpcAtmLineData.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVpcAtmLineData.setDescription('Data')
awnStatisticsVccWanTs = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 13))
awnStatisticsVccWanTsTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 13, 1), )
if mibBuilder.loadTexts: awnStatisticsVccWanTsTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccWanTsTable.setDescription('Table')
awnStatisticsVccWanTsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 13, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccWanTsUnit"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccWanTsCard"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccWanTsPort"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccWanTsTs"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccWanTsVpi"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccWanTsVci"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccWanTsType"))
if mibBuilder.loadTexts: awnStatisticsVccWanTsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccWanTsEntry.setDescription('Entry')
awnStatisticsVccWanTsUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccWanTsUnit.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccWanTsUnit.setDescription('LS unit number')
awnStatisticsVccWanTsCard = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 13, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccWanTsCard.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccWanTsCard.setDescription('LS card number')
awnStatisticsVccWanTsPort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 13, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccWanTsPort.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccWanTsPort.setDescription('LS port number')
awnStatisticsVccWanTsTs = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 13, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccWanTsTs.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccWanTsTs.setDescription('LS TS number')
awnStatisticsVccWanTsVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 13, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccWanTsVpi.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccWanTsVpi.setDescription('VPI')
awnStatisticsVccWanTsVci = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 13, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccWanTsVci.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccWanTsVci.setDescription('VCI')
awnStatisticsVccWanTsType = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 13, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccWanTsType.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccWanTsType.setDescription('Type')
awnStatisticsVccWanTsData = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 13, 1, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccWanTsData.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccWanTsData.setDescription('Data')
awnStatisticsVccFrLine = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 14))
awnStatisticsVccFrLineTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 14, 1), )
if mibBuilder.loadTexts: awnStatisticsVccFrLineTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccFrLineTable.setDescription('Table')
awnStatisticsVccFrLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 14, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccFrLineUnit"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccFrLineCard"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccFrLinePort"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccFrLineTimeslot"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccFrLineDlci"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccFrLineType"))
if mibBuilder.loadTexts: awnStatisticsVccFrLineEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccFrLineEntry.setDescription('Entry')
awnStatisticsVccFrLineUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccFrLineUnit.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccFrLineUnit.setDescription('LS unit number')
awnStatisticsVccFrLineCard = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 14, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccFrLineCard.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccFrLineCard.setDescription('LS card number')
awnStatisticsVccFrLinePort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 14, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccFrLinePort.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccFrLinePort.setDescription('LS port number')
awnStatisticsVccFrLineTimeslot = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 14, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccFrLineTimeslot.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccFrLineTimeslot.setDescription('Timeslot number')
awnStatisticsVccFrLineDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 14, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1022))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccFrLineDlci.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccFrLineDlci.setDescription('DLCI')
awnStatisticsVccFrLineType = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 14, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccFrLineType.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccFrLineType.setDescription('Type')
awnStatisticsVccFrLineData = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 14, 1, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccFrLineData.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccFrLineData.setDescription('Data')
awnStatisticsVccFfLine = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 15))
awnStatisticsVccFfLineTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 15, 1), )
if mibBuilder.loadTexts: awnStatisticsVccFfLineTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccFfLineTable.setDescription('Table')
awnStatisticsVccFfLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 15, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccFfLineUnit"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccFfLineCard"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccFfLinePort"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccFfLineTimeslot"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsVccFfLineType"))
if mibBuilder.loadTexts: awnStatisticsVccFfLineEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccFfLineEntry.setDescription('Entry')
awnStatisticsVccFfLineUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 15, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccFfLineUnit.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccFfLineUnit.setDescription('LS unit number')
awnStatisticsVccFfLineCard = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 15, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccFfLineCard.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccFfLineCard.setDescription('LS card number')
awnStatisticsVccFfLinePort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 15, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccFfLinePort.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccFfLinePort.setDescription('LS port number')
awnStatisticsVccFfLineTimeslot = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 15, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccFfLineTimeslot.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccFfLineTimeslot.setDescription('Timeslot number')
awnStatisticsVccFfLineType = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 15, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccFfLineType.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccFfLineType.setDescription('Type')
awnStatisticsVccFfLineData = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 15, 1, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsVccFfLineData.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsVccFfLineData.setDescription('Data')
awnStatisticsLsWanVp = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 16))
awnStatisticsLsWanVpTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 16, 1), )
if mibBuilder.loadTexts: awnStatisticsLsWanVpTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanVpTable.setDescription('Table')
awnStatisticsLsWanVpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 16, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanVpUnit"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanVpCard"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanVpPort"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanVpVpi"))
if mibBuilder.loadTexts: awnStatisticsLsWanVpEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanVpEntry.setDescription('Entry')
awnStatisticsLsWanVpUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 16, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanVpUnit.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanVpUnit.setDescription('LS unit number')
awnStatisticsLsWanVpCard = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 16, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanVpCard.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanVpCard.setDescription('LS card number')
awnStatisticsLsWanVpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 16, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanVpPort.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanVpPort.setDescription('LS port number')
awnStatisticsLsWanVpVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 16, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanVpVpi.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanVpVpi.setDescription('VPI')
awnStatisticsLsWanVpData = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 16, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(456, 456)).setFixedLength(456)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanVpData.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanVpData.setDescription('Data')
awnStatisticsLsWanVpRt = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 17))
awnStatisticsLsWanVpRtTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 17, 1), )
if mibBuilder.loadTexts: awnStatisticsLsWanVpRtTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanVpRtTable.setDescription('Table')
awnStatisticsLsWanVpRtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 17, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanVpRtUnit"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanVpRtCard"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanVpRtPort"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanVpRtVpi"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanVpRtCategory"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsWanVpRtType"))
if mibBuilder.loadTexts: awnStatisticsLsWanVpRtEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanVpRtEntry.setDescription('Entry')
awnStatisticsLsWanVpRtUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 17, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanVpRtUnit.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanVpRtUnit.setDescription('LS unit number')
awnStatisticsLsWanVpRtCard = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 17, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanVpRtCard.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanVpRtCard.setDescription('LS card number')
awnStatisticsLsWanVpRtPort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 17, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanVpRtPort.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanVpRtPort.setDescription('LS port number')
awnStatisticsLsWanVpRtVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 17, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanVpRtVpi.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanVpRtVpi.setDescription('VPI')
awnStatisticsLsWanVpRtCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 17, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanVpRtCategory.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanVpRtCategory.setDescription('Category')
awnStatisticsLsWanVpRtType = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 17, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanVpRtType.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanVpRtType.setDescription('Type')
awnStatisticsLsWanVpRtData = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 17, 1, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsWanVpRtData.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsWanVpRtData.setDescription('Data')
awnStatisticsComAtmLine = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 18))
awnStatisticsComAtmLineTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 18, 1), )
if mibBuilder.loadTexts: awnStatisticsComAtmLineTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComAtmLineTable.setDescription('Table')
awnStatisticsComAtmLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 18, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComAtmLineSlot"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComAtmLineAdapter"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComAtmLinePort"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsComAtmLineVpi"))
if mibBuilder.loadTexts: awnStatisticsComAtmLineEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComAtmLineEntry.setDescription('Entry')
awnStatisticsComAtmLineSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 18, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComAtmLineSlot.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComAtmLineSlot.setDescription('Com slot number')
awnStatisticsComAtmLineAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 18, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComAtmLineAdapter.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComAtmLineAdapter.setDescription('COM adapter number')
awnStatisticsComAtmLinePort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 18, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComAtmLinePort.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComAtmLinePort.setDescription('COM port number')
awnStatisticsComAtmLineVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 18, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComAtmLineVpi.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComAtmLineVpi.setDescription('VPI')
awnStatisticsComAtmLineData = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 18, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(104, 104)).setFixedLength(104)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsComAtmLineData.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsComAtmLineData.setDescription('Data')
awnStatisticsLsTs = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 19))
awnStatisticsLsTsTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 19, 1), )
if mibBuilder.loadTexts: awnStatisticsLsTsTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsTsTable.setDescription('Table')
awnStatisticsLsTsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 19, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsTsUnit"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsTsCard"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsTsPort"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsLsTsTs"))
if mibBuilder.loadTexts: awnStatisticsLsTsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsTsEntry.setDescription('Entry')
awnStatisticsLsTsUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 19, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsTsUnit.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsTsUnit.setDescription('LS unit number')
awnStatisticsLsTsCard = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 19, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsTsCard.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsTsCard.setDescription('LS card number')
awnStatisticsLsTsPort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 19, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsTsPort.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsTsPort.setDescription('LS port number')
awnStatisticsLsTsTs = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 19, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsTsTs.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsTsTs.setDescription('LS port number')
awnStatisticsLsTsData = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 19, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(104, 104)).setFixedLength(104)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsLsTsData.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsLsTsData.setDescription('Data')
awnStatisticsSys = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 20))
awnStatisticsSysDroppedCells = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 20, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(100, 100)).setFixedLength(100)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsSysDroppedCells.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsSysDroppedCells.setDescription('Data')
awnStatisticsIpFrame = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 21))
awnStatisticsIpFrameTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 21, 1), )
if mibBuilder.loadTexts: awnStatisticsIpFrameTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsIpFrameTable.setDescription('Table')
awnStatisticsIpFrameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 21, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsIpFrameAddr"))
if mibBuilder.loadTexts: awnStatisticsIpFrameEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsIpFrameEntry.setDescription('Entry')
awnStatisticsIpFrameAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 21, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsIpFrameAddr.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsIpFrameAddr.setDescription('IP Address')
awnStatisticsIpFrameData = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 21, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(108, 108)).setFixedLength(108)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsIpFrameData.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsIpFrameData.setDescription('Data')
awnStatisticsDlci = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 22))
awnStatisticsDlciTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 22, 1), )
if mibBuilder.loadTexts: awnStatisticsDlciTable.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsDlciTable.setDescription('Table')
awnStatisticsDlciEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 22, 1, 1), ).setIndexNames((0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsDlciUnit"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsDlciCard"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsDlciPort"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsDlciTimeslot"), (0, "FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", "awnStatisticsDlciDlci"))
if mibBuilder.loadTexts: awnStatisticsDlciEntry.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsDlciEntry.setDescription('Entry')
awnStatisticsDlciUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 22, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsDlciUnit.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsDlciUnit.setDescription('LS unit number')
awnStatisticsDlciCard = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 22, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsDlciCard.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsDlciCard.setDescription('LS card number')
awnStatisticsDlciPort = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 22, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsDlciPort.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsDlciPort.setDescription('LS port number')
awnStatisticsDlciTimeslot = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 22, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsDlciTimeslot.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsDlciTimeslot.setDescription('Timeslot number')
awnStatisticsDlciDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 22, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1022))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsDlciDlci.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsDlciDlci.setDescription('DLCI')
awnStatisticsDlciBriClad = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 2, 22, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(168, 168)).setFixedLength(168)).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnStatisticsDlciBriClad.setStatus('mandatory')
if mibBuilder.loadTexts: awnStatisticsDlciBriClad.setDescription('BRI-CLAD Data')
awnIlmi = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 3))
awnIlmiIns = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 3, 1))
awnIlmiInsRouteadd = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnIlmiInsRouteadd.setStatus('mandatory')
if mibBuilder.loadTexts: awnIlmiInsRouteadd.setDescription('Routeadd')
awnIlmiInsRoutedel = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 127, 29, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awnIlmiInsRoutedel.setStatus('mandatory')
if mibBuilder.loadTexts: awnIlmiInsRoutedel.setDescription('Routedel')
mibBuilder.exportSymbols("FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", awnSystem=awnSystem, awnStatisticsVccWanTsPort=awnStatisticsVccWanTsPort, awnStatisticsLsLineEntry=awnStatisticsLsLineEntry, awnStatisticsComNniPortPort=awnStatisticsComNniPortPort, awnStatisticsComNniVpEntry=awnStatisticsComNniVpEntry, awnStatisticsComLinePort=awnStatisticsComLinePort, awnStatisticsLsLineBriWan=awnStatisticsLsLineBriWan, awnStatisticsVccAtmLineData=awnStatisticsVccAtmLineData, awnStatisticsVccAtmLineEntry=awnStatisticsVccAtmLineEntry, awnStatisticsLsWanVpRtCategory=awnStatisticsLsWanVpRtCategory, awnStatisticsComNniVpRtPort=awnStatisticsComNniVpRtPort, awnSysConnLSVccCard=awnSysConnLSVccCard, awnSysLsDevice2=awnSysLsDevice2, awnSysConnLsVccVci=awnSysConnLsVccVci, awnStatisticsVccFrLineTable=awnStatisticsVccFrLineTable, awnStatisticsLsTsUnit=awnStatisticsLsTsUnit, awnStatisticsLsWanVpPort=awnStatisticsLsWanVpPort, awnStatisticsIpFrameEntry=awnStatisticsIpFrameEntry, awnSysConnComVccSlot=awnSysConnComVccSlot, awnStatisticsLsWanTsRtCategory=awnStatisticsLsWanTsRtCategory, awnStatisticsComNniPortTable=awnStatisticsComNniPortTable, awnStatisticsComNniPortRtTable=awnStatisticsComNniPortRtTable, awnStatisticsLsLineDifFrclad=awnStatisticsLsLineDifFrclad, awnStatisticsComNniVpRtEntry=awnStatisticsComNniVpRtEntry, awnStatisticsSw=awnStatisticsSw, awnStatisticsVpcAtmLineAdapter=awnStatisticsVpcAtmLineAdapter, awnStatisticsVccFrLineEntry=awnStatisticsVccFrLineEntry, awnStatisticsLsWanVpRtUnit=awnStatisticsLsWanVpRtUnit, awnSysNodeClk=awnSysNodeClk, awnSysPortEntry=awnSysPortEntry, awnStatisticsLsLinePriWan24=awnStatisticsLsLinePriWan24, awnStatisticsComNniPortRt=awnStatisticsComNniPortRt, awnStatisticsVccFfLineTimeslot=awnStatisticsVccFfLineTimeslot, awnSysNode=awnSysNode, awnSysNodeInformation=awnSysNodeInformation, awnStatisticsLsWanVpRt=awnStatisticsLsWanVpRt, awnStatisticsLsLine45Mwan=awnStatisticsLsLine45Mwan, awnStatisticsLineUnit=awnStatisticsLineUnit, awnStatisticsVccFrLine=awnStatisticsVccFrLine, awnStatisticsComNniVptData=awnStatisticsComNniVptData, awnStatisticsLineSriWan=awnStatisticsLineSriWan, awnStatisticsLsLineFrclad=awnStatisticsLsLineFrclad, awnStatisticsLsLineOdtDclad=awnStatisticsLsLineOdtDclad, awnSysPortMegalink2=awnSysPortMegalink2, awnStatisticsLinePort=awnStatisticsLinePort, awnSysLineChannel=awnSysLineChannel, awnStatisticsLsLinePriCes=awnStatisticsLsLinePriCes, awnStatisticsComNniVpRtSlot=awnStatisticsComNniVpRtSlot, awnStatisticsVccFfLineType=awnStatisticsVccFfLineType, awnSysLinePort=awnSysLinePort, awnStatisticsComNniPortSlot=awnStatisticsComNniPortSlot, awnStatisticsComNniPortEntry=awnStatisticsComNniPortEntry, awnStatisticsComNniPortData=awnStatisticsComNniPortData, awnStatisticsComLineSlot=awnStatisticsComLineSlot, awnStatisticsVccAtmLine=awnStatisticsVccAtmLine, awnStatisticsComNniVpRt=awnStatisticsComNniVpRt, awnIlmiInsRoutedel=awnIlmiInsRoutedel, awnSysLineTable=awnSysLineTable, awnStatisticsLsWanVpRtPort=awnStatisticsLsWanVpRtPort, awnSysLineCard=awnSysLineCard, awnSysLs=awnSysLs, awnSysConnComVcc=awnSysConnComVcc, awnStatistics=awnStatistics, awnStatisticsVccAtmLinePort=awnStatisticsVccAtmLinePort, awnStatisticsLsLineDtkDclad=awnStatisticsLsLineDtkDclad, awnStatisticsLineTable=awnStatisticsLineTable, awnStatisticsLsLinePriBup=awnStatisticsLsLinePriBup, awnStatisticsLsWanTsRtData=awnStatisticsLsWanTsRtData, awnStatisticsComAtmLineTable=awnStatisticsComAtmLineTable, awnSysPortPort=awnSysPortPort, awnStatisticsLsWanVpVpi=awnStatisticsLsWanVpVpi, awnStatisticsLsLineBriBup=awnStatisticsLsLineBriBup, awnStatisticsLsWanVpRtCard=awnStatisticsLsWanVpRtCard, awnSysEventThreshold=awnSysEventThreshold, fujitsu=fujitsu, awnSysLineMegalink=awnSysLineMegalink, awnSysChannel=awnSysChannel, awnStatisticsLsLineFfclad24b=awnStatisticsLsLineFfclad24b, awnSysPortSlot=awnSysPortSlot, awnStatisticsDlciUnit=awnStatisticsDlciUnit, awnStatisticsComAtmLineVpi=awnStatisticsComAtmLineVpi, awnStatisticsLsWanVpRtTable=awnStatisticsLsWanVpRtTable, nonos=nonos, awnStatisticsLsWanTsRtTs=awnStatisticsLsWanTsRtTs, awnSysErrorLog=awnSysErrorLog, awnStatisticsVccFfLineData=awnStatisticsVccFfLineData, awnStatisticsLsWanVpUnit=awnStatisticsLsWanVpUnit, awnStatisticsLsLineFrclad3=awnStatisticsLsLineFrclad3, awnStatisticsVccAtmLineAdapter=awnStatisticsVccAtmLineAdapter, awnStatisticsVccFrLinePort=awnStatisticsVccFrLinePort, awnSysLsDevice=awnSysLsDevice, awnSysConnComVccVpi=awnSysConnComVccVpi, awnSysConnLsVccTimeslot=awnSysConnLsVccTimeslot, awnStatisticsLsLineFfclad24a=awnStatisticsLsLineFfclad24a, awnStatisticsComNniVpTable=awnStatisticsComNniVpTable, awnStatisticsComNniVpRtVpi=awnStatisticsComNniVpRtVpi, awnSysLine=awnSysLine, awnSysConnComVccTable=awnSysConnComVccTable, awnStatisticsComAtmLine=awnStatisticsComAtmLine, awnStatisticsIpFrameAddr=awnStatisticsIpFrameAddr, awnStatisticsComNniPortAdapter=awnStatisticsComNniPortAdapter, product=product, awnStatisticsLsWanVp=awnStatisticsLsWanVp, awnSysConnLsVccEntry=awnSysConnLsVccEntry, awn=awn, awnSysConnLsVccUnit=awnSysConnLsVccUnit, awnStatisticsLineBriWan=awnStatisticsLineBriWan, awnStatisticsComNniVp=awnStatisticsComNniVp, awnStatisticsVccAtmLineTable=awnStatisticsVccAtmLineTable, awnSysPort=awnSysPort, awnStatisticsVccWanTsCard=awnStatisticsVccWanTsCard, awnStatisticsVccFfLineCard=awnStatisticsVccFfLineCard, awnSysLsEntry=awnSysLsEntry, awnStatisticsIpFrameData=awnStatisticsIpFrameData, awnStatisticsComNniVpVpi=awnStatisticsComNniVpVpi, awnStatisticsLsWanTs=awnStatisticsLsWanTs, awnStatisticsVpcAtmLineType=awnStatisticsVpcAtmLineType, awnStatisticsVccFrLineData=awnStatisticsVccFrLineData, awnStatisticsVccWanTsVci=awnStatisticsVccWanTsVci, awnStatisticsLsLineCard=awnStatisticsLsLineCard, awnSysConnComVccAdapter=awnSysConnComVccAdapter, awnStatisticsLsWanTsCard=awnStatisticsLsWanTsCard, awnSysChannelEntry=awnSysChannelEntry, awnSysLineEntry=awnSysLineEntry, awnIlmi=awnIlmi, awnStatisticsComNniVpPort=awnStatisticsComNniVpPort, awnSysConnLsVccTable=awnSysConnLsVccTable, awnStatisticsLsLineTable=awnStatisticsLsLineTable, awnStatisticsComNniPortRtData=awnStatisticsComNniPortRtData, awnStatisticsVccWanTsVpi=awnStatisticsVccWanTsVpi, awnStatisticsLsTsData=awnStatisticsLsTsData, awnStatisticsVccAtmLineVpi=awnStatisticsVccAtmLineVpi, awnStatisticsLsWanVpRtType=awnStatisticsLsWanVpRtType, awnStatisticsComAtmLineData=awnStatisticsComAtmLineData, awnStatisticsComNniPortRtPort=awnStatisticsComNniPortRtPort, awnStatisticsVccFrLineDlci=awnStatisticsVccFrLineDlci, awnStatisticsVccWanTsTable=awnStatisticsVccWanTsTable, awnStatisticsLsLine=awnStatisticsLsLine, awnStatisticsVccWanTsUnit=awnStatisticsVccWanTsUnit, awnStatisticsDlciBriClad=awnStatisticsDlciBriClad, awnStatisticsLsLineDtkCodec=awnStatisticsLsLineDtkCodec, awnStatisticsLsWanTsTable=awnStatisticsLsWanTsTable, awnStatisticsLsWanVpEntry=awnStatisticsLsWanVpEntry, awnStatisticsLsLineFrclad2=awnStatisticsLsLineFrclad2, awnStatisticsLsWanVpRtVpi=awnStatisticsLsWanVpRtVpi, awnStatisticsVccFrLineUnit=awnStatisticsVccFrLineUnit, awnStatisticsSysDroppedCells=awnStatisticsSysDroppedCells, awnStatisticsLsWanTsTs=awnStatisticsLsWanTsTs, awnStatisticsDlciEntry=awnStatisticsDlciEntry, awnStatisticsDlciDlci=awnStatisticsDlciDlci, awnSysError=awnSysError, awnStatisticsLsLineBriClad=awnStatisticsLsLineBriClad, awnSysComDevice=awnSysComDevice, awnStatisticsLsLineSriCes=awnStatisticsLsLineSriCes, awnSysLsPort2=awnSysLsPort2, awnStatisticsLsWanTsRtType=awnStatisticsLsWanTsRtType, awnSysPortTable=awnSysPortTable, awnSysLsUnit=awnSysLsUnit, awnStatisticsDlci=awnStatisticsDlci, awnStatisticsVccWanTsType=awnStatisticsVccWanTsType, awnIlmiInsRouteadd=awnIlmiInsRouteadd, awnSysConnLsVccVpi=awnSysConnLsVccVpi, awnStatisticsComNniPortRtSlot=awnStatisticsComNniPortRtSlot, awnStatisticsLsLineLrcrad=awnStatisticsLsLineLrcrad, awnSysChannelUnit=awnSysChannelUnit, awnSysBackIpAddr=awnSysBackIpAddr, awnSysCom=awnSysCom, awnSysEvent=awnSysEvent, awnStatisticsComAtmLineAdapter=awnStatisticsComAtmLineAdapter, awnStatisticsVccFfLine=awnStatisticsVccFfLine, awnSysConnComVccPort=awnSysConnComVccPort, awnStatisticsComNniVpRtTable=awnStatisticsComNniVpRtTable, awnStatisticsSwport=awnStatisticsSwport, awnSysConnComVccVci=awnSysConnComVccVci, awnStatisticsDlciTimeslot=awnStatisticsDlciTimeslot, awnStatisticsVccWanTs=awnStatisticsVccWanTs, awnStatisticsVccWanTsTs=awnStatisticsVccWanTsTs, awnStatisticsVccWanTsEntry=awnStatisticsVccWanTsEntry, awnStatisticsLsWanTsRt=awnStatisticsLsWanTsRt, awnStatisticsLsTs=awnStatisticsLsTs, awnSysLsPort=awnSysLsPort, awnSysChannelTimeslot=awnSysChannelTimeslot, awnStatisticsLsTsTs=awnStatisticsLsTsTs, awnSysChannelCard=awnSysChannelCard, awnStatisticsVccFrLineTimeslot=awnStatisticsVccFrLineTimeslot, awnSysConnLsVccPort=awnSysConnLsVccPort, awnStatisticsComNniVpAdapter=awnStatisticsComNniVpAdapter, awnStatisticsDlciPort=awnStatisticsDlciPort, awnStatisticsComLine=awnStatisticsComLine, awnStatisticsLsTsPort=awnStatisticsLsTsPort, awnStatisticsVccFfLinePort=awnStatisticsVccFfLinePort, awnSysPortMegalink=awnSysPortMegalink, awnStatisticsComNniVpSlot=awnStatisticsComNniVpSlot, awnStatisticsVccFfLineEntry=awnStatisticsVccFfLineEntry, awnSysComPort=awnSysComPort, awnStatisticsLsWanTsRtCard=awnStatisticsLsWanTsRtCard, awnSysComDevice2=awnSysComDevice2, awnStatisticsLsWanTsRtUnit=awnStatisticsLsWanTsRtUnit, awnStatisticsLsLineOdtCodecS=awnStatisticsLsLineOdtCodecS, awnStatisticsVccAtmLineVci=awnStatisticsVccAtmLineVci, awnStatisticsLsWanTsData=awnStatisticsLsWanTsData, awnStatisticsLsTsEntry=awnStatisticsLsTsEntry, awnIlmiIns=awnIlmiIns, awnSysNodeCommonStatus=awnSysNodeCommonStatus, awnStatisticsLsWanVpCard=awnStatisticsLsWanVpCard, awnStatisticsSys=awnStatisticsSys, awnStatisticsVccFfLineTable=awnStatisticsVccFfLineTable, awnSysComPort2=awnSysComPort2, awnStatisticsComNniVpRtData=awnStatisticsComNniVpRtData, awnStatisticsLsLineFfclad24c=awnStatisticsLsLineFfclad24c, awnSysConnLsVcc=awnSysConnLsVcc, awnStatisticsComNniVpRtType=awnStatisticsComNniVpRtType, awnStatisticsLsWanTsRtTable=awnStatisticsLsWanTsRtTable, awnStatisticsVccFrLineCard=awnStatisticsVccFrLineCard, awnStatisticsComAtmLinePort=awnStatisticsComAtmLinePort, awnStatisticsIpFrame=awnStatisticsIpFrame, awnSysLineUnit=awnSysLineUnit, awnSysChannelTable=awnSysChannelTable, awnSysConnComVccState=awnSysConnComVccState, awnStatisticsLsWanTsEntry=awnStatisticsLsWanTsEntry, awnStatisticsVccAtmLineType=awnStatisticsVccAtmLineType, awnSysConnLsVccState=awnSysConnLsVccState, awnStatisticsComLineAdapter=awnStatisticsComLineAdapter, awnStatisticsLineCard=awnStatisticsLineCard, awnStatisticsComNniPortRtEntry=awnStatisticsComNniPortRtEntry, awnStatisticsLsLineUnit=awnStatisticsLsLineUnit, awnStatisticsComLineEntry=awnStatisticsComLineEntry, awnSysChannelBackup=awnSysChannelBackup, awnStatisticsLsTsTable=awnStatisticsLsTsTable, awnSysChannelPort=awnSysChannelPort, awnSysEventEntry=awnSysEventEntry, awnSysChannelBackup2=awnSysChannelBackup2, awnStatisticsLsLineLineDif=awnStatisticsLsLineLineDif, awnStatisticsLsLineDtkDclad2=awnStatisticsLsLineDtkDclad2, awnStatisticsLsWanTsPort=awnStatisticsLsWanTsPort, awnStatisticsLsWanVpRtData=awnStatisticsLsWanVpRtData, awnStatisticsLsWanVpData=awnStatisticsLsWanVpData, awnStatisticsDlciTable=awnStatisticsDlciTable, awnSysPortAdapter=awnSysPortAdapter, awnStatisticsIpFrameTable=awnStatisticsIpFrameTable, awnStatisticsDlciCard=awnStatisticsDlciCard, awnSysConnComVccEntry=awnSysConnComVccEntry, awnStatisticsLsTsCard=awnStatisticsLsTsCard, awnStatisticsLsWanTsUnit=awnStatisticsLsWanTsUnit, awnStatisticsVpcAtmLine=awnStatisticsVpcAtmLine, awnStatisticsVpcAtmLineData=awnStatisticsVpcAtmLineData, awnSysLsTable=awnSysLsTable, awnStatisticsLsWanVpRtEntry=awnStatisticsLsWanVpRtEntry, awnStatisticsLsLineVxaWan=awnStatisticsLsLineVxaWan, awnStatisticsComNniVpRtCategory=awnStatisticsComNniVpRtCategory, awnStatisticsVccFrLineType=awnStatisticsVccFrLineType, awnStatisticsComNniPortRtCategory=awnStatisticsComNniPortRtCategory, awnStatisticsVpcAtmLineEntry=awnStatisticsVpcAtmLineEntry, awnStatisticsComLineAtm=awnStatisticsComLineAtm)
mibBuilder.exportSymbols("FUJITSU-EXTENDED-NONOS-AWN-MIB-V06", awnStatisticsComNniPortRtAdapter=awnStatisticsComNniPortRtAdapter, awnStatisticsComNniPortRtType=awnStatisticsComNniPortRtType, awnStatisticsVpcAtmLinePort=awnStatisticsVpcAtmLinePort, awnStatisticsLineEntry=awnStatisticsLineEntry, awnStatisticsComLineTable=awnStatisticsComLineTable, awnStatisticsLine=awnStatisticsLine, awnStatisticsComNniVpRtAdapter=awnStatisticsComNniVpRtAdapter, awnStatisticsLsWanVpTable=awnStatisticsLsWanVpTable, awnStatisticsLsLinePort=awnStatisticsLsLinePort, awnStatisticsLsLineOdtCodec=awnStatisticsLsLineOdtCodec, awnStatisticsVpcAtmLineTable=awnStatisticsVpcAtmLineTable, awnStatisticsVpcAtmLineVpi=awnStatisticsVpcAtmLineVpi, awnStatisticsLinePriWan=awnStatisticsLinePriWan, awnStatisticsComAtmLineEntry=awnStatisticsComAtmLineEntry, awnStatisticsVpcAtmLineSlot=awnStatisticsVpcAtmLineSlot, awnStatisticsVccFfLineUnit=awnStatisticsVccFfLineUnit, awnStatisticsLsWanTsRtPort=awnStatisticsLsWanTsRtPort, awnStatisticsLsWanTsRtEntry=awnStatisticsLsWanTsRtEntry, awnStatisticsVccWanTsData=awnStatisticsVccWanTsData, awnStatisticsComLan=awnStatisticsComLan, awnStatisticsComAtmLineSlot=awnStatisticsComAtmLineSlot, awnStatisticsComNniPort=awnStatisticsComNniPort, awnSysEventTable=awnSysEventTable, awnStatisticsVccAtmLineSlot=awnStatisticsVccAtmLineSlot, awnStatisticsLsLinePriWan=awnStatisticsLsLinePriWan)
