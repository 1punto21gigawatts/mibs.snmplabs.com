#
# PySNMP MIB module JUNIPER-MOBILE-GATEWAY-EXAMPLE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-MOBILE-GATEWAY-EXAMPLE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:00:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
InetPortNumber, InetAddressType, InetAddress, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetAddressType", "InetAddress", "InetAddressPrefixLength")
Ipv6AddressIfIdentifier, Ipv6Address, Ipv6AddressPrefix = mibBuilder.importSymbols("IPV6-TC", "Ipv6AddressIfIdentifier", "Ipv6Address", "Ipv6AddressPrefix")
jnxExampleMibRoot, = mibBuilder.importSymbols("JUNIPER-EXPERIMENT-MIB", "jnxExampleMibRoot")
EnabledStatus, = mibBuilder.importSymbols("JUNIPER-MIMSTP-MIB", "EnabledStatus")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, ObjectIdentity, Unsigned32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Integer32, MibIdentifier, Counter32, Gauge32, Bits, TimeTicks, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "Unsigned32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Integer32", "MibIdentifier", "Counter32", "Gauge32", "Bits", "TimeTicks", "IpAddress", "Counter64")
DisplayString, RowStatus, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TruthValue")
jnxMobileGatewayExampleMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2))
jnxMobileGatewayExampleMib.setRevisions(('2010-11-22 12:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: jnxMobileGatewayExampleMib.setRevisionsDescriptions(('Initial version',))
if mibBuilder.loadTexts: jnxMobileGatewayExampleMib.setLastUpdated('201011221200Z')
if mibBuilder.loadTexts: jnxMobileGatewayExampleMib.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: jnxMobileGatewayExampleMib.setContactInfo('Juniper Technical Assistance Center Juniper Networks, Inc. 1194 N. Mathilda Avenue Sunnyvale, CA 94089 E-mail: support@juniper.net')
if mibBuilder.loadTexts: jnxMobileGatewayExampleMib.setDescription('This module defines some sample objects pertaining to Mobile-Edge Services.')
jnxMobileGatewayExampleObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1))
jnxMobileGatewayExampleNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 2))
jnxMobileGatewayExampleSyncStats = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1, 1))
jnxMobileGatewayExampleAsyncStats = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1, 2))
jnxMobileGatewayProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1, 3), )
if mibBuilder.loadTexts: jnxMobileGatewayProfileTable.setStatus('current')
if mibBuilder.loadTexts: jnxMobileGatewayProfileTable.setDescription('The table listing Mobile Gateway Test Profiles, key is Profile Name.')
jnxMobileGatewayExampleNotificationVars = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1, 4))
jnxMobileGatewayTotalRequests = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMobileGatewayTotalRequests.setStatus('current')
if mibBuilder.loadTexts: jnxMobileGatewayTotalRequests.setDescription('Total requests made.')
jnxMobileGatewayTotalAccepts = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMobileGatewayTotalAccepts.setStatus('current')
if mibBuilder.loadTexts: jnxMobileGatewayTotalAccepts.setDescription('Total requests that were accepted.')
jnxMobileGatewayTotalRejects = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMobileGatewayTotalRejects.setStatus('current')
if mibBuilder.loadTexts: jnxMobileGatewayTotalRejects.setDescription('Total requests that were rejected.')
jnxMobileGatewayTotalChallenges = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMobileGatewayTotalChallenges.setStatus('current')
if mibBuilder.loadTexts: jnxMobileGatewayTotalChallenges.setDescription('Total challenges received.')
jnxMobileGatewayTotalRequestTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMobileGatewayTotalRequestTimeouts.setStatus('current')
if mibBuilder.loadTexts: jnxMobileGatewayTotalRequestTimeouts.setDescription('Total requests that timed out.')
jnxMobileGatewayTotalRequestTxErrors = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMobileGatewayTotalRequestTxErrors.setStatus('current')
if mibBuilder.loadTexts: jnxMobileGatewayTotalRequestTxErrors.setDescription('Total requests transmit errors.')
jnxMobileGatewayTotalResponseErrors = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMobileGatewayTotalResponseErrors.setStatus('current')
if mibBuilder.loadTexts: jnxMobileGatewayTotalResponseErrors.setDescription('Total response errors.')
jnxMobileGatewayTotalPendingRequests = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMobileGatewayTotalPendingRequests.setStatus('current')
if mibBuilder.loadTexts: jnxMobileGatewayTotalPendingRequests.setDescription('Total pending requests.')
jnxMobileGatewayProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1, 3, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAY-EXAMPLE-MIB", "jnxMobileGatewayProfileName"))
if mibBuilder.loadTexts: jnxMobileGatewayProfileEntry.setStatus('current')
if mibBuilder.loadTexts: jnxMobileGatewayProfileEntry.setDescription('An entry representing a Mobile Gateway Test Profile.')
jnxMobileGatewayProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1, 3, 1, 1), DisplayString())
if mibBuilder.loadTexts: jnxMobileGatewayProfileName.setStatus('current')
if mibBuilder.loadTexts: jnxMobileGatewayProfileName.setDescription('A string that uniquely identifies the Test Profile.')
jnxMobileGatewayProfileDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMobileGatewayProfileDescription.setStatus('current')
if mibBuilder.loadTexts: jnxMobileGatewayProfileDescription.setDescription('A string that describes the Test Profile.')
jnxMobileGatewayProfileType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMobileGatewayProfileType.setStatus('current')
if mibBuilder.loadTexts: jnxMobileGatewayProfileType.setDescription('Test Profile Type.')
jnxMobileGatewayExampleServerName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1, 4, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMobileGatewayExampleServerName.setStatus('current')
if mibBuilder.loadTexts: jnxMobileGatewayExampleServerName.setDescription('The name identifies an external server (charging,AAA,etc) on mobile-gateway.')
jnxMobileGatewayExampleServicePicName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1, 4, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMobileGatewayExampleServicePicName.setStatus('current')
if mibBuilder.loadTexts: jnxMobileGatewayExampleServicePicName.setDescription('This identifies the session-pic, in the form ms-a/b/0, where <a> is the slot and <b> could be either 0 or 1.')
jnxMobileGatewayExampleServerState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 1, 4, 3), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMobileGatewayExampleServerState.setStatus('current')
if mibBuilder.loadTexts: jnxMobileGatewayExampleServerState.setDescription('This indicates whether the server status is Up or Down')
jnxMobileGatewayExampleServerStatus = NotificationType((1, 3, 6, 1, 4, 1, 2636, 5, 5, 2, 2, 1)).setObjects(("JUNIPER-MOBILE-GATEWAY-EXAMPLE-MIB", "jnxMobileGatewayExampleServerName"), ("JUNIPER-MOBILE-GATEWAY-EXAMPLE-MIB", "jnxMobileGatewayExampleServicePicName"), ("JUNIPER-MOBILE-GATEWAY-EXAMPLE-MIB", "jnxMobileGatewayExampleServerState"))
if mibBuilder.loadTexts: jnxMobileGatewayExampleServerStatus.setStatus('current')
if mibBuilder.loadTexts: jnxMobileGatewayExampleServerStatus.setDescription('This notification signifies that the specified server has changed state. The ServerName identifies the server, the ServicePicName identifies the session-pic that originated this notification and ServerState indicates whether server came up or went down.')
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-EXAMPLE-MIB", jnxMobileGatewayTotalPendingRequests=jnxMobileGatewayTotalPendingRequests, jnxMobileGatewayTotalChallenges=jnxMobileGatewayTotalChallenges, jnxMobileGatewayProfileTable=jnxMobileGatewayProfileTable, jnxMobileGatewayTotalResponseErrors=jnxMobileGatewayTotalResponseErrors, jnxMobileGatewayExampleMib=jnxMobileGatewayExampleMib, jnxMobileGatewayProfileDescription=jnxMobileGatewayProfileDescription, jnxMobileGatewayTotalRequestTimeouts=jnxMobileGatewayTotalRequestTimeouts, jnxMobileGatewayExampleAsyncStats=jnxMobileGatewayExampleAsyncStats, jnxMobileGatewayTotalRequests=jnxMobileGatewayTotalRequests, jnxMobileGatewayExampleServicePicName=jnxMobileGatewayExampleServicePicName, jnxMobileGatewayExampleServerState=jnxMobileGatewayExampleServerState, jnxMobileGatewayTotalRejects=jnxMobileGatewayTotalRejects, jnxMobileGatewayTotalAccepts=jnxMobileGatewayTotalAccepts, jnxMobileGatewayExampleServerName=jnxMobileGatewayExampleServerName, jnxMobileGatewayExampleServerStatus=jnxMobileGatewayExampleServerStatus, PYSNMP_MODULE_ID=jnxMobileGatewayExampleMib, jnxMobileGatewayExampleNotificationVars=jnxMobileGatewayExampleNotificationVars, jnxMobileGatewayProfileType=jnxMobileGatewayProfileType, jnxMobileGatewayProfileName=jnxMobileGatewayProfileName, jnxMobileGatewayExampleObjects=jnxMobileGatewayExampleObjects, jnxMobileGatewayTotalRequestTxErrors=jnxMobileGatewayTotalRequestTxErrors, jnxMobileGatewayProfileEntry=jnxMobileGatewayProfileEntry, jnxMobileGatewayExampleSyncStats=jnxMobileGatewayExampleSyncStats, jnxMobileGatewayExampleNotifications=jnxMobileGatewayExampleNotifications)
