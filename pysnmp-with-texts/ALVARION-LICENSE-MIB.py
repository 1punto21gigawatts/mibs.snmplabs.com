#
# PySNMP MIB module ALVARION-LICENSE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALVARION-LICENSE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:22:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
alvarionMgmtV2, = mibBuilder.importSymbols("ALVARION-SMI", "alvarionMgmtV2")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Unsigned32, Bits, ObjectIdentity, TimeTicks, iso, Counter32, MibIdentifier, Gauge32, ModuleIdentity, IpAddress, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Bits", "ObjectIdentity", "TimeTicks", "iso", "Counter32", "MibIdentifier", "Gauge32", "ModuleIdentity", "IpAddress", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
alvarionLicenseMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 29))
if mibBuilder.loadTexts: alvarionLicenseMIB.setLastUpdated('200710310000Z')
if mibBuilder.loadTexts: alvarionLicenseMIB.setOrganization('Alvarion Ltd.')
if mibBuilder.loadTexts: alvarionLicenseMIB.setContactInfo('Alvarion Ltd. Postal: 21a HaBarzel St. P.O. Box 13139 Tel-Aviv 69710 Israel Phone: +972 3 645 6262')
if mibBuilder.loadTexts: alvarionLicenseMIB.setDescription('Alvarion Licensing Information MIB.')
alvarionLicenseMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 29, 1))
coLicenseGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 29, 1, 1))
coLicenseFeatureTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 29, 1, 1, 1), )
if mibBuilder.loadTexts: coLicenseFeatureTable.setStatus('current')
if mibBuilder.loadTexts: coLicenseFeatureTable.setDescription('License information attributes.')
coLicenseFeatureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 29, 1, 1, 1, 1), ).setIndexNames((0, "ALVARION-LICENSE-MIB", "coLicenseFeatureIndex"))
if mibBuilder.loadTexts: coLicenseFeatureEntry.setStatus('current')
if mibBuilder.loadTexts: coLicenseFeatureEntry.setDescription('An entry in the coLicenseFeatureTable. coLicenseFeatureIndex - Uniquely identify a license feature in a Alvarion product.')
coLicenseFeatureIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 29, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: coLicenseFeatureIndex.setStatus('current')
if mibBuilder.loadTexts: coLicenseFeatureIndex.setDescription('Uniquely identify a license feature in a Alvarion product.')
coLicenseFeatureName = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 29, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coLicenseFeatureName.setStatus('current')
if mibBuilder.loadTexts: coLicenseFeatureName.setDescription('Friendly name of the license feature.')
coLicenseFeatureState = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 29, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coLicenseFeatureState.setStatus('current')
if mibBuilder.loadTexts: coLicenseFeatureState.setDescription('Indicates if the feature is enabled or disabled.')
coLicenseFeatureEndingDate = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 29, 1, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: coLicenseFeatureEndingDate.setStatus('current')
if mibBuilder.loadTexts: coLicenseFeatureEndingDate.setDescription('Indicates the date when the feature will be deactivated. The format of the date is YYYY/MM/DD.')
coLicenseFeatureRemainingDays = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 29, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coLicenseFeatureRemainingDays.setStatus('current')
if mibBuilder.loadTexts: coLicenseFeatureRemainingDays.setDescription('Indicates the number of days when the feature will be deactivated. If the feature is permanent, the value 9999 is returned.')
alvarionLicenseMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 29, 2))
alvarionLicenseMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 29, 2, 1))
alvarionLicenseMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 29, 2, 2))
alvarionLicenseMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 29, 2, 1, 1)).setObjects(("ALVARION-LICENSE-MIB", "alvarionLicenseMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionLicenseMIBCompliance = alvarionLicenseMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: alvarionLicenseMIBCompliance.setDescription('The compliance statement for the License Information MIB.')
alvarionLicenseMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 29, 2, 2, 1)).setObjects(("ALVARION-LICENSE-MIB", "coLicenseFeatureName"), ("ALVARION-LICENSE-MIB", "coLicenseFeatureState"), ("ALVARION-LICENSE-MIB", "coLicenseFeatureEndingDate"), ("ALVARION-LICENSE-MIB", "coLicenseFeatureRemainingDays"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionLicenseMIBGroup = alvarionLicenseMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionLicenseMIBGroup.setDescription('A collection of objects for the license information status.')
mibBuilder.exportSymbols("ALVARION-LICENSE-MIB", coLicenseFeatureRemainingDays=coLicenseFeatureRemainingDays, alvarionLicenseMIBConformance=alvarionLicenseMIBConformance, alvarionLicenseMIBCompliances=alvarionLicenseMIBCompliances, coLicenseFeatureState=coLicenseFeatureState, coLicenseFeatureEntry=coLicenseFeatureEntry, coLicenseFeatureIndex=coLicenseFeatureIndex, coLicenseFeatureName=coLicenseFeatureName, alvarionLicenseMIBGroup=alvarionLicenseMIBGroup, alvarionLicenseMIBCompliance=alvarionLicenseMIBCompliance, coLicenseGroup=coLicenseGroup, alvarionLicenseMIBObjects=alvarionLicenseMIBObjects, coLicenseFeatureEndingDate=coLicenseFeatureEndingDate, PYSNMP_MODULE_ID=alvarionLicenseMIB, alvarionLicenseMIB=alvarionLicenseMIB, alvarionLicenseMIBGroups=alvarionLicenseMIBGroups, coLicenseFeatureTable=coLicenseFeatureTable)
