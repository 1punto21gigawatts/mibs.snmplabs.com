#
# PySNMP MIB module ASCEND-MIBPRROUTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBPRROUTE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:28:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Counter64, NotificationType, IpAddress, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, iso, MibIdentifier, Bits, TimeTicks, Counter32, Unsigned32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter64", "NotificationType", "IpAddress", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "iso", "MibIdentifier", "Bits", "TimeTicks", "Counter32", "Unsigned32", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DisplayString(OctetString):
    pass

mibprivateRouteTableProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 103))
mibprivateRouteTableProfileTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 103, 1), )
if mibBuilder.loadTexts: mibprivateRouteTableProfileTable.setStatus('mandatory')
if mibBuilder.loadTexts: mibprivateRouteTableProfileTable.setDescription('A list of mibprivateRouteTableProfile profile entries.')
mibprivateRouteTableProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 103, 1, 1), ).setIndexNames((0, "ASCEND-MIBPRROUTE-MIB", "privateRouteTableProfile-Name"))
if mibBuilder.loadTexts: mibprivateRouteTableProfileEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mibprivateRouteTableProfileEntry.setDescription('A mibprivateRouteTableProfile entry containing objects that maps to the parameters of mibprivateRouteTableProfile profile.')
privateRouteTableProfile_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 103, 1, 1, 1), DisplayString()).setLabel("privateRouteTableProfile-Name").setMaxAccess("readonly")
if mibBuilder.loadTexts: privateRouteTableProfile_Name.setStatus('mandatory')
if mibBuilder.loadTexts: privateRouteTableProfile_Name.setDescription('The name of this route table profile.')
privateRouteTableProfile_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 103, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("privateRouteTableProfile-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: privateRouteTableProfile_Action_o.setStatus('mandatory')
if mibBuilder.loadTexts: privateRouteTableProfile_Action_o.setDescription('')
mibprivateRouteTableProfile_RouteDescriptionListTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 103, 2), ).setLabel("mibprivateRouteTableProfile-RouteDescriptionListTable")
if mibBuilder.loadTexts: mibprivateRouteTableProfile_RouteDescriptionListTable.setStatus('mandatory')
if mibBuilder.loadTexts: mibprivateRouteTableProfile_RouteDescriptionListTable.setDescription('A list of mibprivateRouteTableProfile__route_description_list profile entries.')
mibprivateRouteTableProfile_RouteDescriptionListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 103, 2, 1), ).setLabel("mibprivateRouteTableProfile-RouteDescriptionListEntry").setIndexNames((0, "ASCEND-MIBPRROUTE-MIB", "privateRouteTableProfile-RouteDescriptionList-Name"), (0, "ASCEND-MIBPRROUTE-MIB", "privateRouteTableProfile-RouteDescriptionList-Index-o"))
if mibBuilder.loadTexts: mibprivateRouteTableProfile_RouteDescriptionListEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mibprivateRouteTableProfile_RouteDescriptionListEntry.setDescription('A mibprivateRouteTableProfile__route_description_list entry containing objects that maps to the parameters of mibprivateRouteTableProfile__route_description_list profile.')
privateRouteTableProfile_RouteDescriptionList_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 103, 2, 1, 1), DisplayString()).setLabel("privateRouteTableProfile-RouteDescriptionList-Name").setMaxAccess("readonly")
if mibBuilder.loadTexts: privateRouteTableProfile_RouteDescriptionList_Name.setStatus('mandatory')
if mibBuilder.loadTexts: privateRouteTableProfile_RouteDescriptionList_Name.setDescription('')
privateRouteTableProfile_RouteDescriptionList_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 103, 2, 1, 2), Integer32()).setLabel("privateRouteTableProfile-RouteDescriptionList-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: privateRouteTableProfile_RouteDescriptionList_Index_o.setStatus('mandatory')
if mibBuilder.loadTexts: privateRouteTableProfile_RouteDescriptionList_Index_o.setDescription('')
privateRouteTableProfile_RouteDescriptionList_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 103, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("privateRouteTableProfile-RouteDescriptionList-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: privateRouteTableProfile_RouteDescriptionList_Enabled.setStatus('mandatory')
if mibBuilder.loadTexts: privateRouteTableProfile_RouteDescriptionList_Enabled.setDescription('Set yes to enable this route in the routing table.')
privateRouteTableProfile_RouteDescriptionList_DestAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 103, 2, 1, 4), IpAddress()).setLabel("privateRouteTableProfile-RouteDescriptionList-DestAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: privateRouteTableProfile_RouteDescriptionList_DestAddress.setStatus('mandatory')
if mibBuilder.loadTexts: privateRouteTableProfile_RouteDescriptionList_DestAddress.setDescription('The IP address of the destination network or subnet.')
privateRouteTableProfile_RouteDescriptionList_Netmask = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 103, 2, 1, 5), IpAddress()).setLabel("privateRouteTableProfile-RouteDescriptionList-Netmask").setMaxAccess("readwrite")
if mibBuilder.loadTexts: privateRouteTableProfile_RouteDescriptionList_Netmask.setStatus('mandatory')
if mibBuilder.loadTexts: privateRouteTableProfile_RouteDescriptionList_Netmask.setDescription('The netmask to be used for the destination.')
privateRouteTableProfile_RouteDescriptionList_GatewayAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 103, 2, 1, 6), IpAddress()).setLabel("privateRouteTableProfile-RouteDescriptionList-GatewayAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: privateRouteTableProfile_RouteDescriptionList_GatewayAddress.setStatus('mandatory')
if mibBuilder.loadTexts: privateRouteTableProfile_RouteDescriptionList_GatewayAddress.setDescription('The address of the gateway/router for this private route. An address of 0.0.0.0 means use the global routing table for this route.')
privateRouteTableProfile_RouteDescriptionList_Metric = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 103, 2, 1, 7), Integer32()).setLabel("privateRouteTableProfile-RouteDescriptionList-Metric").setMaxAccess("readwrite")
if mibBuilder.loadTexts: privateRouteTableProfile_RouteDescriptionList_Metric.setStatus('mandatory')
if mibBuilder.loadTexts: privateRouteTableProfile_RouteDescriptionList_Metric.setDescription('The number of hops to the named host.')
mibBuilder.exportSymbols("ASCEND-MIBPRROUTE-MIB", mibprivateRouteTableProfileTable=mibprivateRouteTableProfileTable, privateRouteTableProfile_RouteDescriptionList_Metric=privateRouteTableProfile_RouteDescriptionList_Metric, privateRouteTableProfile_RouteDescriptionList_Netmask=privateRouteTableProfile_RouteDescriptionList_Netmask, privateRouteTableProfile_RouteDescriptionList_Name=privateRouteTableProfile_RouteDescriptionList_Name, mibprivateRouteTableProfile_RouteDescriptionListEntry=mibprivateRouteTableProfile_RouteDescriptionListEntry, privateRouteTableProfile_RouteDescriptionList_GatewayAddress=privateRouteTableProfile_RouteDescriptionList_GatewayAddress, privateRouteTableProfile_RouteDescriptionList_DestAddress=privateRouteTableProfile_RouteDescriptionList_DestAddress, DisplayString=DisplayString, privateRouteTableProfile_Name=privateRouteTableProfile_Name, privateRouteTableProfile_RouteDescriptionList_Index_o=privateRouteTableProfile_RouteDescriptionList_Index_o, mibprivateRouteTableProfile=mibprivateRouteTableProfile, mibprivateRouteTableProfile_RouteDescriptionListTable=mibprivateRouteTableProfile_RouteDescriptionListTable, privateRouteTableProfile_RouteDescriptionList_Enabled=privateRouteTableProfile_RouteDescriptionList_Enabled, mibprivateRouteTableProfileEntry=mibprivateRouteTableProfileEntry, privateRouteTableProfile_Action_o=privateRouteTableProfile_Action_o)
