#
# PySNMP MIB module ENTERASYS-SNTP-CLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-SNTP-CLIENT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:04:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, IpAddress, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Unsigned32, ObjectIdentity, Integer32, Counter64, Counter32, MibIdentifier, Bits, Gauge32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "IpAddress", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Unsigned32", "ObjectIdentity", "Integer32", "Counter64", "Counter32", "MibIdentifier", "Bits", "Gauge32", "iso")
RowStatus, TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString", "DateAndTime")
etsysSntpClientMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38))
etsysSntpClientMIB.setRevisions(('2003-11-06 15:15', '2003-06-13 18:09',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: etsysSntpClientMIB.setRevisionsDescriptions(('Corrected the postal code in the CONTACT-INFO clause.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: etsysSntpClientMIB.setLastUpdated('200311061515Z')
if mibBuilder.loadTexts: etsysSntpClientMIB.setOrganization('Enterasys Networks, Inc')
if mibBuilder.loadTexts: etsysSntpClientMIB.setContactInfo('Postal: Enterasys Networks 50 Minuteman Rd. Andover, MA 01810-1008 USA Phone: +1 978 684 1000 E-mail: support@enterasys.com WWW: http://www.enterasys.com')
if mibBuilder.loadTexts: etsysSntpClientMIB.setDescription('This MIB module defines a portion of the SNMP MIB under the Enterasys Networks enterprise OID pertaining to SNTP client configuration and statistical collection.')
class SntpClientOperModes(TextualConvention, Bits):
    reference = 'RFC 2030 - Simple Network Time Protocol (SNTP) Version 4 for IPv4, IPv6 and OSI; Section 2.'
    description = 'A SNTP client may operate in one of several modes. ------------------------------------------------------- -- Any or all of these modes MAY be supported on a -- device. ------------------------------------------------------- disabled - SNTP is not operational. No SNTP requests are sent from the device nor are any received SNTP messages processed. unicast - SNTP operates in a point-to-point fashion. A unicast client sends a request to a designated server at its unicast address and expects a reply from which it can determine the time and, optionally, the round-trip delay and local clock offset relative to the server. multicast - SNTP operates in point-to-multipoint fashion. The SNTP server uses a multicast group address to send unsolicited SNTP messages to clients. The client listens on this address and sends no requests for updates. broadcast - This operates in the same manner as multicast mode but uses an IP local broadcast address instead of a multicast address. The broadcast address is scoped to a single subnet, while a multicast address has Internet wide scope. anycast - SNTP operates in a multipoint-to-point fashion. The SNTP client sends a request to a designated IPv4 or IPv6 local broadcast address or multicast group address. One or more anycast servers reply with their individual unicast addresses. The client binds to the first one received, then continues operation in unicast mode.'
    status = 'current'
    namedValues = NamedValues(("disabled", 0), ("unicast", 1), ("multicast", 2), ("broadcast", 3), ("anycast", 4))

class SntpClientUpdateStatus(TextualConvention, Integer32):
    reference = 'RFC 2030 - Simple Network Time Protocol (SNTP) Version 4 for IPv4, IPv6 and OSI; Section 4.'
    description = "SNTP client status values for directed SNTP requests and processing of unsolicited SNTP messages. These values are appropriate for all operational modes. other - None of the following enumeration values. success - The SNTP operation was successful and the system time was updated. requestTimedOut - A directed SNTP request timed out without receiving a response from the SNTP server. badDateEncoded - The time provided by the SNTP server is not valid. versionNotSupported - The SNTP version supported by the server is not compatible with the version supported by the client. serverUnsychronized - The SNTP server is not synchronized with its peers. This is indicated via the 'leap indicator' field on the SNTP message."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("other", 1), ("success", 2), ("requestTimedOut", 3), ("badDateEncoded", 4), ("versionNotSupported", 5), ("serverUnsychronized", 6))

etsysSntpClientObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1))
etsysSntpClientDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 1))
etsysSntpClientUnicast = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 2))
etsysSntpClientMulticast = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 3))
etsysSntpClientBroadcast = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 4))
etsysSntpClientAnycast = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 5))
etsysSntpClientVersion = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("version1", 1), ("version2", 2), ("version3", 3), ("version4", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSntpClientVersion.setReference('RFC 2030 - Simple Network Time Protocol (SNTP) Version 4 for IPv4, IPv6 and OSI; Section 5.')
if mibBuilder.loadTexts: etsysSntpClientVersion.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientVersion.setDescription('The SNTP version this device supports. As specified in RFC 2030, higher versions are required to be backwards compatible with all lower versions with the exception of version 0.')
etsysSntpClientSupportedMode = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 1, 2), SntpClientOperModes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSntpClientSupportedMode.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientSupportedMode.setDescription('The SNTP client operational modes that this device supports.')
etsysSntpClientMode = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 1, 3), SntpClientOperModes().clone(namedValues=NamedValues(("disabled", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSntpClientMode.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientMode.setDescription('The current operational mode of the SNTP client. A SET of this object will cause the SNTP client to change operational modes. A SET request MUST have only 1 bit set since is not possible to operate in multiple modes simultaneously. SETs of this object are further limited to values supported by the device as specified by etsysSntpClientSupportedMode. Maintaining the value of this object across agent reboots is REQUIRED.')
etsysSntpClientLastUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 1, 4), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8).clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSntpClientLastUpdateTime.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientLastUpdateTime.setDescription("The local date and time that the SNTP client last updated the system time on the device since agent reboot. This time is updated for all non-disabled operational modes of the SNTP client. If the SNTP client has not updated the time then this object MUST return '00000000'H.")
etsysSntpClientLastAttemptTime = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 1, 5), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8).clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSntpClientLastAttemptTime.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientLastAttemptTime.setDescription("The local date and time of the last SNTP request or unsolicited SNTP message for this SNTP client since agent reboot. Essentially, this value is a timestamp for the etsysSntpClientLastAttemptStatus object. When the etsysSntpClientLastAttemptStatus has a value of success(2), this object's value should be equal to the value returned by etsysSntpClientLastUpdateTime. If no SNTP frames have been processed by the SNTP client then this value MUST return '00000000'H. This object is updated for all non-disabled operational modes of the SNTP client.")
etsysSntpClientLastAttemptStatus = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 1, 6), SntpClientUpdateStatus().clone('other')).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSntpClientLastAttemptStatus.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientLastAttemptStatus.setDescription('The status of the last SNTP request or unsolicited SNTP message for this SNTP client since agent reboot. The status is updated for all non-disabled operational modes of the SNTP client.')
etsysSntpClientUnicastPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 2, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16, 16284)).clone(512)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSntpClientUnicastPollInterval.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientUnicastPollInterval.setDescription('The number of seconds between successive SNTP request transmissions. This polling interval is used for directed SNTP requests in unicast(1) operational mode. Maintaining the value of this object across agent reboots is REQUIRED.')
etsysSntpClientUnicastPollTimeout = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 2, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSntpClientUnicastPollTimeout.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientUnicastPollTimeout.setDescription("The number of seconds to wait for a response from a SNTP server before considering the attempt to have 'timed out'. This timeout is used for directed SNTP requests in unicast(1) operational mode. Maintaining the value of this object across agent reboots is REQUIRED.")
etsysSntpClientUnicastPollRetry = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 2, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSntpClientUnicastPollRetry.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientUnicastPollRetry.setDescription('The number of times to retry a request to a SNTP server that has not successfully responded. This retry count is used for directed SNTP requests in unicast(1) operational mode. For example, assume this object has been SET to a value of 2. When the SNTP client queries a given server it will send 1 SNTP request frame. If that original attempt fails, the client will retry up to a maximum of 2 more times before giving up and attempting the next server. Maintaining the value of this object across agent reboots is REQUIRED.')
etsysSntpClientUServerMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 2, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSntpClientUServerMaxEntries.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientUServerMaxEntries.setDescription('The maximum number of server entries that are allowed in the etsysSntpClientUServerTable.')
etsysSntpClientUServerCurrEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 2, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSntpClientUServerCurrEntries.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientUServerCurrEntries.setDescription('The current number of server entries in the etsysSntpClientUServerTable.')
etsysSntpClientUServerTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 2, 6), )
if mibBuilder.loadTexts: etsysSntpClientUServerTable.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientUServerTable.setDescription('A table containing configuration and statistical information for unicast SNTP servers. Each server entry is represented by single conceptual row in this table.')
etsysSntpClientUServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 2, 6, 1), ).setIndexNames((0, "ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientUServerAddrType"), (0, "ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientUServerAddr"))
if mibBuilder.loadTexts: etsysSntpClientUServerEntry.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientUServerEntry.setDescription('Information for a particular unicast SNTP server.')
etsysSntpClientUServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 2, 6, 1, 1), InetAddressType())
if mibBuilder.loadTexts: etsysSntpClientUServerAddrType.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientUServerAddrType.setDescription('This object specifies how etsysSntpClientUServerAddr is encoded. Support for all possible enumerations defined by InetAddressType is NOT REQUIRED.')
etsysSntpClientUServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 2, 6, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: etsysSntpClientUServerAddr.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientUServerAddr.setDescription('The encoded unicast IP address or hostname of a SNTP server. Unicast SNTP requests will be sent to this address. If this address is a DNS hostname, then that hostname SHOULD be resolved into an IP address each time a SNTP request is sent to it.')
etsysSntpClientUServerPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 2, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSntpClientUServerPrecedence.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientUServerPrecedence.setDescription('The precedence that this server has in relation to its peers in the determining the sequence of servers that SNTP requests will be sent to. When the poll interval, as specified by etsysSntpClientUnicastPollInterval, expires the SNTP client on this device will send SNTP requests to the servers listed in this table. The client will continue sending requests to different servers until a successful response is received or all servers are exhausted. This object indicates the order in which to query the servers. A server entry with a precedence of 1 will be queried before a server with a precedence of 2, and so forth. If more than one server has the same precedence then the requesting order will follow the lexicographical ordering of the entries in this table.')
etsysSntpClientUServerLastUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 2, 6, 1, 4), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8).clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSntpClientUServerLastUpdateTime.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientUServerLastUpdateTime.setDescription("The local date and time that the response from this server was used to update the system time on the device since agent reboot. If the SNTP client has not updated the time using a response from this server then this object MUST return '00000000'H.")
etsysSntpClientUServerLastAttemptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 2, 6, 1, 5), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8).clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSntpClientUServerLastAttemptTime.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientUServerLastAttemptTime.setDescription("The local date and time that this SNTP server was last queried since agent reboot. Essentially, this value is a timestamp for the etsysSntpClientUServerLastAttemptStatus object. If this server has not been queried then this object MUST return '00000000'H.")
etsysSntpClientUServerLastAttemptStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 2, 6, 1, 6), SntpClientUpdateStatus().clone('other')).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSntpClientUServerLastAttemptStatus.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientUServerLastAttemptStatus.setDescription("The status of the last SNTP request to this server since agent reboot. If no requests have been made then this object should return 'other'.")
etsysSntpClientUServerNumRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 2, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSntpClientUServerNumRequests.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientUServerNumRequests.setDescription('The number of SNTP requests made to this server since the last agent reboot. This includes retry attempts to the server.')
etsysSntpClientUServerNumFailedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 2, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSntpClientUServerNumFailedRequests.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientUServerNumFailedRequests.setDescription('The number of SNTP requests made to this server that did not result in a successful response since the last agent reboot. This includes retry attempts to the server.')
etsysSntpClientUServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 2, 6, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysSntpClientUServerStatus.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientUServerStatus.setDescription('The row status of this conceptual row in the table. active - The server is available for use in SNTP client operations. Other writable leaves in this table MAY be modified while the row is in the active state. notInService - The entry is fully configured but is not available for use in SNTP client operations. Conceptual rows with this status MAY be deleted at the discretion of the agent, at which time it will be treated as if destroy(6) was SET to this object. createAndGo - This is the preferred mechanism for creating conceptual rows in this table. All writable leaves have default values so createAndGo will always transition a new entry to the active state. destroy - This will remove the conceptual row from the table and make it unavailable for SNTP client operations. This MUST also cause any persistent data related to this row to be removed from the system. Maintaining active(1) entries across agent reboots is REQUIRED.')
etsysSntpClientMulticastDelay = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 3, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 999999)).clone(3000)).setUnits('microseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSntpClientMulticastDelay.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientMulticastDelay.setDescription('The number of microseconds it takes for an unsolicited SNTP multicast message to travel from the SNTP server to the SNTP client. This value is added to the time encoded in the SNTP message to derive the correct system time. Maintaining the value of this object across agent reboots is REQUIRED.')
etsysSntpClientMulticastCount = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSntpClientMulticastCount.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientMulticastCount.setDescription('The number of unsolicited multicast SNTP messages that have been received and processed by the SNTP client. Unsolicited SNTP multicast frames will not be counted unless the SNTP agent is operating in multicast(2) mode, as specified by etsysSntpClientMode. Maintaining the value of this object across agent reboots is NOT RECOMMENDED.')
etsysSntpClientBroadcastDelay = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 4, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 999999)).clone(3000)).setUnits('microseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSntpClientBroadcastDelay.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientBroadcastDelay.setDescription('The number of microseconds it takes for an unsolicited SNTP broadcast message to travel from the SNTP server to the SNTP client. This value is added to the time encoded in the SNTP message to derive the correct time. Maintaining the value of this object across reboots is REQUIRED.')
etsysSntpClientBroadcastCount = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSntpClientBroadcastCount.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientBroadcastCount.setDescription('The number of unsolicited broadcast SNTP messages that have been received and processed by the SNTP client. Unsolicited SNTP broadcast frames will not be counted unless the SNTP agent is operating in broadcast(3) mode, as specified by etsysSntpClientMode. Maintaining the value of this object across agent reboots is NOT RECOMMENDED.')
etsysSntpClientAnycastBindRequestInterval = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 5, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16, 16284)).clone(20)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSntpClientAnycastBindRequestInterval.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientAnycastBindRequestInterval.setDescription('The number of seconds between SNTP anycast bind requests. This polling interval is used when the SNTP client is in anycast(4) operational mode and it is not bound to a SNTP server. Maintaining the value of this object across agent reboots is REQUIRED.')
etsysSntpClientAnycastPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 5, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16, 16284)).clone(512)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSntpClientAnycastPollInterval.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientAnycastPollInterval.setDescription('The number of seconds between SNTP request transmissions. This polling interval is used for directed SNTP requests in anycast(4) operational mode. Maintaining the value of this object across agent reboots is REQUIRED.')
etsysSntpClientAnycastPollTimeout = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 5, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSntpClientAnycastPollTimeout.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientAnycastPollTimeout.setDescription("The number of seconds to wait for a response from a SNTP server before considering the unicast request attempt to have 'timed out'. This timeout is used for directed SNTP requests in anycast(4) operational mode. Maintaining the value of this object across agent reboots is REQUIRED.")
etsysSntpClientAnycastPollRetry = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 5, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSntpClientAnycastPollRetry.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientAnycastPollRetry.setDescription('The number of times to retry a unicast request to a SNTP server that has not successfully responded. This retry count is used for directed SNTP requests in anycast(4) operational mode. For example, assume this object has been SET to a value of 2. When the SNTP client queries the bound server it will send 1 SNTP request frame. If that original attempt fails, the client will retry up to a maximum of 2 more times before giving up and unbinding from the server. Once the client becomes unbound it will start sending out anycast bind requests at an interval specified by etsysSntpClientAnycastBindRequestInterval. Maintaining the value of this object across agent reboots is REQUIRED.')
etsysSntpClientAnycastServerAddrType = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 5, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSntpClientAnycastServerAddrType.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientAnycastServerAddrType.setDescription('This object specifies how etsysSntpClientAnycastServerAddr is encoded. If the SNTP client is not bound to a server this object MUST return unknown(0). Maintaining the value of this object across agent reboots is NOT RECOMMENDED. Support for all possible enumerations defined by InetAddressType is NOT REQUIRED.')
etsysSntpClientAnycastServerAddr = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 5, 6), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSntpClientAnycastServerAddr.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientAnycastServerAddr.setDescription('The encoded unicast IP address or hostname of the SNTP server that we are bound to in anycast mode. If the SNTP client is not bound to a server this object MUST return a zero-length string. Maintaining the value of this object across agent reboots is NOT RECOMMENDED.')
etsysSntpClientAnycastNumRequests = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 5, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSntpClientAnycastNumRequests.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientAnycastNumRequests.setDescription('The number of anycast bind requests sent from this device since the last agent reboot.')
etsysSntpClientAnycastNumPollRequests = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 1, 5, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSntpClientAnycastNumPollRequests.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientAnycastNumPollRequests.setDescription('The number of unicast poll requests sent from this device while in anycast(4) operational mode since the last agent reboot. Unicast poll requests are only sent once the SNTP client has bound to a server. This includes retry attempts to the server.')
etsysSntpClientConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 2))
etsysSntpClientGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 2, 1))
etsysSntpClientCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 2, 2))
etsysSntpClientDeviceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 2, 1, 1)).setObjects(("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientVersion"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientSupportedMode"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientMode"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientLastUpdateTime"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientLastAttemptTime"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientLastAttemptStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSntpClientDeviceGroup = etsysSntpClientDeviceGroup.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientDeviceGroup.setDescription("A collection of objects providing device level control of a SNTP client on Enterasys Network's devices.")
etsysSntpClientUnicastGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 2, 1, 2)).setObjects(("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientUnicastPollInterval"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientUnicastPollTimeout"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientUnicastPollRetry"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientUServerMaxEntries"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientUServerCurrEntries"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientUServerPrecedence"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientUServerLastUpdateTime"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientUServerLastAttemptTime"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientUServerLastAttemptStatus"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientUServerNumRequests"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientUServerNumFailedRequests"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientUServerStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSntpClientUnicastGroup = etsysSntpClientUnicastGroup.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientUnicastGroup.setDescription('A collection of objects providing control and statistics for a SNTP client capable of operating in unicast mode.')
etsysSntpClientMulticastGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 2, 1, 3)).setObjects(("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientMulticastDelay"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientMulticastCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSntpClientMulticastGroup = etsysSntpClientMulticastGroup.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientMulticastGroup.setDescription('A collection of objects providing control and statistics for a SNTP client capable of operating in multicast mode.')
etsysSntpClientBroadcastGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 2, 1, 4)).setObjects(("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientBroadcastDelay"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientBroadcastCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSntpClientBroadcastGroup = etsysSntpClientBroadcastGroup.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientBroadcastGroup.setDescription('A collection of objects providing control and statistics for a SNTP client capable of operating in broadcast mode.')
etsysSntpClientAnycastGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 2, 1, 5)).setObjects(("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientAnycastBindRequestInterval"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientAnycastPollInterval"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientAnycastPollTimeout"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientAnycastPollRetry"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientAnycastServerAddrType"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientAnycastServerAddr"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientAnycastNumRequests"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientAnycastNumPollRequests"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSntpClientAnycastGroup = etsysSntpClientAnycastGroup.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientAnycastGroup.setDescription('A collection of objects providing control and statistics for a SNTP client capable of operating in anycast mode.')
etsysSntpClientCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 38, 2, 2, 1)).setObjects(("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientDeviceGroup"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientUnicastGroup"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientMulticastGroup"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientBroadcastGroup"), ("ENTERASYS-SNTP-CLIENT-MIB", "etsysSntpClientAnycastGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSntpClientCompliance = etsysSntpClientCompliance.setStatus('current')
if mibBuilder.loadTexts: etsysSntpClientCompliance.setDescription('The compliance statement for devices that support etsysSntpClientMIB.')
mibBuilder.exportSymbols("ENTERASYS-SNTP-CLIENT-MIB", etsysSntpClientUServerMaxEntries=etsysSntpClientUServerMaxEntries, etsysSntpClientUServerLastAttemptTime=etsysSntpClientUServerLastAttemptTime, etsysSntpClientBroadcast=etsysSntpClientBroadcast, etsysSntpClientAnycast=etsysSntpClientAnycast, etsysSntpClientAnycastPollTimeout=etsysSntpClientAnycastPollTimeout, etsysSntpClientVersion=etsysSntpClientVersion, etsysSntpClientUnicastPollRetry=etsysSntpClientUnicastPollRetry, etsysSntpClientAnycastNumPollRequests=etsysSntpClientAnycastNumPollRequests, etsysSntpClientMulticastCount=etsysSntpClientMulticastCount, etsysSntpClientMulticast=etsysSntpClientMulticast, etsysSntpClientAnycastBindRequestInterval=etsysSntpClientAnycastBindRequestInterval, etsysSntpClientUServerAddr=etsysSntpClientUServerAddr, etsysSntpClientConformance=etsysSntpClientConformance, etsysSntpClientCompliance=etsysSntpClientCompliance, etsysSntpClientBroadcastGroup=etsysSntpClientBroadcastGroup, etsysSntpClientUServerTable=etsysSntpClientUServerTable, etsysSntpClientLastAttemptStatus=etsysSntpClientLastAttemptStatus, etsysSntpClientUServerCurrEntries=etsysSntpClientUServerCurrEntries, etsysSntpClientUServerPrecedence=etsysSntpClientUServerPrecedence, etsysSntpClientUServerNumFailedRequests=etsysSntpClientUServerNumFailedRequests, etsysSntpClientAnycastServerAddrType=etsysSntpClientAnycastServerAddrType, SntpClientOperModes=SntpClientOperModes, etsysSntpClientBroadcastCount=etsysSntpClientBroadcastCount, etsysSntpClientUServerAddrType=etsysSntpClientUServerAddrType, etsysSntpClientUServerNumRequests=etsysSntpClientUServerNumRequests, etsysSntpClientMulticastDelay=etsysSntpClientMulticastDelay, PYSNMP_MODULE_ID=etsysSntpClientMIB, etsysSntpClientUnicastPollInterval=etsysSntpClientUnicastPollInterval, etsysSntpClientUServerLastUpdateTime=etsysSntpClientUServerLastUpdateTime, etsysSntpClientAnycastNumRequests=etsysSntpClientAnycastNumRequests, etsysSntpClientMulticastGroup=etsysSntpClientMulticastGroup, etsysSntpClientMode=etsysSntpClientMode, etsysSntpClientDeviceGroup=etsysSntpClientDeviceGroup, etsysSntpClientAnycastPollInterval=etsysSntpClientAnycastPollInterval, etsysSntpClientUnicastGroup=etsysSntpClientUnicastGroup, etsysSntpClientAnycastPollRetry=etsysSntpClientAnycastPollRetry, etsysSntpClientGroups=etsysSntpClientGroups, etsysSntpClientBroadcastDelay=etsysSntpClientBroadcastDelay, etsysSntpClientMIB=etsysSntpClientMIB, etsysSntpClientDevice=etsysSntpClientDevice, etsysSntpClientUnicastPollTimeout=etsysSntpClientUnicastPollTimeout, etsysSntpClientLastUpdateTime=etsysSntpClientLastUpdateTime, etsysSntpClientCompliances=etsysSntpClientCompliances, etsysSntpClientUServerLastAttemptStatus=etsysSntpClientUServerLastAttemptStatus, etsysSntpClientAnycastGroup=etsysSntpClientAnycastGroup, etsysSntpClientUnicast=etsysSntpClientUnicast, etsysSntpClientUServerEntry=etsysSntpClientUServerEntry, etsysSntpClientUServerStatus=etsysSntpClientUServerStatus, SntpClientUpdateStatus=SntpClientUpdateStatus, etsysSntpClientAnycastServerAddr=etsysSntpClientAnycastServerAddr, etsysSntpClientObjects=etsysSntpClientObjects, etsysSntpClientLastAttemptTime=etsysSntpClientLastAttemptTime, etsysSntpClientSupportedMode=etsysSntpClientSupportedMode)
