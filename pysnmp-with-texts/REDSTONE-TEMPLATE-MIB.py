#
# PySNMP MIB module REDSTONE-TEMPLATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/REDSTONE-TEMPLATE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:55:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
rsMgmt, = mibBuilder.importSymbols("REDSTONE-SMI", "rsMgmt")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Bits, TimeTicks, IpAddress, NotificationType, Counter32, Unsigned32, Gauge32, ModuleIdentity, Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Integer32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "IpAddress", "NotificationType", "Counter32", "Unsigned32", "Gauge32", "ModuleIdentity", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Integer32", "iso")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
rsTemplateMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2773, 2, 25))
rsTemplateMIB.setRevisions(('1999-06-01 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: rsTemplateMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: rsTemplateMIB.setLastUpdated('9908170000Z')
if mibBuilder.loadTexts: rsTemplateMIB.setOrganization('Redstone Communications Inc.')
if mibBuilder.loadTexts: rsTemplateMIB.setContactInfo(' Redstone Communications, Inc. 5 Carlisle Road Westford MA 01886 USA Tel: +1-978-692-1999 Email: mib@redstonecom.com ')
if mibBuilder.loadTexts: rsTemplateMIB.setDescription('The Template MIB for the Redstone Communications Inc. enterprise.')
rsTemplateObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 25, 1))
rsTemplateName = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 25, 1, 1))
rsTemplateNameTable = MibTable((1, 3, 6, 1, 4, 1, 2773, 2, 25, 1, 1, 1), )
if mibBuilder.loadTexts: rsTemplateNameTable.setStatus('current')
if mibBuilder.loadTexts: rsTemplateNameTable.setDescription('The entries in this table provide mappings of configuration template names to local integer identifiers for those templates. These integers are used as indexes into other MIB tables containing template configuration parameters associated with the same template name.')
rsTemplateNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2773, 2, 25, 1, 1, 1, 1), ).setIndexNames((1, "REDSTONE-TEMPLATE-MIB", "rsTemplateNameName"))
if mibBuilder.loadTexts: rsTemplateNameEntry.setStatus('current')
if mibBuilder.loadTexts: rsTemplateNameEntry.setDescription('A mapping of a template name to an integer identifier for that name.')
rsTemplateNameName = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 25, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsTemplateNameName.setStatus('current')
if mibBuilder.loadTexts: rsTemplateNameName.setDescription('The template name uniquely identifying this entry.')
rsTemplateNameRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 25, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsTemplateNameRowStatus.setStatus('current')
if mibBuilder.loadTexts: rsTemplateNameRowStatus.setDescription("Controls creation/deletion of entries in this table. Only the values 'createAndGo' and 'destroy' may be SET.")
rsTemplateNameId = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 25, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsTemplateNameId.setStatus('current')
if mibBuilder.loadTexts: rsTemplateNameId.setDescription('The integer identifier associated with this template name. This value of this identifier is assigned by the device when an entry in this table is created.')
rsTemplateIdTable = MibTable((1, 3, 6, 1, 4, 1, 2773, 2, 25, 1, 1, 2), )
if mibBuilder.loadTexts: rsTemplateIdTable.setStatus('current')
if mibBuilder.loadTexts: rsTemplateIdTable.setDescription('Provides inverse mapping of template IDs to template names.')
rsTemplateIdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2773, 2, 25, 1, 1, 2, 1), ).setIndexNames((0, "REDSTONE-TEMPLATE-MIB", "rsTemplateIdId"))
if mibBuilder.loadTexts: rsTemplateIdEntry.setStatus('current')
if mibBuilder.loadTexts: rsTemplateIdEntry.setDescription('A mapping of an integer identifier to a template name.')
rsTemplateIdId = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 25, 1, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: rsTemplateIdId.setStatus('current')
if mibBuilder.loadTexts: rsTemplateIdId.setDescription('The integer identifier associated with this template name.')
rsTemplateIdName = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 25, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsTemplateIdName.setStatus('current')
if mibBuilder.loadTexts: rsTemplateIdName.setDescription('The template name having the associated identifier.')
rsTemplateMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 25, 4))
rsTemplateMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 25, 4, 1))
rsTemplateMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 25, 4, 2))
rsTemplateCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2773, 2, 25, 4, 1, 1)).setObjects(("REDSTONE-TEMPLATE-MIB", "rsTemplateGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsTemplateCompliance = rsTemplateCompliance.setStatus('current')
if mibBuilder.loadTexts: rsTemplateCompliance.setDescription('The compliance statement for systems supporting naming of configuration templates.')
rsTemplateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2773, 2, 25, 4, 2, 1)).setObjects(("REDSTONE-TEMPLATE-MIB", "rsTemplateNameName"), ("REDSTONE-TEMPLATE-MIB", "rsTemplateNameRowStatus"), ("REDSTONE-TEMPLATE-MIB", "rsTemplateNameId"), ("REDSTONE-TEMPLATE-MIB", "rsTemplateIdName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsTemplateGroup = rsTemplateGroup.setStatus('current')
if mibBuilder.loadTexts: rsTemplateGroup.setDescription('The basic collection of objects providing management of Template naming functionality in a Redstone product.')
mibBuilder.exportSymbols("REDSTONE-TEMPLATE-MIB", rsTemplateNameTable=rsTemplateNameTable, rsTemplateMIB=rsTemplateMIB, rsTemplateObjects=rsTemplateObjects, rsTemplateIdName=rsTemplateIdName, rsTemplateIdTable=rsTemplateIdTable, rsTemplateCompliance=rsTemplateCompliance, rsTemplateNameRowStatus=rsTemplateNameRowStatus, rsTemplateIdEntry=rsTemplateIdEntry, rsTemplateName=rsTemplateName, rsTemplateMIBConformance=rsTemplateMIBConformance, rsTemplateNameId=rsTemplateNameId, rsTemplateNameEntry=rsTemplateNameEntry, rsTemplateMIBGroups=rsTemplateMIBGroups, rsTemplateGroup=rsTemplateGroup, PYSNMP_MODULE_ID=rsTemplateMIB, rsTemplateIdId=rsTemplateIdId, rsTemplateNameName=rsTemplateNameName, rsTemplateMIBCompliances=rsTemplateMIBCompliances)
