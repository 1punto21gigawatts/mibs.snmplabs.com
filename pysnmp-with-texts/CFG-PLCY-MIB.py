#
# PySNMP MIB module CFG-PLCY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CFG-PLCY-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:48:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Bits, ModuleIdentity, Counter64, TimeTicks, iso, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, MibIdentifier, NotificationType, Gauge32, IpAddress, Counter32, Integer32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ModuleIdentity", "Counter64", "TimeTicks", "iso", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "MibIdentifier", "NotificationType", "Gauge32", "IpAddress", "Counter32", "Integer32", "ObjectIdentity")
DisplayString, TruthValue, RowStatus, DateAndTime, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "RowStatus", "DateAndTime", "TextualConvention")
sitara = MibIdentifier((1, 3, 6, 1, 4, 1, 2302))
sitaraCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 1))
sitaraCfgPlcy = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 1, 1))
sitaraCfgPlcyGenlObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 1, 1, 2))
sitaraCfgPlcyCrossGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 1, 1, 3))
sitaraCfgPlcySchd = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 1, 1, 4))
sitaraCfgPlcyLink = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5))
sitaraCfgPlcyGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6))
sitaraCfgPlcyAction = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7))
sitaraCfgPlcyQClass = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1))
sitaraCfgPlcyCbqClass = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1))
sitaraCfgPlcyFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8))
sitaraCfgPlcyNotifns = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 1, 1, 9))
sitaraCfgPlcyMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2302, 1, 1, 1))
sitaraCfgPlcyMIB.setRevisions(('2002-03-06 16:00', '2001-11-06 16:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: sitaraCfgPlcyMIB.setRevisionsDescriptions((' Min/Max burst support is added', "This version of MIB module Sitara's QosWorks/QosArray policy configuration objects for Policy VERSION 3 Policy VERSION 3 has 1. Customer ID in Link, Group and Class Tables 2. Filter TOS fields in Filter table ",))
if mibBuilder.loadTexts: sitaraCfgPlcyMIB.setLastUpdated('200203061600Z')
if mibBuilder.loadTexts: sitaraCfgPlcyMIB.setOrganization('Sitara, Incorporated')
if mibBuilder.loadTexts: sitaraCfgPlcyMIB.setContactInfo(' Postal Address: Sitara Networks 52 Second Avenue Suite 200 Waltham MA 02451 USA Tel: +1 781 487 5900 E-mail: info@sitaranetworks.com WWW: http://www.sitaranetworks.com')
if mibBuilder.loadTexts: sitaraCfgPlcyMIB.setDescription(" This version of MIB supports QoSWorks 1.9.2 or less sitaraCfgPlcyMIB MIB module describes Sitara's QosWorks/QosArray policy configuration objects")
class AdmissionState(TextualConvention, Integer32):
    description = 'Describes the admission rule for a new session under under policy control. If squeeze is in use, a session will be allowed when ; however, it may have reduced bandwidth allocated than configured for the class.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("squeeze", 1), ("deny", 2), ("drop", 3))

class PolicyStatus(TextualConvention, Integer32):
    description = 'Describes the status of policy information. By default, a row is created with an object with a PolicyStatus of pending, Once policy is updated and the information represented by objets with this syntax are saved in the sys.policy file and the system has been reinitialized with this information, the status is changed to running. See the sitaraCfgPlcyPerRowUpdate and sitaraCfgPlcyGlobalStorage objects.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("running", 1), ("pending", 2))

class PolicyPriority(TextualConvention, Integer32):
    description = 'Describes policy priority of the policy within a class.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("veryLow", 1), ("low", 2), ("medium", 3), ("high", 4), ("veryHigh", 5))

class DaysOfWeek(TextualConvention, OctetString):
    description = 'Days of week to enforce policy. Monday (0x40), Tuesday (0x20), Wednesday (0x10), Thursday (0x08), Friday (0x04), Saturday (0x02) and Sunday (0x01) field octets contents range ----- ------ -------- ----- 1 1 days 1..127'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 1)
    fixedLength = 1

class TimeAndZone(TextualConvention, OctetString):
    description = "A time specification. field octets contents range ----- ------ -------- ----- 1 1 hour 0..23 2 2 minutes 0..59 3 3 direction from UTC '+' / '-' 4 4 hours from UTC* 0..13 5 5 minutes from UTC 0..59 * Notes: - daylight saving time in New Zealand is +13 For example, 1:30 PM EDT would be displayed as: 13:30,-4:0 Note that if only local time is known, then timezone information (fields 3-5) is not present."
    status = 'current'
    displayHint = '1d:1d,1a1d:1d'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(2, 2), ValueSizeConstraint(5, 5), )
class PolicyAlias(TextualConvention, OctetString):
    description = "[A-Za-z0-9 _ not 'default' or any reserved Policy name like LINK, END , VERSION etc]. The 'default' alias is reserved for internal use. An alias is a short-hand name for a particular element of a policy. For example, a policy can have many links. One might have an alias of Boston and another San Francisco."
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 30)

class PolicyCustomerId(TextualConvention, OctetString):
    description = "[A-Za-z0-9 _ not 'default' or any reserved Policy name like LINK, END , VERSION etc]. The 'default' alias is reserved for internal use. For example, a Customer ID can be combination of Alpha numeric value GoldUser4527"
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 30)

class PolicyPathName(TextualConvention, OctetString):
    description = "[A-Za-z0-9 _ / ] 'default' Name is reserved for internal use. Path is the full expression of the part of the policy when an object with this textual convention is used. A path must be unique, within a schedule and is to be read and understood very much like a directory structure such as /usr/var where var is contained in usr. The format for path is l_LinkAlias/g_GroupAlias/c_ClassAlias/f_FilterAlias. At any point in this hierarchy, there is one and only one unique path within a schedule."
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 512)

class TrafficDirection(TextualConvention, Integer32):
    description = 'Describes the traffic direction associated with a particular group or class.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("toLan", 0), ("toWan", 1), ("toLantoWan", 2))

class PolicyDisplayString(TextualConvention, OctetString):
    description = "Represents textual information taken from the NVT ASCII character set, as defined in pages 4, 10-11 of RFC 854. To summarize RFC 854, the NVT ASCII repertoire specifies: - the use of character codes 0-127 (decimal) - the graphics characters (32-126) are interpreted as US ASCII - NUL, LF, CR, BEL, BS, HT, VT and FF have the special meanings specified in RFC 854 - the other 25 codes have no standard interpretation - the sequence 'CR LF' means newline - the sequence 'CR NUL' means carriage-return - an 'LF' not preceded by a 'CR' means moving to the same column on the next line. - the sequence 'CR x' for any x other than LF or NUL is illegal. (Note that this also means that a string may end with either 'CR LF' or 'CR NUL', but not with CR.) Any object defined using this syntax may not exceed 1024 characters in length."
    status = 'current'
    displayHint = '1024a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 1024)

class SitaraOwnerString(TextualConvention, OctetString):
    description = "This data type is used to model an administratively assigned name of the owner of a resource. Implementations must accept values composed of well-formed NVT ASCII sequences. In addition, implementations should accept values composed of well-formed UTF-8 sequences. It is suggested that this name contain one or more of the following: IP address, management station name, network manager's name, location, or phone number. In some cases the agent itself will be the owner of an entry. In these cases, this string shall be set to a string starting with 'monitor'. SNMP access control is articulated entirely in terms of the contents of MIB views; access to a particular SNMP object instance depends only upon its presence or absence in a particular MIB view and never upon its value or the value of related object instances. Thus, objects of this type afford resolution of resource contention only among cooperating managers; they realize no access control function with respect to uncooperative parties."
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 127)

sitaraCfgPlcyVersion = MibScalar((1, 3, 6, 1, 4, 1, 2302, 1, 1, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyVersion.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyVersion.setDescription('sitaraCfgPlcyVersion gives the policy version number, that policy agent supports. Policy Version Value VERSION 1 1.5 VERSION 2 N/A VERSION 3 3 VERSION 2 4 min/max/Buerst support')
sitaraCfgPlcyPerRowUpdate = MibScalar((1, 3, 6, 1, 4, 1, 2302, 1, 1, 2, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sitaraCfgPlcyPerRowUpdate.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyPerRowUpdate.setDescription("sitaraCfgPlcyPerRowUpdate object gives the ability to automatically update the sys.policy file when ever any row of the type specified by this object is moved to active. This object is checked when any of the rows in the following tables is moved to an active status: . Schedule Table : 0x01 . Link Table : 0x02 . Link Net Destination Table : 0x04 . Group Table : 0x08 . Class Table : 0x10 . Filter Table : 0x20 E.g. When schedule table Row status changes to Active, 0x01 bit is checked, if that is set sys.policy is updated and CBQD will be restarted. Care should be exercised when setting this object since the effect of enabling this automatic update of the sys.policy on a per row basis is that the sys.policy is written with each row's move to the active state. This also causes the queuing system to be restarted with the new parameters. For large change transactions, use the sitaraCfgPlcyGlobalStorage object.")
sitaraCfgPlcyGlobalStorage = MibScalar((1, 3, 6, 1, 4, 1, 2302, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unlock", 0), ("saveToPerm", 1), ("clearAllTables", 2), ("syncRunningPlcy", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sitaraCfgPlcyGlobalStorage.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGlobalStorage.setDescription('When this object value is set to: saveToPerm(1) sys.policy is updated with information currently in all the objects in this subagent with the exception of the cross index table that is not part of the sys.policy information. CBQD will be re-started with the new information. clearAllTables(2) All entries in all tables are cleared. The subagent is reinitialized. syncRunningPlcy(3) All entries in all tables are cleared. The subagent is reinitialized and reads the currently saved sys.policy file. This ensures synchronization of the central policy manager with changes that have been made by the CLI or WEB interfaces.')
sitaraCfgPlcyLastUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 2302, 1, 1, 2, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyLastUpdateTime.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLastUpdateTime.setDescription('sitaraCfgPlcyLastUpdateTime object contains the Date and Time when the Last policy is loaded')
sitaraCfgPlcyApplyError = MibScalar((1, 3, 6, 1, 4, 1, 2302, 1, 1, 2, 5), PolicyDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyApplyError.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyApplyError.setDescription('sitaraCfgPlcyApplyError object stores the message generated when sitaraCfgPlcyGlobalStorage is set to policy load/verify. If policy load is success then Message is Policy Apply SUCCESSFUL. If policy verify is success then Message is Policy Verify SUCCESSFUL. Message is trunkated to 1024 charecters')
sitaraCfgPlcyCrossIndexTable = MibTable((1, 3, 6, 1, 4, 1, 2302, 1, 1, 3, 1), )
if mibBuilder.loadTexts: sitaraCfgPlcyCrossIndexTable.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraCfgPlcyCrossIndexTable.setDescription('Cross Index table entry objects are the indices of the Schedule, Link, Link Network Destination, Group, CBQ Class and Filter Tables.')
sitaraCfgPlcyCrossIndexTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2302, 1, 1, 3, 1, 1), ).setIndexNames((0, "CFG-PLCY-MIB", "sitaraCfgPlcyCrossSchdAlias"), (0, "CFG-PLCY-MIB", "sitaraCfgPlcyCrossLinkAlias"), (0, "CFG-PLCY-MIB", "sitaraCfgPlcyCrossGroupAlias"), (0, "CFG-PLCY-MIB", "sitaraCfgPlcyCrossCbqClassAlias"), (0, "CFG-PLCY-MIB", "sitaraCfgPlcyCrossFilterAlias"), (0, "CFG-PLCY-MIB", "sitaraCfgPlcyCrossIndex"))
if mibBuilder.loadTexts: sitaraCfgPlcyCrossIndexTableEntry.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraCfgPlcyCrossIndexTableEntry.setDescription("All objects in this table, except the sitaraCfgPlcyCrossIndex specify active indices of the rest of the tables in this MIB Module. All objects/indices in an entry need not be valid all the times. That is, an row in this table might have only one or two valid objects. When an entry is created in this table, index objects are initialized with an invalid value '0xffffffff' and all Alias (Those are indices to this table) are initialized with Octet String value '0', i.e. length=1, value =0")
sitaraCfgPlcyCrossSchdAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 3, 1, 1, 1), PolicyAlias())
if mibBuilder.loadTexts: sitaraCfgPlcyCrossSchdAlias.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraCfgPlcyCrossSchdAlias.setDescription('This object is used as one of the indices for cross index table. The value of this object will be the same as the values found in the sitaraCfgPlcySchdAlias.')
sitaraCfgPlcyCrossLinkAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 3, 1, 1, 2), PolicyAlias())
if mibBuilder.loadTexts: sitaraCfgPlcyCrossLinkAlias.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraCfgPlcyCrossLinkAlias.setDescription("This object is used as one of the indices for this table. A value of '0' indicates an as yet unassigned/created link in a schedule. In all other cases this value will be the same as values found in sitaraCfgPlcyLinkAlias.")
sitaraCfgPlcyCrossGroupAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 3, 1, 1, 3), PolicyAlias())
if mibBuilder.loadTexts: sitaraCfgPlcyCrossGroupAlias.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraCfgPlcyCrossGroupAlias.setDescription("This object is used as one of the indices for this table. A value of '0' indicates an as yet unassigned/created group for a particular link. In all other cases this value will be the same as values found in sitaraCfgPlcyGroupAlias.")
sitaraCfgPlcyCrossCbqClassAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 3, 1, 1, 4), PolicyAlias())
if mibBuilder.loadTexts: sitaraCfgPlcyCrossCbqClassAlias.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraCfgPlcyCrossCbqClassAlias.setDescription("This object is used as one of the indices for this table. A value of '0' indicates an as yet unassigned/created class for a particular group or link. In all other cases this value will be the same as values found in sitaraCfgPlcyCbqClassAlias.")
sitaraCfgPlcyCrossFilterAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 3, 1, 1, 5), PolicyAlias())
if mibBuilder.loadTexts: sitaraCfgPlcyCrossFilterAlias.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraCfgPlcyCrossFilterAlias.setDescription("This object is used as one of the indices for this table. A value of '0' indicates an as yet unassigned/created filter for a class. In all other cases this value will be the same as values found in sitaraCfgPlcyFilterAlias.")
sitaraCfgPlcyCrossIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 3, 1, 1, 6), Unsigned32())
if mibBuilder.loadTexts: sitaraCfgPlcyCrossIndex.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraCfgPlcyCrossIndex.setDescription('This object specifies the serial number for this row of the table and ensures uniqueness for each row.')
sitaraCfgPlcyCrossSchdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 3, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyCrossSchdIndex.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraCfgPlcyCrossSchdIndex.setDescription('The value of this object is the same as that contained in sitaraCfgPlcySchdIndex.')
sitaraCfgPlcyCrossLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 3, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyCrossLinkIndex.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraCfgPlcyCrossLinkIndex.setDescription("The value of this object is the same as sitaraCfgPlcySchdIndex. '0xffffffff' is used to to represent an as yet unassigned/created link in this schedule.")
sitaraCfgPlcyCrossLinkNetDestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 3, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyCrossLinkNetDestIndex.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraCfgPlcyCrossLinkNetDestIndex.setDescription("The value of this object is the same as sitaraCfgPlcyLinkNetDestNextIndex. '0xffffffff' is used to to represent as yet unassigned/created network destinations specifically targeted for this link as described in the sitaraCfgPlcyLinkNetDestTable.")
sitaraCfgPlcyCrossGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 3, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyCrossGroupIndex.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraCfgPlcyCrossGroupIndex.setDescription("The value of this object is the same as sitaraCfgPlcyGroupIndex. '0xffffffff' is used to to represent as yet unassigned/created group for this link.")
sitaraCfgPlcyCrossCbqClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 3, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyCrossCbqClassIndex.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraCfgPlcyCrossCbqClassIndex.setDescription("The value of this object is the same as sitaraCfgPlcyCbqClassIndex. '0xffffffff' is used to to represent as yet unassigned/created class for this link or group.")
sitaraCfgPlcyCrossFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 3, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyCrossFilterIndex.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraCfgPlcyCrossFilterIndex.setDescription("The value of this object is the same as sitaraCfgPlcyFilterIndex. '0xffffffff' is used to to represent as yet unassigned/created filter for this class.")
sitaraCfgPlcySchdNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2302, 1, 1, 4, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcySchdNextIndex.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcySchdNextIndex.setDescription('Next available Schedule Table index. This object contains the value that a management application should use when creating a new entry in the sitaraCfgPlcySchdTable. When a row is created with this value, the sitaraCfgPlcySchdNextIndex increment by one. In the boundary case where another manager has accessed the value at the same time and attempted to create a row in sitaraCfgPlcySchdNextIndex with the same index value, the second manager will receive and error notification. The semantic for this object is designed to avoid the problem of objects in other MIB Modules that increment on each read causing a more rapid wrap. In both cases the manager must be prepared to receive a message from the agent that the row is already in use since some rows may be long lived.')
sitaraCfgPlcySchdTable = MibTable((1, 3, 6, 1, 4, 1, 2302, 1, 1, 4, 2), )
if mibBuilder.loadTexts: sitaraCfgPlcySchdTable.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcySchdTable.setDescription('Schedule Table sits in the top of the policy Management tree. Each entry of this table gives schedule time interval at which the policy to be applied. This table is linked to the Link table.')
sitaraCfgPlcySchdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2302, 1, 1, 4, 2, 1), ).setIndexNames((0, "CFG-PLCY-MIB", "sitaraCfgPlcySchdIndex"))
if mibBuilder.loadTexts: sitaraCfgPlcySchdEntry.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcySchdEntry.setDescription('Each entry includes the Start-Time and End-Time of the days as specified by the DaysOfWeek textual convention: E.g.: Start-Time :09:00 End-Time :18:00 DaysOfWeek : 0x7c The parameters above would describe a schedule that is active between 9am to 6pm on week days Monday to Friday inclusive.')
sitaraCfgPlcySchdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 4, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: sitaraCfgPlcySchdIndex.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcySchdIndex.setDescription('sitaraCfgPlcySchdIndex is a unique value for each schedule entry.')
sitaraCfgPlcySchdAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 4, 2, 1, 2), PolicyAlias()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcySchdAlias.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcySchdAlias.setDescription("The schedule alias must be unique for every row of this table. If an alias is 'foo' it would be allowed only in one row of this table. It would also be allowed to exist once in the respective alias fields of the other tables in this MIB Module, specifically the link, group, class and filter tables.")
sitaraCfgPlcySchdDaysOfWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 4, 2, 1, 3), DaysOfWeek()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcySchdDaysOfWeek.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcySchdDaysOfWeek.setDescription('Specifies the days of the week this schedule entry is to be active. When a new schedule is created, the default is that it is not active any time, meaning no days of the week.')
sitaraCfgPlcySchdStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 4, 2, 1, 4), TimeAndZone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcySchdStartTime.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcySchdStartTime.setDescription('Object sitaraCfgPlcySchdStartTime gives the start time of the schedule identified by this row of the table for the days of the week the schedule is active as specified in the sitaraCfgPlcySchdDaysOfWeek object. If zone is information is not supplied, time is treated as Local time. If zone information is supplied with this object, the system will calculate the correct offset.')
sitaraCfgPlcySchdEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 4, 2, 1, 5), TimeAndZone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcySchdEndTime.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcySchdEndTime.setDescription('Object sitaraCfgPlcySchdEndTime gives the end time of the schedule identified by this row of the table for the days of the week the schedule is active as specified in the sitaraCfgPlcySchdDaysOfWeek object. If zone is not supplied, time is treated as Local time. If zone information is supplied with this object, the system will calculate the correct offset.')
sitaraCfgPlcySchdOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 4, 2, 1, 6), SitaraOwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcySchdOwner.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcySchdOwner.setDescription('Object sitaraCfgPlcySchdOwner should be set by the owner of this table row entry immediately after creating the entry. The owner is the user or management system that sent the commands to the system to create this row.')
sitaraCfgPlcySchdPolicyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 4, 2, 1, 7), PolicyStatus().clone('pending')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcySchdPolicyStatus.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcySchdPolicyStatus.setDescription('The sitaraCfgPlcySchdPolicyStatus object can be set with the following values: running(1), -- Contents of the row are -- running in the current policy -- configuration. pending(2) -- Contents of the row are -- not running in the curent policy -- configuration. When a row is created, the value of this object is initialized with Pending. When a policy is updated successfully and the system is reinitialized with the new represented by this row of the table, then value is changed from Pending to Running.')
sitaraCfgPlcySchdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 4, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcySchdStatus.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcySchdStatus.setDescription('Current status of the Schedule Table Entry. When ever this status is set to active and the sitaraCfgPlcyPerRowUpdate object value bit 0x01 is set, the sys.policy file is updated and CBQD will be re-started with these new values.')
sitaraCfgPlcyLinkNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyLinkNextIndex.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkNextIndex.setDescription('Next available Link Table index. This object is used by management applications to determine the value to use for sitaraCfgPlcyLinkIndexindex when creating a new row in the sitaraCfgPlcyLinkTable.')
sitaraCfgPlcyLinkTable = MibTable((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 2), )
if mibBuilder.loadTexts: sitaraCfgPlcyLinkTable.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkTable.setDescription('The Link Table contains information about links that have been defined to the QosWorks device. Each schedule will contain one or more active links. Each link can contain one or more groups which are in turn comprised of classes. Classes can also be directly contained in links.')
sitaraCfgPlcyLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 2, 1), ).setIndexNames((0, "CFG-PLCY-MIB", "sitaraCfgPlcySchdIndex"), (0, "CFG-PLCY-MIB", "sitaraCfgPlcyLinkIndex"))
if mibBuilder.loadTexts: sitaraCfgPlcyLinkEntry.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkEntry.setDescription('A link alias such as Boston, may appear several times in this table if it is used in several schedules. It is the combination of sitaraCfgPlcySchdIndex and sitaraCfgPlcyLinkIndex that provide uniqueness. The indexing in this table does allow the retrieval of all links associated with a schedule.')
sitaraCfgPlcyLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: sitaraCfgPlcyLinkIndex.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkIndex.setDescription('A unique value for each Link Entry. A new index value will be used each time a link is associated with a schedule. The sitaraCfgPlcyLinkNextIndex is the object to be used to determine what the next available Link Index should be.')
sitaraCfgPlcyLinkAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 2, 1, 2), PolicyAlias()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyLinkAlias.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkAlias.setDescription('The Link Alias is the name associated with the link identified in this row of the table. Since a link may be used in several schedules, it is possible that a link will appear in more than one row of this table.')
sitaraCfgPlcyLinkPathName = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 2, 1, 3), PolicyPathName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyLinkPathName.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkPathName.setDescription('Path Name gives the full specification of this link which includes both the schedule and link information. See the PolicyPathName textual convention.')
sitaraCfgPlcyLinkEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyLinkEnabled.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkEnabled.setDescription('The current status of this link in this schedule.')
sitaraCfgPlcyLinkDscr = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 2, 1, 5), PolicyDisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyLinkDscr.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkDscr.setDescription('Descriptive information about this link entry.')
sitaraCfgPlcyLinkLanBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 2, 1, 6), Gauge32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyLinkLanBandWidth.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkLanBandWidth.setDescription('The bandwidth in kilobits per second allocated to this link in the LAN direction.')
sitaraCfgPlcyLinkLanBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 2, 1, 7), Gauge32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyLinkLanBurst.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkLanBurst.setDescription('The bandwidth limit that traffic in the LAN direction is allowed to burst to on this link. This is measured in kilobits per second.')
sitaraCfgPlcyLinkLanAvlBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyLinkLanAvlBandWidth.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkLanAvlBandWidth.setDescription('Available bandwidth in the LAN direction for this link. Available bandwidth is the amount of capacity that remains after all the bandwidth that has been configured for all child groups and classes has been subtracted.')
sitaraCfgPlcyLinkWanBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 2, 1, 9), Gauge32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyLinkWanBandWidth.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkWanBandWidth.setDescription('Link bandwidth in the WAN direction.')
sitaraCfgPlcyLinkWanBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 2, 1, 10), Gauge32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyLinkWanBurst.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkWanBurst.setDescription('Link Burst bandwidth in the WAN direction.')
sitaraCfgPlcyLinkWanAvlBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyLinkWanAvlBandWidth.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkWanAvlBandWidth.setDescription('Available link bandwidth in the WAN direction. Available bandwidth is the amount of capacity that remains after all the bandwidth that has been configured for all child groups and classes has been subtracted.')
sitaraCfgPlcyLinkOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 2, 1, 12), SitaraOwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyLinkOwner.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkOwner.setDescription('sitaraCfgPlcyLinkOwner object is used to identify the Owner of the row which will usually be the identity of the management software or user that created this link. Formate of the Owner string as follows: Owner String = ScheduleAlias(PolicyName):LinkPathName:LinkCustomerID')
sitaraCfgPlcyLinkPolicyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 2, 1, 13), PolicyStatus().clone('pending')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyLinkPolicyStatus.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkPolicyStatus.setDescription('The sitaraCfgPlcyLinkPolicyStatus object can be set with the following values: running(1), -- Contents of the row are -- running in the current policy -- configuration. pending(2) -- Contents of the row are -- not running in the curent policy -- configuration. When a row is created, the value of this object is initialized with Pending. When a policy is updated successfully and the system is reinitialized with the new represented by this row of the table, then value is changed from Pending to Running.')
sitaraCfgPlcyLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 2, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyLinkStatus.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkStatus.setDescription('The current status of this row of the link table.')
sitaraCfgPlcyLinkNetDestNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyLinkNetDestNextIndex.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkNetDestNextIndex.setDescription('The next available Link Network Destination Address Table index to be used to create a new entry in the network destination address table.')
sitaraCfgPlcyLinkNetDestTable = MibTable((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 4), )
if mibBuilder.loadTexts: sitaraCfgPlcyLinkNetDestTable.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkNetDestTable.setDescription('The Link Network Destination Address table gives the IP Addresses and network masks for links that are intended to carry traffic only to specfic destination networks.')
sitaraCfgPlcyLinkNetDestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 4, 1), ).setIndexNames((0, "CFG-PLCY-MIB", "sitaraCfgPlcyLinkNetDestIndex"), (0, "CFG-PLCY-MIB", "sitaraCfgPlcyLinkIndex"))
if mibBuilder.loadTexts: sitaraCfgPlcyLinkNetDestEntry.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkNetDestEntry.setDescription('Each entry consists of a destination IP Address and corresponding network mask. Each new link created should have at least one destination network specified for IP traffic. See the policy filter table for additional detail.')
sitaraCfgPlcyLinkNetDestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: sitaraCfgPlcyLinkNetDestIndex.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkNetDestIndex.setDescription('A unique value for each network destination entry. A new index value must be used each time a row is created in this table to associate a network destination with a link. The sitaraCfgPlcyLinkNetDestNextIndex is the object to be used to determine what the next available Link Net Dest Index should be.')
sitaraCfgPlcyLinkNetDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 4, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyLinkNetDestAddr.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkNetDestAddr.setDescription('IP address of the destination network.')
sitaraCfgPlcyLinkNetDestMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 4, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyLinkNetDestMask.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkNetDestMask.setDescription('The network mask to be used in association with the sitaraCfgPlcyLinkNetDestAddr.')
sitaraCfgPlcyLinkNetDestOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 4, 1, 4), SitaraOwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyLinkNetDestOwner.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkNetDestOwner.setDescription('Object sitaraCfgPlcyLinkNetDestOwner is used to identify the Owner of the row. This will usually be the management system or user that created this row of the table.')
sitaraCfgPlcyLinkNetDestStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 5, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyLinkNetDestStatus.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyLinkNetDestStatus.setDescription('Current status of status information identified by the table row entry.')
sitaraCfgPlcyGroupNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyGroupNextIndex.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGroupNextIndex.setDescription('Next available index to be used to create an entry in the sitaraCfgPlcyGroupTable.')
sitaraCfgPlcyGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6, 2), )
if mibBuilder.loadTexts: sitaraCfgPlcyGroupTable.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGroupTable.setDescription('Class groups provide a parent level for two or more classes. This makes it possible to enforce bandwidth and bursting restrictions by group as well as individual class.')
sitaraCfgPlcyGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6, 2, 1), ).setIndexNames((0, "CFG-PLCY-MIB", "sitaraCfgPlcySchdIndex"), (0, "CFG-PLCY-MIB", "sitaraCfgPlcyLinkIndex"), (0, "CFG-PLCY-MIB", "sitaraCfgPlcyGroupIndex"))
if mibBuilder.loadTexts: sitaraCfgPlcyGroupEntry.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGroupEntry.setDescription('Each entry contains the information about the bandwidth, burst and name of the group. When an entry is created, resources (Bandwidth, Burst..) should be less than the available resources at the parent which could either be a link or a group since the system allows creation of groups that contain groups.')
sitaraCfgPlcyGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: sitaraCfgPlcyGroupIndex.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGroupIndex.setDescription('Unique value for each entry. A new index value must be used each time a row is created in this table to associate a group with a Link. The sitaraCfgPlcyGroupNextIndex is the object to be used to determine what the next available Group Index should be.')
sitaraCfgPlcyGroupAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6, 2, 1, 2), PolicyAlias()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyGroupAlias.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGroupAlias.setDescription('The group alias is unique identifier in the Group Table. See the PolicyAlias and PolicyPathName textual conventions for additional details.')
sitaraCfgPlcyGroupPathName = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6, 2, 1, 3), PolicyPathName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyGroupPathName.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGroupPathName.setDescription('The fully qualified unique path to this policy element. See the PolicyAlias and PolicyPathName textual conventions for additional information.')
sitaraCfgPlcyGroupEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyGroupEnabled.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGroupEnabled.setDescription('sitaraCfgPlcyGroupEnabled is to specify whether this entry is enabled or disabled.')
sitaraCfgPlcyGroupDscr = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6, 2, 1, 5), PolicyDisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyGroupDscr.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGroupDscr.setDescription('A description of the group defined in the table row entry.')
sitaraCfgPlcyGroupLanBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6, 2, 1, 6), Gauge32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyGroupLanBandWidth.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGroupLanBandWidth.setDescription('Group bandwidth in the LAN direction. This should be less than the parent available bandwidth.')
sitaraCfgPlcyGroupLanBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6, 2, 1, 7), Gauge32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyGroupLanBurst.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGroupLanBurst.setDescription('Group Burst bandwidth in the LAN direction. This should be less than the parent group/link available burst bandwidth.')
sitaraCfgPlcyGroupLanAvlBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyGroupLanAvlBandWidth.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGroupLanAvlBandWidth.setDescription('Available bandwidth in LAN direction for this group. Available bandwidth is the amount of capacity that remains after all the bandwidth that has been configured for all child groups and classes in a link has been subtracted.')
sitaraCfgPlcyGroupWanBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6, 2, 1, 9), Gauge32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyGroupWanBandWidth.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGroupWanBandWidth.setDescription('Group bandwidth in WAN direction. This should be less than the parent available Band width')
sitaraCfgPlcyGroupWanBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6, 2, 1, 10), Gauge32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyGroupWanBurst.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGroupWanBurst.setDescription('Group Burst bandwidth in WAN direction. This should be less than the parent available Burst bandwidth.')
sitaraCfgPlcyGroupWanAvlBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyGroupWanAvlBandWidth.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGroupWanAvlBandWidth.setDescription('Available bandwidth in WAN direction for this group. Available bandwidth is the amount of capacity that remains after all the bandwidth that has been configured for all child groups and classes has been subtracted.')
sitaraCfgPlcyGroupDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6, 2, 1, 12), TrafficDirection()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyGroupDirection.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGroupDirection.setDescription('The policy group traffic direction object indicates the directionality of this flow. Based on the value of this object, the LAN and WAN bandwidth paramerts will be filled in. If this is a bi-directional flow, values for both the LAN and WAN objects should be supplied.')
sitaraCfgPlcyGroupParentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6, 2, 1, 13), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyGroupParentIndex.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGroupParentIndex.setDescription('Object sitaraCfgPlcyGroupParentIndex contains the value of a parent group is this group is desired to be a child of another group. If the value of this object is 0 then this group is not a member of another group and is a direct child of the link specified in the index of this table.')
sitaraCfgPlcyGroupOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6, 2, 1, 14), SitaraOwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyGroupOwner.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGroupOwner.setDescription('Object sitaraCfgPlcyGroupOwner is used to identify the owner of the information identified in this row of the table. Formate of the Owner string as follows: Owner String = ScheduleAlias(PolicyName):GroupPathName')
sitaraCfgPlcyGroupPolicyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6, 2, 1, 15), PolicyStatus().clone('pending')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyGroupPolicyStatus.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGroupPolicyStatus.setDescription('The sitaraCfgPlcyGroupPolicyStatus PolicyStatus object can be set with the following values: running(1), -- Contents of the row are -- running in the current policy -- configuration. pending(2) -- Contents of the row are -- not running in the curent policy -- configuration. When a row is created, the value of this object is initialized with Pending. When a policy is updated successfully and the system is reinitialized with the new represented by this row of the table, then value is changed from Pending to Running.')
sitaraCfgPlcyGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 6, 2, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyGroupStatus.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyGroupStatus.setDescription('Current status of this table row.')
sitaraCfgPlcyCbqClassNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassNextIndex.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassNextIndex.setDescription('The next available CBQ class table index.')
sitaraCfgPlcyCbqClassTable = MibTable((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2), )
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassTable.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassTable.setDescription('The sitaraCfgPlcyCbqClassTable contains an entry for each CBQ policy associated with a particular service. Classes provide the finest resolution available for bandwidth allocation. A single class is typically shared by several categories of traffic which each category defined as a filter. See the sitaraCfgPlcyFilterTable.')
sitaraCfgPlcyCbqClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1), ).setIndexNames((0, "CFG-PLCY-MIB", "sitaraCfgPlcySchdIndex"), (0, "CFG-PLCY-MIB", "sitaraCfgPlcyLinkIndex"), (0, "CFG-PLCY-MIB", "sitaraCfgPlcyGroupIndex"), (0, "CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassIndex"))
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassEntry.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassEntry.setDescription('Locally held information about a particular CBQ policy.')
sitaraCfgPlcyCbqClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassIndex.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassIndex.setDescription('A unique value for each CbqClass Entry. A new index value will be used each time a CbqClass is associated with a Link/Group creating a new row in this table . The sitaraCfgPlcyCbqClassNextIndex is the object to be used to determine what the next available CbqClass Index should be.')
sitaraCfgPlcyCbqClassAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 2), PolicyAlias()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassAlias.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassAlias.setDescription('The class Alias is unique identifier in the Class Table, for a schedule. See the textual convention information at the beginning of this module for PolicyAlias and PolicyPathName for correct usage information.')
sitaraCfgPlcyCbqClassPathName = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 3), PolicyPathName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassPathName.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassPathName.setDescription('sitaraCfgPlcyCbqClassPathName object contains the fully specified path to this policy element. The last node in the path is the alias described in this row of the table.')
sitaraCfgPlcyCbqClassEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassEnabled.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassEnabled.setDescription('The current status of this policy element.')
sitaraCfgPlcyCbqClassLanBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 5), Gauge32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanBandWidth.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanBandWidth.setDescription('Class bandwidth in LAN direction. This object should be set to less than the parent available bandwidth.')
sitaraCfgPlcyCbqClassLanBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 6), Gauge32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanBurst.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanBurst.setDescription("Class burst bandwidth in LAN direction. This should be less than the parent link or group's available burst bandwidth.")
sitaraCfgPlcyCbqClassLanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 7), PolicyPriority()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanPriority.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanPriority.setDescription('sitaraCfgPlcyCbqClassLanPriority gives the priority of the Class in the LAN direction.')
sitaraCfgPlcyCbqClassLanSessionBw = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 8), Gauge32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanSessionBw.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanSessionBw.setDescription('sitaraCfgPlcyCbqClassLanSessionBw specifies the minimum session bandwidth in the LAN direction for TCP/IP traffic.')
sitaraCfgPlcyCbqClassLanAdminCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 9), AdmissionState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanAdminCtrl.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanAdminCtrl.setDescription('Describes the admission rule for a session. The purpose of this object is to allow the system to determine the action to take when new requests are recieved by the system for sessions when the allocated limit for this class has been reached. Depending on the value of this object, new requests can be granted with reduced bandwith, rejected, etc. See the AdmissionState textual convention for more information.')
sitaraCfgPlcyCbqClassLanHttpCaching = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanHttpCaching.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanHttpCaching.setDescription('sitaraCfgPlcyCbqClassLanHttpCaching gives the status whether HTTP caching i.e. enabled or not in the LAN direction. This class-level attribute applies only for HTTP traffic. It enables caching WEB pages that are handeled by the class.')
sitaraCfgPlcyCbqClassLanTosEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanTosEnabled.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanTosEnabled.setDescription('Used to enable or disable type of service remarking in the LAN direction.')
sitaraCfgPlcyCbqClassLanTosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanTosValue.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanTosValue.setDescription('Type of service value that will be written to packets in this class when they exit the QosWorks device.')
sitaraCfgPlcyCbqClassLanTosMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanTosMask.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanTosMask.setDescription('Mask applied to the TOS value above.')
sitaraCfgPlcyCbqClassLanMtuValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 1518))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanMtuValue.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanMtuValue.setDescription("MTU value in the Lan direction specified in units 'bytes'")
sitaraCfgPlcyCbqClassLanMaxDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 15), TimeTicks()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanMaxDelay.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanMaxDelay.setDescription("sitaraCfgPlcyCbqClassLanMaxDelay specifies maximum delay in the Lan direction in 'milli sec'. Lower and upper limits for the delay is calulated from the following formulas lower bound delay = roundUp ( 4 * 8 * MTU / BW (in kbps)) upper bound delay = roundDown (200 * 8 * MTU / BW (in kbps))")
sitaraCfgPlcyCbqClassWanBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 16), Gauge32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanBandWidth.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanBandWidth.setDescription('Class bandwidth in WAN direction. This should be less than the available bandwidth of the parent group or link.')
sitaraCfgPlcyCbqClassWanBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 17), Gauge32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanBurst.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanBurst.setDescription('Class Burst bandwidth in WAN direction. This should be less than the available burst bandwidth for the parent group or link.')
sitaraCfgPlcyCbqClassWanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 18), PolicyPriority()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanPriority.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanPriority.setDescription('sitaraCfgPlcyCbqClassWanPriority gives the priority this class should receive relative to all other traffic in the WAN direction.')
sitaraCfgPlcyCbqClassWanSessionBw = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 19), Gauge32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanSessionBw.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanSessionBw.setDescription('sitaraCfgPlcyCbqClassWanSessionBw specifies the minimum session bandwidth in the WAN direction for TCP/IP traffic.')
sitaraCfgPlcyCbqClassWanAdminCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 20), AdmissionState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanAdminCtrl.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanAdminCtrl.setDescription('sitaraCfgPlcyCbqClassWanAdminCtrl allows the system to determine the action to take when new requests are recieved by the system for sessions in the WAN direction when the allocated limit for this class has been reached. Depending on the value of this object, new requests can be granted with reduced bandwith, rejected, etc. See the AdmissionState textual convention for more information.')
sitaraCfgPlcyCbqClassWanHttpCaching = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanHttpCaching.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanHttpCaching.setDescription('Used to enable or disable WEB caching. This is applicable for classes that handle HTTP traffic. The value should be 2 - disabled for those clases that do not handle HTTP traffic or for those classes that do, but for which caching is not desired.')
sitaraCfgPlcyCbqClassWanTosEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanTosEnabled.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanTosEnabled.setDescription('Used to control type of service remarking in the WAN direction.')
sitaraCfgPlcyCbqClassWanTosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanTosValue.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanTosValue.setDescription('New TOS value to be applied to traffic in this class in the WAN direction.')
sitaraCfgPlcyCbqClassWanTosMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanTosMask.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanTosMask.setDescription('Mask for the TOS value in the WAN direction.')
sitaraCfgPlcyCbqClassWanMtuValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 1518))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanMtuValue.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanMtuValue.setDescription("MTU value in the Wan direction specified in units 'bytes'")
sitaraCfgPlcyCbqClassWanMaxDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 26), TimeTicks()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanMaxDelay.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanMaxDelay.setDescription("This object specifies maximum delay in the Wan direction in 'milli sec'. Lower and upper limits for the delay is calulated from the following formulas lower bound delay = roundUp ( 4 * 8 * MTU / BW (in kbps)) upper bound delay = roundDown (200 * 8 * MTU / BW (in kbps))")
sitaraCfgPlcyCbqClassDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 27), TrafficDirection()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassDirection.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassDirection.setDescription('Cbq Class Traffic direction. Note that the value of this object will determine whether the LAN, WAN or both sets of objects for LAN and WAN parameters are relevant for this class of traffic.')
sitaraCfgPlcyCbqClassOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 28), SitaraOwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassOwner.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassOwner.setDescription('sitaraCfgPlcyCbqClassOwner is used to identify the table row owner for this class. Usually this will either be a user or the management system that created the row in the table. Formate of the Owner string as follows: Owner String = ScheduleAlias(PolicyName):ClassPathName')
sitaraCfgPlcyCbqClassDscr = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 29), PolicyDisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassDscr.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassDscr.setDescription('A textual description for this class.')
sitaraCfgPlcyCbqClassPolicyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 30), PolicyStatus().clone('pending')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassPolicyStatus.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassPolicyStatus.setDescription('The sitaraCfgPlcyCbqClassPolicyStatus PolicyStatus object can be set with the following values: running(1), -- Contents of the row are -- running in the current policy -- configuration. pending(2) -- Contents of the row are -- not running in the curent policy -- configuration. When a row is created, the value of this object is initialized with Pending. When a policy is updated successfully and the system is reinitialized with the new represented by this row of the table, then value is changed from Pending to Running.')
sitaraCfgPlcyCbqClassStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 31), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassStatus.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassStatus.setDescription('Current status of the sitaraCfgPlcyCbqClass entry.')
sitaraCfgPlcyCbqClassLanMinBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanMinBurst.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanMinBurst.setDescription('Class Minmum Burst bandwidth in LAN direction. Value 0 specified invalid or not defined')
sitaraCfgPlcyCbqClassLanMaxBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanMaxBurst.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassLanMaxBurst.setDescription('Class Maxmum Burst bandwidth in LAN direction. Value 0 specified invalid or not defined')
sitaraCfgPlcyCbqClassWanMinBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanMinBurst.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanMinBurst.setDescription('Class Minmum Burst bandwidth in WAN direction. Value 0 specified invalid or not defined')
sitaraCfgPlcyCbqClassWanMaxBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 7, 1, 1, 2, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanMaxBurst.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyCbqClassWanMaxBurst.setDescription('Class Maxmum Burst bandwidth in WAN direction. Value 0 specified invalid or not defined')
sitaraCfgPlcyFilterNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterNextIndex.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterNextIndex.setDescription('Next available Filter Table index value.')
sitaraCfgPlcyFilterTable = MibTable((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2), )
if mibBuilder.loadTexts: sitaraCfgPlcyFilterTable.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterTable.setDescription('The sitaraCfgPlcyFilterTable contains an entry for each filter associated with a particular CBQ Class. Each Class defined in the sitaraCfgPlcyCbqClassTable may have one or more filters associated with it.')
sitaraCfgPlcyFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1), ).setIndexNames((0, "CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassIndex"), (0, "CFG-PLCY-MIB", "sitaraCfgPlcyFilterIndex"))
if mibBuilder.loadTexts: sitaraCfgPlcyFilterEntry.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterEntry.setDescription('Locally held information about a particular policy filter.')
sitaraCfgPlcyFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: sitaraCfgPlcyFilterIndex.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterIndex.setDescription('A unique value for each filter entry. A new index value will be used each time a Filter is associated with a Class. The sitaraCfgPlcyFilterNextIndex is the object to be used to determine what the next available filter index should be.')
sitaraCfgPlcyFilterAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 2), PolicyAlias()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterAlias.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterAlias.setDescription('The filter alias is unique identifier in the Filter Table for a schedule. See the textual convention information at the beginning of this module for PolicyAlias and PolicyPathName for correct usage information.')
sitaraCfgPlcyFilterPathName = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 3), PolicyPathName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterPathName.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterPathName.setDescription('sitaraCfgPlcyFilterPathName contains the fully specified path to this policy element. The last node in the path is the alias described in this row of the table.')
sitaraCfgPlcyFilterProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterProtocolType.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterProtocolType.setDescription('Protocol identifier associated with a particular filter.')
sitaraCfgPlcyFilterLanIpStartPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterLanIpStartPort.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterLanIpStartPort.setDescription('The starting IP port number of a range of port numbers for the filter in the LAN direction. When the sitaraCfgPlcyFilterLanIpEndPort is less than sitaraCfgPlcyFilterLanIpStartPort, then the range contains only one port number, the sitaraCfgPlcyFilterLanIpStartPort number.')
sitaraCfgPlcyFilterLanIpEndPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterLanIpEndPort.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterLanIpEndPort.setDescription('The ending IP port number of the port range in the LAN direction. To specify a range this value should be more then the Start port number. If the end port number is less than the start port number, then the range will contain only one port number, the starting port number.')
sitaraCfgPlcyFilterLanIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterLanIpAddr.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterLanIpAddr.setDescription('IP address associated with the policy filter if the filter address is on the LAN side of the QosWorks device.')
sitaraCfgPlcyFilterLanNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 8), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterLanNetMask.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterLanNetMask.setDescription('Network mask associated with the policy filter if the filter address is on the LAN side of the QosWorks device.')
sitaraCfgPlcyFilterWanIpStartPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterWanIpStartPort.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterWanIpStartPort.setDescription('Starting IP port number of a port range in the WAN direction. The sitaraCfgPlcyFilterWanIpStartPort, sitaraCfgPlcyFilterWanIpEndPort, sitaraCfgPlcyFilterWanIpAddr, and sitaraCfgPlcyFilterWanNetMask have the same semanitcs as their LAN based equivalents only they control behavior for addresses, ports, and network masks for filters on the WAN side of the QosWorks device.')
sitaraCfgPlcyFilterWanIpEndPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterWanIpEndPort.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterWanIpEndPort.setDescription('Ending IP port number of the Port range in the WAN direction.')
sitaraCfgPlcyFilterWanIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 11), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterWanIpAddr.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterWanIpAddr.setDescription('IP source address associated with the policy filter in the WAN direction.')
sitaraCfgPlcyFilterWanNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 12), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterWanNetMask.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterWanNetMask.setDescription('Network mask associated with the policy filter IP address on the WAN side of the QosWorks device.')
sitaraCfgPlcyFilterOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterOrder.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterOrder.setDescription('The order in which the filters are to be evaluated.')
sitaraCfgPlcyFilterOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 14), SitaraOwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterOwner.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterOwner.setDescription('Used to identify the owner of this row in the table.')
sitaraCfgPlcyFilterDscr = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 15), PolicyDisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterDscr.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterDscr.setDescription('A textual description of this filter entry.')
sitaraCfgPlcyFilterPolicyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 16), PolicyStatus().clone('pending')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterPolicyStatus.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterPolicyStatus.setDescription('Policy status takes following values. See the PolicyStatus textual convention.')
sitaraCfgPlcyFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterStatus.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterStatus.setDescription('Current status of the sitaraCfgPlcyFilter entry.')
sitaraCfgPlcyFilterTosEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterTosEnabled.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterTosEnabled.setDescription('Used to enable or disable TOS type of service of this filter. The TOS value is only applied to IP traffic so for nonIP, this should not be used.')
sitaraCfgPlcyFilterTosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterTosValue.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterTosValue.setDescription('Type of service value that will be written to packets in this class when they exit the Sitara QoS device.')
sitaraCfgPlcyFilterTosMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 1, 8, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgPlcyFilterTosMask.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyFilterTosMask.setDescription('Mask applied to the TOS value above.')
sitaraCfgPlcyNotifnsPlcyUpdate = NotificationType((1, 3, 6, 1, 4, 1, 2302, 1, 1, 9, 1)).setObjects(("CFG-PLCY-MIB", "sitaraCfgPlcyLastUpdateTime"))
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsPlcyUpdate.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsPlcyUpdate.setDescription('sitaraCfgPlcyNotifnsPlcyUpdate notification is generated when sitaraCfgPlcyGlobalStorage object is set. This notification could be generated when policy is successfuly Loaded/Verified')
sitaraCfgPlcyNotifnsCbqdReStart = NotificationType((1, 3, 6, 1, 4, 1, 2302, 1, 1, 9, 2)).setObjects(("CFG-PLCY-MIB", "sitaraCfgPlcyLastUpdateTime"))
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsCbqdReStart.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsCbqdReStart.setDescription('sitaraCfgPlcyNotifnsCbqdReStart notification is generated when CBQD is restarted.')
sitaraCfgPlcyNotifnsFailToReStart = NotificationType((1, 3, 6, 1, 4, 1, 2302, 1, 1, 9, 3))
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsFailToReStart.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsFailToReStart.setDescription('sitaraCfgPlcyNotifnsFailToReStart, failure notification, is generated when there is failure to Restart the Cbqd based on a restart request initiated by the sub agent that realizes this MIB Module.')
sitaraCfgPlcyNotifnsFailToUpdatePolicy = NotificationType((1, 3, 6, 1, 4, 1, 2302, 1, 1, 9, 4)).setObjects(("CFG-PLCY-MIB", "sitaraCfgPlcyApplyError"))
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsFailToUpdatePolicy.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsFailToUpdatePolicy.setDescription('sitaraCfgPlcyNotifnsFailToUpdatePolicy notification is generated when there has been a failure to load/Verify the policy')
sitaraCfgPlcyNotifnsFailToXlatePolicy = NotificationType((1, 3, 6, 1, 4, 1, 2302, 1, 1, 9, 5))
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsFailToXlatePolicy.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsFailToXlatePolicy.setDescription('sitaraCfgPlcyNotifnsFailToXlatePolicy failure notification is generated when there has been a failure to translate the policy to cbqd conf file.')
sitaraCfgPlcyNotifnsInvalidPolicy = NotificationType((1, 3, 6, 1, 4, 1, 2302, 1, 1, 9, 6))
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsInvalidPolicy.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsInvalidPolicy.setDescription('sitaraCfgPlcyNotifnsInvalidPolicy notification is generated when a row in any of the policy tables becomes invalid due to deletion of some of the objects/rows in the valid policy. This notification could be generated when agent detects invalid policy')
sitaraCfgPlcyNotifnsSchdEntryUpdate = NotificationType((1, 3, 6, 1, 4, 1, 2302, 1, 1, 9, 7)).setObjects(("CFG-PLCY-MIB", "sitaraCfgPlcySchdAlias"), ("CFG-PLCY-MIB", "sitaraCfgPlcySchdDaysOfWeek"), ("CFG-PLCY-MIB", "sitaraCfgPlcySchdStartTime"), ("CFG-PLCY-MIB", "sitaraCfgPlcySchdEndTime"), ("CFG-PLCY-MIB", "sitaraCfgPlcySchdOwner"), ("CFG-PLCY-MIB", "sitaraCfgPlcySchdPolicyStatus"), ("CFG-PLCY-MIB", "sitaraCfgPlcySchdStatus"))
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsSchdEntryUpdate.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsSchdEntryUpdate.setDescription("sitaraCfgPlcyNotifnsSchdEntryUpdate notification is generated when the sitaraCfgPlcySchdStatus object's status is changed from/to active. This notification message contains SitaraCfgPlcySchdEntry objects")
sitaraCfgPlcyNotifnsLinkEntryUpdate = NotificationType((1, 3, 6, 1, 4, 1, 2302, 1, 1, 9, 8)).setObjects(("CFG-PLCY-MIB", "sitaraCfgPlcyLinkAlias"), ("CFG-PLCY-MIB", "sitaraCfgPlcyLinkPathName"), ("CFG-PLCY-MIB", "sitaraCfgPlcyLinkEnabled"), ("CFG-PLCY-MIB", "sitaraCfgPlcyLinkDscr"), ("CFG-PLCY-MIB", "sitaraCfgPlcyLinkLanBandWidth"), ("CFG-PLCY-MIB", "sitaraCfgPlcyLinkLanBurst"), ("CFG-PLCY-MIB", "sitaraCfgPlcyLinkLanAvlBandWidth"), ("CFG-PLCY-MIB", "sitaraCfgPlcyLinkWanBandWidth"), ("CFG-PLCY-MIB", "sitaraCfgPlcyLinkWanBurst"), ("CFG-PLCY-MIB", "sitaraCfgPlcyLinkWanAvlBandWidth"), ("CFG-PLCY-MIB", "sitaraCfgPlcyLinkOwner"), ("CFG-PLCY-MIB", "sitaraCfgPlcyLinkPolicyStatus"), ("CFG-PLCY-MIB", "sitaraCfgPlcyLinkStatus"))
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsLinkEntryUpdate.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsLinkEntryUpdate.setDescription("sitaraCfgPlcyNotifnsLinkEntryUpdate notification is generated when the sitaraCfgPlcyLinkStatus object's status is changed from/to active. This notification message contains SitaraCfgPlcyLinkEntry objects")
sitaraCfgPlcyNotifnsNetDestEntryUpdate = NotificationType((1, 3, 6, 1, 4, 1, 2302, 1, 1, 9, 9)).setObjects(("CFG-PLCY-MIB", "sitaraCfgPlcyLinkNetDestAddr"), ("CFG-PLCY-MIB", "sitaraCfgPlcyLinkNetDestMask"), ("CFG-PLCY-MIB", "sitaraCfgPlcyLinkNetDestOwner"), ("CFG-PLCY-MIB", "sitaraCfgPlcyLinkNetDestStatus"))
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsNetDestEntryUpdate.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsNetDestEntryUpdate.setDescription("sitaraCfgPlcyNotifnsNetDestEntryUpdate notification is generated when the sitaraCfgPlcyLinkNetDestStatus object's status is changed from/to active. This notification message contains SitaraCfgPlcyLinkNetDestEntry objects")
sitaraCfgPlcyNotifnsGroupEntryUpdate = NotificationType((1, 3, 6, 1, 4, 1, 2302, 1, 1, 9, 10)).setObjects(("CFG-PLCY-MIB", "sitaraCfgPlcyGroupAlias"), ("CFG-PLCY-MIB", "sitaraCfgPlcyGroupPathName"), ("CFG-PLCY-MIB", "sitaraCfgPlcyGroupEnabled"), ("CFG-PLCY-MIB", "sitaraCfgPlcyGroupDscr"), ("CFG-PLCY-MIB", "sitaraCfgPlcyGroupLanBandWidth"), ("CFG-PLCY-MIB", "sitaraCfgPlcyGroupLanAvlBandWidth"), ("CFG-PLCY-MIB", "sitaraCfgPlcyGroupLanBurst"), ("CFG-PLCY-MIB", "sitaraCfgPlcyGroupWanBandWidth"), ("CFG-PLCY-MIB", "sitaraCfgPlcyGroupWanAvlBandWidth"), ("CFG-PLCY-MIB", "sitaraCfgPlcyGroupWanBurst"), ("CFG-PLCY-MIB", "sitaraCfgPlcyGroupDirection"), ("CFG-PLCY-MIB", "sitaraCfgPlcyGroupParentIndex"), ("CFG-PLCY-MIB", "sitaraCfgPlcyGroupOwner"), ("CFG-PLCY-MIB", "sitaraCfgPlcyGroupPolicyStatus"), ("CFG-PLCY-MIB", "sitaraCfgPlcyGroupStatus"))
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsGroupEntryUpdate.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsGroupEntryUpdate.setDescription("sitaraCfgPlcyNotifnsGroupEntryUpdate notification is generated when the sitaraCfgPlcyGroupStatus object's status is changed from/to active. This notification message contains SitaraCfgPlcyGroupEntry objects")
sitaraCfgPlcyNotifnsClassEntryUpdate = NotificationType((1, 3, 6, 1, 4, 1, 2302, 1, 1, 9, 11)).setObjects(("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassAlias"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassPathName"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassEnabled"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassLanBandWidth"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassLanBurst"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassLanPriority"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassLanSessionBw"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassLanAdminCtrl"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassLanHttpCaching"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassLanTosEnabled"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassLanTosValue"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassLanTosMask"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassLanMtuValue"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassLanMaxDelay"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassWanBandWidth"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassWanBurst"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassWanPriority"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassWanSessionBw"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassWanAdminCtrl"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassWanHttpCaching"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassWanTosEnabled"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassWanTosValue"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassWanTosMask"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassWanMtuValue"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassWanMaxDelay"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassDirection"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassOwner"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassDscr"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassPolicyStatus"), ("CFG-PLCY-MIB", "sitaraCfgPlcyCbqClassStatus"))
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsClassEntryUpdate.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsClassEntryUpdate.setDescription("sitaraCfgPlcyNotifnsClassEntryUpdate notification is generated when the sitaraCfgPlcyCbqClassStatus object's status is changed from/to active. This notification message contains SitaraCfgPlcyCbqClassEntry objects")
sitaraCfgPlcyNotifnsFilterEntryUpdate = NotificationType((1, 3, 6, 1, 4, 1, 2302, 1, 1, 9, 12)).setObjects(("CFG-PLCY-MIB", "sitaraCfgPlcyFilterAlias"), ("CFG-PLCY-MIB", "sitaraCfgPlcyFilterPathName"), ("CFG-PLCY-MIB", "sitaraCfgPlcyFilterProtocolType"), ("CFG-PLCY-MIB", "sitaraCfgPlcyFilterLanIpStartPort"), ("CFG-PLCY-MIB", "sitaraCfgPlcyFilterLanIpEndPort"), ("CFG-PLCY-MIB", "sitaraCfgPlcyFilterLanIpAddr"), ("CFG-PLCY-MIB", "sitaraCfgPlcyFilterLanNetMask"), ("CFG-PLCY-MIB", "sitaraCfgPlcyFilterWanIpStartPort"), ("CFG-PLCY-MIB", "sitaraCfgPlcyFilterWanIpEndPort"), ("CFG-PLCY-MIB", "sitaraCfgPlcyFilterWanIpAddr"), ("CFG-PLCY-MIB", "sitaraCfgPlcyFilterWanNetMask"), ("CFG-PLCY-MIB", "sitaraCfgPlcyFilterOrder"), ("CFG-PLCY-MIB", "sitaraCfgPlcyFilterOwner"), ("CFG-PLCY-MIB", "sitaraCfgPlcyFilterDscr"), ("CFG-PLCY-MIB", "sitaraCfgPlcyFilterPolicyStatus"), ("CFG-PLCY-MIB", "sitaraCfgPlcyFilterStatus"), ("CFG-PLCY-MIB", "sitaraCfgPlcyFilterTosEnabled"), ("CFG-PLCY-MIB", "sitaraCfgPlcyFilterTosValue"), ("CFG-PLCY-MIB", "sitaraCfgPlcyFilterTosMask"))
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsFilterEntryUpdate.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsFilterEntryUpdate.setDescription("sitaraCfgPlcyNotifnsFilterEntryUpdate notification is generated when the sitaraCfgPlcyFilterstatus object's status is changed from/to active. This notification message contains SitaraCfgPlcyFilterEntry objects")
sitaraCfgPlcyNotifnsPlcySyncUp = NotificationType((1, 3, 6, 1, 4, 1, 2302, 1, 1, 9, 13)).setObjects(("CFG-PLCY-MIB", "sitaraCfgPlcyLastUpdateTime"))
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsPlcySyncUp.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsPlcySyncUp.setDescription('sitaraCfgPlcyNotifnsPlcySyncUp notification is generated when Policy agent Sync up with the policy updated by other than SNMP policy agent (Policy update could be from CLI/WebUI)')
sitaraCfgPlcyNotifnsPlcySyncUpFailure = NotificationType((1, 3, 6, 1, 4, 1, 2302, 1, 1, 9, 14)).setObjects(("CFG-PLCY-MIB", "sitaraCfgPlcyLastUpdateTime"))
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsPlcySyncUpFailure.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgPlcyNotifnsPlcySyncUpFailure.setDescription('sitaraCfgPlcyNotifnsPlcySyncUp notification is generated when Policy agent Failed to Sync up with the policy updated by other than SNMP policy agent (Policy update could be from CLI/WebUI)')
mibBuilder.exportSymbols("CFG-PLCY-MIB", sitaraCfgPlcySchdIndex=sitaraCfgPlcySchdIndex, sitaraCfgPlcySchdEndTime=sitaraCfgPlcySchdEndTime, sitaraCfgPlcyGroupLanBurst=sitaraCfgPlcyGroupLanBurst, sitaraCfgPlcyFilterWanIpAddr=sitaraCfgPlcyFilterWanIpAddr, sitaraCfgPlcyNotifnsNetDestEntryUpdate=sitaraCfgPlcyNotifnsNetDestEntryUpdate, sitaraCfgPlcyLinkNetDestAddr=sitaraCfgPlcyLinkNetDestAddr, sitaraCfgPlcyFilterWanIpEndPort=sitaraCfgPlcyFilterWanIpEndPort, sitaraCfgPlcyNotifnsFailToUpdatePolicy=sitaraCfgPlcyNotifnsFailToUpdatePolicy, sitaraCfgPlcyVersion=sitaraCfgPlcyVersion, sitaraCfgPlcyCbqClassWanTosMask=sitaraCfgPlcyCbqClassWanTosMask, sitaraCfgPlcyCbqClassWanMinBurst=sitaraCfgPlcyCbqClassWanMinBurst, sitaraCfgPlcyLinkPolicyStatus=sitaraCfgPlcyLinkPolicyStatus, sitaraCfgPlcyFilterLanIpAddr=sitaraCfgPlcyFilterLanIpAddr, sitaraCfgPlcyNotifnsFilterEntryUpdate=sitaraCfgPlcyNotifnsFilterEntryUpdate, sitaraCfgPlcySchdStartTime=sitaraCfgPlcySchdStartTime, sitaraCfgPlcyCbqClassEnabled=sitaraCfgPlcyCbqClassEnabled, sitaraCfgPlcyCbqClassWanPriority=sitaraCfgPlcyCbqClassWanPriority, sitaraCfgPlcyCbqClassDirection=sitaraCfgPlcyCbqClassDirection, sitaraCfgPlcySchd=sitaraCfgPlcySchd, sitaraCfgPlcyGroupWanBurst=sitaraCfgPlcyGroupWanBurst, sitaraCfgPlcyCbqClassLanSessionBw=sitaraCfgPlcyCbqClassLanSessionBw, sitaraCfgPlcyFilterStatus=sitaraCfgPlcyFilterStatus, sitaraCfgPlcyLinkNetDestEntry=sitaraCfgPlcyLinkNetDestEntry, sitaraCfgPlcyCrossLinkIndex=sitaraCfgPlcyCrossLinkIndex, sitaraCfgPlcySchdNextIndex=sitaraCfgPlcySchdNextIndex, sitaraCfgPlcyCrossIndex=sitaraCfgPlcyCrossIndex, sitaraCfgPlcyGroupAlias=sitaraCfgPlcyGroupAlias, sitaraCfgPlcyCbqClassNextIndex=sitaraCfgPlcyCbqClassNextIndex, sitaraCfgPlcyCbqClassLanHttpCaching=sitaraCfgPlcyCbqClassLanHttpCaching, sitaraCfgPlcyCrossSchdAlias=sitaraCfgPlcyCrossSchdAlias, sitaraCfgPlcyFilterIndex=sitaraCfgPlcyFilterIndex, sitaraCfgPlcyCbqClassWanHttpCaching=sitaraCfgPlcyCbqClassWanHttpCaching, sitaraCfgPlcyCbqClassLanTosMask=sitaraCfgPlcyCbqClassLanTosMask, sitaraCfgPlcyLinkOwner=sitaraCfgPlcyLinkOwner, sitaraCfgPlcySchdEntry=sitaraCfgPlcySchdEntry, sitaraCfgPlcyCbqClassPathName=sitaraCfgPlcyCbqClassPathName, sitaraCfgPlcyCrossCbqClassAlias=sitaraCfgPlcyCrossCbqClassAlias, sitaraCfgPlcyGroupStatus=sitaraCfgPlcyGroupStatus, sitaraCfgPlcyNotifnsCbqdReStart=sitaraCfgPlcyNotifnsCbqdReStart, sitaraCfgPlcyGroupLanBandWidth=sitaraCfgPlcyGroupLanBandWidth, sitaraCfgPlcyCbqClassLanAdminCtrl=sitaraCfgPlcyCbqClassLanAdminCtrl, sitaraCfgPlcyNotifnsClassEntryUpdate=sitaraCfgPlcyNotifnsClassEntryUpdate, sitaraCfgPlcyGroupParentIndex=sitaraCfgPlcyGroupParentIndex, sitaraCfgPlcyCrossFilterIndex=sitaraCfgPlcyCrossFilterIndex, sitaraCfgPlcySchdTable=sitaraCfgPlcySchdTable, SitaraOwnerString=SitaraOwnerString, sitaraCfgPlcyCbqClassLanBandWidth=sitaraCfgPlcyCbqClassLanBandWidth, sitaraCfgPlcyCbqClassLanMinBurst=sitaraCfgPlcyCbqClassLanMinBurst, PolicyAlias=PolicyAlias, sitaraCfgPlcyLinkNetDestMask=sitaraCfgPlcyLinkNetDestMask, sitaraCfgPlcyCbqClassLanBurst=sitaraCfgPlcyCbqClassLanBurst, sitaraCfgPlcyLinkWanBandWidth=sitaraCfgPlcyLinkWanBandWidth, sitaraCfgPlcyCrossSchdIndex=sitaraCfgPlcyCrossSchdIndex, TrafficDirection=TrafficDirection, sitaraCfgPlcyGroupNextIndex=sitaraCfgPlcyGroupNextIndex, sitaraCfgPlcyCbqClassPolicyStatus=sitaraCfgPlcyCbqClassPolicyStatus, sitaraCfgPlcyCbqClassStatus=sitaraCfgPlcyCbqClassStatus, sitaraCfgPlcyLinkAlias=sitaraCfgPlcyLinkAlias, sitaraCfgPlcyLinkNetDestTable=sitaraCfgPlcyLinkNetDestTable, sitaraCfgPlcyNotifnsSchdEntryUpdate=sitaraCfgPlcyNotifnsSchdEntryUpdate, sitaraCfgPlcyNotifnsFailToXlatePolicy=sitaraCfgPlcyNotifnsFailToXlatePolicy, sitaraCfgPlcyGroupEntry=sitaraCfgPlcyGroupEntry, sitaraCfgPlcyLinkEnabled=sitaraCfgPlcyLinkEnabled, sitaraCfgPlcyGroupTable=sitaraCfgPlcyGroupTable, sitaraCfgPlcyNotifnsPlcyUpdate=sitaraCfgPlcyNotifnsPlcyUpdate, sitaraCfgPlcyLinkPathName=sitaraCfgPlcyLinkPathName, sitaraCfgPlcyCrossGroupIndex=sitaraCfgPlcyCrossGroupIndex, sitaraCfgPlcyLink=sitaraCfgPlcyLink, sitaraCfgPlcyCbqClassLanTosValue=sitaraCfgPlcyCbqClassLanTosValue, PolicyPathName=PolicyPathName, sitaraCfgPlcyGlobalStorage=sitaraCfgPlcyGlobalStorage, sitaraCfgPlcyLinkTable=sitaraCfgPlcyLinkTable, sitaraCfgPlcyGroupEnabled=sitaraCfgPlcyGroupEnabled, sitaraCfgPlcyQClass=sitaraCfgPlcyQClass, sitaraCfgPlcyCbqClassLanMaxDelay=sitaraCfgPlcyCbqClassLanMaxDelay, sitaraCfgPlcyLinkDscr=sitaraCfgPlcyLinkDscr, sitaraCfgPlcyLinkEntry=sitaraCfgPlcyLinkEntry, sitaraCfgPlcyLinkIndex=sitaraCfgPlcyLinkIndex, sitaraCfgPlcyNotifnsGroupEntryUpdate=sitaraCfgPlcyNotifnsGroupEntryUpdate, sitaraCfgPlcyFilterTosMask=sitaraCfgPlcyFilterTosMask, sitaraCfgPlcyFilterTosValue=sitaraCfgPlcyFilterTosValue, sitaraCfgPlcyLinkNetDestNextIndex=sitaraCfgPlcyLinkNetDestNextIndex, sitaraCfgPlcyCrossCbqClassIndex=sitaraCfgPlcyCrossCbqClassIndex, sitaraCfgPlcyLinkWanAvlBandWidth=sitaraCfgPlcyLinkWanAvlBandWidth, sitaraCfgPlcyFilterEntry=sitaraCfgPlcyFilterEntry, sitaraCfgPlcyGroupDscr=sitaraCfgPlcyGroupDscr, sitaraCfgPlcyNotifnsInvalidPolicy=sitaraCfgPlcyNotifnsInvalidPolicy, sitaraCfgPlcyCbqClassWanMaxBurst=sitaraCfgPlcyCbqClassWanMaxBurst, PolicyCustomerId=PolicyCustomerId, sitaraCfgPlcyFilterOwner=sitaraCfgPlcyFilterOwner, sitaraCfgPlcyMIB=sitaraCfgPlcyMIB, sitaraCfgPlcyCrossFilterAlias=sitaraCfgPlcyCrossFilterAlias, sitaraCfgPlcyFilterNextIndex=sitaraCfgPlcyFilterNextIndex, sitaraCfgPlcyCbqClassWanMtuValue=sitaraCfgPlcyCbqClassWanMtuValue, sitaraCfgPlcyCrossGroup=sitaraCfgPlcyCrossGroup, sitaraCfgPlcyCbqClassWanTosValue=sitaraCfgPlcyCbqClassWanTosValue, DaysOfWeek=DaysOfWeek, sitaraCfgPlcyCrossLinkAlias=sitaraCfgPlcyCrossLinkAlias, sitaraCfgPlcyLinkNextIndex=sitaraCfgPlcyLinkNextIndex, sitaraCfgPlcyFilterProtocolType=sitaraCfgPlcyFilterProtocolType, sitaraCfgPlcyCbqClassAlias=sitaraCfgPlcyCbqClassAlias, sitaraCfgPlcyCrossGroupAlias=sitaraCfgPlcyCrossGroupAlias, sitaraCfgPlcySchdAlias=sitaraCfgPlcySchdAlias, sitaraCfgPlcyFilter=sitaraCfgPlcyFilter, sitaraCfgPlcyCbqClassTable=sitaraCfgPlcyCbqClassTable, AdmissionState=AdmissionState, sitaraCfgPlcyFilterOrder=sitaraCfgPlcyFilterOrder, sitaraCfgPlcyNotifnsFailToReStart=sitaraCfgPlcyNotifnsFailToReStart, sitaraCfgPlcyFilterTable=sitaraCfgPlcyFilterTable, sitaraCfgPlcyPerRowUpdate=sitaraCfgPlcyPerRowUpdate, sitaraCfgPlcyCrossIndexTableEntry=sitaraCfgPlcyCrossIndexTableEntry, sitaraCfgPlcyLinkStatus=sitaraCfgPlcyLinkStatus, sitaraCfgPlcyCbqClassLanMaxBurst=sitaraCfgPlcyCbqClassLanMaxBurst, PolicyPriority=PolicyPriority, sitaraCfg=sitaraCfg, sitaraCfgPlcyGroupPathName=sitaraCfgPlcyGroupPathName, sitaraCfgPlcyFilterWanIpStartPort=sitaraCfgPlcyFilterWanIpStartPort, PolicyDisplayString=PolicyDisplayString, sitaraCfgPlcyCbqClassIndex=sitaraCfgPlcyCbqClassIndex, sitaraCfgPlcyCbqClassWanSessionBw=sitaraCfgPlcyCbqClassWanSessionBw, sitaraCfgPlcyGroupIndex=sitaraCfgPlcyGroupIndex, sitaraCfgPlcyCbqClassWanAdminCtrl=sitaraCfgPlcyCbqClassWanAdminCtrl, sitaraCfgPlcyCrossIndexTable=sitaraCfgPlcyCrossIndexTable, sitaraCfgPlcyGroupPolicyStatus=sitaraCfgPlcyGroupPolicyStatus, sitaraCfgPlcyGroupWanBandWidth=sitaraCfgPlcyGroupWanBandWidth, sitaraCfgPlcyFilterPolicyStatus=sitaraCfgPlcyFilterPolicyStatus, PYSNMP_MODULE_ID=sitaraCfgPlcyMIB, sitaraCfgPlcySchdPolicyStatus=sitaraCfgPlcySchdPolicyStatus, sitaraCfgPlcyCbqClassWanMaxDelay=sitaraCfgPlcyCbqClassWanMaxDelay, sitaraCfgPlcySchdDaysOfWeek=sitaraCfgPlcySchdDaysOfWeek, sitaraCfgPlcyCbqClassWanBandWidth=sitaraCfgPlcyCbqClassWanBandWidth, sitaraCfgPlcyGroup=sitaraCfgPlcyGroup, sitaraCfgPlcyCrossLinkNetDestIndex=sitaraCfgPlcyCrossLinkNetDestIndex, sitaraCfgPlcyNotifnsLinkEntryUpdate=sitaraCfgPlcyNotifnsLinkEntryUpdate, sitaraCfgPlcyCbqClassDscr=sitaraCfgPlcyCbqClassDscr, sitaraCfgPlcyGroupOwner=sitaraCfgPlcyGroupOwner, sitaraCfgPlcy=sitaraCfgPlcy, sitaraCfgPlcyApplyError=sitaraCfgPlcyApplyError, sitaraCfgPlcyCbqClass=sitaraCfgPlcyCbqClass, PolicyStatus=PolicyStatus, sitaraCfgPlcyFilterLanNetMask=sitaraCfgPlcyFilterLanNetMask, sitaraCfgPlcyFilterAlias=sitaraCfgPlcyFilterAlias, TimeAndZone=TimeAndZone, sitaraCfgPlcyLinkWanBurst=sitaraCfgPlcyLinkWanBurst, sitaraCfgPlcyCbqClassLanPriority=sitaraCfgPlcyCbqClassLanPriority, sitaraCfgPlcyLinkNetDestIndex=sitaraCfgPlcyLinkNetDestIndex, sitaraCfgPlcyCbqClassEntry=sitaraCfgPlcyCbqClassEntry, sitaraCfgPlcyCbqClassOwner=sitaraCfgPlcyCbqClassOwner, sitaraCfgPlcySchdStatus=sitaraCfgPlcySchdStatus, sitaraCfgPlcyCbqClassWanBurst=sitaraCfgPlcyCbqClassWanBurst, sitaraCfgPlcyCbqClassLanTosEnabled=sitaraCfgPlcyCbqClassLanTosEnabled, sitaraCfgPlcyFilterPathName=sitaraCfgPlcyFilterPathName, sitaraCfgPlcyGroupWanAvlBandWidth=sitaraCfgPlcyGroupWanAvlBandWidth, sitaraCfgPlcyFilterTosEnabled=sitaraCfgPlcyFilterTosEnabled, sitaraCfgPlcyLinkLanAvlBandWidth=sitaraCfgPlcyLinkLanAvlBandWidth, sitaraCfgPlcyAction=sitaraCfgPlcyAction, sitaraCfgPlcyNotifnsPlcySyncUpFailure=sitaraCfgPlcyNotifnsPlcySyncUpFailure, sitaraCfgPlcyGroupLanAvlBandWidth=sitaraCfgPlcyGroupLanAvlBandWidth, sitaraCfgPlcyNotifns=sitaraCfgPlcyNotifns, sitaraCfgPlcyLinkLanBurst=sitaraCfgPlcyLinkLanBurst, sitaraCfgPlcyGroupDirection=sitaraCfgPlcyGroupDirection, sitara=sitara, sitaraCfgPlcyCbqClassLanMtuValue=sitaraCfgPlcyCbqClassLanMtuValue, sitaraCfgPlcyLinkLanBandWidth=sitaraCfgPlcyLinkLanBandWidth, sitaraCfgPlcyGenlObjs=sitaraCfgPlcyGenlObjs, sitaraCfgPlcyFilterLanIpStartPort=sitaraCfgPlcyFilterLanIpStartPort, sitaraCfgPlcyLastUpdateTime=sitaraCfgPlcyLastUpdateTime, sitaraCfgPlcyLinkNetDestOwner=sitaraCfgPlcyLinkNetDestOwner, sitaraCfgPlcyFilterLanIpEndPort=sitaraCfgPlcyFilterLanIpEndPort, sitaraCfgPlcyLinkNetDestStatus=sitaraCfgPlcyLinkNetDestStatus, sitaraCfgPlcyFilterDscr=sitaraCfgPlcyFilterDscr, sitaraCfgPlcyNotifnsPlcySyncUp=sitaraCfgPlcyNotifnsPlcySyncUp, sitaraCfgPlcyCbqClassWanTosEnabled=sitaraCfgPlcyCbqClassWanTosEnabled, sitaraCfgPlcyFilterWanNetMask=sitaraCfgPlcyFilterWanNetMask, sitaraCfgPlcySchdOwner=sitaraCfgPlcySchdOwner)
