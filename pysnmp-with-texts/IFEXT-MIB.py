#
# PySNMP MIB module IFEXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IFEXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:53:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ifExt, = mibBuilder.importSymbols("APENT-MIB", "ifExt")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, NotificationType, Unsigned32, ModuleIdentity, iso, TimeTicks, Bits, Gauge32, IpAddress, Integer32, Counter32, Counter64, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "NotificationType", "Unsigned32", "ModuleIdentity", "iso", "TimeTicks", "Bits", "Gauge32", "IpAddress", "Integer32", "Counter32", "Counter64", "MibIdentifier")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
ifExtMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2467, 1, 24, 1))
if mibBuilder.loadTexts: ifExtMib.setLastUpdated('9801282000Z')
if mibBuilder.loadTexts: ifExtMib.setOrganization('ArrowPoint Communications Inc.')
if mibBuilder.loadTexts: ifExtMib.setContactInfo('Postal: ArrowPoint Communications Inc. 50 Nagog Park Acton, Massachusetts 01720 Tel: +1 978-206-3000 option 1 E-Mail: support@arrowpoint.com')
if mibBuilder.loadTexts: ifExtMib.setDescription('This MIB is not external viewable. It provides a portion of the interface entry table for internal consumption.')
apIfTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 24, 2), )
if mibBuilder.loadTexts: apIfTable.setStatus('current')
if mibBuilder.loadTexts: apIfTable.setDescription('A table of interface entries')
apIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 24, 2, 1), ).setIndexNames((0, "IFEXT-MIB", "apIfIndex"))
if mibBuilder.loadTexts: apIfEntry.setStatus('current')
if mibBuilder.loadTexts: apIfEntry.setDescription('ArrowPoint interface record')
apIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 24, 2, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIfIndex.setStatus('current')
if mibBuilder.loadTexts: apIfIndex.setDescription('The ifIndex of the interface entry')
apIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 24, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 18, 22, 23, 30, 32, 54, 81, 82, 108, 117, 1005, 1006))).clone(namedValues=NamedValues(("fe", 6), ("ds1", 18), ("console", 22), ("ppp", 23), ("ds3", 30), ("fr", 32), ("ct", 54), ("ds0", 81), ("ds0b", 82), ("pppmm", 108), ("ge", 117), ("madlan", 1005), ("sar", 1006)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIfType.setStatus('current')
if mibBuilder.loadTexts: apIfType.setDescription('The ifType of the interface entry')
apIfCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 24, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("physical", 1), ("not-physical", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIfCategory.setStatus('current')
if mibBuilder.loadTexts: apIfCategory.setDescription('The if category of the interface entry')
apIfSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 24, 2, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIfSlot.setStatus('current')
if mibBuilder.loadTexts: apIfSlot.setDescription('The slot associated with this interface')
apIfPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 24, 2, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIfPort.setStatus('current')
if mibBuilder.loadTexts: apIfPort.setDescription('The physical port associated with this interface')
apIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 24, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIfStatus.setStatus('current')
if mibBuilder.loadTexts: apIfStatus.setDescription('This status object for this row')
apIfCctTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 24, 3), )
if mibBuilder.loadTexts: apIfCctTable.setStatus('current')
if mibBuilder.loadTexts: apIfCctTable.setDescription('A table of interface entries')
apIfCctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 24, 3, 1), ).setIndexNames((0, "IFEXT-MIB", "apIfCctIfIndex"))
if mibBuilder.loadTexts: apIfCctEntry.setStatus('current')
if mibBuilder.loadTexts: apIfCctEntry.setDescription('ArrowPoint circuit record')
apIfCctIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 24, 3, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIfCctIfIndex.setStatus('current')
if mibBuilder.loadTexts: apIfCctIfIndex.setDescription('The ifIndex of the circuit')
apIfCctStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 24, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIfCctStatus.setStatus('current')
if mibBuilder.loadTexts: apIfCctStatus.setDescription('This status object for this row')
apIfRedundantSCM = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 24, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("present", 1), ("not-present", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIfRedundantSCM.setStatus('current')
if mibBuilder.loadTexts: apIfRedundantSCM.setDescription('The presence of the redundant SCM')
mibBuilder.exportSymbols("IFEXT-MIB", ifExtMib=ifExtMib, apIfCctIfIndex=apIfCctIfIndex, apIfRedundantSCM=apIfRedundantSCM, PYSNMP_MODULE_ID=ifExtMib, apIfIndex=apIfIndex, apIfType=apIfType, apIfStatus=apIfStatus, apIfEntry=apIfEntry, apIfCategory=apIfCategory, apIfTable=apIfTable, apIfPort=apIfPort, apIfCctStatus=apIfCctStatus, apIfCctEntry=apIfCctEntry, apIfSlot=apIfSlot, apIfCctTable=apIfCctTable)
