#
# PySNMP MIB module TRAPEZE-NETWORKS-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TRAPEZE-NETWORKS-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:27:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Unsigned32, Counter64, iso, Integer32, ObjectIdentity, ModuleIdentity, Counter32, NotificationType, Gauge32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Unsigned32", "Counter64", "iso", "Integer32", "ObjectIdentity", "ModuleIdentity", "Counter32", "NotificationType", "Gauge32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
trpzMibs, = mibBuilder.importSymbols("TRAPEZE-NETWORKS-ROOT-MIB", "trpzMibs")
trpzSystemMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 14525, 4, 8))
trpzSystemMib.setRevisions(('2007-08-14 00:12', '2007-05-04 00:10', '2007-03-14 00:07', '2006-11-09 00:04', '2006-06-06 00:03',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: trpzSystemMib.setRevisionsDescriptions(('v3.0.1: Added new objects to support Power Supply status. (for 6.2 release)', 'v2.1.0: Obsoleted two previously deprecated objects (for 6.2 release)', "v2.0.0: Added new objects to support CPU load and memory (RAM) usage details: for last few seconds (''instant''), minute, 5 minutes, hour, day, 3 days (for 6.0 release)", 'v1.0.3: Removed unused imports', 'v1.0.2: Initial version, for 5.0 release',))
if mibBuilder.loadTexts: trpzSystemMib.setLastUpdated('200708140012Z')
if mibBuilder.loadTexts: trpzSystemMib.setOrganization('Trapeze Networks')
if mibBuilder.loadTexts: trpzSystemMib.setContactInfo('Trapeze Networks Technical Support www.trapezenetworks.com US: 866.TRPZ.TAC International: 925.474.2400 support@trapezenetworks.com')
if mibBuilder.loadTexts: trpzSystemMib.setDescription("System objects for Trapeze Networks wireless switches. Copyright 2007 Trapeze Networks, Inc. All rights reserved. This Trapeze Networks SNMP Management Information Base Specification (Specification) embodies Trapeze Networks' confidential and proprietary intellectual property. Trapeze Networks retains all title and ownership in the Specification, including any revisions. This Specification is supplied 'AS IS' and Trapeze Networks makes no warranty, either express or implied, as to the use, operation, condition, or performance of the Specification.")
class TrpzSysCpuLoad(TextualConvention, Unsigned32):
    description = 'CPU load in percents'
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 100)

class TrpzSysMemoryAmount(TextualConvention, Unsigned32):
    description = 'Memory amount in KBytes (1024 octets)'
    status = 'current'

class TrpzSysPowerSupplyStatus(TextualConvention, Integer32):
    description = 'The status of a Power Supply.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("other", 1), ("unknown", 2), ("ac-failed", 3), ("dc-failed", 4), ("ac-ok-dc-ok", 5))

trpzSysObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1))
trpzSysDataObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1))
trpzSysCpuMemoryUsedBytes = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysCpuMemoryUsedBytes.setStatus('obsolete')
if mibBuilder.loadTexts: trpzSysCpuMemoryUsedBytes.setDescription('CPU memory used in bytes. Obsoleted by trpzSysCpuMemoryInstantUsage.')
trpzSysCpuMemoryTotalBytes = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysCpuMemoryTotalBytes.setStatus('obsolete')
if mibBuilder.loadTexts: trpzSysCpuMemoryTotalBytes.setDescription('CPU total physical memory in bytes. Obsoleted by trpzSysCpuMemorySize.')
trpzSysFlashMemoryUsedBytes = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysFlashMemoryUsedBytes.setStatus('current')
if mibBuilder.loadTexts: trpzSysFlashMemoryUsedBytes.setDescription('Flash memory used in bytes.')
trpzSysFlashMemoryTotalBytes = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysFlashMemoryTotalBytes.setStatus('current')
if mibBuilder.loadTexts: trpzSysFlashMemoryTotalBytes.setDescription('Flash memory available in bytes.')
trpzSysCpuAverageLoad = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 5), TrpzSysCpuLoad()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysCpuAverageLoad.setStatus('current')
if mibBuilder.loadTexts: trpzSysCpuAverageLoad.setDescription('CPU load average since system startup.')
trpzSysCpuMemorySize = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 6), TrpzSysMemoryAmount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysCpuMemorySize.setStatus('current')
if mibBuilder.loadTexts: trpzSysCpuMemorySize.setDescription('Maximum available CPU Memory (RAM) in KBytes. This is the memory available to the Wireless Switch software. May be less than physical RAM size.')
trpzSysCpuLoadDetail = MibIdentifier((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 11))
trpzSysCpuMemoryUsageDetail = MibIdentifier((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 12))
trpzSysChassisComponents = MibIdentifier((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 13))
trpzSysCpuInstantLoad = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 11, 1), TrpzSysCpuLoad()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysCpuInstantLoad.setStatus('current')
if mibBuilder.loadTexts: trpzSysCpuInstantLoad.setDescription('CPU instant load (for last few seconds).')
trpzSysCpuLastMinuteLoad = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 11, 2), TrpzSysCpuLoad()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysCpuLastMinuteLoad.setStatus('current')
if mibBuilder.loadTexts: trpzSysCpuLastMinuteLoad.setDescription('CPU load for last minute.')
trpzSysCpuLast5MinutesLoad = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 11, 3), TrpzSysCpuLoad()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysCpuLast5MinutesLoad.setStatus('current')
if mibBuilder.loadTexts: trpzSysCpuLast5MinutesLoad.setDescription('CPU load for last 5 minutes.')
trpzSysCpuLastHourLoad = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 11, 4), TrpzSysCpuLoad()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysCpuLastHourLoad.setStatus('current')
if mibBuilder.loadTexts: trpzSysCpuLastHourLoad.setDescription('CPU load for last hour.')
trpzSysCpuLastDayLoad = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 11, 5), TrpzSysCpuLoad()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysCpuLastDayLoad.setStatus('current')
if mibBuilder.loadTexts: trpzSysCpuLastDayLoad.setDescription('CPU load for last day.')
trpzSysCpuLast3DaysLoad = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 11, 6), TrpzSysCpuLoad()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysCpuLast3DaysLoad.setStatus('current')
if mibBuilder.loadTexts: trpzSysCpuLast3DaysLoad.setDescription('CPU load for last 3 days.')
trpzSysCpuMemoryInstantUsage = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 12, 1), TrpzSysMemoryAmount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysCpuMemoryInstantUsage.setStatus('current')
if mibBuilder.loadTexts: trpzSysCpuMemoryInstantUsage.setDescription('Instant memory usage (RAM) in KBytes (for last few seconds). Ranges between 0 and trpzSysCpuMemorySize.')
trpzSysCpuMemoryLastMinuteUsage = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 12, 2), TrpzSysMemoryAmount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysCpuMemoryLastMinuteUsage.setStatus('current')
if mibBuilder.loadTexts: trpzSysCpuMemoryLastMinuteUsage.setDescription('Memory usage (RAM) for last minute in KBytes. Ranges between 0 and trpzSysCpuMemorySize.')
trpzSysCpuMemoryLast5MinutesUsage = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 12, 3), TrpzSysMemoryAmount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysCpuMemoryLast5MinutesUsage.setStatus('current')
if mibBuilder.loadTexts: trpzSysCpuMemoryLast5MinutesUsage.setDescription('Memory usage (RAM) for last 5 minutes in KBytes. Ranges between 0 and trpzSysCpuMemorySize.')
trpzSysCpuMemoryLastHourUsage = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 12, 4), TrpzSysMemoryAmount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysCpuMemoryLastHourUsage.setStatus('current')
if mibBuilder.loadTexts: trpzSysCpuMemoryLastHourUsage.setDescription('Memory usage (RAM) for last hour in KBytes. Ranges between 0 and trpzSysCpuMemorySize.')
trpzSysCpuMemoryLastDayUsage = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 12, 5), TrpzSysMemoryAmount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysCpuMemoryLastDayUsage.setStatus('current')
if mibBuilder.loadTexts: trpzSysCpuMemoryLastDayUsage.setDescription('Memory usage (RAM) for last day in KBytes. Ranges between 0 and trpzSysCpuMemorySize.')
trpzSysCpuMemoryLast3DaysUsage = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 12, 6), TrpzSysMemoryAmount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysCpuMemoryLast3DaysUsage.setStatus('current')
if mibBuilder.loadTexts: trpzSysCpuMemoryLast3DaysUsage.setDescription('Memory usage (RAM) for last 3 days in KBytes. Ranges between 0 and trpzSysCpuMemorySize.')
trpzSysChasCompPowerSupplies = MibIdentifier((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 13, 1))
trpzSysNumPowerSuppliesSupported = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 13, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysNumPowerSuppliesSupported.setStatus('current')
if mibBuilder.loadTexts: trpzSysNumPowerSuppliesSupported.setDescription('The number of power supplies supported by the Wireless Switch. This is the upper limit of the number of entries in the power supply table, trpzSysPowerSupplyTable.')
trpzSysPowerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 13, 1, 2), )
if mibBuilder.loadTexts: trpzSysPowerSupplyTable.setStatus('current')
if mibBuilder.loadTexts: trpzSysPowerSupplyTable.setDescription('Table of power supplies actually installed on the Wireless Switch.')
trpzSysPowerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 13, 1, 2, 1), ).setIndexNames((0, "TRAPEZE-NETWORKS-SYSTEM-MIB", "trpzSysPowerSupplyDeviceOID"))
if mibBuilder.loadTexts: trpzSysPowerSupplyEntry.setStatus('current')
if mibBuilder.loadTexts: trpzSysPowerSupplyEntry.setDescription('An entry in the trpzSysPowerSupplyTable table.')
trpzSysPowerSupplyDeviceOID = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 13, 1, 2, 1, 1), ObjectIdentifier())
if mibBuilder.loadTexts: trpzSysPowerSupplyDeviceOID.setStatus('current')
if mibBuilder.loadTexts: trpzSysPowerSupplyDeviceOID.setDescription('OID value used to identify this chassis component as indicated in Registration MIB.')
trpzSysPowerSupplyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 13, 1, 2, 1, 2), TrpzSysPowerSupplyStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysPowerSupplyStatus.setStatus('current')
if mibBuilder.loadTexts: trpzSysPowerSupplyStatus.setDescription('Status of the power supply.')
trpzSysPowerSupplyDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 8, 1, 1, 13, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSysPowerSupplyDescr.setStatus('current')
if mibBuilder.loadTexts: trpzSysPowerSupplyDescr.setDescription("A human interpretable description of this power supply, for example 'Left Power Supply'.")
mibBuilder.exportSymbols("TRAPEZE-NETWORKS-SYSTEM-MIB", trpzSysCpuMemoryLastDayUsage=trpzSysCpuMemoryLastDayUsage, trpzSystemMib=trpzSystemMib, trpzSysPowerSupplyStatus=trpzSysPowerSupplyStatus, trpzSysCpuMemoryLast5MinutesUsage=trpzSysCpuMemoryLast5MinutesUsage, trpzSysCpuMemorySize=trpzSysCpuMemorySize, trpzSysCpuMemoryTotalBytes=trpzSysCpuMemoryTotalBytes, trpzSysPowerSupplyDescr=trpzSysPowerSupplyDescr, trpzSysPowerSupplyEntry=trpzSysPowerSupplyEntry, trpzSysCpuMemoryUsageDetail=trpzSysCpuMemoryUsageDetail, trpzSysNumPowerSuppliesSupported=trpzSysNumPowerSuppliesSupported, trpzSysCpuMemoryUsedBytes=trpzSysCpuMemoryUsedBytes, trpzSysCpuInstantLoad=trpzSysCpuInstantLoad, TrpzSysMemoryAmount=TrpzSysMemoryAmount, trpzSysPowerSupplyTable=trpzSysPowerSupplyTable, trpzSysPowerSupplyDeviceOID=trpzSysPowerSupplyDeviceOID, trpzSysCpuLastMinuteLoad=trpzSysCpuLastMinuteLoad, trpzSysCpuMemoryLast3DaysUsage=trpzSysCpuMemoryLast3DaysUsage, trpzSysCpuLoadDetail=trpzSysCpuLoadDetail, trpzSysCpuLastDayLoad=trpzSysCpuLastDayLoad, trpzSysObjects=trpzSysObjects, trpzSysFlashMemoryTotalBytes=trpzSysFlashMemoryTotalBytes, trpzSysCpuLast3DaysLoad=trpzSysCpuLast3DaysLoad, TrpzSysPowerSupplyStatus=TrpzSysPowerSupplyStatus, trpzSysChassisComponents=trpzSysChassisComponents, trpzSysCpuAverageLoad=trpzSysCpuAverageLoad, trpzSysDataObjects=trpzSysDataObjects, trpzSysChasCompPowerSupplies=trpzSysChasCompPowerSupplies, trpzSysCpuLast5MinutesLoad=trpzSysCpuLast5MinutesLoad, PYSNMP_MODULE_ID=trpzSystemMib, trpzSysCpuMemoryLastMinuteUsage=trpzSysCpuMemoryLastMinuteUsage, TrpzSysCpuLoad=TrpzSysCpuLoad, trpzSysFlashMemoryUsedBytes=trpzSysFlashMemoryUsedBytes, trpzSysCpuMemoryLastHourUsage=trpzSysCpuMemoryLastHourUsage, trpzSysCpuMemoryInstantUsage=trpzSysCpuMemoryInstantUsage, trpzSysCpuLastHourLoad=trpzSysCpuLastHourLoad)
