#
# PySNMP MIB module LEFTHAND-NETWORKS-NUS-COMMON-NTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LEFTHAND-NETWORKS-NUS-COMMON-NTP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:06:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
lhnModules, = mibBuilder.importSymbols("LEFTHAND-NETWORKS-GLOBAL-REG", "lhnModules")
lhnNusCommonNTP, = mibBuilder.importSymbols("LEFTHAND-NETWORKS-NUS-COMMON-MIB", "lhnNusCommonNTP")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ModuleIdentity, Bits, NotificationType, TimeTicks, Gauge32, IpAddress, iso, Integer32, Unsigned32, Counter64, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ModuleIdentity", "Bits", "NotificationType", "TimeTicks", "Gauge32", "IpAddress", "iso", "Integer32", "Unsigned32", "Counter64", "Counter32")
TextualConvention, TruthValue, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "RowStatus", "DisplayString")
lhnNusCommonNTPModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 9804, 1, 1, 7))
if mibBuilder.loadTexts: lhnNusCommonNTPModule.setLastUpdated('0106010000Z')
if mibBuilder.loadTexts: lhnNusCommonNTPModule.setOrganization('LeftHand Networks, Inc.')
if mibBuilder.loadTexts: lhnNusCommonNTPModule.setContactInfo(' Author: Jose Faria LeftHand Networks postal: 6185 Arapahoe Rd. Boulder, CO 80301 USA email: jfaria@lefthandnetworks.com phone: +1 303 449-4100 ')
if mibBuilder.loadTexts: lhnNusCommonNTPModule.setDescription('NTP items for NUS Devices')
ntpCount = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpCount.setStatus('current')
if mibBuilder.loadTexts: ntpCount.setDescription('count of NTP settings')
ntpTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 5, 2), )
if mibBuilder.loadTexts: ntpTable.setStatus('current')
if mibBuilder.loadTexts: ntpTable.setDescription('Table of NTP settings for NUS')
ntpStart = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 5, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpStart.setStatus('current')
if mibBuilder.loadTexts: ntpStart.setDescription('start NTP when set to true')
ntpStop = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 5, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpStop.setStatus('current')
if mibBuilder.loadTexts: ntpStop.setDescription('stop NTP when set to true')
ntpRestart = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 5, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpRestart.setStatus('current')
if mibBuilder.loadTexts: ntpRestart.setDescription('restart NTP when set to true')
ntpCheck = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 5, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpCheck.setStatus('current')
if mibBuilder.loadTexts: ntpCheck.setDescription('check NTP when set to true')
timeGMTTime = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 5, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeGMTTime.setStatus('current')
if mibBuilder.loadTexts: timeGMTTime.setDescription('GMT Time')
timeTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 5, 8), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeTimeZone.setStatus('current')
if mibBuilder.loadTexts: timeTimeZone.setDescription('Local Time Zone')
ntpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 5, 2, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-NTP-MIB", "ntpIndex"))
if mibBuilder.loadTexts: ntpEntry.setStatus('current')
if mibBuilder.loadTexts: ntpEntry.setDescription('row of NTP settings')
ntpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 5, 2, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ntpIndex.setStatus('current')
if mibBuilder.loadTexts: ntpIndex.setDescription('index to NTP Table')
ntpPreferred = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 5, 2, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpPreferred.setStatus('current')
if mibBuilder.loadTexts: ntpPreferred.setDescription('true if preferred, false otherwise')
ntpServer = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 5, 2, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpServer.setStatus('current')
if mibBuilder.loadTexts: ntpServer.setDescription('server name or ip address for a NTP entry')
ntpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 5, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ntpRowStatus.setStatus('current')
if mibBuilder.loadTexts: ntpRowStatus.setDescription('The row status')
mibBuilder.exportSymbols("LEFTHAND-NETWORKS-NUS-COMMON-NTP-MIB", ntpServer=ntpServer, lhnNusCommonNTPModule=lhnNusCommonNTPModule, ntpStart=ntpStart, ntpIndex=ntpIndex, timeTimeZone=timeTimeZone, ntpCheck=ntpCheck, ntpEntry=ntpEntry, ntpRowStatus=ntpRowStatus, ntpPreferred=ntpPreferred, PYSNMP_MODULE_ID=lhnNusCommonNTPModule, ntpTable=ntpTable, timeGMTTime=timeGMTTime, ntpRestart=ntpRestart, ntpCount=ntpCount, ntpStop=ntpStop)
