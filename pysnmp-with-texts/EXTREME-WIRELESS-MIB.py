#
# PySNMP MIB module EXTREME-WIRELESS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EXTREME-BASE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:07:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
extremeLAC, ExtremeDeviceId, extremeV2Traps, ClientAuthType, extremeAgent, WirelessRemoteConnectBindingType, WPACipherSet, WPAKeyMgmtSet, extremeAP = mibBuilder.importSymbols("EXTREME-BASE-MIB", "extremeLAC", "ExtremeDeviceId", "extremeV2Traps", "ClientAuthType", "extremeAgent", "WirelessRemoteConnectBindingType", "WPACipherSet", "WPAKeyMgmtSet", "extremeAP")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, IpAddress, Integer32, Gauge32, Counter32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, iso, ModuleIdentity, ObjectIdentity, TimeTicks, Bits, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "Integer32", "Gauge32", "Counter32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "iso", "ModuleIdentity", "ObjectIdentity", "TimeTicks", "Bits", "Unsigned32")
MacAddress, RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
extremeWireless = ModuleIdentity((1, 3, 6, 1, 4, 1, 1916, 1, 25))
if mibBuilder.loadTexts: extremeWireless.setLastUpdated('0211230000Z')
if mibBuilder.loadTexts: extremeWireless.setOrganization('Extreme Networks, Inc.')
if mibBuilder.loadTexts: extremeWireless.setContactInfo('www.extremenetworks.com')
if mibBuilder.loadTexts: extremeWireless.setDescription('Extreme Wireless Access Tables')
extremeAPTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 5))
extremeAPTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 5, 0))
extremeLACGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 1))
extremeProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2))
class Dot11Type(TextualConvention, Integer32):
    description = 'The current standard supports A, B, G interfaces.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("a", 1), ("b", 2), ("g", 3), ("bg", 4))

class Dot11Speed(TextualConvention, Bits):
    description = 'Specifies the speed in Mbps to use for the interface. A value of 0 indicates auto.'
    status = 'current'
    namedValues = NamedValues(("speed1", 0), ("speed2", 1), ("speed5", 2), ("speed11", 3), ("speed6", 4), ("speed9", 5), ("speed12", 6), ("speed18", 7), ("speed24", 8), ("speed36", 9), ("speed48", 10), ("speed54", 11))

class Dot11AChannel(TextualConvention, Bits):
    description = 'Specifies the channel number for 802.11A interface.'
    status = 'current'
    namedValues = NamedValues(("channel36", 0), ("channel40", 1), ("channel44", 2), ("channel52", 3), ("channel56", 4), ("channel60", 5), ("channel64", 6), ("channel100", 7), ("channel104", 8), ("channel108", 9), ("channel112", 10), ("channel116", 11), ("channel120", 12), ("channel124", 13), ("channel128", 14), ("channel132", 15), ("channel140", 16))

class Dot11AuthMode(TextualConvention, Integer32):
    description = 'Specifies the allowed authentication type.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("open", 0), ("shared", 1))

class NetworkAuthMode(TextualConvention, Integer32):
    description = 'Specifies the allowed authentication type.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("none", 0), ("webNetlogin", 1), ("macRadius", 2), ("wpaPlusLegacy", 3), ("wpaOnly", 4), ("wpa2PlusWPA", 5), ("wpa2Only", 6))

class ExtremeWirelessCountryCode(TextualConvention, Integer32):
    description = 'Specifies the country code the AP operates in.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(840, 392, 158, 554, 8, 12, 32, 51, 36, 40, 31, 48, 112, 56, 84, 68, 76, 96, 100, 124, 152, 156, 170, 188, 191, 196, 203, 208, 214, 218, 818, 222, 233, 234, 246, 250, 268, 276, 300, 320, 340, 344, 348, 352, 356, 360, 364, 368, 372, 376, 380, 388, 393, 394, 395, 400, 398, 404, 408, 410, 411, 414, 428, 422, 434, 438, 440, 442, 446, 807, 458, 484, 492, 504, 528, 558, 578, 512, 586, 591, 600, 604, 608, 616, 620, 630, 634, 642, 643, 682, 702, 703, 705, 710, 724, 752, 756, 760, 764, 780, 788, 792, 784, 804, 826, 858, 860, 862, 704, 887, 716, 0, 998, 999))
    namedValues = NamedValues(("unitedStates", 840), ("japan", 392), ("taiwan", 158), ("newZealand", 554), ("albania", 8), ("algeria", 12), ("argentina", 32), ("armenia", 51), ("australia", 36), ("austria", 40), ("azerbaijan", 31), ("bahrain", 48), ("belarus", 112), ("belgium", 56), ("belize", 84), ("bolivia", 68), ("brazil", 76), ("bruneiDarussalam", 96), ("bulgaria", 100), ("canada", 124), ("chile", 152), ("china", 156), ("colombia", 170), ("costaRica", 188), ("croatia", 191), ("cyprus", 196), ("czech", 203), ("denmark", 208), ("dominicanRepublic", 214), ("ecuador", 218), ("egypt", 818), ("elSalvador", 222), ("estonia", 233), ("faeroeIslands", 234), ("finland", 246), ("france", 250), ("georgia", 268), ("germany", 276), ("greece", 300), ("guatemala", 320), ("honduras", 340), ("hongKong", 344), ("hungary", 348), ("iceland", 352), ("india", 356), ("indonesia", 360), ("iran", 364), ("iraq", 368), ("ireland", 372), ("israel", 376), ("italy", 380), ("jamaica", 388), ("japan1", 393), ("japan2", 394), ("japan3", 395), ("jordan", 400), ("kazakhstan", 398), ("kenya", 404), ("koreaNorth", 408), ("koreaRoc", 410), ("koreaRoc2", 411), ("kuwait", 414), ("latvia", 428), ("lebanon", 422), ("libya", 434), ("liechtenstein", 438), ("lithuania", 440), ("luxembourg", 442), ("macau", 446), ("macedonia", 807), ("malaysia", 458), ("mexico", 484), ("monaco", 492), ("morocco", 504), ("netherlands", 528), ("nicaragua", 558), ("norway", 578), ("oman", 512), ("pakistan", 586), ("panama", 591), ("paraguay", 600), ("peru", 604), ("philippines", 608), ("poland", 616), ("portugal", 620), ("puertoRico", 630), ("qatar", 634), ("romania", 642), ("russia", 643), ("saudiArabia", 682), ("singapore", 702), ("slovakia", 703), ("slovenia", 705), ("southAfrica", 710), ("spain", 724), ("sweden", 752), ("switzerland", 756), ("syria", 760), ("thailand", 764), ("trinidadTYobago", 780), ("tunisia", 788), ("turkey", 792), ("uae", 784), ("ukraine", 804), ("unitedKingdom", 826), ("uruguay", 858), ("uzbekistan", 860), ("venezuela", 862), ("vietNam", 704), ("yemen", 887), ("zimbabwe", 716), ("restOfTheWorld", 0), ("extremeDefault", 998), ("unknown", 999))

class ExtremeWirelessAntennaType(TextualConvention, Integer32):
    description = 'Specifies Antenna type attached to the access-point. The integrated antenna is specified by CTL table on PCI eeprom. The detachable model 15901 is an omni-directional antenna. The detachable model 15902 is a directional antenna.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("integrated", 0), ("detachable15901", 1), ("detachable15902", 2))

class ExtremeWirelessAntennaLocation(TextualConvention, Integer32):
    description = 'Specifies whether the antenna is an indoor or outdoor antenna'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("indoor", 0), ("outdoor", 1))

class ExtremeWirelessPhysInterfaceIndex(TextualConvention, Integer32):
    description = 'The value of a physical interface number. Each radio on an AP corresponds to a physical interface. There can be multiple virtual interface on each physical interface. The format for the physical interface is xxxxyy where xxxx is the port IF index to which the AP is connected. YY is the interface index within that AP.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class ExtremeWirelessVirtInterfaceIndex(TextualConvention, Integer32):
    description = 'The value of a virtual interface number. Each radio on an AP corresponds to a physical interface. There can be multiple virtual interface on each physical interface. The format for the virtual interface is xxxxyyzz where xxxx is the port IF index to which the AP is connected. YY is the physical interface index within that AP and ZZ is the index of the virtual interface within that physical interface.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class ExtremeWirelessChannelAutoSelectStatus(TextualConvention, Bits):
    description = 'Specifies the status of the channel auto-selection process.'
    status = 'current'
    namedValues = NamedValues(("notApplicable", 0), ("inProgress", 1), ("success", 2), ("radarInterferenceDuringScan", 3), ("radarInterferenceDuringOperation", 4), ("restartedDueToInterference", 5))

extremeAPTotalAuthFailures = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeAPTotalAuthFailures.setStatus('current')
if mibBuilder.loadTexts: extremeAPTotalAuthFailures.setDescription('This variable gives the total number of Authentication failures that have been seen by all the wireless ports.')
extremeAPTotalDetectedStations = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeAPTotalDetectedStations.setStatus('current')
if mibBuilder.loadTexts: extremeAPTotalDetectedStations.setDescription('This variable gives the total number of detected stations on all the wireless ports.')
extremeAPTotalAssociatedStations = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeAPTotalAssociatedStations.setStatus('current')
if mibBuilder.loadTexts: extremeAPTotalAssociatedStations.setDescription('This variable gives the total number of associated stations on all the wireless ports.')
extremeAPTotalAuthenticatedStations = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeAPTotalAuthenticatedStations.setStatus('current')
if mibBuilder.loadTexts: extremeAPTotalAuthenticatedStations.setDescription('This variable gives the total number of authenticated stations on all the wireless ports.')
extremeWirelessCfgMgmtVLAN = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessCfgMgmtVLAN.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessCfgMgmtVLAN.setDescription('This value indicates the VLAN tag that should be applied to all control traffic between the AP and the platform.')
extremeWirelessCfgNetmask = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessCfgNetmask.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessCfgNetmask.setDescription('This value is the subnet of the Mgmt Vlan')
extremeWirelessCfgGateway = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessCfgGateway.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessCfgGateway.setDescription('This value is assigned to the APs as the gateway for the management vlan.')
extremeWirelessCfgEnableWirelessTraps = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessCfgEnableWirelessTraps.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessCfgEnableWirelessTraps.setDescription('If set to TRUE the wireless port will send traps for Authentication and association events. If set to FALSE no traps will be generated. Note: We always generate the wireless port status traps.')
extremeWirelessCfgCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 1, 10), ExtremeWirelessCountryCode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessCfgCountryCode.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessCfgCountryCode.setDescription('This variable allows configuration of the country code in which the AP will operate. Setting this value will enable the AP to range check frequency and other regulatory settings.')
extremeWirelessPortCfgTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3), )
if mibBuilder.loadTexts: extremeWirelessPortCfgTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortCfgTable.setDescription('This table contains one entry per wireless port that the user has configured. The AP does not have to be plugged in for the user to configure it via this table.')
extremeWirelessPortCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeWirelessPortIfIndex"))
if mibBuilder.loadTexts: extremeWirelessPortCfgEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortCfgEntry.setDescription('')
extremeWirelessPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPortIfIndex.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortIfIndex.setDescription('This is the MIB-II ifIndex of the port this entry describes.')
extremeWirelessPortCfgIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortCfgIpAddress.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortCfgIpAddress.setDescription('This value is assigned to the port for external management.')
extremeWirelessPortCfgLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortCfgLocation.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortCfgLocation.setDescription('This describes the physical location of the wireless port.')
extremeWirelessPortCfgDetectedTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1, 4), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortCfgDetectedTimeout.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortCfgDetectedTimeout.setDescription('This is the number of seconds a station can stay in the detected station table without authenticating.')
extremeWirelessPortCfgClientWatchdog = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortCfgClientWatchdog.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortCfgClientWatchdog.setDescription('Setting this value to true will force the AP to run a watch-dog process for system health.')
extremeWirelessPortLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPortLastChange.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortLastChange.setDescription('The value of sysUpTime when the port entered its last state')
extremeWirelessPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("reset", 3), ("addressing", 4), ("register", 5), ("syncing", 6), ("online", 7), ("error", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPortState.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortState.setDescription('The current state of the wireless part of this port. enabled : Port is actively looking for wireless interfaces. disabled : Port is administratively unable to detect new interfaces. reset : Interfaces have been detected and are being brought up (access point is booting). addressing : IP Address is being assigned. register : Interfaces are registering for service syncing : Interfaces are retrieving their configuration and updating their state. online : Interfaces are operational. If an error occurs the wireless port will transistion to the error state.')
extremeWirelessPortAntennaType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1, 8), ExtremeWirelessAntennaType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortAntennaType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortAntennaType.setDescription('This is the type of the Antenna for Detachable product. For Altitude-2d series, further selection is available through this variable.')
extremeWirelessPortAntennaLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1, 9), ExtremeWirelessAntennaLocation()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortAntennaLocation.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortAntennaLocation.setDescription('This specifies the location the detachable antenna.')
extremeWirelessPortBootstrapServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1, 10), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortBootstrapServerAddressType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortBootstrapServerAddressType.setDescription("The type of address specified in the object 'extremeWirelessPortBootstrapServerAddress'. Currently, only 'ipv4' and 'dns' are supported.")
extremeWirelessPortBootstrapServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1, 11), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortBootstrapServerAddress.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortBootstrapServerAddress.setDescription('This specifies the TFTP server address from where the AP gets the Bootstrap Image. This can be a DNS name or an IPv4 address.')
extremeWirelessPortBootstrapFilePath = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortBootstrapFilePath.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortBootstrapFilePath.setDescription('This specifies the TFTP FileName of the AP Bootstrap Image.')
extremeWirelessPortBootLoaderServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1, 13), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortBootLoaderServerAddressType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortBootLoaderServerAddressType.setDescription("The type of address specified in the object 'extremeWirelessPortBootLoaderServerAddress'. Currently, only 'ipv4' and 'dns' are supported.")
extremeWirelessPortBootLoaderServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1, 14), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortBootLoaderServerAddress.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortBootLoaderServerAddress.setDescription('This specifies the TFTP server address from where the AP gets the Bootloader Image. This can be a DNS name or an IPv4 address.')
extremeWirelessPortBootLoaderFilePath = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortBootLoaderFilePath.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortBootLoaderFilePath.setDescription('This specifies the TFTP FileName of the AP Bootloader Image.')
extremeWirelessPortRuntimeServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1, 16), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortRuntimeServerAddressType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortRuntimeServerAddressType.setDescription("The type of address specified in the object 'extremeWirelessPortRuntimeServerAddress'. Currently, only 'ipv4' and 'dns' are supported.")
extremeWirelessPortRuntimeServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1, 17), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortRuntimeServerAddress.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortRuntimeServerAddress.setDescription('This specifies the TFTP server address from where the AP gets the Runtime Image. This can be a DNS name or an IPv4 address.')
extremeWirelessPortRuntimeFilePath = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortRuntimeFilePath.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortRuntimeFilePath.setDescription('This specifies the TFTP FileName of the AP Runtime Image.')
extremeWirelessPortMultiBootMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("a300", 0), ("a-bp", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortMultiBootMode.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortMultiBootMode.setDescription("This is used to identify the image with which the AP boots up. This is enumerated as follows: 0 - a300 - This specifies that AP will bootup with Extreme's A300 image 1 - a-bp - This specifies that AP will bootup with Siemen''s Beacon Point Image.")
extremeWirelessPortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1), )
if mibBuilder.loadTexts: extremeWirelessPortStatusTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortStatusTable.setDescription('This table contains one entry per detected AP.')
extremeWirelessPortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeWirelessPortIfIndex"))
if mibBuilder.loadTexts: extremeWirelessPortStatusEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortStatusEntry.setDescription('')
extremeWirelessPortIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortIpAddress.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortIpAddress.setDescription('This value is assigned to the port for external management.')
extremeWirelessPortNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortNetmask.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortNetmask.setDescription('This value is assigned to the AP for external management.')
extremeWirelessPortGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortGateway.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortGateway.setDescription('This value is assigned to the AP for external management.')
extremeWirelessPortManagementIP = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortManagementIP.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortManagementIP.setDescription("This value is used by the AP when sending out Management packets to the external world. This IP is used as src-ip address in Syslog messages, as NAS-Identifier in Radius requests, and as Agent-Addr in SNMP trap pdu's.")
extremeWirelessPortEnableWirelessTraps = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortEnableWirelessTraps.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortEnableWirelessTraps.setDescription('If set to TRUE the wireless port will send traps for Authentication and association successful events. If set to FALSE no traps will be generated. Note: We always generate the wireless port status traps.')
extremeWirelessPortLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortLocation.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortLocation.setDescription('This describes the physical location of the wireless port.')
extremeWirelessPortDetectedMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 7), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortDetectedMaxAge.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortDetectedMaxAge.setDescription('This is the number of seconds a station can stay in the detected station table without authenticating.')
extremeWirelessPortMgmtVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPortMgmtVLAN.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortMgmtVLAN.setDescription('This value indicates the VLAN tag that should be applied to all control traffic between the AP and the platform.')
extremeWirelessPortBootromVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPortBootromVersion.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortBootromVersion.setDescription('This is the current version of the bootrom on this AP.')
extremeWirelessPortSWVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPortSWVersion.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortSWVersion.setDescription('This is the current software version of this AP.')
extremeWirelessPortSysDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPortSysDescr.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortSysDescr.setDescription('This is the equivalent value of sysDescr from the AP.')
extremeWirelessPortManufacturerName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPortManufacturerName.setReference('dot11ManufacturerName')
if mibBuilder.loadTexts: extremeWirelessPortManufacturerName.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortManufacturerName.setDescription(' ')
extremeWirelessPortProductName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPortProductName.setReference('dot11ProductName')
if mibBuilder.loadTexts: extremeWirelessPortProductName.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortProductName.setDescription(' ')
extremeWirelessPortSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPortSerialNumber.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortSerialNumber.setDescription('This is the unique serial number for this device.')
extremeWirelessPortEdpNeighborId = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 15), ExtremeDeviceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPortEdpNeighborId.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortEdpNeighborId.setDescription('EDP assigns a unique ID to each neighbor to disambiguate references. This can be used to index into the extremeEdpTable.')
extremeWirelessPortClearCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 16), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortClearCounters.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortClearCounters.setDescription("This value can be set to true to force the device to reset it's counters. A read will return false.")
extremeWirelessPortClearLog = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 17), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortClearLog.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortClearLog.setDescription('This value can be set to true to force the device to clear its local log store. A read will return false.')
extremeWirelessPortWatchdogReset = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 18), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortWatchdogReset.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortWatchdogReset.setDescription('This is to enable/disable watchdog timer reset on timeout. Default is enable. If it is enabled, system should reset when the watchdog kicks in. On next bootup, it should send out an syslog message to syslog server. If it is disabled, it should record the error and not reset the system.')
extremeWirelessPortNumPhysInterfaces = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPortNumPhysInterfaces.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortNumPhysInterfaces.setDescription('Each wireless port has a set of physical interface which are numbered 1-N. This variable gives the number of physical interfaces on this AP.')
extremeWirelessPortHWVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPortHWVersion.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortHWVersion.setDescription('This is the current hardware version of this AP.')
extremeWirelessPortMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 21), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPortMacAddress.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortMacAddress.setDescription('Unique MAC Address assigned to the ethernet interface on the AP.')
extremeWirelessPortRadiusPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortRadiusPortID.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortRadiusPortID.setDescription('A string value that should be sent by the AP to the radius server as the Port-ID radius attribute in authentication requests')
extremeWirelessPortBootUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 23), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortBootUpTime.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortBootUpTime.setDescription('The sysUpTime of the LAC when the port was booted up. Should be set only during the AP boot up.')
extremeWirelessPortCountryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 24), ExtremeWirelessCountryCode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortCountryCode.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortCountryCode.setDescription('The country code that the AP is programmed to operate in.')
extremeWirelessPortWallclockTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortWallclockTime.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortWallclockTime.setDescription('The wall clock time as known to the LAC. Expressed in number of seconds since Jan 1, 1970')
extremeWirelessPortPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 26), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortPartNumber.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortPartNumber.setDescription('This describes the part number of the AP.')
extremeWirelessPortPartRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 27), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortPartRevision.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortPartRevision.setDescription('This describes the revision of the AP.')
extremeWirelessPortUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 28), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortUpTime.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortUpTime.setDescription('The number of seconds the port has been in the online state.')
extremeWirelessPortStatusAntennaType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 29), ExtremeWirelessAntennaType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortStatusAntennaType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortStatusAntennaType.setDescription('This is the type of the Antenna for Detachable product. For Altitude-2d series, further selection is available through this variable.')
extremeWirelessPortStatusAntennaLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 30), ExtremeWirelessAntennaLocation()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortStatusAntennaLocation.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortStatusAntennaLocation.setDescription('This specifies the location the detachable antenna.')
extremeWirelessPortStatusAntenna2point4GHZGain = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 31), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessPortStatusAntenna2point4GHZGain.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortStatusAntenna2point4GHZGain.setDescription('This specifies 2.4GHz gain value for detachable antenna in dbi')
extremeWirelessPortStatusAntenna5GHZGain = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 32), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessPortStatusAntenna5GHZGain.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortStatusAntenna5GHZGain.setDescription('This specifies 5GHz gain value for detachable antenna in dbi')
extremeWirelessPortPrimaryBootloaderVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 33), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPortPrimaryBootloaderVersion.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortPrimaryBootloaderVersion.setDescription('This is the version of the primary bootloader on this AP.')
extremeWirelessPortSecondaryBootloaderVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPortSecondaryBootloaderVersion.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortSecondaryBootloaderVersion.setDescription('This is the version of the Secondary bootloader on this AP.')
extremeWirelessPortCurrentBootloaderInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPortCurrentBootloaderInUse.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortCurrentBootloaderInUse.setDescription('This specifies if the bootloader booted is primary or secondary one.')
extremeWirelessPortLogStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 2), )
if mibBuilder.loadTexts: extremeWirelessPortLogStatusTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortLogStatusTable.setDescription('This table contains one entry for each wireless port which is configured via the configuration table.')
extremeWirelessPortLogStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 2, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeWirelessPortIfIndex"), (0, "EXTREME-WIRELESS-MIB", "extremeWirelessPortLogStatusIndex"))
if mibBuilder.loadTexts: extremeWirelessPortLogStatusEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortLogStatusEntry.setDescription('')
extremeWirelessPortLogStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9)))
if mibBuilder.loadTexts: extremeWirelessPortLogStatusIndex.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortLogStatusIndex.setDescription('There are 9 entries in this table to correspond to the 8 entries configured in the cfg table plus one for the LAC.')
extremeWirelessPortLogStatusDestIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 2, 1, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortLogStatusDestIp.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortLogStatusDestIp.setDescription('This is the IP address to which syslog messsages will be sent. A value of 0.0.0.0 indicates that this entry is disabled. The source IP for every syslog message comes from the ManagementIP field in extremeWirelessPortStatusTable')
extremeWirelessPortLogStatusDestIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 2, 1, 3), InetAddressType().clone('ipv4')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortLogStatusDestIpType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortLogStatusDestIpType.setDescription("The type of address specified in the object 'extremeWirelessPortLogStatusDestIp. Currently, only 'ipv4' and 'dns' are supported.")
extremeWirelessPortLogStatusPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortLogStatusPort.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortLogStatusPort.setDescription('This is the port to which syslog messages will be sent.')
extremeWirelessPortLogStatusFacility = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortLogStatusFacility.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortLogStatusFacility.setDescription('Optional value for syslog facility local0-7.')
extremeWirelessPortLogStatusSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("critical", 0), ("error", 1), ("warning", 2), ("notice", 3), ("info", 4), ("debugSummary", 5), ("debugVerbose", 6), ("debugData", 7))).clone('debugData')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortLogStatusSeverity.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortLogStatusSeverity.setDescription('The syslog message severity. All syslog messages that have a severity >= specified severity, will be sent to this syslog server.')
extremeWirelessPortLogStatusStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 2, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPortLogStatusStatus.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortLogStatusStatus.setDescription('Specifies whether the log server is enabled or not.')
extremeWirelessPortLogTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 3), )
if mibBuilder.loadTexts: extremeWirelessPortLogTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortLogTable.setDescription('This table allows access to the syslog entries on particular wireless ports.')
extremeWirelessPortLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 3, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeWirelessPortIfIndex"), (0, "EXTREME-WIRELESS-MIB", "extremeWirelessPortLogIndex"))
if mibBuilder.loadTexts: extremeWirelessPortLogEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortLogEntry.setDescription('')
extremeWirelessPortLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: extremeWirelessPortLogIndex.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortLogIndex.setDescription('This is an arbitrary integer which is assinged to entries in order of their insertion.')
extremeWirelessPortLogMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPortLogMessage.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortLogMessage.setDescription('This is the formatted syslog message which was sent.')
extremeWirelessPhysInterfaceCtlTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 4), )
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceCtlTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceCtlTable.setDescription('This table provides configuration of per-physical interface values.')
extremeWirelessPhysInterfaceCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 4, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeWirelessPhysInterfaceIndex"))
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceCtlEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceCtlEntry.setDescription('Each entry is indexed by the wirelessInterfaceIndex, and represents a wireless interface.')
extremeWirelessPhysInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 4, 1, 1), ExtremeWirelessPhysInterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceIndex.setDescription('This is the ifIndex of an individual physical interface on an AP. Each radio will have a unique value.')
extremeWirelessPhysInterfacePHYChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPhysInterfacePHYChannel.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfacePHYChannel.setDescription('This is the RF channel which will be used by this transmitter. Range should be established by configuration of RegDomain and PHYType.')
extremeWirelessPhysInterfaceSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 4, 1, 3), Dot11Speed()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceSpeed.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceSpeed.setDescription('This value indicates the current setting for Tx speed for the interface. Only one of thebits of this bit set can be set. If all bits are unset (ie a 0 is passed as a value) then it means that the interface should choose a speed based on some algorithm.')
extremeWirelessPhysInterfaceNumVirtInterfaces = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceNumVirtInterfaces.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceNumVirtInterfaces.setDescription('Each physical interface has a number of virtual interfaces This specifies the number of virt interfaces.')
extremeWirelessPhysInterfaceChannelAutoSelectStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 4, 1, 5), ExtremeWirelessChannelAutoSelectStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceChannelAutoSelectStatus.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceChannelAutoSelectStatus.setDescription('This OID reflects the status of the channel auto selection process.')
extremeWirelessPhysInterfaceRadarInterfaceChannelList = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 4, 1, 6), Dot11AChannel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceRadarInterfaceChannelList.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceRadarInterfaceChannelList.setDescription('This OID reflects the list oc 802.11(a) channels on which radar interference was detected.')
extremeWirelessVirtInterfaceCtlTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 6), )
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceCtlTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceCtlTable.setDescription('This table provides configuration of per-physical-interface values.')
extremeWirelessVirtInterfaceCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 6, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeWirelessVirtInterfaceIndex"))
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceCtlEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceCtlEntry.setDescription('Each entry is indexed by the wirelessInterfaceIndex, and represents a virtual wireless interface.')
extremeWirelessVirtInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 6, 1, 1), ExtremeWirelessVirtInterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceIndex.setDescription('This is the ifIndex of an individual interface on an AP. Each virtual interface will have a unique value.')
extremeWirelessVirtInterfaceMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 6, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceMacAddress.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceMacAddress.setDescription('The maximum number of clients that can associate with this virtual interface.')
extremeWirelessVirtInterfaceMaxClients = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceMaxClients.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceMaxClients.setDescription('The maximum number of clients that can associate with this virtual interface.')
extremeWirelessVirtInterfaceWirelessBridging = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 6, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceWirelessBridging.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceWirelessBridging.setDescription('This specifies whether wireless bridging is enabled on this interface. If wireless bridging is enabled then traffic originating from a client on this interface will be bridged to clients on the same VLAN on this or other virtual interfaces that have wireless bridging enabled. So basically wireless bridging should be enabled on both the source and the destination virtual interface for traffic to be bridged.')
extremeWirelessVirtInterfaceLastStateChange = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 6, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceLastStateChange.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceLastStateChange.setDescription('The value of sysUpTime when the virtual interface entered its current state')
extremeWirelessVirtInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceState.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceState.setDescription('This value specifies whether the virtual interface is active or not')
extremeWirelessVirtInterfaceIappEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 6, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceIappEnabled.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceIappEnabled.setDescription('IAPP status. A value of TRUE indicates IAPP is enabled on the interface.')
extremeWirelessVirtInterfaceSvpEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 6, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceSvpEnabled.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceSvpEnabled.setDescription('SVP status. A value of TRUE indicates SVP is enabled on the interface.')
extremeWirelessVirtInterfaceSecurityCtlTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 7), )
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceSecurityCtlTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceSecurityCtlTable.setDescription('This table provides configuration of per-interface values.')
extremeWirelessVirtInterfaceSecurityCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 7, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeWirelessVirtInterfaceIndex"))
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceSecurityCtlEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceSecurityCtlEntry.setDescription('Each entry is indexed by the wirelessInterfaceIndex, and represents a wireless interface.')
extremeWirelessVirtInterfaceESSName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 7, 1, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceESSName.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceESSName.setDescription('The ESS ID of this interface.')
extremeWirelessVirtInterfaceSSIDInBeacon = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 7, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceSSIDInBeacon.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceSSIDInBeacon.setDescription('Does this interface generate a beacon with the SSID in it?')
extremeWirelessVirtInterfaceDot11AuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 7, 1, 3), Dot11AuthMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceDot11AuthMode.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceDot11AuthMode.setDescription('Setting this to true indicates whether to use open or shared authentication')
extremeWirelessVirtInterfaceNetworkAuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 7, 1, 4), NetworkAuthMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceNetworkAuthMode.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceNetworkAuthMode.setDescription('This specifies the authentication mode to use on top of dot11 MAC authentication')
extremeWirelessVirtInterfaceDataVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 7, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceDataVlan.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceDataVlan.setDescription('This is the VLAN to use for client data in case of the VLAN is not received as a VSA. This VLAN is also used for authentication types like PSK, WEP, etc')
extremeWirelessVirtInterfaceIgnoreVSAVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 7, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceIgnoreVSAVlan.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceIgnoreVSAVlan.setDescription('If this is set then the VLAN returned as a VSA will be ignored and the Data Vlan specified above will be used instead')
extremeWirelessVirtInterfaceWEPDefaultKey = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 7, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceWEPDefaultKey.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceWEPDefaultKey.setDescription('This value indicates the index in dot11WEPDefaultKeyTable that identifies the key this interface will use to decrypt packets.')
extremeWirelessVirtInterfaceEncryptionLength = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 64, 128))).clone(namedValues=NamedValues(("none", 0), ("sixtyfour", 64), ("onetwentyeight", 128)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceEncryptionLength.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceEncryptionLength.setDescription('This is the length of the encryption key to use in case of dot1x legacy mode and WEP. If this length is 0 then no WEP encryption.')
extremeWirelessVirtInterfaceDot1xCtlTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 8), )
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceDot1xCtlTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceDot1xCtlTable.setDescription('There is one entry in this table for each virtual interface It reflects the dot1x security config')
extremeWirelessVirtInterfaceDot1xCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 8, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeWirelessVirtInterfaceIndex"))
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceDot1xCtlEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceDot1xCtlEntry.setDescription('')
extremeWirelessVirtInterfaceKeyMgmtSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 8, 1, 1), WPAKeyMgmtSet()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceKeyMgmtSuite.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceKeyMgmtSuite.setDescription('This bitmask configures the authentication suites to be used.')
extremeWirelessVirtInterfaceMcastCipherSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 8, 1, 2), WPACipherSet()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceMcastCipherSuite.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceMcastCipherSuite.setDescription('This configures the cipher suite to use for mcast traffic. The cipher suite to use for unicast traffic is derived from this using the following algorithm: Mcast cipher = WEP (64/128), Unicast cipher = TKIP Mcast cipher = TKIP, Unicast cipher = TKIP Mcast cipher = AES, Unicast cipher = AES. This therefore determines the max unicast cipher suite the client can use to associate with this interface.')
extremeWirelessVirtInterfaceDot1xPSKValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 8, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceDot1xPSKValue.setReference('dot11RSNConfigPSKValue')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceDot1xPSKValue.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceDot1xPSKValue.setDescription('The Pre-Shared Key (PSK) for when WPA in PSK mode is the selected authentication suite.')
extremeWirelessVirtInterfaceDot1xPSKPassPhrase = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 8, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceDot1xPSKPassPhrase.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceDot1xPSKPassPhrase.setDescription('The PSK, for when WPA in PSK mode is the selected authentication suite, is configured by extremeWirelessVirtInterfaceKeyMgmtSuite. An alternative manner of setting the PSK uses the password-to-key algorithm defined in section XXX. This variable provides a means to enter a pass phrase. When this object is written, the RSN entity shall use the password-to-key algorithm specified in section XXX to derive a pre-shared and populate extremeWirelessVirtInerfaceDot1xPSKValue with this key. This object is logically write-only. Reading this variable shall return unsuccessful status or null or zero.')
extremeWirelessVirtInterfaceDot1xReAuthPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 8, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceDot1xReAuthPeriod.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceDot1xReAuthPeriod.setDescription('Number of seconds a clients authentication will last before the AP automatically issues a reauthentication request.')
extremeWirelessVirtInterfaceGroupUpdateTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 8, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(100)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceGroupUpdateTimeOut.setReference('dot11RSNConfigGroupUpdateTimeOut')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceGroupUpdateTimeOut.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceGroupUpdateTimeOut.setDescription('The time in minutes after which the RSN group update handshake will be retried. The timer shall start at the moment the group update message is sent.')
extremeWirelessVirtInterfacePairwiseUpdateTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 8, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(100)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfacePairwiseUpdateTimeOut.setReference('dot11RSNConfigPairwiseUpdateTimeOut')
if mibBuilder.loadTexts: extremeWirelessVirtInterfacePairwiseUpdateTimeOut.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfacePairwiseUpdateTimeOut.setDescription('The time in minutes after which the RSN 4-way handshake will be retried. The timer shall start at the moment a 4-way message is sent.')
extremeWirelessVirtInterfaceDot11iPreauthEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 8, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceDot11iPreauthEnable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceDot11iPreauthEnable.setDescription('Enables/Disable 802.11i pre-authentication.')
extremeWirelessVirtInterfaceWEPKeyTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 9), )
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceWEPKeyTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceWEPKeyTable.setDescription('This table contains per-profile WEP keys. Reference ieee802dot11.1.2.3.')
extremeWirelessVirtInterfaceWEPKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 9, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeWirelessVirtInterfaceIndex"), (0, "EXTREME-WIRELESS-MIB", "extremeWirelessVirtInterfaceWEPKeyIndex"))
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceWEPKeyEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceWEPKeyEntry.setDescription(' ')
extremeWirelessVirtInterfaceWEPKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceWEPKeyIndex.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceWEPKeyIndex.setDescription('There can be upto 4 wep keys for any wireless interface. Four of the keys are to be used with WEP Authentication, and the other four with MAC Auth.')
extremeWirelessVirtInterfaceWEPKey = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 9, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 19))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceWEPKey.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceWEPKey.setDescription('This is a write-only wep key.')
extremeWirelessVirtInterfaceWEPKeyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 9, 1, 3), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceWEPKeyStatus.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceWEPKeyStatus.setDescription('Specifies whether the key is present or not.')
extremeWirelessPhysInterfaceRFCtlTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 10), )
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceRFCtlTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceRFCtlTable.setDescription('This table provides configuration of per-interface values.')
extremeWirelessPhysInterfaceRFCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 10, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeWirelessPhysInterfaceIndex"))
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceRFCtlEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceRFCtlEntry.setDescription('Each entry is indexed by the wirelessInterfaceIndex, and represents a wireless interface.')
extremeWirelessPhysInterfaceBeaconPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 10, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceBeaconPeriod.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceBeaconPeriod.setDescription('This is the beacon interval to use')
extremeWirelessPhysInterfaceTxPowerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceTxPowerLevel.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceTxPowerLevel.setDescription('This is the % of max power to transmit at.')
extremeWirelessPhysInterfaceDTIMPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 10, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceDTIMPeriod.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceDTIMPeriod.setDescription('This is the DTIM period.')
extremeWirelessPhysInterfaceFragLength = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 10, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceFragLength.setReference('ieee802dot11.2.1.1.5.')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceFragLength.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceFragLength.setDescription(' ')
extremeWirelessPhysInterfaceLongRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceLongRetry.setReference('dot11LongRetryLimit')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceLongRetry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceLongRetry.setDescription('Attribute indicates the maximum number of transmission attempts of a frame whose size is > RTS.')
extremeWirelessPhysInterfaceShortRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 10, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceShortRetry.setReference('dot11ShortRetryLimit')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceShortRetry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceShortRetry.setDescription('Attribute indicates the maximum number of transmission attempts of a frame whose size is <= RTS.')
extremeWirelessPhysInterfaceRTSThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 10, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceRTSThreshold.setReference('ieee802dot11.2.1.1.2.')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceRTSThreshold.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceRTSThreshold.setDescription(' ')
extremeWirelessPhysInterfaceSupportedDataRatesRxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 10, 1, 8), Dot11Speed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceSupportedDataRatesRxValue.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceSupportedDataRatesRxValue.setDescription('A bitmask of all supported datarates for Rx.')
extremeWirelessPhysInterfaceSupportedDataRatesTxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 10, 1, 9), Dot11Speed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceSupportedDataRatesTxValue.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceSupportedDataRatesTxValue.setDescription('A bitmask of all supported datarates for Tx.')
extremeWirelessPhysInterfacePHYType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 10, 1, 10), Dot11Type()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPhysInterfacePHYType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfacePHYType.setDescription('This variable selects between 802.11 a/b/g for this transmitter. It should be used by ap to range check frequency, etc.')
extremeWirelessPhysInterfacePHYSupportedTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 10, 1, 11), Bits().clone(namedValues=NamedValues(("bsupported", 0), ("asupported", 1), ("gsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPhysInterfacePHYSupportedTypes.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfacePHYSupportedTypes.setDescription('This is the 802.11 standard supported by this interface as a bitmask')
extremeWirelessPhysInterfacePreamble = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("short", 0), ("long", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessPhysInterfacePreamble.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfacePreamble.setDescription('This changes the 802 preamble expected by the interface.')
extremeWirelessPhysInterfaceAbsTxPowerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 10, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceAbsTxPowerLevel.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceAbsTxPowerLevel.setDescription('This is the absolute value of max power to transmit level in dBm.')
extremeWirelessInterfaceStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 5), )
if mibBuilder.loadTexts: extremeWirelessInterfaceStatusTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessInterfaceStatusTable.setDescription('This table provides statistics and information on the current condition of each wireless interace. There is one entry per virtual and physical wireless interface in this table. The values for the physical interfaces represent the sum of the values for all sub interfaces.')
extremeWirelessInterfaceStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: extremeWirelessInterfaceStatusEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessInterfaceStatusEntry.setDescription('Each entry in this table is indexed by either a virtual or a physical ifIndex.')
extremeWirelessIntfTotalDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfTotalDetected.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfTotalDetected.setDescription('This gives the total number of stations which have entered the detected state on this wireless interface since the last time the counters were cleared.')
extremeWirelessIntfTotalAuthed = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfTotalAuthed.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfTotalAuthed.setDescription('This gives the total number of stations which have entered the authenticated state on this wireless interface since the last time the counters were cleared. Note that this is equal to the number of stations which have entered the forwarding state. This is not necessaryly equivalent to the number of stations which have succeeded in MAC-level authentication.')
extremeWirelessIntfTotalAuthFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfTotalAuthFailed.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfTotalAuthFailed.setDescription('This gives the total number of stations which have failed to authenticate on this wireless interface. Note that no distinction is made between a MAC-layer or higher-layer authentication failure.')
extremeWirelessIntfTotalAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 5, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfTotalAssoc.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfTotalAssoc.setDescription('This gives the total number of stations which have entered the associated state on this wireless interface since the last time the counters were cleared.')
extremeWirelessIntfTotalAssocFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 5, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfTotalAssocFailed.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfTotalAssocFailed.setDescription('This gives the total number of stations which have failed the association on this wireless interface since the last time the counters were cleared.')
extremeWirelessIntfRateDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 5, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfRateDetected.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfRateDetected.setDescription('This gives the rate of clients being detected on this interface over a 5 second period using EMWA averaging.')
extremeWirelessIntfRateAuthed = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 5, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfRateAuthed.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfRateAuthed.setDescription('This gives teh rate of clients being authenticated on this interface over a 5 second period using EMWA averaging.')
extremeWirelessIntfRateAuthFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 5, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfRateAuthFailed.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfRateAuthFailed.setDescription('This gives the rate of clients failed authentication on this interface over a 5 second period using EMWA averaging.')
extremeWirelessIntfRateAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 5, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfRateAssoc.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfRateAssoc.setDescription('This gives the rate of clients being associated on this interface over a 5 second period using EMWA averaging.')
extremeWirelessIntfRateAssocFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 5, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfRateAssocFailed.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfRateAssocFailed.setDescription('This gives the rate of clients failing association on this interface over a 5 second period using EMWA averaging.')
extremeWirelessIntfBlockTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 5, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfBlockTime.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfBlockTime.setDescription('This value specifies the number of ticks until traffic will be allowed back on this interface. A non-zero value indicates that traffic has been blocked, most likely due to countermeasures.')
extremeWirelessIntfCurrentDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 5, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfCurrentDetected.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfCurrentDetected.setDescription('This gives the current number of stations which are in the detected state on this wireless interface.')
extremeWirelessIntfCurrentAuthed = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 5, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfCurrentAuthed.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfCurrentAuthed.setDescription('This gives the current number of stations which are in the authenticated state on this wireless interface.')
extremeWirelessIntfCurrentAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 5, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfCurrentAssoc.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfCurrentAssoc.setDescription('This gives the current number of stations which are in the associated state on this wireless interface.')
extremeWirelessIntfCurrentForwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 5, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfCurrentForwarding.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfCurrentForwarding.setDescription('This gives the current number of stations which are in the forwarding state on this wireless interface.')
extremeWirelessClientTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11), )
if mibBuilder.loadTexts: extremeWirelessClientTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientTable.setDescription('This table augments the Dot11AccessPointAddressTableEntry to add a per-client VLAN entry.')
extremeWirelessClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "EXTREME-WIRELESS-MIB", "extremeWirelessClientID"))
if mibBuilder.loadTexts: extremeWirelessClientEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientEntry.setDescription('An entry in the extremeWirelessClientTable. It is possible for there to be multiple IEEE 802.11 interfaces on one agent, each with its unique MAC address. The relationship between an IEEE 802.11 interface and an interface in the context of the Internet-standard MIB is one-to-one. As such, the value of an ifIndex object instance can be directly used to identify corresponding instances of the objects defined herein. by ifIndex.')
extremeWirelessClientID = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientID.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientID.setDescription('The Unique MAC Address of the station for which this address table entry pertains.')
extremeWirelessClientState = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("detected", 1), ("authenticated", 2), ("associated", 3), ("data-forwarding", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientState.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientState.setDescription("This attribute shall indicate the current state of the connection between a wireless station and the AP. The attribute is enumerated as follows: 1 - Detected - station has been detected, but not is communicating with AP 2 - Authenticated - station is authenticated but not currently associated. 3 - Associated - station is authenticated and associated 4 - Data-forwarding - station is on the network It is assumed that if an station is deauthenticated, or disassociated then it no longer has an entry the AP's Address Table.")
extremeWirelessClientEncryption = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 3), WPACipherSet()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientEncryption.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientEncryption.setDescription('This attribute is contains the encryption mechanism being used by the station in an AP that allows mixed encryption modes.')
extremeWirelessClientSignalStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSignalStrength.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSignalStrength.setDescription('This attribute shall specify the signal strength of the last frame received from the station in - dBm. e.g. a value of 50 implies -50 dBm.')
extremeWirelessClientLinkQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientLinkQuality.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientLinkQuality.setDescription('This attribute shall contain an indication of the quality of the signal as measured in the last frame received from the station. TBD format of this attribute')
extremeWirelessClientVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientVLAN.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientVLAN.setDescription('This is the per-client VLAN which was pushed over by a RADIUS server or other mechanism.')
extremeWirelessClientPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientPriority.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientPriority.setDescription('This is a per-client 802.1p value which was either configured by the RADIUS server or statically through the port configuration table.')
extremeWirelessClientAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 8), ClientAuthType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthType.setDescription('This is an indication of what access method was used to authenticated the client. The strongest mechanism used should be listed here, in case more than one was used. For example, if a combination of mac-based shared-key and dot1x were used, this value should indicated dot1x.')
extremeWirelessClientLastStateChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientLastStateChangeTime.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientLastStateChangeTime.setDescription('This is the sysUpTime of the switch when the clients state changed last')
extremeWirelessClientTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientTxFrames.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientTxFrames.setDescription('This is the number of packets transmitted to the client')
extremeWirelessClientRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientRxFrames.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientRxFrames.setDescription('This is the number of packets transmitted by the client')
extremeWirelessClientTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientTxBytes.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientTxBytes.setDescription('This is the number of bytes transmitted to the client')
extremeWirelessClientRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientRxBytes.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientRxBytes.setDescription('This is the number of bytes transmitted by the client')
extremeWirelessClientLastPacketType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("data", 0), ("psPoll", 1), ("probeRequest", 2), ("disassociation", 3), ("deauthentication", 4), ("association", 5), ("reassociation", 6), ("authentication", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientLastPacketType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientLastPacketType.setDescription('This the the last packet type seen from the specific client')
extremeWirelessClientSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSSID.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSSID.setDescription('The SSID that this client was using')
extremeWirelessClientStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 16), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessClientStatus.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientStatus.setDescription("This variable is used to delete an entry from the table. The only value this can be set to, is delete (6). If an entry is deleted, that is already in Associated or data-forwarding state, then the AP should dis-associate the particular client by sending a disassociate message. If an entry is in Authenticated state, and is deleted, then the AP should 'deAuthenticate' that client. If an entry is in 'detected' state and is deleted, then the entry should just be removed from the table.")
extremeWirelessClientIP = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 17), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientIP.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientIP.setDescription('IP Address of the wireless client.')
extremeWirelessClientUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientUsername.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientUsername.setDescription('Username (if any) of the wireless client.')
extremeWirelessClientDecryptionFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDecryptionFailures.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDecryptionFailures.setDescription('This is the number of failures during decrypting packets from this client.')
extremeWirelessClientMICFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 11, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientMICFailures.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientMICFailures.setDescription('This is the number of MIC failures for this client.')
extremeRFProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 1))
extremeRFProfileTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 1, 1), )
if mibBuilder.loadTexts: extremeRFProfileTable.setStatus('current')
if mibBuilder.loadTexts: extremeRFProfileTable.setDescription('There is one entry in this table for each RF profile defined on the LAC. Configuration for wireless intf. should only be done by manipulating these variables. Changes here will be reflected in the corresponding 802dot11 MIB variables (see references below). On bootup this table should be populated with one default entry for each supported type (A, G, etc).')
extremeRFProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 1, 1, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeRFProfileIndex"))
if mibBuilder.loadTexts: extremeRFProfileEntry.setStatus('current')
if mibBuilder.loadTexts: extremeRFProfileEntry.setDescription('')
extremeRFProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 34)))
if mibBuilder.loadTexts: extremeRFProfileIndex.setStatus('current')
if mibBuilder.loadTexts: extremeRFProfileIndex.setDescription('Integer index for this table. This is here to avoid having to index into the table via the string name.')
extremeRFProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeRFProfileName.setStatus('current')
if mibBuilder.loadTexts: extremeRFProfileName.setDescription('String name of this profile. The value |default| is a special token and should not be allowed.')
extremeRFProfileType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 1, 1, 1, 3), Dot11Type()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeRFProfileType.setStatus('current')
if mibBuilder.loadTexts: extremeRFProfileType.setDescription('This is the type of this RF profile. This will decide the ranges of some of the values (i.e. channel).')
extremeRFProfileBeaconInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeRFProfileBeaconInterval.setReference('ieee802dot11.1.1.1.12.')
if mibBuilder.loadTexts: extremeRFProfileBeaconInterval.setStatus('current')
if mibBuilder.loadTexts: extremeRFProfileBeaconInterval.setDescription('This is the number of TU between beacon frames.')
extremeRFProfileDTIM = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeRFProfileDTIM.setReference('ieee802dot11.1.1.1.13.')
if mibBuilder.loadTexts: extremeRFProfileDTIM.setStatus('current')
if mibBuilder.loadTexts: extremeRFProfileDTIM.setDescription(' ')
extremeRFProfileFragLength = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(256, 2345))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeRFProfileFragLength.setReference('ieee802dot11.2.1.1.5.')
if mibBuilder.loadTexts: extremeRFProfileFragLength.setStatus('current')
if mibBuilder.loadTexts: extremeRFProfileFragLength.setDescription(' ')
extremeRFProfileRTSThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2347))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeRFProfileRTSThresh.setReference('ieee802dot11.2.1.1.2.')
if mibBuilder.loadTexts: extremeRFProfileRTSThresh.setStatus('current')
if mibBuilder.loadTexts: extremeRFProfileRTSThresh.setDescription(' ')
extremeRFProfilePreamble = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("short", 0), ("long", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeRFProfilePreamble.setStatus('current')
if mibBuilder.loadTexts: extremeRFProfilePreamble.setDescription('This changes the 802 preamble expected by the interface.')
extremeRFProfileShortRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeRFProfileShortRetry.setReference('dot11ShortRetryLimit')
if mibBuilder.loadTexts: extremeRFProfileShortRetry.setStatus('current')
if mibBuilder.loadTexts: extremeRFProfileShortRetry.setDescription('Attribute indicates the maximum number of transmission attempts of a frame whose size is <= RTS.')
extremeRFProfileLongRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeRFProfileLongRetry.setReference('dot11LongRetryLimit')
if mibBuilder.loadTexts: extremeRFProfileLongRetry.setStatus('current')
if mibBuilder.loadTexts: extremeRFProfileLongRetry.setDescription('Attribute indicates the maximum number of transmission attempts of a frame whose size is > RTS.')
extremeRFProfileStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 1, 1, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeRFProfileStatus.setStatus('current')
if mibBuilder.loadTexts: extremeRFProfileStatus.setDescription('Standard row-status semantics.')
extremeSecurityProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2))
extremeSecurityProfileTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 1), )
if mibBuilder.loadTexts: extremeSecurityProfileTable.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityProfileTable.setDescription('There is one entry in this table per security profile on the LAC. Each profile is identified by a string name.')
extremeSecurityProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 1, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeSecurityProfileIndex"))
if mibBuilder.loadTexts: extremeSecurityProfileEntry.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityProfileEntry.setDescription('')
extremeSecurityProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: extremeSecurityProfileIndex.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityProfileIndex.setDescription('This is an integer index used instead of string name.')
extremeSecurityProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeSecurityProfileName.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityProfileName.setDescription('This is a unique string name which identifies this profile. The token |default| is special and should not be allowed.')
extremeSecurityProfileESSName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeSecurityProfileESSName.setReference('ieee802dot11.1.1.1.9')
if mibBuilder.loadTexts: extremeSecurityProfileESSName.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityProfileESSName.setDescription('This is the desired ESS name.')
extremeSecurityProfileSSIDInBeacon = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 1, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeSecurityProfileSSIDInBeacon.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityProfileSSIDInBeacon.setDescription('Setting this value to true will have the channel place the ssid in the beacon frame.')
extremeSecurityProfileDot11AuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 1, 1, 5), Dot11AuthMode())
if mibBuilder.loadTexts: extremeSecurityProfileDot11AuthMode.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityProfileDot11AuthMode.setDescription('Specified whether to use open or shared authentication')
extremeSecurityProfileNetworkAuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 1, 1, 6), NetworkAuthMode())
if mibBuilder.loadTexts: extremeSecurityProfileNetworkAuthMode.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityProfileNetworkAuthMode.setDescription('This specifies the authentication to use on top of dot11 mac authentication')
extremeSecurityProfileDataVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 1, 1, 7), Integer32())
if mibBuilder.loadTexts: extremeSecurityProfileDataVlan.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityProfileDataVlan.setDescription('This specifies the VLAN to use in case it does not come back as a VSA or in case the IgnoreVSAVlan is set to true')
extremeSecurityProfileIgnoreVSAVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 1, 1, 8), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeSecurityProfileIgnoreVSAVlan.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityProfileIgnoreVSAVlan.setDescription('This specifies if Vlan associations in VSAs from the radius server has to be ignored or not')
extremeSecurityWEPDefaultKey = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 1, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeSecurityWEPDefaultKey.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityWEPDefaultKey.setDescription('This value indicates the index in extremeWEPKeyTable that identifies the key this interface will use to decrypt packets.')
extremeSecurityProfileEncryptionLength = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 64, 128))).clone(namedValues=NamedValues(("none", 0), ("sixtyfour", 64), ("onetwentyeight", 128)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeSecurityProfileEncryptionLength.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityProfileEncryptionLength.setDescription('This gives the size in bits of the key. This variable defines the length of all WEP keys and also the encryption to use in case of legacy dot1x. If the encryption is set to none then no WEP encryption is set.')
extremeSecurityProfileStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeSecurityProfileStatus.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityProfileStatus.setDescription('Standard row-creation semantics.')
extremeSecurityDot1xConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 2), )
if mibBuilder.loadTexts: extremeSecurityDot1xConfigTable.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityDot1xConfigTable.setDescription('There is one entry in this table per security profile on the LAC. It reflects the dot1x security config')
extremeSecurityDot1xConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 2, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeSecurityProfileIndex"))
if mibBuilder.loadTexts: extremeSecurityDot1xConfigEntry.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityDot1xConfigEntry.setDescription('')
extremeSecurityKeyMgmtSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 2, 1, 1), WPAKeyMgmtSet()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeSecurityKeyMgmtSuite.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityKeyMgmtSuite.setDescription('This bitmask configures the authentication suites to be used.')
extremeSecurityMcastCipherSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 2, 1, 2), WPACipherSet()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeSecurityMcastCipherSuite.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityMcastCipherSuite.setDescription('This configures the cipher suite to use for mcast traffic. The cipher suite to use for unicast traffic is derived from this using the following algorithm: Mcast cipher = WEP (64/128), Unicast cipher = TKIP Mcast cipher = TKIP, Unicast cipher = TKIP Mcast cipher = AES, Unicast cipher = AES. This therefore determines the max unicast cipher suite the client can use to associate with this interface.')
extremeSecurityDot1xPSKValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeSecurityDot1xPSKValue.setReference('dot11RSNConfigPSKValue')
if mibBuilder.loadTexts: extremeSecurityDot1xPSKValue.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityDot1xPSKValue.setDescription('The Pre-Shared Key (PSK) for when RSN in PSK mode is the selected authentication suite.')
extremeSecurityDot1xPSKPassPhrase = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeSecurityDot1xPSKPassPhrase.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityDot1xPSKPassPhrase.setDescription('The PSK, for when WPA in PSK mode is the selected authentication suite, is configured by extremeSecurityKeyMgmtSuite. An alternative manner of setting the PSK uses the password-to-key algorithm defined in section XXX. This variable provides a means to enter a pass phrase. When this object is written, the RSN entity shall use the password-to-key algorithm specified in section XXX to derive a pre-shared and populate extremeSecurityDot1xPSKValue with this key. This object is logically write-only. Reading this variable shall return unsuccessful status or null or zero.')
extremeSecurityDot1xReAuthPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeSecurityDot1xReAuthPeriod.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityDot1xReAuthPeriod.setDescription('Number of seconds a clients authentication will last before the AP automatically issues a reauthentication request.')
extremeSecurityGroupUpdateTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(100)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeSecurityGroupUpdateTimeOut.setReference('dot11RSNConfigGroupUpdateTimeOut')
if mibBuilder.loadTexts: extremeSecurityGroupUpdateTimeOut.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityGroupUpdateTimeOut.setDescription('The time in minutes after which the RSN group update handshake will be retried. The timer shall start at the moment the group update message is sent.')
extremeSecurityPairwiseUpdateTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(100)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeSecurityPairwiseUpdateTimeOut.setReference('dot11RSNConfigPairwiseUpdateTimeOut')
if mibBuilder.loadTexts: extremeSecurityPairwiseUpdateTimeOut.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityPairwiseUpdateTimeOut.setDescription('The time in minutes after which the RSN 4-way handshake will be retried. The timer shall start at the moment a 4-way message is sent.')
extremeSecurityDot11iPreauthEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 2, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeSecurityDot11iPreauthEnabled.setStatus('current')
if mibBuilder.loadTexts: extremeSecurityDot11iPreauthEnabled.setDescription('Whether preauth is enabled or not')
extremeWEPKeyTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 4), )
if mibBuilder.loadTexts: extremeWEPKeyTable.setStatus('current')
if mibBuilder.loadTexts: extremeWEPKeyTable.setDescription('This table contains per-profile WEP keys. Reference ieee802dot11.1.2.3.')
extremeWEPKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 4, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeSecurityProfileIndex"), (0, "EXTREME-WIRELESS-MIB", "extremeWEPKeyIndex"))
if mibBuilder.loadTexts: extremeWEPKeyEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWEPKeyEntry.setDescription(' ')
extremeWEPKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)))
if mibBuilder.loadTexts: extremeWEPKeyIndex.setStatus('current')
if mibBuilder.loadTexts: extremeWEPKeyIndex.setDescription('There can be upto 8 wep keys for any wireless interface. Four of the keys are to be used with WEP Authentication, and the other four with MAC Auth.')
extremeWEPKey = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 19))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWEPKey.setStatus('current')
if mibBuilder.loadTexts: extremeWEPKey.setDescription('This is a write-only wep key.')
extremeWEPKeyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 2, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWEPKeyStatus.setStatus('current')
if mibBuilder.loadTexts: extremeWEPKeyStatus.setDescription('Standard row-creation semantics.')
extremeWirelessPhysInterfaceConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 3), )
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceConfigTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceConfigTable.setDescription('This table contains the configured bindings between physical wireless interfaces and RF profiles and other RF properties. There is one instance of a physical wireless interface per radio on the AP. Entries in this table have a duration that exceeds the lifetime of entries in the wirelessPhysInterfaceCtlTable. A configured binding spans the reset or removal of a wireless interface. Entries can be removed from this table by the user. If there is a mismatch between a new wireless port and a previously configured profile, the default profile will be applied and this table will be updated.')
extremeWirelessPhysInterfaceConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 3, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeWirelessPhysInterfaceIndex"))
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceConfigEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceConfigEntry.setDescription(' ')
extremeWirelessPhysInterfaceConfigRFProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 3, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceConfigRFProfile.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceConfigRFProfile.setDescription('This is the index into the extremeRFProfileTable for the RF profile that this wireless interface is bound to. The default value is equivalent to the profile index for the interface-appropriate default in the table.')
extremeWirelessPhysInterfaceConfigRFChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 3, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceConfigRFChannel.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceConfigRFChannel.setDescription('This is the RF channel which has been selected for this wireless interface. It should be one of the supported channels as given by the phy tables in the dot11 mib.')
extremeWirelessPhysInterfaceConfigSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 3, 1, 3), Dot11Speed()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceConfigSpeed.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceConfigSpeed.setDescription('This is the speed to configure the interface at. A value of 0 indicates automatic speed detection.')
extremeWirelessPhysInterfaceConfigPowerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 3, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceConfigPowerLevel.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPhysInterfaceConfigPowerLevel.setDescription('This value specifies the tx power (in % of max power) to use.')
extremeWirelessVirtInterfaceConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 4), )
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceConfigTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceConfigTable.setDescription('This table contains the configured bindings between virtual wireless interfaces and security profiles and other security properties. There are upto 8 virtual interface for each physical interface. Entries in this table have a duration that exceeds the lifetime of entries in the wirelessVirtInterfaceCtlTable. A configured binding spans the reset or removal of a wireless interface. Entries can be removed from this table by the user.')
extremeWirelessVirtInterfaceConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 4, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeWirelessVirtInterfaceIndex"))
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceConfigEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceConfigEntry.setDescription(' ')
extremeWirelessVirtInterfaceConfigSecurityProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 4, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceConfigSecurityProfile.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceConfigSecurityProfile.setDescription('This is the index into the extremeSecurityProfileTable for the security profile that this wireless interface is bound to. The default value is equivalent to the profile index for the interface-appropriate default in the table.')
extremeWirelessVirtInterfaceConfigMaxClients = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceConfigMaxClients.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceConfigMaxClients.setDescription('The maximum number of clients that can associate with this virtual interface.')
extremeWirelessVirtInterfaceConfigWirelessBridging = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 4, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceConfigWirelessBridging.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceConfigWirelessBridging.setDescription('This specifies whether wireless bridging is enabled on this interface. If wireless bridging is enabled then traffic originating from a client on this interface will be bridged to clients on the same VLAN on this or other virtual interfaces that have wireless bridging enabled. So basically wireless bridging should be enabled on both the source and the destination virtual interface for traffic to be bridged.')
extremeWirelessVirtInterfaceConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceConfigState.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessVirtInterfaceConfigState.setDescription('This value specifies whether the virtual interface is active or not')
extremeAntennaProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 5))
extremeAntennaProfileTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 5, 1), )
if mibBuilder.loadTexts: extremeAntennaProfileTable.setStatus('current')
if mibBuilder.loadTexts: extremeAntennaProfileTable.setDescription('There is one entry in this table per antenna profile on the LAC. Each profile is identified by a string name.')
extremeAntennaProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 5, 1, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeAntennaProfileIndex"))
if mibBuilder.loadTexts: extremeAntennaProfileEntry.setStatus('current')
if mibBuilder.loadTexts: extremeAntennaProfileEntry.setDescription('')
extremeAntennaProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: extremeAntennaProfileIndex.setStatus('current')
if mibBuilder.loadTexts: extremeAntennaProfileIndex.setDescription('This is an integer index used instead of string name.')
extremeAntennaProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 5, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeAntennaProfileName.setStatus('current')
if mibBuilder.loadTexts: extremeAntennaProfileName.setDescription('This is a unique string name which identifies this profile. The token |default| is special and should not be allowed.')
extremeAntennaProfile2point4GHZGain = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 5, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeAntennaProfile2point4GHZGain.setStatus('current')
if mibBuilder.loadTexts: extremeAntennaProfile2point4GHZGain.setDescription('This specifies 2.4GHz gain value for detachable antenna in dbi')
extremeAntennaProfile5GHZGain = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 5, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeAntennaProfile5GHZGain.setStatus('current')
if mibBuilder.loadTexts: extremeAntennaProfile5GHZGain.setDescription('This specifies 5GHz gain value for detachable antenna in dbi')
extremeAntennaProfileStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 5, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeAntennaProfileStatus.setStatus('current')
if mibBuilder.loadTexts: extremeAntennaProfileStatus.setDescription('Standard row-creation semantics.')
extremeWirelessRemoteConnectGlobalCfgGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 6))
extremeWirelessRemoteConnectGlobalBindingType = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 6, 1), WirelessRemoteConnectBindingType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectGlobalBindingType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectGlobalBindingType.setDescription('Global Binding Tye')
extremeWirelessRemoteConnectBindingTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 7), )
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingTable.setDescription('This table specifies the RemoteConnect binding configuration for various ports.')
extremeWirelessRemoteConnectBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 7, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeWirelessRemoteConnectBindingPortIndex"))
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingEntry.setDescription(' ')
extremeWirelessRemoteConnectBindingPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48)))
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingPortIndex.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingPortIndex.setDescription('The index of this binding. This maps one-to-one with the value specified in the CLI. For example, if you say v:1 in the CLI, then this value should be 1.')
extremeWirelessRemoteConnectBindingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingIfIndex.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingIfIndex.setDescription('This is the IF index that is used in the extremeWirelessPortConfigTable etc to refer to this RemoteConnect port.')
extremeWirelessRemoteConnectBindingType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 7, 1, 3), WirelessRemoteConnectBindingType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingType.setDescription('This is the type of binding. Based on this, one of the following columns will be valid.')
extremeWirelessRemoteConnectBindingMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 7, 1, 4), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingMAC.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingMAC.setDescription('The MAC address of the AP that is bound to this virtual port. This is valid only if the extremeWirelessRemoteConnectBindingType is set to mac-address')
extremeWirelessRemoteConnectBindingSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 7, 1, 5), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingSerial.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingSerial.setDescription('The serial number of the AP that is bound to this virtual port. This is valid only if the extremeWirelessRemoteConnectBindingType is set to serial-number')
extremeWirelessRemoteConnectBindingIPAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 7, 1, 6), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingIPAddressType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingIPAddressType.setDescription('The IP address type of the AP that is bound to this virtual port. This is valid only if the extremeWirelessRemoteConnectBindingType is set to ip-address')
extremeWirelessRemoteConnectBindingIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 7, 1, 7), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingIPAddress.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingIPAddress.setDescription('The IP address of the AP that is bound to this virtual port. This is valid only if the extremeWirelessRemoteConnectBindingType is set to ip-address')
extremeWirelessRemoteConnectBindingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 7, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingEnabled.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingEnabled.setDescription('An entry in this table can be created but left as disabled. If you set this variable to True then the RemoteConnect controller will consider this binding when trying to map APs to RemoteConnect ports. Else, it will ignore it.')
extremeWirelessRemoteConnectBindingBound = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 7, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingBound.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingBound.setDescription('Specifies if an AP has come up and has been matched to this binding. If this is true, then the extremeWirelessPortStatus table will have an entry for this RemoteConnect port.')
extremeWirelessRemoteConnectBindingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 7, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingRowStatus.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectBindingRowStatus.setDescription('RowStatus attribute. When this row is deleted, the binding goes away')
extremeWirelessRemoteConnectRedirectBindingTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 8), )
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingTable.setDescription('This table specifies the RemoteConnect redirection configuration for various ports.')
extremeWirelessRemoteConnectRedirectBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 8, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeWirelessRemoteConnectRedirectBindingIndex"))
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingEntry.setDescription(' ')
extremeWirelessRemoteConnectRedirectBindingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingIndex.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingIndex.setDescription('The index of this RedirectBinding.')
extremeWirelessRemoteConnectRedirectBindingType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 8, 1, 2), WirelessRemoteConnectBindingType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingType.setDescription('This is the type of RedirectBinding. Based on this, one of the following columns will be valid.')
extremeWirelessRemoteConnectRedirectBindingMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 8, 1, 3), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingMAC.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingMAC.setDescription('The MAC address of the AP that will be redirected. This is valid only if the extremeWirelessRemoteConnectRedirectBindingType is set to mac-address')
extremeWirelessRemoteConnectRedirectBindingSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 8, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingSerial.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingSerial.setDescription('The serial number of the AP that is bound to this virtual port. This is valid only if the extremeWirelessRemoteConnectRedirectBindingType is set to serial-number')
extremeWirelessRemoteConnectRedirectBindingIPAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 8, 1, 5), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingIPAddressType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingIPAddressType.setDescription('The IP address type of the AP that will be redirected. This is valid only if the extremeWirelessRemoteConnectRedirectBindingType is set to ip-address')
extremeWirelessRemoteConnectRedirectBindingIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 8, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingIPAddress.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingIPAddress.setDescription('The IP address of the AP that will be redirected. This is valid only if the extremeWirelessRemoteConnectRedirectBindingType is set to ip-address')
extremeWirelessRemoteConnectRedirectBindAttachSwitchIPAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 8, 1, 7), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindAttachSwitchIPAddrType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindAttachSwitchIPAddrType.setDescription('The IP address type of the slave ')
extremeWirelessRemoteConnectRedirectBindAttachSwitchIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 8, 1, 8), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindAttachSwitchIPAddr.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindAttachSwitchIPAddr.setDescription('The IP address of the slave')
extremeWirelessRemoteConnectRedirectBindingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 8, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingEnabled.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingEnabled.setDescription('An entry in this table can be created but left as disabled. If you set this variable to True then the RemoteConnect controller will consider this RedirectBinding when trying to redirect APs. Else, it will ignore it.')
extremeWirelessRemoteConnectRedirectBindingNumRedirects = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 8, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingNumRedirects.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingNumRedirects.setDescription('The number of times this redirect has been invoked.')
extremeWirelessRemoteConnectRedirectBindingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 8, 1, 11), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingRowStatus.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectRedirectBindingRowStatus.setDescription('Standard row status semantics.')
extremeWirelessRemoteConnectDeviceDBGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 9))
extremeWirelessRemoteConnectDeviceDBTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(30, 3600), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectDeviceDBTimeOut.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectDeviceDBTimeOut.setDescription('Timeout value for unbound APs entry in seconds. 0 for disable')
extremeWirelessRemoteConnectUnboundAPsTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 10), )
if mibBuilder.loadTexts: extremeWirelessRemoteConnectUnboundAPsTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectUnboundAPsTable.setDescription('This table contains the list of APs that could not be bound or redirected.')
extremeWirelessRemoteConnectUnboundAPsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 10, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeWirelessRemoteConnectUnboundAPsIndex"))
if mibBuilder.loadTexts: extremeWirelessRemoteConnectUnboundAPsEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectUnboundAPsEntry.setDescription(' ')
extremeWirelessRemoteConnectUnboundAPsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: extremeWirelessRemoteConnectUnboundAPsIndex.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectUnboundAPsIndex.setDescription('The index of this table.')
extremeWirelessRemoteConnectUnboundAPsMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 10, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectUnboundAPsMAC.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectUnboundAPsMAC.setDescription('The MAC address of the unbound AP.')
extremeWirelessRemoteConnectUnboundAPsSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 10, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectUnboundAPsSerial.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectUnboundAPsSerial.setDescription('The serial number of the unbound AP')
extremeWirelessRemoteConnectUnboundAPsIPAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 10, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectUnboundAPsIPAddressType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectUnboundAPsIPAddressType.setDescription('The IP address type of the unbound AP')
extremeWirelessRemoteConnectUnboundAPsIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 10, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectUnboundAPsIPAddress.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectUnboundAPsIPAddress.setDescription('The IP address of the unbound AP')
extremeWirelessRemoteConnectUnboundAPsNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectUnboundAPsNumAttempts.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectUnboundAPsNumAttempts.setDescription('The number of times this AP contacted this controller.')
extremeWirelessRemoteConnectUnboundAPsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 2, 2, 10, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeWirelessRemoteConnectUnboundAPsRowStatus.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessRemoteConnectUnboundAPsRowStatus.setDescription('Standard row status semantics. Only valid value to set is destroy (6).')
extremeAPAuthServerTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 12), )
if mibBuilder.loadTexts: extremeAPAuthServerTable.setStatus('current')
if mibBuilder.loadTexts: extremeAPAuthServerTable.setDescription('This table is proxied by the wireless APs. It allows the wireless concentrator to configure the APs security settings.')
extremeAPAuthServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 12, 1), ).setIndexNames((0, "EXTREME-WIRELESS-MIB", "extremeWirelessPortIfIndex"), (0, "EXTREME-WIRELESS-MIB", "extremeAPAuthServerIndex"))
if mibBuilder.loadTexts: extremeAPAuthServerEntry.setStatus('current')
if mibBuilder.loadTexts: extremeAPAuthServerEntry.setDescription(' ')
extremeAPAuthServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: extremeAPAuthServerIndex.setStatus('current')
if mibBuilder.loadTexts: extremeAPAuthServerIndex.setDescription('Integer representing either primary (1) or backup (2) server.')
extremeAPAuthServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 12, 1, 2), InetAddressType().clone('ipv4')).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeAPAuthServerAddressType.setStatus('current')
if mibBuilder.loadTexts: extremeAPAuthServerAddressType.setDescription("The type of address specified in the object 'extremeAuthServerAddress'. Currently, only 'ipv4' and 'dns' are supported.")
extremeAPAuthServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 12, 1, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeAPAuthServerAddress.setStatus('current')
if mibBuilder.loadTexts: extremeAPAuthServerAddress.setDescription('IP address of the radius server. The act of assigning an IP address enables the client to use the server. Setting this value to 0.0.0.0 disables this entry.')
extremeAPAuthServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeAPAuthServerPort.setStatus('current')
if mibBuilder.loadTexts: extremeAPAuthServerPort.setDescription('The UDP port number of the remote syslog server to which syslog messages will be sent.')
extremeAPAuthServerSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 12, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeAPAuthServerSecret.setStatus('current')
if mibBuilder.loadTexts: extremeAPAuthServerSecret.setDescription('This is the shared secret between the Authenticator and radius server. This is logically write-only.')
extremeAPAuthServerReTransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 12, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeAPAuthServerReTransmit.setStatus('current')
if mibBuilder.loadTexts: extremeAPAuthServerReTransmit.setDescription('This is the timeout in seconds after which the Authenticator will re transmit requests to the radius server.')
extremeAPAuthServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 12, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeAPAuthServerStatus.setStatus('current')
if mibBuilder.loadTexts: extremeAPAuthServerStatus.setDescription('Specifies whether the DNS entry is in use or not')
extremeWirelessScanCfgTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 24), )
if mibBuilder.loadTexts: extremeWirelessScanCfgTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanCfgTable.setDescription('This table contains one entry per wireless interface. It allows for configuration of active and passive scan parameters.')
extremeWirelessScanCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 24, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: extremeWirelessScanCfgEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanCfgEntry.setDescription('')
extremeWirelessScanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 24, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessScanEnable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanEnable.setDescription('By setting this to true the wireless interface will collect information from beacons and (possible) probe responses. If this value is set to false this information will not be collected.')
extremeWirelessScanSendProbe = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 24, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessScanSendProbe.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanSendProbe.setDescription('If this value is set to TRUE the wireless interface will send probe requests to the broadcast SSID every ProbeInterval. The results of these probes will be recorded in the scan results table. If this is false, the AP will only collect information from beacon frames.')
extremeWirelessScanProbeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 24, 1, 3), Unsigned32().clone(100)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessScanProbeInterval.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanProbeInterval.setDescription('This allows for the configuration of the interval over which probe requests will be sent.')
extremeWirelessScanResultTableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 24, 1, 4), Unsigned32().clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessScanResultTableSize.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultTableSize.setDescription('This parameter permits the configuration of the result table size. If there are more entries discovered than there are room for the new entry will replace the oldest entry in the table. In this case a new entry trap will be sent with the OverFlow value set to TRUE.')
extremeWirelessScanResultTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 24, 1, 5), Unsigned32().clone(3600)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessScanResultTimeout.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultTimeout.setDescription("By default the scan result table will age out entries which haven't been updated for some time. When an entry is aged out of the table a scanResultAgeOut trap is generated. Setting this value to 0 will disable the aging out of entries.")
extremeWirelessScanResetStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 24, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessScanResetStats.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResetStats.setDescription('Setting this to TRUE will cause the scan module to reset its internal statistics, as well as the packet counts for each entry in the scan results table. It will *not* remove any entries in the scan table.')
extremeWirelessScanClearTable = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 24, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessScanClearTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanClearTable.setDescription('Setting this to TRUE will cause the scan module to reset its internal table. All currently detected stations will be removed. Scan statistics (i.e. watermark) will not be reset.')
extremeWirelessScanSendAPAddedTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 24, 1, 8), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessScanSendAPAddedTrap.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanSendAPAddedTrap.setDescription('Setting this to TRUE will cause the scan module to send a trap whenever a new entry is added to the scan results table. If this value is false the scan module will suppress the trap.')
extremeWirelessScanSendAPRemovedTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 24, 1, 9), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessScanSendAPRemovedTrap.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanSendAPRemovedTrap.setDescription('Setting this to TRUE will cause the scan module to send a trap whenever an entry is removed from the scan results table.')
extremeWirelessScanSendAPUpdatedTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 24, 1, 10), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessScanSendAPUpdatedTrap.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanSendAPUpdatedTrap.setDescription('Setting this to TRUE will cause the scan module to send a trap whenever an entry is updated in the scan results table. This will happen if the list of IEs sent from a particular MAC address changes.')
extremeWirelessOffChannelScanCfgTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 25), )
if mibBuilder.loadTexts: extremeWirelessOffChannelScanCfgTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessOffChannelScanCfgTable.setDescription('This table contains one entry per wireless interface. It allows for configuration of off-channel scan. To start an off-channel scan the management station should write values for channel list, min and max wait. Toggling the start value at this point will start an off-channel scan, unless one is already running. Results of the off-channel scan are reported to the scan results table together with the results of passive scan.')
extremeWirelessOffChannelScanCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 25, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: extremeWirelessOffChannelScanCfgEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessOffChannelScanCfgEntry.setDescription('')
extremeWirelessOffChannelScanStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 25, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessOffChannelScanStart.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessOffChannelScanStart.setDescription('Setting this to TRUE will cause the scan module to start an off-channel scan. The radio will be disabled for the duration of the scan. The scan module will change to each of the specified channels in order. It will then conduct passive (and perhaps active) scans on that channel for the configured intervals. When the scan is finished the radio will be re-enabled. The scan will wait on each channel for at least MinWait milliseconds even if it sees no traffic on the channel. It will wait for at most MaxWait msecs even if it sees traffic. As a result the best case time for the scan is given by: # Of Channels * extremeWirelessOffChannelScanMinWait The worst case completion time is given by: # Of Channels * extremeWirelessOffChannelScanMaxWait Results of the off-channnel scan a reported to the scan results table.')
extremeWirelessOffChannelScanList = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 25, 1, 2), Bits().clone(namedValues=NamedValues(("scanAll", 0), ("scanEvery", 1), ("scanChannel1", 2), ("scanChannel2", 3), ("scanChannel3", 4), ("scanChannel4", 5), ("scanChannel5", 6), ("scanChannel6", 7), ("scanChannel7", 8), ("scanChannel8", 9), ("scanChannel9", 10), ("scanChannel10", 11), ("scanChannel11", 12), ("scanChannel12", 13), ("scanChannel13", 14), ("scanChannel14", 15), ("scanChannel34", 16), ("scanChannel36", 17), ("scanChannel40", 18), ("scanChannel44", 19), ("scanChannel48", 20), ("scanChannel52", 21), ("scanChannel56", 22), ("scanChannel60", 23), ("scanChannel64", 24), ("scanChannel100", 25), ("scanChannel104", 26), ("scanChannel108", 27), ("scanChannel113", 28), ("scanChannel116", 29), ("scanChannel120", 30), ("scanChannel124", 31), ("scanChannel128", 32), ("scanChannel132", 33), ("scanChannel140", 34), ("scanChannel149", 35), ("scanChannel153", 36), ("scanChannel157", 37), ("scanChannel161", 38), ("scanChannel165", 39)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessOffChannelScanList.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessOffChannelScanList.setDescription('This value controls the channels which will be scanned during the off-channel scan. Two special values should be noted: all - causes the radio to scan all channels supported by the configured country code. While on each channel the radio will send out probe requests if the value of extremeWirelessScanSendProbeRequest is true. every - causes the radio to scan all channels, even those which are restricted by the country code. The radio will only send probe request on channels that are legal for that country code.')
extremeWirelessOffChannelScanMinWait = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 25, 1, 3), Unsigned32().clone(1)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessOffChannelScanMinWait.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessOffChannelScanMinWait.setDescription("This value controls the minimum time the off-channel scan will wait on a particular channel if it doesn't see any traffic.")
extremeWirelessOffChannelScanMaxWait = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 25, 1, 4), Unsigned32().clone(10)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessOffChannelScanMaxWait.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessOffChannelScanMaxWait.setDescription('This value controls the maximum time the off-channel scan will wait on a particular channel even if it is receiving beacons etc.')
extremeWirelessOffChannelContinuous = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 25, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessOffChannelContinuous.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessOffChannelContinuous.setDescription('Setting this value to true results in the off-channel scan looping on the configured values until the channel scan is disabled.')
extremeWirelessScanStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 26), )
if mibBuilder.loadTexts: extremeWirelessScanStatusTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanStatusTable.setDescription('This table contains one entry per wireless interface. It provides status and statistics information for the scan feature operating on that wireless interface.')
extremeWirelessScanStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 26, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: extremeWirelessScanStatusEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanStatusEntry.setDescription('')
extremeWirelessScanCurrentTableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 26, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanCurrentTableSize.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanCurrentTableSize.setDescription('This indicates the current number of entries in the scan results table.')
extremeWirelessScanTableWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 26, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanTableWatermark.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanTableWatermark.setDescription('This indicates the largest size the results table has reached since the status values have been reset, or the system has booted.')
extremeWirelessScanTotalOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 26, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanTotalOverflows.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanTotalOverflows.setDescription('This gives the total number of entries which have been removed to make room for a newer entry. This should be equal to the number of AP added traps the system has generated with the overflow value set to true.')
extremeWirelessScanTotalTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 26, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanTotalTimeouts.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanTotalTimeouts.setDescription('This gives the total number of entries which have been removed because they have become stale. This should be equal to the number of AP removed traps sent by the system.')
extremeWirelessScanOffChannelRunning = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 26, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanOffChannelRunning.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanOffChannelRunning.setDescription('If this value is true it indicates that an off-channel scan is currently running. This implies that the radio is current disabled.')
extremeWirelessScanCurrentChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 26, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanCurrentChannel.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanCurrentChannel.setDescription('If the value of extremeWirelessScanOffChannelRunning is true this variable give the value of the current channel the AP is scanning on. If a scan is not running, the value of this variable is undefined.')
extremeWirelessScanLastElement = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 26, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanLastElement.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanLastElement.setDescription('This gives the sysUpTime when the last new station was inserted in the results table.')
extremeWirelessScanNumProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 26, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanNumProbes.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanNumProbes.setDescription('This gives the number of probe requests sent by this wireless interface.')
extremeWirelessScanResultsTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27), )
if mibBuilder.loadTexts: extremeWirelessScanResultsTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsTable.setDescription('This table contains one entry per wireless interface. It provides status and statistics information for the scan feature operating on that wireless interface.')
extremeWirelessScanResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsStationId"))
if mibBuilder.loadTexts: extremeWirelessScanResultsEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsEntry.setDescription('')
extremeWirelessScanResultsStationId = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsStationId.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsStationId.setDescription('This is the MAC address of the detected station.')
extremeWirelessScanResultsFirstSeen = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsFirstSeen.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsFirstSeen.setDescription('This gives the sysUpTime when this station entry was created.')
extremeWirelessScanResultsLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsLastChange.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsLastChange.setDescription('This gives the sysUpTime of the station entry the last time it was updated (i.e. a beacon etc was received).')
extremeWirelessScanResultsPacketTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsPacketTime.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsPacketTime.setDescription('This gives the timestamp field from the last beacon/probe response received from this station.')
extremeWirelessScanResultsPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsPacketRate.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsPacketRate.setDescription('This gives the rate at which the last packet was sent by the station. TODO: What are the units here on rate?')
extremeWirelessScanResultsChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsChannel.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsChannel.setDescription('This gives the channel the last packet received by this station was recieved on.')
extremeWirelessScanResultsMinRSS = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsMinRSS.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsMinRSS.setDescription('This is the smallest RSS value of any packet recieved from this station.')
extremeWirelessScanResultsMaxRSS = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsMaxRSS.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsMaxRSS.setDescription('This is the largest RSS value of any packet recieved from this station.')
extremeWirelessScanResultsAvgRSS = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsAvgRSS.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsAvgRSS.setDescription('This is a running average of RSS values of all the packets received from this station.')
extremeWirelessScanResultsTotalBeacons = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsTotalBeacons.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsTotalBeacons.setDescription('This counter gives the total number of beacons received from this station.')
extremeWirelessScanResultsTotalProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsTotalProbes.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsTotalProbes.setDescription('This counter gives the total number of probe responses received from this station.')
extremeWirelessScanResultsDiscoveredBy = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("probe", 1), ("beacon", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsDiscoveredBy.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsDiscoveredBy.setDescription('This gives the type of packet which cause this results entry to be created.')
extremeWirelessScanResultsDSSOFDM = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsDSSOFDM.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsDSSOFDM.setDescription('TODO : What is this?')
extremeWirelessScanResultsRSNEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsRSNEnabled.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsRSNEnabled.setDescription('Indicates if RSN capabilities are enabled on the sending station.')
extremeWirelessScanResultsGShortSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsGShortSlot.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsGShortSlot.setDescription('TODO : What is this?')
extremeWirelessScanResultsChannelAgility = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsChannelAgility.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsChannelAgility.setDescription('TODO : What is this?')
extremeWirelessScanResultsPBCC = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsPBCC.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsPBCC.setDescription('TODO : What is this?')
extremeWirelessScanResultsPreamble = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsPreamble.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsPreamble.setDescription('TODO : What is this?')
extremeWirelessScanResultsPrivacy = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsPrivacy.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsPrivacy.setDescription('This is true if MAC-based privacy is invoked on the sending station.')
extremeWirelessScanResultsCFPollReq = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsCFPollReq.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsCFPollReq.setDescription('TODO: What is this?')
extremeWirelessScanResultsCFPollable = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsCFPollable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsCFPollable.setDescription('TODO: What is this?')
extremeWirelessScanResultsNetworkType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ibss", 1), ("bss", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsNetworkType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsNetworkType.setDescription('This indicates what type of network it is. If this value is IBSS the last beacon/probe response was sent by a host operating in ad-hoc mode.')
extremeWirelessScanResultsSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 23), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsSSID.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsSSID.setDescription('This provides the value of the SSID value as is was recieved in the beacon or probe response. If no SSID was sent in the probe this value is NULL.')
extremeWirelessScanResultsRateSet = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 24), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsRateSet.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsRateSet.setDescription('This provides the value of the rate set IE as it was received in the beacon or probe response. If no rate set was recieved then this value is NULL.')
extremeWirelessScanResultsExtRateSet = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 25), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsExtRateSet.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsExtRateSet.setDescription('This provides the value of the extended rate set IE as it was received in the beacon or probe response. If no rate set was recieved then this value is NULL.')
extremeWirelessScanResultsDSSParameter = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsDSSParameter.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsDSSParameter.setDescription('Provides the value of the DSS parameter IE, which is the channel.')
extremeWirelessScanResultsTIMCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsTIMCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsTIMCount.setDescription('TODO: What is this?')
extremeWirelessScanResultsTIMPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsTIMPeriod.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsTIMPeriod.setDescription('TODO: What is this?')
extremeWirelessScanResultsTIMTrafficInd = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 29), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsTIMTrafficInd.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsTIMTrafficInd.setDescription('TODO: What is this?')
extremeWirelessScanResultsCountryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 30), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsCountryCode.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsCountryCode.setDescription('Value of country code supplied by the IE')
extremeWirelessScanWPAIEPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 31), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanWPAIEPresent.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanWPAIEPresent.setDescription('If this value is true it indicates that WPA information was gathered from this AP in the last beacon. It implies that the WPA variables below are valid. If this value is false it indicates that this AP did not send a WPA IE in its last beacon, and the values below are meaningless.')
extremeWirelessScanWPAVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanWPAVersion.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanWPAVersion.setDescription('This value gives the version of WPA supported by this AP. See IEEE 802.11i Draft 3.0 section 7 for meaning of various values.')
extremeWirelessScanWPAIEMcastCipher = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 33), WPACipherSet()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanWPAIEMcastCipher.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanWPAIEMcastCipher.setDescription('This value gives the single multicast cipher supported by this AP.')
extremeWirelessScanWPAUcastCipherCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanWPAUcastCipherCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanWPAUcastCipherCount.setDescription('This value gives the total number of unicast ciphers supported by this AP. It corresponds to the number of bits set in the extremeWirelessScanWPAUcastCipher variable.')
extremeWirelessScanWPAUcastCipher = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 35), WPACipherSet()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanWPAUcastCipher.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanWPAUcastCipher.setDescription('This gives the list of cipher suites which are supported by this AP.')
extremeWirelessScanWPAKeyMgmtCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanWPAKeyMgmtCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanWPAKeyMgmtCount.setDescription('This gives the number of key-management schemes supported by this AP. It corresponds to the number of bits set in the extremeWirelessScanWPAKeyMgmtSuite variable.')
extremeWirelessScanWPAKeyMgmtSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 37), WPAKeyMgmtSet()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanWPAKeyMgmtSuite.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanWPAKeyMgmtSuite.setDescription('This indicates the supported key-management suites supported by this AP.')
extremeWirelessScanResultsIEBlob = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 27, 1, 38), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsIEBlob.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsIEBlob.setDescription('All the IEs received in the last packet encoded as a blob of Type, Length, Value tuples.')
extremeWirelessProbeInfoCfgTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 28), )
if mibBuilder.loadTexts: extremeWirelessProbeInfoCfgTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoCfgTable.setDescription('This table contains one entry per physical and virtual interface. It controls the collection of client information via PROBE REQ packets.')
extremeWirelessProbeInfoCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 28, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: extremeWirelessProbeInfoCfgEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoCfgEntry.setDescription('Note that the ifIndex here can be either a physical or virtual wireless interface index.')
extremeWirelessProbeInfoEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 28, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessProbeInfoEnable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoEnable.setDescription('If this is set to TRUE then this virtual or physical interface will register with the MAC layer to receive notification of PROBE REQ packets. In the case of a virtual interface this implies the receipt of directed PROBE REQ packets. If set to FALSE no PROBE REQ packets will be received, and current entries will eventually timeout.')
extremeWirelessProbeInfoKeepIEs = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 28, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessProbeInfoKeepIEs.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoKeepIEs.setDescription('If this value is set to TRUE then the rate IE which is carried in the PROBE REQ packet will be recorded. If FALSE, no rate information will be kept.')
extremeWirelessProbeInfoTableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 28, 1, 3), Unsigned32().clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessProbeInfoTableSize.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoTableSize.setDescription('This value sets the maximum size of the probe info results table, which limits the number of clients this AP can record PROBE REQ information from.')
extremeWirelessProbeInfoTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 28, 1, 4), Unsigned32().clone(3600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessProbeInfoTimeout.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoTimeout.setDescription("This is the timeout, in seconds, for an entry in the probe info table. Once a PROBE REQ has not been heard from a client in this time period, it's entry is removed. The value 0 is a sentinel, indicating no timeout.")
extremeWirelessProbeInfoTableClear = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 28, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessProbeInfoTableClear.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoTableClear.setDescription('Setting this value to TRUE causes all entries in the probe info table to be removed. Reading this value has no meaning.')
extremeWirelessProbeInfoSourceClear = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 28, 1, 6), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessProbeInfoSourceClear.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoSourceClear.setDescription('Setting this to the value of some MAC address results in any matching MAC address in the probe info table being removed. Reading this value has no meaning.')
extremeWirelessProbeInfoTableStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 28, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessProbeInfoTableStatsClear.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoTableStatsClear.setDescription('Setting this to TRUE results in all historical statistics in the probe info table being set to 0. No entries will be removed. Reading this has no meaning.')
extremeWirelessProbeInfoSourceStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 28, 1, 8), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessProbeInfoSourceStatsClear.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoSourceStatsClear.setDescription('Setting this to a MAC address will clear the historical stats associated with the matching MAC address in the probe info table. Reading this has no meaning.')
extremeWirelessProbeInfoSendAddedTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 28, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessProbeInfoSendAddedTrap.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoSendAddedTrap.setDescription('Setting this to TRUE will cause the management module to send a trap whenever a new PROBE REQ source is added to the probe info table. Setting this to FALSE will suppress the trap.')
extremeWirelessProbeInfoSendRemovedTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 28, 1, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessProbeInfoSendRemovedTrap.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoSendRemovedTrap.setDescription('Setting this to TRUE will cause the management module to send a trap whenever a PROBE REQ source is removed from the probe info table. Setting this to false will suppress the trap.')
extremeWirelessProbeInfoStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 29), )
if mibBuilder.loadTexts: extremeWirelessProbeInfoStatusTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoStatusTable.setDescription('This table contains one entry per physical and virtual interface. It gives debugging and status information for the operation of the probe info feature on that interface.')
extremeWirelessProbeInfoStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 29, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: extremeWirelessProbeInfoStatusEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoStatusEntry.setDescription('Note that the ifIndex here can be either a physical or virtual wireless interface index.')
extremeWirelessProbeInfoStatusCurrentTableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 29, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessProbeInfoStatusCurrentTableSize.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoStatusCurrentTableSize.setDescription('This gives the current number of entries in the probe info table for this interface.')
extremeWirelessProbeInfoStatusWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 29, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessProbeInfoStatusWatermark.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoStatusWatermark.setDescription('This is the maximum size the probe info table has been since the statistics have been reset.')
extremeWirelessProbeInfoStatusTotalOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 29, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessProbeInfoStatusTotalOverflows.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoStatusTotalOverflows.setDescription('This gives the number of times an entry in the probe info table was overwritten because the table was full.')
extremeWirelessProbeInfoStatusTotalTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 29, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessProbeInfoStatusTotalTimeouts.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoStatusTotalTimeouts.setDescription('This gives the number of times an entry in the probe info table was timed out.')
extremeWirelessProbeInfoStatusLastElement = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 29, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessProbeInfoStatusLastElement.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoStatusLastElement.setDescription('This gives the sysUpTime the last time an entry was added to the probe info table (or modified).')
extremeWirelessProbeInfoStatusTotalProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 29, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessProbeInfoStatusTotalProbes.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoStatusTotalProbes.setDescription('This gives the total number of PROBE REQ packets that this interface has gotten.')
extremeWirelessProbeInfoTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 30), )
if mibBuilder.loadTexts: extremeWirelessProbeInfoTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoTable.setDescription('This table contains one entry for each source MAC from which a PROBE REQ packet has been received. Entries are added when a packet is recieved from a new source mac. Entries are removed via management action, or by timeout or overflow.')
extremeWirelessProbeInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 30, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "EXTREME-WIRELESS-MIB", "extremeWirelessProbeInfoSource"))
if mibBuilder.loadTexts: extremeWirelessProbeInfoEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoEntry.setDescription('Note that the ifIndex here can be either a physical or virtual wireless interface index. In addition, this table is indexed by the MAC address of the PROBE REQ source.')
extremeWirelessProbeInfoSource = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 30, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessProbeInfoSource.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoSource.setDescription('This is the MAC address of the source which sent us the PROBE REQ packets described by this entry.')
extremeWirelessProbeInfoTotalProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 30, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessProbeInfoTotalProbes.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoTotalProbes.setDescription('This gives the total number of PROBE REQ packets we have received from this source since the last time the stats were cleared.')
extremeWirelessProbeInfoTotalProbeResp = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 30, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessProbeInfoTotalProbeResp.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoTotalProbeResp.setDescription('This gives the total number of PROBE RESP packets we have sent to this source. This may not be equal to PROBE REQ based on rxmit, misses, etc.')
extremeWirelessProbeInfoRateIESize = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 30, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessProbeInfoRateIESize.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoRateIESize.setDescription('This gives the size of the rate-ie field in bytes. This may be 0, at which point there is no rate-ie.')
extremeWirelessProbeInfoRateIE = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 30, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessProbeInfoRateIE.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoRateIE.setDescription('This gives the rate IE as recieved in the last PROBE REQ packet. It is encoded as a TLV exactly as it was in the frame. This field may return NULL if storing of rate IE fields is disabled.')
extremeWirelessProbeInfoFirstSeen = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 30, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessProbeInfoFirstSeen.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoFirstSeen.setDescription('This gives the sysUpTime the first time a PROBE REQ was seen from this source.')
extremeWirelessProbeInfoLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 30, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessProbeInfoLastChange.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoLastChange.setDescription('This gives the sysUpTime the last time a PROBE REQ was seen from this source.')
extremeWirelessProbeInfoLastRSS = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 30, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessProbeInfoLastRSS.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoLastRSS.setDescription('This gives the RSSI from the last PROBE REQ packet received from this station.')
extremeWirelessProbeInfoLastRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 30, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessProbeInfoLastRate.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoLastRate.setDescription('This gives the rate at which the last packet was received from this station.')
extremeWirelessProbeInfoLastChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 30, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessProbeInfoLastChannel.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoLastChannel.setDescription('This gives the channel on which the last PROBE REQ from this station was heard. PROBE REQs may be heard during an off-channel scan, at which point this may not be equal to the current channel.')
extremeWirelessClientDiagCfgTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 31), )
if mibBuilder.loadTexts: extremeWirelessClientDiagCfgTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagCfgTable.setDescription('This table contains one row per wireless interface. Each row contains configuration values for collection of per-client diagnostic information.')
extremeWirelessClientDiagCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 31, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: extremeWirelessClientDiagCfgEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagCfgEntry.setDescription('There is one entry in this table per virtual interface (SSID).')
extremeWirelessClientDiagCfgEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 31, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessClientDiagCfgEnable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagCfgEnable.setDescription('Setting this to TRUE enables the collection of historical information on this virtual interface. This implies that stations which send ASSOC or AUTH packets will have new entries created in the table for this interface.')
extremeWirelessClientDiagCfgClearClient = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 31, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessClientDiagCfgClearClient.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagCfgClearClient.setDescription('Setting this to the MAC address of a client in the diag tables will clear the counters for that client. The entry will not be removed from the table, but all summation counters will be cleared.')
extremeWirelessClientDiagCfgTableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 31, 1, 3), Unsigned32().clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessClientDiagCfgTableSize.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagCfgTableSize.setDescription('This value will configure the maximum size of the diag table. The value is specified in number of entries. A value of 0 implies no upper limit.')
extremeWirelessClientDiagCfgTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 31, 1, 4), Unsigned32().clone(3600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessClientDiagCfgTimeout.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagCfgTimeout.setDescription('This value will configure the timeout of an entry from the diagnostics tables. The value is given in seconds. A value of 0 implies no timeout.')
extremeWirelessClientDiagStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 32), )
if mibBuilder.loadTexts: extremeWirelessClientDiagStatusTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagStatusTable.setDescription('This table contains one entry per virtual interface. Values stored here give current status of the historical client diag feature.')
extremeWirelessClientDiagStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 32, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: extremeWirelessClientDiagStatusEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagStatusEntry.setDescription('Note that ifIndex here is virtual ifIndex (SSID).')
extremeWirelessClientDiagCurrentTableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 32, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagCurrentTableSize.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagCurrentTableSize.setDescription('This is the current size, in entries of the client diag tables.')
extremeWirelessClientDiagTableWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 32, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagTableWatermark.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagTableWatermark.setDescription('This is the maximum size the client diag table has been since the last time the statistics were cleared.')
extremeWirelessClientDiagTotalOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 32, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagTotalOverflows.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagTotalOverflows.setDescription('This is the total number of times an entry has been replaced by a newer entry because there was no room left in the table.')
extremeWirelessClientDiagTotalTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 32, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagTotalTimeouts.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagTotalTimeouts.setDescription('This is the total number of times an entry has been aged-out of the table.')
extremeWirelessClientDiagLastElement = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 32, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagLastElement.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagLastElement.setDescription('This is sysUpTime when the last entry was added to the table.')
extremeWirelessClientDiagSupportsSpeedCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 32, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagSupportsSpeedCounters.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagSupportsSpeedCounters.setDescription('This value indicates if this AP supports the speed-based counters from the extremeWirelessClientSpeedCountersTable.')
extremeWirelessClientDiagSupportsSizeCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 32, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagSupportsSizeCounters.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagSupportsSizeCounters.setDescription('This value indicates if this AP supports the size-based counters from the extremeWirelessClientMACSizeCounterTable.')
extremeWirelessClientDiagSupportsPacketCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 32, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagSupportsPacketCounters.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagSupportsPacketCounters.setDescription('This value indicates if this AP supports the packet-based counters from the extremeWirelessClientPacketCountersTable.')
extremeWirelessClientDiagTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33), )
if mibBuilder.loadTexts: extremeWirelessClientDiagTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagTable.setDescription('This table contains information on a per-client basis. Rows are indexed first by virtual interface, then by client MAC.')
extremeWirelessClientDiagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "EXTREME-WIRELESS-MIB", "extremeWirelessClientDiagMac"))
if mibBuilder.loadTexts: extremeWirelessClientDiagEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagEntry.setDescription('Note that ifIndex here is virtual ifIndex (SSID).')
extremeWirelessClientDiagMac = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagMac.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagMac.setDescription('This is the MAC address of the station this entry describes.')
extremeWirelessClientDiagStateWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagStateWatermark.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagStateWatermark.setDescription('This is the highest state this client has been in.')
extremeWirelessClientDiagEntersInDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagEntersInDetected.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagEntersInDetected.setDescription('This is the total number of times the client has entered the detected state.')
extremeWirelessClientDiagErrorsInDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagErrorsInDetected.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagErrorsInDetected.setDescription('This is the total number of errors this client has experienced since the counters were cleared.')
extremeWirelessClientDiagAuthReqInDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagAuthReqInDetected.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagAuthReqInDetected.setDescription('This is the total number of AUTH REQ packets received from this client while it was in the detected state.')
extremeWirelessClientDiagOtherReqInDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagOtherReqInDetected.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagOtherReqInDetected.setDescription('This is the total number of REQ packets received from this client while it was in detected state that were not AUTH REQ packets.')
extremeWirelessClientDiagMgmtActionInDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagMgmtActionInDetected.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagMgmtActionInDetected.setDescription('This is the total number of times management initiated action (i.e. force-disassociate) was received for this client in the detected state.')
extremeWirelessClientDiagTimeOutInDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagTimeOutInDetected.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagTimeOutInDetected.setDescription('This is the total number of timeouts which happened to this client in the detected state.')
extremeWirelessClientDiagEntersInAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagEntersInAuth.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagEntersInAuth.setDescription('This is the total number of times the client has entered the AUTHED state.')
extremeWirelessClientDiagErrorsInAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagErrorsInAuth.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagErrorsInAuth.setDescription('This is the total number of times the client has had errors in the AUTHED state.')
extremeWirelessClientDiagAssocReqInAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagAssocReqInAuth.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagAssocReqInAuth.setDescription('This is the total number of ASSOC REQ or REASSOC REQ packets received from this client while in the AUTHED state.')
extremeWirelessClientDiagOtherReqInAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagOtherReqInAuth.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagOtherReqInAuth.setDescription('This is the total number of non-ASSOC/REASSOC packets received from this client while in the AUTHED state.')
extremeWirelessClientDiagMgmtActionInAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagMgmtActionInAuth.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagMgmtActionInAuth.setDescription('This is the total number of management initiated action which this client experienced while in the AUTHED state.')
extremeWirelessClientDiagTimeOutInAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagTimeOutInAuth.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagTimeOutInAuth.setDescription('This is the total number of times this client timed out while in the authed state.')
extremeWirelessClientDiagEntersInAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagEntersInAssoc.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagEntersInAssoc.setDescription('This is the total number of times this client has entered the associated state.')
extremeWirelessClientDiagErrorsInAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagErrorsInAssoc.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagErrorsInAssoc.setDescription('This is the total number of errors this client has had in the associated state.')
extremeWirelessClientDiagMgmtActionInAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagMgmtActionInAssoc.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagMgmtActionInAssoc.setDescription('This is the total number of management actions which have happened to this client in the associated state.')
extremeWirelessClientDiagTimeOutInAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagTimeOutInAssoc.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagTimeOutInAssoc.setDescription('This is the total number of times this station has been timed-out in the associated state.')
extremeWirelessClientDiagEntersInForward = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagEntersInForward.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagEntersInForward.setDescription('This is the total number of times this client has entered the forwarding state.')
extremeWirelessClientDiagMgmtActionInForward = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagMgmtActionInForward.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagMgmtActionInForward.setDescription('This is the total number of times this client has experience a management action while in forwarding.')
extremeWirelessClientDiagTimeOutInForward = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagTimeOutInForward.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagTimeOutInForward.setDescription('This is the total number of timeouts this client has experienced while in forwarding.')
extremeWirelessClientDiagTotal802Auths = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagTotal802Auths.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagTotal802Auths.setDescription('This is the total number of times this client has tried to authenticate using 802.1x.')
extremeWirelessClientDiagTotalNetLoginAuths = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 33, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagTotalNetLoginAuths.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagTotalNetLoginAuths.setDescription('This is the total number of times this client has tried to authenticate using NetLogin.')
extremeWirelessClientAssocInfoTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34), )
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoTable.setDescription('This table contains one row per client on a wireless interface. It gives information about the association history and parameters of that client.')
extremeWirelessClientAssocInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "EXTREME-WIRELESS-MIB", "extremeWirelessClientDiagMac"))
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoEntry.setDescription('Note that ifIndex here is virtual ifIndex (SSID).')
extremeWirelessClientAssocInfoAssociated = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoAssociated.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoAssociated.setDescription('This gives the current MAC-layer association status of this client.')
extremeWirelessClientAssocInfoTotalAssocReq = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoTotalAssocReq.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoTotalAssocReq.setDescription('This gives the total number of ASSOC REQ pdus recieved from this client since the last time the counters were cleared.')
extremeWirelessClientAssocInfoTotalReAssocReq = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoTotalReAssocReq.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoTotalReAssocReq.setDescription('This gives the total number of REASSOC REQ PDUs received from this client since the last time the counters were cleared.')
extremeWirelessClientAssocInfoTotalAssocResp = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoTotalAssocResp.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoTotalAssocResp.setDescription('This gives the total number of ASSOC RESP pdus sent to this client since the last time the counters were cleared.')
extremeWirelessClientAssocInfoTotalAssocOK = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoTotalAssocOK.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoTotalAssocOK.setDescription('This gives the total number of ASSOC RESP PDUs which carried a status = ok response.')
extremeWirelessClientAssocInfoTotalAssocFail = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoTotalAssocFail.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoTotalAssocFail.setDescription('This gives the total number of ASSOC RESP PDUs which carried a status = failed response.')
extremeWirelessClientAssocInfoTotalDisassocReq = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoTotalDisassocReq.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoTotalDisassocReq.setDescription('This gives the total number of ASSOC RESP PDUs which carried a status = failed response.')
extremeWirelessClientAssocInfoTotalDisassocResp = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoTotalDisassocResp.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoTotalDisassocResp.setDescription('This gives the total number of ASSOC RESP PDUs which carried a status = failed response.')
extremeWirelessClientAssocInfoRateIE = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoRateIE.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoRateIE.setDescription("This is the value of the rate IE carried in the last ASSOC REQ packet if this wireless interface is configured to keep IEs. If it's not, this will be NULL. The IE is encoded as a series of bytes exactly as the value portion of the IE in the PDU.")
extremeWirelessClientAssocInfoLastAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoLastAssoc.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoLastAssoc.setDescription('This is sysUpTime when the last ASSOC REQ was received from this client.')
extremeWirelessClientAssocInfoLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoLastError.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoLastError.setDescription('This is sysUpTime when the last ASSOC RESP was sent to this client with a failure status.')
extremeWirelessClientAssocInfoLastErrorType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("noError", 0), ("rateMismatch", 1), ("badState", 2), ("badCapability", 3), ("couterMeasure", 4), ("mcastCipher", 5), ("maxAssoc", 6), ("rsnRequired", 7), ("rsnMismatch", 8), ("otherError", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoLastErrorType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoLastErrorType.setDescription('This is an enumerated type which indicates which was the last error this client experienced during association.')
extremeWirelessClientAssocInfoErrorRateMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoErrorRateMismatch.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoErrorRateMismatch.setDescription('This is the total number of failed associations due to a mismatch of the rate IEs.')
extremeWirelessClientAssocInfoErrorBadState = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoErrorBadState.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoErrorBadState.setDescription('This is the total number of failed associations due to the client being in the wrong state.')
extremeWirelessClientAssocInfoErrorBadCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoErrorBadCapability.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoErrorBadCapability.setDescription('This is the total number of failed associations due to the client having a capability mismatch with the AP.')
extremeWirelessClientAssocInfoErrorCounterMeasure = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoErrorCounterMeasure.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoErrorCounterMeasure.setDescription('This is the total number of failed associations due to the client being subject to a counter measure.')
extremeWirelessClientAssocInfoErrorMcastCipher = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoErrorMcastCipher.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoErrorMcastCipher.setDescription('This is the total number of failed associations due to the client not supporting the current multicast cipher.')
extremeWirelessClientAssocInfoErrorMaxAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoErrorMaxAssoc.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoErrorMaxAssoc.setDescription('This is the total number of failed associations due to the AP having too many associations already.')
extremeWirelessClientAssocInfoErrorRSNRequired = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoErrorRSNRequired.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoErrorRSNRequired.setDescription('This is the total number of failed associations due to the client not supplying the (required) RSN IE.')
extremeWirelessClientAssocInfoErrorRSNMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoErrorRSNMismatch.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoErrorRSNMismatch.setDescription("This is the total number of failed associations due to the client's RSN IE not matching supported features on the AP.")
extremeWirelessClientAssocInfoErrorOther = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoErrorOther.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoErrorOther.setDescription("This is the total number of failed associations due to the client's RSN IE not matching supported features on the AP.")
extremeWirelessClientAssocInfoWPAIEPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoWPAIEPresent.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoWPAIEPresent.setDescription('If this value is true it indicates that WPA information was gathered from this station in the last association request. If true, it implies the values of the WPA variables below are valid. If false, it indicates that this station did not send a WPA IE in its last association.')
extremeWirelessClientAssocInfoWPAVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoWPAVersion.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoWPAVersion.setDescription('This value gives the version of WPA supported by this station. See IEEE 802.11i Draft 3.0 section 7 for meaning of various values.')
extremeWirelessClientAssocInfoWPAIEMcastCipher = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 24), WPACipherSet()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoWPAIEMcastCipher.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoWPAIEMcastCipher.setDescription('This value gives the single multicast cipher supported by this client.')
extremeWirelessClientAssocInfoWPAUcastCipherCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoWPAUcastCipherCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoWPAUcastCipherCount.setDescription('This gives the number of set bits in the ucast cipher variable below. In this case this number should always be 1.')
extremeWirelessClientAssocInfoWPAUcastCipher = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 26), WPACipherSet()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoWPAUcastCipher.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoWPAUcastCipher.setDescription('This gives the cipher suites which was requested by this client during its last assoc req.')
extremeWirelessClientAssocInfoWPAKeyMgmtCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoWPAKeyMgmtCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoWPAKeyMgmtCount.setDescription('This value gives the number of key management suites requested by this client in the last assoc. req message. It indicates the number of set bits in the mgmt suite variable below.')
extremeWirelessClientAssocInfoWPAKeyMgmtSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 28), WPAKeyMgmtSet()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoWPAKeyMgmtSuite.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocInfoWPAKeyMgmtSuite.setDescription('Gives the key management suite requested by this client during its last association request.')
extremeWirelessClientAssocIEBlob = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 34, 1, 29), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocIEBlob.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocIEBlob.setDescription('This is the IE list sent in the association frame encoded as a series of TLVs.')
extremeWirelessClientAuthInfoTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35), )
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoTable.setDescription('This table contains one row per client on a wireless interface. It gives information about the authentication history and params of that client.')
extremeWirelessClientAuthInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "EXTREME-WIRELESS-MIB", "extremeWirelessClientDiagMac"))
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoEntry.setDescription('Note that ifIndex here is virtual ifIndex (SSID).')
extremeWirelessClientAuthInfoCurrentAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoCurrentAuth.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoCurrentAuth.setDescription('This gives the current MAC-layer authentication status of the client.')
extremeWirelessClientAuthInfoTotalAuths = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoTotalAuths.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoTotalAuths.setDescription('This is the total number of AUTH REQ packets received from this client since the last time the counters were cleared.')
extremeWirelessClientAuthInfoTotalAuthResp = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoTotalAuthResp.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoTotalAuthResp.setDescription('This is the total number of AUTH RESP packets sent to this client since the last time the counters were cleared.')
extremeWirelessClientAuthInfoTotalAuthsOK = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoTotalAuthsOK.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoTotalAuthsOK.setDescription('This is the total number of AUTH RESP packets sent to this client which carried a STATUS = OK message.')
extremeWirelessClientAuthInfoTotalAuthsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoTotalAuthsFailed.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoTotalAuthsFailed.setDescription('This is the total number of AUTH RESP packets sent to this client which carried a STATUS = Failed message.')
extremeWirelessClientAuthInfoTotalDeauthReq = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoTotalDeauthReq.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoTotalDeauthReq.setDescription('This is the total number of DEAUTH REQ packets sent from this client.')
extremeWirelessClientAuthInfoTotalDeauthResp = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoTotalDeauthResp.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoTotalDeauthResp.setDescription('This is the total number of DEAUTH RESP packets sent to this client.')
extremeWirelessClientAuthInfoTotalOpen = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoTotalOpen.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoTotalOpen.setDescription('This is the total number of AUTH REQ packets which requested open authentication from the AP.')
extremeWirelessClientAuthInfoTotalShared = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoTotalShared.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoTotalShared.setDescription('This is the total number of AUTH REQ packets which requested shared authentication from the AP.')
extremeWirelessClientAuthInfoLastAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoLastAuth.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoLastAuth.setDescription('This is the sysUpTime the last time this client sent a request for authentication.')
extremeWirelessClientAuthInfoLastAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("open", 1), ("shared", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoLastAuthType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoLastAuthType.setDescription('This is the last type of authentication requested by this client.')
extremeWirelessClientAuthInfoLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoLastError.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoLastError.setDescription('This is the sysUpTime of the last authentication failure for this client.')
extremeWirelessClientAuthInfoLastErrorType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noError", 0), ("resourceFailure", 1), ("sequenceNumber", 2), ("challengeText", 3), ("algorithmMismatch", 4), ("keyIndex", 5), ("otherError", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoLastErrorType.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoLastErrorType.setDescription('This is the OID of the last error counter that was incremented for this client.')
extremeWirelessClientAuthInfoErrorResourceFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoErrorResourceFailure.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoErrorResourceFailure.setDescription('This is the total number of authentication failures which have resulted from resource failures.')
extremeWirelessClientAuthInfoErrorSequenceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoErrorSequenceNum.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoErrorSequenceNum.setDescription('This is the total number of authentication failures which have resulted from bad packet sequence numbers.')
extremeWirelessClientAuthInfoErrorChallengeText = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoErrorChallengeText.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoErrorChallengeText.setDescription('This is the total number of authentication failures which have resutled from challenge text mismatch.')
extremeWirelessClientAuthInfoErrorTypeMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoErrorTypeMismatch.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoErrorTypeMismatch.setDescription('This is the total number of authentication failures which have resutled from the requested authentication type (i.e. open/shared) not matching what this virutal interface is configured for.')
extremeWirelessClientAuthInfoErrorKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoErrorKeyIndex.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoErrorKeyIndex.setDescription('This is the total number of authentication failures which have resulted from key index mismatches.')
extremeWirelessClientAuthInfoErrorOther = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 35, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoErrorOther.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthInfoErrorOther.setDescription('This is the total number of authentication failures which have resulted from unspecified errors.')
extremeWirelessClientMACInfoTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 36), )
if mibBuilder.loadTexts: extremeWirelessClientMACInfoTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientMACInfoTable.setDescription('This table contains one entry per source MAC which has tried to authenticate with this virtual interface (SSID). Entries are created when AUTH or REATH REQ packets are received from new clients. Entries can be aged out, removed by management action, or overwritten by an overflow.')
extremeWirelessClientMACInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 36, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "EXTREME-WIRELESS-MIB", "extremeWirelessClientDiagMac"))
if mibBuilder.loadTexts: extremeWirelessClientMACInfoEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientMACInfoEntry.setDescription('')
extremeWirelessClientMACInfoMinRSS = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 36, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientMACInfoMinRSS.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientMACInfoMinRSS.setDescription('This gives the minimum RSS indication of any packet we have seen from this client. A value of 0 indicates that RSSI has been unavailable.')
extremeWirelessClientMACInfoMaxRSS = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 36, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientMACInfoMaxRSS.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientMACInfoMaxRSS.setDescription('This gives the maximum RSS indication of any packet we have seen from this client. A value of 0 indicates that RSSI has been unavailable.')
extremeWirelessClientMACInfoAvgRSS = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 36, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientMACInfoAvgRSS.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientMACInfoAvgRSS.setDescription('This gives the average RSS indication of any packet we have seen from this client. A value of 0 indicates that RSSI has been unavailable.')
extremeWirelessClientMACInfoTotalProbeReq = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 36, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientMACInfoTotalProbeReq.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientMACInfoTotalProbeReq.setDescription('This gives the total number of PROBE REQ packets recieved from this client since the counters have been cleared.')
extremeWirelessClientMACInfoTotalAuthReq = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 36, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientMACInfoTotalAuthReq.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientMACInfoTotalAuthReq.setDescription('This gives the total number of AUTH REQ packets recieved from this client since the counters have been cleared.')
extremeWirelessClientMACInfoTotalAssocReq = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 36, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientMACInfoTotalAssocReq.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientMACInfoTotalAssocReq.setDescription('This gives the total number of ASSOC REQ packets recieved from this client since the counters have been cleared.')
extremeWirelessClientMACInfoTotalReAssocReq = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 36, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientMACInfoTotalReAssocReq.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientMACInfoTotalReAssocReq.setDescription('This gives the total number of REASSOC REQ packets recieved from this client since the counters have been cleared.')
extremeWirelessClientMACInfoTotalDeAssocReq = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 36, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientMACInfoTotalDeAssocReq.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientMACInfoTotalDeAssocReq.setDescription('This gives the total number of DEASSOC REQ packets recieved from this client since the counters have been cleared.')
extremeWirelessClientMACInfoTotalDeAuthReq = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 36, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientMACInfoTotalDeAuthReq.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientMACInfoTotalDeAuthReq.setDescription('This gives the total number of DEAUTH REQ packets recieved from this client since the counters have been cleared.')
extremeWirelessClientMACInfoTotalPsPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 36, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientMACInfoTotalPsPoll.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientMACInfoTotalPsPoll.setDescription('This gives the total number of PS POLL packets recieved from this client since the counters have been cleared.')
extremeWirelessClientMACInfoTotalData = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 36, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientMACInfoTotalData.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientMACInfoTotalData.setDescription('This gives the total number of data frames received from this client since the counters have been cleared.')
extremeWirelessClientMACInfoNavValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 36, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientMACInfoNavValue.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientMACInfoNavValue.setDescription('TODO: Is this an average, total, what?')
extremeWirelessClientSizeCounterTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37), )
if mibBuilder.loadTexts: extremeWirelessClientSizeCounterTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSizeCounterTable.setDescription('There is one entry in this table for each client which has tried to authenticate with this virtual interface. A new entry is created when an AUTH or REATH REQ packet is received from a new station. Entries are removed by management action, timeout or overwritten due to overflow. Entries in this table are also indexed by virtual interface. A client which has tried to authenticate to multiple virtual interfaces may have more than one entry in this table.')
extremeWirelessClientSizeCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "EXTREME-WIRELESS-MIB", "extremeWirelessClientDiagMac"))
if mibBuilder.loadTexts: extremeWirelessClientSizeCounterEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSizeCounterEntry.setDescription('')
extremeWirelessClientFrameSizeReXmit64 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeReXmit64.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeReXmit64.setDescription('This gives the number of frags retransmitted to this client which were less than or equal to 64 bytes in length.')
extremeWirelessClientFrameSizeReXmit128 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeReXmit128.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeReXmit128.setDescription('This gives the number of frags retransmitted to this client which were between 64 and 128 bytes in length.')
extremeWirelessClientFrameSizeReXmit256 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeReXmit256.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeReXmit256.setDescription('This gives the number of frags retransmitted to this client which were between 128 and 256 bytes in length.')
extremeWirelessClientFrameSizeReXmit512 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeReXmit512.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeReXmit512.setDescription('This gives the number of frags retransmitted to this client which were between 256 and 512 bytes in length.')
extremeWirelessClientFrameSizeReXmit1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeReXmit1024.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeReXmit1024.setDescription('This gives the number of frags retransmitted to this client which were between 512 and 1024 bytes in length.')
extremeWirelessClientFrameSizeReXmit2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeReXmit2048.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeReXmit2048.setDescription('This gives the number of frags retransmitted to this client which were between 1024 and 2048 bytes in length.')
extremeWirelessClientFrameSizeTX64 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeTX64.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeTX64.setDescription('This gives the number of frags transmitted to this client which were less than or equal to 64 bytes in length.')
extremeWirelessClientFrameSizeTX128 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeTX128.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeTX128.setDescription('This gives the number of frags transmitted to this client which were between 64 and 128 bytes in length.')
extremeWirelessClientFrameSizeTX256 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeTX256.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeTX256.setDescription('This gives the number of frags transmitted to this client which were between 128 and 256 bytes in length.')
extremeWirelessClientFrameSizeTX512 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeTX512.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeTX512.setDescription('This gives the number of frags transmitted to this client which were between 256 and 512 bytes in length.')
extremeWirelessClientFrameSizeTX1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeTX1024.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeTX1024.setDescription('This gives the number of frags transmitted to this client which were between 512 and 1024 bytes in length.')
extremeWirelessClientFrameSizeTX2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeTX2048.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeTX2048.setDescription('This gives the number of frags transmitted to this client which were between 1024 and 2048 bytes in length.')
extremeWirelessClientFrameSizeRX64 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeRX64.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeRX64.setDescription('This gives the number of frags received from this client which were less than or equal to 64 bytes in length.')
extremeWirelessClientFrameSizeRX128 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeRX128.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeRX128.setDescription('This gives the number of frags received from this client which were between 64 and 128 bytes in length.')
extremeWirelessClientFrameSizeRX256 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeRX256.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeRX256.setDescription('This gives the number of frags received from this client which were between 128 and 256 bytes in length.')
extremeWirelessClientFrameSizeRX512 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeRX512.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeRX512.setDescription('This gives the number of frags received from this client which were between 256 and 512 bytes in length.')
extremeWirelessClientFrameSizeRX1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeRX1024.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeRX1024.setDescription('This gives the number of frags received from this client which were between 512 and 1024 bytes in length.')
extremeWirelessClientFrameSizeRX2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeRX2048.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeRX2048.setDescription('This gives the number of frags received from this client which were between 1024 and 2048 bytes in length.')
extremeWirelessClientFrameSizeErrorTX64 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorTX64.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorTX64.setDescription('This gives the number of frags which failed to be sent from this client with a length between 0 and 64 bytes.')
extremeWirelessClientFrameSizeErrorTX128 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorTX128.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorTX128.setDescription('This gives the number of frags which failed to be sent from this client with a length between 65 and 128 bytes.')
extremeWirelessClientFrameSizeErrorTX256 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorTX256.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorTX256.setDescription('This gives the number of frags which failed to be sent from this client with a length between 129 and 256 bytes.')
extremeWirelessClientFrameSizeErrorTX512 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorTX512.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorTX512.setDescription('This gives the number of frags which failed to be sent from this client with a length between 257 and 512 bytes.')
extremeWirelessClientFrameSizeErrorTX1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorTX1024.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorTX1024.setDescription('This gives the number of frags which failed to be sent from this client with a length between 513 and 1024 bytes.')
extremeWirelessClientFrameSizeErrorTX2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorTX2048.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorTX2048.setDescription('This gives the number of frags which failed to be sent from this client with a length between 1025 and 2048 bytes.')
extremeWirelessClientFrameSizeErrorRX64 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorRX64.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorRX64.setDescription('This gives the number of frags which were received with an FCS or other error and a length between 0 and 64 bytes.')
extremeWirelessClientFrameSizeErrorRX128 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorRX128.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorRX128.setDescription('This gives the number of frags which were received with an FCS or other error and a length between 65 and 128 bytes.')
extremeWirelessClientFrameSizeErrorRX256 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorRX256.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorRX256.setDescription('This gives the number of frags which were received with an FCS or other error and a length between 129 and 256 bytes.')
extremeWirelessClientFrameSizeErrorRX512 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorRX512.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorRX512.setDescription('This gives the number of frags which were received with an FCS or other error and a length between 257 and 512 bytes.')
extremeWirelessClientFrameSizeErrorRX1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorRX1024.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorRX1024.setDescription('This gives the number of frags which were received with an FCS or other error and a length between 513 and 1024 bytes.')
extremeWirelessClientFrameSizeErrorRX2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorRX2048.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientFrameSizeErrorRX2048.setDescription('This gives the number of frags which were received with an FCS or other error and a length between 1025 and 2048 bytes.')
extremeWirelessClientPacketSizeTX64 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeTX64.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeTX64.setDescription('This gives the number of packets transmitted to this client which were less than or equal to 64 bytes in length.')
extremeWirelessClientPacketSizeTX128 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeTX128.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeTX128.setDescription('This gives the number of packets transmitted to this client which were between 64 and 128 bytes in length.')
extremeWirelessClientPacketSizeTX256 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeTX256.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeTX256.setDescription('This gives the number of packets transmitted to this client which were between 128 and 256 bytes in length.')
extremeWirelessClientPacketSizeTX512 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeTX512.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeTX512.setDescription('This gives the number of packets transmitted to this client which were between 256 and 512 bytes in length.')
extremeWirelessClientPacketSizeTX1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeTX1024.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeTX1024.setDescription('This gives the number of packets transmitted to this client which were between 512 and 1024 bytes in length.')
extremeWirelessClientPacketSizeTX2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeTX2048.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeTX2048.setDescription('This gives the number of packets transmitted to this client which were between 1024 and 2048 bytes in length.')
extremeWirelessClientPacketSizeRX64 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeRX64.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeRX64.setDescription('This gives the number of packets received from this client which were less than or equal to 64 bytes in length.')
extremeWirelessClientPacketSizeRX128 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeRX128.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeRX128.setDescription('This gives the number of packets received from this client which were between 64 and 128 bytes in length.')
extremeWirelessClientPacketSizeRX256 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 39), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeRX256.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeRX256.setDescription('This gives the number of packets received from this client which were between 128 and 256 bytes in length.')
extremeWirelessClientPacketSizeRX512 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 40), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeRX512.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeRX512.setDescription('This gives the number of packets received from this client which were between 256 and 512 bytes in length.')
extremeWirelessClientPacketSizeRX1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 41), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeRX1024.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeRX1024.setDescription('This gives the number of packets received from this client which were between 512 and 1024 bytes in length.')
extremeWirelessClientPacketSizeRX2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 37, 1, 42), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeRX2048.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientPacketSizeRX2048.setDescription('This gives the number of packets received from this client which were between 1024 and 2048 bytes in length.')
extremeWirelessClientSpeedCounterTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38), )
if mibBuilder.loadTexts: extremeWirelessClientSpeedCounterTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedCounterTable.setDescription('This table is indexed by wireless interface index. These are the virtual interfaces corresponding to the SSID. Support for this table is optional, indicated by the value of the variable extremeWirelessClientDiagSupportsSpeedCounters in the status table.')
extremeWirelessClientSpeedCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "EXTREME-WIRELESS-MIB", "extremeWirelessClientDiagMac"))
if mibBuilder.loadTexts: extremeWirelessClientSpeedCounterEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedCounterEntry.setDescription('The ifIndex here is the wireless interface (SSID). It is expected that an entry will be created in this table only after a client sends a AUTH or REATH packet to the SSID.')
extremeWirelessClientSpeedReXmit1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit1.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit1.setDescription('This gives the number of frags which were retransmitted to the given client at 1 Mbps.')
extremeWirelessClientSpeedReXmit2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit2.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit2.setDescription('This gives the number of frags which were retransmitted to the given client at 2 Mbps.')
extremeWirelessClientSpeedReXmit5p5 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit5p5.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit5p5.setDescription('This gives the number of frags which were retransmitted to the given client at 5 Mbps.')
extremeWirelessClientSpeedReXmit6 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit6.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit6.setDescription('This gives the number of frags which were retransmitted to the given client at 6 Mbps.')
extremeWirelessClientSpeedReXmit9 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit9.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit9.setDescription('This gives the number of frags which were retransmitted to the given client at 9 Mbps.')
extremeWirelessClientSpeedReXmit12 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit12.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit12.setDescription('This gives the number of frags which were retransmitted to the given client at 12 Mbps.')
extremeWirelessClientSpeedReXmit18 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit18.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit18.setDescription('This gives the number of frags which were retransmitted to the given client at 18 Mbps.')
extremeWirelessClientSpeedReXmit24 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit24.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit24.setDescription('This gives the number of frags which were retransmitted to the given client at 24 Mbps.')
extremeWirelessClientSpeedReXmit36 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit36.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit36.setDescription('This gives the number of frags which were retransmitted to the given client at 36 Mbps.')
extremeWirelessClientSpeedReXmit48 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit48.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit48.setDescription('This gives the number of frags which were retransmitted to the given client at 48 Mbps.')
extremeWirelessClientSpeedReXmit54 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit54.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedReXmit54.setDescription('This gives the number of frags which were retransmitted to the given client at 54 Mbps.')
extremeWirelessClientSpeedTX1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX1.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX1.setDescription('This gives the number of frags which were transmitted to the given client at 1 Mbps.')
extremeWirelessClientSpeedTX2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX2.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX2.setDescription('This gives the number of frags which were transmitted to the given client at 2 Mbps.')
extremeWirelessClientSpeedTX5p5 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX5p5.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX5p5.setDescription('This gives the number of frags which were transmitted to the given client at 5 Mbps.')
extremeWirelessClientSpeedTX6 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX6.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX6.setDescription('This gives the number of frags which were transmitted to the given client at 6 Mbps.')
extremeWirelessClientSpeedTX9 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX9.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX9.setDescription('This gives the number of frags which were transmitted to the given client at 9 Mbps.')
extremeWirelessClientSpeedTX12 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX12.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX12.setDescription('This gives the number of frags which were transmitted to the given client at 12 Mbps.')
extremeWirelessClientSpeedTX18 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX18.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX18.setDescription('This gives the number of frags which were transmitted to the given client at 18 Mbps.')
extremeWirelessClientSpeedTX24 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX24.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX24.setDescription('This gives the number of frags which were transmitted to the given client at 24 Mbps.')
extremeWirelessClientSpeedTX36 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX36.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX36.setDescription('This gives the number of frags which were transmitted to the given client at 36 Mbps.')
extremeWirelessClientSpeedTX48 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX48.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX48.setDescription('This gives the number of frags which were transmitted to the given client at 48 Mbps.')
extremeWirelessClientSpeedTX54 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX54.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedTX54.setDescription('This gives the number of frags which were transmitted to the given client at 54 Mbps.')
extremeWirelessClientSpeedRX1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX1.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX1.setDescription('This gives the number of frags which were received from the given client at 1 Mbps.')
extremeWirelessClientSpeedRX2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX2.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX2.setDescription('This gives the number of frags which were received from the given client at 2 Mbps.')
extremeWirelessClientSpeedRX5p5 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX5p5.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX5p5.setDescription('This gives the number of frags which were received from the given client at 5 Mbps.')
extremeWirelessClientSpeedRX6 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX6.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX6.setDescription('This gives the number of frags which were received from the given client at 6 Mbps.')
extremeWirelessClientSpeedRX9 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX9.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX9.setDescription('This gives the number of frags which were received from the given client at 9 Mbps.')
extremeWirelessClientSpeedRX12 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX12.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX12.setDescription('This gives the number of frags which were received from the given client at 12 Mbps.')
extremeWirelessClientSpeedRX18 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX18.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX18.setDescription('This gives the number of frags which were received from the given client at 18 Mbps.')
extremeWirelessClientSpeedRX24 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX24.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX24.setDescription('This gives the number of frags which were received from the given client at 24 Mbps.')
extremeWirelessClientSpeedRX36 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX36.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX36.setDescription('This gives the number of frags which were received from the given client at 36 Mbps.')
extremeWirelessClientSpeedRX48 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX48.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX48.setDescription('This gives the number of frags which were received from the given client at 48 Mbps.')
extremeWirelessClientSpeedRX54 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 38, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX54.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientSpeedRX54.setDescription('This gives the number of frags which were received from the given client at 54 Mbps.')
extremeWirelessIntfFrameSizeTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39), )
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeTable.setDescription('There is one entry in this table for each virtual and physical interface. Values for physical interfaces are summations of the values for the constituent virtual interfaces.')
extremeWirelessIntfFrameSizeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeEntry.setDescription('')
extremeWirelessIntfFrameSizeMgmtTX64 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtTX64.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtTX64.setDescription('This gives the number of management-type frames transmitted on this interface which were less than or equal to 64 bytes in length.')
extremeWirelessIntfFrameSizeMgmtTX128 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtTX128.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtTX128.setDescription('This gives the number of management-type frames transmitted on this interface which were between 65 and 128 bytes in length.')
extremeWirelessIntfFrameSizeMgmtTX256 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtTX256.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtTX256.setDescription('This gives the number of management-type frames transmitted on this interface which were between 129 and 256 bytes in length.')
extremeWirelessIntfFrameSizeMgmtTX512 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtTX512.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtTX512.setDescription('This gives the number of management-type frames transmitted on this interface which were between 257 and 512 bytes in length.')
extremeWirelessIntfFrameSizeMgmtTX1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtTX1024.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtTX1024.setDescription('This gives the number of management-type frames transmitted on this interface which were between 513 and 1024 bytes in length.')
extremeWirelessIntfFrameSizeMgmtTX2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtTX2048.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtTX2048.setDescription('This gives the number of management-type frames transmitted on this interface which were between 1025 and 2048 bytes in length.')
extremeWirelessIntfFrameSizeMgmtRX64 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtRX64.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtRX64.setDescription('This gives the number of management-type frames received on this interface which were less than or equal to 64 bytes in length.')
extremeWirelessIntfFrameSizeMgmtRX128 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtRX128.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtRX128.setDescription('This gives the number of management-type frames received on this interface which were between 65 and 128 bytes in length.')
extremeWirelessIntfFrameSizeMgmtRX256 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtRX256.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtRX256.setDescription('This gives the number of management-type frames received on this interface which were between 129 and 256 bytes in length.')
extremeWirelessIntfFrameSizeMgmtRX512 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtRX512.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtRX512.setDescription('This gives the number of management-type frames received on this interface which were between 257 and 512 bytes in length.')
extremeWirelessIntfFrameSizeMgmtRX1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtRX1024.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtRX1024.setDescription('This gives the number of management-type frames received on this interface which were between 513 and 1024 bytes in length.')
extremeWirelessIntfFrameSizeMgmtRX2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtRX2048.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeMgmtRX2048.setDescription('This gives the number of management-type frames received on this interface which were between 1025 and 2048 bytes in length.')
extremeWirelessIntfFrameSizeCtlTX64 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlTX64.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlTX64.setDescription('This gives the number of control-type frames transmitted on this interface which were less than or equal to 64 bytes in length.')
extremeWirelessIntfFrameSizeCtlTX128 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlTX128.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlTX128.setDescription('This gives the number of control-type frames transmitted on this interface which were between 65 and 128 bytes in length.')
extremeWirelessIntfFrameSizeCtlTX256 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlTX256.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlTX256.setDescription('This gives the number of control-type frames transmitted on this interface which were between 129 and 256 bytes in length.')
extremeWirelessIntfFrameSizeCtlTX512 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlTX512.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlTX512.setDescription('This gives the number of control-type frames transmitted on this interface which were between 257 and 512 bytes in length.')
extremeWirelessIntfFrameSizeCtlTX1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlTX1024.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlTX1024.setDescription('This gives the number of control-type frames transmitted on this interface which were between 513 and 1024 bytes in length.')
extremeWirelessIntfFrameSizeCtlTX2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlTX2048.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlTX2048.setDescription('This gives the number of control-type frames transmitted on this interface which were between 1025 and 2048 bytes in length.')
extremeWirelessIntfFrameSizeCtlRX64 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlRX64.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlRX64.setDescription('This gives the number of control-type frames received on this interface which were less than or equal to 64 bytes in length.')
extremeWirelessIntfFrameSizeCtlRX128 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlRX128.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlRX128.setDescription('This gives the number of control-type frames received on this interface which were between 65 and 128 bytes in length.')
extremeWirelessIntfFrameSizeCtlRX256 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlRX256.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlRX256.setDescription('This gives the number of control-type frames received on this interface which were between 129 and 256 bytes in length.')
extremeWirelessIntfFrameSizeCtlRX512 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlRX512.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlRX512.setDescription('This gives the number of control-type frames received on this interface which were between 257 and 512 bytes in length.')
extremeWirelessIntfFrameSizeCtlRX1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlRX1024.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlRX1024.setDescription('This gives the number of control-type frames received on this interface which were between 513 and 1024 bytes in length.')
extremeWirelessIntfFrameSizeCtlRX2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlRX2048.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeCtlRX2048.setDescription('This gives the number of control-type frames received on this interface which were between 1025 and 2048 bytes in length.')
extremeWirelessIntfFrameSizeDataTX64 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataTX64.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataTX64.setDescription('This gives the number of data-type frames transmitted on this interface which were less than or equal to 64 bytes in length.')
extremeWirelessIntfFrameSizeDataTX128 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataTX128.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataTX128.setDescription('This gives the number of data-type frames transmitted on this interface which were between 65 and 128 bytes in length.')
extremeWirelessIntfFrameSizeDataTX256 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataTX256.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataTX256.setDescription('This gives the number of data-type frames transmitted on this interface which were between 129 and 256 bytes in length.')
extremeWirelessIntfFrameSizeDataTX512 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataTX512.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataTX512.setDescription('This gives the number of data-type frames transmitted on this interface which were between 257 and 512 bytes in length.')
extremeWirelessIntfFrameSizeDataTX1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataTX1024.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataTX1024.setDescription('This gives the number of data-type frames transmitted on this interface which were between 513 and 1024 bytes in length.')
extremeWirelessIntfFrameSizeDataTX2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataTX2048.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataTX2048.setDescription('This gives the number of data-type frames transmitted on this interface which were between 1025 and 2048 bytes in length.')
extremeWirelessIntfFrameSizeDataRX64 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataRX64.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataRX64.setDescription('This gives the number of data-type frames received on this interface which were less than or equal to 64 bytes in length.')
extremeWirelessIntfFrameSizeDataRX128 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataRX128.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataRX128.setDescription('This gives the number of data-type frames received on this interface which were between 65 and 128 bytes in length.')
extremeWirelessIntfFrameSizeDataRX256 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataRX256.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataRX256.setDescription('This gives the number of data-type frames received on this interface which were between 129 and 256 bytes in length.')
extremeWirelessIntfFrameSizeDataRX512 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataRX512.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataRX512.setDescription('This gives the number of data-type frames received on this interface which were between 257 and 512 bytes in length.')
extremeWirelessIntfFrameSizeDataRX1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataRX1024.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataRX1024.setDescription('This gives the number of data-type frames received on this interface which were between 513 and 1024 bytes in length.')
extremeWirelessIntfFrameSizeDataRX2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 39, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataRX2048.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeDataRX2048.setDescription('This gives the number of data-type frames received on this interface which were between 1025 and 2048 bytes in length.')
extremeWirelessIntfFrameSizeErrorTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40), )
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorTable.setDescription('There is one entry in this table for each virtual and physical interface. Values for physical interfaces are summations of the values for the constituent virtual interfaces.')
extremeWirelessIntfFrameSizeErrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorEntry.setDescription('')
extremeWirelessIntfFrameSizeReXmit64 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeReXmit64.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeReXmit64.setDescription('This gives the number of frames retransmitted on this interface which were less than or equal to 64 bytes in length.')
extremeWirelessIntfFrameSizeReXmit128 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeReXmit128.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeReXmit128.setDescription('This gives the number of frames retransmitted on this interface which were between 65 and 128 bytes in length.')
extremeWirelessIntfFrameSizeReXmit256 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeReXmit256.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeReXmit256.setDescription('This gives the number of frames retransmitted on this interface which were between 129 and 256 bytes in length.')
extremeWirelessIntfFrameSizeReXmit512 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeReXmit512.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeReXmit512.setDescription('This gives the number of frames retransmitted on this interface which were between 257 and 512 bytes in length.')
extremeWirelessIntfFrameSizeReXmit1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeReXmit1024.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeReXmit1024.setDescription('This gives the number of frames retransmitted on this interface which were between 513 and 1024 bytes in length.')
extremeWirelessIntfFrameSizeReXmit2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeReXmit2048.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeReXmit2048.setDescription('This gives the number of frames retransmitted on this interface which were between 1025 and 2048 bytes in length.')
extremeWirelessIntfFrameSizeErrorTX64 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorTX64.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorTX64.setDescription('This gives the number of frames which failed to be transmitted interface which were less than or equal to 64 bytes in length.')
extremeWirelessIntfFrameSizeErrorTX128 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorTX128.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorTX128.setDescription('This gives the number of frames which failed to be transmitted interface which were between 65 and 128 bytes in length.')
extremeWirelessIntfFrameSizeErrorTX256 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorTX256.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorTX256.setDescription('This gives the number of frames which failed to be transmitted interface which were between 129 and 256 bytes in length.')
extremeWirelessIntfFrameSizeErrorTX512 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorTX512.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorTX512.setDescription('This gives the number of frames which failed to be transmitted interface which were between 257 and 512 bytes in length.')
extremeWirelessIntfFrameSizeErrorTX1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorTX1024.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorTX1024.setDescription('This gives the number of frames which failed to be transmitted interface which were between 513 and 1024 bytes in length.')
extremeWirelessIntfFrameSizeErrorTX2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorTX2048.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorTX2048.setDescription('This gives the number of frames which failed to be transmitted interface which were between 1025 and 2048 bytes in length.')
extremeWirelessIntfFrameSizeErrorRX64 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorRX64.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorRX64.setDescription('This gives the number of frames which had errors on receive on this interface which were less than or equal to 64 bytes in length.')
extremeWirelessIntfFrameSizeErrorRX128 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorRX128.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorRX128.setDescription('This gives the number of frames which had errors on receive on this interface which were between 65 and 128 bytes in length.')
extremeWirelessIntfFrameSizeErrorRX256 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorRX256.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorRX256.setDescription('This gives the number of frames which had errors on receive on this interface which were between 129 and 256 bytes in length.')
extremeWirelessIntfFrameSizeErrorRX512 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorRX512.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorRX512.setDescription('This gives the number of frames which had errors on receive on this interface which were between 257 and 512 bytes in length.')
extremeWirelessIntfFrameSizeErrorRX1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorRX1024.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorRX1024.setDescription('This gives the number of frames which had errors on receive on this interface which were between 513 and 1024 bytes in length.')
extremeWirelessIntfFrameSizeErrorRX2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 40, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorRX2048.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSizeErrorRX2048.setDescription('This gives the number of frames which had errors on receive on this interface which were between 1025 and 2048 bytes in length.')
extremeWirelessIntfFrameSpeedTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41), )
if mibBuilder.loadTexts: extremeWirelessIntfFrameSpeedTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSpeedTable.setDescription('There is one entry in this table for each virtual and physical interface. Values for physical interfaces are summations of the values for the constituent virtual interfaces.')
extremeWirelessIntfFrameSpeedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: extremeWirelessIntfFrameSpeedEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSpeedEntry.setDescription('')
extremeWirelessIntfSpeedMgmtTX1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX1.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX1.setDescription('This gives the number of management-type frames transmitted on this interface at 1Mbps.')
extremeWirelessIntfSpeedMgmtTX2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX2.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX2.setDescription('This gives the number of management-type frames transmitted on this interface at 2Mbps.')
extremeWirelessIntfSpeedMgmtTX5p5 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX5p5.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX5p5.setDescription('This gives the number of management-type frames transmitted on this interface at 5.5Mbps.')
extremeWirelessIntfSpeedMgmtTX6 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX6.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX6.setDescription('This gives the number of management-type frames transmitted on this interface at 6Mbps.')
extremeWirelessIntfSpeedMgmtTX9 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX9.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX9.setDescription('This gives the number of management-type frames transmitted on this interface at 9Mbps.')
extremeWirelessIntfSpeedMgmtTX11 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX11.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX11.setDescription('This gives the number of management-type frames transmitted on this interface at 11Mbps.')
extremeWirelessIntfSpeedMgmtTX12 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX12.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX12.setDescription('This gives the number of management-type frames transmitted on this interface at 12Mbps.')
extremeWirelessIntfSpeedMgmtTX18 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX18.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX18.setDescription('This gives the number of management-type frames transmitted on this interface at 18Mbps.')
extremeWirelessIntfSpeedMgmtTX24 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX24.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX24.setDescription('This gives the number of management-type frames transmitted on this interface at 24Mbps.')
extremeWirelessIntfSpeedMgmtTX36 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX36.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX36.setDescription('This gives the number of management-type frames transmitted on this interface at 36Mbps.')
extremeWirelessIntfSpeedMgmtTX48 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX48.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX48.setDescription('This gives the number of management-type frames transmitted on this interface at 48Mbps.')
extremeWirelessIntfSpeedMgmtTX54 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX54.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtTX54.setDescription('This gives the number of management-type frames transmitted on this interface at 54Mbps.')
extremeWirelessIntfSpeedMgmtRX1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX1.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX1.setDescription('This gives the number of management-type frames recieved on this interface at 1Mbps.')
extremeWirelessIntfSpeedMgmtRX2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX2.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX2.setDescription('This gives the number of management-type frames recieved on this interface at 2Mbps.')
extremeWirelessIntfSpeedMgmtRX5p5 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX5p5.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX5p5.setDescription('This gives the number of management-type frames recieved on this interface at 5.5Mbps.')
extremeWirelessIntfSpeedMgmtRX6 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX6.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX6.setDescription('This gives the number of management-type frames recieved on this interface at 6Mbps.')
extremeWirelessIntfSpeedMgmtRX9 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX9.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX9.setDescription('This gives the number of management-type frames recieved on this interface at 9Mbps.')
extremeWirelessIntfSpeedMgmtRX11 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX11.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX11.setDescription('This gives the number of management-type frames recieved on this interface at 11Mbps.')
extremeWirelessIntfSpeedMgmtRX12 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX12.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX12.setDescription('This gives the number of management-type frames recieved on this interface at 12Mbps.')
extremeWirelessIntfSpeedMgmtRX18 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX18.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX18.setDescription('This gives the number of management-type frames recieved on this interface at 18Mbps.')
extremeWirelessIntfSpeedMgmtRX24 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX24.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX24.setDescription('This gives the number of management-type frames recieved on this interface at 24Mbps.')
extremeWirelessIntfSpeedMgmtRX36 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX36.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX36.setDescription('This gives the number of management-type frames recieved on this interface at 36Mbps.')
extremeWirelessIntfSpeedMgmtRX48 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX48.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX48.setDescription('This gives the number of management-type frames recieved on this interface at 48Mbps.')
extremeWirelessIntfSpeedMgmtRX54 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX54.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedMgmtRX54.setDescription('This gives the number of management-type frames recieved on this interface at 54Mbps.')
extremeWirelessIntfSpeedCtlTX1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX1.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX1.setDescription('This gives the number of control-type frames transmitted on this interface at 1Mbps.')
extremeWirelessIntfSpeedCtlTX2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX2.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX2.setDescription('This gives the number of control-type frames transmitted on this interface at 2Mbps.')
extremeWirelessIntfSpeedCtlTX5p5 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX5p5.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX5p5.setDescription('This gives the number of control-type frames transmitted on this interface at 5.5Mbps.')
extremeWirelessIntfSpeedCtlTX6 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX6.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX6.setDescription('This gives the number of control-type frames transmitted on this interface at 6Mbps.')
extremeWirelessIntfSpeedCtlTX9 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX9.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX9.setDescription('This gives the number of control-type frames transmitted on this interface at 9Mbps.')
extremeWirelessIntfSpeedCtlTX11 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX11.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX11.setDescription('This gives the number of control-type frames transmitted on this interface at 11Mbps.')
extremeWirelessIntfSpeedCtlTX12 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX12.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX12.setDescription('This gives the number of control-type frames transmitted on this interface at 12Mbps.')
extremeWirelessIntfSpeedCtlTX18 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX18.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX18.setDescription('This gives the number of control-type frames transmitted on this interface at 18Mbps.')
extremeWirelessIntfSpeedCtlTX24 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX24.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX24.setDescription('This gives the number of control-type frames transmitted on this interface at 24Mbps.')
extremeWirelessIntfSpeedCtlTX36 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX36.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX36.setDescription('This gives the number of control-type frames transmitted on this interface at 36Mbps.')
extremeWirelessIntfSpeedCtlTX48 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX48.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX48.setDescription('This gives the number of control-type frames transmitted on this interface at 48Mbps.')
extremeWirelessIntfSpeedCtlTX54 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX54.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlTX54.setDescription('This gives the number of control-type frames transmitted on this interface at 54Mbps.')
extremeWirelessIntfSpeedCtlRX1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX1.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX1.setDescription('This gives the number of control-type frames recieved on this interface at 1Mbps.')
extremeWirelessIntfSpeedCtlRX2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX2.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX2.setDescription('This gives the number of control-type frames recieved on this interface at 2Mbps.')
extremeWirelessIntfSpeedCtlRX5p5 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 39), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX5p5.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX5p5.setDescription('This gives the number of control-type frames recieved on this interface at 5.5Mbps.')
extremeWirelessIntfSpeedCtlRX6 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 40), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX6.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX6.setDescription('This gives the number of control-type frames recieved on this interface at 6Mbps.')
extremeWirelessIntfSpeedCtlRX9 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 41), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX9.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX9.setDescription('This gives the number of control-type frames recieved on this interface at 9Mbps.')
extremeWirelessIntfSpeedCtlRX11 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 42), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX11.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX11.setDescription('This gives the number of control-type frames recieved on this interface at 11Mbps.')
extremeWirelessIntfSpeedCtlRX12 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 43), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX12.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX12.setDescription('This gives the number of control-type frames recieved on this interface at 12Mbps.')
extremeWirelessIntfSpeedCtlRX18 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 44), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX18.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX18.setDescription('This gives the number of control-type frames recieved on this interface at 18Mbps.')
extremeWirelessIntfSpeedCtlRX24 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 45), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX24.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX24.setDescription('This gives the number of control-type frames recieved on this interface at 24Mbps.')
extremeWirelessIntfSpeedCtlRX36 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 46), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX36.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX36.setDescription('This gives the number of control-type frames recieved on this interface at 36Mbps.')
extremeWirelessIntfSpeedCtlRX48 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 47), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX48.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX48.setDescription('This gives the number of control-type frames recieved on this interface at 48Mbps.')
extremeWirelessIntfSpeedCtlRX54 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 48), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX54.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedCtlRX54.setDescription('This gives the number of control-type frames recieved on this interface at 54Mbps.')
extremeWirelessIntfSpeedDataTX1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 49), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX1.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX1.setDescription('This gives the number of data-type frames transmitted on this interface at 1Mbps.')
extremeWirelessIntfSpeedDataTX2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 50), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX2.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX2.setDescription('This gives the number of data-type frames transmitted on this interface at 2Mbps.')
extremeWirelessIntfSpeedDataTX5p5 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 51), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX5p5.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX5p5.setDescription('This gives the number of data-type frames transmitted on this interface at 5.5Mbps.')
extremeWirelessIntfSpeedDataTX6 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 52), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX6.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX6.setDescription('This gives the number of data-type frames transmitted on this interface at 6Mbps.')
extremeWirelessIntfSpeedDataTX9 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 53), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX9.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX9.setDescription('This gives the number of data-type frames transmitted on this interface at 9Mbps.')
extremeWirelessIntfSpeedDataTX11 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 54), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX11.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX11.setDescription('This gives the number of data-type frames transmitted on this interface at 11Mbps.')
extremeWirelessIntfSpeedDataTX12 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 55), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX12.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX12.setDescription('This gives the number of data-type frames transmitted on this interface at 12Mbps.')
extremeWirelessIntfSpeedDataTX18 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 56), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX18.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX18.setDescription('This gives the number of data-type frames transmitted on this interface at 18Mbps.')
extremeWirelessIntfSpeedDataTX24 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 57), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX24.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX24.setDescription('This gives the number of data-type frames transmitted on this interface at 24Mbps.')
extremeWirelessIntfSpeedDataTX36 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 58), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX36.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX36.setDescription('This gives the number of data-type frames transmitted on this interface at 36Mbps.')
extremeWirelessIntfSpeedDataTX48 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 59), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX48.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX48.setDescription('This gives the number of data-type frames transmitted on this interface at 48Mbps.')
extremeWirelessIntfSpeedDataTX54 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 60), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX54.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataTX54.setDescription('This gives the number of data-type frames transmitted on this interface at 54Mbps.')
extremeWirelessIntfSpeedDataRX1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 61), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX1.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX1.setDescription('This gives the number of data-type frames recieved on this interface at 1Mbps.')
extremeWirelessIntfSpeedDataRX2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 62), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX2.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX2.setDescription('This gives the number of data-type frames recieved on this interface at 2Mbps.')
extremeWirelessIntfSpeedDataRX5p5 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 63), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX5p5.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX5p5.setDescription('This gives the number of data-type frames recieved on this interface at 5.5Mbps.')
extremeWirelessIntfSpeedDataRX6 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 64), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX6.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX6.setDescription('This gives the number of data-type frames recieved on this interface at 6Mbps.')
extremeWirelessIntfSpeedDataRX9 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 65), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX9.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX9.setDescription('This gives the number of data-type frames recieved on this interface at 9Mbps.')
extremeWirelessIntfSpeedDataRX11 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 66), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX11.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX11.setDescription('This gives the number of data-type frames recieved on this interface at 11Mbps.')
extremeWirelessIntfSpeedDataRX12 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 67), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX12.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX12.setDescription('This gives the number of data-type frames recieved on this interface at 12Mbps.')
extremeWirelessIntfSpeedDataRX18 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 68), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX18.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX18.setDescription('This gives the number of data-type frames recieved on this interface at 18Mbps.')
extremeWirelessIntfSpeedDataRX24 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 69), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX24.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX24.setDescription('This gives the number of data-type frames recieved on this interface at 24Mbps.')
extremeWirelessIntfSpeedDataRX36 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 70), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX36.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX36.setDescription('This gives the number of data-type frames recieved on this interface at 36Mbps.')
extremeWirelessIntfSpeedDataRX48 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 71), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX48.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX48.setDescription('This gives the number of data-type frames recieved on this interface at 48Mbps.')
extremeWirelessIntfSpeedDataRX54 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 41, 1, 72), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX54.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedDataRX54.setDescription('This gives the number of data-type frames recieved on this interface at 54Mbps.')
extremeWirelessIntfFrameSpeedErrorTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42), )
if mibBuilder.loadTexts: extremeWirelessIntfFrameSpeedErrorTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSpeedErrorTable.setDescription('There is one entry in this table for each virtual and physical interface. Values for physical interfaces are summations of the values for the constituent virtual interfaces.')
extremeWirelessIntfFrameSpeedErrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: extremeWirelessIntfFrameSpeedErrorEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfFrameSpeedErrorEntry.setDescription('')
extremeWirelessIntfSpeedReXmit1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit1.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit1.setDescription('This gives the number of frames which were retransmitted on this interface at 1 Mbps.')
extremeWirelessIntfSpeedReXmit2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit2.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit2.setDescription('This gives the number of frames which were retransmitted on this interface at 2 Mbps.')
extremeWirelessIntfSpeedReXmit5p5 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit5p5.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit5p5.setDescription('This gives the number of frames which were retransmitted on this interface at 5 Mbps.')
extremeWirelessIntfSpeedReXmit6 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit6.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit6.setDescription('This gives the number of frames which were retransmitted on this interface at 6 Mbps.')
extremeWirelessIntfSpeedReXmit9 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit9.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit9.setDescription('This gives the number of frames which were retransmitted on this interface at 9 Mbps.')
extremeWirelessIntfSpeedReXmit11 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit11.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit11.setDescription('This gives the number of frames which were retransmitted on this interface at 11 Mbps.')
extremeWirelessIntfSpeedReXmit12 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit12.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit12.setDescription('This gives the number of frames which were retransmitted on this interface at 12 Mbps.')
extremeWirelessIntfSpeedReXmit18 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit18.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit18.setDescription('This gives the number of frames which were retransmitted on this interface at 18 Mbps.')
extremeWirelessIntfSpeedReXmit24 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit24.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit24.setDescription('This gives the number of frames which were retransmitted on this interface at 24 Mbps.')
extremeWirelessIntfSpeedReXmit36 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit36.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit36.setDescription('This gives the number of frames which were retransmitted on this interface at 36 Mbps.')
extremeWirelessIntfSpeedReXmit48 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit48.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit48.setDescription('This gives the number of frames which were retransmitted on this interface at 48 Mbps.')
extremeWirelessIntfSpeedReXmit54 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit54.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedReXmit54.setDescription('This gives the number of frames which were retransmitted on this interface at 54 Mbps.')
extremeWirelessIntfSpeedErrorTX1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX1.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX1.setDescription('This gives the number of frames which were transmited with errors on this interface at 1Mbps.')
extremeWirelessIntfSpeedErrorTX2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX2.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX2.setDescription('This gives the number of frames which were transmited with errors on this interface at 2Mbps.')
extremeWirelessIntfSpeedErrorTX5p5 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX5p5.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX5p5.setDescription('This gives the number of frames which were transmited with errors on this interface at 5.5Mbps.')
extremeWirelessIntfSpeedErrorTX6 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX6.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX6.setDescription('This gives the number of frames which were transmited with errors on this interface at 6Mbps.')
extremeWirelessIntfSpeedErrorTX9 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX9.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX9.setDescription('This gives the number of frames which were transmited with errors on this interface at 9Mbps.')
extremeWirelessIntfSpeedErrorTX11 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX11.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX11.setDescription('This gives the number of frames which were transmited with errors on this interface at 11Mbps.')
extremeWirelessIntfSpeedErrorTX12 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX12.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX12.setDescription('This gives the number of frames which were transmited with errors on this interface at 12Mbps.')
extremeWirelessIntfSpeedErrorTX18 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX18.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX18.setDescription('This gives the number of frames which were transmited with errors on this interface at 18Mbps.')
extremeWirelessIntfSpeedErrorTX24 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX24.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX24.setDescription('This gives the number of frames which were transmited with errors on this interface at 24Mbps.')
extremeWirelessIntfSpeedErrorTX36 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX36.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX36.setDescription('This gives the number of frames which were transmited with errors on this interface at 36Mbps.')
extremeWirelessIntfSpeedErrorTX48 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX48.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX48.setDescription('This gives the number of frames which were transmited with errors on this interface at 48Mbps.')
extremeWirelessIntfSpeedErrorTX54 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX54.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorTX54.setDescription('This gives the number of frames which were transmited with errors on this interface at 54Mbps.')
extremeWirelessIntfSpeedErrorRX1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX1.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX1.setDescription('This gives the number of frames which were received with errors on this interface at 1Mbps.')
extremeWirelessIntfSpeedErrorRX2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX2.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX2.setDescription('This gives the number of frames which were received with errors on this interface at 2Mbps.')
extremeWirelessIntfSpeedErrorRX5p5 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX5p5.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX5p5.setDescription('This gives the number of frames which were received with errors on this interface at 5.5Mbps.')
extremeWirelessIntfSpeedErrorRX6 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX6.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX6.setDescription('This gives the number of frames which were received with errors on this interface at 6Mbps.')
extremeWirelessIntfSpeedErrorRX9 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX9.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX9.setDescription('This gives the number of frames which were received with errors on this interface at 9Mbps.')
extremeWirelessIntfSpeedErrorRX11 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX11.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX11.setDescription('This gives the number of frames which were received with errors on this interface at 11Mbps.')
extremeWirelessIntfSpeedErrorRX12 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX12.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX12.setDescription('This gives the number of frames which were received with errors on this interface at 12Mbps.')
extremeWirelessIntfSpeedErrorRX18 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX18.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX18.setDescription('This gives the number of frames which were received with errors on this interface at 18Mbps.')
extremeWirelessIntfSpeedErrorRX24 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX24.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX24.setDescription('This gives the number of frames which were received with errors on this interface at 24Mbps.')
extremeWirelessIntfSpeedErrorRX36 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX36.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX36.setDescription('This gives the number of frames which were received with errors on this interface at 36Mbps.')
extremeWirelessIntfSpeedErrorRX48 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX48.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX48.setDescription('This gives the number of frames which were received with errors on this interface at 48Mbps.')
extremeWirelessIntfSpeedErrorRX54 = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 42, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX54.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfSpeedErrorRX54.setDescription('This gives the number of frames which were received with errors on this interface at 54Mbps.')
extremeWirelessIntfUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 43), )
if mibBuilder.loadTexts: extremeWirelessIntfUtilizationTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfUtilizationTable.setDescription('There is one entry in this table for each virtual and physical interface. Values for physical interfaces are summations of the values for the constituent virtual interfaces.')
extremeWirelessIntfUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 43, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: extremeWirelessIntfUtilizationEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfUtilizationEntry.setDescription('')
extremeWirelessIntfUtilizationNav = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 43, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfUtilizationNav.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfUtilizationNav.setDescription('This gives the instantaneous NAV value on this interface, or some increasing-metric of utilization.')
extremeWirelessIntfUtilizationNoiseFloor = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 43, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessIntfUtilizationNoiseFloor.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessIntfUtilizationNoiseFloor.setDescription('This gives the noise floor in dBm for this interface.')
extremeWirelessOpaqueTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 99), )
if mibBuilder.loadTexts: extremeWirelessOpaqueTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessOpaqueTable.setDescription(' ')
extremeWirelessOpaqueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 99, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: extremeWirelessOpaqueEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessOpaqueEntry.setDescription(' ')
extremeWirelessClientData = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 99, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientData.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientData.setDescription('')
extremeWirelessPAEStatsData = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 99, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPAEStatsData.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPAEStatsData.setDescription('')
extremeWirelessPAEDiagData = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 99, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessPAEDiagData.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPAEDiagData.setDescription('')
extremeWirelessScanResultsData = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 99, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessScanResultsData.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessScanResultsData.setDescription('This is the contents of the scan results table encoded as a series of TLVs.')
extremeWirelessProbeInfoData = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 99, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessProbeInfoData.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoData.setDescription('This is the contents of the probe info table encoded as a series of TLVs. Each item is encoded as the entry above.')
extremeWirelessClientDiagData = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 99, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientDiagData.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientDiagData.setDescription('This is the contents of the client diag table encoded as a series of TLVs. Each item is encoded as the entry above.')
extremeWirelessClientAssocData = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 99, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAssocData.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAssocData.setDescription('This is the contents of the client assoc table encoded as a series of TLVs. Each item is encoded as the entry above. Note that since the MAC address is not a member of the table (it is an index) it will be encoded as type = 0.')
extremeWirelessClientAuthData = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 99, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientAuthData.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientAuthData.setDescription('This is the contents of the client auth table encoded as a series of TLVs. Each item is encoded as the entry above. Note that since the MAC address is not a member of the table (it is an index) it will be encoded as type = 0.')
extremeWirelessClientMACInfoData = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 99, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientMACInfoData.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientMACInfoData.setDescription('This is the contents of the client MAC info table encoded as a series of TLVs. Each item is encoded as the entry above. Note that since the MAC address is not a member of the table (it is an index) it will be encoded as type = 0.')
extremeWirelessSizeCounterData = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 99, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessSizeCounterData.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessSizeCounterData.setDescription('This is the contents of the client size counter table encoded as a series of TLVs. Each item is encoded as the entry above. Note that since the MAC address is not a member of the table (it is an index) it will be encoded as type = 0.')
extremeWirelessSpeedCounterData = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 99, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessSpeedCounterData.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessSpeedCounterData.setDescription('This is the contents of the client speed counter table encoded as a series of TLVs. Each item is encoded as the entry above. Note that since the MAC address is not a member of the table (it is an index) it will be encoded as type = 0.')
extremeWirelessTraceTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 100), )
if mibBuilder.loadTexts: extremeWirelessTraceTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessTraceTable.setDescription('This table contains one entry per wireless port. This allows access to various stastics about the tracing mod -- ule on that wireless port.')
extremeWirelessTraceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 100, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: extremeWirelessTraceEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessTraceEntry.setDescription('')
extremeWirelessTraceMsgsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 100, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessTraceMsgsOut.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessTraceMsgsOut.setDescription('This gives the number of trace messages the system has sent out to the syslog server. Suppressed messages are not counted toward this total.')
extremeWirelessTraceBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 100, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessTraceBytesOut.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessTraceBytesOut.setDescription('This give the number of bytes total sent out by the trace system. This is a simple sum of the string lengths of all messages sent out.')
extremeWirelessTraceSuppressed = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 100, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessTraceSuppressed.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessTraceSuppressed.setDescription('This variable is incremented whenever a message is not sent out because the trace level of that system is lower than the message level.')
extremeWirelessTraceOtherErr = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 100, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessTraceOtherErr.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessTraceOtherErr.setDescription('This variable is incremented when a message is not sent out due to internal errors (i.e. out of memory).')
extremeWirelessTraceOpaque = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 100, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessTraceOpaque.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessTraceOpaque.setDescription('This is the opaque representation of the module table to optimize retreival.')
extremeWirelessTraceModuleTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 101), )
if mibBuilder.loadTexts: extremeWirelessTraceModuleTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessTraceModuleTable.setDescription('This table contains one entry per trace module. Each entry is indexed by an arbitrary integer value.')
extremeWirelessTraceModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 101, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "EXTREME-WIRELESS-MIB", "extremeWirelessTraceModuleId"))
if mibBuilder.loadTexts: extremeWirelessTraceModuleEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessTraceModuleEntry.setDescription('')
extremeWirelessTraceModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 101, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: extremeWirelessTraceModuleId.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessTraceModuleId.setDescription('This is an arbitrary integer index which is assigned to each trace module.')
extremeWirelessTraceModuleDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 101, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessTraceModuleDesc.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessTraceModuleDesc.setDescription('This is a string which briefly describes the purpose of this debug trace. It may include whitespace. An example is: 802.1x State Machine')
extremeWirelessTraceModuleHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 101, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessTraceModuleHeader.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessTraceModuleHeader.setDescription('This is a string which is prepended to the syslog messages sent out by this debug level. It is short (5-6 characters) and does not contain white space. (i.e. DOT1X)')
extremeWirelessTraceModuleLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 101, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessTraceModuleLevel.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessTraceModuleLevel.setDescription('This value is the current debug level for this module. A lower value indicates that fewer messages will be generated by the component. A write on this value will update the current debug level.')
extremeWirelessTraceModuleSuppressed = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 101, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessTraceModuleSuppressed.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessTraceModuleSuppressed.setDescription('This value indicates the number of messages logged by this module which have not been sent out because the current log level is less than the level at which the message should be logged.')
extremeWirelessTraceModuleMsgsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 101, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessTraceModuleMsgsOut.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessTraceModuleMsgsOut.setDescription('This value indicates the number messages which have been logged by this component.')
extremeWirelessTraceModuleBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 101, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessTraceModuleBytesOut.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessTraceModuleBytesOut.setDescription('This value indicates the number of bytes which have been logged by this component. This count includes the header specified in extremeWirelessTraceModuleHeader.')
extremeWirelessLogDiagTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102), )
if mibBuilder.loadTexts: extremeWirelessLogDiagTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagTable.setDescription('This table contains counters per-log level for the event log, syslog and NVRAM subsystems for logging.')
extremeWirelessLogDiagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: extremeWirelessLogDiagEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagEntry.setDescription('There is one entry in this table per physical port.')
extremeWirelessLogDiagEventLogTotalCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalCount.setDescription('This gives the total number of messages logged since the last time the statistics were cleared.')
extremeWirelessLogDiagEventLogTotalEmergCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalEmergCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalEmergCount.setDescription('This gives the total number of messages logged at the EMERG level.')
extremeWirelessLogDiagEventLogTotalAlertCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalAlertCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalAlertCount.setDescription('This gives the total number of messages logged at the ALERT level.')
extremeWirelessLogDiagEventLogTotalCritCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalCritCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalCritCount.setDescription('This gives the total number of messages logged at the CRIT level.')
extremeWirelessLogDiagEventLogTotalErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalErrorCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalErrorCount.setDescription('This gives the total number of messages logged at the ERROR level.')
extremeWirelessLogDiagEventLogTotalWarnCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalWarnCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalWarnCount.setDescription('This gives the total number of messages logged at the WARN level.')
extremeWirelessLogDiagEventLogTotalNoticeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalNoticeCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalNoticeCount.setDescription('This gives the total number of messages logged at the NOTICE level.')
extremeWirelessLogDiagEventLogTotalInfoCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalInfoCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalInfoCount.setDescription('This gives the total number of messages logged at the INFO level.')
extremeWirelessLogDiagEventLogTotalDebugCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalDebugCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalDebugCount.setDescription('This gives the total number of messages logged at the DEBUG level.')
extremeWirelessLogDiagEventLogTotalSuppressedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalSuppressedCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalSuppressedCount.setDescription('This gives the total number of messages which were suppressed due to log level.')
extremeWirelessLogDiagEventLogTotalByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalByteCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagEventLogTotalByteCount.setDescription('This gives the total number of bytes logged by the logging subsystem.')
extremeWirelessLogDiagSyslogTotalEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessLogDiagSyslogTotalEventCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagSyslogTotalEventCount.setDescription('This gives the total number of messages which have been sent out to remote syslog servers.')
extremeWirelessLogDiagSyslogTotalSuppressedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessLogDiagSyslogTotalSuppressedCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagSyslogTotalSuppressedCount.setDescription('This gives the total number of syslog messages which have been suppressed due to log level.')
extremeWirelessLogDiagSyslogTotalByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessLogDiagSyslogTotalByteCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagSyslogTotalByteCount.setDescription('This gives the total number of bytes of syslog messages which have been logged.')
extremeWirelessLogDiagNVRAMTotalEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessLogDiagNVRAMTotalEventCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagNVRAMTotalEventCount.setDescription('Total number of messages which have been logged to NVRAM.')
extremeWirelessLogDiagNVRAMTotalSuppressedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessLogDiagNVRAMTotalSuppressedCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagNVRAMTotalSuppressedCount.setDescription('Total number of messages which have been suppressed by NVRAM due to NVRAM threashold.')
extremeWirelessLogDiagNVRAMTotalDroppedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessLogDiagNVRAMTotalDroppedCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagNVRAMTotalDroppedCount.setDescription('Total number of messages which have been dropped by the NVRAM.')
extremeWirelessLogDiagNVRAMTotalByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessLogDiagNVRAMTotalByteCount.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagNVRAMTotalByteCount.setDescription('Total number of bytes which have been written to the NVRAM.')
extremeWirelessLogDiagClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 102, 1, 19), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeWirelessLogDiagClearStats.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessLogDiagClearStats.setDescription('Setting this value to TRUE causes the statistics to be reset to 0. Reading this value has no meaning.')
extremeWirelessPortStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 5, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("EXTREME-WIRELESS-MIB", "extremeWirelessPortState"))
if mibBuilder.loadTexts: extremeWirelessPortStateChange.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortStateChange.setDescription('This trap is generated when a wireless port moves into enabled, disabled or online.')
extremeWirelessPortBootFailure = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 5, 0, 2)).setObjects(("EXTREME-WIRELESS-MIB", "extremeWirelessPortIfIndex"))
if mibBuilder.loadTexts: extremeWirelessPortBootFailure.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessPortBootFailure.setDescription('This trap is sent by the platform if a wireless port fails to boot too many times.')
extremeWirelessClientStationAgedOut = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 5, 0, 3)).setObjects(("IF-MIB", "ifIndex"), ("EXTREME-WIRELESS-MIB", "extremeWirelessClientID"))
if mibBuilder.loadTexts: extremeWirelessClientStationAgedOut.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientStationAgedOut.setDescription('This trap is generated when a client is aged out of the table.')
extremeWirelessNetloginClientAssociated = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 5, 0, 4)).setObjects(("IF-MIB", "ifIndex"), ("EXTREME-WIRELESS-MIB", "extremeWirelessClientID"))
if mibBuilder.loadTexts: extremeWirelessNetloginClientAssociated.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessNetloginClientAssociated.setDescription('This trap is generated when a client has associated to an interface that is web based network login enabled.')
extremeWirelessAPAdded = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 5, 0, 5)).setObjects(("IF-MIB", "ifIndex"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsStationId"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsFirstSeen"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsLastChange"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsPacketRate"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsChannel"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsAvgRSS"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsSSID"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsRSNEnabled"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsPrivacy"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsNetworkType"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanWPAIEMcastCipher"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanWPAUcastCipherCount"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanWPAUcastCipher"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanWPAKeyMgmtCount"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanWPAKeyMgmtSuite"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsRateSet"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsExtRateSet"))
if mibBuilder.loadTexts: extremeWirelessAPAdded.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessAPAdded.setDescription('This is generated when a new AP is added to the scan results table. It will ony be generated if the value of extremeWirelessScanSendAPAddedTrap is true.')
extremeWirelessAPRemoved = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 5, 0, 6)).setObjects(("IF-MIB", "ifIndex"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsStationId"))
if mibBuilder.loadTexts: extremeWirelessAPRemoved.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessAPRemoved.setDescription('This is generated when an AP is removed from the scan results table. It will ony be generated if the value of extremeWirelessScanSendAPRemovedTrap is true.')
extremeWirelessAPUpdated = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 5, 0, 7)).setObjects(("IF-MIB", "ifIndex"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsStationId"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsFirstSeen"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsLastChange"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsPacketRate"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsChannel"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsAvgRSS"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsSSID"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsRSNEnabled"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsPrivacy"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsNetworkType"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanWPAIEMcastCipher"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanWPAUcastCipherCount"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanWPAUcastCipher"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanWPAKeyMgmtCount"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanWPAKeyMgmtSuite"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsRateSet"), ("EXTREME-WIRELESS-MIB", "extremeWirelessScanResultsExtRateSet"))
if mibBuilder.loadTexts: extremeWirelessAPUpdated.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessAPUpdated.setDescription('This is generated when the IEs recorded for an AP in the scan results table change. It will only be generated if the value of SendAPUpdatedTrap is true.')
extremeWirelessProbeInfoAdded = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 5, 0, 8)).setObjects(("IF-MIB", "ifIndex"), ("EXTREME-WIRELESS-MIB", "extremeWirelessProbeInfoSource"))
if mibBuilder.loadTexts: extremeWirelessProbeInfoAdded.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoAdded.setDescription('This is generated when a new station is added to the probe info table. It will only be generated if the value of extremeWirelessProbeInfoSendAddedTrap is true.')
extremeWirelessProbeInfoRemoved = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 5, 0, 9)).setObjects(("IF-MIB", "ifIndex"), ("EXTREME-WIRELESS-MIB", "extremeWirelessProbeInfoSource"))
if mibBuilder.loadTexts: extremeWirelessProbeInfoRemoved.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessProbeInfoRemoved.setDescription('This is generated when a station is removed from the probe info table. It will only be generated if the value of extremeWirelessProbeInfoSendRemovedTrap is true.')
extremeWirelessOffChannelScanStarted = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 5, 0, 10)).setObjects(("IF-MIB", "ifIndex"), ("EXTREME-WIRELESS-MIB", "extremeWirelessOffChannelScanList"))
if mibBuilder.loadTexts: extremeWirelessOffChannelScanStarted.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessOffChannelScanStarted.setDescription('This is generated when an off-channel scan starts running.')
extremeWirelessOffChannelScanFinished = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 5, 0, 11)).setObjects(("IF-MIB", "ifIndex"), ("EXTREME-WIRELESS-MIB", "extremeWirelessOffChannelScanList"))
if mibBuilder.loadTexts: extremeWirelessOffChannelScanFinished.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessOffChannelScanFinished.setDescription('This is generated when an off-channel scan finishes running.')
extremeWirelessCounterMeasureStarted = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 5, 0, 12)).setObjects(("IF-MIB", "ifIndex"), ("EXTREME-WIRELESS-MIB", "extremeWirelessCounterMeasureSource"))
if mibBuilder.loadTexts: extremeWirelessCounterMeasureStarted.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessCounterMeasureStarted.setDescription('This trap is generated when counter measures are started on a wireless interface.')
extremeWirelessCounterMeasureStopped = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 5, 0, 13)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: extremeWirelessCounterMeasureStopped.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessCounterMeasureStopped.setDescription('This trap is generated when counter measures are stopped on a wireless interface.')
extremeWirelessInterfaceChannelRescan = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 5, 0, 14)).setObjects(("IF-MIB", "ifIndex"), ("EXTREME-WIRELESS-MIB", "extremeWirelessPhysInterfacePHYChannel"), ("EXTREME-WIRELESS-MIB", "extremeWirelessPhysInterfaceChannelAutoSelectStatus"))
if mibBuilder.loadTexts: extremeWirelessInterfaceChannelRescan.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessInterfaceChannelRescan.setDescription('This trap is generated when a wireless interface tries to autoselect a channel. It indicates whether a particular channel scan was successful, or if it failed then the reason for the failure.')
extremeWirelessCounterMeasureSource = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clientReport", 1), ("micFailure", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: extremeWirelessCounterMeasureSource.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessCounterMeasureSource.setDescription('This value is used in the counter measure traps to indicate the reason that counter measures have been invoked.')
extremeWirelessClientWPAStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 47), )
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsTable.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsTable.setDescription('This table contains information of the WPA state transitions on a per-client basis. Rows are indexed first by virtual interface, then by client MAC.')
extremeWirelessClientWPAStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 47, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "EXTREME-WIRELESS-MIB", "extremeWirelessClientDiagMac"))
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsEntry.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsEntry.setDescription('Note that ifIndex here is virtual ifIndex (SSID).')
extremeWirelessClientWPAStatsStarts = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 47, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsStarts.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsStarts.setDescription('Number of starts of the WPA key exchange process')
extremeWirelessClientWPAStatsPairwiseKeySuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 47, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsPairwiseKeySuccesses.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsPairwiseKeySuccesses.setDescription('Number of successes in the pairwise key handshake')
extremeWirelessClientWPAStatsPairwiseKeyFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 47, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsPairwiseKeyFailures.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsPairwiseKeyFailures.setDescription('Number of failures the pairwise key handshake')
extremeWirelessClientWPAStatsGroupKeySuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 47, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsGroupKeySuccesses.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsGroupKeySuccesses.setDescription('Number of successes of the group key exchange')
extremeWirelessClientWPAStatsGroupKeyFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 47, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsGroupKeyFailures.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsGroupKeyFailures.setDescription('Number of failures of the group key handshake')
extremeWirelessClientWPAStatsPairwiseKey1Sends = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 47, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsPairwiseKey1Sends.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsPairwiseKey1Sends.setDescription('Number of times the first packet of the pairwise key exchange was sent.')
extremeWirelessClientWPAStatsPairwiseKey3Sends = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 47, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsPairwiseKey3Sends.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsPairwiseKey3Sends.setDescription('Number of times the third packet of the pairwise key exchange was sent.')
extremeWirelessClientWPAStatsGroupKeySends = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 47, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsGroupKeySends.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsGroupKeySends.setDescription('Number of times the group key packet was sent.')
extremeWirelessClientWPAStatsEAPOLKeyReceivedInPairwise1Key = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 47, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsEAPOLKeyReceivedInPairwise1Key.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsEAPOLKeyReceivedInPairwise1Key.setDescription('Number of times an EAPOL Key packet was recieved after sending the 1st pairwise key exchange packet')
extremeWirelessClientWPAStatsEAPOLKeyReceivedInPairwise3Key = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 47, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsEAPOLKeyReceivedInPairwise3Key.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsEAPOLKeyReceivedInPairwise3Key.setDescription('Number of times an EAPOL Key packet was recieved after sending the 3rd pairwise key exchange packet')
extremeWirelessClientWPAStatsEAPOLKeyReceivedInGroupKey = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 47, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsEAPOLKeyReceivedInGroupKey.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsEAPOLKeyReceivedInGroupKey.setDescription('Number of times an EAPOL Key packet was recieved after sending the group key packet')
extremeWirelessClientWPAStatsDoubleEAPOLKeyReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 47, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsDoubleEAPOLKeyReceived.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsDoubleEAPOLKeyReceived.setDescription('Number of times an EAPOL Key packet was recieved when already processing a previous key packet.')
extremeWirelessClientWPAStatsEAPOLKeyIgnores = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 47, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsEAPOLKeyIgnores.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsEAPOLKeyIgnores.setDescription('Number of times an EAPOL Key packet was ignored.')
extremeWirelessClientWPAStatsEAPOLKeyErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 47, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsEAPOLKeyErrors.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsEAPOLKeyErrors.setDescription('Number of times an EAPOL Key packet was errored.')
extremeWirelessClientWPAStatsEAPOLKeyAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 47, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsEAPOLKeyAborts.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsEAPOLKeyAborts.setDescription('Number of times an EAPOL Key packet caused the WPA state machine to abort.')
extremeWirelessClientWPAStatsEAPOLKeyVerificationSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 25, 1, 47, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsEAPOLKeyVerificationSuccesses.setStatus('current')
if mibBuilder.loadTexts: extremeWirelessClientWPAStatsEAPOLKeyVerificationSuccesses.setDescription('Number of times an EAPOL Key packet was verified correctly.')
mibBuilder.exportSymbols("EXTREME-WIRELESS-MIB", extremeWirelessIntfSpeedErrorTX48=extremeWirelessIntfSpeedErrorTX48, extremeWirelessLogDiagTable=extremeWirelessLogDiagTable, extremeWirelessClientSpeedReXmit1=extremeWirelessClientSpeedReXmit1, extremeWirelessIntfFrameSizeCtlRX1024=extremeWirelessIntfFrameSizeCtlRX1024, extremeWirelessPortMultiBootMode=extremeWirelessPortMultiBootMode, extremeSecurityProfileIgnoreVSAVlan=extremeSecurityProfileIgnoreVSAVlan, extremeWirelessClientAssocInfoLastAssoc=extremeWirelessClientAssocInfoLastAssoc, extremeWirelessClientDiagCfgEntry=extremeWirelessClientDiagCfgEntry, extremeWirelessClientWPAStatsGroupKeyFailures=extremeWirelessClientWPAStatsGroupKeyFailures, extremeWirelessScanWPAIEMcastCipher=extremeWirelessScanWPAIEMcastCipher, extremeWirelessClientPacketSizeRX512=extremeWirelessClientPacketSizeRX512, extremeSecurityDot1xReAuthPeriod=extremeSecurityDot1xReAuthPeriod, extremeWirelessClientAuthInfoErrorSequenceNum=extremeWirelessClientAuthInfoErrorSequenceNum, extremeWirelessTraceOtherErr=extremeWirelessTraceOtherErr, extremeWirelessClientSpeedTX1=extremeWirelessClientSpeedTX1, extremeWirelessVirtInterfaceSvpEnabled=extremeWirelessVirtInterfaceSvpEnabled, extremeAPTotalAssociatedStations=extremeAPTotalAssociatedStations, extremeWirelessClientAssocInfoErrorMcastCipher=extremeWirelessClientAssocInfoErrorMcastCipher, extremeWirelessIntfSpeedMgmtTX36=extremeWirelessIntfSpeedMgmtTX36, extremeWirelessClientPacketSizeTX128=extremeWirelessClientPacketSizeTX128, extremeWirelessIntfSpeedDataRX54=extremeWirelessIntfSpeedDataRX54, extremeWirelessClientFrameSizeReXmit2048=extremeWirelessClientFrameSizeReXmit2048, extremeWirelessIntfSpeedDataRX2=extremeWirelessIntfSpeedDataRX2, extremeWirelessClientWPAStatsStarts=extremeWirelessClientWPAStatsStarts, extremeWirelessClientDiagCfgTable=extremeWirelessClientDiagCfgTable, extremeWirelessClientAuthInfoTotalOpen=extremeWirelessClientAuthInfoTotalOpen, extremeRFProfileTable=extremeRFProfileTable, extremeWirelessRemoteConnectUnboundAPsIPAddressType=extremeWirelessRemoteConnectUnboundAPsIPAddressType, extremeWirelessClientAuthInfoLastErrorType=extremeWirelessClientAuthInfoLastErrorType, extremeWirelessIntfSpeedDataTX1=extremeWirelessIntfSpeedDataTX1, extremeWirelessCounterMeasureStopped=extremeWirelessCounterMeasureStopped, extremeWirelessClientDiagCfgEnable=extremeWirelessClientDiagCfgEnable, extremeWirelessOffChannelContinuous=extremeWirelessOffChannelContinuous, extremeWirelessClientSpeedRX5p5=extremeWirelessClientSpeedRX5p5, extremeWirelessIntfFrameSizeErrorRX128=extremeWirelessIntfFrameSizeErrorRX128, extremeWirelessClientAuthInfoErrorTypeMismatch=extremeWirelessClientAuthInfoErrorTypeMismatch, extremeWirelessVirtInterfacePairwiseUpdateTimeOut=extremeWirelessVirtInterfacePairwiseUpdateTimeOut, extremeWirelessClientMACInfoTotalDeAssocReq=extremeWirelessClientMACInfoTotalDeAssocReq, extremeWirelessIntfSpeedMgmtRX36=extremeWirelessIntfSpeedMgmtRX36, extremeWirelessIntfSpeedReXmit6=extremeWirelessIntfSpeedReXmit6, extremeWirelessPhysInterfaceSupportedDataRatesRxValue=extremeWirelessPhysInterfaceSupportedDataRatesRxValue, extremeWirelessOffChannelScanFinished=extremeWirelessOffChannelScanFinished, extremeWirelessOffChannelScanCfgEntry=extremeWirelessOffChannelScanCfgEntry, extremeWirelessProbeInfoLastChannel=extremeWirelessProbeInfoLastChannel, Dot11AChannel=Dot11AChannel, extremeWirelessClientFrameSizeReXmit512=extremeWirelessClientFrameSizeReXmit512, extremeWirelessClientSizeCounterTable=extremeWirelessClientSizeCounterTable, extremeWirelessVirtInterfaceDot1xCtlEntry=extremeWirelessVirtInterfaceDot1xCtlEntry, extremeWirelessClientAssocInfoWPAIEMcastCipher=extremeWirelessClientAssocInfoWPAIEMcastCipher, extremeWirelessLogDiagEventLogTotalDebugCount=extremeWirelessLogDiagEventLogTotalDebugCount, extremeAntennaProfileName=extremeAntennaProfileName, extremeWirelessClientPacketSizeRX256=extremeWirelessClientPacketSizeRX256, extremeWirelessPortSysDescr=extremeWirelessPortSysDescr, extremeRFProfilePreamble=extremeRFProfilePreamble, extremeWirelessPhysInterfaceAbsTxPowerLevel=extremeWirelessPhysInterfaceAbsTxPowerLevel, extremeWirelessClientSpeedTX48=extremeWirelessClientSpeedTX48, extremeWirelessClientFrameSizeRX256=extremeWirelessClientFrameSizeRX256, extremeWirelessInterfaceStatusEntry=extremeWirelessInterfaceStatusEntry, extremeWirelessVirtInterfaceMcastCipherSuite=extremeWirelessVirtInterfaceMcastCipherSuite, extremeSecurityProfileIndex=extremeSecurityProfileIndex, extremeWirelessScanResultsNetworkType=extremeWirelessScanResultsNetworkType, extremeWirelessIntfFrameSizeReXmit512=extremeWirelessIntfFrameSizeReXmit512, extremeWirelessIntfSpeedCtlRX6=extremeWirelessIntfSpeedCtlRX6, extremeWirelessClientDiagEntersInForward=extremeWirelessClientDiagEntersInForward, extremeWirelessClientStatus=extremeWirelessClientStatus, extremeWirelessRemoteConnectBindingIfIndex=extremeWirelessRemoteConnectBindingIfIndex, extremeWirelessProbeInfoStatusTable=extremeWirelessProbeInfoStatusTable, extremeWirelessIntfFrameSizeMgmtRX64=extremeWirelessIntfFrameSizeMgmtRX64, extremeWirelessClientAssocInfoWPAVersion=extremeWirelessClientAssocInfoWPAVersion, extremeWirelessPortPartNumber=extremeWirelessPortPartNumber, extremeWirelessLogDiagEventLogTotalInfoCount=extremeWirelessLogDiagEventLogTotalInfoCount, extremeWirelessClientDiagTotalNetLoginAuths=extremeWirelessClientDiagTotalNetLoginAuths, extremeWirelessClientPacketSizeRX1024=extremeWirelessClientPacketSizeRX1024, extremeRFProfileFragLength=extremeRFProfileFragLength, extremeWirelessClientSpeedTX36=extremeWirelessClientSpeedTX36, extremeWirelessLogDiagSyslogTotalEventCount=extremeWirelessLogDiagSyslogTotalEventCount, extremeWirelessIntfSpeedErrorRX36=extremeWirelessIntfSpeedErrorRX36, extremeWirelessClientMACInfoMinRSS=extremeWirelessClientMACInfoMinRSS, extremeWirelessClientDiagData=extremeWirelessClientDiagData, extremeWirelessRemoteConnectBindingEnabled=extremeWirelessRemoteConnectBindingEnabled, ExtremeWirelessAntennaLocation=ExtremeWirelessAntennaLocation, extremeWirelessPortCfgClientWatchdog=extremeWirelessPortCfgClientWatchdog, extremeWirelessPortNetmask=extremeWirelessPortNetmask, extremeWirelessClientAssocInfoErrorMaxAssoc=extremeWirelessClientAssocInfoErrorMaxAssoc, extremeRFProfileName=extremeRFProfileName, extremeWirelessOpaqueTable=extremeWirelessOpaqueTable, extremeWirelessClientAssocInfoErrorOther=extremeWirelessClientAssocInfoErrorOther, extremeWirelessClientWPAStatsEAPOLKeyVerificationSuccesses=extremeWirelessClientWPAStatsEAPOLKeyVerificationSuccesses, extremeWirelessProbeInfoSource=extremeWirelessProbeInfoSource, extremeWirelessIntfBlockTime=extremeWirelessIntfBlockTime, extremeWirelessPortRuntimeServerAddressType=extremeWirelessPortRuntimeServerAddressType, extremeWirelessIntfFrameSizeErrorEntry=extremeWirelessIntfFrameSizeErrorEntry, extremeAPTrapsPrefix=extremeAPTrapsPrefix, extremeWirelessVirtInterfaceDot1xCtlTable=extremeWirelessVirtInterfaceDot1xCtlTable, extremeWirelessClientLastPacketType=extremeWirelessClientLastPacketType, extremeWirelessClientSpeedReXmit54=extremeWirelessClientSpeedReXmit54, extremeWirelessClientMACInfoTotalPsPoll=extremeWirelessClientMACInfoTotalPsPoll, extremeWirelessLogDiagEventLogTotalNoticeCount=extremeWirelessLogDiagEventLogTotalNoticeCount, extremeWirelessIntfUtilizationEntry=extremeWirelessIntfUtilizationEntry, extremeWirelessInterfaceChannelRescan=extremeWirelessInterfaceChannelRescan, extremeWirelessRemoteConnectUnboundAPsMAC=extremeWirelessRemoteConnectUnboundAPsMAC, extremeWirelessClientFrameSizeReXmit64=extremeWirelessClientFrameSizeReXmit64, extremeWirelessClientFrameSizeTX1024=extremeWirelessClientFrameSizeTX1024, extremeWirelessScanWPAKeyMgmtCount=extremeWirelessScanWPAKeyMgmtCount, extremeWirelessIntfFrameSizeErrorTX256=extremeWirelessIntfFrameSizeErrorTX256, extremeWirelessClientMACInfoTotalData=extremeWirelessClientMACInfoTotalData, extremeWirelessIntfSpeedDataTX18=extremeWirelessIntfSpeedDataTX18, extremeWirelessIntfSpeedCtlTX48=extremeWirelessIntfSpeedCtlTX48, extremeWirelessClientFrameSizeTX512=extremeWirelessClientFrameSizeTX512, extremeWirelessPortLogStatusEntry=extremeWirelessPortLogStatusEntry, extremeWirelessVirtInterfaceWEPKeyTable=extremeWirelessVirtInterfaceWEPKeyTable, extremeWirelessRemoteConnectUnboundAPsNumAttempts=extremeWirelessRemoteConnectUnboundAPsNumAttempts, extremeWirelessClientAssocData=extremeWirelessClientAssocData, extremeWirelessScanResultsDiscoveredBy=extremeWirelessScanResultsDiscoveredBy, extremeWirelessAPUpdated=extremeWirelessAPUpdated, extremeAPAuthServerAddress=extremeAPAuthServerAddress, extremeWirelessPortLogStatusDestIpType=extremeWirelessPortLogStatusDestIpType, extremeWirelessClientSpeedTX54=extremeWirelessClientSpeedTX54, extremeWirelessPortAntennaType=extremeWirelessPortAntennaType, extremeWirelessClientSpeedCounterTable=extremeWirelessClientSpeedCounterTable, extremeWirelessTraceModuleSuppressed=extremeWirelessTraceModuleSuppressed, extremeWirelessPortRadiusPortID=extremeWirelessPortRadiusPortID, extremeWirelessClientDiagStatusEntry=extremeWirelessClientDiagStatusEntry, extremeWirelessRemoteConnectRedirectBindingSerial=extremeWirelessRemoteConnectRedirectBindingSerial, extremeWirelessScanResultsTotalBeacons=extremeWirelessScanResultsTotalBeacons, extremeWirelessClientDiagStatusTable=extremeWirelessClientDiagStatusTable, extremeWirelessClientFrameSizeErrorTX2048=extremeWirelessClientFrameSizeErrorTX2048, extremeWirelessPhysInterfaceConfigRFProfile=extremeWirelessPhysInterfaceConfigRFProfile, extremeWirelessScanWPAKeyMgmtSuite=extremeWirelessScanWPAKeyMgmtSuite, extremeWirelessScanResultsDSSParameter=extremeWirelessScanResultsDSSParameter, extremeWirelessIntfFrameSizeReXmit64=extremeWirelessIntfFrameSizeReXmit64, extremeWirelessIntfFrameSizeDataTX1024=extremeWirelessIntfFrameSizeDataTX1024, extremeWirelessClientWPAStatsGroupKeySuccesses=extremeWirelessClientWPAStatsGroupKeySuccesses, extremeWirelessScanSendAPUpdatedTrap=extremeWirelessScanSendAPUpdatedTrap, extremeWirelessIntfSpeedCtlRX9=extremeWirelessIntfSpeedCtlRX9, extremeWirelessClientDiagCfgClearClient=extremeWirelessClientDiagCfgClearClient, extremeWirelessIntfSpeedDataRX36=extremeWirelessIntfSpeedDataRX36, extremeRFProfileBeaconInterval=extremeRFProfileBeaconInterval, extremeWirelessCfgCountryCode=extremeWirelessCfgCountryCode, extremeWirelessClientAssocInfoTotalDisassocResp=extremeWirelessClientAssocInfoTotalDisassocResp, extremeWirelessScanResultsPrivacy=extremeWirelessScanResultsPrivacy, extremeWirelessScanResultsEntry=extremeWirelessScanResultsEntry, extremeWirelessProbeInfoTotalProbes=extremeWirelessProbeInfoTotalProbes, extremeWirelessClientFrameSizeRX512=extremeWirelessClientFrameSizeRX512, extremeWirelessScanResultsCountryCode=extremeWirelessScanResultsCountryCode, extremeWirelessClientWPAStatsPairwiseKey1Sends=extremeWirelessClientWPAStatsPairwiseKey1Sends, extremeWirelessRemoteConnectBindingBound=extremeWirelessRemoteConnectBindingBound, extremeWirelessScanResultsChannelAgility=extremeWirelessScanResultsChannelAgility, extremeWirelessClientMACInfoEntry=extremeWirelessClientMACInfoEntry, extremeWirelessClientFrameSizeErrorRX1024=extremeWirelessClientFrameSizeErrorRX1024, ExtremeWirelessChannelAutoSelectStatus=ExtremeWirelessChannelAutoSelectStatus, extremeWirelessPortLogTable=extremeWirelessPortLogTable, extremeWirelessVirtInterfaceSecurityCtlEntry=extremeWirelessVirtInterfaceSecurityCtlEntry, extremeWirelessScanSendAPAddedTrap=extremeWirelessScanSendAPAddedTrap, extremeWirelessClientLinkQuality=extremeWirelessClientLinkQuality, extremeWirelessPAEDiagData=extremeWirelessPAEDiagData, extremeWirelessProbeInfoLastChange=extremeWirelessProbeInfoLastChange, Dot11Type=Dot11Type, extremeWirelessPortBootstrapServerAddress=extremeWirelessPortBootstrapServerAddress, extremeWirelessPhysInterfaceCtlEntry=extremeWirelessPhysInterfaceCtlEntry, extremeWEPKey=extremeWEPKey, extremeWirelessRemoteConnectBindingSerial=extremeWirelessRemoteConnectBindingSerial, extremeWirelessClientFrameSizeTX64=extremeWirelessClientFrameSizeTX64, extremeWirelessVirtInterfaceSecurityCtlTable=extremeWirelessVirtInterfaceSecurityCtlTable, extremeWirelessOffChannelScanStart=extremeWirelessOffChannelScanStart, extremeWirelessClientAssocInfoErrorRSNMismatch=extremeWirelessClientAssocInfoErrorRSNMismatch, extremeWirelessRemoteConnectRedirectBindingTable=extremeWirelessRemoteConnectRedirectBindingTable, extremeWirelessIntfSpeedErrorRX24=extremeWirelessIntfSpeedErrorRX24, extremeWirelessVirtInterfaceWEPDefaultKey=extremeWirelessVirtInterfaceWEPDefaultKey, extremeWirelessTraceModuleBytesOut=extremeWirelessTraceModuleBytesOut, extremeWirelessScanTableWatermark=extremeWirelessScanTableWatermark, extremeWirelessLogDiagEventLogTotalByteCount=extremeWirelessLogDiagEventLogTotalByteCount, extremeWirelessScanResultTimeout=extremeWirelessScanResultTimeout, extremeWirelessVirtInterfaceWEPKey=extremeWirelessVirtInterfaceWEPKey, extremeWirelessScanClearTable=extremeWirelessScanClearTable, extremeSecurityDot1xConfigTable=extremeSecurityDot1xConfigTable, extremeWirelessIntfRateAuthed=extremeWirelessIntfRateAuthed, extremeWirelessClientAuthInfoTotalShared=extremeWirelessClientAuthInfoTotalShared, extremeWirelessNetloginClientAssociated=extremeWirelessNetloginClientAssociated, extremeWirelessScanResultsLastChange=extremeWirelessScanResultsLastChange, extremeWirelessClientSpeedReXmit12=extremeWirelessClientSpeedReXmit12, extremeWirelessPhysInterfaceConfigSpeed=extremeWirelessPhysInterfaceConfigSpeed, extremeWirelessPortCfgEntry=extremeWirelessPortCfgEntry, extremeWirelessLogDiagClearStats=extremeWirelessLogDiagClearStats, extremeWirelessScanResultsRSNEnabled=extremeWirelessScanResultsRSNEnabled, extremeWirelessClientIP=extremeWirelessClientIP, extremeWirelessClientDiagMgmtActionInAuth=extremeWirelessClientDiagMgmtActionInAuth, extremeWirelessIntfSpeedCtlRX54=extremeWirelessIntfSpeedCtlRX54, extremeWirelessRemoteConnectGlobalBindingType=extremeWirelessRemoteConnectGlobalBindingType, extremeWirelessIntfSpeedErrorTX9=extremeWirelessIntfSpeedErrorTX9, extremeWirelessClientFrameSizeErrorTX1024=extremeWirelessClientFrameSizeErrorTX1024, extremeWirelessScanStatusTable=extremeWirelessScanStatusTable, extremeWirelessIntfSpeedErrorTX36=extremeWirelessIntfSpeedErrorTX36, extremeWirelessScanCfgTable=extremeWirelessScanCfgTable, extremeWirelessClientSpeedRX12=extremeWirelessClientSpeedRX12, extremeWirelessIntfSpeedReXmit12=extremeWirelessIntfSpeedReXmit12, extremeWirelessIntfFrameSizeErrorTX1024=extremeWirelessIntfFrameSizeErrorTX1024, extremeWirelessTraceTable=extremeWirelessTraceTable, extremeWirelessVirtInterfaceLastStateChange=extremeWirelessVirtInterfaceLastStateChange, extremeWirelessRemoteConnectDeviceDBTimeOut=extremeWirelessRemoteConnectDeviceDBTimeOut, extremeWirelessScanResultsAvgRSS=extremeWirelessScanResultsAvgRSS, extremeWirelessIntfFrameSizeDataTX128=extremeWirelessIntfFrameSizeDataTX128, extremeRFProfileDTIM=extremeRFProfileDTIM, extremeWirelessIntfFrameSizeMgmtTX64=extremeWirelessIntfFrameSizeMgmtTX64, extremeWirelessIntfSpeedErrorRX6=extremeWirelessIntfSpeedErrorRX6, extremeWirelessIntfSpeedDataTX24=extremeWirelessIntfSpeedDataTX24, extremeWirelessPortBootFailure=extremeWirelessPortBootFailure, ExtremeWirelessPhysInterfaceIndex=ExtremeWirelessPhysInterfaceIndex, extremeWirelessIntfFrameSizeDataRX64=extremeWirelessIntfFrameSizeDataRX64, extremeWirelessClientDiagEntersInAssoc=extremeWirelessClientDiagEntersInAssoc, extremeWirelessIntfFrameSizeDataRX128=extremeWirelessIntfFrameSizeDataRX128, extremeWirelessIntfSpeedDataTX54=extremeWirelessIntfSpeedDataTX54, extremeWirelessIntfSpeedCtlRX36=extremeWirelessIntfSpeedCtlRX36, extremeWirelessClientAuthInfoTotalAuthsOK=extremeWirelessClientAuthInfoTotalAuthsOK, extremeWirelessPhysInterfaceConfigRFChannel=extremeWirelessPhysInterfaceConfigRFChannel, extremeWirelessClientDiagMgmtActionInDetected=extremeWirelessClientDiagMgmtActionInDetected, extremeWirelessIntfFrameSizeDataTX2048=extremeWirelessIntfFrameSizeDataTX2048, extremeWirelessIntfTotalAssoc=extremeWirelessIntfTotalAssoc, extremeWirelessClientWPAStatsTable=extremeWirelessClientWPAStatsTable, extremeWirelessClientDiagCurrentTableSize=extremeWirelessClientDiagCurrentTableSize, extremeWirelessVirtInterfaceIgnoreVSAVlan=extremeWirelessVirtInterfaceIgnoreVSAVlan, extremeWirelessIntfSpeedDataRX6=extremeWirelessIntfSpeedDataRX6, extremeWirelessClientDiagCfgTableSize=extremeWirelessClientDiagCfgTableSize, extremeWirelessClientAuthInfoTotalAuthResp=extremeWirelessClientAuthInfoTotalAuthResp, extremeWirelessPhysInterfaceIndex=extremeWirelessPhysInterfaceIndex, extremeWirelessRemoteConnectBindingEntry=extremeWirelessRemoteConnectBindingEntry, extremeWirelessProbeInfoStatusTotalProbes=extremeWirelessProbeInfoStatusTotalProbes, extremeRFProfileIndex=extremeRFProfileIndex, extremeWirelessClientAuthInfoLastAuthType=extremeWirelessClientAuthInfoLastAuthType, extremeWirelessVirtInterfaceWirelessBridging=extremeWirelessVirtInterfaceWirelessBridging, extremeRFProfileStatus=extremeRFProfileStatus, extremeWirelessClientDiagEntersInDetected=extremeWirelessClientDiagEntersInDetected, extremeWirelessPhysInterfacePHYSupportedTypes=extremeWirelessPhysInterfacePHYSupportedTypes, extremeWirelessIntfSpeedCtlRX11=extremeWirelessIntfSpeedCtlRX11, extremeWirelessScanStatusEntry=extremeWirelessScanStatusEntry, extremeWirelessRemoteConnectUnboundAPsRowStatus=extremeWirelessRemoteConnectUnboundAPsRowStatus, extremeSecurityProfileESSName=extremeSecurityProfileESSName, extremeWirelessClientAuthInfoTotalAuths=extremeWirelessClientAuthInfoTotalAuths, extremeWirelessIntfSpeedErrorTX6=extremeWirelessIntfSpeedErrorTX6, extremeWirelessIntfSpeedMgmtRX54=extremeWirelessIntfSpeedMgmtRX54, extremeWirelessIntfFrameSizeDataRX2048=extremeWirelessIntfFrameSizeDataRX2048, extremeWirelessPortMgmtVLAN=extremeWirelessPortMgmtVLAN, extremeWirelessPortGateway=extremeWirelessPortGateway, extremeWirelessIntfSpeedMgmtRX1=extremeWirelessIntfSpeedMgmtRX1, extremeWirelessClientDiagTotalTimeouts=extremeWirelessClientDiagTotalTimeouts, extremeWirelessIntfFrameSizeErrorTX128=extremeWirelessIntfFrameSizeErrorTX128, extremeWirelessTraceOpaque=extremeWirelessTraceOpaque, extremeSecurityProfileDataVlan=extremeSecurityProfileDataVlan, extremeWirelessScanWPAUcastCipherCount=extremeWirelessScanWPAUcastCipherCount, extremeWirelessScanResultsTIMTrafficInd=extremeWirelessScanResultsTIMTrafficInd, extremeWirelessScanWPAVersion=extremeWirelessScanWPAVersion, extremeWirelessIntfRateAssocFailed=extremeWirelessIntfRateAssocFailed, extremeWirelessClientAuthInfoErrorOther=extremeWirelessClientAuthInfoErrorOther, extremeWirelessClientDiagTableWatermark=extremeWirelessClientDiagTableWatermark)
mibBuilder.exportSymbols("EXTREME-WIRELESS-MIB", extremeWirelessClientMACInfoTotalAuthReq=extremeWirelessClientMACInfoTotalAuthReq, extremeWirelessPortStateChange=extremeWirelessPortStateChange, extremeWirelessClientDiagLastElement=extremeWirelessClientDiagLastElement, extremeWirelessProbeInfoStatusLastElement=extremeWirelessProbeInfoStatusLastElement, extremeWirelessClientMACInfoTotalProbeReq=extremeWirelessClientMACInfoTotalProbeReq, extremeWirelessClientWPAStatsEAPOLKeyErrors=extremeWirelessClientWPAStatsEAPOLKeyErrors, extremeWirelessClientAssocInfoAssociated=extremeWirelessClientAssocInfoAssociated, extremeWirelessRemoteConnectRedirectBindingType=extremeWirelessRemoteConnectRedirectBindingType, extremeWirelessIntfSpeedDataRX48=extremeWirelessIntfSpeedDataRX48, extremeWirelessScanResultsFirstSeen=extremeWirelessScanResultsFirstSeen, extremeWirelessClientDiagMgmtActionInAssoc=extremeWirelessClientDiagMgmtActionInAssoc, extremeWirelessClientPacketSizeRX2048=extremeWirelessClientPacketSizeRX2048, extremeWirelessClientFrameSizeTX256=extremeWirelessClientFrameSizeTX256, extremeWirelessClientMACInfoTotalDeAuthReq=extremeWirelessClientMACInfoTotalDeAuthReq, extremeWirelessPortPartRevision=extremeWirelessPortPartRevision, extremeWirelessIntfSpeedDataTX48=extremeWirelessIntfSpeedDataTX48, extremeWirelessClientSpeedReXmit24=extremeWirelessClientSpeedReXmit24, extremeWirelessClientFrameSizeReXmit128=extremeWirelessClientFrameSizeReXmit128, extremeWirelessIntfSpeedMgmtTX11=extremeWirelessIntfSpeedMgmtTX11, extremeWirelessIntfSpeedErrorRX1=extremeWirelessIntfSpeedErrorRX1, extremeWirelessIntfSpeedErrorRX9=extremeWirelessIntfSpeedErrorRX9, extremeWirelessPortIfIndex=extremeWirelessPortIfIndex, extremeWirelessClientUsername=extremeWirelessClientUsername, extremeAPAuthServerAddressType=extremeAPAuthServerAddressType, extremeWirelessRemoteConnectRedirectBindingNumRedirects=extremeWirelessRemoteConnectRedirectBindingNumRedirects, extremeRFProfileRTSThresh=extremeRFProfileRTSThresh, extremeWirelessPhysInterfaceCtlTable=extremeWirelessPhysInterfaceCtlTable, extremeWirelessVirtInterfaceConfigMaxClients=extremeWirelessVirtInterfaceConfigMaxClients, extremeWirelessIntfSpeedMgmtRX18=extremeWirelessIntfSpeedMgmtRX18, extremeWirelessScanResultsCFPollReq=extremeWirelessScanResultsCFPollReq, extremeWirelessOffChannelScanStarted=extremeWirelessOffChannelScanStarted, extremeWirelessPhysInterfaceSupportedDataRatesTxValue=extremeWirelessPhysInterfaceSupportedDataRatesTxValue, extremeWirelessClientPacketSizeTX1024=extremeWirelessClientPacketSizeTX1024, extremeWirelessScanTotalTimeouts=extremeWirelessScanTotalTimeouts, extremeWirelessClientStationAgedOut=extremeWirelessClientStationAgedOut, extremeWirelessCounterMeasureStarted=extremeWirelessCounterMeasureStarted, extremeWirelessClientDecryptionFailures=extremeWirelessClientDecryptionFailures, extremeWirelessClientAssocInfoTotalDisassocReq=extremeWirelessClientAssocInfoTotalDisassocReq, extremeWirelessIntfSpeedErrorTX1=extremeWirelessIntfSpeedErrorTX1, extremeWirelessPortEnableWirelessTraps=extremeWirelessPortEnableWirelessTraps, extremeWirelessPhysInterfaceDTIMPeriod=extremeWirelessPhysInterfaceDTIMPeriod, extremeWirelessIntfFrameSizeTable=extremeWirelessIntfFrameSizeTable, extremeWirelessScanResultsMinRSS=extremeWirelessScanResultsMinRSS, extremeWirelessClientMICFailures=extremeWirelessClientMICFailures, extremeWirelessTraceModuleDesc=extremeWirelessTraceModuleDesc, extremeWirelessIntfFrameSizeErrorRX2048=extremeWirelessIntfFrameSizeErrorRX2048, extremeWirelessIntfSpeedDataRX9=extremeWirelessIntfSpeedDataRX9, extremeAPAuthServerSecret=extremeAPAuthServerSecret, extremeWirelessClientAuthInfoErrorResourceFailure=extremeWirelessClientAuthInfoErrorResourceFailure, extremeWirelessScanResultsPreamble=extremeWirelessScanResultsPreamble, extremeWirelessProbeInfoStatusTotalTimeouts=extremeWirelessProbeInfoStatusTotalTimeouts, extremeWirelessPortStatusEntry=extremeWirelessPortStatusEntry, extremeWirelessIntfSpeedReXmit24=extremeWirelessIntfSpeedReXmit24, extremeWirelessIntfFrameSizeMgmtRX128=extremeWirelessIntfFrameSizeMgmtRX128, extremeWirelessClientDiagMgmtActionInForward=extremeWirelessClientDiagMgmtActionInForward, extremeSecurityProfileEntry=extremeSecurityProfileEntry, extremeWirelessIntfFrameSizeReXmit128=extremeWirelessIntfFrameSizeReXmit128, extremeWirelessClientMACInfoMaxRSS=extremeWirelessClientMACInfoMaxRSS, extremeWirelessScanResultsRateSet=extremeWirelessScanResultsRateSet, extremeWirelessIntfSpeedCtlRX48=extremeWirelessIntfSpeedCtlRX48, extremeWirelessLogDiagEntry=extremeWirelessLogDiagEntry, extremeSecurityProfileStatus=extremeSecurityProfileStatus, extremeWirelessLogDiagNVRAMTotalByteCount=extremeWirelessLogDiagNVRAMTotalByteCount, extremeSecurityWEPDefaultKey=extremeSecurityWEPDefaultKey, extremeWirelessClientSpeedReXmit2=extremeWirelessClientSpeedReXmit2, extremeWirelessClientTxFrames=extremeWirelessClientTxFrames, extremeWirelessRemoteConnectUnboundAPsTable=extremeWirelessRemoteConnectUnboundAPsTable, extremeWirelessClientSpeedTX2=extremeWirelessClientSpeedTX2, ExtremeWirelessVirtInterfaceIndex=ExtremeWirelessVirtInterfaceIndex, extremeWirelessClientAuthInfoErrorChallengeText=extremeWirelessClientAuthInfoErrorChallengeText, extremeSecurityProfileEncryptionLength=extremeSecurityProfileEncryptionLength, extremeWEPKeyEntry=extremeWEPKeyEntry, extremeWirelessProbeInfoLastRSS=extremeWirelessProbeInfoLastRSS, extremeWirelessIntfFrameSizeDataRX512=extremeWirelessIntfFrameSizeDataRX512, extremeWirelessTraceMsgsOut=extremeWirelessTraceMsgsOut, extremeWirelessScanResultsChannel=extremeWirelessScanResultsChannel, extremeWirelessProbeInfoRateIE=extremeWirelessProbeInfoRateIE, extremeWirelessClientFrameSizeErrorRX2048=extremeWirelessClientFrameSizeErrorRX2048, extremeWirelessRemoteConnectGlobalCfgGroup=extremeWirelessRemoteConnectGlobalCfgGroup, extremeWirelessIntfSpeedCtlTX24=extremeWirelessIntfSpeedCtlTX24, extremeWirelessTraceModuleHeader=extremeWirelessTraceModuleHeader, extremeWirelessClientMACInfoTotalAssocReq=extremeWirelessClientMACInfoTotalAssocReq, extremeSecurityProfileNetworkAuthMode=extremeSecurityProfileNetworkAuthMode, extremeWirelessAPRemoved=extremeWirelessAPRemoved, extremeWirelessProbeInfoCfgEntry=extremeWirelessProbeInfoCfgEntry, extremeWirelessClientWPAStatsPairwiseKeySuccesses=extremeWirelessClientWPAStatsPairwiseKeySuccesses, extremeSecurityProfileSSIDInBeacon=extremeSecurityProfileSSIDInBeacon, extremeWirelessIntfFrameSizeEntry=extremeWirelessIntfFrameSizeEntry, extremeWirelessVirtInterfaceState=extremeWirelessVirtInterfaceState, extremeWirelessClientSpeedRX18=extremeWirelessClientSpeedRX18, extremeAntennaProfile5GHZGain=extremeAntennaProfile5GHZGain, extremeWirelessIntfSpeedErrorRX2=extremeWirelessIntfSpeedErrorRX2, extremeWirelessPortClearLog=extremeWirelessPortClearLog, extremeWirelessPortAntennaLocation=extremeWirelessPortAntennaLocation, extremeAPAuthServerPort=extremeAPAuthServerPort, extremeWirelessIntfSpeedDataTX2=extremeWirelessIntfSpeedDataTX2, extremeWirelessPortRuntimeServerAddress=extremeWirelessPortRuntimeServerAddress, extremeWirelessRemoteConnectUnboundAPsIPAddress=extremeWirelessRemoteConnectUnboundAPsIPAddress, extremeWirelessLogDiagEventLogTotalEmergCount=extremeWirelessLogDiagEventLogTotalEmergCount, extremeWirelessRemoteConnectRedirectBindingEntry=extremeWirelessRemoteConnectRedirectBindingEntry, extremeWirelessRemoteConnectRedirectBindingIPAddress=extremeWirelessRemoteConnectRedirectBindingIPAddress, extremeWirelessProbeInfoSourceClear=extremeWirelessProbeInfoSourceClear, extremeWirelessScanResultsData=extremeWirelessScanResultsData, extremeWirelessScanResultsTIMCount=extremeWirelessScanResultsTIMCount, extremeWirelessIntfSpeedCtlTX6=extremeWirelessIntfSpeedCtlTX6, extremeWirelessRemoteConnectBindingType=extremeWirelessRemoteConnectBindingType, extremeWirelessIntfFrameSizeCtlTX64=extremeWirelessIntfFrameSizeCtlTX64, extremeWirelessIntfRateAssoc=extremeWirelessIntfRateAssoc, extremeWirelessIntfSpeedCtlTX5p5=extremeWirelessIntfSpeedCtlTX5p5, extremeWirelessClientSpeedRX24=extremeWirelessClientSpeedRX24, extremeWirelessPortManagementIP=extremeWirelessPortManagementIP, extremeWirelessRemoteConnectRedirectBindingEnabled=extremeWirelessRemoteConnectRedirectBindingEnabled, extremeWEPKeyIndex=extremeWEPKeyIndex, extremeWirelessIntfUtilizationNav=extremeWirelessIntfUtilizationNav, extremeWirelessPhysInterfaceSpeed=extremeWirelessPhysInterfaceSpeed, extremeWirelessProbeInfoRateIESize=extremeWirelessProbeInfoRateIESize, extremeSecurityDot1xConfigEntry=extremeSecurityDot1xConfigEntry, extremeRFProfileEntry=extremeRFProfileEntry, extremeWEPKeyTable=extremeWEPKeyTable, extremeWirelessClientAssocInfoEntry=extremeWirelessClientAssocInfoEntry, extremeWirelessPortLogStatusFacility=extremeWirelessPortLogStatusFacility, extremeWirelessPhysInterfaceRTSThreshold=extremeWirelessPhysInterfaceRTSThreshold, extremeWirelessClientVLAN=extremeWirelessClientVLAN, extremeWirelessScanResultsDSSOFDM=extremeWirelessScanResultsDSSOFDM, extremeWirelessProbeInfoSendAddedTrap=extremeWirelessProbeInfoSendAddedTrap, extremeWirelessRemoteConnectBindingTable=extremeWirelessRemoteConnectBindingTable, extremeWirelessIntfFrameSizeMgmtRX256=extremeWirelessIntfFrameSizeMgmtRX256, extremeWirelessClientSpeedRX48=extremeWirelessClientSpeedRX48, extremeWirelessIntfFrameSizeMgmtRX1024=extremeWirelessIntfFrameSizeMgmtRX1024, extremeWirelessIntfFrameSizeErrorTable=extremeWirelessIntfFrameSizeErrorTable, extremeWirelessIntfSpeedDataTX12=extremeWirelessIntfSpeedDataTX12, extremeWirelessClientPacketSizeRX64=extremeWirelessClientPacketSizeRX64, extremeWirelessIntfSpeedDataRX11=extremeWirelessIntfSpeedDataRX11, extremeWirelessIntfSpeedCtlTX36=extremeWirelessIntfSpeedCtlTX36, extremeWirelessClientAuthInfoEntry=extremeWirelessClientAuthInfoEntry, extremeWirelessScanResultsExtRateSet=extremeWirelessScanResultsExtRateSet, extremeWirelessIntfSpeedCtlRX1=extremeWirelessIntfSpeedCtlRX1, extremeWirelessClientState=extremeWirelessClientState, extremeWirelessClientEncryption=extremeWirelessClientEncryption, extremeWirelessScanResultsTotalProbes=extremeWirelessScanResultsTotalProbes, extremeWirelessVirtInterfaceSSIDInBeacon=extremeWirelessVirtInterfaceSSIDInBeacon, extremeWirelessIntfSpeedErrorTX12=extremeWirelessIntfSpeedErrorTX12, extremeWirelessClientRxBytes=extremeWirelessClientRxBytes, extremeWirelessClientSpeedRX36=extremeWirelessClientSpeedRX36, extremeWEPKeyStatus=extremeWEPKeyStatus, extremeWirelessCounterMeasureSource=extremeWirelessCounterMeasureSource, extremeWirelessPortCurrentBootloaderInUse=extremeWirelessPortCurrentBootloaderInUse, extremeWirelessClientWPAStatsPairwiseKey3Sends=extremeWirelessClientWPAStatsPairwiseKey3Sends, extremeWirelessScanCurrentTableSize=extremeWirelessScanCurrentTableSize, extremeSecurityGroupUpdateTimeOut=extremeSecurityGroupUpdateTimeOut, extremeWirelessPortSecondaryBootloaderVersion=extremeWirelessPortSecondaryBootloaderVersion, extremeAntennaProfileIndex=extremeAntennaProfileIndex, extremeWirelessPortState=extremeWirelessPortState, extremeWirelessPhysInterfaceNumVirtInterfaces=extremeWirelessPhysInterfaceNumVirtInterfaces, extremeWirelessIntfSpeedDataRX12=extremeWirelessIntfSpeedDataRX12, extremeWirelessPhysInterfaceShortRetry=extremeWirelessPhysInterfaceShortRetry, extremeWirelessIntfSpeedCtlTX11=extremeWirelessIntfSpeedCtlTX11, extremeWirelessClientFrameSizeErrorTX256=extremeWirelessClientFrameSizeErrorTX256, extremeWirelessCfgMgmtVLAN=extremeWirelessCfgMgmtVLAN, extremeWirelessIntfFrameSizeCtlTX1024=extremeWirelessIntfFrameSizeCtlTX1024, extremeWirelessProbeInfoTimeout=extremeWirelessProbeInfoTimeout, extremeWirelessClientDiagOtherReqInDetected=extremeWirelessClientDiagOtherReqInDetected, extremeWirelessLogDiagEventLogTotalCritCount=extremeWirelessLogDiagEventLogTotalCritCount, extremeWirelessIntfFrameSizeReXmit2048=extremeWirelessIntfFrameSizeReXmit2048, extremeWirelessIntfSpeedMgmtTX2=extremeWirelessIntfSpeedMgmtTX2, extremeWirelessCfgEnableWirelessTraps=extremeWirelessCfgEnableWirelessTraps, extremeWirelessScanResultTableSize=extremeWirelessScanResultTableSize, extremeWirelessProbeInfoEnable=extremeWirelessProbeInfoEnable, extremeWirelessProbeInfoTableSize=extremeWirelessProbeInfoTableSize, extremeWirelessVirtInterfaceDot1xReAuthPeriod=extremeWirelessVirtInterfaceDot1xReAuthPeriod, extremeSecurityProfileName=extremeSecurityProfileName, extremeWirelessIntfUtilizationNoiseFloor=extremeWirelessIntfUtilizationNoiseFloor, extremeWirelessIntfFrameSpeedTable=extremeWirelessIntfFrameSpeedTable, extremeWirelessIntfSpeedErrorTX11=extremeWirelessIntfSpeedErrorTX11, NetworkAuthMode=NetworkAuthMode, extremeWirelessClientAuthInfoTotalDeauthResp=extremeWirelessClientAuthInfoTotalDeauthResp, extremeLACGeneral=extremeLACGeneral, extremeWirelessClientWPAStatsEntry=extremeWirelessClientWPAStatsEntry, extremeWirelessClientAssocIEBlob=extremeWirelessClientAssocIEBlob, extremeSecurityKeyMgmtSuite=extremeSecurityKeyMgmtSuite, extremeWirelessClientFrameSizeErrorTX512=extremeWirelessClientFrameSizeErrorTX512, extremeWirelessIntfFrameSizeDataRX256=extremeWirelessIntfFrameSizeDataRX256, extremeWirelessIntfSpeedCtlTX54=extremeWirelessIntfSpeedCtlTX54, extremeSecurityProfile=extremeSecurityProfile, extremeWirelessIntfSpeedReXmit11=extremeWirelessIntfSpeedReXmit11, extremeWirelessLogDiagSyslogTotalByteCount=extremeWirelessLogDiagSyslogTotalByteCount, extremeWirelessVirtInterfaceGroupUpdateTimeOut=extremeWirelessVirtInterfaceGroupUpdateTimeOut, extremeWirelessRemoteConnectRedirectBindAttachSwitchIPAddrType=extremeWirelessRemoteConnectRedirectBindAttachSwitchIPAddrType, extremeWirelessClientPacketSizeTX512=extremeWirelessClientPacketSizeTX512, extremeAntennaProfileEntry=extremeAntennaProfileEntry, extremeWirelessClientAuthInfoCurrentAuth=extremeWirelessClientAuthInfoCurrentAuth, extremeWirelessClientAuthInfoTotalDeauthReq=extremeWirelessClientAuthInfoTotalDeauthReq, extremeWirelessLogDiagEventLogTotalErrorCount=extremeWirelessLogDiagEventLogTotalErrorCount, extremeWirelessPhysInterfaceRadarInterfaceChannelList=extremeWirelessPhysInterfaceRadarInterfaceChannelList, extremeWirelessIntfSpeedMgmtTX24=extremeWirelessIntfSpeedMgmtTX24, extremeWirelessClientWPAStatsDoubleEAPOLKeyReceived=extremeWirelessClientWPAStatsDoubleEAPOLKeyReceived, extremeWirelessClientDiagAssocReqInAuth=extremeWirelessClientDiagAssocReqInAuth, extremeWirelessProbeInfoStatusEntry=extremeWirelessProbeInfoStatusEntry, extremeWirelessClientRxFrames=extremeWirelessClientRxFrames, extremeWirelessScanResultsCFPollable=extremeWirelessScanResultsCFPollable, extremeWirelessIntfSpeedMgmtTX48=extremeWirelessIntfSpeedMgmtTX48, extremeWirelessClientDiagTimeOutInAssoc=extremeWirelessClientDiagTimeOutInAssoc, extremeWirelessPortLogStatusSeverity=extremeWirelessPortLogStatusSeverity, extremeWirelessClientAuthInfoTable=extremeWirelessClientAuthInfoTable, extremeWirelessClientData=extremeWirelessClientData, extremeWirelessClientSpeedTX18=extremeWirelessClientSpeedTX18, extremeWirelessPortLogStatusIndex=extremeWirelessPortLogStatusIndex, extremeWirelessClientDiagOtherReqInAuth=extremeWirelessClientDiagOtherReqInAuth, extremeWirelessClientPacketSizeTX256=extremeWirelessClientPacketSizeTX256, extremeWirelessIntfFrameSizeCtlTX2048=extremeWirelessIntfFrameSizeCtlTX2048, Dot11AuthMode=Dot11AuthMode, extremeWirelessIntfFrameSizeMgmtTX2048=extremeWirelessIntfFrameSizeMgmtTX2048, extremeRFProfileLongRetry=extremeRFProfileLongRetry, extremeWirelessClientAssocInfoTotalReAssocReq=extremeWirelessClientAssocInfoTotalReAssocReq, extremeWirelessSpeedCounterData=extremeWirelessSpeedCounterData, extremeWirelessProbeInfoLastRate=extremeWirelessProbeInfoLastRate, extremeWirelessClientDiagEntersInAuth=extremeWirelessClientDiagEntersInAuth, extremeWirelessIntfFrameSizeMgmtTX128=extremeWirelessIntfFrameSizeMgmtTX128, extremeWirelessIntfSpeedMgmtRX12=extremeWirelessIntfSpeedMgmtRX12, extremeWirelessVirtInterfaceConfigEntry=extremeWirelessVirtInterfaceConfigEntry, extremeWirelessIntfFrameSizeDataTX512=extremeWirelessIntfFrameSizeDataTX512, extremeSecurityDot1xPSKValue=extremeSecurityDot1xPSKValue, extremeWirelessClientAssocInfoWPAUcastCipher=extremeWirelessClientAssocInfoWPAUcastCipher, extremeWirelessPhysInterfaceTxPowerLevel=extremeWirelessPhysInterfaceTxPowerLevel, extremeRFProfileShortRetry=extremeRFProfileShortRetry, extremeWirelessOffChannelScanCfgTable=extremeWirelessOffChannelScanCfgTable, extremeWirelessIntfFrameSizeErrorTX512=extremeWirelessIntfFrameSizeErrorTX512, extremeWirelessVirtInterfaceCtlEntry=extremeWirelessVirtInterfaceCtlEntry, extremeWirelessPortBootstrapServerAddressType=extremeWirelessPortBootstrapServerAddressType, extremeWirelessClientSpeedRX6=extremeWirelessClientSpeedRX6, extremeWirelessScanResultsStationId=extremeWirelessScanResultsStationId, extremeWirelessIntfSpeedDataTX5p5=extremeWirelessIntfSpeedDataTX5p5, extremeWirelessIntfSpeedErrorTX18=extremeWirelessIntfSpeedErrorTX18, extremeAPTotalDetectedStations=extremeAPTotalDetectedStations, extremeWirelessPortLogStatusPort=extremeWirelessPortLogStatusPort, extremeWirelessClientWPAStatsPairwiseKeyFailures=extremeWirelessClientWPAStatsPairwiseKeyFailures, extremeWirelessIntfSpeedMgmtRX2=extremeWirelessIntfSpeedMgmtRX2, extremeWirelessRemoteConnectUnboundAPsSerial=extremeWirelessRemoteConnectUnboundAPsSerial, extremeWirelessRemoteConnectDeviceDBGroup=extremeWirelessRemoteConnectDeviceDBGroup, extremeWirelessPortLogMessage=extremeWirelessPortLogMessage, extremeWirelessRemoteConnectRedirectBindingIPAddressType=extremeWirelessRemoteConnectRedirectBindingIPAddressType, extremeWirelessClientFrameSizeErrorRX128=extremeWirelessClientFrameSizeErrorRX128, extremeWirelessPhysInterfaceConfigTable=extremeWirelessPhysInterfaceConfigTable, extremeWirelessClientFrameSizeReXmit256=extremeWirelessClientFrameSizeReXmit256, extremeWirelessVirtInterfaceWEPKeyStatus=extremeWirelessVirtInterfaceWEPKeyStatus, extremeWirelessScanEnable=extremeWirelessScanEnable, extremeWirelessScanProbeInterval=extremeWirelessScanProbeInterval, extremeWirelessIntfSpeedErrorTX54=extremeWirelessIntfSpeedErrorTX54, extremeWirelessClientSpeedTX9=extremeWirelessClientSpeedTX9, extremeWirelessClientAuthInfoErrorKeyIndex=extremeWirelessClientAuthInfoErrorKeyIndex, extremeWirelessPortStatusAntenna5GHZGain=extremeWirelessPortStatusAntenna5GHZGain, extremeSecurityProfileTable=extremeSecurityProfileTable, extremeWirelessIntfFrameSizeErrorRX64=extremeWirelessIntfFrameSizeErrorRX64, extremeWirelessProbeInfoStatusCurrentTableSize=extremeWirelessProbeInfoStatusCurrentTableSize)
mibBuilder.exportSymbols("EXTREME-WIRELESS-MIB", extremeWirelessIntfFrameSizeErrorRX1024=extremeWirelessIntfFrameSizeErrorRX1024, extremeWirelessIntfFrameSpeedErrorTable=extremeWirelessIntfFrameSpeedErrorTable, extremeWirelessIntfSpeedReXmit54=extremeWirelessIntfSpeedReXmit54, extremeWirelessClientAuthType=extremeWirelessClientAuthType, extremeWirelessVirtInterfaceNetworkAuthMode=extremeWirelessVirtInterfaceNetworkAuthMode, extremeAPTotalAuthenticatedStations=extremeAPTotalAuthenticatedStations, extremeWirelessInterfaceStatusTable=extremeWirelessInterfaceStatusTable, extremeWirelessClientFrameSizeRX64=extremeWirelessClientFrameSizeRX64, extremeWirelessIntfFrameSizeCtlRX128=extremeWirelessIntfFrameSizeCtlRX128, extremeWirelessIntfFrameSizeErrorRX256=extremeWirelessIntfFrameSizeErrorRX256, extremeWirelessIntfFrameSizeErrorRX512=extremeWirelessIntfFrameSizeErrorRX512, extremeWirelessClientDiagSupportsPacketCounters=extremeWirelessClientDiagSupportsPacketCounters, extremeWirelessLogDiagNVRAMTotalSuppressedCount=extremeWirelessLogDiagNVRAMTotalSuppressedCount, extremeWirelessProbeInfoData=extremeWirelessProbeInfoData, extremeWirelessClientSpeedReXmit18=extremeWirelessClientSpeedReXmit18, extremeWirelessIntfSpeedErrorTX2=extremeWirelessIntfSpeedErrorTX2, extremeSecurityMcastCipherSuite=extremeSecurityMcastCipherSuite, extremeAPAuthServerTable=extremeAPAuthServerTable, extremeWirelessClientAssocInfoTotalAssocReq=extremeWirelessClientAssocInfoTotalAssocReq, extremeWirelessVirtInterfaceKeyMgmtSuite=extremeWirelessVirtInterfaceKeyMgmtSuite, extremeWirelessIntfCurrentDetected=extremeWirelessIntfCurrentDetected, extremeWirelessProbeInfoAdded=extremeWirelessProbeInfoAdded, extremeWirelessClientAssocInfoWPAKeyMgmtSuite=extremeWirelessClientAssocInfoWPAKeyMgmtSuite, extremeWirelessIntfSpeedMgmtTX9=extremeWirelessIntfSpeedMgmtTX9, extremeWirelessIntfFrameSizeMgmtTX256=extremeWirelessIntfFrameSizeMgmtTX256, extremeSecurityPairwiseUpdateTimeOut=extremeSecurityPairwiseUpdateTimeOut, extremeWirelessVirtInterfaceDot1xPSKValue=extremeWirelessVirtInterfaceDot1xPSKValue, extremeWirelessVirtInterfaceConfigTable=extremeWirelessVirtInterfaceConfigTable, extremeWirelessPortDetectedMaxAge=extremeWirelessPortDetectedMaxAge, extremeWirelessIntfSpeedReXmit48=extremeWirelessIntfSpeedReXmit48, extremeWirelessPortStatusAntennaType=extremeWirelessPortStatusAntennaType, extremeWirelessProbeInfoTotalProbeResp=extremeWirelessProbeInfoTotalProbeResp, extremeWirelessClientPacketSizeTX64=extremeWirelessClientPacketSizeTX64, extremeWirelessRemoteConnectBindingPortIndex=extremeWirelessRemoteConnectBindingPortIndex, extremeWirelessRemoteConnectRedirectBindAttachSwitchIPAddr=extremeWirelessRemoteConnectRedirectBindAttachSwitchIPAddr, extremeWirelessRemoteConnectBindingRowStatus=extremeWirelessRemoteConnectBindingRowStatus, extremeWirelessProbeInfoSendRemovedTrap=extremeWirelessProbeInfoSendRemovedTrap, extremeWirelessIntfSpeedDataRX24=extremeWirelessIntfSpeedDataRX24, extremeWirelessClientSpeedRX9=extremeWirelessClientSpeedRX9, extremeWirelessIntfSpeedMgmtTX18=extremeWirelessIntfSpeedMgmtTX18, extremeWirelessPortCfgLocation=extremeWirelessPortCfgLocation, extremeWirelessClientDiagErrorsInAuth=extremeWirelessClientDiagErrorsInAuth, extremeWirelessClientAssocInfoWPAUcastCipherCount=extremeWirelessClientAssocInfoWPAUcastCipherCount, extremeSecurityDot11iPreauthEnabled=extremeSecurityDot11iPreauthEnabled, extremeWirelessRemoteConnectRedirectBindingMAC=extremeWirelessRemoteConnectRedirectBindingMAC, extremeWirelessVirtInterfaceConfigSecurityProfile=extremeWirelessVirtInterfaceConfigSecurityProfile, extremeWirelessScanOffChannelRunning=extremeWirelessScanOffChannelRunning, extremeWirelessPortBootromVersion=extremeWirelessPortBootromVersion, extremeWirelessScanResultsPacketRate=extremeWirelessScanResultsPacketRate, extremeWirelessPortPrimaryBootloaderVersion=extremeWirelessPortPrimaryBootloaderVersion, extremeWirelessClientDiagEntry=extremeWirelessClientDiagEntry, extremeAPTotalAuthFailures=extremeAPTotalAuthFailures, extremeWirelessIntfFrameSizeCtlTX512=extremeWirelessIntfFrameSizeCtlTX512, extremeWirelessIntfSpeedMgmtTX6=extremeWirelessIntfSpeedMgmtTX6, extremeWirelessRemoteConnectRedirectBindingRowStatus=extremeWirelessRemoteConnectRedirectBindingRowStatus, extremeWirelessIntfSpeedCtlTX9=extremeWirelessIntfSpeedCtlTX9, extremeWirelessClientSpeedTX6=extremeWirelessClientSpeedTX6, extremeWirelessIntfFrameSizeCtlRX256=extremeWirelessIntfFrameSizeCtlRX256, extremeWirelessIntfTotalAuthed=extremeWirelessIntfTotalAuthed, extremeWirelessIntfCurrentForwarding=extremeWirelessIntfCurrentForwarding, extremeWirelessProbeInfoRemoved=extremeWirelessProbeInfoRemoved, extremeWirelessClientWPAStatsEAPOLKeyReceivedInPairwise1Key=extremeWirelessClientWPAStatsEAPOLKeyReceivedInPairwise1Key, extremeWirelessClientDiagAuthReqInDetected=extremeWirelessClientDiagAuthReqInDetected, extremeWirelessProbeInfoCfgTable=extremeWirelessProbeInfoCfgTable, extremeWirelessPortEdpNeighborId=extremeWirelessPortEdpNeighborId, extremeWirelessIntfFrameSizeDataRX1024=extremeWirelessIntfFrameSizeDataRX1024, extremeWirelessClientWPAStatsEAPOLKeyAborts=extremeWirelessClientWPAStatsEAPOLKeyAborts, extremeWirelessPortStatusAntennaLocation=extremeWirelessPortStatusAntennaLocation, extremeWirelessRemoteConnectUnboundAPsEntry=extremeWirelessRemoteConnectUnboundAPsEntry, extremeWirelessProbeInfoEntry=extremeWirelessProbeInfoEntry, extremeAPAuthServerIndex=extremeAPAuthServerIndex, extremeWirelessClientSpeedReXmit9=extremeWirelessClientSpeedReXmit9, extremeWirelessPortLocation=extremeWirelessPortLocation, extremeWirelessIntfSpeedMgmtTX1=extremeWirelessIntfSpeedMgmtTX1, extremeWirelessIntfSpeedCtlTX1=extremeWirelessIntfSpeedCtlTX1, extremeWirelessIntfUtilizationTable=extremeWirelessIntfUtilizationTable, extremeWirelessProbeInfoTableStatsClear=extremeWirelessProbeInfoTableStatsClear, extremeWirelessIntfFrameSizeDataTX256=extremeWirelessIntfFrameSizeDataTX256, extremeWirelessVirtInterfaceDot11AuthMode=extremeWirelessVirtInterfaceDot11AuthMode, extremeWirelessPortClearCounters=extremeWirelessPortClearCounters, extremeWirelessClientSpeedReXmit36=extremeWirelessClientSpeedReXmit36, extremeWirelessClientWPAStatsEAPOLKeyReceivedInGroupKey=extremeWirelessClientWPAStatsEAPOLKeyReceivedInGroupKey, extremeWirelessCfgNetmask=extremeWirelessCfgNetmask, extremeSecurityProfileDot11AuthMode=extremeSecurityProfileDot11AuthMode, extremeWirelessScanCurrentChannel=extremeWirelessScanCurrentChannel, extremeWirelessClientSpeedTX5p5=extremeWirelessClientSpeedTX5p5, extremeWirelessCfgGateway=extremeWirelessCfgGateway, extremeWirelessPhysInterfaceConfigEntry=extremeWirelessPhysInterfaceConfigEntry, extremeWirelessPortStatusAntenna2point4GHZGain=extremeWirelessPortStatusAntenna2point4GHZGain, extremeWirelessClientFrameSizeTX128=extremeWirelessClientFrameSizeTX128, extremeWirelessVirtInterfaceWEPKeyIndex=extremeWirelessVirtInterfaceWEPKeyIndex, extremeWirelessIntfRateAuthFailed=extremeWirelessIntfRateAuthFailed, extremeWirelessClientSpeedRX1=extremeWirelessClientSpeedRX1, extremeWirelessIntfFrameSizeErrorTX2048=extremeWirelessIntfFrameSizeErrorTX2048, extremeWirelessClientAssocInfoTotalAssocOK=extremeWirelessClientAssocInfoTotalAssocOK, extremeWirelessTraceModuleEntry=extremeWirelessTraceModuleEntry, extremeAPAuthServerReTransmit=extremeAPAuthServerReTransmit, extremeWirelessClientAssocInfoRateIE=extremeWirelessClientAssocInfoRateIE, extremeWirelessIntfFrameSpeedEntry=extremeWirelessIntfFrameSpeedEntry, extremeWirelessIntfSpeedDataTX11=extremeWirelessIntfSpeedDataTX11, extremeWirelessTraceEntry=extremeWirelessTraceEntry, extremeWirelessScanResultsTable=extremeWirelessScanResultsTable, extremeWirelessClientDiagTimeOutInForward=extremeWirelessClientDiagTimeOutInForward, extremeWirelessClientAssocInfoLastErrorType=extremeWirelessClientAssocInfoLastErrorType, extremeAPTraps=extremeAPTraps, Dot11Speed=Dot11Speed, extremeWirelessPortBootLoaderFilePath=extremeWirelessPortBootLoaderFilePath, extremeWirelessClientTxBytes=extremeWirelessClientTxBytes, extremeWirelessScanResetStats=extremeWirelessScanResetStats, extremeWirelessClientAssocInfoErrorBadState=extremeWirelessClientAssocInfoErrorBadState, extremeWirelessIntfSpeedDataTX9=extremeWirelessIntfSpeedDataTX9, extremeWirelessRemoteConnectBindingIPAddress=extremeWirelessRemoteConnectBindingIPAddress, extremeWirelessIntfSpeedMgmtRX24=extremeWirelessIntfSpeedMgmtRX24, extremeWirelessTraceModuleMsgsOut=extremeWirelessTraceModuleMsgsOut, extremeWirelessClientSizeCounterEntry=extremeWirelessClientSizeCounterEntry, extremeWirelessIntfSpeedCtlRX24=extremeWirelessIntfSpeedCtlRX24, extremeWirelessClientSpeedReXmit5p5=extremeWirelessClientSpeedReXmit5p5, extremeWirelessClientAssocInfoWPAKeyMgmtCount=extremeWirelessClientAssocInfoWPAKeyMgmtCount, extremeWirelessPAEStatsData=extremeWirelessPAEStatsData, extremeWirelessPortIpAddress=extremeWirelessPortIpAddress, extremeRFProfileType=extremeRFProfileType, extremeWirelessIntfSpeedMgmtRX5p5=extremeWirelessIntfSpeedMgmtRX5p5, extremeWirelessPortLogStatusTable=extremeWirelessPortLogStatusTable, extremeWirelessClientDiagErrorsInAssoc=extremeWirelessClientDiagErrorsInAssoc, extremeWirelessClientPriority=extremeWirelessClientPriority, extremeWirelessVirtInterfaceESSName=extremeWirelessVirtInterfaceESSName, extremeWirelessIntfFrameSizeErrorTX64=extremeWirelessIntfFrameSizeErrorTX64, extremeWirelessOffChannelScanList=extremeWirelessOffChannelScanList, extremeWirelessClientSpeedReXmit48=extremeWirelessClientSpeedReXmit48, extremeWirelessIntfSpeedReXmit5p5=extremeWirelessIntfSpeedReXmit5p5, extremeWirelessScanResultsGShortSlot=extremeWirelessScanResultsGShortSlot, extremeWirelessClientDiagTable=extremeWirelessClientDiagTable, extremeWirelessIntfSpeedErrorRX5p5=extremeWirelessIntfSpeedErrorRX5p5, extremeAPAuthServerEntry=extremeAPAuthServerEntry, extremeWirelessClientFrameSizeErrorRX64=extremeWirelessClientFrameSizeErrorRX64, extremeWirelessClientFrameSizeReXmit1024=extremeWirelessClientFrameSizeReXmit1024, extremeWirelessClientSpeedTX24=extremeWirelessClientSpeedTX24, extremeWirelessClientLastStateChangeTime=extremeWirelessClientLastStateChangeTime, extremeAPAuthServerStatus=extremeAPAuthServerStatus, extremeWirelessClientFrameSizeErrorTX64=extremeWirelessClientFrameSizeErrorTX64, extremeWirelessIntfSpeedReXmit18=extremeWirelessIntfSpeedReXmit18, extremeWirelessIntfSpeedReXmit1=extremeWirelessIntfSpeedReXmit1, extremeAntennaProfile2point4GHZGain=extremeAntennaProfile2point4GHZGain, extremeWirelessClientSpeedReXmit6=extremeWirelessClientSpeedReXmit6, extremeWirelessTraceSuppressed=extremeWirelessTraceSuppressed, extremeWirelessIntfSpeedMgmtTX5p5=extremeWirelessIntfSpeedMgmtTX5p5, extremeWirelessLogDiagEventLogTotalAlertCount=extremeWirelessLogDiagEventLogTotalAlertCount, extremeWirelessPortHWVersion=extremeWirelessPortHWVersion, extremeWirelessIntfFrameSizeMgmtTX512=extremeWirelessIntfFrameSizeMgmtTX512, extremeWirelessClientTable=extremeWirelessClientTable, extremeWirelessIntfFrameSizeCtlTX256=extremeWirelessIntfFrameSizeCtlTX256, extremeWirelessLogDiagEventLogTotalSuppressedCount=extremeWirelessLogDiagEventLogTotalSuppressedCount, extremeWirelessIntfTotalAssocFailed=extremeWirelessIntfTotalAssocFailed, extremeWirelessIntfSpeedErrorTX24=extremeWirelessIntfSpeedErrorTX24, extremeWirelessPortUpTime=extremeWirelessPortUpTime, extremeWirelessScanCfgEntry=extremeWirelessScanCfgEntry, extremeWirelessClientMACInfoTotalReAssocReq=extremeWirelessClientMACInfoTotalReAssocReq, extremeWirelessLogDiagSyslogTotalSuppressedCount=extremeWirelessLogDiagSyslogTotalSuppressedCount, extremeWirelessClientWPAStatsEAPOLKeyReceivedInPairwise3Key=extremeWirelessClientWPAStatsEAPOLKeyReceivedInPairwise3Key, PYSNMP_MODULE_ID=extremeWireless, extremeWirelessScanSendProbe=extremeWirelessScanSendProbe, extremeWirelessPhysInterfaceConfigPowerLevel=extremeWirelessPhysInterfaceConfigPowerLevel, extremeWirelessScanLastElement=extremeWirelessScanLastElement, extremeWirelessIntfFrameSpeedErrorEntry=extremeWirelessIntfFrameSpeedErrorEntry, extremeWirelessPortBootstrapFilePath=extremeWirelessPortBootstrapFilePath, extremeWirelessClientFrameSizeRX2048=extremeWirelessClientFrameSizeRX2048, extremeWirelessClientSpeedRX54=extremeWirelessClientSpeedRX54, extremeWirelessPortProductName=extremeWirelessPortProductName, extremeWirelessIntfSpeedDataRX18=extremeWirelessIntfSpeedDataRX18, extremeWirelessTraceBytesOut=extremeWirelessTraceBytesOut, extremeWirelessClientPacketSizeRX128=extremeWirelessClientPacketSizeRX128, extremeAntennaProfileTable=extremeAntennaProfileTable, extremeRFProfile=extremeRFProfile, extremeWirelessVirtInterfaceIndex=extremeWirelessVirtInterfaceIndex, extremeWirelessVirtInterfaceIappEnabled=extremeWirelessVirtInterfaceIappEnabled, extremeWirelessVirtInterfaceWEPKeyEntry=extremeWirelessVirtInterfaceWEPKeyEntry, extremeWirelessClientSignalStrength=extremeWirelessClientSignalStrength, extremeWirelessPhysInterfacePreamble=extremeWirelessPhysInterfacePreamble, extremeWirelessClientDiagTimeOutInDetected=extremeWirelessClientDiagTimeOutInDetected, extremeWirelessIntfSpeedCtlTX12=extremeWirelessIntfSpeedCtlTX12, extremeWirelessClientFrameSizeTX2048=extremeWirelessClientFrameSizeTX2048, extremeWirelessSizeCounterData=extremeWirelessSizeCounterData, extremeWirelessPortRuntimeFilePath=extremeWirelessPortRuntimeFilePath, extremeWirelessVirtInterfaceDataVlan=extremeWirelessVirtInterfaceDataVlan, extremeWirelessClientAssocInfoLastError=extremeWirelessClientAssocInfoLastError, extremeWirelessIntfSpeedReXmit36=extremeWirelessIntfSpeedReXmit36, extremeWirelessTraceModuleLevel=extremeWirelessTraceModuleLevel, extremeWirelessIntfSpeedErrorRX18=extremeWirelessIntfSpeedErrorRX18, extremeWirelessPortSerialNumber=extremeWirelessPortSerialNumber, extremeWirelessIntfTotalAuthFailed=extremeWirelessIntfTotalAuthFailed, extremeWirelessClientDiagMac=extremeWirelessClientDiagMac, extremeWirelessClientDiagTotalOverflows=extremeWirelessClientDiagTotalOverflows, extremeWirelessIntfSpeedDataTX36=extremeWirelessIntfSpeedDataTX36, extremeWirelessClientAuthInfoLastAuth=extremeWirelessClientAuthInfoLastAuth, extremeWirelessScanWPAUcastCipher=extremeWirelessScanWPAUcastCipher, extremeWirelessIntfFrameSizeMgmtRX2048=extremeWirelessIntfFrameSizeMgmtRX2048, extremeWirelessScanResultsPBCC=extremeWirelessScanResultsPBCC, extremeWirelessIntfRateDetected=extremeWirelessIntfRateDetected, extremeWirelessLogDiagNVRAMTotalEventCount=extremeWirelessLogDiagNVRAMTotalEventCount, extremeWirelessPortManufacturerName=extremeWirelessPortManufacturerName, extremeWirelessClientFrameSizeErrorRX512=extremeWirelessClientFrameSizeErrorRX512, extremeWirelessScanResultsIEBlob=extremeWirelessScanResultsIEBlob, extremeWirelessVirtInterfaceConfigState=extremeWirelessVirtInterfaceConfigState, extremeWirelessTraceModuleId=extremeWirelessTraceModuleId, extremeWirelessScanResultsTIMPeriod=extremeWirelessScanResultsTIMPeriod, extremeWirelessIntfSpeedCtlTX18=extremeWirelessIntfSpeedCtlTX18, extremeWirelessClientSpeedRX2=extremeWirelessClientSpeedRX2, extremeWirelessClientDiagCfgTimeout=extremeWirelessClientDiagCfgTimeout, extremeWirelessPortBootLoaderServerAddressType=extremeWirelessPortBootLoaderServerAddressType, extremeWirelessClientAssocInfoTable=extremeWirelessClientAssocInfoTable, extremeWirelessLogDiagNVRAMTotalDroppedCount=extremeWirelessLogDiagNVRAMTotalDroppedCount, extremeWirelessClientDiagSupportsSpeedCounters=extremeWirelessClientDiagSupportsSpeedCounters, extremeWirelessClientAssocInfoTotalAssocResp=extremeWirelessClientAssocInfoTotalAssocResp, extremeWirelessProbeInfoTable=extremeWirelessProbeInfoTable, extremeWirelessClientAssocInfoWPAIEPresent=extremeWirelessClientAssocInfoWPAIEPresent, extremeWirelessIntfFrameSizeCtlRX2048=extremeWirelessIntfFrameSizeCtlRX2048, extremeWirelessIntfSpeedCtlRX5p5=extremeWirelessIntfSpeedCtlRX5p5, extremeWirelessClientAssocInfoErrorBadCapability=extremeWirelessClientAssocInfoErrorBadCapability, extremeWirelessIntfSpeedErrorRX48=extremeWirelessIntfSpeedErrorRX48, extremeWirelessOffChannelScanMaxWait=extremeWirelessOffChannelScanMaxWait, extremeWirelessIntfSpeedCtlRX18=extremeWirelessIntfSpeedCtlRX18, extremeWirelessIntfSpeedDataRX1=extremeWirelessIntfSpeedDataRX1, extremeWirelessPhysInterfaceRFCtlTable=extremeWirelessPhysInterfaceRFCtlTable, extremeWirelessIntfSpeedMgmtRX11=extremeWirelessIntfSpeedMgmtRX11, extremeWirelessPortLogStatusDestIp=extremeWirelessPortLogStatusDestIp, extremeWirelessPhysInterfaceLongRetry=extremeWirelessPhysInterfaceLongRetry, extremeWirelessPortMacAddress=extremeWirelessPortMacAddress, extremeWirelessIntfFrameSizeMgmtRX512=extremeWirelessIntfFrameSizeMgmtRX512, extremeWirelessClientAssocInfoErrorCounterMeasure=extremeWirelessClientAssocInfoErrorCounterMeasure, extremeWirelessRemoteConnectBindingMAC=extremeWirelessRemoteConnectBindingMAC, extremeWirelessClientFrameSizeRX128=extremeWirelessClientFrameSizeRX128, extremeWirelessClientWPAStatsEAPOLKeyIgnores=extremeWirelessClientWPAStatsEAPOLKeyIgnores, extremeWirelessPhysInterfaceRFCtlEntry=extremeWirelessPhysInterfaceRFCtlEntry, extremeWirelessIntfFrameSizeReXmit1024=extremeWirelessIntfFrameSizeReXmit1024, extremeWirelessClientSpeedTX12=extremeWirelessClientSpeedTX12, extremeWirelessIntfFrameSizeCtlRX64=extremeWirelessIntfFrameSizeCtlRX64, extremeWirelessPortStatusTable=extremeWirelessPortStatusTable, extremeWirelessPortLastChange=extremeWirelessPortLastChange, extremeWirelessLogDiagEventLogTotalCount=extremeWirelessLogDiagEventLogTotalCount, extremeWirelessPortNumPhysInterfaces=extremeWirelessPortNumPhysInterfaces, extremeWirelessIntfSpeedCtlTX2=extremeWirelessIntfSpeedCtlTX2, extremeAntennaProfile=extremeAntennaProfile, extremeWirelessIntfSpeedCtlRX2=extremeWirelessIntfSpeedCtlRX2, extremeWirelessClientAssocInfoErrorRSNRequired=extremeWirelessClientAssocInfoErrorRSNRequired, extremeWirelessScanNumProbes=extremeWirelessScanNumProbes, extremeWirelessIntfSpeedMgmtTX54=extremeWirelessIntfSpeedMgmtTX54, ExtremeWirelessAntennaType=ExtremeWirelessAntennaType, extremeWirelessIntfSpeedErrorTX5p5=extremeWirelessIntfSpeedErrorTX5p5, extremeProfile=extremeProfile, extremeWirelessVirtInterfaceEncryptionLength=extremeWirelessVirtInterfaceEncryptionLength, extremeWirelessIntfCurrentAssoc=extremeWirelessIntfCurrentAssoc, extremeWirelessIntfTotalDetected=extremeWirelessIntfTotalDetected, extremeWirelessScanResultsPacketTime=extremeWirelessScanResultsPacketTime, extremeWirelessClientMACInfoData=extremeWirelessClientMACInfoData)
mibBuilder.exportSymbols("EXTREME-WIRELESS-MIB", extremeWirelessIntfSpeedDataRX5p5=extremeWirelessIntfSpeedDataRX5p5, extremeWirelessVirtInterfaceCtlTable=extremeWirelessVirtInterfaceCtlTable, extremeWirelessTraceModuleTable=extremeWirelessTraceModuleTable, extremeWirelessScanTotalOverflows=extremeWirelessScanTotalOverflows, extremeWirelessIntfSpeedReXmit2=extremeWirelessIntfSpeedReXmit2, extremeWirelessScanResultsSSID=extremeWirelessScanResultsSSID, extremeWirelessClientAssocInfoTotalAssocFail=extremeWirelessClientAssocInfoTotalAssocFail, extremeWirelessClientFrameSizeRX1024=extremeWirelessClientFrameSizeRX1024, extremeWirelessIntfFrameSizeReXmit256=extremeWirelessIntfFrameSizeReXmit256, extremeWirelessPhysInterfaceChannelAutoSelectStatus=extremeWirelessPhysInterfaceChannelAutoSelectStatus, extremeWirelessClientSpeedCounterEntry=extremeWirelessClientSpeedCounterEntry, extremeWirelessIntfFrameSizeMgmtTX1024=extremeWirelessIntfFrameSizeMgmtTX1024, extremeWirelessPortCfgDetectedTimeout=extremeWirelessPortCfgDetectedTimeout, extremeWirelessPortCountryCode=extremeWirelessPortCountryCode, extremeWirelessVirtInterfaceMaxClients=extremeWirelessVirtInterfaceMaxClients, extremeWirelessPhysInterfaceBeaconPeriod=extremeWirelessPhysInterfaceBeaconPeriod, extremeWirelessClientEntry=extremeWirelessClientEntry, extremeWirelessClientAuthData=extremeWirelessClientAuthData, extremeWirelessScanSendAPRemovedTrap=extremeWirelessScanSendAPRemovedTrap, extremeWirelessClientDiagErrorsInDetected=extremeWirelessClientDiagErrorsInDetected, extremeWirelessProbeInfoStatusWatermark=extremeWirelessProbeInfoStatusWatermark, extremeWirelessProbeInfoTableClear=extremeWirelessProbeInfoTableClear, ExtremeWirelessCountryCode=ExtremeWirelessCountryCode, extremeWirelessPhysInterfacePHYType=extremeWirelessPhysInterfacePHYType, extremeWirelessIntfCurrentAuthed=extremeWirelessIntfCurrentAuthed, extremeWirelessClientAuthInfoTotalAuthsFailed=extremeWirelessClientAuthInfoTotalAuthsFailed, extremeWirelessPortWatchdogReset=extremeWirelessPortWatchdogReset, extremeWirelessClientDiagTimeOutInAuth=extremeWirelessClientDiagTimeOutInAuth, extremeWirelessPortLogIndex=extremeWirelessPortLogIndex, extremeWirelessPortLogStatusStatus=extremeWirelessPortLogStatusStatus, extremeWirelessPhysInterfacePHYChannel=extremeWirelessPhysInterfacePHYChannel, extremeWirelessRemoteConnectRedirectBindingIndex=extremeWirelessRemoteConnectRedirectBindingIndex, extremeWirelessScanResultsMaxRSS=extremeWirelessScanResultsMaxRSS, extremeWirelessRemoteConnectUnboundAPsIndex=extremeWirelessRemoteConnectUnboundAPsIndex, extremeWirelessClientMACInfoTable=extremeWirelessClientMACInfoTable, extremeWirelessIntfFrameSizeCtlRX512=extremeWirelessIntfFrameSizeCtlRX512, extremeWirelessClientMACInfoNavValue=extremeWirelessClientMACInfoNavValue, extremeWirelessIntfSpeedMgmtRX9=extremeWirelessIntfSpeedMgmtRX9, extremeWirelessVirtInterfaceDot11iPreauthEnable=extremeWirelessVirtInterfaceDot11iPreauthEnable, extremeWirelessVirtInterfaceConfigWirelessBridging=extremeWirelessVirtInterfaceConfigWirelessBridging, extremeWirelessPortSWVersion=extremeWirelessPortSWVersion, extremeWirelessPortWallclockTime=extremeWirelessPortWallclockTime, extremeWirelessClientDiagStateWatermark=extremeWirelessClientDiagStateWatermark, extremeWirelessPhysInterfaceFragLength=extremeWirelessPhysInterfaceFragLength, extremeWirelessIntfFrameSizeCtlTX128=extremeWirelessIntfFrameSizeCtlTX128, extremeSecurityDot1xPSKPassPhrase=extremeSecurityDot1xPSKPassPhrase, extremeWirelessOffChannelScanMinWait=extremeWirelessOffChannelScanMinWait, extremeWirelessClientPacketSizeTX2048=extremeWirelessClientPacketSizeTX2048, extremeWirelessOpaqueEntry=extremeWirelessOpaqueEntry, extremeWirelessClientFrameSizeErrorRX256=extremeWirelessClientFrameSizeErrorRX256, extremeWirelessClientFrameSizeErrorTX128=extremeWirelessClientFrameSizeErrorTX128, extremeWirelessRemoteConnectBindingIPAddressType=extremeWirelessRemoteConnectBindingIPAddressType, extremeWirelessScanWPAIEPresent=extremeWirelessScanWPAIEPresent, extremeWirelessPortCfgIpAddress=extremeWirelessPortCfgIpAddress, extremeWirelessClientAuthInfoLastError=extremeWirelessClientAuthInfoLastError, extremeAntennaProfileStatus=extremeAntennaProfileStatus, extremeWirelessPortBootUpTime=extremeWirelessPortBootUpTime, extremeWirelessIntfSpeedErrorRX54=extremeWirelessIntfSpeedErrorRX54, extremeWirelessLogDiagEventLogTotalWarnCount=extremeWirelessLogDiagEventLogTotalWarnCount, extremeWirelessIntfSpeedErrorRX12=extremeWirelessIntfSpeedErrorRX12, extremeWirelessIntfSpeedCtlRX12=extremeWirelessIntfSpeedCtlRX12, extremeWirelessPortCfgTable=extremeWirelessPortCfgTable, extremeWirelessProbeInfoSourceStatsClear=extremeWirelessProbeInfoSourceStatsClear, extremeWirelessIntfSpeedReXmit9=extremeWirelessIntfSpeedReXmit9, extremeWirelessClientDiagSupportsSizeCounters=extremeWirelessClientDiagSupportsSizeCounters, extremeWirelessClientMACInfoAvgRSS=extremeWirelessClientMACInfoAvgRSS, extremeWirelessPortBootLoaderServerAddress=extremeWirelessPortBootLoaderServerAddress, extremeWirelessClientWPAStatsGroupKeySends=extremeWirelessClientWPAStatsGroupKeySends, extremeWirelessProbeInfoKeepIEs=extremeWirelessProbeInfoKeepIEs, extremeWireless=extremeWireless, extremeWirelessIntfFrameSizeDataTX64=extremeWirelessIntfFrameSizeDataTX64, extremeWirelessProbeInfoStatusTotalOverflows=extremeWirelessProbeInfoStatusTotalOverflows, extremeWirelessClientAssocInfoErrorRateMismatch=extremeWirelessClientAssocInfoErrorRateMismatch, extremeWirelessPortLogEntry=extremeWirelessPortLogEntry, extremeWirelessVirtInterfaceMacAddress=extremeWirelessVirtInterfaceMacAddress, extremeWirelessClientDiagTotal802Auths=extremeWirelessClientDiagTotal802Auths, extremeWirelessIntfSpeedMgmtRX6=extremeWirelessIntfSpeedMgmtRX6, extremeWirelessClientSSID=extremeWirelessClientSSID, extremeWirelessProbeInfoFirstSeen=extremeWirelessProbeInfoFirstSeen, extremeWirelessClientID=extremeWirelessClientID, extremeWirelessIntfSpeedMgmtTX12=extremeWirelessIntfSpeedMgmtTX12, extremeWirelessVirtInterfaceDot1xPSKPassPhrase=extremeWirelessVirtInterfaceDot1xPSKPassPhrase, extremeWirelessIntfSpeedMgmtRX48=extremeWirelessIntfSpeedMgmtRX48, extremeWirelessAPAdded=extremeWirelessAPAdded, extremeWirelessIntfSpeedDataTX6=extremeWirelessIntfSpeedDataTX6, extremeWirelessIntfSpeedErrorRX11=extremeWirelessIntfSpeedErrorRX11)
