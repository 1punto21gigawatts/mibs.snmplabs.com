#
# PySNMP MIB module CISCO-LWAPP-WEBAUTH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LWAPP-WEBAUTH-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:06:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoURLString, = mibBuilder.importSymbols("CISCO-TC", "CiscoURLString")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, Gauge32, MibIdentifier, Counter64, iso, TimeTicks, IpAddress, Counter32, Unsigned32, NotificationType, Integer32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Gauge32", "MibIdentifier", "Counter64", "iso", "TimeTicks", "IpAddress", "Counter32", "Unsigned32", "NotificationType", "Integer32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity")
TruthValue, TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "RowStatus", "DisplayString")
ciscoLwappWebAuthMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 515))
ciscoLwappWebAuthMIB.setRevisions(('2007-03-04 00:00', '2006-04-05 11:50',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoLwappWebAuthMIB.setRevisionsDescriptions(('This is the second revision of this MIB to accomodate enhanced guest access changes .', 'Initial version of this MIB module. ',))
if mibBuilder.loadTexts: ciscoLwappWebAuthMIB.setLastUpdated('200703040000Z')
if mibBuilder.loadTexts: ciscoLwappWebAuthMIB.setOrganization('Cisco Systems Inc.')
if mibBuilder.loadTexts: ciscoLwappWebAuthMIB.setContactInfo('Cisco Systems, Customer Service Postal: 170 West Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS Email: cs-wnbu-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoLwappWebAuthMIB.setDescription("This MIB is intended to be implemented on all those devices operating as Central controllers, that terminate the Light Weight Access Point Protocol tunnel from Cisco Light-weight LWAPP Access Points. This MIB is used to configure web authentication parameters in the controller to manage clients' authentication. The mobile nodes are web-authenticated if they select the WLAN that has web security enabled. The relationship between CC and the LWAPP APs can be depicted as follows: +......+ +......+ +......+ +......+ + + + + + + + + + CC + + CC + + CC + + CC + + + + + + + + + +......+ +......+ +......+ +......+ .. . . . .. . . . . . . . . . . . . . . . . . . . . . . . +......+ +......+ +......+ +......+ +......+ + + + + + + + + + + + AP + + AP + + AP + + AP + + AP + + + + + + + + + + + +......+ +......+ +......+ +......+ +......+ . . . . . . . . . . . . . . . . . . . . . . . . +......+ +......+ +......+ +......+ +......+ + + + + + + + + + + + MN + + MN + + MN + + MN + + MN + + + + + + + + + + + +......+ +......+ +......+ +......+ +......+ The LWAPP tunnel exists between the controller and the APs. The MNs communicate with the APs through the protocol defined by the 802.11 standard. LWAPP APs, upon bootup, discover and join one of the controllers and the controller pushes the configuration, that includes the WLAN parameters, to the LWAPP APs. The APs then encapsulate all the 802.11 frames from wireless clients inside LWAPP frames and forward the LWAPP frames to the controller. GLOSSARY Access Point ( AP ) An entity that contains an 802.11 medium access control ( MAC ) and physical layer ( PHY ) interface and provides access to the distribution services via the wireless medium for associated clients. LWAPP APs encapsulate all the 802.11 frames in LWAPP frames and sends them to the controller to which it is logically connected. Central Controller ( CC ) The central entity that terminates the LWAPP protocol tunnel from the LWAPP APs. Throughout this MIB, this entity also referred to as 'controller'. Guest User A guest user is a temporary user with access privileges for configuring the wireless network for a finite life time. The wireless networks are configured on the controller. The method of authentication to the controller can be configured using this MIB instrumentation. Light Weight Access Point Protocol ( LWAPP ) This is a generic protocol that defines the communication between the Access Points and the Central Controller. Mobile Node ( MN ) A roaming 802.11 wireless device in a wireless network associated with an access point. Mobile Node, Mobile Station(Ms) and client are used interchangeably. Web-Authentication Clients are web authenticated, when clients open the web-browser and send HTTP packets. Then user is asked to enter login and password. This is known as Web Authentication. REFERENCE [1] Wireless LAN Medium Access Control ( MAC ) and Physical Layer ( PHY ) Specifications. [2] Draft-obara-capwap-lwapp-00.txt, IETF Light Weight Access Point Protocol")
ciscoLwappWebAuthMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 515, 0))
ciscoLwappWebAuthMIBNotifObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 515, 1))
ciscoLwappWebAuthMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 515, 2))
ciscoLwappWebAuthMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 515, 3))
ciscoLwappWebAuthConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 1))
ciscoLwappWebAuthExtConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 2))
ciscoLwappLocalNetUserConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 3))
cLWAWebAuthType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("internalDefault", 1), ("internalCustom", 2), ("external", 3))).clone('internalDefault')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLWAWebAuthType.setStatus('current')
if mibBuilder.loadTexts: cLWAWebAuthType.setDescription('The type of web authentication for the clients. Web Authentication can be of three types; internalDefault - The default login page will be presented to the client for authentication. internalCustom - The administrator has created and uploaded a custom login page and it will be presented to the clients for authentication. external - This value indicates that the login page will be served from the external web server. Note that cLWAWebAuthType can be successfully set to this value when the cLWAExternalWebAuthURL object has been set to string with non-zero length.')
cLWAManufacturerLogo = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLWAManufacturerLogo.setStatus('current')
if mibBuilder.loadTexts: cLWAManufacturerLogo.setDescription("This object is used to control the display of the Manufacturer Logo on the login page. A value of 'true' indicates that the Manufacturer logo will be displayed on the login page. A value of 'false' indicates that the Manufacturer logo won't be displayed on the login page.")
cLWACustomLogoFileName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLWACustomLogoFileName.setStatus('current')
if mibBuilder.loadTexts: cLWACustomLogoFileName.setDescription("The name of the custom logo file. The logo in this file will appear on the login page when the value of cLWebAuthType is 'internalDefault'.")
cLWACustomWebTitle = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLWACustomWebTitle.setStatus('current')
if mibBuilder.loadTexts: cLWACustomWebTitle.setDescription("The title text that appears on the login page of the clients when the value of cLWebAuthType is 'internalDefault'.")
cLWACustomWebMessage = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 1, 5), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLWACustomWebMessage.setStatus('current')
if mibBuilder.loadTexts: cLWACustomWebMessage.setDescription("The message that appears on the login page of clients when the value of cLWebAuthType is 'internalDefault'.")
cLWACustomWebRedirectURL = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 1, 6), CiscoURLString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLWACustomWebRedirectURL.setStatus('current')
if mibBuilder.loadTexts: cLWACustomWebRedirectURL.setDescription('The URL used to load client web page after successful authentication.')
cLWAExternalWebAuthURL = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 1, 7), CiscoURLString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLWAExternalWebAuthURL.setStatus('current')
if mibBuilder.loadTexts: cLWAExternalWebAuthURL.setDescription("The URL to which the client web page will be directed for authentication. This object will be used when the cLWebAuthType object is set to 'external'. The configured URL should resolve to one of the Web Server IP addresses configured through cLWAExternalWebServerTable.")
cLWAExternalWebServerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 2, 1), )
if mibBuilder.loadTexts: cLWAExternalWebServerTable.setStatus('current')
if mibBuilder.loadTexts: cLWAExternalWebServerTable.setDescription("This table provides the list of external web servers used for external web authentication. These are the addresses from which the controller will allow traffic before client authentication to show the login page. The controller is expected to use the services of these web servers for performing the authentication. The user is expected to provide correct Internet addresses of those servers available for authentication through this table. The web authentication is done with the help of only those Web Servers configured through this table only when the cLWAWebAuthType is configured as 'external'.")
cLWAExternalWebServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 2, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-WEBAUTH-MIB", "cLWAExternalWebServerIndex"))
if mibBuilder.loadTexts: cLWAExternalWebServerEntry.setStatus('current')
if mibBuilder.loadTexts: cLWAExternalWebServerEntry.setDescription('A conceptual row in cLWAExternalWebServerTable. Each entry corresponds to one external web authentication server whose address is represented by cLWAExternalWebServerAddr.')
cLWAExternalWebServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: cLWAExternalWebServerIndex.setStatus('current')
if mibBuilder.loadTexts: cLWAExternalWebServerIndex.setDescription('This object uniquely identifies one specific entry in this table.')
cLWAExternalWebServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 2, 1, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLWAExternalWebServerAddrType.setStatus('current')
if mibBuilder.loadTexts: cLWAExternalWebServerAddrType.setDescription("The type of the Web Server address as represented by the value of the corresponding instance of 'cLWAExternalWebServerAddr'.")
cLWAExternalWebServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 2, 1, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLWAExternalWebServerAddr.setStatus('current')
if mibBuilder.loadTexts: cLWAExternalWebServerAddr.setDescription("The Internet address of the Web Server from which traffic is allowed before client's authentication. Please note that the row creation will be successful only if the address of the Web Server represented by the values of cLWAExternalWebServerAddrType and cLWAExternalWebServerAddr is unique across all the entries.")
cLWAExternalWebServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLWAExternalWebServerRowStatus.setStatus('current')
if mibBuilder.loadTexts: cLWAExternalWebServerRowStatus.setDescription("The status of the conceptual row used to create and delete specific instances of rows in this table. This object can not be set to 'active' unless the values of the corresponding instances of cLWAExternalWebServerAddr and cLWAExternalWebServerAddrType are set.")
cLWALocalNetUserTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 3, 1), )
if mibBuilder.loadTexts: cLWALocalNetUserTable.setStatus('current')
if mibBuilder.loadTexts: cLWALocalNetUserTable.setDescription('The table lists the user type for each user present in the controller. The user type can be guest or permanent.')
cLWALocalNetUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 3, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-WEBAUTH-MIB", "cLWALocalNetUserName"))
if mibBuilder.loadTexts: cLWALocalNetUserEntry.setStatus('current')
if mibBuilder.loadTexts: cLWALocalNetUserEntry.setDescription('This is a row in the cLWALocalNetUserTable. Each entry corresponds to a guest/permanent user present in the controller.')
cLWALocalNetUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 3, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 50)))
if mibBuilder.loadTexts: cLWALocalNetUserName.setStatus('current')
if mibBuilder.loadTexts: cLWALocalNetUserName.setDescription('This object identifies the user name of the guest user or the permanent user in the controller.')
cLWALocalNetUserIsGuest = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 515, 2, 3, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLWALocalNetUserIsGuest.setStatus('current')
if mibBuilder.loadTexts: cLWALocalNetUserIsGuest.setDescription("This object is used to specify the type of user in the controller. A value of 'true' is used to specify a guest user and a value of 'false' is used to specify a permanent user.")
cLWAGuestUserName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 515, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cLWAGuestUserName.setStatus('current')
if mibBuilder.loadTexts: cLWAGuestUserName.setDescription('This object indicates the name of the guest user.')
cLWAGuestUserRemoved = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 515, 0, 1)).setObjects(("CISCO-LWAPP-WEBAUTH-MIB", "cLWAGuestUserName"))
if mibBuilder.loadTexts: cLWAGuestUserRemoved.setStatus('current')
if mibBuilder.loadTexts: cLWAGuestUserRemoved.setDescription("This notification is generated when the lifetime of the guest-user expires and the guest-user's accounts are removed.")
ciscoLwappWebAuthMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 515, 3, 1))
ciscoLwappWebAuthMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 515, 3, 2))
cLWebAuthMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 515, 3, 1, 1)).setObjects(("CISCO-LWAPP-WEBAUTH-MIB", "cLWACustomWebAuthGroup"), ("CISCO-LWAPP-WEBAUTH-MIB", "cLWAExternalWebAuthGroup"), ("CISCO-LWAPP-WEBAUTH-MIB", "cLWAGuestAccessNotifObjGroup"), ("CISCO-LWAPP-WEBAUTH-MIB", "cLWAGuestAccessNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLWebAuthMIBCompliance = cLWebAuthMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: cLWebAuthMIBCompliance.setDescription('The compliance statement for the SNMP entities that implement the ciscoLwappWebAuthMIB module.')
cLWebAuthMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 515, 3, 1, 2)).setObjects(("CISCO-LWAPP-WEBAUTH-MIB", "cLWACustomWebAuthGroup"), ("CISCO-LWAPP-WEBAUTH-MIB", "cLWAExternalWebAuthGroup"), ("CISCO-LWAPP-WEBAUTH-MIB", "cLWAGuestAccessNotifObjGroup"), ("CISCO-LWAPP-WEBAUTH-MIB", "cLWAGuestAccessNotifGroup"), ("CISCO-LWAPP-WEBAUTH-MIB", "cLWAGuestUserConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLWebAuthMIBComplianceRev1 = cLWebAuthMIBComplianceRev1.setStatus('current')
if mibBuilder.loadTexts: cLWebAuthMIBComplianceRev1.setDescription('The compliance statement for the SNMP entities that implement the ciscoLwappWebAuthMIB module.')
cLWACustomWebAuthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 515, 3, 2, 1)).setObjects(("CISCO-LWAPP-WEBAUTH-MIB", "cLWAWebAuthType"), ("CISCO-LWAPP-WEBAUTH-MIB", "cLWAManufacturerLogo"), ("CISCO-LWAPP-WEBAUTH-MIB", "cLWACustomLogoFileName"), ("CISCO-LWAPP-WEBAUTH-MIB", "cLWACustomWebTitle"), ("CISCO-LWAPP-WEBAUTH-MIB", "cLWACustomWebMessage"), ("CISCO-LWAPP-WEBAUTH-MIB", "cLWACustomWebRedirectURL"), ("CISCO-LWAPP-WEBAUTH-MIB", "cLWAExternalWebAuthURL"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLWACustomWebAuthGroup = cLWACustomWebAuthGroup.setStatus('current')
if mibBuilder.loadTexts: cLWACustomWebAuthGroup.setDescription('This collection of objects is used for internal- default and internal-custom web-authentication.')
cLWAExternalWebAuthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 515, 3, 2, 2)).setObjects(("CISCO-LWAPP-WEBAUTH-MIB", "cLWAExternalWebServerAddrType"), ("CISCO-LWAPP-WEBAUTH-MIB", "cLWAExternalWebServerAddr"), ("CISCO-LWAPP-WEBAUTH-MIB", "cLWAExternalWebServerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLWAExternalWebAuthGroup = cLWAExternalWebAuthGroup.setStatus('current')
if mibBuilder.loadTexts: cLWAExternalWebAuthGroup.setDescription('This collection of objects is used for configuring Web servers for external web-authentication.')
cLWAGuestAccessNotifObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 515, 3, 2, 3)).setObjects(("CISCO-LWAPP-WEBAUTH-MIB", "cLWAGuestUserName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLWAGuestAccessNotifObjGroup = cLWAGuestAccessNotifObjGroup.setStatus('current')
if mibBuilder.loadTexts: cLWAGuestAccessNotifObjGroup.setDescription('This collection of objects are part of the Guest Access related notifications by the controller.')
cLWAGuestAccessNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 515, 3, 2, 4)).setObjects(("CISCO-LWAPP-WEBAUTH-MIB", "cLWAGuestUserRemoved"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLWAGuestAccessNotifGroup = cLWAGuestAccessNotifGroup.setStatus('current')
if mibBuilder.loadTexts: cLWAGuestAccessNotifGroup.setDescription('These notifications are sent to the network management station to indicate the access status of guest users.')
cLWAGuestUserConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 515, 3, 2, 5)).setObjects(("CISCO-LWAPP-WEBAUTH-MIB", "cLWALocalNetUserIsGuest"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLWAGuestUserConfigGroup = cLWAGuestUserConfigGroup.setStatus('current')
if mibBuilder.loadTexts: cLWAGuestUserConfigGroup.setDescription('This collection of objects is used for configuring guest user parameters.')
mibBuilder.exportSymbols("CISCO-LWAPP-WEBAUTH-MIB", ciscoLwappWebAuthMIB=ciscoLwappWebAuthMIB, ciscoLwappWebAuthMIBObjects=ciscoLwappWebAuthMIBObjects, cLWACustomWebAuthGroup=cLWACustomWebAuthGroup, cLWACustomWebMessage=cLWACustomWebMessage, ciscoLwappWebAuthMIBNotifs=ciscoLwappWebAuthMIBNotifs, cLWAExternalWebAuthGroup=cLWAExternalWebAuthGroup, ciscoLwappWebAuthExtConfig=ciscoLwappWebAuthExtConfig, ciscoLwappWebAuthMIBGroups=ciscoLwappWebAuthMIBGroups, cLWACustomWebTitle=cLWACustomWebTitle, cLWACustomLogoFileName=cLWACustomLogoFileName, cLWAExternalWebServerRowStatus=cLWAExternalWebServerRowStatus, ciscoLwappWebAuthMIBCompliances=ciscoLwappWebAuthMIBCompliances, ciscoLwappWebAuthMIBNotifObjs=ciscoLwappWebAuthMIBNotifObjs, cLWALocalNetUserName=cLWALocalNetUserName, cLWAExternalWebServerAddr=cLWAExternalWebServerAddr, cLWebAuthMIBComplianceRev1=cLWebAuthMIBComplianceRev1, cLWAManufacturerLogo=cLWAManufacturerLogo, cLWAExternalWebServerIndex=cLWAExternalWebServerIndex, cLWAGuestAccessNotifObjGroup=cLWAGuestAccessNotifObjGroup, cLWAGuestAccessNotifGroup=cLWAGuestAccessNotifGroup, cLWAExternalWebServerEntry=cLWAExternalWebServerEntry, cLWACustomWebRedirectURL=cLWACustomWebRedirectURL, ciscoLwappWebAuthConfig=ciscoLwappWebAuthConfig, ciscoLwappWebAuthMIBConform=ciscoLwappWebAuthMIBConform, cLWAExternalWebServerAddrType=cLWAExternalWebServerAddrType, PYSNMP_MODULE_ID=ciscoLwappWebAuthMIB, ciscoLwappLocalNetUserConfig=ciscoLwappLocalNetUserConfig, cLWAExternalWebAuthURL=cLWAExternalWebAuthURL, cLWALocalNetUserIsGuest=cLWALocalNetUserIsGuest, cLWAGuestUserName=cLWAGuestUserName, cLWAExternalWebServerTable=cLWAExternalWebServerTable, cLWALocalNetUserEntry=cLWALocalNetUserEntry, cLWebAuthMIBCompliance=cLWebAuthMIBCompliance, cLWALocalNetUserTable=cLWALocalNetUserTable, cLWAWebAuthType=cLWAWebAuthType, cLWAGuestUserConfigGroup=cLWAGuestUserConfigGroup, cLWAGuestUserRemoved=cLWAGuestUserRemoved)
