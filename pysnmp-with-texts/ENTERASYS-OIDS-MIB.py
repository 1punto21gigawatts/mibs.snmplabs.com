#
# PySNMP MIB module ENTERASYS-OIDS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-OIDS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:03:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
etsysOids, etsysModules = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysOids", "etsysModules")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, ModuleIdentity, Integer32, MibIdentifier, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, iso, IpAddress, Counter64, TimeTicks, Gauge32, Unsigned32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ModuleIdentity", "Integer32", "MibIdentifier", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "iso", "IpAddress", "Counter64", "TimeTicks", "Gauge32", "Unsigned32", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
enterasysOidsMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 2))
enterasysOidsMib.setRevisions(('2011-01-13 19:27', '2010-12-20 18:41', '2010-12-14 13:37', '2010-12-02 18:33', '2010-11-18 18:18', '2010-10-04 12:55', '2010-09-08 14:39', '2010-06-23 17:58', '2010-06-10 14:27', '2010-06-03 15:12', '2010-05-04 19:53', '2010-03-05 13:53', '2009-10-26 17:15', '2009-10-26 15:30', '2009-09-30 20:04', '2009-08-27 13:07', '2009-08-25 01:12', '2009-07-08 15:37', '2009-07-02 17:38', '2009-06-22 19:44', '2009-04-07 16:02', '2009-03-31 17:13', '2009-03-05 13:58', '2009-01-05 15:08', '2008-11-17 16:04', '2008-08-13 19:04', '2008-06-10 12:59', '2008-04-24 14:00', '2008-03-13 20:58', '2008-01-24 20:08', '2008-01-10 20:09', '2007-10-30 19:10', '2007-10-15 13:10', '2007-08-30 18:08', '2007-08-29 15:16', '2007-06-25 18:22', '2007-06-14 18:25', '2007-06-04 15:43', '2007-05-29 13:12', '2007-04-20 11:58', '2007-04-16 14:43', '2007-04-05 15:32', '2007-02-27 17:49', '2007-01-25 15:58', '2007-01-23 21:01', '2006-10-31 19:54', '2006-09-29 12:58', '2006-09-20 14:51', '2006-08-25 15:02', '2006-08-16 13:44', '2006-08-07 12:31', '2006-08-03 13:57', '2006-06-19 18:32', '2006-03-09 19:14', '2006-02-16 14:42', '2006-02-09 20:06', '2006-02-06 20:31', '2005-11-10 19:58', '2005-10-11 14:42', '2005-09-21 16:03', '2005-08-31 18:22', '2005-06-21 12:45', '2005-04-19 18:49', '2005-04-12 17:14', '2005-02-20 23:50', '2005-02-10 19:39', '2005-01-12 18:02', '2005-01-11 19:56', '2004-08-24 13:29', '2004-08-11 19:24', '2004-08-04 21:18', '2004-06-01 19:42', '2004-05-18 15:53', '2004-04-16 19:15', '2004-04-02 18:38', '2004-03-19 19:55', '2004-03-15 19:31', '2004-03-15 17:11', '2004-02-26 14:55', '2004-02-19 14:19', '2004-02-17 21:31', '2004-01-27 16:43', '2003-12-12 17:13', '2003-10-23 15:27', '2003-10-14 15:04', '2003-09-19 20:44', '2003-09-17 14:26', '2003-08-29 21:00', '2003-08-19 19:32', '2003-07-30 16:43', '2003-07-28 16:36', '2003-07-17 13:53', '2003-07-09 20:41', '2003-07-02 17:25', '2003-06-05 15:09', '2003-06-03 13:08', '2003-05-14 21:08', '2003-05-07 20:48', '2003-04-25 20:32', '2003-04-17 13:58', '2003-04-17 13:58', '2003-03-05 15:35', '2003-02-24 15:06', '2002-12-31 20:51', '2002-12-31 19:20', '2002-12-13 19:26', '2002-12-03 14:20', '2002-10-29 14:13', '2002-08-30 21:05', '2002-08-29 19:23', '2002-08-27 15:03', '2002-07-12 14:21', '2002-06-27 21:09', '2002-06-06 18:41', '2002-05-30 17:11', '2002-04-23 19:43', '2002-04-08 20:35', '2002-04-02 18:56', '2002-03-14 20:45', '2002-01-14 19:03', '2002-01-09 18:19', '2001-12-19 16:33', '2001-12-13 20:13', '2001-11-09 16:18', '2001-11-08 20:01', '2001-09-26 18:00', '2001-08-01 12:30', '2001-07-26 17:30', '2001-07-12 19:30', '2001-06-26 19:00', '2001-05-03 13:00', '2001-04-18 15:00', '2001-04-02 17:00', '2001-03-30 15:00', '2001-03-01 14:00', '2001-02-22 16:00', '2000-12-20 19:00', '2000-11-09 21:00', '2000-10-17 16:16', '2000-09-29 19:00', '2000-05-19 00:00', '2000-05-17 00:10', '2000-05-17 00:00', '2000-05-11 00:00', '2000-05-01 00:00', '2000-04-27 00:00', '2000-03-31 00:00', '2000-03-22 00:00', '2000-03-16 18:00', '2000-03-16 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: enterasysOidsMib.setRevisionsDescriptions(('Added the following OIDs: etsysOidDevS6, etsysOidPhyS6xCHASSIS, etsysOidPhyS6Backplane.', 'Added the following OIDs: etsysOidDevSSAxT5068x0652, etsysOidDevSSAxG5018x0652.', 'Added the following OIDs: etsysOidPhyMGBICxBX40xD, etsysOidPhyMGBICxBX40xU, etsysOidPhyMGBICxBX120xD, etsysOidPhyMGBICxBX120xU.', 'Added the etsysOidPhySxDCxPS OID.', 'Added the following OIDs: etsysOidDevK6, etsysOidDevK10, etsysOidPhyK6xCHASSIS, etsysOidPhyK10xCHASSIS, etsysOidPhyK6xFAN, etsysOidPhyK10xFAN, etsysOidPhyKxACxPSx1440W, etsysOidPhyKxPOExExtConn, etsysOidPhyK6FanTraySlot, etsysOidPhyK10FanTraySlot, etsysOidPhyKLineCardSlot, etsysOidPhyKFabricModuleSlot, etsysOidPhyKK2008x0204xF1, etsysOidPhyKK2008x0204xF2, etsysOidPhyKK2000x0000xF1, etsysOidPhyKK2000x0000xF2, etsysOidPhyKT2006x0224, etsysOidPhyKG2001x0224, etsysOidPhyKK2008x0204, etsysOidPhyK6Backplane, etsysOidPhyK10Backplane.', 'Updated the DESCRIPTION and Name for the etsysOidPhySSAxACxPSx600W OID.', 'Added the etsysOidPhyIncompatiblePluggable OID.', 'Added the etsysOidDevA4H254x8F8T OID.', 'Added the following OIDs: etsysOidPhyMGBICxBX10xD, etsysOidPhyMGBICxBX10xU.', 'Added the following OIDs: etsysOidDevA4H124x24TX, etsysOidDevA4H124x24FX, etsysOidDevA4H124x8F8T, etsysOidDevA4H124x24, etsysOidDevA4H124x24P, etsysOidDevA4H124x48, etsysOidDevA4H124x48P.', 'Added the following OIDs: etsysOidPhy10GBxLWxSFPP, etsysOidPhy10GBxLWxXFP, etsysOidPhy10GBxLWx20, etsysOidPhy10GBxLWx10, etsysOidPhy10GBxLWx05, etsysOidPhy10GBxLWx03.', 'Added the etsysOidDevNACxV OID.', 'Added the following OIDs: etsysOidPhyNSAxFAN, etsysOidPhyNSAxACxPS, etsysOidPhyN1xFAN, etsysOidPhyN1xACxPS.', 'Modified the Name for the following OIDs: etsysOidDevB5K125x48P2, etsysOidDevC5K125x48P2, etsysOidDevC5K175x24.', 'Added the etsysOidPhySSAxFAN OID.', 'Added the following OIDs: etsysOidDevNACxAx10 and etsysOidDevNACxAx20.', 'Added the following OIDs: etsysOidDevB5G124x24, etsysOidDevB5G124x24P2, etsysOidDevB5G124x48, etsysOidDevB5G124x48P2, etsysOidDevB5K125x24, etsysOidDevB5K125x24P2, etsysOidDevB5K125x48, etsysOidDevB5K125x48P2, etsysOidDevC5G124x24, etsysOidDevC5G124x24P2, etsysOidDevC5G124x48, etsysOidDevC5G124x48P2, etsysOidDevC5K125x24, etsysOidDevC5K125x24P2, etsysOidDevC5K125x48, etsysOidDevC5K125x48P2, etsysOidDevC5K175x24.', 'Added the etsysOidPhyConsolePortUsbMicroAB OID.', 'Added the etsysOidPhyNOT1206x0112 OID.', 'Added the etsysOidPhySOT1206x0112 OID.', 'Added the following OIDs: etsysOidPhyS8Backplane, etsysOidPhyS4Backplane, etsysOidPhyS3Backplane, etsysOidPhyN5Backplane, etsysOidPhyN3Backplane, etsysOidPhyN1Backplane.', 'Added the following OIDs: etsysOidDevSSAxT4068x0252, etsysOidDevSSAxT1068x0652, etsysOidDevSSAxG1018x0652, etsysOidDevS3, etsysOidDevS4, etsysOidDevS8, etsysOidPhyS3xCHASSIS, etsysOidPhyS4xCHASSIS, etsysOidPhyS8xCHASSIS, etsysOidPhySxFAN, etsysOidPhySxACxPS, etsysOidPhySxPOExPS, etsysOidPhySxPOEx4BAY, etsysOidPhySxPOEx8BAY, etsysOidPhySPowerSupplySlot, etsysOidPhySFanTraySlot, etsysOidPhySIOModuleSlot, etsysOidPhySFabricModuleSlot, etsysOidPhySPoEPowerSupplySlot, etsysOidPhySK1208x0808xF6, etsysOidPhyST4106x0348xF6, etsysOidPhyST1206x0848xF6, etsysOidPhySG1201x0848xF6, etsysOidPhySK1008x0816, etsysOidPhyST4106x0248, etsysOidPhyST4006x0272, etsysOidPhyST1206x0848, etsysOidPhySG4101x0248, etsysOidPhySG1201x0848, etsysOidPhySOptModType1Slot, etsysOidPhySOptModType2Slot, etsysOidPhySOK1208x0104, etsysOidPhySOK1208x0102, etsysOidPhySOK1208x0204, etsysOidPhySOG1201x0112, etsysOidPhyNN0100x0100xF2, etsysOidPhyNT4106x0248, etsysOidPhyNT4006x0272, etsysOidPhyNT1006x0448, etsysOidPhyNK1008x0408, etsysOidPhyNG1001x0448, etsysOidPhyNG4101x0248, etsysOidPhyNGNOptModSlot, etsysOidPhyNOK1208x0102, etsysOidPhyNOK1208x0104, etsysOidPhyNOG1201x0112, etsysOidPhySSAxACxPSx600W, etsysOidPhySSAxACxPSx1000W, etsysOidPhySSAPowerSupplySlot, etsysOidPhy10GBxERxSFPP, etsysOidPhyUSBAPort, etsysOidPhyUSBMicroABPort.', 'Added the etsysOidPhy7SxDNSAx01 OID.', 'Added the following OIDs: etsysOidPhy10GbExSRxSFPP, etsysOidPhy10GbExLRxSFPP, etsysOidPhy10GbExLRMxSFPP, etsysOidPhy10GbExC01xSFPP, etsysOidPhy10GbExC03xSFPP, etsysOidPhy10GbExC10xSFPP, etsysOidPhy10GbExC20xSFPP, etsysOidPhySFPPNoConnector, and etsysOidPhy10GbExLRMxXFP.', 'Added the etsysOidPhy7SxC20N OID.', 'Added the following OIDs: etsysOidDevNACxAx2K and etsysOidDevNACxAx3K.', 'Added the etsysOidDevC3K122x24P OID.', 'Added the etsysOidPhy7SxNACGx01 OID.', 'Modified the DESCRIPTION clauses for the following: etsysOidDevG3G124x24, etsysOidDevG3G170x24, etsysOidDevD2G124x12, etsysOidDevD2G124x12P, etsysOidDevG3G124x24P.', 'Added the etsysOidDevG3G124x24P OID.', 'Added the etsysOidDev7SxNSNACGx01NPS OID.', 'Added the etsysOidPhyMGBICxLC07 OID.', 'Changed MGBIC-N-LC04 to MGBIC-LC04. Changed MGBIC-N-LC05 to MGBIC-LC05.', 'Added the etsysOidPhy7SxNSNACGx01xNPS OID.', 'Added the following OIDs: etsysOidPhy7S4280x19, etsysOidPhy2S4082x25 and etsysOidDevMatrixN1NAC.', 'Added the etsysOidDevRBTx8500 OID.', 'Added the following OIDs: etsysOidDevD2G124x12 and etsysOidDevD2G124x12P.', 'Added the following OIDs: etsysOidDevG3G124x24 and etsysOidDevG3G170x24.', 'Corrected DESCRIPTION clause for etsysOidPhyMGBICxLC05.', 'Added the etsysOidDevSNSxNSSxA OID.', 'Added the following OIDs: etsysOidDevA2H123x24, etsysOidDevB3H124x24FX, etsysOidDevC3H124x24FX, etsysOidDevC3K122x24, etsysOidDevC3K172x24, etsysOidDevC3Kx2XFP.', 'Updated the DESCRIPTION clause for the following: etsysOidPhyMGBICxLC04 Added the following OIDs: etsysOidPhyMGBICxLC05, etsysOidPhy7K4297x02, etsysOidPhy7K4297x04, etsysOidPhy7KR4297x02, etsysOidPhy7KR4297x04.', 'Added the following OIDs: etsysOidPhy10GbExZRxXFP, etsysOidPhy10GbExZWxXFP, etsysOidPhy10GbExZR, etsysOidPhy10GbExZW.', 'Updated the DESCRIPTION clause for the following: etsysOidPhy10GbExSR, etsysOidPhy10GbExLR, etsysOidPhy10GbExER, etsysOidPhy10GbExLX4, etsysOidPhy10GbExSW, etsysOidPhy10GbExLW, etsysOidPhy10GbExEW. Added the following OIDs: etsysOidPhy10GbExSRxXFP, etsysOidPhy10GbExLRxXFP, etsysOidPhy10GbExERxXFP, etsysOidPhy10GbExCX4xXFP, etsysOidPhy10GbExCX4, etsysOidPhy10GbExSWxXFP, etsysOidPhy10GbExLWxXFP, etsysOidPhy10GbExEWxXFP, etsysOidPhy10GbExLX4xXFP.', 'Changed MGBIC-LC04 to MGBIC-N-LC04.', 'Added the following OIDs: etsysOidPhyNoXfp, etsysOidPhyMGBICxLC04.', 'Added the etsysOidDevSNSxPCCxWBA OID.', 'Added the following OIDs: etsysOidDevSNSxTAGxLPA, etsysOidDevSNSxTAGxHPA, etsysOidDevSNSxTAGxBASE, etsysOidDev7SxNSTAGx01.', 'Added the following OIDs: etsysOidPhy7Gx6MGBICxB, etsysOidPhy7Kx2XFPx6MGBIC, etsysOidPhy7GR4280x19, etsysOidPhy7GR4270x12, etsysOidPhy7GR4202x30, etsysOidPhy7KR4290x02.', 'Changed Name of etsysOidPhy7G4082x25 to 2G4082-25.', 'Added the following OIDs: etsysOidDevI3H252x02, etsysOidPhyI3Hx12TX, etsysOidPhyI3Hx4FXxMM, etsysOidPhyI3Hx8FXxMM, etsysOidPhyI3Hx8TXx2FX.', 'Added the following OIDs: etsysOidDevC3G124x24, etsysOidDevC3G124x24P, etsysOidDevC3G124x48, etsysOidDevC3G124x48P, etsysOidDevB3G124x24, etsysOidDevB3G124x24P, etsysOidDevB3G124x48, etsysOidDevB3G124x48P.', 'Added etsysOidPhy7G4082x25 OID.', 'Added the etsysOidPhyC2G170x24 OID.', 'Added the following OIDs: etsysOidPhy7SxDSNSA7x01NPS, etsysOidPhy7SxNSTAGx01xNPS, etsysOidPhy9603805, etsysOidPhy9603806', 'Added the etsysOidDevA2H254x16 OID.', 'Added the etsysOidPhyXxM8x01 OID.', 'Added the following OIDs: etsysOidPhyGigEthIntNEMPort, etsysOidPhy7SxDSNSA7x01, etsysOidPhy7SxNSTAGx01.', 'Added the etsysOidPhyXxGT16x00 OID.', 'Added the etsysOidDevNSTAGxGE250xTX and etsysOidDevNSTAGxGE250xTX OIDs.', 'Added the etsysOidDevRBT4102 OID.', 'Added the following OIDs: etsysOidDevA2H124x24, etsysOidDevA2H124x24P, etsysOidDevA2H124x48, etsysOidDevA2H124x48P, etsysOidDevA2H124x24FX.', 'Added the respective part numbers to the description clauses for the following Mini-GBIC OIDs: etsysOidPhyMGBICxMT01, etsysOidPhyMGBICxMT09, etsysOidPhyMGBICxLC01, etsysOidPhyMGBICxLC09, etsysOidPhyMGBICx02, etsysOidPhyMGBICx08, and etsysOidPhyMGBICxLC03.', 'Added the etsysOidDevRBTSAxAA and etsysOidDevRBTSAxAB OIDs.', 'Added the etsysOidPhyC2G134x24P OID.', 'Added the etsysOidPhyX16xC, etsysOidPhyX8xC, etsysOidPhyX8Backplane, etsysOidPhyX4Backplane, etsysOidPhyXxFan, etsysOidPhyXxAC, etsysOidPhyXxCMx00, etsysOidPhyX4xCMFx160x00, etsysOidPhyX16xF640, etsysOidPhyX8xF320, etsysOidPhyXxM2x00, etsysOidPhyXxG32x00, etsysOidPhyXxT48x01, etsysOidPhyXxM2x01, etsysOidPhyXxM4x01, etsysOidPhyXxG20x01, etsysOidPhyXxG40x01, etsysOidPhyXIOModuleSlot, etsysOidPhyXFanTraySlot, etsysOidPhyXFabricModuleSlot, etsysOidPhyX16Backplane, etsysOidPhyXPowerSupplySlot, etsysOidPhyX4xC, etsysOidPhyXControlModuleSlot, etsysOidPhyXxT32x00 etsysOidPhySFPxGBIC, and etsysOidPhyXFPxGBIC OIDs.', 'Added the etsysOidPhyB2G124x24, etsysOidPhyB2G124x48, etsysOidPhyB2G124x48P, etsysOidPhyB2H124x48, etsysOidPhyB2H124x48P, etsysOidPhyB2G124x24P, etsysOidPhyB2H124x24, etsysOidPhyB2H124x24P, and etsysOidPhyB2H124x24FX OIDs.', 'Added the etsysOidPhy7C117, etsysOidPhy7C115xP, etsysOidPhy7C113, etsysOidPhy7C111, etsysOidPhyN1ModuleSlot, etsysOidDevMatrixN1, and etsysOidDevMatrixN1Gold OIDs.', 'Added the etsysOidOtherLicenseKeyId OID.', 'Added the etsysOidDevMatrixX4, etsysOidDevMatrixX8, and etsysOidDevMatrixX16 OIDs.', 'Added the etsysOidPhyN5PoEPoEPowerSupplySlot OID.', 'Added the etsysOidPhy7Gx6MGBICxA OID.', 'Added the etsysOidPhyV2H124x24FX OID.', 'Added the etsysOidDevMatrixN5PoEGold, etsysOidDevMatrixN5PoEPlatinum, etsysOidPhyNxPOE, etsysOidPhyMGBICxLC03, etsysOidPhyNxPOEx1200W, etsysOidPhyNxPOEPowerSupplySlot, etsysOidPhy7C105xP, etsysOidPhy7C205x1, etsysOidPhyN5PoEPowerSupplySlot, etsysOidPhy7C405, etsysOidPhyN5PoEFanTraySlot, and etsysOidPhyN5PoEModuleSlot OIDs.', 'Added the etsysOidPhy7G4202x72, etsysOidPhy7G4205x72, etsysOidPhy7G4282x49, etsysOidPhy7G4285x49, etsysOidPhy4G4202x72, etsysOidPhy4G4205x72, etsysOidPhy4G4282x49, and etsysOidPhy4G4285x49 OIDs.', 'Added the etsysOidDev2G4072x52 OID.', 'Added the etsysOidDevXSRx1205, etsysOidDevXSRx1220, etsysOidDevXSRx1225, etsysOidDevXSRx1230, and etsysOidDevXSRx1235 OIDs, and deprecated the etsysOidDevXSRx1100 OID.', 'Added the etsysOidPhyC2G124x24, etsysOidPhyC2G124x48, etsysOidPhyC2K122x24, etsysOidPhyC2H124x48P, and etsysOidPhyC2G124x48P OIDs, updated the description for the etsysOidPhyC2H124x48 OID, and deprecated a number of OIDs for the Matrix C2 and C5 products.', 'Added the etsysOidDevDragonIdsAppliance OID.', 'Added the etsysOidPhy7G4280x19 OID.', 'Added the etsysOidPhy4H4285x49 and etsysOidPhy7H4385x49 OIDs.', 'Added the etsysOidPhyNoXenpak OID. Updated the description clause for the etsysOidDevRBTR4xA OID, it is being used as the OID for the AP3000.', 'Added the etsysOidDevDFEPlatinumRouter and etsysOidDevDFEGoldRouter OIDs.', 'Added the etsysOidDevMatrixE7Gold, etsysOidDevMatrixN7Gold, and etsysOidDevMatrixN3Gold OIDs. Modified the description clauses for the etsysOidDevMatrixE7, etsysOidDevMatrixN7, and etsysOidDevMatrixN3 OIDs.', 'Added the etsysOidPhy7H4382x25 OID.', 'Added the etsysOidDevRBTR4xA OID.', 'Added etsysOidPhy4H4203x72, etsysOidPhy4H4283x49, etsysOidPhy4G4282x41, etsysOidPhy4G4202x60, etsysOidPhy4H4282x49, etsysOidPhy4H4202x72, and etsysOidPhy4H4284x49 OIDs.', 'Corrected descriptions for etsysOidPhyMGBICxMT01, etsysOidPhyMGBICxLC01, and etsysOidPhyMGBICxLC09.', 'Added etsysOidPhyMGBICx02 and etsysOidPhyMGBICx08 OIDs.', 'Added the etsysOidPhyRj45ConsolePort OID.', 'Added the etsysOidPhyMGBICNoConnector, etsysOidPhyN7PowerSupplySlot, etsysOidPhyN7FanTraySlot, etsysOidPhyN7ModuleSlot, etsysOidPhyN3PowerSupplySlot, etsysOidPhyN3FanTraySlot, etsysOidPhyN3ModuleSlot, etsysOidPhyE7PowerSupplySlot, etsysOidPhyE7FanTraySlot, and etsysOidPhyE7ModuleSlot OIDs.', 'Added the etsysOidDevRBTR3xA OID.', 'Added the etsysOidPhy7G4202x60 and etsysOidPhy7G4282x41 OIDs.', 'Changed the status of etsysOidPhyNIMxETHxTGRx01 to deprecated and added the etsysOidPhyNIMxETHRx01, etsysOidPhyNIMxFIBRx01, and etsysOidPhyNIMxDIRELAYx02 OIDs.', 'Added the etsysOidPhyE1FxdAcPwrSup OID.', 'Added the etsysOidPhy1Hx8FX OID.', 'Added the etsysOidDevV2H124x24, etsysOidPhyV2G121x1, etsysOidPhyV2G112x2, etsysOidPhyV2G151x1M, and etsysOidPhyV2G151x1S OIDs.', 'Added etsysOidDevC1G124x24 OID.', 'Added etsysOidDev1H582x25 and etsysOidDev1G587x09 OIDs.', 'Added etsysOidPhy7H4284x49 OID.', 'Added etsysOidPhy7H4383x49 OID.', 'Added the OIDs, etsysOidPhy 234-244, and etsysOidDevice 54-58, for a number of XSR branch and regional office routers, and associated network interface modules.', 'Added the OIDs etsysOidPhy7G4275x12 and etsysOidPhy7G4270x09.', 'Added the OIDs etsysOidDevMatrixN3 and etsysOidDevMatrixN7. Obsoleted chassis, fan tray, and power supply OIDs related to the Matrix E3 products.', 'Added the OIDs etsysOidPhy7C107, etsysOidPhy7C103, etsysOidPhy7C203x1, and etsysOidPhy7C403, for the Matrix N3 and N7 products.', 'Added the etsysOidDevMatrixE7 OID and updated the CONTACT-INFO clause.', 'Added the OIDs etsysOidPhy7G4270x10 and etsysOidPhy7H4202x72 for the Matrix E7 products.', 'Added a number of OIDs for the Matrix C1, C2, and C5 series products. etsysOidDevice 48-50 and etsysOidPhy 211-225.', 'Corrected the descriptions for a number of the WAN NIMs. etsysOidPhy 174, 178, 179, and 180.', 'Added etsysOidPhyNIMxBRIxSTx01, etsysOidPhyNIMxBRIxSTx02, etsysOidPhyNIMxBRIxUx01 and etsysOidPhyNIMxBRIxUx02.', 'Added etsysOidDevVHx2202GT.', 'Added etsysOidPhyGPIMx02.', 'Deprecated etsysOidDevVHxSMGMTxL3. Added etsysOidDevVHx2402S2, etsysOidDevVHxSMGMT2, etsysOidDevVHxRTM-L3, etsysOidPhy6C203x1, etsysOidPhy6C403, and etsysOidPhy6C103.', 'Added etsysOidIEEE8023adLagInterface.', 'Added etsysOidPhy6C207x3.', 'Added etsysOidDevXSRx1850. Changed name comment for etsysOidDevXPx1000 from XSG-1805 to XSR-1805. Deprecated etsysOidPhy7H4303x48, etsysOidPhy7G4202x12, and etsysOidPhy7G4370x08.', 'Added etsysOidPhy7G4202x30, etsysOidPhy7Gx6MGBIC, etsysOidPhy7H4382x49, etsysOidPhy7K4290x02, etsysOidPhy7H4204x48, and etsysOidPhy2H412x49R OIDs for Manhattan.', 'Added etsysOidPhyMPC8240 and etsysOidPhyMPC8245 OIDs for the E1.', 'Added etsysOidPhyER16xOS26x01 for ER16-OS26-01', 'Corrected my spelling mistakes in the following description and modified the description of the etsysOidPhyPortSlot object.', 'Made a number of syntactic corrections to the descriptions of various objects and deprecated a number of duplicate objects. etsysOidPhyPortSlot, etsysOidPhy1000BASET, etsysOidPhy10100T, and etsysOidPhy6SSRLCGigEthBkplnPort were all deprecated.', 'Added OIDs for the Frame Transfer Matrix backplanes used in the E5, E6, and E7 chassis.', 'Added OIDs for ER16-HFX31-24, ER16-HFX39-24, ER16-GTX32-04, ER16-GTX32-08, SSR-GTX32-04, SSR-GSX31-04, and SSR-GLX39-04, and made a number of changes to prior Xp OIDs.', 'Added OID for 6G302-06. Removed duplicate Enterasys address information. Stripped all of the CodeName, Requester, and Comments comments from the MIB. These will now be entered as comments into the source code repository.', 'Added OID for VH-8G02S.', 'Changed names of 1H152-51, 1G154-09, 1G276-13, 1H-2TX. Added 136 Phy OIDs for the X-Pedition products, needed for Entity MIB support. Added Device OID for XP-2400 and Phy OIDs for XP NIMs.', 'Added OIDs for ANG-3000, ANG-7000.', 'Added OIDs for ANG-1102, ANG-1105.', 'Added OID for VH-SMGMT-L3.', 'Added OIDs for ANG-2000, also 1H152-50, 1G154-09, 1G276-13, and associated option modules.', 'Added OIDs for 10 GbE port types.', 'Added OID for XP-1000.', 'Added OID for VH-8TX1MF.', 'Added OID for RBTR2-A.', 'Added IMPORT of OBJECT-IDENTITY from SNMPv2-SMI. Fixes error reported by some compilers.', 'Changed names of 5H162-50, 5H163-50.', 'Added OIDs for 5H162-50, 5H163-50.', 'Added OIDs for VH-2402-L3, VH-8G-L3. Standardized comment fields of OIDs for which a name change has been requested. These are etsysOidDevice 9, 10, 11, 18, 19, 20 and 21.', 'Addition of Matrix E5 frame, power supplies, fans, and modules. Addition of Matrix E7 frame, power supplies, fans, and modules. Deprecated the etsysOidDevVG4x3DES.', 'Many editorial changes. Made OBJECT IDENTIFIERS into OBJECT-IDENTITY macro invocations.', 'Add VG6 IP Tunnel/VPN box.', 'Add support for more 6 series blades.', 'VG4-3DES Ethernet+2 port SOHO router.', 'Add OIDs for 9E521, deprecate duplicate for 6E308.', 'Add OIDs for 6H202, 6E308.', 'Add OIDs for E7 blades.', 'Add OIDs for ELS products.', 'Add OID for Matrix E7.', 'Add requests received on March 15-16, 2000.', 'The initial version of this MIB module.',))
if mibBuilder.loadTexts: enterasysOidsMib.setLastUpdated('201101131927Z')
if mibBuilder.loadTexts: enterasysOidsMib.setOrganization('Enterasys Networks')
if mibBuilder.loadTexts: enterasysOidsMib.setContactInfo('Postal: Enterasys Networks 50 Minuteman Rd. Andover, MA 01810-1008 USA Phone: +1 978 684 1000 E-mail: support@enterasys.com WWW: http://www.enterasys.com')
if mibBuilder.loadTexts: enterasysOidsMib.setDescription("This MIB module defines a portion of the SNMP enterprise MIBs under Enterasys Networks' enterprise OID pertaining to system OIDs. This module embodies all of the definitions of OIDs for Enterasys Networks' devices.")
etsysOidDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 2, 1))
etsysOidDevEmpty = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 1))
if mibBuilder.loadTexts: etsysOidDevEmpty.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevEmpty.setDescription('Reserved.')
etsysOidDev6G306x06 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 2))
if mibBuilder.loadTexts: etsysOidDev6G306x06.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev6G306x06.setDescription('Enterasys 6 port 100BASE-X Gigabit Ethernet module with GPIM connectors.')
etsysOidDev6H302x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 3))
if mibBuilder.loadTexts: etsysOidDev6H302x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev6H302x48.setDescription('Enterasys 48 port RJ45 100BASE-TX Fast Ethernet module.')
etsysOidDev6H303x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 4))
if mibBuilder.loadTexts: etsysOidDev6H303x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev6H303x48.setDescription('Enterasys 48 port RJ21 100BASE-TX Fast Ethernet module.')
etsysOidDev6H352x25 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 5))
if mibBuilder.loadTexts: etsysOidDev6H352x25.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev6H352x25.setDescription('Enterasys 24 port RJ45 100BASE-TX Fast Ethernet module with 1 VHSIM uplink.')
etsysOidDev6H308x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 6))
if mibBuilder.loadTexts: etsysOidDev6H308x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev6H308x24.setDescription('Enterasys 24 port MT-RJ MMF 100BASE-FX Fast Ethernet module.')
etsysOidDev6E308x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 7))
if mibBuilder.loadTexts: etsysOidDev6E308x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev6E308x24.setDescription('Enterasys 24 port MT-RJ MMF 10BASE-FL Ethernet module.')
etsysOidDev6C107 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 8))
if mibBuilder.loadTexts: etsysOidDev6C107.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev6C107.setDescription('SNMP Agent for the Enterasys Matrix E7 Chassis.')
etsysOidDevEls1000x8SX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 9))
if mibBuilder.loadTexts: etsysOidDevEls1000x8SX.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevEls1000x8SX.setDescription('Enterasys 8 port SC 1000BASE-SX Gigabit Ethernet standalone.')
etsysOidDevEls100x48TX2M = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 10))
if mibBuilder.loadTexts: etsysOidDevEls100x48TX2M.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevEls100x48TX2M.setDescription('Enterasys 48 port RJ45 100BASE-TX Fast Ethernet standalone with 2 Gigabit Ethernet uplinks.')
etsysOidDevEls100x24TX2M = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 11))
if mibBuilder.loadTexts: etsysOidDevEls100x24TX2M.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevEls100x24TX2M.setDescription('Enterasys 24 port RJ45 100BASE-TX Fast Ethernet standalone with 2 expansion slots.')
etsysOidDevDepricated001 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 12))
if mibBuilder.loadTexts: etsysOidDevDepricated001.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidDevDepricated001.setDescription('Duplicate request.')
etsysOidDev6H308x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 13))
if mibBuilder.loadTexts: etsysOidDev6H308x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev6H308x48.setDescription('Enterasys 48 port MMF MT-RJ 100BASE-FX Fast Ethernet module.')
etsysOidDev6E308x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 14))
if mibBuilder.loadTexts: etsysOidDev6E308x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev6E308x48.setDescription('Enterasys 48 port MT-RJ 10BASE-FX Ethernet module.')
etsysOidDev6H202x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 15))
if mibBuilder.loadTexts: etsysOidDev6H202x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev6H202x48.setDescription('Enterasys 48 port RJ45 100BASE-TX Fast Ethernet module.')
etsysOidDev9E531x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 16))
if mibBuilder.loadTexts: etsysOidDev9E531x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev9E531x24.setDescription('Enterasys 24 port MT-RJ 10BASE-FL Ethernet module.')
etsysOidDevVG4x3DES = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 17))
if mibBuilder.loadTexts: etsysOidDevVG4x3DES.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidDevVG4x3DES.setDescription('Enterasys 1 port RJ45 100BASE-TX router with 2 WAN SPIM connectors. Small Office Home Office (SOHO) Ethernet/WAN router with VPN. ')
etsysOidDev6H002x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 18))
if mibBuilder.loadTexts: etsysOidDev6H002x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev6H002x48.setDescription('Enterasys 48 port RJ45 100BASE-TX Fast Ethernet module.')
etsysOidDev6H003x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 19))
if mibBuilder.loadTexts: etsysOidDev6H003x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev6H003x48.setDescription('Enterasys 48 port RJ21 100BASE-TX Fast Ethernet module.')
etsysOidDev6G066x06 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 20))
if mibBuilder.loadTexts: etsysOidDev6G066x06.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev6G066x06.setDescription('Enterasys 4 port 1000BASE-SX Gigabit Ethernet module with 2 GBIC Gigabit Ethernet uplinks.')
etsysOidDev6G063x06 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 21))
if mibBuilder.loadTexts: etsysOidDev6G063x06.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev6G063x06.setDescription('Enterasys 6 port RJ45 1000BASE-T Gigabit Ethernet Module.')
etsysOidDevVG6 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 22))
if mibBuilder.loadTexts: etsysOidDevVG6.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevVG6.setDescription('Enterasys mid-range VPN gateway with IP Security, L2TP, AAA, IP routing, IP-in-IP tunnels.')
etsysOidDevER16 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 23))
if mibBuilder.loadTexts: etsysOidDevER16.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevER16.setDescription('Enterasys 32 port SmartSwitch Router.')
etsysOidDev5SSRMx02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 24))
if mibBuilder.loadTexts: etsysOidDev5SSRMx02.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev5SSRMx02.setDescription('Enterasys Advanced Router Module for the Matrix E5 chassis.')
etsysOidDevVHx8TX1UM = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 25))
if mibBuilder.loadTexts: etsysOidDevVHx8TX1UM.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevVHx8TX1UM.setDescription('Enterasys 8 port RJ45 100BASE-TX standalone with 1 SMF 100BASE-FX port uplink.')
etsysOidDevVHx2402xL3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 26))
if mibBuilder.loadTexts: etsysOidDevVHx2402xL3.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevVHx2402xL3.setDescription('Enterasys 24 port RJ45 10/100 Fast Ethernet standalone L2/L3 switch with one uplink slot.')
etsysOidDevVHx8GxL3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 27))
if mibBuilder.loadTexts: etsysOidDevVHx8GxL3.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevVHx8GxL3.setDescription('Enterasys 8 port Gigabit Ethernet standalone L2/L3 switch, with 6 1000BASE-SX ports and 2 GBIC-style uplinks.')
etsysOidDev5H162x50 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 28))
if mibBuilder.loadTexts: etsysOidDev5H162x50.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev5H162x50.setDescription('Enterasys 48 port 100BASE-TX Fast Ethernet module with RJ45 connectors and one slot for an optional two port Gigabit Ethernet uplink module.')
etsysOidDev5H163x50 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 29))
if mibBuilder.loadTexts: etsysOidDev5H163x50.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev5H163x50.setDescription('Enterasys 48 port 100BASE-TX Fast Ethernet module with RJ21 connectors and one slot for an optional two port Gigabit Ethernet uplink module.')
etsysOidDevRBTR2xA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 30))
if mibBuilder.loadTexts: etsysOidDevRBTR2xA.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevRBTR2xA.setDescription('Enterasys wireless Access Point platform, provides Layer 2 switched connection between 100BASE-TX wired Ethernet and 802.11 wireless LANs. Supports two 802.11a or 802.11b radio links.')
etsysOidDevVHx8TX1MF = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 31))
if mibBuilder.loadTexts: etsysOidDevVHx8TX1MF.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevVHx8TX1MF.setDescription('Enterasys 8 port RJ45 100BASE-TX standalone with 1 MMF SC port uplink.')
etsysOidDevXPx1000 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 32))
if mibBuilder.loadTexts: etsysOidDevXPx1000.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevXPx1000.setDescription('Enterasys Branch Router with 2 100BASE-TX Ethernet ports and two slots for optional WAN modules (T1/E1, ISDN, etc.).')
etsysOidDevANGx2000 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 33))
if mibBuilder.loadTexts: etsysOidDevANGx2000.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevANGx2000.setDescription('Enterasys integrated Router/Firewall/VPN Gateway.')
etsysOidDev1H152x50 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 34))
if mibBuilder.loadTexts: etsysOidDev1H152x50.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev1H152x50.setDescription('Enterasys 48 port 100BASE-TX Fast Ethernet standalone switch with 1 slot for optional interface modules.')
etsysOidDev1G154x09 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 35))
if mibBuilder.loadTexts: etsysOidDev1G154x09.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev1G154x09.setDescription('Enterasys 6 port 1000BASE-X Gigabit Ethernet standalone switch with 3 slots for optional interface modules.')
etsysOidDev1G276x13 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 36))
if mibBuilder.loadTexts: etsysOidDev1G276x13.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev1G276x13.setDescription('Enterasys 12 port 1000BASE-X Gigabit Ethernet standalone switch with a 10 Gigabit Ethernet uplink.')
etsysOidDevVHxSMGMTxL3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 37))
if mibBuilder.loadTexts: etsysOidDevVHxSMGMTxL3.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidDevVHxSMGMTxL3.setDescription('Enterasys L2/L3 management card for Vertical Horizon products.')
etsysOidDevANGx1102 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 38))
if mibBuilder.loadTexts: etsysOidDevANGx1102.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevANGx1102.setDescription('Enterasys 2 port SOHO VPN Gateway.')
etsysOidDevANGx1105 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 39))
if mibBuilder.loadTexts: etsysOidDevANGx1105.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevANGx1105.setDescription('Enterasys 5 port SOHO VPN Gateway.')
etsysOidDevANGx3000 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 40))
if mibBuilder.loadTexts: etsysOidDevANGx3000.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevANGx3000.setDescription('Enterasys VPN Server for up to 500 concurrent connections.')
etsysOidDevANGx7000 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 41))
if mibBuilder.loadTexts: etsysOidDevANGx7000.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevANGx7000.setDescription('Enterasys VPN Server for up to 5000 concurrent connections.')
etsysOidDevXPx2400 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 42))
if mibBuilder.loadTexts: etsysOidDevXPx2400.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevXPx2400.setDescription('Enterasys router with 16 100BASE-TX ports and 2 expansion slots.')
etsysOidDevVHx8G02S = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 43))
if mibBuilder.loadTexts: etsysOidDevVHx8G02S.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevVHx8G02S.setDescription('Enterasys 8 port MMF 1000BASE-SX layer 2 switch with SC connectors.')
etsysOidDev6G302x06 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 44))
if mibBuilder.loadTexts: etsysOidDev6G302x06.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev6G302x06.setDescription('Enterasys 6 port RJ45 1000BASE-T Ethernet module.')
etsysOidDevXSRx1850 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 45))
if mibBuilder.loadTexts: etsysOidDevXSRx1850.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevXSRx1850.setDescription('Enterasys high performance security hardened branch office router / VPN device with 2 100BASE-TX Ethernet interfaces and two slots for optional WAN modules.')
etsysOidDevVHx2402S2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 46))
if mibBuilder.loadTexts: etsysOidDevVHx2402S2.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevVHx2402S2.setDescription('Enterasys 24 port RJ45 100BASE-TX stackable Fast Ethernet layer 2 switch with 2 uplink slots.')
etsysOidDevVHx2202GT = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 47))
if mibBuilder.loadTexts: etsysOidDevVHx2202GT.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevVHx2202GT.setDescription('Enterasys 22 port RJ45 1000BASE-T standalone Gigabit Ethernet layer 2 switch with 2 modular Mini-GBIC ports.')
etsysOidDevC5M200 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 48))
if mibBuilder.loadTexts: etsysOidDevC5M200.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidDevC5M200.setDescription('Enterasys Matrix C5 System Management Module.')
etsysOidDevC1H124x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 49))
if mibBuilder.loadTexts: etsysOidDevC1H124x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC1H124x48.setDescription('Enterasys Matrix C1 48 port RJ45 100BASE-TX Fast Ethernet standalone switch, with two RJ45 and two Mini-GBIC ports.')
etsysOidDevC2M200 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 50))
if mibBuilder.loadTexts: etsysOidDevC2M200.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidDevC2M200.setDescription('Enterasys Matrix C2 System Management Module.')
etsysOidDevMatrixE7 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 51))
if mibBuilder.loadTexts: etsysOidDevMatrixE7.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevMatrixE7.setDescription('Enterasys Matrix E7 single IP address management entity for the DFE Platinum switch.')
etsysOidDevMatrixN7 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 52))
if mibBuilder.loadTexts: etsysOidDevMatrixN7.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevMatrixN7.setDescription('Enterasys Matrix N7 single IP address management entity for the DFE Platinum switch.')
etsysOidDevMatrixN3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 53))
if mibBuilder.loadTexts: etsysOidDevMatrixN3.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevMatrixN3.setDescription('Enterasys Matrix N3 single IP address management entity for the DFE Platinum switch.')
etsysOidDevXSRx1100 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 54))
if mibBuilder.loadTexts: etsysOidDevXSRx1100.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidDevXSRx1100.setDescription('Enterasys fixed configuration branch office router / VPN device with 4 100BASE-T Ethernet ports and a single WAN interface.')
etsysOidDevXSRx3020 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 55))
if mibBuilder.loadTexts: etsysOidDevXSRx3020.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevXSRx3020.setDescription('Enterasys, high end, high performance, security hardened, branch office router / VPN / Firewall device with 3 1000BASE-T Ethernet ports, and two slots for optional WAN interface modules.')
etsysOidDevXSRx3150 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 56))
if mibBuilder.loadTexts: etsysOidDevXSRx3150.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevXSRx3150.setDescription('Enterasys, high performance, security hardened, 1U, regional office router / VPN / Firewall device with 3 1000BASE-T Ethernet ports, and two slots for optional WAN interface modules.')
etsysOidDevXSRx3250 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 57))
if mibBuilder.loadTexts: etsysOidDevXSRx3250.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevXSRx3250.setDescription('Enterasys, high performance, security hardened, 1.5U, regional office router / VPN / Firewall device with 3 1000BASE-T Ethernet ports, and six slots for optional WAN interface modules.')
etsysOidDevXSRx4100 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 58))
if mibBuilder.loadTexts: etsysOidDevXSRx4100.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevXSRx4100.setDescription('Enterasys, high performance, security hardened, high port density, 3U, regional office router / VPN / Firewall device with 3 1000BASE-T Ethernet ports, and fourteen slots for optional WAN interface modules.')
etsysOidDev1H582x25 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 59))
if mibBuilder.loadTexts: etsysOidDev1H582x25.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev1H582x25.setDescription('Enterasys 24 port 100BASE-TX Fast Ethernet standalone switch with RJ45 connectors and one slot for an optional interface module.')
etsysOidDev1G587x09 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 60))
if mibBuilder.loadTexts: etsysOidDev1G587x09.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev1G587x09.setDescription('Enterasys 6 port 1000BASE-X Gigabit Ethernet standalone switch with 6 modular Mini-GBIC ports and three slots for optional interface modules.')
etsysOidDevC1G124x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 61))
if mibBuilder.loadTexts: etsysOidDevC1G124x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC1G124x24.setDescription('Enterasys Matrix C1 24 port RJ45 1000BASE-T Gigabit Ethernet standalone switch, with four Mini-GBIC ports.')
etsysOidDevV2H124x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 62))
if mibBuilder.loadTexts: etsysOidDevV2H124x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevV2H124x24.setDescription('Enterasys 24 port 100BASE-TX Fast Ethernet standalone L2 switch with RJ45 connectors and two uplink slots.')
etsysOidDevRBTR3xA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 63))
if mibBuilder.loadTexts: etsysOidDevRBTR3xA.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevRBTR3xA.setDescription('Enterasys RoamAbout R3 wireless access platform, provides an L2 switched connection between 100BASE-TX wired Ethernet and 802.11 wireless LANs supporting the 802.11a, 802.11b, or 802.11g standards.')
etsysOidDevRBTR4xA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 64))
if mibBuilder.loadTexts: etsysOidDevRBTR4xA.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevRBTR4xA.setDescription('Enterasys AP3000 wireless access platform, provides an L2 switched connection between 100BASE-TX wired Ethernet and 802.11 wireless LANs supporting the 802.11b/g and 802.11a standards.')
etsysOidDevMatrixE7Gold = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 65))
if mibBuilder.loadTexts: etsysOidDevMatrixE7Gold.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevMatrixE7Gold.setDescription('Enterasys Matrix E7 single IP address management entity for the DFE Gold switch.')
etsysOidDevMatrixN7Gold = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 66))
if mibBuilder.loadTexts: etsysOidDevMatrixN7Gold.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevMatrixN7Gold.setDescription('Enterasys Matrix N7 single IP address management entity for the DFE Gold switch.')
etsysOidDevMatrixN3Gold = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 67))
if mibBuilder.loadTexts: etsysOidDevMatrixN3Gold.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevMatrixN3Gold.setDescription('Enterasys Matrix N3 single IP address management entity for the DFE Gold switch.')
etsysOidDevV2H124xPOE = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 68))
if mibBuilder.loadTexts: etsysOidDevV2H124xPOE.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevV2H124xPOE.setDescription('Enterasys 24 port 100BASE-TX Fast Ethernet standalone L2 switch with RJ45 connectors and two uplink slots. Power over Ethernet is supported on the 24 100BASE-TX ports.')
etsysOidDevDFEGoldRouter = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 69))
if mibBuilder.loadTexts: etsysOidDevDFEGoldRouter.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevDFEGoldRouter.setDescription('Enterasys Matrix DFE Gold router management entity.')
etsysOidDevDFEPlatinumRouter = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 70))
if mibBuilder.loadTexts: etsysOidDevDFEPlatinumRouter.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevDFEPlatinumRouter.setDescription('Enterasys Matrix DFE Platinum router management entity.')
etsysOidDevDragonIdsAppliance = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 71))
if mibBuilder.loadTexts: etsysOidDevDragonIdsAppliance.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevDragonIdsAppliance.setDescription('Enterasys Dragon Intrusion Detection System Appliance.')
etsysOidDevXSRx1205 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 72))
if mibBuilder.loadTexts: etsysOidDevXSRx1205.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevXSRx1205.setDescription('Enterasys fixed configuration branch office router / security gateway device with 1 100BASE-T Ethernet port for WAN connectivity, and a 4 port 100BASE-T Ethernet switch for LAN connections.')
etsysOidDevXSRx1220 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 73))
if mibBuilder.loadTexts: etsysOidDevXSRx1220.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevXSRx1220.setDescription('Enterasys fixed configuration branch office router / security gateway device with 1 ADSL Annex A,C port for WAN connectivity, and a 4 port 100BASE-T Ethernet switch for LAN connections.')
etsysOidDevXSRx1225 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 74))
if mibBuilder.loadTexts: etsysOidDevXSRx1225.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevXSRx1225.setDescription('Enterasys fixed configuration branch office router / security gateway device with 1 ADSL Annex A,C and 1 ISDN S/T port for WAN connectivity, and a 4 port 100BASE-T Ethernet switch for LAN connections.')
etsysOidDevXSRx1230 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 75))
if mibBuilder.loadTexts: etsysOidDevXSRx1230.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevXSRx1230.setDescription('Enterasys fixed configuration branch office router / security gateway device with 1 ADSL Annex B port for WAN connectivity, and a 4 port 100BASE-T Ethernet switch for LAN connections.')
etsysOidDevXSRx1235 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 76))
if mibBuilder.loadTexts: etsysOidDevXSRx1235.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevXSRx1235.setDescription('Enterasys fixed configuration branch office router / security gateway device with 1 ADSL Annex B and 1 ISDN S/T port for WAN connectivity, and a 4 port 100BASE-T Ethernet switch for LAN connections.')
etsysOidDev2G4072x52 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 77))
if mibBuilder.loadTexts: etsysOidDev2G4072x52.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev2G4072x52.setDescription('Enterasys Matrix DFE 52 port Gigabit Ethernet standalone switch with 48 1000BASE-T ports with RJ45 connectors and four 1000BASE-X ports with Mini-GBIC connectors.')
etsysOidDevMatrixN5PoEGold = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 78))
if mibBuilder.loadTexts: etsysOidDevMatrixN5PoEGold.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevMatrixN5PoEGold.setDescription('Enterasys Matrix N5 PoE single IP address management entity for the DFE Gold switch.')
etsysOidDevMatrixN5PoEPlatinum = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 79))
if mibBuilder.loadTexts: etsysOidDevMatrixN5PoEPlatinum.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevMatrixN5PoEPlatinum.setDescription('Enterasys Matrix N5 PoE single IP address management entity for the DFE Platinum switch.')
etsysOidDevMatrixX4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 80))
if mibBuilder.loadTexts: etsysOidDevMatrixX4.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevMatrixX4.setDescription('Enterasys Matrix X4 management entity.')
etsysOidDevMatrixX8 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 81))
if mibBuilder.loadTexts: etsysOidDevMatrixX8.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevMatrixX8.setDescription('Enterasys Matrix X8 management entity.')
etsysOidDevMatrixX16 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 82))
if mibBuilder.loadTexts: etsysOidDevMatrixX16.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevMatrixX16.setDescription('Enterasys Matrix X16 management entity.')
etsysOidDevMatrixN1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 83))
if mibBuilder.loadTexts: etsysOidDevMatrixN1.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevMatrixN1.setDescription('Enterasys Matrix N1 single IP address management entity for the DFE Platinum switch.')
etsysOidDevMatrixN1Gold = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 84))
if mibBuilder.loadTexts: etsysOidDevMatrixN1Gold.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevMatrixN1Gold.setDescription('Enterasys Matrix N1 single IP address management entity for the DFE Gold switch.')
etsysOidDevRBTSAxAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 85))
if mibBuilder.loadTexts: etsysOidDevRBTSAxAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevRBTSAxAA.setDescription('Enterasys wireless Ethernet adapter, US (802.11a/b/g).')
etsysOidDevRBTSAxAB = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 86))
if mibBuilder.loadTexts: etsysOidDevRBTSAxAB.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevRBTSAxAB.setDescription('Enterasys wireless Ethernet adapter, International (non US) (802.11a/b/g).')
etsysOidDevA2H124x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 87))
if mibBuilder.loadTexts: etsysOidDevA2H124x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevA2H124x24.setDescription('Enterasys SecureStack A2 24 port RJ45 100BASE-TX Fast Ethernet stackable switch, with 2 1000BASE-T ports and 2 Mini-GBIC ports.')
etsysOidDevA2H124x24P = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 88))
if mibBuilder.loadTexts: etsysOidDevA2H124x24P.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevA2H124x24P.setDescription('Enterasys SecureStack A2 24 port RJ45 100BASE-TX Fast Ethernet stackable switch, with 2 1000BASE-T ports and 2 Mini-GBIC ports, and Power Over Ethernet (POE).')
etsysOidDevA2H124x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 89))
if mibBuilder.loadTexts: etsysOidDevA2H124x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevA2H124x48.setDescription('Enterasys SecureStack A2 48 port RJ45 100BASE-TX Fast Ethernet stackable switch, with 2 1000BASE-T ports and 2 Mini-GBIC ports.')
etsysOidDevA2H124x48P = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 90))
if mibBuilder.loadTexts: etsysOidDevA2H124x48P.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevA2H124x48P.setDescription('Enterasys SecureStack A2 48 port RJ45 100BASE-TX Fast Ethernet stackable switch, with 2 1000BASE-T ports and 2 Mini-GBIC ports, and Power Over Ethernet (POE).')
etsysOidDevA2H124x24FX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 91))
if mibBuilder.loadTexts: etsysOidDevA2H124x24FX.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevA2H124x24FX.setDescription('Enterasys SecureStack A2 24 port MT-RJ 100BASE-FX Fast Ethernet stackable switch, with 2 1000BASE-T ports and 2 Mini-GBIC ports.')
etsysOidDevRBT4102 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 92))
if mibBuilder.loadTexts: etsysOidDevRBT4102.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevRBT4102.setDescription('Enterasys RoamAbout AP 4102 (RBT-4102), provides an L2 switched connection between a 100BASE-TX wired Ethernet and two 802.11 embedded wireless LANs radios, one supporting 802.11a and the second supporting 802.11b/g technology.')
etsysOidDevNSTAGxGE250xTX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 93))
if mibBuilder.loadTexts: etsysOidDevNSTAGxGE250xTX.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevNSTAGxGE250xTX.setDescription('Enterasys medium performance security appliance for controlling end system access to the network. It can apply policies to an end system based on location or system health as well as performing a RADIUS proxy to obtain the end systems access rights. Based on a configured policy, the TAG can determine the health of a system by scanning it remotely and if needed quarantine the system. It is a 1U rack mountable system.')
etsysOidDevNSTAGxGE500xTX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 94))
if mibBuilder.loadTexts: etsysOidDevNSTAGxGE500xTX.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevNSTAGxGE500xTX.setDescription('Enterasys high performance security appliance for controlling end system access to the network. It can apply policies to an end system based on location or system health as well as performing a RADIUS proxy to obtain the end systems access rights. Based on a configured policy, the TAG can determine the health of a system by scanning it remotely and if needed quarantine the system. It is a 1U rack mountable system.')
etsysOidDevA2H254x16 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 95))
if mibBuilder.loadTexts: etsysOidDevA2H254x16.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevA2H254x16.setDescription('Enterasys SecureStack A2 16 port Fast Ethernet stackable switch, with 8 100BASE-TX ports, 8 100BASE-FX ports, 2 1000BASE-T ports and 2 Mini-GBIC ports.')
etsysOidDevC3G124x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 96))
if mibBuilder.loadTexts: etsysOidDevC3G124x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC3G124x24.setDescription('Enterasys SecureStack C3 24 port Gigabit Ethernet stackable switch, with 24 RJ45 1000BASE-T ports and 4 SFP ports.')
etsysOidDevC3G124x24P = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 97))
if mibBuilder.loadTexts: etsysOidDevC3G124x24P.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC3G124x24P.setDescription('Enterasys SecureStack C3 24 port Gigabit Ethernet stackable POE switch, with 24 RJ45 1000BASE-T ports and 4 SFP ports.')
etsysOidDevC3G124x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 98))
if mibBuilder.loadTexts: etsysOidDevC3G124x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC3G124x48.setDescription('Enterasys SecureStack C3 48 port Gigabit Ethernet stackable switch, with 48 RJ45 1000BASE-T ports and 4 SFP ports.')
etsysOidDevC3G124x48P = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 99))
if mibBuilder.loadTexts: etsysOidDevC3G124x48P.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC3G124x48P.setDescription('Enterasys SecureStack C3 48 port Gigabit Ethernet stackable POE switch, with 48 RJ45 1000BASE-T ports and 4 SFP ports.')
etsysOidDevB3G124x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 100))
if mibBuilder.loadTexts: etsysOidDevB3G124x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevB3G124x24.setDescription('Enterasys SecureStack B3 24 port Gigabit Ethernet stackable switch, with 24 RJ45 1000BASE-T ports and 4 SFP ports.')
etsysOidDevB3G124x24P = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 101))
if mibBuilder.loadTexts: etsysOidDevB3G124x24P.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevB3G124x24P.setDescription('Enterasys SecureStack B3 24 port Gigabit Ethernet stackable POE switch, with 24 RJ45 1000BASE-T ports and 4 SFP ports.')
etsysOidDevB3G124x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 102))
if mibBuilder.loadTexts: etsysOidDevB3G124x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevB3G124x48.setDescription('Enterasys SecureStack B3 48 port Gigabit Ethernet stackable switch, with 48 RJ45 1000BASE-T ports and 4 SFP ports.')
etsysOidDevB3G124x48P = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 103))
if mibBuilder.loadTexts: etsysOidDevB3G124x48P.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevB3G124x48P.setDescription('Enterasys SecureStack B3 48 port Gigabit Ethernet stackable POE switch, with 48 RJ45 1000BASE-T ports and 4 SFP ports.')
etsysOidDevI3H252x02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 104))
if mibBuilder.loadTexts: etsysOidDevI3H252x02.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevI3H252x02.setDescription('Enterasys Industrial switch with two I/O Card Slots and two fixed SFPs.')
etsysOidDevSNSxTAGxLPA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 105))
if mibBuilder.loadTexts: etsysOidDevSNSxTAGxLPA.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevSNSxTAGxLPA.setDescription('Enterasys medium performance Network Access Control security appliance for controlling end system access to the network. Based on an assessment of end systems health, vulnerabilities, and compliance, it can modify the access of an end system on the network. This device is a 1U rack mountable system.')
etsysOidDevSNSxTAGxHPA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 106))
if mibBuilder.loadTexts: etsysOidDevSNSxTAGxHPA.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevSNSxTAGxHPA.setDescription('Enterasys high performance Network Access Control security appliance for controlling end system access to the network. Based on an assessment of end systems health, vulnerabilities, and compliance, it can modify the access of an end system on the network. This device is a 1U rack mountable system.')
etsysOidDevSNSxTAGxBASE = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 107))
if mibBuilder.loadTexts: etsysOidDevSNSxTAGxBASE.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevSNSxTAGxBASE.setDescription('Enterasys integrated Network Access Control security appliance for controlling end system access to the network. Based on an assessment of end systems health, vulnerabilities, and compliance, it can modify the access of an end system on the network. This device is a 1U rack mountable system.')
etsysOidDev7SxNSTAGx01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 108))
if mibBuilder.loadTexts: etsysOidDev7SxNSTAGx01.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev7SxNSTAGx01.setDescription('Enterasys Network Access Control security module for controlling end system access to the network. Based on an assessment of end systems health, vulnerabilities, and compliance, it can modify the access of an end system on the network. This device is an add-in card for the Matrix N series chassis.')
etsysOidDevSNSxPCCxWBA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 109))
if mibBuilder.loadTexts: etsysOidDevSNSxPCCxWBA.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevSNSxPCCxWBA.setDescription('Enterasys Policy Control Console Web Based security appliance for controlling end user policy configuration. It is a 1U rack mountable system.')
etsysOidDevA2H123x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 110))
if mibBuilder.loadTexts: etsysOidDevA2H123x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevA2H123x24.setDescription('Enterasys SecureStack A2 with 24 10/100 RJ-45 ports, 2 100Base-FX ports, and 2 Stack ports.')
etsysOidDevB3H124x24FX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 111))
if mibBuilder.loadTexts: etsysOidDevB3H124x24FX.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevB3H124x24FX.setDescription('Enterasys SecureStack B3 with 24 100Base-FX ports and 4 Mini-GBIC combination ports.')
etsysOidDevC3H124x24FX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 112))
if mibBuilder.loadTexts: etsysOidDevC3H124x24FX.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC3H124x24FX.setDescription('Enterasys SecureStack C3 with 24 100Base-FX ports and 4 Mini-GBIC combination ports.')
etsysOidDevC3K122x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 113))
if mibBuilder.loadTexts: etsysOidDevC3K122x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC3K122x24.setDescription('Enterasys SecureStack C3 with 24 10/100/1000 RJ-45 ports and a slot for a dual 10 Gigabit Ethernet module which supports XFPs.')
etsysOidDevC3K172x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 114))
if mibBuilder.loadTexts: etsysOidDevC3K172x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC3K172x24.setDescription('Enterasys SecureStack C3 with 24 SFP ports and a slot for a dual 10 Gigabit Ethernet module which supports XFPs.')
etsysOidDevC3Kx2XFP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 115))
if mibBuilder.loadTexts: etsysOidDevC3Kx2XFP.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC3Kx2XFP.setDescription('Enterasys SecureStack C3 Dual 10 Gigabit Ethernet module with 2 XFP slots for use in the SecureStack C3K product line.')
etsysOidDevSNSxNSSxA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 116))
if mibBuilder.loadTexts: etsysOidDevSNSxNSSxA.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevSNSxNSSxA.setDescription('Enterasys NetSight Suite appliance. The NetSight Suite is a business solution enabling the user to take full advantage of the enhanced features and functionality of the Enterasys Secure Networks architecture.')
etsysOidDevG3G124x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 117))
if mibBuilder.loadTexts: etsysOidDevG3G124x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevG3G124x24.setDescription('Enterasys G3 with 24 1000BASE-TX ports and 3 expansion slots.')
etsysOidDevG3G170x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 118))
if mibBuilder.loadTexts: etsysOidDevG3G170x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevG3G170x24.setDescription('Enterasys G3 with 24 SFP ports and 3 expansion slots.')
etsysOidDevD2G124x12 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 119))
if mibBuilder.loadTexts: etsysOidDevD2G124x12.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevD2G124x12.setDescription('Enterasys D2 with 12 1000BASE-TX ports.')
etsysOidDevD2G124x12P = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 120))
if mibBuilder.loadTexts: etsysOidDevD2G124x12P.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevD2G124x12P.setDescription('Enterasys D2 with 12 1000BASE-TX POE ports.')
etsysOidDevRBTx8500 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 121))
if mibBuilder.loadTexts: etsysOidDevRBTx8500.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevRBTx8500.setDescription('Enterasys RoamAbout switch controller which provides support for up to 128 thin access points. Interfaces include two 1 Gigabit SFP Ethernet ports.')
etsysOidDevMatrixN1NAC = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 122))
if mibBuilder.loadTexts: etsysOidDevMatrixN1NAC.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevMatrixN1NAC.setDescription('Enterasys Matrix N1 single IP address management entity for the DFE NAC switch.')
etsysOidDev7SxNSNACGx01NPS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 123))
if mibBuilder.loadTexts: etsysOidDev7SxNSNACGx01NPS.setStatus('current')
if mibBuilder.loadTexts: etsysOidDev7SxNSNACGx01NPS.setDescription('Enterasys Networks NAC Controller Engine. This is the NAC engine for the Enterasys NAC that controls access of an end system on the network based on health assessment, vulnerabilities, compliance, and more.')
etsysOidDevG3G124x24P = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 124))
if mibBuilder.loadTexts: etsysOidDevG3G124x24P.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevG3G124x24P.setDescription('Enterasys G3 with 24 1000BASE-TX ports, 3 expansion slots, and Power over Ethernet (PoE).')
etsysOidDevC3K122x24P = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 125))
if mibBuilder.loadTexts: etsysOidDevC3K122x24P.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC3K122x24P.setDescription('Enterasys SecureStack C3 with 24 10/100/1000 RJ-45 ports and a slot for a dual 10 Gigabit Ethernet module which supports XFPs, and Power over Ethernet (PoE).')
etsysOidDevNACxAx2K = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 126))
if mibBuilder.loadTexts: etsysOidDevNACxAx2K.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidDevNACxAx2K.setDescription('Enterasys NAC appliance for controlling end system access to the network. It controls network access through Enterasys Policy or VLANs based on user, device, location, time, and configuration (health). It is a 1U rack mountable system.')
etsysOidDevNACxAx3K = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 127))
if mibBuilder.loadTexts: etsysOidDevNACxAx3K.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidDevNACxAx3K.setDescription('Enterasys NAC appliance for controlling end system access to the network. It controls network access through Enterasys Policy or VLANs based on user, device, location, time, and configuration (health). It is a 1U rack mountable system.')
etsysOidDevSSAxT4068x0252 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 128))
if mibBuilder.loadTexts: etsysOidDevSSAxT4068x0252.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevSSAxT4068x0252.setDescription('Enterasys S-Series Standalone (SSA) Access device with 48 ports of 1000BASE-T Ethernet via RJ45 with PoE (802.3at) and 4 10GBASE-X Ethernet ports via SFP+.')
etsysOidDevSSAxT1068x0652 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 129))
if mibBuilder.loadTexts: etsysOidDevSSAxT1068x0652.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevSSAxT1068x0652.setDescription('Enterasys S-Series S150 Class Standalone (SSA) device with 48 ports of 1000BASE-T Ethernet via RJ45 with PoE (802.3at) and 4 10GBASE-X Ethernet ports via SFP+.')
etsysOidDevSSAxG1018x0652 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 130))
if mibBuilder.loadTexts: etsysOidDevSSAxG1018x0652.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevSSAxG1018x0652.setDescription('Enterasys S-Series S150 Class Standalone (SSA) device with 48 ports of 1000BASE-X Ethernet via SFP and 4 10GBASE-X Ethernet ports via SFP+.')
etsysOidDevS3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 131))
if mibBuilder.loadTexts: etsysOidDevS3.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevS3.setDescription('Enterasys S-Series S3 management entity.')
etsysOidDevS4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 132))
if mibBuilder.loadTexts: etsysOidDevS4.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevS4.setDescription('Enterasys S-Series S4 management entity.')
etsysOidDevS8 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 133))
if mibBuilder.loadTexts: etsysOidDevS8.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevS8.setDescription('Enterasys S-Series S8 management entity.')
etsysOidDevB5G124x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 134))
if mibBuilder.loadTexts: etsysOidDevB5G124x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevB5G124x24.setDescription('Enterasys B-Series B5 with 24 1000BASE-T ports via RJ45, 4 combination ports via SFP, and 2 x 13G stack ports.')
etsysOidDevB5G124x24P2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 135))
if mibBuilder.loadTexts: etsysOidDevB5G124x24P2.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevB5G124x24P2.setDescription('Enterasys B-Series B5 with 24 1000BASE-T ports via RJ45 with PoE+, 4 combination ports via SFP, and 2 x 13G stack ports.')
etsysOidDevB5G124x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 136))
if mibBuilder.loadTexts: etsysOidDevB5G124x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevB5G124x48.setDescription('Enterasys B-Series B5 with 48 1000BASE-T ports via RJ45, 4 combination ports via SFP, and 2 x 13G stack ports.')
etsysOidDevB5G124x48P2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 137))
if mibBuilder.loadTexts: etsysOidDevB5G124x48P2.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevB5G124x48P2.setDescription('Enterasys B-Series B5 with 48 1000BASE-T ports via RJ45 with PoE+, 4 combination ports via SFP, and 2 x 13G stack ports.')
etsysOidDevB5K125x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 138))
if mibBuilder.loadTexts: etsysOidDevB5K125x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevB5K125x24.setDescription('Enterasys B-Series B5 with 24 1000BASE-T ports via RJ45, 2 ports of 10GBASE-X Ethernet via SFP+, and 2 x 13G stack ports.')
etsysOidDevB5K125x24P2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 139))
if mibBuilder.loadTexts: etsysOidDevB5K125x24P2.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevB5K125x24P2.setDescription('Enterasys B-Series B5 with 24 1000BASE-T ports via RJ45 with PoE+, 2 ports of 10GBASE-X Ethernet via SFP+, and 2 x 13G stack ports.')
etsysOidDevB5K125x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 140))
if mibBuilder.loadTexts: etsysOidDevB5K125x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevB5K125x48.setDescription('Enterasys B-Series B5 with 48 1000BASE-T ports via RJ45 and 2 ports of 10GBASE-X Ethernet via SFP+, and 2 x 13G stack ports.')
etsysOidDevB5K125x48P2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 141))
if mibBuilder.loadTexts: etsysOidDevB5K125x48P2.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevB5K125x48P2.setDescription('Enterasys B-Series B5 with 48 1000BASE-T ports via RJ45 with PoE+ and 2 ports of 10GBASE-X Ethernet via SFP+, and 2 x 13G stack ports.')
etsysOidDevC5G124x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 142))
if mibBuilder.loadTexts: etsysOidDevC5G124x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC5G124x24.setDescription('Enterasys C-Series C5 with 24 1000BASE-T ports via RJ45, 4 combination ports via SFP, and 2 x 32G stack ports.')
etsysOidDevC5G124x24P2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 143))
if mibBuilder.loadTexts: etsysOidDevC5G124x24P2.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC5G124x24P2.setDescription('Enterasys C-Series C5 with 24 1000BASE-T ports via RJ45 with PoE+, 4 combination ports via SFP, and 2 x 32G stack ports.')
etsysOidDevC5G124x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 144))
if mibBuilder.loadTexts: etsysOidDevC5G124x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC5G124x48.setDescription('Enterasys C-Series C5 with 48 1000BASE-T ports via RJ45 and 4 combination ports via SFP, and 2 x 32G stack ports.')
etsysOidDevC5G124x48P2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 145))
if mibBuilder.loadTexts: etsysOidDevC5G124x48P2.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC5G124x48P2.setDescription('Enterasys C-Series C5 with 48 1000BASE-T ports via RJ45 with PoE+ and 4 combination ports via SFP, and 2 x 32G stack ports.')
etsysOidDevC5K125x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 146))
if mibBuilder.loadTexts: etsysOidDevC5K125x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC5K125x24.setDescription('Enterasys C-Series C5 with 24 1000BASE-T ports via RJ45, 2 ports of 10GBASE-X Ethernet via SFP+, and 2 x 32G stack ports.')
etsysOidDevC5K125x24P2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 147))
if mibBuilder.loadTexts: etsysOidDevC5K125x24P2.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC5K125x24P2.setDescription('Enterasys C-Series C5 with 24 1000BASE-T ports via RJ45 with PoE+, 2 ports of 10GBASE-X Ethernet via SFP+, and 2 x 32G stack ports.')
etsysOidDevC5K125x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 148))
if mibBuilder.loadTexts: etsysOidDevC5K125x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC5K125x48.setDescription('Enterasys C-Series C5 with 48 1000BASE-T ports via RJ45, 2 ports of 10GBASE-X Ethernet via SFP+, and 2 x 32G stack ports.')
etsysOidDevC5K125x48P2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 149))
if mibBuilder.loadTexts: etsysOidDevC5K125x48P2.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC5K125x48P2.setDescription('Enterasys C-Series C5 with 48 1000BASE-T ports via RJ45 with PoE+, 2 ports of 10GBASE-X Ethernet via SFP+, and 2 x 32G stack ports.')
etsysOidDevC5K175x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 150))
if mibBuilder.loadTexts: etsysOidDevC5K175x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevC5K175x24.setDescription('Enterasys C-Series C5 with 24 1000BASE-X ports via SFP, 2 ports of 10GBASE-X Ethernet via SFP+.')
etsysOidDevNACxAx10 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 151))
if mibBuilder.loadTexts: etsysOidDevNACxAx10.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevNACxAx10.setDescription('Enterasys NAC appliance for controlling end system access to the network. It controls network access through Enterasys Policy or VLANs based on user, device, location, time, and configuration (health). It is a 1U rack mountable system.')
etsysOidDevNACxAx20 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 152))
if mibBuilder.loadTexts: etsysOidDevNACxAx20.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevNACxAx20.setDescription('Enterasys NAC appliance for controlling end system access to the network. It controls network access through Enterasys Policy or VLANs based on user, device, location, time, and configuration (health). Supports optional on-board assessment. It is a 1U rack mountable system.')
etsysOidDevNACxV = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 153))
if mibBuilder.loadTexts: etsysOidDevNACxV.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevNACxV.setDescription('Enterasys Virtual NAC appliance for controlling end system access to the network. It controls network access through Enterasys Policy or VLANs based on user, device, location, time, and configuration (health). Supports optional on-board assessment.')
etsysOidDevA4H124x24TX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 154))
if mibBuilder.loadTexts: etsysOidDevA4H124x24TX.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevA4H124x24TX.setDescription('Enterasys SecureStack A4 24 port RJ45 100BASE-TX Fast Ethernet stackable switch, with 2 1000BASE-T ports and 2 Mini-GBIC ports.')
etsysOidDevA4H124x24FX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 155))
if mibBuilder.loadTexts: etsysOidDevA4H124x24FX.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevA4H124x24FX.setDescription('Enterasys SecureStack A4 24 port MT-RJ 100BASE-FX Fast Ethernet stackable switch, with 2 1000BASE-T ports and 2 Mini-GBIC ports.')
etsysOidDevA4H124x8F8T = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 156))
if mibBuilder.loadTexts: etsysOidDevA4H124x8F8T.setStatus('obsolete')
if mibBuilder.loadTexts: etsysOidDevA4H124x8F8T.setDescription('')
etsysOidDevA4H124x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 157))
if mibBuilder.loadTexts: etsysOidDevA4H124x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevA4H124x24.setDescription('Enterasys SecureStack A4 24 port RJ45 100BASE-TX Fast Ethernet stackable switch, with 2 1000BASE-T ports and 2 Mini-GBIC ports.')
etsysOidDevA4H124x24P = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 158))
if mibBuilder.loadTexts: etsysOidDevA4H124x24P.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevA4H124x24P.setDescription('Enterasys SecureStack A4 24 port RJ45 100BASE-TX Fast Ethernet stackable switch, with 2 1000BASE-T ports and 2 Mini-GBIC ports, and Power Over Ethernet (POE).')
etsysOidDevA4H124x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 159))
if mibBuilder.loadTexts: etsysOidDevA4H124x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevA4H124x48.setDescription('Enterasys SecureStack A4 48 port RJ45 100BASE-TX Fast Ethernet stackable switch, with 2 1000BASE-T ports and 2 Mini-GBIC ports.')
etsysOidDevA4H124x48P = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 160))
if mibBuilder.loadTexts: etsysOidDevA4H124x48P.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevA4H124x48P.setDescription('Enterasys SecureStack A4 48 port RJ45 100BASE-TX Fast Ethernet stackable switch, with 2 1000BASE-T ports and 2 Mini-GBIC ports, and Power Over Ethernet (POE).')
etsysOidDevA4H254x8F8T = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 161))
if mibBuilder.loadTexts: etsysOidDevA4H254x8F8T.setStatus('obsolete')
if mibBuilder.loadTexts: etsysOidDevA4H254x8F8T.setDescription('Enterasys SecureStack A4 8 FE copper ports, 8 FE MT-RJ ports, with 2 1000BASE-T ports and 2 Mini-GBIC ports.')
etsysOidDevK6 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 162))
if mibBuilder.loadTexts: etsysOidDevK6.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevK6.setDescription('Enterasys K-Series K6 management entity.')
etsysOidDevK10 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 163))
if mibBuilder.loadTexts: etsysOidDevK10.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevK10.setDescription('Enterasys K-Series K10 management entity.')
etsysOidDevS6 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 164))
if mibBuilder.loadTexts: etsysOidDevS6.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevS6.setDescription('Enterasys S-Series S6 management entity.')
etsysOidPhy = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 2, 2))
etsysOidPhyEmpty = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 1))
if mibBuilder.loadTexts: etsysOidPhyEmpty.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyEmpty.setDescription('Reserved.')
etsysOidPhyMGBICxMT01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 2))
if mibBuilder.loadTexts: etsysOidPhyMGBICxMT01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyMGBICxMT01.setDescription('Enterasys MGBIC-MT01, a 1000BASE-SX Mini-GBIC with an MT-RJ connector.')
etsysOidPhyMGBICxMT09 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 3))
if mibBuilder.loadTexts: etsysOidPhyMGBICxMT09.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyMGBICxMT09.setDescription('Enterasys MGBIC-MT09, a 1000BASE-LX Mini-GBIC with an MT-RJ connector.')
etsysOidPhyMGBICxLC01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 4))
if mibBuilder.loadTexts: etsysOidPhyMGBICxLC01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyMGBICxLC01.setDescription('Enterasys MGBIC-LC01, a 1000BASE-SX Mini-GBIC with an LC connector.')
etsysOidPhyMGBICxLC09 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 5))
if mibBuilder.loadTexts: etsysOidPhyMGBICxLC09.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyMGBICxLC09.setDescription('Enterasys MGBIC-LC09, a 1000BASE-LX Mini-GBIC with an LC connector.')
etsysOidPhyFrtPnlFastEthRJ45 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 6))
if mibBuilder.loadTexts: etsysOidPhyFrtPnlFastEthRJ45.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyFrtPnlFastEthRJ45.setDescription('Enterasys 100BASE-TX Fast Ethernet Front-panel fixed port with RJ45 connector.')
etsysOidPhyFrtPnlFastEthRJ21 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 7))
if mibBuilder.loadTexts: etsysOidPhyFrtPnlFastEthRJ21.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyFrtPnlFastEthRJ21.setDescription('Enterasys 100BASE-TX Fast Ethernet Front-panel fixed port with RJ21 connector.')
etsysOidPhyFrtPnlGigEthRJ45 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 8))
if mibBuilder.loadTexts: etsysOidPhyFrtPnlGigEthRJ45.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyFrtPnlGigEthRJ45.setDescription('Enterasys 1000BASE-T Gigabit Ethernet Front-panel fixed port with RJ45 connector.')
etsysOidPhyBackplaneFTM1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 9))
if mibBuilder.loadTexts: etsysOidPhyBackplaneFTM1.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyBackplaneFTM1.setDescription('Enterasys Frame Transfer Matrix 1 Backplane port.')
etsysOidPhy7H4203x72 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 10))
if mibBuilder.loadTexts: etsysOidPhy7H4203x72.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7H4203x72.setDescription('Enterasys 72 port 100BASE-TX Fast Ethernet module with RJ21 connectors.')
etsysOidPhy7H4273x52 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 11))
if mibBuilder.loadTexts: etsysOidPhy7H4273x52.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7H4273x52.setDescription('Enterasys 48 port 100BASE-TX RJ21 Fast Ethernet module, with 4 port 1000BASE-X Gigabit Ethernet via Mini-GBIC connectors.')
etsysOidPhy7H4303x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 12))
if mibBuilder.loadTexts: etsysOidPhy7H4303x48.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhy7H4303x48.setDescription('Enterasys 48 port 100BASE-TX RJ21 Fast Ethernet module with Frame Transfer Matrix relay capability.')
etsysOidPhy7G4270x12 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 13))
if mibBuilder.loadTexts: etsysOidPhy7G4270x12.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7G4270x12.setDescription('Enterasys 12 port 1000BASE-X Gigabit Ethernet module with Mini-GBIC connectors.')
etsysOidPhy7G4202x12 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 14))
if mibBuilder.loadTexts: etsysOidPhy7G4202x12.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhy7G4202x12.setDescription('Enterasys 12 port 1000BASE-T RJ45 Gigabit Ethernet module.')
etsysOidPhy7G4370x08 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 15))
if mibBuilder.loadTexts: etsysOidPhy7G4370x08.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhy7G4370x08.setDescription('Enterasys 8 port 1000BASE-X Gigabit Ethernet module with Mini-GBIC connectors, and Frame Transfer Matrix relay capability.')
etsysOidPhy7K420Xx01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 16))
if mibBuilder.loadTexts: etsysOidPhy7K420Xx01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7K420Xx01.setDescription('Enterasys 1 port 10 Gigabit Ethernet module.')
etsysOidPhy6C207x1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 17))
if mibBuilder.loadTexts: etsysOidPhy6C207x1.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy6C207x1.setDescription('Enterasys AC power supply for the Matrix E7 chassis.')
etsysOidPhy6C207x2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 18))
if mibBuilder.loadTexts: etsysOidPhy6C207x2.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy6C207x2.setDescription('Enterasys DC power supply for the Matrix E7 chassis.')
etsysOidPhy6C407 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 19))
if mibBuilder.loadTexts: etsysOidPhy6C407.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy6C407.setDescription('Enterasys fan tray for the Matrix E7 chassis.')
etsysOidPhy5C205x3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 20))
if mibBuilder.loadTexts: etsysOidPhy5C205x3.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy5C205x3.setDescription('Enterasys AC power supply for the Matrix E5 chassis.')
etsysOidPhy5C205x2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 21))
if mibBuilder.loadTexts: etsysOidPhy5C205x2.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy5C205x2.setDescription('Enterasys DC power supply for the Matrix E5 chassis.')
etsysOidPhy5C405 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 22))
if mibBuilder.loadTexts: etsysOidPhy5C405.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy5C405.setDescription('Enterasys fan tray for the Matrix E5 chassis.')
etsysOidPhy6C107 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 23))
if mibBuilder.loadTexts: etsysOidPhy6C107.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy6C107.setDescription('Enterasys 7 slot modular chassis frame for the Matrix E7.')
etsysOidPhy5C105 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 24))
if mibBuilder.loadTexts: etsysOidPhy5C105.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy5C105.setDescription('Enterasys 5 slot modular chassis frame for the Matrix E5.')
etsysOidPhy10GbExSR = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 25))
if mibBuilder.loadTexts: etsysOidPhy10GbExSR.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExSR.setDescription('Enterasys 10GBASE-SR, XENPAK 10-Gigabit Ethernet LAN Interface with 850 nanometer serial port for 10-Gigabit Ethernet over multimode fiber (MMF) via an SC connector.')
etsysOidPhy10GbExLR = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 26))
if mibBuilder.loadTexts: etsysOidPhy10GbExLR.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExLR.setDescription('Enterasys 10GBASE-LR, XENPAK 10-Gigabit Ethernet LAN Interface with 1310 nanometer serial port for 10-Gigabit Ethernet over single-mode fiber (SMF) via an SC connector.')
etsysOidPhy10GbExER = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 27))
if mibBuilder.loadTexts: etsysOidPhy10GbExER.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExER.setDescription('Enterasys 10GBASE-ER, XENPAK 10-Gigabit Ethernet LAN Interface with 1550 nanometer serial port for 10-Gigabit Ethernet over single-mode fiber (SMF) via an SC connector.')
etsysOidPhy10GbExSW = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 28))
if mibBuilder.loadTexts: etsysOidPhy10GbExSW.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExSW.setDescription('Enterasys 10GBASE-SW, XENPAK 10-Gigabit Ethernet WAN Interface with 850 nanometer serial port for 10-Gigabit Ethernet over multimode fiber (MMF) via an SC connector.')
etsysOidPhy10GbExLW = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 29))
if mibBuilder.loadTexts: etsysOidPhy10GbExLW.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExLW.setDescription('Enterasys 10GBASE-LW, XENPAK 10-Gigabit Ethernet WAN Interface with 1310 nanometer serial port for 10-Gigabit Ethernet over single-mode fiber (SMF) via an SC connector.')
etsysOidPhy10GbExEW = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 30))
if mibBuilder.loadTexts: etsysOidPhy10GbExEW.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExEW.setDescription('Enterasys 10GBASE-EW, XENPAK 10-Gigabit Ethernet WAN Interface with 1550 nanometer serial port for 10-Gigabit Ethernet over single-mode fiber (SMF) via an SC connector.')
etsysOidPhy10GbExLX4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 31))
if mibBuilder.loadTexts: etsysOidPhy10GbExLX4.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExLX4.setDescription('Enterasys 10GBASE-LX4, XENPAK 10-Gigabit Ethernet LAN Interface with 4 channel WWDM 1310 nanometer serial port for 10-Gigabit Ethernet over multimode fiber (MMF) and single-mode fiber (SMF) via an SC connector.')
etsysOidPhy1Hx16TX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 32))
if mibBuilder.loadTexts: etsysOidPhy1Hx16TX.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy1Hx16TX.setDescription('Enterasys 16 port 100BASE-TX option module.')
etsysOidPhy1Gx2GBIC = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 33))
if mibBuilder.loadTexts: etsysOidPhy1Gx2GBIC.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy1Gx2GBIC.setDescription('Enterasys 2 port GBIC option module.')
etsysOidPhy1Gx2MGBIC = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 34))
if mibBuilder.loadTexts: etsysOidPhy1Gx2MGBIC.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy1Gx2MGBIC.setDescription('Enterasys 2 port Mini-GBIC option module.')
etsysOidPhy1Hx2TX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 35))
if mibBuilder.loadTexts: etsysOidPhy1Hx2TX.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy1Hx2TX.setDescription('Enterasys 2 port 1000BASE-T option module.')
etsysOidPhyZPIMxZ1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 36))
if mibBuilder.loadTexts: etsysOidPhyZPIMxZ1.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyZPIMxZ1.setDescription('Enterasys single port 850nm CWDM 10GbE uplink module.')
etsysOidPhyER16xCS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 37))
if mibBuilder.loadTexts: etsysOidPhyER16xCS.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xCS.setDescription('Enterasys 16 slot modular chassis for the X-Pedition ER16.')
etsysOidPhyXPx16 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 38))
if mibBuilder.loadTexts: etsysOidPhyXPx16.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx16.setDescription('Enterasys 16 slot modular chassis for the X-Pedition 8600.')
etsysOidPhyXPx8 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 39))
if mibBuilder.loadTexts: etsysOidPhyXPx8.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx8.setDescription('Enterasys 8 slot modular chassis for the X-Pedition 8000.')
etsysOidPhyXPx2xB128 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 40))
if mibBuilder.loadTexts: etsysOidPhyXPx2xB128.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xB128.setDescription('Enterasys 5 slot chassis (3 fixed with 2 expansion) for X-Pedition 2000 series.')
etsysOidPhyXPx2xGSX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 41))
if mibBuilder.loadTexts: etsysOidPhyXPx2xGSX.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xGSX.setDescription('Enterasys 5 slot fixed chassis for the X-Pedition 2000 series.')
etsysOidPhyER16x04 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 42))
if mibBuilder.loadTexts: etsysOidPhyER16x04.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16x04.setDescription('Enterasys 4 port 1000BASE GBIC (T-Series) routing module for the X-Pedition ER16.')
etsysOidPhyER16x08 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 43))
if mibBuilder.loadTexts: etsysOidPhyER16x08.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16x08.setDescription('Enterasys 8 port 1000BASE GBIC (T-Series) routing module for the X-Pedition ER16.')
etsysOidPhyER16xSXx08 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 44))
if mibBuilder.loadTexts: etsysOidPhyER16xSXx08.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xSXx08.setDescription('Enterasys 8-port 1000BASE-SX (T-Series) routing module for the X-Pedition ER16.')
etsysOidPhyER16xTXx24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 45))
if mibBuilder.loadTexts: etsysOidPhyER16xTXx24.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xTXx24.setDescription('Enterasys 24 port 10/100BASE-TX (T-Series) routing module for the X-Pedition ER16.')
etsysOidPhyER16xTXx32 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 46))
if mibBuilder.loadTexts: etsysOidPhyER16xTXx32.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xTXx32.setDescription('Enterasys 32 port 10/100BASE-TX module (T-Series) for the X-Pedition ER16.')
etsysOidPhyER16xAC = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 47))
if mibBuilder.loadTexts: etsysOidPhyER16xAC.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xAC.setDescription('Enterasys AC power supply for the X-Pedition ER16.')
etsysOidPhyER16xFN = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 48))
if mibBuilder.loadTexts: etsysOidPhyER16xFN.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xFN.setDescription('Enterasys Fan Tray for the X-Pedition ER16.')
etsysOidPhyER16xCK = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 49))
if mibBuilder.loadTexts: etsysOidPhyER16xCK.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xCK.setDescription('Enterasys Clock card module for the X-Pedition ER16.')
etsysOidPhyER16xSF = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 50))
if mibBuilder.loadTexts: etsysOidPhyER16xSF.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xSF.setDescription('Enterasys switching fabric module for the X-Pedition ER16.')
etsysOidPhyER16xCM3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 51))
if mibBuilder.loadTexts: etsysOidPhyER16xCM3.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xCM3.setDescription('Enterasys CM3 control module (291 MHz) for the X-Pedition ER16.')
etsysOidPhyER16xCM4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 52))
if mibBuilder.loadTexts: etsysOidPhyER16xCM4.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xCM4.setDescription('Enterasys CM4 control module (380 MHz) for the X-Pedition ER16.')
etsysOidPhySSRxPSx16 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 53))
if mibBuilder.loadTexts: etsysOidPhySSRxPSx16.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxPSx16.setDescription('Enterasys AC power supply for the X-Pedition 8600.')
etsysOidPhySSRxPSx16xDC = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 54))
if mibBuilder.loadTexts: etsysOidPhySSRxPSx16xDC.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxPSx16xDC.setDescription('Enterasys DC power supply for the X-Pedition 8600.')
etsysOidPhySSRxSFx16 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 55))
if mibBuilder.loadTexts: etsysOidPhySSRxSFx16.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxSFx16.setDescription('Enterasys switch fabric module for the X-Pedition 8600.')
etsysOidPhySSRxFANx16 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 56))
if mibBuilder.loadTexts: etsysOidPhySSRxFANx16.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxFANx16.setDescription('Enterasys fan tray module for the X-Pedition 8600.')
etsysOidPhySSRxPSx8 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 57))
if mibBuilder.loadTexts: etsysOidPhySSRxPSx8.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxPSx8.setDescription('Enterasys AC power supply for the X-Pedition 8000.')
etsysOidPhySSRxPSx8xDC = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 58))
if mibBuilder.loadTexts: etsysOidPhySSRxPSx8xDC.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxPSx8xDC.setDescription('Enterasys DC power supply for the X-Pedition 8000.')
etsysOidPhySSRxFANx8 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 59))
if mibBuilder.loadTexts: etsysOidPhySSRxFANx8.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxFANx8.setDescription('Enterasys fan tray module for the X-Pedition 8000.')
etsysOidPhyXPxPCMCIA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 60))
if mibBuilder.loadTexts: etsysOidPhyXPxPCMCIA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPxPCMCIA.setDescription('Enterasys 8 MB PCMCIA Flash memory card for the X-Pedition 8000 series and ER16 control modules.')
etsysOidPhyXPxPCMCIAx16LN = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 61))
if mibBuilder.loadTexts: etsysOidPhyXPxPCMCIAx16LN.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPxPCMCIAx16LN.setDescription('Enterasys 16 MB PCMCIA Flash memory card for the X-Pedition 8000 series and ER16 control modules.')
etsysOidPhyXPxPCMCIAx16AT = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 62))
if mibBuilder.loadTexts: etsysOidPhyXPxPCMCIAx16AT.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPxPCMCIAx16AT.setDescription('Enterasys 16 MB ATA PCMCIA Flash memory card for the X-Pedition 8000 series and ER16 control modules.')
etsysOidPhyXPxPCMCIAx32AT = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 63))
if mibBuilder.loadTexts: etsysOidPhyXPxPCMCIAx32AT.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPxPCMCIAx32AT.setDescription('Enterasys 32 MB ATA PCMCIA Flash memory card for the X-Pedition 8000 series and ER16 control modules.')
etsysOidPhySSRxCM2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 64))
if mibBuilder.loadTexts: etsysOidPhySSRxCM2.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxCM2.setDescription('Enterasys CM2 control module (198 MHz CPU) for the X-Pedition 8000 series.')
etsysOidPhySSRxCM3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 65))
if mibBuilder.loadTexts: etsysOidPhySSRxCM3.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxCM3.setDescription('Enterasys CM3 control module (291 MHz CPU) for the X-Pedition 8000 series.')
etsysOidPhySSRxCM4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 66))
if mibBuilder.loadTexts: etsysOidPhySSRxCM4.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxCM4.setDescription('Enterasys CM4 control module (375/380 MHz CPU) for the X-Pedition 8000 series.')
etsysOidPhy10100T = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 67))
if mibBuilder.loadTexts: etsysOidPhy10100T.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhy10100T.setDescription('Enterasys 10/100BASE copper port with RJ45 connector. Use etsysOidPhyFrtPnlFastEthRJ45 instead.')
etsysOidPhySSRxARE = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 68))
if mibBuilder.loadTexts: etsysOidPhySSRxARE.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxARE.setDescription('Enterasys Advanced Routing Engine (supports AppleTalk) for the X-Pedition 8000 series.')
etsysOidPhySSRxATM29x02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 69))
if mibBuilder.loadTexts: etsysOidPhySSRxATM29x02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxATM29x02.setDescription('Enterasys 2 port ATM OC-3c (T-Series) routing module for the X-Pedition 8000 series.')
etsysOidPhySSRxGTX32x02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 70))
if mibBuilder.loadTexts: etsysOidPhySSRxGTX32x02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxGTX32x02.setDescription('Enterasys 2 port 1000BASE-T (T-Series) routing module (Cat 5 RJ45) for the X-Pedition 8000 series.')
etsysOidPhySSRxGSX11x02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 71))
if mibBuilder.loadTexts: etsysOidPhySSRxGSX11x02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxGSX11x02.setDescription('Enterasys 2 port 1000BASE-SX routing module with SC connectors (for MMF only) with 4 MB of RAM for the X-Pedition 8000 series.')
etsysOidPhySSRxGSX21x02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 72))
if mibBuilder.loadTexts: etsysOidPhySSRxGSX21x02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxGSX21x02.setDescription('Enterasys 2 port 1000BASE-SX routing module with SC connectors (for MMF only) with 16 MB of RAM for the X-Pedition 8000 series.')
etsysOidPhySSRxGSX21x02xAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 73))
if mibBuilder.loadTexts: etsysOidPhySSRxGSX21x02xAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxGSX21x02xAA.setDescription('Enterasys 2 port 1000BASE-SX (AA Series) routing module with SC connectors (for MMF only) for the X-Pedition 8000 series.')
etsysOidPhySSRxGSX31x02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 74))
if mibBuilder.loadTexts: etsysOidPhySSRxGSX31x02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxGSX31x02.setDescription('Enterasys 2 port 1000BASE-SX (T-Series) routing module with SC connectors (for MMF only) for the X-Pedition 8000 series.')
etsysOidPhySSRxGLX19x02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 75))
if mibBuilder.loadTexts: etsysOidPhySSRxGLX19x02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxGLX19x02.setDescription('Enterasys 2 port 1000BASE-LX routing module with SC connectors (for MMF or SMF) with 4 MB of RAM for the X-Pedition 8000 series.')
etsysOidPhySSRxGLX29x02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 76))
if mibBuilder.loadTexts: etsysOidPhySSRxGLX29x02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxGLX29x02.setDescription('Enterasys 2 port 1000BASE-LX routing module with SC connectors (for MMF or SMF) with 16 MB of RAM for the X-Pedition 8000 series.')
etsysOidPhySSRxGLX29x02xAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 77))
if mibBuilder.loadTexts: etsysOidPhySSRxGLX29x02xAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxGLX29x02xAA.setDescription('Enterasys 2 port 1000BASE-LX (AA-Series) routing module with SC connectors (for MMF or SMF) with 16 MB of RAM for X-Pedition 8000 series.')
etsysOidPhySSRxGLX39x02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 78))
if mibBuilder.loadTexts: etsysOidPhySSRxGLX39x02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxGLX39x02.setDescription('Enterasys 2 port 1000BASE-LX (T-Series) routing module with SC connectors (for MMF or SMF) for the X-Pedition 8000 series.')
etsysOidPhySSRxGLH39x02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 79))
if mibBuilder.loadTexts: etsysOidPhySSRxGLH39x02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxGLH39x02.setDescription('Enterasys 2 port 1000BASE-LX (T-Series) long haul routing module with SC connectors (for MMF/SMF) for the X-Pedition 8000 series. These ports have a 70 km range.')
etsysOidPhySSRxGLX70x01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 80))
if mibBuilder.loadTexts: etsysOidPhySSRxGLX70x01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxGLX70x01.setDescription('Enterasys 1 port 1000BASE-LX long haul routing module with SC connector (for SMF) with 16 MB of RAM for the X-Pedition 8000 series. This port has a 70 km range.')
etsysOidPhySSRxGLX70x01xAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 81))
if mibBuilder.loadTexts: etsysOidPhySSRxGLX70x01xAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxGLX70x01xAA.setDescription('Enterasys 1 port 1000BASE-LX (AA-Series) routing module with SC connector (for SMF) with 16 MB of RAM for the X-Pedition 8000 series. This port has a 70 km range.')
etsysOidPhySSRxHTX12x08 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 82))
if mibBuilder.loadTexts: etsysOidPhySSRxHTX12x08.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxHTX12x08.setDescription('Enterasys 8 port 10/100BASE-TX routing module with RJ45 connectors (for Cat 5) with 4 MB of RAM for the X-Pedition 8000 series.')
etsysOidPhySSRxHTX12x08xAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 83))
if mibBuilder.loadTexts: etsysOidPhySSRxHTX12x08xAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxHTX12x08xAA.setDescription('Enterasys 8 port 10/100BASE-TX (AA-Series) routing module with RJ45 connectors (for Cat 5) with 4 MB of RAM for the X-Pedition 8000 series.')
etsysOidPhySSRxHTX22x08 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 84))
if mibBuilder.loadTexts: etsysOidPhySSRxHTX22x08.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxHTX22x08.setDescription('Enterasys 8 port 10/100BASE-TX routing module with RJ45 connectors (for Cat 5) and 16 MB of RAM for the X-Pedition 8000 series.')
etsysOidPhySSRxHTX22x08xAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 85))
if mibBuilder.loadTexts: etsysOidPhySSRxHTX22x08xAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxHTX22x08xAA.setDescription('Enterasys 8 port 10/100BASE-TX (AA-Series) routing module with RJ45 connectors (for Cat 5) for the X-Pedition 8000 series.')
etsysOidPhySSRxHTX32x16 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 86))
if mibBuilder.loadTexts: etsysOidPhySSRxHTX32x16.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxHTX32x16.setDescription('Enterasys 16 port 10/100BASE-TX (T Series) with RJ45 connectors (for Cat 5) routing module for the X-Pedition 8000 series.')
etsysOidPhySSRxHFX11x08 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 87))
if mibBuilder.loadTexts: etsysOidPhySSRxHFX11x08.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxHFX11x08.setDescription('Enterasys 8 port 100BASE-FX routing module with SC connectors (for MMF) and 4 MB of RAM for the X-Pedition 8000 series.')
etsysOidPhySSRxHFX21x08 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 88))
if mibBuilder.loadTexts: etsysOidPhySSRxHFX21x08.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxHFX21x08.setDescription('Enterasys 8 port 100BASE-FX routing module with SC connectors (for MMF) and 16 MB of RAM for the X-Pedition 8000 series.')
etsysOidPhySSRxHFX21x08xAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 89))
if mibBuilder.loadTexts: etsysOidPhySSRxHFX21x08xAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxHFX21x08xAA.setDescription('Enterasys 8 port 100BASE-FX (AA-Series) routing module with SC connectors (for MMF) and 16 MB of RAM for the X-Pedition 8000 series.')
etsysOidPhySSRxHFX29x08 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 90))
if mibBuilder.loadTexts: etsysOidPhySSRxHFX29x08.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxHFX29x08.setDescription('Enterasys 8 port 100BASE-FX routing module with SC connectors (for SMF) and 16 MB of RAM for the X-Pedition 8000 series.')
etsysOidPhySSRxHFX29x08xAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 91))
if mibBuilder.loadTexts: etsysOidPhySSRxHFX29x08xAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxHFX29x08xAA.setDescription('Enterasys 8 port 100BASE-FX (AA-Series) routing module with SC connectors (for SMF) and 16 MB of RAM for the X-Pedition 8000 series.')
etsysOidPhySSRxFDDIx02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 92))
if mibBuilder.loadTexts: etsysOidPhySSRxFDDIx02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxFDDIx02.setDescription('Enterasys 2 port FDDI routing module for the X-Pedition 8000 series.')
etsysOidPhySSRxHSSIx02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 93))
if mibBuilder.loadTexts: etsysOidPhySSRxHSSIx02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxHSSIx02.setDescription('Enterasys 2 port HSSI routing module for the X-Pedition 8000 series.')
etsysOidPhySSRxHSSIx02xAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 94))
if mibBuilder.loadTexts: etsysOidPhySSRxHSSIx02xAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxHSSIx02xAA.setDescription('Enterasys 2 port HSSI (AA-Series) routing module for the X-Pedition 8000 series.')
etsysOidPhySSRxSERCx04 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 95))
if mibBuilder.loadTexts: etsysOidPhySSRxSERCx04.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxSERCx04.setDescription('Enterasys 4 port Serial routing module with compression for the X-Pedition 8000 series.')
etsysOidPhySSRxSERCx04xAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 96))
if mibBuilder.loadTexts: etsysOidPhySSRxSERCx04xAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxSERCx04xAA.setDescription('Enterasys 4 port Serial (AA-Series) routing module for the X-Pedition 8000 series. This module supports compression.')
etsysOidPhySSRxSERCEx04 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 97))
if mibBuilder.loadTexts: etsysOidPhySSRxSERCEx04.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxSERCEx04.setDescription('Enterasys 4 port Serial routing module for the X-Pedition 8000 series. This module supports compression and encryption.')
etsysOidPhySSRxSERCEx04xAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 98))
if mibBuilder.loadTexts: etsysOidPhySSRxSERCEx04xAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxSERCEx04xAA.setDescription('Enterasys 4 port Serial (AA-Series) routing module for the X-Pedition 8000 series. This module supports compression and encryption.')
etsysOidPhySSRxPOS21x04 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 99))
if mibBuilder.loadTexts: etsysOidPhySSRxPOS21x04.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxPOS21x04.setDescription('Enterasys 4 port OC-3c/STM-1 Packet over SONET/SDH (T-Series) routing module with MT-RJ connectors (for MMF) for the X-Pedition 8000 series.')
etsysOidPhySSRxPOS29x04 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 100))
if mibBuilder.loadTexts: etsysOidPhySSRxPOS29x04.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxPOS29x04.setDescription('Enterasys 4 port OC-3c/STM-1 Packet over SONET/SDH (T-Series) routing module with MT-RJ connectors (for SMF) for the X-Pedition 8000 series.')
etsysOidPhySSRxPOS31x02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 101))
if mibBuilder.loadTexts: etsysOidPhySSRxPOS31x02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxPOS31x02.setDescription('Enterasys 2 port OC-12c/STM-4 Packet over SONET/SDH (T-Series) routing module with SC connectors (for MMF) for the X-Pedition 8000 series.')
etsysOidPhySSRxPOS39x02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 102))
if mibBuilder.loadTexts: etsysOidPhySSRxPOS39x02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxPOS39x02.setDescription('Enterasys 2 port OC-12c/STM-4 Packet over SONET/SDH (T-Series) routing module with SC connectors (form SMF) for the X-Pedition 8000 series.')
etsysOidPhyXP2IntCM = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 103))
if mibBuilder.loadTexts: etsysOidPhyXP2IntCM.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXP2IntCM.setDescription('Enterasys integrated control module in X-Pedition 2000 series.')
etsysOidPhyXP2IntPs = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 104))
if mibBuilder.loadTexts: etsysOidPhyXP2IntPs.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXP2IntPs.setDescription('Enterasys integrated power supply in X-Pedition 2000 series.')
etsysOidPhyXP2IntTX08 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 105))
if mibBuilder.loadTexts: etsysOidPhyXP2IntTX08.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXP2IntTX08.setDescription('Enterasys integrated 8 port 10/100BASE-TX routing module with RJ45 connectors (for Cat 5) in X-Pedition 2000 series.')
etsysOidPhyXPx2xTX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 106))
if mibBuilder.loadTexts: etsysOidPhyXPx2xTX.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xTX.setDescription('Enterasys 8 port 10/100BASE-TX routing module with RJ45 connectors (for Cat 5) for the X-Pedition 2000 series.')
etsysOidPhyXPx2xTXxAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 107))
if mibBuilder.loadTexts: etsysOidPhyXPx2xTXxAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xTXxAA.setDescription('Enterasys 8 port 10/100BASE-TX (AA-Series) routing module with RJ45 connectors (for Cat 5) for the X-Pedition 2000 series.')
etsysOidPhyXPx2xLX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 108))
if mibBuilder.loadTexts: etsysOidPhyXPx2xLX.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xLX.setDescription('Enterasys 2 port 1000BASE-LX routing module with SC connectors (for SMF) for the X-Pedition 2000 series.')
etsysOidPhyXPx2xLXxAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 109))
if mibBuilder.loadTexts: etsysOidPhyXPx2xLXxAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xLXxAA.setDescription('Enterasys 2 port 1000BASE-LX (AA-Series) routing module with SC connectors (for SMF) for the X-Pedition 2000 series.')
etsysOidPhyXPx2xLX70 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 110))
if mibBuilder.loadTexts: etsysOidPhyXPx2xLX70.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xLX70.setDescription('Enterasys 1 port 1000BASE-LX long haul routing module with SC connector (for SMF) for the X-Pedition 2000 series. This module has a 70 km range.')
etsysOidPhyXPx2xLX70xAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 111))
if mibBuilder.loadTexts: etsysOidPhyXPx2xLX70xAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xLX70xAA.setDescription('Enterasys 1 port 1000BASE-LX long haul (AA-Series) routing module with SC connectors (for SMF) for the X-Pedition 2000 series. This module has a 70 km range.')
etsysOidPhyXPx2xSX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 112))
if mibBuilder.loadTexts: etsysOidPhyXPx2xSX.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xSX.setDescription('Enterasys 2 port 1000BASE-SX routing module with SC connectors (for MMF) for the X-Pedition 2000 series.')
etsysOidPhyXPx2xSXxAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 113))
if mibBuilder.loadTexts: etsysOidPhyXPx2xSXxAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xSXxAA.setDescription('Enterasys 2 port 1000BASE-SX (AA-Series) routing module with SC connectors (for MMF) for the X-Pedition 2000 series.')
etsysOidPhyXPx2xFX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 114))
if mibBuilder.loadTexts: etsysOidPhyXPx2xFX.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xFX.setDescription('Enterasys 8 port 100BASE-FX routing module with MT-RJ connectors for the X-Pedition 2000 series.')
etsysOidPhyXPx2xFXxAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 115))
if mibBuilder.loadTexts: etsysOidPhyXPx2xFXxAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xFXxAA.setDescription('Enterasys 8 port 100BASE-FX (AA-Series) routing module with MT-RJ connectors for the X-Pedition 2000 series.')
etsysOidPhyXPx2xHSSIxAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 116))
if mibBuilder.loadTexts: etsysOidPhyXPx2xHSSIxAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xHSSIxAA.setDescription('Enterasys 2 port HSSI routing module for the X-Pedition 2000 series.')
etsysOidPhyXPx2xSER = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 117))
if mibBuilder.loadTexts: etsysOidPhyXPx2xSER.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xSER.setDescription('Enterasys 2 port Serial routing module for the X-Pedition 2000 series.')
etsysOidPhyXPx2xSERxAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 118))
if mibBuilder.loadTexts: etsysOidPhyXPx2xSERxAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xSERxAA.setDescription('Enterasys 2 port Serial (AA-Series) routing module for X-Pedition 2000 series.')
etsysOidPhyXPx2xSERC = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 119))
if mibBuilder.loadTexts: etsysOidPhyXPx2xSERC.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xSERC.setDescription('Enterasys 4 port Serial routing module for the X-Pedition 2000 series. This module support compression.')
etsysOidPhyXPx2xSERCxAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 120))
if mibBuilder.loadTexts: etsysOidPhyXPx2xSERCxAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xSERCxAA.setDescription('Enterasys 4 port Serial (AA-Series) routing module for X-Pedition 2000 series. This module supports compression.')
etsysOidPhyXPx2xSERCE = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 121))
if mibBuilder.loadTexts: etsysOidPhyXPx2xSERCE.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xSERCE.setDescription('Enterasys 4 port Serial routing module for the X-Pedition 2000 series. This module supports compression and encryption.')
etsysOidPhyXPx2xSERCExAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 122))
if mibBuilder.loadTexts: etsysOidPhyXPx2xSERCExAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xSERCExAA.setDescription('Enterasys 4 port Serial (AA-Series) routing module for X-Pedition 2000 series. This module supports compression and encryption.')
etsysOidPhyXPxAPHYx21 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 123))
if mibBuilder.loadTexts: etsysOidPhyXPxAPHYx21.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPxAPHYx21.setDescription('Enterasys field replaceable OC-3c Multimode Fiber physical module for the X-Pedition ATM routing module.')
etsysOidPhyXPxAPHYx22 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 124))
if mibBuilder.loadTexts: etsysOidPhyXPxAPHYx22.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPxAPHYx22.setDescription('Enterasys field replaceable OC-3c UTP physical module for X-Pedition ATM routing module.')
etsysOidPhyXPxAPHYx29IR = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 125))
if mibBuilder.loadTexts: etsysOidPhyXPxAPHYx29IR.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPxAPHYx29IR.setDescription('Enterasys field replaceable OC-3c SMF-IR physical module for X-Pedition ATM routing module.')
etsysOidPhyXPxAPHYx67 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 126))
if mibBuilder.loadTexts: etsysOidPhyXPxAPHYx67.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPxAPHYx67.setDescription('Enterasys field replaceable DS-3/T3 coax physical module for X-Pedition ATM routing module.')
etsysOidPhyXPxAPHYx77 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 127))
if mibBuilder.loadTexts: etsysOidPhyXPxAPHYx77.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPxAPHYx77.setDescription('Enterasys field replaceable E-3 coax physical module for the X-Pedition ATM routing module.')
etsysOidPhyXPxAPHYx82 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 128))
if mibBuilder.loadTexts: etsysOidPhyXPxAPHYx82.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPxAPHYx82.setDescription('Enterasys field replaceable T-1 UTP Multimode Fiber physical module for the X-Pedition ATM routing module.')
etsysOidPhyXPxAPHYx92 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 129))
if mibBuilder.loadTexts: etsysOidPhyXPxAPHYx92.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPxAPHYx92.setDescription('Enterasys field replaceable E-1 UTP Multimode Fiber physical module for the X-Pedition ATM routing module.')
etsysOidPhyXPxFPHYx01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 130))
if mibBuilder.loadTexts: etsysOidPhyXPxFPHYx01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPxFPHYx01.setDescription('Enterasys field replaceable FDDI MMF DAS/SAS port with SC connector for the X-Pedition FDDI routing module.')
etsysOidPhyXPxFPHYx02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 131))
if mibBuilder.loadTexts: etsysOidPhyXPxFPHYx02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPxFPHYx02.setDescription('Enterasys field replaceable FDDI UTP SAS port with RJ45 connector for the X-Pedition FDDI routing module.')
etsysOidPhyXPxFPHYx09 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 132))
if mibBuilder.loadTexts: etsysOidPhyXPxFPHYx09.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPxFPHYx09.setDescription('Enterasys field replaceable FDDI SMF DAS/SAS port with SC connector for the X-Pedition FDDI routing module.')
etsysOidPhyHssiPort = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 133))
if mibBuilder.loadTexts: etsysOidPhyHssiPort.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyHssiPort.setDescription('Enterasys serial HSSI port.')
etsysOidPhySerialConnection = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 134))
if mibBuilder.loadTexts: etsysOidPhySerialConnection.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySerialConnection.setDescription('Enterasys serial port with no connection.')
etsysOidPhySerialEia530AConnection = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 135))
if mibBuilder.loadTexts: etsysOidPhySerialEia530AConnection.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySerialEia530AConnection.setDescription('Enterasys serial port with EIA 530A connection.')
etsysOidPhySerialEia530Connection = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 136))
if mibBuilder.loadTexts: etsysOidPhySerialEia530Connection.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySerialEia530Connection.setDescription('Enterasys serial port with EIA 530 connection.')
etsysOidPhySerialV35Connection = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 137))
if mibBuilder.loadTexts: etsysOidPhySerialV35Connection.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySerialV35Connection.setDescription('Enterasys serial port with V.35 connection.')
etsysOidPhySerialX21Connection = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 138))
if mibBuilder.loadTexts: etsysOidPhySerialX21Connection.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySerialX21Connection.setDescription('Enterasys serial port with X.21 connection.')
etsysOidPhyGigEthSXPort = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 139))
if mibBuilder.loadTexts: etsysOidPhyGigEthSXPort.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyGigEthSXPort.setDescription('Enterasys fixed 1000BASE-SX Short Wave port with SC connector.')
etsysOidPhyGigEthLXPort = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 140))
if mibBuilder.loadTexts: etsysOidPhyGigEthLXPort.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyGigEthLXPort.setDescription('Enterasys fixed 1000BASE-LX Long Wave port with SC connector.')
etsysOidPhyGigEthLLXPort = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 141))
if mibBuilder.loadTexts: etsysOidPhyGigEthLLXPort.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyGigEthLLXPort.setDescription('Enterasys fixed 1000BASE-LX Long Haul (70 km range) port with SC connector.')
etsysOidPhy6SSRLCGigEthBkplnPort = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 142))
if mibBuilder.loadTexts: etsysOidPhy6SSRLCGigEthBkplnPort.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhy6SSRLCGigEthBkplnPort.setDescription('Enterasys fixed 1000BASE port with Matrix Backplane connection for Matrix E5, E6, and E7. While, from a hardware point of view, this is a gig port interface to the Matrix backplane, from a user point of view this is just a FTM backplane port. Use etsysOidPhyBackplaneFTM1 instead.')
etsysOidPhyGPIMx01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 143))
if mibBuilder.loadTexts: etsysOidPhyGPIMx01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyGPIMx01.setDescription('Enterasys removable 1000BASE-SX short wave physical interface module with SC connector.')
etsysOidPhyGPIMx08 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 144))
if mibBuilder.loadTexts: etsysOidPhyGPIMx08.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyGPIMx08.setDescription('Enterasys removable 1000BASE-LX long haul (70 km range) physical interface module with SC connector.')
etsysOidPhyGPIMx09 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 145))
if mibBuilder.loadTexts: etsysOidPhyGPIMx09.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyGPIMx09.setDescription('Enterasys removable 1000BASE-LX long wave physical interface module with SC connector.')
etsysOidPhyFastEthMMFPort = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 146))
if mibBuilder.loadTexts: etsysOidPhyFastEthMMFPort.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyFastEthMMFPort.setDescription('Enterasys 100BASE-FX multi-mode fiber port.')
etsysOidPhyFastEthSMFPort = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 147))
if mibBuilder.loadTexts: etsysOidPhyFastEthSMFPort.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyFastEthSMFPort.setDescription('Enterasys 100BASE-FX single-mode fiber port.')
etsysOidPhyER16Slot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 148))
if mibBuilder.loadTexts: etsysOidPhyER16Slot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16Slot.setDescription('Enterasys module slot for the X-Pedition ER16 router.')
etsysOidPhyXP8Slot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 149))
if mibBuilder.loadTexts: etsysOidPhyXP8Slot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXP8Slot.setDescription('Enterasys module slot for the X-Pedition 8000 series routers.')
etsysOidPhyXP2Slot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 150))
if mibBuilder.loadTexts: etsysOidPhyXP2Slot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXP2Slot.setDescription('Enterasys module slot for the X-Pedition 2000 series, 5SSRM-02, and 6SSRM-02 routers.')
etsysOidPhyXP8IntFlash = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 151))
if mibBuilder.loadTexts: etsysOidPhyXP8IntFlash.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXP8IntFlash.setDescription('Enterasys integrated Flash memory in X-Pedition 8000 series and ER16.')
etsysOidPhyPOSOC3MMF = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 152))
if mibBuilder.loadTexts: etsysOidPhyPOSOC3MMF.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyPOSOC3MMF.setDescription('Enterasys fixed POS OC-3 multi-mode fiber port with MT-RJ connector.')
etsysOidPhyPOSOC3SMF = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 153))
if mibBuilder.loadTexts: etsysOidPhyPOSOC3SMF.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyPOSOC3SMF.setDescription('Enterasys fixed POS OC-3 single-mode fiber port with MT-RJ connector.')
etsysOidPhyPOSOC12MMF = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 154))
if mibBuilder.loadTexts: etsysOidPhyPOSOC12MMF.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyPOSOC12MMF.setDescription('Enterasys fixed POS OC-12 multi-mode fiber port with SC connector.')
etsysOidPhyPOSOC12SMF = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 155))
if mibBuilder.loadTexts: etsysOidPhyPOSOC12SMF.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyPOSOC12SMF.setDescription('Enterasys fixed POS OC-12 single-mode fiber port with SC connector.')
etsysOidPhy100BASEMTRJMMF = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 156))
if mibBuilder.loadTexts: etsysOidPhy100BASEMTRJMMF.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy100BASEMTRJMMF.setDescription('Enterasys fixed 100BASE multi-mode fiber port with MT-RJ connector.')
etsysOidPhy1000BASET = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 157))
if mibBuilder.loadTexts: etsysOidPhy1000BASET.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhy1000BASET.setDescription('Enterasys fixed 1000BASE-T copper port with RJ45 connector. Use etsysOidPhyFrtPnlGigEthRJ45 instead.')
etsysOidPhyXPx2xAtm = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 158))
if mibBuilder.loadTexts: etsysOidPhyXPx2xAtm.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPx2xAtm.setDescription('Enterasys 2 port ATM routing module for the X-Pedition 2400.')
etsysOidPhyPortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 159))
if mibBuilder.loadTexts: etsysOidPhyPortSlot.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhyPortSlot.setDescription('Enterasys physical interface connector for all Enterasys routers. The value 0.0 should be returned in the ENTITY-MIB instead of this object.')
etsysOidPhyER16xFDDIx02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 160))
if mibBuilder.loadTexts: etsysOidPhyER16xFDDIx02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xFDDIx02.setDescription('Enterasys 2 port FDDI routing module for the X-Pedition ER-16.')
etsysOidPhyER16xATM29x02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 161))
if mibBuilder.loadTexts: etsysOidPhyER16xATM29x02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xATM29x02.setDescription('Enterasys 2 port ATM OC-3c (T-Series) routing module for the X-Pedition ER-16.')
etsysOidPhyER16xSERCx04xAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 162))
if mibBuilder.loadTexts: etsysOidPhyER16xSERCx04xAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xSERCx04xAA.setDescription('Enterasys 4 port Serial (AA Series) routing module for the X-Pedition ER-16. This module supports compression.')
etsysOidPhyER16xSERCEx04xA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 163))
if mibBuilder.loadTexts: etsysOidPhyER16xSERCEx04xA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xSERCEx04xA.setDescription('Enterasys 4 port Serial (AA Series) routing module for the X-Pedition ER-16. This module supports compression and encryption.')
etsysOidPhyER16xHSSIx02xAA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 164))
if mibBuilder.loadTexts: etsysOidPhyER16xHSSIx02xAA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xHSSIx02xAA.setDescription('Enterasys 2 port HSSI (AA Series) routing module for the X-Pedition ER-16.')
etsysOidPhyXPMemory64 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 165))
if mibBuilder.loadTexts: etsysOidPhyXPMemory64.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPMemory64.setDescription('Enterasys 64 MB control module memory for the X-Pedition routers.')
etsysOidPhyXPMemory128 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 166))
if mibBuilder.loadTexts: etsysOidPhyXPMemory128.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPMemory128.setDescription('Enterasys 128 MB control module memory for the X-Pedition routers.')
etsysOidPhyXPMemory256 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 167))
if mibBuilder.loadTexts: etsysOidPhyXPMemory256.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPMemory256.setDescription('Enterasys 256 MB control module memory for the X-Pedition routers.')
etsysOidPhyXP8PowerSupplySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 168))
if mibBuilder.loadTexts: etsysOidPhyXP8PowerSupplySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXP8PowerSupplySlot.setDescription('Enterasys power supply slot for the X-Pedition 8000.')
etsysOidPhyXP16PowerSupplySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 169))
if mibBuilder.loadTexts: etsysOidPhyXP16PowerSupplySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXP16PowerSupplySlot.setDescription('Enterasys power supply slot for the X-Pedition 8600.')
etsysOidPhyER16PowerSupplySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 170))
if mibBuilder.loadTexts: etsysOidPhyER16PowerSupplySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16PowerSupplySlot.setDescription('Enterasys power supply slot for the X-Pedition ER-16.')
etsysOidPhyXP16SwitchingFabricSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 171))
if mibBuilder.loadTexts: etsysOidPhyXP16SwitchingFabricSlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXP16SwitchingFabricSlot.setDescription('Enterasys switching fabric slot for the X-Pedition 8600.')
etsysOidPhyER16SwitchingFabricSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 172))
if mibBuilder.loadTexts: etsysOidPhyER16SwitchingFabricSlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16SwitchingFabricSlot.setDescription('Enterasys switching fabric slot for the X-Pedition ER-16.')
etsysOidPhyNIMxSERx02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 173))
if mibBuilder.loadTexts: etsysOidPhyNIMxSERx02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxSERx02.setDescription('Enterasys dual port serial network interface module (NIM).')
etsysOidPhyNIMxSERx04 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 174))
if mibBuilder.loadTexts: etsysOidPhyNIMxSERx04.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxSERx04.setDescription('Enterasys quad port serial network interface module (NIM).')
etsysOidPhyNIMxT1E1x01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 175))
if mibBuilder.loadTexts: etsysOidPhyNIMxT1E1x01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxT1E1x01.setDescription('Enterasys single port Clear/Fractional T1/E1 NIM with DSU.')
etsysOidPhyNIMxT1E1x02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 176))
if mibBuilder.loadTexts: etsysOidPhyNIMxT1E1x02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxT1E1x02.setDescription('Enterasys dual port Clear/Fractional T1/E1 NIM with DSU.')
etsysOidPhyNIMxT1E1x04 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 177))
if mibBuilder.loadTexts: etsysOidPhyNIMxT1E1x04.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxT1E1x04.setDescription('Enterasys quad port Clear/Fractional T1/E1 NIM with DSU.')
etsysOidPhyNIMxCT1E1x01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 178))
if mibBuilder.loadTexts: etsysOidPhyNIMxCT1E1x01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxCT1E1x01.setDescription('Enterasys single port Channelized T1/E1 NIM with DSU.')
etsysOidPhyNIMxCT1E1x02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 179))
if mibBuilder.loadTexts: etsysOidPhyNIMxCT1E1x02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxCT1E1x02.setDescription('Enterasys dual port Channelized T1/E1 NIM with DSU.')
etsysOidPhyNIMxCT1E1x04 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 180))
if mibBuilder.loadTexts: etsysOidPhyNIMxCT1E1x04.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxCT1E1x04.setDescription('Enterasys quad port Channelized T1/E1 NIM with DSU.')
etsysOidPhyER16xHFX31x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 181))
if mibBuilder.loadTexts: etsysOidPhyER16xHFX31x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xHFX31x24.setDescription('Enterasys 24 port 100BASE-FX (T-Series) routing module with MT-RJ connectors (for MMF) for the X-Pedition ER16.')
etsysOidPhyER16xHFX39x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 182))
if mibBuilder.loadTexts: etsysOidPhyER16xHFX39x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xHFX39x24.setDescription('Enterasys 24 port 100BASE-FX (T-Series) routing module with MT-RJ connectors (for SMF) for the X-Pedition ER16.')
etsysOidPhyER16xGTX32x04 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 183))
if mibBuilder.loadTexts: etsysOidPhyER16xGTX32x04.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xGTX32x04.setDescription('Enterasys 4 port 1000BASE-T (T-Series) routing module with RJ45 connectors (for Cat 5) for the X-Pedition ER16.')
etsysOidPhyER16xGTX32x08 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 184))
if mibBuilder.loadTexts: etsysOidPhyER16xGTX32x08.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xGTX32x08.setDescription('Enterasys 8 port 1000BASE-T (T-Series) routing module with RJ45 connectors (for Cat 5) for the X-Pedition ER16.')
etsysOidPhySSRxGTX32x04 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 185))
if mibBuilder.loadTexts: etsysOidPhySSRxGTX32x04.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxGTX32x04.setDescription('Enterasys 4 port 1000BASE-T (T-Series) routing module with RJ45 connectors (for Cat 5) for the X-Pedition 8000 series.')
etsysOidPhySSRxGSX31x04 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 186))
if mibBuilder.loadTexts: etsysOidPhySSRxGSX31x04.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxGSX31x04.setDescription('Enterasys 4 port 1000BASE-SX (T-Series) routing module with SC connectors (for MMF) for the X-Pedition 8000 series.')
etsysOidPhySSRxGLX39x04 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 187))
if mibBuilder.loadTexts: etsysOidPhySSRxGLX39x04.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSRxGLX39x04.setDescription('Enterasys 4 port 1000BASE-LX (T-Series) routing module with SC connectors (for MMF or SMF) for the X-Pedition 8000 series.')
etsysOidPhy5SlotFTM1Backplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 188))
if mibBuilder.loadTexts: etsysOidPhy5SlotFTM1Backplane.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy5SlotFTM1Backplane.setDescription('Enterasys Frame Transfer Matrix 1 Backplane for the 5 slot E5 or E6 chassis.')
etsysOidPhy7SlotFTM1Backplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 189))
if mibBuilder.loadTexts: etsysOidPhy7SlotFTM1Backplane.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7SlotFTM1Backplane.setDescription('Enterasys Frame Transfer Matrix 1 Backplane for the 7 slot E7 chassis.')
etsysOidPhy7SlotFTM2Backplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 190))
if mibBuilder.loadTexts: etsysOidPhy7SlotFTM2Backplane.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7SlotFTM2Backplane.setDescription('Enterasys Frame Transfer Matrix 2 Backplane for the 7 slot E7 chassis.')
etsysOidPhyER16xOS26x01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 191))
if mibBuilder.loadTexts: etsysOidPhyER16xOS26x01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyER16xOS26x01.setDescription('Enterasys 1 port 10GbE routing module for the X-Pedition ER-16. Uses ZPIM uplink module.')
etsysOidPhyMPC8240 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 192))
if mibBuilder.loadTexts: etsysOidPhyMPC8240.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyMPC8240.setDescription('Motorola PowerPC 8240 processor.')
etsysOidPhyMPC8245 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 193))
if mibBuilder.loadTexts: etsysOidPhyMPC8245.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyMPC8245.setDescription('Motorola PowerPC 8245 processor.')
etsysOidPhy7G4202x30 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 194))
if mibBuilder.loadTexts: etsysOidPhy7G4202x30.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7G4202x30.setDescription('Enterasys 30 port 1000BASE-T Gigabit Ethernet module with RJ45 connectors.')
etsysOidPhy7Gx6MGBIC = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 195))
if mibBuilder.loadTexts: etsysOidPhy7Gx6MGBIC.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7Gx6MGBIC.setDescription('Enterasys 6 port 1000BASE-X Gigabit Ethernet uplink module with Mini-GBIC connectors.')
etsysOidPhy7H4382x49 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 196))
if mibBuilder.loadTexts: etsysOidPhy7H4382x49.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7H4382x49.setDescription('Enterasys 48 port 100BASE-TX Fast Ethernet module with RJ45 connectors and one uplink slot.')
etsysOidPhy7K4290x02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 197))
if mibBuilder.loadTexts: etsysOidPhy7K4290x02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7K4290x02.setDescription('Enterasys 2 port 10 Gigabit Ethernet module.')
etsysOidPhy7H4204x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 198))
if mibBuilder.loadTexts: etsysOidPhy7H4204x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7H4204x48.setDescription('Enterasys 48 port 100BASE-FX Fast Ethernet module with MMF MT-RJ connectors.')
etsysOidPhy2H412x49R = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 199))
if mibBuilder.loadTexts: etsysOidPhy2H412x49R.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy2H412x49R.setDescription('Enterasys 48 port 100BASE-TX Fast Ethernet standalone with RJ45 connectors and one uplink slot.')
etsysOidPhy6C207x3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 200))
if mibBuilder.loadTexts: etsysOidPhy6C207x3.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy6C207x3.setDescription('Enterasys AC power supply (+5.25 Volts/280 Amps/1470 Watts, +12 Volts/8 Amps/96 Watts) for the Matrix E7/N7 chassis.')
etsysOidPhy6C203x1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 201))
if mibBuilder.loadTexts: etsysOidPhy6C203x1.setStatus('obsolete')
if mibBuilder.loadTexts: etsysOidPhy6C203x1.setDescription('Enterasys AC power supply for the Matrix E3 chassis.')
etsysOidPhy6C403 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 202))
if mibBuilder.loadTexts: etsysOidPhy6C403.setStatus('obsolete')
if mibBuilder.loadTexts: etsysOidPhy6C403.setDescription('Enterasys fan tray for the Matrix E3 chassis.')
etsysOidPhy6C103 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 203))
if mibBuilder.loadTexts: etsysOidPhy6C103.setStatus('obsolete')
if mibBuilder.loadTexts: etsysOidPhy6C103.setDescription('Enterasys 3 slot modular chassis frame for the Matrix E3.')
etsysOidPhyVHxSMGMT2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 204))
if mibBuilder.loadTexts: etsysOidPhyVHxSMGMT2.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyVHxSMGMT2.setDescription('Enterasys L2/L3 management card for Vertical Horizon products.')
etsysOidPhyVHxRTMxL3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 205))
if mibBuilder.loadTexts: etsysOidPhyVHxRTMxL3.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyVHxRTMxL3.setDescription('Enterasys layer 3 routing module for the VH-2402S and VH-2402S2 products.')
etsysOidPhyGPIMx02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 206))
if mibBuilder.loadTexts: etsysOidPhyGPIMx02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyGPIMx02.setDescription('Enterasys removable 1000BASE-T GBIC with a single RJ45 connector.')
etsysOidPhyNIMxBRIxSTx01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 207))
if mibBuilder.loadTexts: etsysOidPhyNIMxBRIxSTx01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxBRIxSTx01.setDescription('Enterasys single port ISDN ST NIM offering 2 B channels (64 Kbit/sec each) and one D channel (16 Kbit/sec) with an RJ45 connector for the XSR products.')
etsysOidPhyNIMxBRIxSTx02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 208))
if mibBuilder.loadTexts: etsysOidPhyNIMxBRIxSTx02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxBRIxSTx02.setDescription('Enterasys dual port ISDN ST NIM offering 2 B channels (64 Kbit/sec each) and one D channel (16 Kbit/sec) with two RJ45 connectors for the XSR products.')
etsysOidPhyNIMxBRIxUx01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 209))
if mibBuilder.loadTexts: etsysOidPhyNIMxBRIxUx01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxBRIxUx01.setDescription('Enterasys single port ISDN U NIM offering 2 B channels (64 Kbit/sec each) and one D channel (16 Kbit/sec) with an RJ45 connector for the XSR products.')
etsysOidPhyNIMxBRIxUx02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 210))
if mibBuilder.loadTexts: etsysOidPhyNIMxBRIxUx02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxBRIxUx02.setDescription('Enterasys dual port ISDN U NIM offering 2 B channels (64 Kbit/sec each) and one D channel (16 Kbit/sec) with two RJ45 connectors for the XSR products.')
etsysOidPhyC5C105 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 211))
if mibBuilder.loadTexts: etsysOidPhyC5C105.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhyC5C105.setDescription('Enterasys Matrix C5 five slot modular chassis frame.')
etsysOidPhyC5C305 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 212))
if mibBuilder.loadTexts: etsysOidPhyC5C305.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhyC5C305.setDescription('Enterasys Matrix C5 fan tray.')
etsysOidPhyC5C205x1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 213))
if mibBuilder.loadTexts: etsysOidPhyC5C205x1.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhyC5C205x1.setDescription('Enterasys Matrix C5 AC power supply.')
etsysOidPhyC5H124x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 214))
if mibBuilder.loadTexts: etsysOidPhyC5H124x48.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhyC5H124x48.setDescription('Enterasys Matrix C5 48 port RJ45 100BASE-TX Fast Ethernet switching module, with one uplink slot.')
etsysOidPhyC5G124x36 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 215))
if mibBuilder.loadTexts: etsysOidPhyC5G124x36.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhyC5G124x36.setDescription('Enterasys Matrix C5 36 port RJ45 1000BASE-T Gigabit Ethernet switching module with 4 Mini-GBIC uplink ports.')
etsysOidPhyC5G122x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 216))
if mibBuilder.loadTexts: etsysOidPhyC5G122x24.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhyC5G122x24.setDescription('Enterasys Matrix C5 24 port RJ45 1000BASE-T Gigabit Ethernet switching module, with 2 Xenpak uplink ports.')
etsysOidPhyC5G114x4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 217))
if mibBuilder.loadTexts: etsysOidPhyC5G114x4.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhyC5G114x4.setDescription('Enterasys Matrix C5 uplink module with four Mini-GBIC Gigabit Ethernet ports.')
etsysOidPhyC5G124x4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 218))
if mibBuilder.loadTexts: etsysOidPhyC5G124x4.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhyC5G124x4.setDescription('Enterasys Matrix C5 uplink module with four 1000BASE-T RJ45 Gigabit Ethernet ports.')
etsysOidPhyC5M100 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 219))
if mibBuilder.loadTexts: etsysOidPhyC5M100.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhyC5M100.setDescription('Enterasys Matrix C5 Connectivity Module.')
etsysOidPhyC2H124x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 220))
if mibBuilder.loadTexts: etsysOidPhyC2H124x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyC2H124x48.setDescription('Enterasys Matrix C2 48 port RJ45 100BASE-TX Fast Ethernet stackable switch, with four Mini-GBIC ports.')
etsysOidPhyC2G124x36 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 221))
if mibBuilder.loadTexts: etsysOidPhyC2G124x36.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhyC2G124x36.setDescription('Enterasys Matrix C2 36 port RJ45 1000BASE-T Gigabit Ethernet stackable switch, with four Mini-GBIC uplink ports.')
etsysOidPhyC2G122x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 222))
if mibBuilder.loadTexts: etsysOidPhyC2G122x24.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhyC2G122x24.setDescription('Enterasys Matrix C2 24 port RJ45 1000BASE-T Gigabit Ethernet stackable switch, with two Xenpak uplink ports.')
etsysOidPhyC2M100 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 223))
if mibBuilder.loadTexts: etsysOidPhyC2M100.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhyC2M100.setDescription('Enterasys Matrix C2 Connectivity Module.')
etsysOidPhyC2C105 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 224))
if mibBuilder.loadTexts: etsysOidPhyC2C105.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhyC2C105.setDescription('Enterasys Matrix C2 redundant power supply chassis.')
etsysOidPhyC2C100 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 225))
if mibBuilder.loadTexts: etsysOidPhyC2C100.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhyC2C100.setDescription('Enterasys Matrix C2 redundant power supply.')
etsysOidPhy7G4270x10 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 226))
if mibBuilder.loadTexts: etsysOidPhy7G4270x10.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7G4270x10.setDescription('Enterasys 10 port 1000BASE-X Gigabit Ethernet module with Mini-GBIC connectors.')
etsysOidPhy7H4202x72 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 227))
if mibBuilder.loadTexts: etsysOidPhy7H4202x72.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7H4202x72.setDescription('Enterasys 72 port 100BASE-X Fast Ethernet module with RJ45 connectors.')
etsysOidPhy7C107 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 228))
if mibBuilder.loadTexts: etsysOidPhy7C107.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7C107.setDescription('Enterasys 7 slot modular chassis frame for the Matrix N7.')
etsysOidPhy7C103 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 229))
if mibBuilder.loadTexts: etsysOidPhy7C103.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7C103.setDescription('Enterasys 3 slot modular chassis frame for the Matrix N3.')
etsysOidPhy7C203x1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 230))
if mibBuilder.loadTexts: etsysOidPhy7C203x1.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7C203x1.setDescription('Enterasys AC power supply for the Matrix N3 chassis.')
etsysOidPhy7C403 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 231))
if mibBuilder.loadTexts: etsysOidPhy7C403.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7C403.setDescription('Enterasys fan tray for the Matrix N3 chassis.')
etsysOidPhy7G4275x12 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 232))
if mibBuilder.loadTexts: etsysOidPhy7G4275x12.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7G4275x12.setDescription('Enterasys 12 port Gigabit Ethernet module with 10 1000BASE-X ports with Mini-GBIC connectors and two 1000BASE-T ports with RJ45 connectors.')
etsysOidPhy7G4270x09 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 233))
if mibBuilder.loadTexts: etsysOidPhy7G4270x09.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7G4270x09.setDescription('Enterasys 9 port 1000BASE-X Gigabit Ethernet module with Mini-GBIC connectors.')
etsysOidPhyNIMxC16T3x01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 234))
if mibBuilder.loadTexts: etsysOidPhyNIMxC16T3x01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxC16T3x01.setDescription('Enterasys single port channelized T3 NIM, supporting up to 16 T1 tributaries, for the XSR products.')
etsysOidPhyNIMxC16E3x01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 235))
if mibBuilder.loadTexts: etsysOidPhyNIMxC16E3x01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxC16E3x01.setDescription('Enterasys single port channelized E3 NIM for the XSR products.')
etsysOidPhyNIMxT3E3x01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 236))
if mibBuilder.loadTexts: etsysOidPhyNIMxT3E3x01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxT3E3x01.setDescription('Enterasys single port unchannelized T3/E3 NIM for the XSR products.')
etsysOidPhyNIMxC16T3Sx01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 237))
if mibBuilder.loadTexts: etsysOidPhyNIMxC16T3Sx01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxC16T3Sx01.setDescription('Enterasys single port channelized T3 NIM with system synchronization capabilities, supporting up to 16 T1 tributaries, for the XSR products.')
etsysOidPhyNIMxC16E3Sx01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 238))
if mibBuilder.loadTexts: etsysOidPhyNIMxC16E3Sx01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxC16E3Sx01.setDescription('Enterasys single port channelized E3 NIM with system synchronization capabilities, for the XSR products.')
etsysOidPhyNIMxC16T3GSx01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 239))
if mibBuilder.loadTexts: etsysOidPhyNIMxC16T3GSx01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxC16T3GSx01.setDescription('Enterasys single port channelized T3 NIM with a G.747 multiplexer, supporting up to 16 E1 tributaries, and with system synchronization capabilities. For the XSR products.')
etsysOidPhyNIMxT3Sx01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 240))
if mibBuilder.loadTexts: etsysOidPhyNIMxT3Sx01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxT3Sx01.setDescription('Enterasys single port unchannelized T3 NIM with system synchronization capabilities, for the XSR products.')
etsysOidPhyNIMxE3Sx01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 241))
if mibBuilder.loadTexts: etsysOidPhyNIMxE3Sx01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxE3Sx01.setDescription('Enterasys single port unchannelized E3 NIM with system synchronization capabilities, for the XSR products.')
etsysOidPhyNIMxETHxTGRx01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 242))
if mibBuilder.loadTexts: etsysOidPhyNIMxETHxTGRx01.setStatus('deprecated')
if mibBuilder.loadTexts: etsysOidPhyNIMxETHxTGRx01.setDescription('Enterasys single port 100BASE-TX Ethernet NIM with a single RJ45 connector for the XSR products.')
etsysOidPhyNIMxADSLxACx01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 243))
if mibBuilder.loadTexts: etsysOidPhyNIMxADSLxACx01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxADSLxACx01.setDescription('Enterasys single port ADSL over POTS NIM per ITU-T G.992.1 Annex A, C, for the XSR products.')
etsysOidPhyNIMxADSLxBx01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 244))
if mibBuilder.loadTexts: etsysOidPhyNIMxADSLxBx01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxADSLxBx01.setDescription('Enterasys single port ADSL over ISDN NIM per ITU-T G.992.1 Annex B, for the XSR products.')
etsysOidPhy7H4383x49 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 245))
if mibBuilder.loadTexts: etsysOidPhy7H4383x49.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7H4383x49.setDescription('Enterasys 48 port 100BASE-TX Fast Ethernet module with RJ21 connectors and one uplink slot.')
etsysOidPhy7H4284x49 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 246))
if mibBuilder.loadTexts: etsysOidPhy7H4284x49.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7H4284x49.setDescription('Enterasys 48 port 100BASE-FX Fast Ethernet module with MMF MT-RJ connectors and one uplink slot.')
etsysOidPhyV2G121x1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 247))
if mibBuilder.loadTexts: etsysOidPhyV2G121x1.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyV2G121x1.setDescription('Enterasys single port 1000BASE-T uplink module with an RJ45 connector for the V2H products.')
etsysOidPhyV2G112x2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 248))
if mibBuilder.loadTexts: etsysOidPhyV2G112x2.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyV2G112x2.setDescription('Enterasys two port Gigabit uplink module with one 1000BASE-T port, with an RJ45 connector, and one Mini-GBIC port, for the V2H products.')
etsysOidPhyV2G151x1M = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 249))
if mibBuilder.loadTexts: etsysOidPhyV2G151x1M.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyV2G151x1M.setDescription('Enterasys single port 100BASE-FX MMF uplink module with one SC connector, for the V2H products.')
etsysOidPhyV2G151x1S = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 250))
if mibBuilder.loadTexts: etsysOidPhyV2G151x1S.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyV2G151x1S.setDescription('Enterasys single port 100BASE-FX SMF uplink module with one SC connector, for the V2H products.')
etsysOidPhy1Hx8FX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 251))
if mibBuilder.loadTexts: etsysOidPhy1Hx8FX.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy1Hx8FX.setDescription('Enterasys eight port 100BASE-FX MMF expansion module with MRTJ connectors, for the E1 product family.')
etsysOidPhyE1FxdAcPwrSup = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 252))
if mibBuilder.loadTexts: etsysOidPhyE1FxdAcPwrSup.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyE1FxdAcPwrSup.setDescription('Enterasys fixed AC power supply for the Matrix E1 product family.')
etsysOidPhyNIMxETHRx01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 253))
if mibBuilder.loadTexts: etsysOidPhyNIMxETHRx01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxETHRx01.setDescription('Enterasys single port 100BASE-TX Ethernet NIM with a single RJ45 connector for the XSR products.')
etsysOidPhyNIMxFIBRx01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 254))
if mibBuilder.loadTexts: etsysOidPhyNIMxFIBRx01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxFIBRx01.setDescription('Enterasys single port 100BASE-TX Ethernet NIM with a single MT-RJ connector for the XSR products.')
etsysOidPhyNIMxDIRELAYx02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 255))
if mibBuilder.loadTexts: etsysOidPhyNIMxDIRELAYx02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNIMxDIRELAYx02.setDescription('Enterasys two port Drop and Insert Fractional T1/E1 NIM with CSU/DSU for the XSR products.')
etsysOidPhy7G4202x60 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 256))
if mibBuilder.loadTexts: etsysOidPhy7G4202x60.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7G4202x60.setDescription('Enterasys 60 port 1000BASE-T Gigabit Ethernet module with RJ45 connectors.')
etsysOidPhy7G4282x41 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 257))
if mibBuilder.loadTexts: etsysOidPhy7G4282x41.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7G4282x41.setDescription('Enterasys 40 port 1000BASE-T Gigabit Ethernet module with RJ45 connectors and one uplink slot.')
etsysOidPhyMGBICNoConnector = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 258))
if mibBuilder.loadTexts: etsysOidPhyMGBICNoConnector.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyMGBICNoConnector.setDescription('Enterasys 1000BASE-X or 1000BASE-T Mini-GBIC slot with no Mini-GBIC present.')
etsysOidPhyN7PowerSupplySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 259))
if mibBuilder.loadTexts: etsysOidPhyN7PowerSupplySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyN7PowerSupplySlot.setDescription('Enterasys power supply slot for the N7 chassis.')
etsysOidPhyN7FanTraySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 260))
if mibBuilder.loadTexts: etsysOidPhyN7FanTraySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyN7FanTraySlot.setDescription('Enterasys fan tray slot for the N7 chassis.')
etsysOidPhyN7ModuleSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 261))
if mibBuilder.loadTexts: etsysOidPhyN7ModuleSlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyN7ModuleSlot.setDescription('Enterasys module slot for the N7 chassis.')
etsysOidPhyN3PowerSupplySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 262))
if mibBuilder.loadTexts: etsysOidPhyN3PowerSupplySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyN3PowerSupplySlot.setDescription('Enterasys power supply slot for the N3 chassis.')
etsysOidPhyN3FanTraySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 263))
if mibBuilder.loadTexts: etsysOidPhyN3FanTraySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyN3FanTraySlot.setDescription('Enterasys fan tray slot for the N3 chassis.')
etsysOidPhyN3ModuleSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 264))
if mibBuilder.loadTexts: etsysOidPhyN3ModuleSlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyN3ModuleSlot.setDescription('Enterasys module slot for the N3 chassis.')
etsysOidPhyE7PowerSupplySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 265))
if mibBuilder.loadTexts: etsysOidPhyE7PowerSupplySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyE7PowerSupplySlot.setDescription('Enterasys power supply slot for the E7 chassis.')
etsysOidPhyE7FanTraySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 266))
if mibBuilder.loadTexts: etsysOidPhyE7FanTraySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyE7FanTraySlot.setDescription('Enterasys fan tray slot for the E7 chassis.')
etsysOidPhyE7ModuleSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 267))
if mibBuilder.loadTexts: etsysOidPhyE7ModuleSlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyE7ModuleSlot.setDescription('Enterasys module slot for the E7 chassis.')
etsysOidPhyRj45ConsolePort = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 268))
if mibBuilder.loadTexts: etsysOidPhyRj45ConsolePort.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyRj45ConsolePort.setDescription('Enterasys local management console port with an RJ45 connector.')
etsysOidPhyMGBICx02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 269))
if mibBuilder.loadTexts: etsysOidPhyMGBICx02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyMGBICx02.setDescription('Enterasys MGBIC-02, a 1000BASE-T Mini-GBIC with an RJ45 connector.')
etsysOidPhyMGBICx08 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 270))
if mibBuilder.loadTexts: etsysOidPhyMGBICx08.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyMGBICx08.setDescription('Enterasys MGBIC-08, a 1000BASE-LX/LH (70Km Long Haul) SMF Mini-GBIC with an LC connector.')
etsysOidPhy4H4203x72 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 271))
if mibBuilder.loadTexts: etsysOidPhy4H4203x72.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy4H4203x72.setDescription('Enterasys 72 port 100BASE-TX Fast Ethernet module with RJ21 connectors.')
etsysOidPhy4H4283x49 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 272))
if mibBuilder.loadTexts: etsysOidPhy4H4283x49.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy4H4283x49.setDescription('Enterasys 48 port 100BASE-TX Fast Ethernet module with RJ21 connectors and one uplink slot.')
etsysOidPhy4G4282x41 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 273))
if mibBuilder.loadTexts: etsysOidPhy4G4282x41.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy4G4282x41.setDescription('Enterasys 40 port 1000BASE-T Gigabit Ethernet module with RJ45 connectors and one uplink slot.')
etsysOidPhy4G4202x60 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 274))
if mibBuilder.loadTexts: etsysOidPhy4G4202x60.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy4G4202x60.setDescription('Enterasys 60 port 1000BASE-T Gigabit Ethernet module with RJ45 connectors.')
etsysOidPhy4H4282x49 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 275))
if mibBuilder.loadTexts: etsysOidPhy4H4282x49.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy4H4282x49.setDescription('Enterasys 48 port 100BASE-TX Fast Ethernet module with RJ45 connectors and one uplink slot.')
etsysOidPhy4H4202x72 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 276))
if mibBuilder.loadTexts: etsysOidPhy4H4202x72.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy4H4202x72.setDescription('Enterasys 72 port 100BASE-TX Fast Ethernet module with RJ45 connectors.')
etsysOidPhy4H4284x49 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 277))
if mibBuilder.loadTexts: etsysOidPhy4H4284x49.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy4H4284x49.setDescription('Enterasys 48 port 100BASE-FX Fast Ethernet module with MMF MT-RJ connectors and one uplink slot.')
etsysOidPhy7H4382x25 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 278))
if mibBuilder.loadTexts: etsysOidPhy7H4382x25.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7H4382x25.setDescription('Enterasys 24 port 100BASE-TX Fast Ethernet module with RJ45 connectors and one uplink slot.')
etsysOidPhyNoXenpak = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 279))
if mibBuilder.loadTexts: etsysOidPhyNoXenpak.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNoXenpak.setDescription('Enterasys 10GBASE slot with no XENPAK present.')
etsysOidPhy4H4285x49 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 280))
if mibBuilder.loadTexts: etsysOidPhy4H4285x49.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy4H4285x49.setDescription('Enterasys 48 port 100BASE-TX Fast Ethernet module with RJ45 connectors and one uplink slot. Power over Ethernet is supported on the 48 100BASE-TX ports.')
etsysOidPhy7H4385x49 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 281))
if mibBuilder.loadTexts: etsysOidPhy7H4385x49.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7H4385x49.setDescription('Enterasys 48 port 100BASE-TX Fast Ethernet module with RJ45 connectors and one uplink slot. Power over Ethernet is supported on the 48 100BASE-TX ports.')
etsysOidPhy7G4280x19 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 282))
if mibBuilder.loadTexts: etsysOidPhy7G4280x19.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7G4280x19.setDescription('Enterasys 18 port 1000BASE-X Gigabit Ethernet module with Mini-GBIC connectors and one uplink slot.')
etsysOidPhyC2G124x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 283))
if mibBuilder.loadTexts: etsysOidPhyC2G124x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyC2G124x24.setDescription('Enterasys Matrix C2 24 port RJ45 1000BASE-T Gigabit Ethernet stackable switch, with four Mini-GBIC ports.')
etsysOidPhyC2G124x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 284))
if mibBuilder.loadTexts: etsysOidPhyC2G124x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyC2G124x48.setDescription('Enterasys Matrix C2 48 port RJ45 1000BASE-T Gigabit Ethernet stackable switch, with four Mini-GBIC ports.')
etsysOidPhyC2K122x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 285))
if mibBuilder.loadTexts: etsysOidPhyC2K122x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyC2K122x24.setDescription('Enterasys Matrix C2 24 port RJ45 1000BASE-T Gigabit Ethernet stackable switch, with two 10 Gigabit XFP ports.')
etsysOidPhyC2H124x48P = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 286))
if mibBuilder.loadTexts: etsysOidPhyC2H124x48P.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyC2H124x48P.setDescription('Enterasys Matrix C2 48 port RJ45 100BASE-TX Fast Ethernet stackable switch, with four Mini-GBIC ports. Power over Ethernet is supported on the 48 100BASE-TX ports.')
etsysOidPhyC2G124x48P = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 287))
if mibBuilder.loadTexts: etsysOidPhyC2G124x48P.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyC2G124x48P.setDescription('Enterasys Matrix C2 48 port RJ45 1000BASE-T Gigabit Ethernet stackable switch, with four Mini-GBIC ports. Power over Ethernet is supported on the 48 1000BASE-T ports.')
etsysOidPhy7G4202x72 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 288))
if mibBuilder.loadTexts: etsysOidPhy7G4202x72.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7G4202x72.setDescription('Enterasys 72 port 1000BASE-T Gigabit Ethernet module with RJ45 connectors.')
etsysOidPhy7G4205x72 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 289))
if mibBuilder.loadTexts: etsysOidPhy7G4205x72.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7G4205x72.setDescription('Enterasys 72 port 1000BASE-T Gigabit Ethernet module with RJ45 connectors. Power over Ethernet is supported on the 72 1000BASE-T ports.')
etsysOidPhy7G4282x49 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 290))
if mibBuilder.loadTexts: etsysOidPhy7G4282x49.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7G4282x49.setDescription('Enterasys 48 port 1000BASE-T Gigabit Ethernet module with RJ45 connectors and one uplink slot.')
etsysOidPhy7G4285x49 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 291))
if mibBuilder.loadTexts: etsysOidPhy7G4285x49.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7G4285x49.setDescription('Enterasys 48 port 1000BASE-T Gigabit Ethernet module with RJ45 connectors and one uplink slot. Power over Ethernet is supported on the 48 1000BASE-T ports.')
etsysOidPhy4G4202x72 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 292))
if mibBuilder.loadTexts: etsysOidPhy4G4202x72.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy4G4202x72.setDescription('Enterasys 72 port 1000BASE-T Gigabit Ethernet module with RJ45 connectors.')
etsysOidPhy4G4205x72 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 293))
if mibBuilder.loadTexts: etsysOidPhy4G4205x72.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy4G4205x72.setDescription('Enterasys 72 port 1000BASE-T Gigabit Ethernet module with RJ45 connectors. Power over Ethernet is supported on the 72 1000BASE-T ports.')
etsysOidPhy4G4282x49 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 294))
if mibBuilder.loadTexts: etsysOidPhy4G4282x49.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy4G4282x49.setDescription('Enterasys 48 port 1000BASE-T Gigabit Ethernet module with RJ45 connectors and one uplink slot.')
etsysOidPhy4G4285x49 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 295))
if mibBuilder.loadTexts: etsysOidPhy4G4285x49.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy4G4285x49.setDescription('Enterasys 72 port 1000BASE-T Gigabit Ethernet module with RJ45 connectors and one uplink slot. Power over Ethernet is supported on the 48 1000BASE-T ports.')
etsysOidPhyMGBICxLC03 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 296))
if mibBuilder.loadTexts: etsysOidPhyMGBICxLC03.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyMGBICxLC03.setDescription('Enterasys MGBIC-LC03, 1000BASE-LX/LH (2Km Long Haul) MMF Mini-GBIC with an LC connector.')
etsysOidPhyNxPOE = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 297))
if mibBuilder.loadTexts: etsysOidPhyNxPOE.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNxPOE.setDescription('Enterasys Power over Ethernet power system.')
etsysOidPhyNxPOEx1200W = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 298))
if mibBuilder.loadTexts: etsysOidPhyNxPOEx1200W.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNxPOEx1200W.setDescription('Enterasys DC power supply for PoE power.')
etsysOidPhyNxPOEPowerSupplySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 299))
if mibBuilder.loadTexts: etsysOidPhyNxPOEPowerSupplySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNxPOEPowerSupplySlot.setDescription('Enterasys PoE power supply slot for the N-POE power system.')
etsysOidPhy7C105xP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 300))
if mibBuilder.loadTexts: etsysOidPhy7C105xP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7C105xP.setDescription('Enterasys 5 slot modular Power over Ethernet chassis frame for the Matrix N5 PoE.')
etsysOidPhy7C205x1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 301))
if mibBuilder.loadTexts: etsysOidPhy7C205x1.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7C205x1.setDescription('Enterasys AC power supply for the Matrix N5 PoE chassis.')
etsysOidPhy7C405 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 302))
if mibBuilder.loadTexts: etsysOidPhy7C405.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7C405.setDescription('Enterasys fan tray for the Matrix N5 PoE chassis.')
etsysOidPhyN5PoEPowerSupplySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 303))
if mibBuilder.loadTexts: etsysOidPhyN5PoEPowerSupplySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyN5PoEPowerSupplySlot.setDescription('Enterasys power supply slot for the N5 PoE chassis.')
etsysOidPhyN5PoEFanTraySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 304))
if mibBuilder.loadTexts: etsysOidPhyN5PoEFanTraySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyN5PoEFanTraySlot.setDescription('Enterasys fan tray slot for the N5 PoE chassis.')
etsysOidPhyN5PoEModuleSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 305))
if mibBuilder.loadTexts: etsysOidPhyN5PoEModuleSlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyN5PoEModuleSlot.setDescription('Enterasys module slot for the N5 PoE chassis.')
etsysOidPhyV2H124x24FX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 306))
if mibBuilder.loadTexts: etsysOidPhyV2H124x24FX.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyV2H124x24FX.setDescription('Enterasys V2 24 port 100BASE-FX Fast Ethernet stackable switch, with MTRJ multi-mode connectors and two uplink slots.')
etsysOidPhy7Gx6MGBICxA = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 307))
if mibBuilder.loadTexts: etsysOidPhy7Gx6MGBICxA.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7Gx6MGBICxA.setDescription('Enterasys 6 port 1000BASE-X Gigabit Ethernet uplink module with Mini-GBIC connectors.')
etsysOidPhyN5PoEPoEPowerSupplySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 308))
if mibBuilder.loadTexts: etsysOidPhyN5PoEPoEPowerSupplySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyN5PoEPoEPowerSupplySlot.setDescription('Enterasys PoE power supply slot for the N5 PoE chassis.')
etsysOidPhy7C117 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 309))
if mibBuilder.loadTexts: etsysOidPhy7C117.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7C117.setDescription('Enterasys 7 slot modular chassis frame for the Matrix N7.')
etsysOidPhy7C115xP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 310))
if mibBuilder.loadTexts: etsysOidPhy7C115xP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7C115xP.setDescription('Enterasys 5 slot modular Power over Ethernet chassis frame for the Matrix N5 PoE.')
etsysOidPhy7C113 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 311))
if mibBuilder.loadTexts: etsysOidPhy7C113.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7C113.setDescription('Enterasys 3 slot modular chassis frame for the Matrix N3.')
etsysOidPhy7C111 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 312))
if mibBuilder.loadTexts: etsysOidPhy7C111.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7C111.setDescription('Enterasys 1 slot modular chassis frame with power supplies and fans for the Matrix N1.')
etsysOidPhyN1ModuleSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 313))
if mibBuilder.loadTexts: etsysOidPhyN1ModuleSlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyN1ModuleSlot.setDescription('Enterasys module slot for the N1 chassis.')
etsysOidPhyB2G124x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 314))
if mibBuilder.loadTexts: etsysOidPhyB2G124x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyB2G124x24.setDescription('Enterasys Matrix B2 24 port RJ45 1000BASE-T Gigabit Ethernet stackable switch, with four Mini-GBIC ports.')
etsysOidPhyB2G124x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 315))
if mibBuilder.loadTexts: etsysOidPhyB2G124x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyB2G124x48.setDescription('Enterasys Matrix B2 48 port RJ45 1000BASE-T Gigabit Ethernet stackable switch, with four Mini-GBIC ports.')
etsysOidPhyB2G124x48P = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 316))
if mibBuilder.loadTexts: etsysOidPhyB2G124x48P.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyB2G124x48P.setDescription('Enterasys Matrix B2 48 port RJ45 1000BASE-T Gigabit Ethernet stackable switch, with four Mini-GBIC ports. Power over Ethernet is supported on the 48 1000BASE-T ports.')
etsysOidPhyB2H124x48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 317))
if mibBuilder.loadTexts: etsysOidPhyB2H124x48.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyB2H124x48.setDescription('Enterasys Matrix B2 48 port RJ45 100BASE-TX Fast Ethernet stackable switch, with four Mini-GBIC ports.')
etsysOidPhyB2H124x48P = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 318))
if mibBuilder.loadTexts: etsysOidPhyB2H124x48P.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyB2H124x48P.setDescription('Enterasys Matrix B2 48 port RJ45 100BASE-TX Fast Ethernet stackable switch, with four Mini-GBIC ports. Power over Ethernet is supported on the 48 100BASE-TX ports.')
etsysOidPhyB2G124x24P = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 319))
if mibBuilder.loadTexts: etsysOidPhyB2G124x24P.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyB2G124x24P.setDescription('Enterasys Matrix B2 24 port RJ45 1000BASE-T Gigabit Ethernet stackable switch, with four Mini-GBIC ports. Power over Ethernet is supported on the 24 1000BASE-T ports.')
etsysOidPhyB2H124x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 320))
if mibBuilder.loadTexts: etsysOidPhyB2H124x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyB2H124x24.setDescription('Enterasys Matrix B2 24 port RJ45 100BASE-TX Fast Ethernet stackable switch, with four Mini-GBIC ports.')
etsysOidPhyB2H124x24P = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 321))
if mibBuilder.loadTexts: etsysOidPhyB2H124x24P.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyB2H124x24P.setDescription('Enterasys Matrix B2 24 port RJ45 100BASE-TX Fast Ethernet stackable switch, with four Mini-GBIC ports. Power over Ethernet is supported on the 24 100BASE-TX ports.')
etsysOidPhyB2H124x24FX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 322))
if mibBuilder.loadTexts: etsysOidPhyB2H124x24FX.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyB2H124x24FX.setDescription('Enterasys B2 24 port 100BASE-FX Fast Ethernet stackable switch, with MTRJ multi-mode connectors and two uplink slots.')
etsysOidPhyX16xC = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 323))
if mibBuilder.loadTexts: etsysOidPhyX16xC.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyX16xC.setDescription('Enterasys 16 slot modular chassis frame for the Matrix X.')
etsysOidPhyX8xC = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 324))
if mibBuilder.loadTexts: etsysOidPhyX8xC.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyX8xC.setDescription('Enterasys 8 slot modular chassis frame for the Matrix X.')
etsysOidPhyX4xC = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 325))
if mibBuilder.loadTexts: etsysOidPhyX4xC.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyX4xC.setDescription('Enterasys 4 slot modular chassis frame for the Matrix X.')
etsysOidPhyX16Backplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 326))
if mibBuilder.loadTexts: etsysOidPhyX16Backplane.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyX16Backplane.setDescription('Enterasys backplane for the 16 Slot Matrix X chassis.')
etsysOidPhyX8Backplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 327))
if mibBuilder.loadTexts: etsysOidPhyX8Backplane.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyX8Backplane.setDescription('Enterasys backplane for the 8 Slot Matrix X chassis.')
etsysOidPhyX4Backplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 328))
if mibBuilder.loadTexts: etsysOidPhyX4Backplane.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyX4Backplane.setDescription('Enterasys backplane for the 4 Slot Matrix X chassis.')
etsysOidPhyXxFan = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 329))
if mibBuilder.loadTexts: etsysOidPhyXxFan.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXxFan.setDescription('Enterasys fan assembly for the Matrix X chassis.')
etsysOidPhyXxAC = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 330))
if mibBuilder.loadTexts: etsysOidPhyXxAC.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXxAC.setDescription('Enterasys 1200 Watt AC power supply for the Matrix X chassis.')
etsysOidPhyXxCMx00 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 331))
if mibBuilder.loadTexts: etsysOidPhyXxCMx00.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXxCMx00.setDescription('Enterasys control module for the Matrix X16 and X8.')
etsysOidPhyX4xCMFx160x00 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 332))
if mibBuilder.loadTexts: etsysOidPhyX4xCMFx160x00.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyX4xCMFx160x00.setDescription('Enterasys control fabric module for the Matrix X4 with 10 1000BASE-X SFP ports.')
etsysOidPhyX16xF640 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 333))
if mibBuilder.loadTexts: etsysOidPhyX16xF640.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyX16xF640.setDescription('Enterasys 640 Gbps fabric module for the Matrix X16.')
etsysOidPhyX8xF320 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 334))
if mibBuilder.loadTexts: etsysOidPhyX8xF320.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyX8xF320.setDescription('Enterasys 320 Gbps fabric module for the Matrix X8.')
etsysOidPhyXxM2x00 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 335))
if mibBuilder.loadTexts: etsysOidPhyXxM2x00.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXxM2x00.setDescription('Enterasys Matrix X I/O module with 2 10GBASE-X XFP ports.')
etsysOidPhyXxG32x00 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 336))
if mibBuilder.loadTexts: etsysOidPhyXxG32x00.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXxG32x00.setDescription('Enterasys Matrix X I/O module with 32 1000BASE-X SFP ports.')
etsysOidPhyXxT48x01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 337))
if mibBuilder.loadTexts: etsysOidPhyXxT48x01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXxT48x01.setDescription('Enterasys Matrix X I/O module with 48 1000BASE-T RJ45 ports.')
etsysOidPhyXxM2x01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 338))
if mibBuilder.loadTexts: etsysOidPhyXxM2x01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXxM2x01.setDescription('Enterasys Matrix X I/O module with 2 10GBASE-X XFP ports.')
etsysOidPhyXxM4x01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 339))
if mibBuilder.loadTexts: etsysOidPhyXxM4x01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXxM4x01.setDescription('Enterasys Matrix X I/O module with 4 10GBASE-X XFP ports.')
etsysOidPhyXxG20x01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 340))
if mibBuilder.loadTexts: etsysOidPhyXxG20x01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXxG20x01.setDescription('Enterasys Matrix X I/O module with 20 1000BASE-X SFP ports.')
etsysOidPhyXxG40x01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 341))
if mibBuilder.loadTexts: etsysOidPhyXxG40x01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXxG40x01.setDescription('Enterasys Matrix X I/O module with 40 1000BASE-X SFP ports.')
etsysOidPhyXIOModuleSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 342))
if mibBuilder.loadTexts: etsysOidPhyXIOModuleSlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXIOModuleSlot.setDescription('Enterasys I/O module slot for the Matrix X.')
etsysOidPhyXControlModuleSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 343))
if mibBuilder.loadTexts: etsysOidPhyXControlModuleSlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXControlModuleSlot.setDescription('Enterasys control module slot for the Matrix X.')
etsysOidPhyXFabricModuleSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 344))
if mibBuilder.loadTexts: etsysOidPhyXFabricModuleSlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXFabricModuleSlot.setDescription('Enterasys fabric module slot for the Matrix X.')
etsysOidPhyXPowerSupplySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 345))
if mibBuilder.loadTexts: etsysOidPhyXPowerSupplySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXPowerSupplySlot.setDescription('Enterasys power supply slot for the Matrix X.')
etsysOidPhyXFanTraySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 346))
if mibBuilder.loadTexts: etsysOidPhyXFanTraySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXFanTraySlot.setDescription('Enterasys fan tray slot for the Matrix X.')
etsysOidPhySFPxGBIC = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 347))
if mibBuilder.loadTexts: etsysOidPhySFPxGBIC.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySFPxGBIC.setDescription('Enterasys Gigabit Ethernet SFP GBIC port.')
etsysOidPhyXFPxGBIC = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 348))
if mibBuilder.loadTexts: etsysOidPhyXFPxGBIC.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXFPxGBIC.setDescription('Enterasys 10 Gigabit Ethernet XFP GBIC port.')
etsysOidPhyXxT32x00 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 349))
if mibBuilder.loadTexts: etsysOidPhyXxT32x00.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXxT32x00.setDescription('Enterasys Matrix X I/O module with 32 1000BASE-T RJ45 ports.')
etsysOidPhyC2G134x24P = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 350))
if mibBuilder.loadTexts: etsysOidPhyC2G134x24P.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyC2G134x24P.setDescription('Enterasys Matrix C2 24 port RJ21 1000BASE-T Gigabit Ethernet stackable switch, with four Mini-GBIC ports. Power over Ethernet is supported on the 24 1000BASE-T ports.')
etsysOidPhyXxGT16x00 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 351))
if mibBuilder.loadTexts: etsysOidPhyXxGT16x00.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXxGT16x00.setDescription('Enterasys Matrix X 16 port I/O module with 8 1000BASE-X SFP ports and either an additional 8 1000BASE-X SFP or 8 1000BASE-T RJ45 ports.')
etsysOidPhyGigEthIntNEMPort = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 352))
if mibBuilder.loadTexts: etsysOidPhyGigEthIntNEMPort.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyGigEthIntNEMPort.setDescription('Enterasys 1000BASE-X Gigabit Ethernet Port on an Integrated Processor NEM.')
etsysOidPhy7SxDSNSA7x01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 353))
if mibBuilder.loadTexts: etsysOidPhy7SxDSNSA7x01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7SxDSNSA7x01.setDescription('Enterasys 2 Port Mini-GBIC Gigabit Ethernet Uplink Module with Integrated Security Processor and Dragon Security Software using an external power supply.')
etsysOidPhy7SxNSTAGx01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 354))
if mibBuilder.loadTexts: etsysOidPhy7SxNSTAGx01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7SxNSTAGx01.setDescription('Enterasys 2 Port Mini-GBIC Gigabit Ethernet Uplink Module with Integrated Security Processor and TAG Security Software using an external power supply.')
etsysOidPhyXxM8x01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 355))
if mibBuilder.loadTexts: etsysOidPhyXxM8x01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyXxM8x01.setDescription('Enterasys Matrix X I/O module with 8 10GBASE-X XFP ports.')
etsysOidPhy7SxDSNSA7x01NPS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 356))
if mibBuilder.loadTexts: etsysOidPhy7SxDSNSA7x01NPS.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7SxDSNSA7x01NPS.setDescription('Enterasys 2 Port Mini-GBIC Gigabit Ethernet Uplink Module with Integrated Security Processor and Dragon Security Software.')
etsysOidPhy7SxNSTAGx01xNPS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 357))
if mibBuilder.loadTexts: etsysOidPhy7SxNSTAGx01xNPS.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7SxNSTAGx01xNPS.setDescription('Enterasys 2 Port Mini-GBIC Gigabit Ethernet Uplink Module with Integrated Security Processor and TAG Security Software.')
etsysOidPhy9603805 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 358))
if mibBuilder.loadTexts: etsysOidPhy9603805.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy9603805.setDescription('Enterasys 2 Port Mini-GBIC Gigabit Ethernet Uplink Module with Integrated Security Processor using an external power supply.')
etsysOidPhy9603806 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 359))
if mibBuilder.loadTexts: etsysOidPhy9603806.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy9603806.setDescription('Enterasys 2 Port Mini-GBIC Gigabit Ethernet Uplink Module with Integrated Security Processor.')
etsysOidPhyC2G170x24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 360))
if mibBuilder.loadTexts: etsysOidPhyC2G170x24.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyC2G170x24.setDescription('Enterasys SecureStack C2 24 port 1000BASE-X SFP ports.')
etsysOidPhy7G4082x25 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 361))
if mibBuilder.loadTexts: etsysOidPhy7G4082x25.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7G4082x25.setDescription('Enterasys 24 port 1000BASE-T Gigabit Ethernet module with RJ45 connectors, one uplink slot and no FTM backplane.')
etsysOidPhyI3Hx12TX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 362))
if mibBuilder.loadTexts: etsysOidPhyI3Hx12TX.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyI3Hx12TX.setDescription('Enterasys Industrial 12 port 100BASE-TX I/O module with RJ45 connectors.')
etsysOidPhyI3Hx4FXxMM = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 363))
if mibBuilder.loadTexts: etsysOidPhyI3Hx4FXxMM.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyI3Hx4FXxMM.setDescription('Enterasys Industrial 4 port 100BASE-FX I/O module for multi-mode fiber.')
etsysOidPhyI3Hx8FXxMM = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 364))
if mibBuilder.loadTexts: etsysOidPhyI3Hx8FXxMM.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyI3Hx8FXxMM.setDescription('Enterasys Industrial 8 port 100BASE-FX I/O module for multi-mode fiber.')
etsysOidPhyI3Hx8TXx2FX = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 365))
if mibBuilder.loadTexts: etsysOidPhyI3Hx8TXx2FX.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyI3Hx8TXx2FX.setDescription('Enterasys Industrial 10 port Fast Ethernet I/O module with 8 100BASE-TX RJ45 connectors and 2 100BASE-FX fiber ports.')
etsysOidPhy7Gx6MGBICxB = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 366))
if mibBuilder.loadTexts: etsysOidPhy7Gx6MGBICxB.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7Gx6MGBICxB.setDescription('Enterasys 6 port 1000BASE-X Gigabit Ethernet and 100BASE-FX Fast Ethernet uplink module with Mini-GBIC connectors.')
etsysOidPhy7Kx2XFPx6MGBIC = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 367))
if mibBuilder.loadTexts: etsysOidPhy7Kx2XFPx6MGBIC.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7Kx2XFPx6MGBIC.setDescription('Enterasys 2 port 10 Gigabit Ethernet with XFP connectors, 6 port 1000BASE-X Gigabit Ethernet and 100BASE-FX Fast Ethernet with Mini-GBIC connectors uplink module.')
etsysOidPhy7GR4280x19 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 368))
if mibBuilder.loadTexts: etsysOidPhy7GR4280x19.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7GR4280x19.setDescription('Enterasys 18 port 1000BASE-X Gigabit Ethernet module with Mini-GBIC connectors and one uplink slot.')
etsysOidPhy7GR4270x12 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 369))
if mibBuilder.loadTexts: etsysOidPhy7GR4270x12.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7GR4270x12.setDescription('Enterasys 12 port 1000BASE-X Gigabit Ethernet module with Mini-GBIC connectors.')
etsysOidPhy7GR4202x30 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 370))
if mibBuilder.loadTexts: etsysOidPhy7GR4202x30.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7GR4202x30.setDescription('Enterasys 30 port 1000BASE-T Gigabit Ethernet module with RJ45 connectors.')
etsysOidPhy7KR4290x02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 371))
if mibBuilder.loadTexts: etsysOidPhy7KR4290x02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7KR4290x02.setDescription('Enterasys 2 port 10 Gigabit Ethernet module with XENPAK connectors.')
etsysOidPhyNoXfp = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 372))
if mibBuilder.loadTexts: etsysOidPhyNoXfp.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNoXfp.setDescription('Enterasys 10GBASE slot with no XFP present.')
etsysOidPhyMGBICxLC04 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 373))
if mibBuilder.loadTexts: etsysOidPhyMGBICxLC04.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyMGBICxLC04.setDescription('Enterasys MGBIC-LC04, a 100BASE-FX MMF Mini-GBIC with an LC connector.')
etsysOidPhy10GbExSRxXFP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 374))
if mibBuilder.loadTexts: etsysOidPhy10GbExSRxXFP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExSRxXFP.setDescription('Enterasys 10GBASE-SR-XFP, XFP 10-Gigabit Ethernet LAN Interface with 850 nanometer serial port for 10-Gigabit Ethernet over multimode fiber (MMF) via an LC connector.')
etsysOidPhy10GbExLRxXFP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 375))
if mibBuilder.loadTexts: etsysOidPhy10GbExLRxXFP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExLRxXFP.setDescription('Enterasys 10GBASE-LR-XFP, XFP 10-Gigabit Ethernet LAN Interface with 1310 nanometer serial port for 10-Gigabit Ethernet over single-mode fiber (SMF) via an LC connector.')
etsysOidPhy10GbExERxXFP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 376))
if mibBuilder.loadTexts: etsysOidPhy10GbExERxXFP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExERxXFP.setDescription('Enterasys 10GBASE-ER-XFP, XFP 10-Gigabit Ethernet LAN Interface with 1550 nanometer serial port for 10-Gigabit Ethernet over single-mode fiber (SMF) via an LC connector.')
etsysOidPhy10GbExCX4xXFP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 377))
if mibBuilder.loadTexts: etsysOidPhy10GbExCX4xXFP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExCX4xXFP.setDescription('Enterasys 10GBASE-CX4-XFP, XFP 10-Gigabit Ethernet LAN Interface with serial port for 10-Gigabit Ethernet over CX4 rated copper cable.')
etsysOidPhy10GbExCX4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 378))
if mibBuilder.loadTexts: etsysOidPhy10GbExCX4.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExCX4.setDescription('Enterasys 10GBASE-CX4, XENPAK 10-Gigabit Ethernet LAN Interface with serial port for 10-Gigabit Ethernet over CX4 rated copper cable.')
etsysOidPhy10GbExSWxXFP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 379))
if mibBuilder.loadTexts: etsysOidPhy10GbExSWxXFP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExSWxXFP.setDescription('Enterasys 10GBASE-SW-XFP, XFP 10-Gigabit Ethernet WAN Interface with 850 nanometer serial port for 10-Gigabit Ethernet over multimode fiber (MMF) via an LC connector.')
etsysOidPhy10GbExLWxXFP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 380))
if mibBuilder.loadTexts: etsysOidPhy10GbExLWxXFP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExLWxXFP.setDescription('Enterasys 10GBASE-LW-XFP, XFP 10-Gigabit Ethernet WAN Interface with 1310 nanometer serial port for 10-Gigabit Ethernet over single-mode fiber (SMF) via an LC connector.')
etsysOidPhy10GbExEWxXFP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 381))
if mibBuilder.loadTexts: etsysOidPhy10GbExEWxXFP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExEWxXFP.setDescription('Enterasys 10GBASE-EW-XFP, XFP 10-Gigabit Ethernet WAN Interface with 1550 nanometer serial port for 10-Gigabit Ethernet over single-mode fiber (SMF) via an LC connector.')
etsysOidPhy10GbExLX4xXFP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 382))
if mibBuilder.loadTexts: etsysOidPhy10GbExLX4xXFP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExLX4xXFP.setDescription('Enterasys 10GBASE-LX4-XFP, XFP 10-Gigabit Ethernet LAN Interface with 4 channel WWDM 1310 nanometer serial port for 10-Gigabit Ethernet over multimode fiber (MMF) and single-mode fiber (SMF) via an SC connector.')
etsysOidPhy10GbExZRxXFP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 383))
if mibBuilder.loadTexts: etsysOidPhy10GbExZRxXFP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExZRxXFP.setDescription('Enterasys 10GBASE-ZR-XFP, XFP 10-Gigabit Ethernet LAN Interface with 1550 nanometer serial port for long haul 10-Gigabit Ethernet over single-mode fiber (SMF) via an LC connector.')
etsysOidPhy10GbExZWxXFP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 384))
if mibBuilder.loadTexts: etsysOidPhy10GbExZWxXFP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExZWxXFP.setDescription('Enterasys 10GBASE-ZW-XFP, XFP 10-Gigabit Ethernet WAN Interface with 1550 nanometer serial port for long haul 10-Gigabit Ethernet over single-mode fiber (SMF) via an LC connector.')
etsysOidPhy10GbExZR = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 385))
if mibBuilder.loadTexts: etsysOidPhy10GbExZR.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExZR.setDescription('Enterasys 10GBASE-ZR, XENPAK 10-Gigabit Ethernet LAN Interface with 1550 nanometer serial port for long haul 10-Gigabit Ethernet over single-mode fiber (SMF) via an SC connector.')
etsysOidPhy10GbExZW = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 386))
if mibBuilder.loadTexts: etsysOidPhy10GbExZW.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExZW.setDescription('Enterasys 10GBASE-ZW, XENPAK 10-Gigabit Ethernet WAN Interface with 1550 nanometer serial port for long haul 10-Gigabit Ethernet over single-mode fiber (SMF) via an SC connector.')
etsysOidPhyMGBICxLC05 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 387))
if mibBuilder.loadTexts: etsysOidPhyMGBICxLC05.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyMGBICxLC05.setDescription('Enterasys MGBIC-LC05, a 100BASE-LX10 SMF Mini-GBIC with an LC connector.')
etsysOidPhy7K4297x02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 388))
if mibBuilder.loadTexts: etsysOidPhy7K4297x02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7K4297x02.setDescription('Enterasys 2 port 10 Gigabit Ethernet module with XFP connectors.')
etsysOidPhy7K4297x04 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 389))
if mibBuilder.loadTexts: etsysOidPhy7K4297x04.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7K4297x04.setDescription('Enterasys 4 port 10 Gigabit Ethernet module with XFP connectors.')
etsysOidPhy7KR4297x02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 390))
if mibBuilder.loadTexts: etsysOidPhy7KR4297x02.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7KR4297x02.setDescription('Enterasys 2 port 10 Gigabit Ethernet module with XFP connectors.')
etsysOidPhy7KR4297x04 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 391))
if mibBuilder.loadTexts: etsysOidPhy7KR4297x04.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7KR4297x04.setDescription('Enterasys 4 port 10 Gigabit Ethernet module with XFP connectors.')
etsysOidPhy7S4280x19 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 392))
if mibBuilder.loadTexts: etsysOidPhy7S4280x19.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7S4280x19.setDescription('Enterasys 18 port 1000BASE-X Gigabit Ethernet NAC module with Mini-GBIC connectors and one uplink slot.')
etsysOidPhy2S4082x25 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 393))
if mibBuilder.loadTexts: etsysOidPhy2S4082x25.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy2S4082x25.setDescription('Enterasys 24 port 1000BASE-T Gigabit Ethernet NAC module with RJ45 connectors, one uplink slot and no FTM backplane connectivity.')
etsysOidPhy7SxNSNACGx01xNPS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 394))
if mibBuilder.loadTexts: etsysOidPhy7SxNSNACGx01xNPS.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7SxNSNACGx01xNPS.setDescription('Enterasys 2 Port Mini-GBIC Gigabit Ethernet Uplink Module with Integrated Security Processor and NAC Security Software.')
etsysOidPhyMGBICxLC07 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 395))
if mibBuilder.loadTexts: etsysOidPhyMGBICxLC07.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyMGBICxLC07.setDescription('Enterasys MGBIC-LC07, a 1000BASE-EZX (110Km Extended Long Reach) SMF Mini-GBIC via LC connector.')
etsysOidPhy7SxNACGx01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 396))
if mibBuilder.loadTexts: etsysOidPhy7SxNACGx01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7SxNACGx01.setDescription('Enterasys 2 Port Mini-GBIC Gigabit Ethernet Uplink Module with Dual Core Integrated Security Processor and NAC Security Software.')
etsysOidPhy7SxC20N = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 397))
if mibBuilder.loadTexts: etsysOidPhy7SxC20N.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7SxC20N.setDescription('Enterasys 2 Port Mini-GBIC Gigabit Ethernet Uplink Module with Integrated HiPath Wireless C20N Controller with support for up to 32 Access Points in normal mode or 64 Access Points in failover mode.')
etsysOidPhy10GbExSRxSFPP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 398))
if mibBuilder.loadTexts: etsysOidPhy10GbExSRxSFPP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExSRxSFPP.setDescription('Enterasys SFP+ 10GBASE-SR Ethernet interface with 850nm Short Wave Length optics for IEEE 802.3 MM fiber (MMF) via a LC connector. 33/82M fiber length.')
etsysOidPhy10GbExLRxSFPP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 399))
if mibBuilder.loadTexts: etsysOidPhy10GbExLRxSFPP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExLRxSFPP.setDescription('Enterasys SFP+ 10GBASE-LR Ethernet interface with 1310nm Long Wave Length optics for IEEE 802.3 SM fiber (SMF) via a LC connector. 10Km fiber length.')
etsysOidPhy10GbExLRMxSFPP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 400))
if mibBuilder.loadTexts: etsysOidPhy10GbExLRMxSFPP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExLRMxSFPP.setDescription('Enterasys SFP+ 10GBASE-LRM Ethernet interface with 1310nm Long Wave Length optics for IEEE 802.3 MM fiber (MMF) via a LC connector. 220M fiber length.')
etsysOidPhy10GbExC01xSFPP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 401))
if mibBuilder.loadTexts: etsysOidPhy10GbExC01xSFPP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExC01xSFPP.setDescription('Enterasys SFP+ 10 Gigabit Ethernet interface with pluggable copper cable assembly and integrated SFP+ transceiver. 1M cable length.')
etsysOidPhy10GbExC03xSFPP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 402))
if mibBuilder.loadTexts: etsysOidPhy10GbExC03xSFPP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExC03xSFPP.setDescription('Enterasys SFP+ 10 Gigabit Ethernet interface with pluggable copper cable assembly and integrated SFP+ transceiver. 3M cable length.')
etsysOidPhy10GbExC10xSFPP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 403))
if mibBuilder.loadTexts: etsysOidPhy10GbExC10xSFPP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExC10xSFPP.setDescription('Enterasys SFP+ 10 Gigabit Ethernet interface with pluggable copper cable assembly and integrated SFP+ transceiver. 10M cable length.')
etsysOidPhy10GbExC20xSFPP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 404))
if mibBuilder.loadTexts: etsysOidPhy10GbExC20xSFPP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExC20xSFPP.setDescription('Enterasys SFP+ 10 Gigabit Ethernet interface with pluggable copper cable assembly and integrated SFP+ transceiver. 20M cable length.')
etsysOidPhySFPPNoConnector = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 405))
if mibBuilder.loadTexts: etsysOidPhySFPPNoConnector.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySFPPNoConnector.setDescription('Enterasys SFP+ interface with no physical SFP+ connector present.')
etsysOidPhy10GbExLRMxXFP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 406))
if mibBuilder.loadTexts: etsysOidPhy10GbExLRMxXFP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GbExLRMxXFP.setDescription('Enterasys XFP 10GBASE-LRM Ethernet interface with 1310nm Long Wave Length optics for IEEE 802.3 MM fiber (MMF) via a LC connector. 220M fiber length.')
etsysOidPhy7SxDNSAx01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 407))
if mibBuilder.loadTexts: etsysOidPhy7SxDNSAx01.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy7SxDNSAx01.setDescription('Enterasys 2 Port Mini-GBIC Gigabit Ethernet Uplink Module with Dual Core Integrated Security Processor and Dragon Security Software.')
etsysOidPhyS3xCHASSIS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 408))
if mibBuilder.loadTexts: etsysOidPhyS3xCHASSIS.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyS3xCHASSIS.setDescription('Enterasys 3 slot modular chassis frame for the S-Series family.')
etsysOidPhyS4xCHASSIS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 409))
if mibBuilder.loadTexts: etsysOidPhyS4xCHASSIS.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyS4xCHASSIS.setDescription('Enterasys 4 slot modular chassis frame for the S-Series family.')
etsysOidPhyS8xCHASSIS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 410))
if mibBuilder.loadTexts: etsysOidPhyS8xCHASSIS.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyS8xCHASSIS.setDescription('Enterasys 8 slot modular chassis frame for the S-Series family.')
etsysOidPhySxFAN = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 411))
if mibBuilder.loadTexts: etsysOidPhySxFAN.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySxFAN.setDescription('Enterasys S-Series fan tray for the S3, S4 and S8 chassis.')
etsysOidPhySxACxPS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 412))
if mibBuilder.loadTexts: etsysOidPhySxACxPS.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySxACxPS.setDescription('Enterasys S-Series 1200/1600W AC power supplies for the S3, S4 and S8 chassis.')
etsysOidPhySxPOExPS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 413))
if mibBuilder.loadTexts: etsysOidPhySxPOExPS.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySxPOExPS.setDescription('Enterasys S-Series 1200/2000W POE power supplies for the S-POE-4BAY and S-POE-8BAY power subsystems.')
etsysOidPhySxPOEx4BAY = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 414))
if mibBuilder.loadTexts: etsysOidPhySxPOEx4BAY.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySxPOEx4BAY.setDescription('Enterasys S-Series 4 slot POE power subsystem for the S3, S4 and S8 chassis.')
etsysOidPhySxPOEx8BAY = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 415))
if mibBuilder.loadTexts: etsysOidPhySxPOEx8BAY.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySxPOEx8BAY.setDescription('Enterasys S-Series 8 slot POE power subsystem for the S8 chassis.')
etsysOidPhySPowerSupplySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 416))
if mibBuilder.loadTexts: etsysOidPhySPowerSupplySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySPowerSupplySlot.setDescription('Enterasys S-Series chassis power supply slot for the S3, S4 and S8 chassis.')
etsysOidPhySFanTraySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 417))
if mibBuilder.loadTexts: etsysOidPhySFanTraySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySFanTraySlot.setDescription('Enterasys S-Series fan tray slot for the S3, S4 and S8 chassis.')
etsysOidPhySIOModuleSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 418))
if mibBuilder.loadTexts: etsysOidPhySIOModuleSlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySIOModuleSlot.setDescription('Enterasys S-Series I/O module slot for the S3, S4 and S8 chassis.')
etsysOidPhySFabricModuleSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 419))
if mibBuilder.loadTexts: etsysOidPhySFabricModuleSlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySFabricModuleSlot.setDescription('Enterasys S-Series Fabric module slot for the S4 and S8 chassis.')
etsysOidPhySPoEPowerSupplySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 420))
if mibBuilder.loadTexts: etsysOidPhySPoEPowerSupplySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySPoEPowerSupplySlot.setDescription('Enterasys S-Series PoE power supply slot for the S-POE-4BAY and S-POE-8BAY PoE power subsystems.')
etsysOidPhySK1208x0808xF6 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 421))
if mibBuilder.loadTexts: etsysOidPhySK1208x0808xF6.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySK1208x0808xF6.setDescription('Enterasys S-Series S150 Class I/O-Fabric Module with 8 ports of 10GBASE-X Ethernet via SFP+ and two Type 2 options slots.')
etsysOidPhyST4106x0348xF6 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 422))
if mibBuilder.loadTexts: etsysOidPhyST4106x0348xF6.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyST4106x0348xF6.setDescription('Enterasys S-Series S130 Class I/O-Fabric Module with 48 ports of 1000BASE-T Ethernet via RJ45 with PoE (802.3at) and one Type 2 option slot.')
etsysOidPhyST1206x0848xF6 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 423))
if mibBuilder.loadTexts: etsysOidPhyST1206x0848xF6.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyST1206x0848xF6.setDescription('Enterasys S-Series S150 Class I/O-Fabric Module with 48 ports of 1000BASE-T Ethernet via RJ45 with PoE (802.3at) and two Type 2 option slots.')
etsysOidPhySG1201x0848xF6 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 424))
if mibBuilder.loadTexts: etsysOidPhySG1201x0848xF6.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySG1201x0848xF6.setDescription('Enterasys S-Series S150 Class I/O-Fabric Module with 48 ports of 1000BASE-X Ethernet via SFP and two Type 2 option slots.')
etsysOidPhySK1008x0816 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 425))
if mibBuilder.loadTexts: etsysOidPhySK1008x0816.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySK1008x0816.setDescription('Enterasys S-Series S150 Class I/O Module with 16 ports of 10GBASE-X Ethernet via SFP+ connectors.')
etsysOidPhyST4106x0248 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 426))
if mibBuilder.loadTexts: etsysOidPhyST4106x0248.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyST4106x0248.setDescription('Enterasys S-Series S130 Class I/O Module with 48 ports of 1000BASE-T Ethernet via RJ45 with PoE (802.3at) and one Type 1 option slots.')
etsysOidPhyST4006x0272 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 427))
if mibBuilder.loadTexts: etsysOidPhyST4006x0272.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyST4006x0272.setDescription('Enterasys S-Series S130 Class I/O Module with 72 ports of 1000BASE-T Ethernet via RJ45 with PoE (802.3at).')
etsysOidPhyST1206x0848 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 428))
if mibBuilder.loadTexts: etsysOidPhyST1206x0848.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyST1206x0848.setDescription('Enterasys S-Series S150 Class I/O Module with 48 ports of 1000BASE-T Ethernet via RJ45 with PoE (802.3at) and two Type 2 option slots.')
etsysOidPhySG4101x0248 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 429))
if mibBuilder.loadTexts: etsysOidPhySG4101x0248.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySG4101x0248.setDescription('Enterasys S-Series S130 Class I/O Module with 48 ports of 1000BASE-X Ethernet via SFP and one Type 1 option slot.')
etsysOidPhySG1201x0848 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 430))
if mibBuilder.loadTexts: etsysOidPhySG1201x0848.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySG1201x0848.setDescription('Enterasys S-Series S150 Class I/O Module with 48 ports of 1000BASE-X Ethernet via SFP and two Type 2 option slots.')
etsysOidPhySOptModType1Slot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 431))
if mibBuilder.loadTexts: etsysOidPhySOptModType1Slot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySOptModType1Slot.setDescription('Enterasys S-Series Type 1 Option Module slot.')
etsysOidPhySOptModType2Slot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 432))
if mibBuilder.loadTexts: etsysOidPhySOptModType2Slot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySOptModType2Slot.setDescription('Enterasys S-Series Type 2 Option Module slot.')
etsysOidPhySOK1208x0104 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 433))
if mibBuilder.loadTexts: etsysOidPhySOK1208x0104.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySOK1208x0104.setDescription('Enterasys S-Series Type 1 Option Module with 4 ports of 10GBASE-X Ethernet via SFP+ connectors.')
etsysOidPhySOK1208x0102 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 434))
if mibBuilder.loadTexts: etsysOidPhySOK1208x0102.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySOK1208x0102.setDescription('Enterasys S-Series Type 1 Option Module with 2 ports of 10GBASE-X Ethernet via SFP+ connectors.')
etsysOidPhySOK1208x0204 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 435))
if mibBuilder.loadTexts: etsysOidPhySOK1208x0204.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySOK1208x0204.setDescription('Enterasys S-Series Type 2 Option Module with 4 ports of 10GBASE-X Ethernet via SFP+ connectors.')
etsysOidPhySOG1201x0112 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 436))
if mibBuilder.loadTexts: etsysOidPhySOG1201x0112.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySOG1201x0112.setDescription('Enterasys S-Series Type 1 Option Module with 12 ports of 1000BASE-X Ethernet via SFP connectors.')
etsysOidPhyNN0100x0100xF2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 437))
if mibBuilder.loadTexts: etsysOidPhyNN0100x0100xF2.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNN0100x0100xF2.setDescription('Enterasys NGN-Series I/O-Fabric with one NGN option module slot.')
etsysOidPhyNT4106x0248 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 438))
if mibBuilder.loadTexts: etsysOidPhyNT4106x0248.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNT4106x0248.setDescription('Enterasys NGN-Series S130 Class I/O Module with 48 ports of 1000BASE-T Ethernet via RJ45 with PoE (802.3at) and one NGN option slot.')
etsysOidPhyNT4006x0272 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 439))
if mibBuilder.loadTexts: etsysOidPhyNT4006x0272.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNT4006x0272.setDescription('Enterasys NGN-Series S130 Class I/O Module with 72 ports of 1000BASE-T Ethernet via RJ45 with PoE (802.3at).')
etsysOidPhyNT1006x0448 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 440))
if mibBuilder.loadTexts: etsysOidPhyNT1006x0448.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNT1006x0448.setDescription('Enterasys NGN-Series S150 Class I/O Module with 48 ports of 1000BASE-T Ethernet via RJ45 with PoE (802.3at).')
etsysOidPhyNK1008x0408 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 441))
if mibBuilder.loadTexts: etsysOidPhyNK1008x0408.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNK1008x0408.setDescription('Enterasys NGN-Series S150 Class I/O Module with 8 ports of 10GBASE-X Ethernet via SFP+.')
etsysOidPhyNG1001x0448 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 442))
if mibBuilder.loadTexts: etsysOidPhyNG1001x0448.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNG1001x0448.setDescription('Enterasys NGN-Series S150 Class I/O Module with 48 ports of 1000BASE-X Ethernet via SFP.')
etsysOidPhyNG4101x0248 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 443))
if mibBuilder.loadTexts: etsysOidPhyNG4101x0248.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNG4101x0248.setDescription('Enterasys NGN-Series S130 Class I/O Module with 48 ports of 1000BASE-X Ethernet via SFP and one NGN option slot.')
etsysOidPhyNGNOptModSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 444))
if mibBuilder.loadTexts: etsysOidPhyNGNOptModSlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNGNOptModSlot.setDescription('Enterasys NGN-Series Option Module slot.')
etsysOidPhyNOK1208x0102 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 445))
if mibBuilder.loadTexts: etsysOidPhyNOK1208x0102.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNOK1208x0102.setDescription('Enterasys NGN-Series Option Module with 2 ports of 10GBASE-X Ethernet via SFP+ connectors.')
etsysOidPhyNOK1208x0104 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 446))
if mibBuilder.loadTexts: etsysOidPhyNOK1208x0104.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNOK1208x0104.setDescription('Enterasys NGN-Series Option Module with 4 ports of 10GBASE-X Ethernet via SFP+ connectors.')
etsysOidPhyNOG1201x0112 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 447))
if mibBuilder.loadTexts: etsysOidPhyNOG1201x0112.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNOG1201x0112.setDescription('Enterasys NGN-Series Option Module with 12 ports of 1000BASE-X Ethernet via SFP connectors.')
etsysOidPhySSAxACxPSx600W = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 448))
if mibBuilder.loadTexts: etsysOidPhySSAxACxPSx600W.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSAxACxPSx600W.setDescription('Enterasys S-Series Standalone (SSA) 625W AC power supply.')
etsysOidPhySSAxACxPSx1000W = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 449))
if mibBuilder.loadTexts: etsysOidPhySSAxACxPSx1000W.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSAxACxPSx1000W.setDescription('Enterasys S-Series Standalone (SSA) 1000W AC and PoE power supply.')
etsysOidPhySSAPowerSupplySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 450))
if mibBuilder.loadTexts: etsysOidPhySSAPowerSupplySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSAPowerSupplySlot.setDescription('Enterasys S-Series Standalone (SSA) power supply slot.')
etsysOidPhy10GBxERxSFPP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 451))
if mibBuilder.loadTexts: etsysOidPhy10GBxERxSFPP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GBxERxSFPP.setDescription('Enterasys SFP+ 10GBASE-ER Ethernet interface with 1440 nm Long Wave Length optics for IEEE 802.3 SM fiber (SMF) via a LC connector. 40 Km fiber length.')
etsysOidPhyUSBAPort = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 452))
if mibBuilder.loadTexts: etsysOidPhyUSBAPort.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyUSBAPort.setDescription('Enterasys USB-A receptacle.')
etsysOidPhyUSBMicroABPort = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 453))
if mibBuilder.loadTexts: etsysOidPhyUSBMicroABPort.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyUSBMicroABPort.setDescription('Enterasys USB Micro-AB receptacle.')
etsysOidPhyS8Backplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 454))
if mibBuilder.loadTexts: etsysOidPhyS8Backplane.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyS8Backplane.setDescription('Enterasys S-Series backplane for the S8 chassis.')
etsysOidPhyS4Backplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 455))
if mibBuilder.loadTexts: etsysOidPhyS4Backplane.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyS4Backplane.setDescription('Enterasys S-Series backplane for the S4 chassis.')
etsysOidPhyS3Backplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 456))
if mibBuilder.loadTexts: etsysOidPhyS3Backplane.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyS3Backplane.setDescription('Enterasys S-Series backplane for the S3 chassis.')
etsysOidPhyN5Backplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 457))
if mibBuilder.loadTexts: etsysOidPhyN5Backplane.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyN5Backplane.setDescription('Enterasys backplane for the N5 chassis.')
etsysOidPhyN3Backplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 458))
if mibBuilder.loadTexts: etsysOidPhyN3Backplane.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyN3Backplane.setDescription('Enterasys backplane for the N3 chassis.')
etsysOidPhyN1Backplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 459))
if mibBuilder.loadTexts: etsysOidPhyN1Backplane.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyN1Backplane.setDescription('Enterasys backplane for the N1 chassis.')
etsysOidPhySOT1206x0112 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 460))
if mibBuilder.loadTexts: etsysOidPhySOT1206x0112.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySOT1206x0112.setDescription('Enterasys S-Series Type 1 Option Module with 12 ports of 1000BASE-T Ethernet via RJ45 with PoE (802.3at).')
etsysOidPhyNOT1206x0112 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 461))
if mibBuilder.loadTexts: etsysOidPhyNOT1206x0112.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNOT1206x0112.setDescription('Enterasys NGN-Series Option Module with 12 ports of 1000BASE-T Ethernet via RJ45 with PoE (802.3at).')
etsysOidPhyConsolePortUsbMicroAB = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 462))
if mibBuilder.loadTexts: etsysOidPhyConsolePortUsbMicroAB.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyConsolePortUsbMicroAB.setDescription('Enterasys local management console port via a Serial-to-USB Bridge with a USB Micro-AB receptacle.')
etsysOidPhySSAxFAN = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 463))
if mibBuilder.loadTexts: etsysOidPhySSAxFAN.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySSAxFAN.setDescription('Enterasys S-Series Standalone (SSA) fan.')
etsysOidPhyNSAxFAN = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 464))
if mibBuilder.loadTexts: etsysOidPhyNSAxFAN.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNSAxFAN.setDescription('Enterasys N-Series Standalone (NSA) internal fan assembly. This assembly is not field upgradeable.')
etsysOidPhyNSAxACxPS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 465))
if mibBuilder.loadTexts: etsysOidPhyNSAxACxPS.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyNSAxACxPS.setDescription('Enterasys N-Series Standalone (NSA) internal power supply. This assembly is not field upgradeable.')
etsysOidPhyN1xFAN = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 466))
if mibBuilder.loadTexts: etsysOidPhyN1xFAN.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyN1xFAN.setDescription('Enterasys N-1 chassis internal fan assembly. This assembly is not field upgradeable.')
etsysOidPhyN1xACxPS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 467))
if mibBuilder.loadTexts: etsysOidPhyN1xACxPS.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyN1xACxPS.setDescription('Enterasys N-1 chassis internal power supply. This assembly is not field upgradeable.')
etsysOidPhy10GBxLWxSFPP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 468))
if mibBuilder.loadTexts: etsysOidPhy10GBxLWxSFPP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GBxLWxSFPP.setDescription('10Gb, Laserwire(R) SFP+ adapter for use with Laserwire cable assembly.* * The Laserwire(R) mark is a registered trademark and is the property of Finisar Corporation.')
etsysOidPhy10GBxLWxXFP = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 469))
if mibBuilder.loadTexts: etsysOidPhy10GBxLWxXFP.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GBxLWxXFP.setDescription('10Gb, Laserwire(R) XFP adapter for use with Laserwire cable assembly.* * The Laserwire(R) mark is a registered trademark and is the property of Finisar Corporation.')
etsysOidPhy10GBxLWx20 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 470))
if mibBuilder.loadTexts: etsysOidPhy10GBxLWx20.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GBxLWx20.setDescription('10Gb, 20 meter Laserwire(R) cable assembly.* * The Laserwire(R) mark is a registered trademark and is the property of Finisar Corporation.')
etsysOidPhy10GBxLWx10 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 471))
if mibBuilder.loadTexts: etsysOidPhy10GBxLWx10.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GBxLWx10.setDescription('10Gb, 10 meter Laserwire(R) cable assembly.* * The Laserwire(R) mark is a registered trademark and is the property of Finisar Corporation.')
etsysOidPhy10GBxLWx05 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 472))
if mibBuilder.loadTexts: etsysOidPhy10GBxLWx05.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GBxLWx05.setDescription('10Gb, 5 meter Laserwire(R) cable assembly.* * The Laserwire(R) mark is a registered trademark and is the property of Finisar Corporation.')
etsysOidPhy10GBxLWx03 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 473))
if mibBuilder.loadTexts: etsysOidPhy10GBxLWx03.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhy10GBxLWx03.setDescription('10Gb, 3 meter Laserwire(R) cable assembly.* * The Laserwire(R) mark is a registered trademark and is the property of Finisar Corporation.')
etsysOidPhyMGBICxBX10xD = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 474))
if mibBuilder.loadTexts: etsysOidPhyMGBICxBX10xD.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyMGBICxBX10xD.setDescription('Enterasys MGBIC-BX10-D, a 1000BASE-BX10 Downstream Single Fiber SM, Bidirectional, 1490nm Tx / 1310nm Rx, 10 km, Simplex LC SFP. This part must be paired with MGBIC-BX10-U.')
etsysOidPhyMGBICxBX10xU = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 475))
if mibBuilder.loadTexts: etsysOidPhyMGBICxBX10xU.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyMGBICxBX10xU.setDescription('Enterasys MGBIC-BX10-D, a 1000BASE-BX10 Upstream Single Fiber SM, Bidirectional, 1310nm Tx / 1490nm Rx, 10 km, Simplex LC SFP. This part must be paired with MGBIC-BX10-D.')
etsysOidPhyIncompatiblePluggable = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 476))
if mibBuilder.loadTexts: etsysOidPhyIncompatiblePluggable.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyIncompatiblePluggable.setDescription('Enterasys pluggable port slot with an incompatible pluggable module inserted.')
etsysOidPhySK5208x0808xF6 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 477))
if mibBuilder.loadTexts: etsysOidPhySK5208x0808xF6.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySK5208x0808xF6.setDescription('Enterasys S-Series S155 Class I/O-Fabric Module with 8 ports of 10GBASE-X Ethernet via SFP+ and two Type 2 options slots.')
etsysOidPhyST5206x0848xF6 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 478))
if mibBuilder.loadTexts: etsysOidPhyST5206x0848xF6.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyST5206x0848xF6.setDescription('Enterasys S-Series S155 Class I/O-Fabric Module with 48 ports of 1000BASE-T Ethernet via RJ45 with PoE (802.3at) and two Type 2 option slots.')
etsysOidPhySG5201x0848xF6 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 479))
if mibBuilder.loadTexts: etsysOidPhySG5201x0848xF6.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySG5201x0848xF6.setDescription('Enterasys S-Series S155 Class I/O-Fabric Module with 48 ports of 1000BASE-X Ethernet via SFP and two Type 2 option slots.')
etsysOidPhyK6xCHASSIS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 480))
if mibBuilder.loadTexts: etsysOidPhyK6xCHASSIS.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyK6xCHASSIS.setDescription('Enterasys 6 slot modular chassis frame for the K-Series family.')
etsysOidPhyK10xCHASSIS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 481))
if mibBuilder.loadTexts: etsysOidPhyK10xCHASSIS.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyK10xCHASSIS.setDescription('Enterasys 10 slot modular chassis frame for the K-Series family.')
etsysOidPhyK6xFAN = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 482))
if mibBuilder.loadTexts: etsysOidPhyK6xFAN.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyK6xFAN.setDescription('Enterasys K-Series fan tray for the K6 chassis.')
etsysOidPhyK10xFAN = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 483))
if mibBuilder.loadTexts: etsysOidPhyK10xFAN.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyK10xFAN.setDescription('Enterasys K-Series fan tray for the K10 chassis.')
etsysOidPhyKxACxPSx1440W = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 484))
if mibBuilder.loadTexts: etsysOidPhyKxACxPSx1440W.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyKxACxPSx1440W.setDescription('Enterasys K-Series AC and PoE power supplie, 15A, 110-240VAC input, 1400W.')
etsysOidPhyKxPOExExtConn = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 485))
if mibBuilder.loadTexts: etsysOidPhyKxPOExExtConn.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyKxPOExExtConn.setDescription('Enterasys K-Series physical power connector for an external PoE shelf.')
etsysOidPhyKPowerSupplySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 486))
if mibBuilder.loadTexts: etsysOidPhyKPowerSupplySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyKPowerSupplySlot.setDescription('Enterasys K-Series chassis power supply slot for the K6 and K10 chassis.')
etsysOidPhyK6FanTraySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 487))
if mibBuilder.loadTexts: etsysOidPhyK6FanTraySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyK6FanTraySlot.setDescription('Enterasys K-Series fan tray slot for the K6 chassis.')
etsysOidPhyK10FanTraySlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 488))
if mibBuilder.loadTexts: etsysOidPhyK10FanTraySlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyK10FanTraySlot.setDescription('Enterasys K-Series fan tray slot for the K10 chassis.')
etsysOidPhyKLineCardSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 489))
if mibBuilder.loadTexts: etsysOidPhyKLineCardSlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyKLineCardSlot.setDescription('Enterasys K-Series linecard slot for the K6 and K10 chassis.')
etsysOidPhyKFabricModuleSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 490))
if mibBuilder.loadTexts: etsysOidPhyKFabricModuleSlot.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyKFabricModuleSlot.setDescription('Enterasys K-Series Fabric Module slot for the K6 and K10 chassis.')
etsysOidPhyKK2008x0204xF1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 491))
if mibBuilder.loadTexts: etsysOidPhyKK2008x0204xF1.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyKK2008x0204xF1.setDescription('Enterasys K-Series Fabric Module with 4 ports of 10GBASE-X Ethernet via SFP+ for the K6 chassis.')
etsysOidPhyKK2008x0204xF2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 492))
if mibBuilder.loadTexts: etsysOidPhyKK2008x0204xF2.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyKK2008x0204xF2.setDescription('Enterasys K-Series Fabric Module with 4 ports of 10GBASE-X Ethernet via SFP+ for the K10 chassis.')
etsysOidPhyKK2000x0000xF1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 493))
if mibBuilder.loadTexts: etsysOidPhyKK2000x0000xF1.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyKK2000x0000xF1.setDescription('Enterasys K-Series Fabric Module for the K6 chassis.')
etsysOidPhyKK2000x0000xF2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 494))
if mibBuilder.loadTexts: etsysOidPhyKK2000x0000xF2.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyKK2000x0000xF2.setDescription('Enterasys K-Series Fabric Module for the K10 chassis.')
etsysOidPhyKT2006x0224 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 495))
if mibBuilder.loadTexts: etsysOidPhyKT2006x0224.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyKT2006x0224.setDescription('Enterasys K-Series Linecard with 24 ports of 1000BASE-T Ethernet via RJ45 with PoE (802.3at).')
etsysOidPhyKG2001x0224 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 496))
if mibBuilder.loadTexts: etsysOidPhyKG2001x0224.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyKG2001x0224.setDescription('Enterasys K-Series Linecard with 24 ports of 1000BASE-X Ethernet via SFP connectors.')
etsysOidPhyKK2008x0204 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 497))
if mibBuilder.loadTexts: etsysOidPhyKK2008x0204.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyKK2008x0204.setDescription('Enterasys K-Series Linecard with 4 ports of 10GBASE-X Ethernet via SFP+ connectors.')
etsysOidPhyK6Backplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 498))
if mibBuilder.loadTexts: etsysOidPhyK6Backplane.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyK6Backplane.setDescription('Enterasys K-Series backplane for the K6 chassis.')
etsysOidPhyK10Backplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 499))
if mibBuilder.loadTexts: etsysOidPhyK10Backplane.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyK10Backplane.setDescription('Enterasys K-Series backplane for the K10 chassis.')
etsysOidPhySxDCxPS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 500))
if mibBuilder.loadTexts: etsysOidPhySxDCxPS.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhySxDCxPS.setDescription('Enterasys S-Series 1200W DC power supplies for the S3, S4 and S8 chassis.')
etsysOidPhyMGBICxBX40xD = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 501))
if mibBuilder.loadTexts: etsysOidPhyMGBICxBX40xD.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyMGBICxBX40xD.setDescription('Enterasys MGBIC-BX10-D, a 1000BASE-BX40 Downstream Single Fiber SM, Bidirectional, 1490nm Tx / 1310nm Rx, 40 km, Simplex LC SFP. This part must be paired with MGBIC-BX40-U.')
etsysOidPhyMGBICxBX40xU = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 502))
if mibBuilder.loadTexts: etsysOidPhyMGBICxBX40xU.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyMGBICxBX40xU.setDescription('Enterasys MGBIC-BX10-D, a 1000BASE-BX40 Upstream Single Fiber SM, Bidirectional, 1310nm Tx / 1490nm Rx, 40 km, Simplex LC SFP. This part must be paired with MGBIC-BX40-D.')
etsysOidPhyMGBICxBX120xD = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 503))
if mibBuilder.loadTexts: etsysOidPhyMGBICxBX120xD.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyMGBICxBX120xD.setDescription('Enterasys MGBIC-BX10-D, a 1000BASE-BX120 Downstream Single Fiber SM, Bidirectional, 1590nm Tx / 1490nm Rx, 120 km, Simplex LC SFP. This part must be paired with MGBIC-BX120-U.')
etsysOidPhyMGBICxBX120xU = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 504))
if mibBuilder.loadTexts: etsysOidPhyMGBICxBX120xU.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyMGBICxBX120xU.setDescription('Enterasys MGBIC-BX10-D, a 1000BASE-BX120 Upstream Single Fiber SM, Bidirectional, 1490nm Tx / 1590nm Rx, 120 km, Simplex LC SFP. This part must be paired with MGBIC-BX120-D.')
etsysOidDevSSAxT5068x0652 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 505))
if mibBuilder.loadTexts: etsysOidDevSSAxT5068x0652.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevSSAxT5068x0652.setDescription('Enterasys S-Series S155 Class Standalone (SSA) device with 48 ports of 1000BASE-T Ethernet via RJ45 with PoE (802.3at) and 4 10GBASE-X Ethernet ports via SFP+.')
etsysOidDevSSAxG5018x0652 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 1, 506))
if mibBuilder.loadTexts: etsysOidDevSSAxG5018x0652.setStatus('current')
if mibBuilder.loadTexts: etsysOidDevSSAxG5018x0652.setDescription('Enterasys S-Series S155 Class Standalone (SSA) device with 48 ports of 1000BASE-X Ethernet via SFP and 4 10GBASE-X Ethernet ports via SFP+.')
etsysOidPhyS6xCHASSIS = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 507))
if mibBuilder.loadTexts: etsysOidPhyS6xCHASSIS.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyS6xCHASSIS.setDescription('Enterasys 6 slot modular chassis frame for the S-Series family.')
etsysOidPhyS6Backplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 2, 508))
if mibBuilder.loadTexts: etsysOidPhyS6Backplane.setStatus('current')
if mibBuilder.loadTexts: etsysOidPhyS6Backplane.setDescription('Enterasys S-Series backplane for the S6 chassis.')
etsysOidOther = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 2, 3))
etsysOidIEEE8023adLagInterface = ObjectIdentity((1, 3, 6, 1, 4, 1, 5624, 2, 3, 1))
if mibBuilder.loadTexts: etsysOidIEEE8023adLagInterface.setStatus('current')
if mibBuilder.loadTexts: etsysOidIEEE8023adLagInterface.setDescription('IEEE 802.3ad Link Aggregation virtual interface corresponding to the IANAifType ieee8023agLag (161).')
etsysOidOtherLicenseKeyId = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 2, 3, 2))
mibBuilder.exportSymbols("ENTERASYS-OIDS-MIB", etsysOidPhyE7ModuleSlot=etsysOidPhyE7ModuleSlot, etsysOidDev9E531x24=etsysOidDev9E531x24, etsysOidPhy10GbExLW=etsysOidPhy10GbExLW, etsysOidPhyXPxAPHYx82=etsysOidPhyXPxAPHYx82, etsysOidPhy1Hx2TX=etsysOidPhy1Hx2TX, etsysOidPhyX16Backplane=etsysOidPhyX16Backplane, etsysOidDevC5K125x24P2=etsysOidDevC5K125x24P2, etsysOidPhySPoEPowerSupplySlot=etsysOidPhySPoEPowerSupplySlot, etsysOidDev6H302x48=etsysOidDev6H302x48, etsysOidPhyNK1008x0408=etsysOidPhyNK1008x0408, etsysOidPhySK1208x0808xF6=etsysOidPhySK1208x0808xF6, etsysOidPhyI3Hx4FXxMM=etsysOidPhyI3Hx4FXxMM, etsysOidDevXSRx4100=etsysOidDevXSRx4100, etsysOidPhyVHxRTMxL3=etsysOidPhyVHxRTMxL3, etsysOidPhyC5C305=etsysOidPhyC5C305, etsysOidPhySSRxPSx8=etsysOidPhySSRxPSx8, etsysOidPhy10GbExSR=etsysOidPhy10GbExSR, etsysOidPhy7H4273x52=etsysOidPhy7H4273x52, etsysOidPhyNIMxCT1E1x01=etsysOidPhyNIMxCT1E1x01, etsysOidPhy4H4285x49=etsysOidPhy4H4285x49, etsysOidPhyXPx2xSX=etsysOidPhyXPx2xSX, etsysOidDevB5K125x48=etsysOidDevB5K125x48, etsysOidPhy7C405=etsysOidPhy7C405, etsysOidPhySSRxHTX22x08=etsysOidPhySSRxHTX22x08, etsysOidPhyNIMxDIRELAYx02=etsysOidPhyNIMxDIRELAYx02, etsysOidDevNACxAx2K=etsysOidDevNACxAx2K, etsysOidPhySSRxGLX19x02=etsysOidPhySSRxGLX19x02, etsysOidPhyXControlModuleSlot=etsysOidPhyXControlModuleSlot, etsysOidDev6E308x24=etsysOidDev6E308x24, etsysOidPhyNIMxC16T3Sx01=etsysOidPhyNIMxC16T3Sx01, etsysOidPhyER16xSERCx04xAA=etsysOidPhyER16xSERCx04xAA, etsysOidDevVHx2402xL3=etsysOidDevVHx2402xL3, etsysOidDevA2H124x24=etsysOidDevA2H124x24, etsysOidPhyXPx2xFX=etsysOidPhyXPx2xFX, etsysOidPhyER16PowerSupplySlot=etsysOidPhyER16PowerSupplySlot, etsysOidPhy6SSRLCGigEthBkplnPort=etsysOidPhy6SSRLCGigEthBkplnPort, etsysOidPhyN1ModuleSlot=etsysOidPhyN1ModuleSlot, etsysOidPhy10GBxERxSFPP=etsysOidPhy10GBxERxSFPP, etsysOidDevC3G124x48=etsysOidDevC3G124x48, etsysOidPhy7G4282x41=etsysOidPhy7G4282x41, etsysOidPhyK10xCHASSIS=etsysOidPhyK10xCHASSIS, etsysOidDevC5K125x24=etsysOidDevC5K125x24, etsysOidPhy10GbExCX4xXFP=etsysOidPhy10GbExCX4xXFP, etsysOidPhy7G4270x12=etsysOidPhy7G4270x12, etsysOidDevNACxAx20=etsysOidDevNACxAx20, etsysOidPhyC5G114x4=etsysOidPhyC5G114x4, etsysOidPhySOG1201x0112=etsysOidPhySOG1201x0112, etsysOidPhy7KR4290x02=etsysOidPhy7KR4290x02, etsysOidPhy6C403=etsysOidPhy6C403, etsysOidPhy1Gx2GBIC=etsysOidPhy1Gx2GBIC, etsysOidPhy2H412x49R=etsysOidPhy2H412x49R, etsysOidDevNSTAGxGE500xTX=etsysOidDevNSTAGxGE500xTX, etsysOidPhySSRxATM29x02=etsysOidPhySSRxATM29x02, etsysOidPhyX16xC=etsysOidPhyX16xC, etsysOidPhy=etsysOidPhy, etsysOidPhySSRxGSX31x02=etsysOidPhySSRxGSX31x02, etsysOidPhy10GbExC10xSFPP=etsysOidPhy10GbExC10xSFPP, etsysOidPhy7SxDSNSA7x01=etsysOidPhy7SxDSNSA7x01, etsysOidDevS3=etsysOidDevS3, etsysOidPhyC5G122x24=etsysOidPhyC5G122x24, etsysOidDevVHx8TX1UM=etsysOidDevVHx8TX1UM, etsysOidDevMatrixN1Gold=etsysOidDevMatrixN1Gold, etsysOidDevC3H124x24FX=etsysOidDevC3H124x24FX, etsysOidPhy6C407=etsysOidPhy6C407, etsysOidPhyNIMxBRIxSTx02=etsysOidPhyNIMxBRIxSTx02, etsysOidPhyXFabricModuleSlot=etsysOidPhyXFabricModuleSlot, etsysOidPhyNIMxSERx02=etsysOidPhyNIMxSERx02, etsysOidPhyC2C105=etsysOidPhyC2C105, etsysOidDev6H308x24=etsysOidDev6H308x24, etsysOidPhy7SxNSTAGx01=etsysOidPhy7SxNSTAGx01, etsysOidPhySG1201x0848xF6=etsysOidPhySG1201x0848xF6, etsysOidPhyXP2IntPs=etsysOidPhyXP2IntPs, etsysOidDevB3G124x24=etsysOidDevB3G124x24, etsysOidPhySSRxGLX70x01xAA=etsysOidPhySSRxGLX70x01xAA, etsysOidPhyK6xCHASSIS=etsysOidPhyK6xCHASSIS, etsysOidDev1H582x25=etsysOidDev1H582x25, etsysOidDevB5K125x24=etsysOidDevB5K125x24, etsysOidPhySOptModType2Slot=etsysOidPhySOptModType2Slot, etsysOidPhy1Gx2MGBIC=etsysOidPhy1Gx2MGBIC, etsysOidPhySxPOEx4BAY=etsysOidPhySxPOEx4BAY, etsysOidDevRBTx8500=etsysOidDevRBTx8500, etsysOidPhyB2G124x24P=etsysOidPhyB2G124x24P, etsysOidPhyNT4106x0248=etsysOidPhyNT4106x0248, etsysOidPhySFPPNoConnector=etsysOidPhySFPPNoConnector, etsysOidDevMatrixE7Gold=etsysOidDevMatrixE7Gold, etsysOidPhy6C207x2=etsysOidPhy6C207x2, etsysOidPhyER16xFN=etsysOidPhyER16xFN, etsysOidPhyNIMxETHxTGRx01=etsysOidPhyNIMxETHxTGRx01, etsysOidDevSNSxPCCxWBA=etsysOidDevSNSxPCCxWBA, etsysOidPhyXPxFPHYx09=etsysOidPhyXPxFPHYx09, etsysOidDevC5G124x24=etsysOidDevC5G124x24, etsysOidPhyB2G124x48P=etsysOidPhyB2G124x48P, etsysOidPhySSRxPOS39x02=etsysOidPhySSRxPOS39x02, etsysOidDev1H152x50=etsysOidDev1H152x50, etsysOidPhy9603806=etsysOidPhy9603806, etsysOidDevANGx1105=etsysOidDevANGx1105, etsysOidPhyXPxPCMCIAx16AT=etsysOidPhyXPxPCMCIAx16AT, etsysOidPhy7SxDNSAx01=etsysOidPhy7SxDNSAx01, etsysOidPhyXPx2xSERCxAA=etsysOidPhyXPx2xSERCxAA, etsysOidPhyC5G124x36=etsysOidPhyC5G124x36, etsysOidPhyMGBICx02=etsysOidPhyMGBICx02, etsysOidPhyI3Hx8FXxMM=etsysOidPhyI3Hx8FXxMM, etsysOidPhy7Kx2XFPx6MGBIC=etsysOidPhy7Kx2XFPx6MGBIC, etsysOidPhyK10FanTraySlot=etsysOidPhyK10FanTraySlot, etsysOidPhySSRxFANx16=etsysOidPhySSRxFANx16, etsysOidPhyMGBICxBX40xU=etsysOidPhyMGBICxBX40xU, etsysOidPhyER16xTXx32=etsysOidPhyER16xTXx32, etsysOidPhySSRxGLX39x02=etsysOidPhySSRxGLX39x02, etsysOidPhy2S4082x25=etsysOidPhy2S4082x25, etsysOidPhyXPx2xTXxAA=etsysOidPhyXPx2xTXxAA, etsysOidDevRBTR3xA=etsysOidDevRBTR3xA, etsysOidDev6G302x06=etsysOidDev6G302x06, etsysOidPhyXxM2x00=etsysOidPhyXxM2x00, etsysOidPhy10GBxLWxSFPP=etsysOidPhy10GBxLWxSFPP, etsysOidDevS4=etsysOidDevS4, etsysOidPhyXxGT16x00=etsysOidPhyXxGT16x00, etsysOidDev7SxNSNACGx01NPS=etsysOidDev7SxNSNACGx01NPS, etsysOidPhySOK1208x0104=etsysOidPhySOK1208x0104, etsysOidPhy10GbExLX4xXFP=etsysOidPhy10GbExLX4xXFP, etsysOidDevNACxAx3K=etsysOidDevNACxAx3K, etsysOidPhyXPx2xSERCE=etsysOidPhyXPx2xSERCE, etsysOidPhyS6Backplane=etsysOidPhyS6Backplane, etsysOidPhyKLineCardSlot=etsysOidPhyKLineCardSlot, etsysOidPhySSAxFAN=etsysOidPhySSAxFAN, etsysOidPhyMGBICxBX10xD=etsysOidPhyMGBICxBX10xD, etsysOidPhy7H4303x48=etsysOidPhy7H4303x48, etsysOidPhyMPC8240=etsysOidPhyMPC8240, etsysOidPhyXPxPCMCIA=etsysOidPhyXPxPCMCIA, etsysOidPhyC2M100=etsysOidPhyC2M100, etsysOidPhy7G4082x25=etsysOidPhy7G4082x25, etsysOidPhyER16xHFX31x24=etsysOidPhyER16xHFX31x24, etsysOidPhyUSBMicroABPort=etsysOidPhyUSBMicroABPort, etsysOidDevNACxV=etsysOidDevNACxV, etsysOidPhyGigEthIntNEMPort=etsysOidPhyGigEthIntNEMPort, etsysOidDevG3G170x24=etsysOidDevG3G170x24, etsysOidPhyE1FxdAcPwrSup=etsysOidPhyE1FxdAcPwrSup, etsysOidDevXPx1000=etsysOidDevXPx1000, etsysOidPhyMGBICxLC05=etsysOidPhyMGBICxLC05, etsysOidPhy10GbExEWxXFP=etsysOidPhy10GbExEWxXFP, etsysOidPhy10GbExZR=etsysOidPhy10GbExZR, etsysOidPhyMGBICxLC04=etsysOidPhyMGBICxLC04, etsysOidPhy10GbExSRxSFPP=etsysOidPhy10GbExSRxSFPP, etsysOidDev6H352x25=etsysOidDev6H352x25, etsysOidPhy7Gx6MGBIC=etsysOidPhy7Gx6MGBIC, etsysOidPhy10GBxLWx05=etsysOidPhy10GBxLWx05, etsysOidPhy7H4203x72=etsysOidPhy7H4203x72, etsysOidPhyHssiPort=etsysOidPhyHssiPort, etsysOidPhySFanTraySlot=etsysOidPhySFanTraySlot, etsysOidDevB3G124x48P=etsysOidDevB3G124x48P, etsysOidPhySxPOEx8BAY=etsysOidPhySxPOEx8BAY, etsysOidPhy7C111=etsysOidPhy7C111, etsysOidPhyC2C100=etsysOidPhyC2C100, etsysOidPhyST4006x0272=etsysOidPhyST4006x0272, etsysOidPhy7K4290x02=etsysOidPhy7K4290x02, etsysOidPhy10GbExLX4=etsysOidPhy10GbExLX4, etsysOidDevMatrixN1=etsysOidDevMatrixN1, etsysOidPhy4G4202x72=etsysOidPhy4G4202x72, etsysOidPhySxFAN=etsysOidPhySxFAN, etsysOidPhy1Hx8FX=etsysOidPhy1Hx8FX, etsysOidDevG3G124x24P=etsysOidDevG3G124x24P, etsysOidPhyUSBAPort=etsysOidPhyUSBAPort, etsysOidDevXSRx1220=etsysOidDevXSRx1220, etsysOidPhy10GbExER=etsysOidPhy10GbExER, etsysOidPhyMGBICxBX40xD=etsysOidPhyMGBICxBX40xD, etsysOidPhy4H4203x72=etsysOidPhy4H4203x72, etsysOidPhyXPMemory256=etsysOidPhyXPMemory256, etsysOidPhyB2H124x24=etsysOidPhyB2H124x24, etsysOidPhyFrtPnlFastEthRJ21=etsysOidPhyFrtPnlFastEthRJ21, etsysOidPhySK1008x0816=etsysOidPhySK1008x0816, etsysOidPhyXPx8=etsysOidPhyXPx8, etsysOidPhySSRxGLX70x01=etsysOidPhySSRxGLX70x01, etsysOidPhyMGBICxLC07=etsysOidPhyMGBICxLC07, etsysOidPhyNG4101x0248=etsysOidPhyNG4101x0248, etsysOidPhyC2K122x24=etsysOidPhyC2K122x24, etsysOidPhyX16xF640=etsysOidPhyX16xF640, etsysOidDevXSRx1850=etsysOidDevXSRx1850, etsysOidDevC1H124x48=etsysOidDevC1H124x48, etsysOidPhy7H4382x49=etsysOidPhy7H4382x49, etsysOidPhyB2H124x48=etsysOidPhyB2H124x48, etsysOidDevB3H124x24FX=etsysOidDevB3H124x24FX, etsysOidPhy10GbExC03xSFPP=etsysOidPhy10GbExC03xSFPP, etsysOidPhyXPxAPHYx92=etsysOidPhyXPxAPHYx92, etsysOidDevC5M200=etsysOidDevC5M200, etsysOidPhyMGBICxLC09=etsysOidPhyMGBICxLC09, etsysOidDevXSRx1205=etsysOidDevXSRx1205, etsysOidPhyXxG40x01=etsysOidPhyXxG40x01, etsysOidPhyMGBICx08=etsysOidPhyMGBICx08, etsysOidPhyXxM8x01=etsysOidPhyXxM8x01, etsysOidDevA2H124x48=etsysOidDevA2H124x48, etsysOidPhySSRxPSx16xDC=etsysOidPhySSRxPSx16xDC, etsysOidPhyX8xC=etsysOidPhyX8xC, etsysOidPhyN7PowerSupplySlot=etsysOidPhyN7PowerSupplySlot, etsysOidDevB5K125x48P2=etsysOidDevB5K125x48P2, etsysOidDevDFEPlatinumRouter=etsysOidDevDFEPlatinumRouter, etsysOidPhy7SxC20N=etsysOidPhy7SxC20N, etsysOidPhyER16xSERCEx04xA=etsysOidPhyER16xSERCEx04xA, etsysOidPhy7K420Xx01=etsysOidPhy7K420Xx01, etsysOidDevC3K122x24=etsysOidDevC3K122x24, etsysOidPhyN3PowerSupplySlot=etsysOidPhyN3PowerSupplySlot, etsysOidPhyXPx2xHSSIxAA=etsysOidPhyXPx2xHSSIxAA, etsysOidPhy7G4202x60=etsysOidPhy7G4202x60, etsysOidPhyN5PoEModuleSlot=etsysOidPhyN5PoEModuleSlot, etsysOidPhySSRxFDDIx02=etsysOidPhySSRxFDDIx02, etsysOidPhyC5H124x48=etsysOidPhyC5H124x48, etsysOidDevMatrixN7=etsysOidDevMatrixN7, etsysOidIEEE8023adLagInterface=etsysOidIEEE8023adLagInterface, etsysOidPhySSRxPOS21x04=etsysOidPhySSRxPOS21x04, etsysOidPhySSRxARE=etsysOidPhySSRxARE, etsysOidPhyV2G151x1S=etsysOidPhyV2G151x1S, etsysOidPhyNOT1206x0112=etsysOidPhyNOT1206x0112, etsysOidDevDepricated001=etsysOidDevDepricated001, etsysOidPhySSRxGLX29x02=etsysOidPhySSRxGLX29x02, etsysOidPhyB2G124x48=etsysOidPhyB2G124x48, etsysOidPhyKK2000x0000xF1=etsysOidPhyKK2000x0000xF1, etsysOidDevK10=etsysOidDevK10, etsysOidPhySerialConnection=etsysOidPhySerialConnection, etsysOidDevC5K175x24=etsysOidDevC5K175x24, etsysOidPhyMPC8245=etsysOidPhyMPC8245, etsysOidPhyXP8Slot=etsysOidPhyXP8Slot, etsysOidPhyI3Hx8TXx2FX=etsysOidPhyI3Hx8TXx2FX, etsysOidPhyXPx2xFXxAA=etsysOidPhyXPx2xFXxAA, etsysOidPhyN5PoEPowerSupplySlot=etsysOidPhyN5PoEPowerSupplySlot, etsysOidDev6H308x48=etsysOidDev6H308x48, etsysOidDevA4H254x8F8T=etsysOidDevA4H254x8F8T, etsysOidPhyC2G134x24P=etsysOidPhyC2G134x24P, etsysOidPhyXPxAPHYx22=etsysOidPhyXPxAPHYx22, etsysOidPhy7C403=etsysOidPhy7C403, etsysOidPhy4H4282x49=etsysOidPhy4H4282x49, etsysOidPhyC5M100=etsysOidPhyC5M100, etsysOidDevA2H254x16=etsysOidDevA2H254x16, etsysOidPhySG5201x0848xF6=etsysOidPhySG5201x0848xF6, etsysOidPhySSAxACxPSx1000W=etsysOidPhySSAxACxPSx1000W, etsysOidPhyMGBICxMT09=etsysOidPhyMGBICxMT09, etsysOidPhyE7FanTraySlot=etsysOidPhyE7FanTraySlot, etsysOidPhyGPIMx02=etsysOidPhyGPIMx02, etsysOidPhy7H4385x49=etsysOidPhy7H4385x49, etsysOidDevXSRx1230=etsysOidDevXSRx1230, etsysOidPhy10GbExEW=etsysOidPhy10GbExEW, etsysOidPhy4G4282x41=etsysOidPhy4G4282x41, etsysOidPhyNSAxFAN=etsysOidPhyNSAxFAN, etsysOidPhyXxT32x00=etsysOidPhyXxT32x00, etsysOidPhySSRxPOS29x04=etsysOidPhySSRxPOS29x04, etsysOidPhy7Gx6MGBICxA=etsysOidPhy7Gx6MGBICxA, etsysOidPhyER16x08=etsysOidPhyER16x08, etsysOidPhyX4Backplane=etsysOidPhyX4Backplane, etsysOidPhySSRxPSx8xDC=etsysOidPhySSRxPSx8xDC, etsysOidPhyS8xCHASSIS=etsysOidPhyS8xCHASSIS, etsysOidPhySOT1206x0112=etsysOidPhySOT1206x0112, etsysOidPhy4G4285x49=etsysOidPhy4G4285x49, etsysOidPhyC2G122x24=etsysOidPhyC2G122x24, etsysOidDev6E308x48=etsysOidDev6E308x48, etsysOidPhy10GbExSW=etsysOidPhy10GbExSW, etsysOidPhySSRxSFx16=etsysOidPhySSRxSFx16, etsysOidPhyNIMxBRIxSTx01=etsysOidPhyNIMxBRIxSTx01)
mibBuilder.exportSymbols("ENTERASYS-OIDS-MIB", etsysOidPhySPowerSupplySlot=etsysOidPhySPowerSupplySlot, etsysOidDevC5K125x48=etsysOidDevC5K125x48, etsysOidPhyKT2006x0224=etsysOidPhyKT2006x0224, etsysOidPhyConsolePortUsbMicroAB=etsysOidPhyConsolePortUsbMicroAB, etsysOidPhyXxT48x01=etsysOidPhyXxT48x01, etsysOidDevSSAxT5068x0652=etsysOidDevSSAxT5068x0652, etsysOidPhyXPx2xSERxAA=etsysOidPhyXPx2xSERxAA, etsysOidPhyXPxPCMCIAx32AT=etsysOidPhyXPxPCMCIAx32AT, etsysOidDevXSRx3020=etsysOidDevXSRx3020, etsysOidPhy7GR4270x12=etsysOidPhy7GR4270x12, etsysOidPhyN3Backplane=etsysOidPhyN3Backplane, etsysOidPhyGPIMx09=etsysOidPhyGPIMx09, etsysOidPhy7K4297x04=etsysOidPhy7K4297x04, etsysOidPhy7G4370x08=etsysOidPhy7G4370x08, etsysOidPhyN1xFAN=etsysOidPhyN1xFAN, etsysOidPhy7KR4297x02=etsysOidPhy7KR4297x02, etsysOidPhy10GbExZW=etsysOidPhy10GbExZW, etsysOidPhyC2H124x48=etsysOidPhyC2H124x48, etsysOidPhyN7ModuleSlot=etsysOidPhyN7ModuleSlot, etsysOidDev6G306x06=etsysOidDev6G306x06, etsysOidPhyER16xCK=etsysOidPhyER16xCK, etsysOidPhy7H4284x49=etsysOidPhy7H4284x49, etsysOidDevB5K125x24P2=etsysOidDevB5K125x24P2, etsysOidPhyC5C205x1=etsysOidPhyC5C205x1, etsysOidPhySSRxGSX21x02=etsysOidPhySSRxGSX21x02, etsysOidPhy7H4204x48=etsysOidPhy7H4204x48, etsysOidPhyX8Backplane=etsysOidPhyX8Backplane, etsysOidPhySIOModuleSlot=etsysOidPhySIOModuleSlot, etsysOidDevXSRx3250=etsysOidDevXSRx3250, etsysOidDev2G4072x52=etsysOidDev2G4072x52, etsysOidDevVHx8G02S=etsysOidDevVHx8G02S, etsysOidPhy10GbExLR=etsysOidPhy10GbExLR, etsysOidDevB5G124x48=etsysOidDevB5G124x48, etsysOidPhyXP16PowerSupplySlot=etsysOidPhyXP16PowerSupplySlot, etsysOidPhyNIMxC16E3Sx01=etsysOidPhyNIMxC16E3Sx01, etsysOidDevI3H252x02=etsysOidDevI3H252x02, etsysOidDevS8=etsysOidDevS8, etsysOidPhy7GR4202x30=etsysOidPhy7GR4202x30, etsysOidPhyN1Backplane=etsysOidPhyN1Backplane, etsysOidPhy4H4283x49=etsysOidPhy4H4283x49, etsysOidPhy7C205x1=etsysOidPhy7C205x1, etsysOidDevSNSxTAGxLPA=etsysOidDevSNSxTAGxLPA, etsysOidPhyXPowerSupplySlot=etsysOidPhyXPowerSupplySlot, etsysOidPhyKPowerSupplySlot=etsysOidPhyKPowerSupplySlot, etsysOidDevSNSxTAGxBASE=etsysOidDevSNSxTAGxBASE, etsysOidDevRBTR4xA=etsysOidDevRBTR4xA, etsysOidPhyGPIMx08=etsysOidPhyGPIMx08, etsysOidPhySSRxGSX31x04=etsysOidPhySSRxGSX31x04, etsysOidDevMatrixX16=etsysOidDevMatrixX16, etsysOidPhyXPxAPHYx67=etsysOidPhyXPxAPHYx67, etsysOidPhySerialEia530Connection=etsysOidPhySerialEia530Connection, etsysOidPhyXPx2xSXxAA=etsysOidPhyXPx2xSXxAA, etsysOidDevMatrixX8=etsysOidDevMatrixX8, etsysOidPhyBackplaneFTM1=etsysOidPhyBackplaneFTM1, etsysOidPhyXP2Slot=etsysOidPhyXP2Slot, etsysOidDevA4H124x24=etsysOidDevA4H124x24, etsysOidPhy10GBxLWx20=etsysOidPhy10GBxLWx20, etsysOidPhy10GbExLWxXFP=etsysOidPhy10GbExLWxXFP, etsysOidDev6H202x48=etsysOidDev6H202x48, etsysOidDevG3G124x24=etsysOidDevG3G124x24, etsysOidPhyMGBICNoConnector=etsysOidPhyMGBICNoConnector, etsysOidDevA4H124x24TX=etsysOidDevA4H124x24TX, etsysOidDev6C107=etsysOidDev6C107, etsysOidDevA2H124x24P=etsysOidDevA2H124x24P, etsysOidDev1G587x09=etsysOidDev1G587x09, etsysOidPhy5C205x2=etsysOidPhy5C205x2, etsysOidPhyFrtPnlGigEthRJ45=etsysOidPhyFrtPnlGigEthRJ45, etsysOidPhyGigEthLXPort=etsysOidPhyGigEthLXPort, etsysOidPhyRj45ConsolePort=etsysOidPhyRj45ConsolePort, etsysOidPhyN3FanTraySlot=etsysOidPhyN3FanTraySlot, etsysOidPhyX4xCMFx160x00=etsysOidPhyX4xCMFx160x00, etsysOidDevVHx2402S2=etsysOidDevVHx2402S2, etsysOidPhy10GbExLRxSFPP=etsysOidPhy10GbExLRxSFPP, etsysOidPhy10GbExERxXFP=etsysOidPhy10GbExERxXFP, etsysOidDevD2G124x12=etsysOidDevD2G124x12, etsysOidPhySOK1208x0102=etsysOidPhySOK1208x0102, etsysOidPhy7K4297x02=etsysOidPhy7K4297x02, etsysOidPhyN3ModuleSlot=etsysOidPhyN3ModuleSlot, etsysOidPhyNOK1208x0102=etsysOidPhyNOK1208x0102, etsysOidPhyXPx2xSERCExAA=etsysOidPhyXPx2xSERCExAA, etsysOidDevVHx8GxL3=etsysOidDevVHx8GxL3, etsysOidPhyGPIMx01=etsysOidPhyGPIMx01, etsysOidPhyC5G124x4=etsysOidPhyC5G124x4, etsysOidPhyXPxFPHYx02=etsysOidPhyXPxFPHYx02, etsysOidPhySG4101x0248=etsysOidPhySG4101x0248, etsysOidDevSNSxTAGxHPA=etsysOidDevSNSxTAGxHPA, etsysOidPhyER16SwitchingFabricSlot=etsysOidPhyER16SwitchingFabricSlot, etsysOidPhy4G4282x49=etsysOidPhy4G4282x49, etsysOidPhy4G4202x60=etsysOidPhy4G4202x60, etsysOidDevC3K122x24P=etsysOidDevC3K122x24P, etsysOidPhySSRxGTX32x02=etsysOidPhySSRxGTX32x02, etsysOidDevC5K125x48P2=etsysOidDevC5K125x48P2, etsysOidPhyPOSOC3MMF=etsysOidPhyPOSOC3MMF, etsysOidPhySSRxGSX21x02xAA=etsysOidPhySSRxGSX21x02xAA, etsysOidPhySSRxGTX32x04=etsysOidPhySSRxGTX32x04, etsysOidPhyPOSOC12SMF=etsysOidPhyPOSOC12SMF, etsysOidPhySSRxHFX29x08=etsysOidPhySSRxHFX29x08, etsysOidPhyER16xCM3=etsysOidPhyER16xCM3, etsysOidPhySFabricModuleSlot=etsysOidPhySFabricModuleSlot, etsysOidDev5H162x50=etsysOidDev5H162x50, etsysOidDevA4H124x24FX=etsysOidDevA4H124x24FX, etsysOidPhy7G4205x72=etsysOidPhy7G4205x72, etsysOidPhyS8Backplane=etsysOidPhyS8Backplane, etsysOidPhyNIMxT1E1x04=etsysOidPhyNIMxT1E1x04, etsysOidPhyNIMxADSLxBx01=etsysOidPhyNIMxADSLxBx01, etsysOidPhy4G4205x72=etsysOidPhy4G4205x72, etsysOidPhyV2H124x24FX=etsysOidPhyV2H124x24FX, etsysOidPhyXPx2xLX70=etsysOidPhyXPx2xLX70, etsysOidPhySSAPowerSupplySlot=etsysOidPhySSAPowerSupplySlot, etsysOidPhyXPx2xLX=etsysOidPhyXPx2xLX, etsysOidPhySSRxHTX12x08=etsysOidPhySSRxHTX12x08, etsysOidPhyS4xCHASSIS=etsysOidPhyS4xCHASSIS, etsysOidPhyXPxFPHYx01=etsysOidPhyXPxFPHYx01, etsysOidPhy10GbExSRxXFP=etsysOidPhy10GbExSRxXFP, etsysOidPhySOK1208x0204=etsysOidPhySOK1208x0204, etsysOidPhyER16xSF=etsysOidPhyER16xSF, etsysOidPhyXPx2xGSX=etsysOidPhyXPx2xGSX, etsysOidPhyNOK1208x0104=etsysOidPhyNOK1208x0104, etsysOidDevMatrixX4=etsysOidDevMatrixX4, etsysOidPhyER16xOS26x01=etsysOidPhyER16xOS26x01, etsysOidPhy10GBxLWxXFP=etsysOidPhy10GBxLWxXFP, etsysOidPhyXPxAPHYx77=etsysOidPhyXPxAPHYx77, etsysOidPhyXxM4x01=etsysOidPhyXxM4x01, etsysOidPhyER16xCM4=etsysOidPhyER16xCM4, etsysOidPhy4H4284x49=etsysOidPhy4H4284x49, etsysOidDevXSRx3150=etsysOidDevXSRx3150, etsysOidPhyXP2IntCM=etsysOidPhyXP2IntCM, etsysOidPhyKFabricModuleSlot=etsysOidPhyKFabricModuleSlot, etsysOidPhySerialEia530AConnection=etsysOidPhySerialEia530AConnection, etsysOidPhy10GbExZRxXFP=etsysOidPhy10GbExZRxXFP, etsysOidDev7SxNSTAGx01=etsysOidDev7SxNSTAGx01, etsysOidPhyX4xC=etsysOidPhyX4xC, etsysOidPhyXP8PowerSupplySlot=etsysOidPhyXP8PowerSupplySlot, etsysOidDevEls1000x8SX=etsysOidDevEls1000x8SX, etsysOidPhyK10xFAN=etsysOidPhyK10xFAN, etsysOidDevDragonIdsAppliance=etsysOidDevDragonIdsAppliance, etsysOidDev6H003x48=etsysOidDev6H003x48, etsysOidPhy7G4202x30=etsysOidPhy7G4202x30, etsysOidDevXPx2400=etsysOidDevXPx2400, etsysOidPhyNIMxFIBRx01=etsysOidPhyNIMxFIBRx01, etsysOidPhy7SxNSNACGx01xNPS=etsysOidPhy7SxNSNACGx01xNPS, etsysOidPhyI3Hx12TX=etsysOidPhyI3Hx12TX, etsysOidOtherLicenseKeyId=etsysOidOtherLicenseKeyId, etsysOidPhyFrtPnlFastEthRJ45=etsysOidPhyFrtPnlFastEthRJ45, etsysOidPhySSRxSERCx04xAA=etsysOidPhySSRxSERCx04xAA, etsysOidPhyXPMemory64=etsysOidPhyXPMemory64, etsysOidPhy7SxDSNSA7x01NPS=etsysOidPhy7SxDSNSA7x01NPS, etsysOidPhyNN0100x0100xF2=etsysOidPhyNN0100x0100xF2, etsysOidDevRBTR2xA=etsysOidDevRBTR2xA, etsysOidDevXSRx1225=etsysOidDevXSRx1225, etsysOidPhyER16xHSSIx02xAA=etsysOidPhyER16xHSSIx02xAA, etsysOidDevEls100x24TX2M=etsysOidDevEls100x24TX2M, etsysOidDev1G154x09=etsysOidDev1G154x09, etsysOidPhyER16xAC=etsysOidPhyER16xAC, etsysOidPhyNIMxT1E1x01=etsysOidPhyNIMxT1E1x01, etsysOidPhySOptModType1Slot=etsysOidPhySOptModType1Slot, etsysOidPhyKxACxPSx1440W=etsysOidPhyKxACxPSx1440W, etsysOidDevMatrixN3Gold=etsysOidDevMatrixN3Gold, etsysOidDevMatrixN5PoEPlatinum=etsysOidDevMatrixN5PoEPlatinum, etsysOidDevB5G124x24P2=etsysOidDevB5G124x24P2, etsysOidPhyB2H124x24P=etsysOidPhyB2H124x24P, etsysOidPhyFastEthMMFPort=etsysOidPhyFastEthMMFPort, etsysOidPhyB2H124x24FX=etsysOidPhyB2H124x24FX, etsysOidPhy7Gx6MGBICxB=etsysOidPhy7Gx6MGBICxB, etsysOidPhyNOG1201x0112=etsysOidPhyNOG1201x0112, etsysOidPhyNIMxBRIxUx02=etsysOidPhyNIMxBRIxUx02, etsysOidDevMatrixE7=etsysOidDevMatrixE7, etsysOidDevC2M200=etsysOidDevC2M200, etsysOidPhyXxM2x01=etsysOidPhyXxM2x01, etsysOidDevRBT4102=etsysOidDevRBT4102, etsysOidPhySSRxHTX22x08xAA=etsysOidPhySSRxHTX22x08xAA, etsysOidPhyFastEthSMFPort=etsysOidPhyFastEthSMFPort, etsysOidPhyNIMxSERx04=etsysOidPhyNIMxSERx04, etsysOidPhy7GR4280x19=etsysOidPhy7GR4280x19, etsysOidDevEls100x48TX2M=etsysOidDevEls100x48TX2M, etsysOidPhySSRxSERCx04=etsysOidPhySSRxSERCx04, etsysOidDev5SSRMx02=etsysOidDev5SSRMx02, etsysOidPhy7G4202x12=etsysOidPhy7G4202x12, etsysOidPhyER16xCS=etsysOidPhyER16xCS, etsysOidPhy10GbExZWxXFP=etsysOidPhy10GbExZWxXFP, etsysOidDevER16=etsysOidDevER16, etsysOidDev6G066x06=etsysOidDev6G066x06, etsysOidDevA4H124x48P=etsysOidDevA4H124x48P, etsysOidPhySSRxGLH39x02=etsysOidPhySSRxGLH39x02, etsysOidPhySSRxPSx16=etsysOidPhySSRxPSx16, etsysOidPhyNGNOptModSlot=etsysOidPhyNGNOptModSlot, etsysOidDev1G276x13=etsysOidDev1G276x13, etsysOidPhyNIMxT3Sx01=etsysOidPhyNIMxT3Sx01, etsysOidPhy7C117=etsysOidPhy7C117, etsysOidPhySSRxSERCEx04=etsysOidPhySSRxSERCEx04, etsysOidPhyXxCMx00=etsysOidPhyXxCMx00, etsysOidDevMatrixN1NAC=etsysOidDevMatrixN1NAC, etsysOidDevVHx2202GT=etsysOidDevVHx2202GT, etsysOidPhy100BASEMTRJMMF=etsysOidPhy100BASEMTRJMMF, etsysOidPhyC2H124x48P=etsysOidPhyC2H124x48P, etsysOidDevNACxAx10=etsysOidDevNACxAx10, etsysOidDevANGx3000=etsysOidDevANGx3000, etsysOidPhySSRxHTX32x16=etsysOidPhySSRxHTX32x16, etsysOidPhySSRxCM2=etsysOidPhySSRxCM2, etsysOidPhy9603805=etsysOidPhy9603805, etsysOidPhyXPx2xSERC=etsysOidPhyXPx2xSERC, etsysOidPhyST1206x0848=etsysOidPhyST1206x0848, etsysOidPhyIncompatiblePluggable=etsysOidPhyIncompatiblePluggable, etsysOidDevC3G124x24=etsysOidDevC3G124x24, etsysOidPhyXIOModuleSlot=etsysOidPhyXIOModuleSlot, etsysOidPhy10GbExLRMxSFPP=etsysOidPhy10GbExLRMxSFPP, etsysOidPhySSRxGLX39x04=etsysOidPhySSRxGLX39x04, etsysOidPhySSRxHSSIx02xAA=etsysOidPhySSRxHSSIx02xAA, etsysOidPhySSRxGSX11x02=etsysOidPhySSRxGSX11x02, etsysOidOther=etsysOidOther, etsysOidDevA2H123x24=etsysOidDevA2H123x24, etsysOidPhyXPx16=etsysOidPhyXPx16, etsysOidPhyS3xCHASSIS=etsysOidPhyS3xCHASSIS, etsysOidPhyER16xHFX39x24=etsysOidPhyER16xHFX39x24, etsysOidPhyXP16SwitchingFabricSlot=etsysOidPhyXP16SwitchingFabricSlot, etsysOidPhy10GbExC20xSFPP=etsysOidPhy10GbExC20xSFPP, etsysOidDevVHxSMGMTxL3=etsysOidDevVHxSMGMTxL3, etsysOidDevC3K172x24=etsysOidDevC3K172x24, etsysOidPhyST5206x0848xF6=etsysOidPhyST5206x0848xF6, etsysOidDevDFEGoldRouter=etsysOidDevDFEGoldRouter, etsysOidPhyNIMxC16T3GSx01=etsysOidPhyNIMxC16T3GSx01, etsysOidPhy5C405=etsysOidPhy5C405, etsysOidPhy7G4270x10=etsysOidPhy7G4270x10, etsysOidPhyC2G124x36=etsysOidPhyC2G124x36, etsysOidPhy7C103=etsysOidPhy7C103, etsysOidPhyER16xTXx24=etsysOidPhyER16xTXx24, etsysOidDevRBTSAxAA=etsysOidDevRBTSAxAA, etsysOidPhyN7FanTraySlot=etsysOidPhyN7FanTraySlot, PYSNMP_MODULE_ID=enterasysOidsMib, etsysOidDevXSRx1235=etsysOidDevXSRx1235, etsysOidPhyGigEthLLXPort=etsysOidPhyGigEthLLXPort, etsysOidPhy7SxNACGx01=etsysOidPhy7SxNACGx01, etsysOidPhyNxPOE=etsysOidPhyNxPOE, etsysOidPhyMGBICxLC01=etsysOidPhyMGBICxLC01, etsysOidPhyNIMxADSLxACx01=etsysOidPhyNIMxADSLxACx01, etsysOidPhyN5PoEPoEPowerSupplySlot=etsysOidPhyN5PoEPoEPowerSupplySlot, etsysOidPhy10GbExLRxXFP=etsysOidPhy10GbExLRxXFP, etsysOidPhyXPx2xB128=etsysOidPhyXPx2xB128, etsysOidPhy6C207x1=etsysOidPhy6C207x1, etsysOidDevA2H124x24FX=etsysOidDevA2H124x24FX, etsysOidPhyXPx2xSER=etsysOidPhyXPx2xSER, etsysOidDevVG6=etsysOidDevVG6, etsysOidPhyXPx2xTX=etsysOidPhyXPx2xTX, etsysOidPhy6C103=etsysOidPhy6C103, etsysOidPhySSRxSERCEx04xAA=etsysOidPhySSRxSERCEx04xAA, etsysOidPhyEmpty=etsysOidPhyEmpty, etsysOidPhySSRxHFX21x08xAA=etsysOidPhySSRxHFX21x08xAA, etsysOidPhyNIMxCT1E1x04=etsysOidPhyNIMxCT1E1x04, etsysOidPhyST1206x0848xF6=etsysOidPhyST1206x0848xF6, etsysOidPhyXP2IntTX08=etsysOidPhyXP2IntTX08, etsysOidDevANGx1102=etsysOidDevANGx1102, etsysOidPhyNxPOEPowerSupplySlot=etsysOidPhyNxPOEPowerSupplySlot, etsysOidPhyC5C105=etsysOidPhyC5C105, etsysOidPhySSRxGLX29x02xAA=etsysOidPhySSRxGLX29x02xAA)
mibBuilder.exportSymbols("ENTERASYS-OIDS-MIB", etsysOidDevMatrixN3=etsysOidDevMatrixN3, etsysOidDevS6=etsysOidDevS6, etsysOidPhyNT1006x0448=etsysOidPhyNT1006x0448, etsysOidDevVHx8TX1MF=etsysOidDevVHx8TX1MF, etsysOidPhyB2G124x24=etsysOidPhyB2G124x24, etsysOidPhySerialX21Connection=etsysOidPhySerialX21Connection, etsysOidPhySK5208x0808xF6=etsysOidPhySK5208x0808xF6, etsysOidPhy5C205x3=etsysOidPhy5C205x3, etsysOidDevC3G124x48P=etsysOidDevC3G124x48P, etsysOidPhyNxPOEx1200W=etsysOidPhyNxPOEx1200W, etsysOidPhyNIMxETHRx01=etsysOidPhyNIMxETHRx01, etsysOidPhyKK2008x0204=etsysOidPhyKK2008x0204, etsysOidPhySSRxHTX12x08xAA=etsysOidPhySSRxHTX12x08xAA, etsysOidPhyZPIMxZ1=etsysOidPhyZPIMxZ1, etsysOidDevA2H124x48P=etsysOidDevA2H124x48P, etsysOidPhy7C105xP=etsysOidPhy7C105xP, etsysOidPhyNIMxE3Sx01=etsysOidPhyNIMxE3Sx01, etsysOidPhy10GbExSWxXFP=etsysOidPhy10GbExSWxXFP, etsysOidDev6H002x48=etsysOidDev6H002x48, etsysOidPhyXPxAPHYx29IR=etsysOidPhyXPxAPHYx29IR, etsysOidPhyN1xACxPS=etsysOidPhyN1xACxPS, etsysOidPhyKxPOExExtConn=etsysOidPhyKxPOExExtConn, etsysOidDevC5G124x48P2=etsysOidDevC5G124x48P2, etsysOidPhySxPOExPS=etsysOidPhySxPOExPS, etsysOidPhyN5Backplane=etsysOidPhyN5Backplane, etsysOidPhyXxG20x01=etsysOidPhyXxG20x01, etsysOidDevC5G124x48=etsysOidDevC5G124x48, etsysOidPhy6C203x1=etsysOidPhy6C203x1, etsysOidPhyER16xATM29x02=etsysOidPhyER16xATM29x02, etsysOidDevSSAxT1068x0652=etsysOidDevSSAxT1068x0652, etsysOidDevA4H124x8F8T=etsysOidDevA4H124x8F8T, etsysOidPhy7C203x1=etsysOidPhy7C203x1, etsysOidPhyX8xF320=etsysOidPhyX8xF320, etsysOidPhyC2G124x24=etsysOidPhyC2G124x24, etsysOidPhyMGBICxMT01=etsysOidPhyMGBICxMT01, etsysOidPhyKK2008x0204xF1=etsysOidPhyKK2008x0204xF1, etsysOidPhy7G4275x12=etsysOidPhy7G4275x12, etsysOidPhyS6xCHASSIS=etsysOidPhyS6xCHASSIS, etsysOidPhySFPxGBIC=etsysOidPhySFPxGBIC, etsysOidPhyXPx2xAtm=etsysOidPhyXPx2xAtm, etsysOidDevSNSxNSSxA=etsysOidDevSNSxNSSxA, etsysOidDevV2H124x24=etsysOidDevV2H124x24, etsysOidPhySSRxHFX11x08=etsysOidPhySSRxHFX11x08, etsysOidDev6H303x48=etsysOidDev6H303x48, etsysOidPhyNIMxC16T3x01=etsysOidPhyNIMxC16T3x01, etsysOidPhyKK2008x0204xF2=etsysOidPhyKK2008x0204xF2, etsysOidPhy7C115xP=etsysOidPhy7C115xP, etsysOidDevC3Kx2XFP=etsysOidDevC3Kx2XFP, etsysOidPhy1000BASET=etsysOidPhy1000BASET, etsysOidPhyKK2000x0000xF2=etsysOidPhyKK2000x0000xF2, etsysOidPhyER16xFDDIx02=etsysOidPhyER16xFDDIx02, etsysOidPhy7S4280x19=etsysOidPhy7S4280x19, etsysOidDevC1G124x24=etsysOidDevC1G124x24, etsysOidPhy7KR4297x04=etsysOidPhy7KR4297x04, etsysOidPhySSRxHFX29x08xAA=etsysOidPhySSRxHFX29x08xAA, etsysOidPhy6C107=etsysOidPhy6C107, etsysOidDev6G063x06=etsysOidDev6G063x06, etsysOidPhySerialV35Connection=etsysOidPhySerialV35Connection, etsysOidPhyXPMemory128=etsysOidPhyXPMemory128, etsysOidPhyER16xGTX32x04=etsysOidPhyER16xGTX32x04, etsysOidPhyST4106x0348xF6=etsysOidPhyST4106x0348xF6, etsysOidDevB3G124x24P=etsysOidDevB3G124x24P, etsysOidDevSSAxG1018x0652=etsysOidDevSSAxG1018x0652, etsysOidDevMatrixN5PoEGold=etsysOidDevMatrixN5PoEGold, etsysOidPhyNIMxT3E3x01=etsysOidPhyNIMxT3E3x01, etsysOidPhySSRxHFX21x08=etsysOidPhySSRxHFX21x08, etsysOidPhy7G4270x09=etsysOidPhy7G4270x09, etsysOidPhyV2G151x1M=etsysOidPhyV2G151x1M, etsysOidPhyST4106x0248=etsysOidPhyST4106x0248, etsysOidDevEmpty=etsysOidDevEmpty, etsysOidPhyER16Slot=etsysOidPhyER16Slot, etsysOidPhy7C113=etsysOidPhy7C113, etsysOidDevV2H124xPOE=etsysOidDevV2H124xPOE, etsysOidPhyXPxAPHYx21=etsysOidPhyXPxAPHYx21, etsysOidPhyK6Backplane=etsysOidPhyK6Backplane, etsysOidPhyXxAC=etsysOidPhyXxAC, etsysOidPhy10GBxLWx03=etsysOidPhy10GBxLWx03, etsysOidDevANGx7000=etsysOidDevANGx7000, etsysOidPhySG1201x0848=etsysOidPhySG1201x0848, etsysOidPhyC2G170x24=etsysOidPhyC2G170x24, etsysOidPhySSRxFANx8=etsysOidPhySSRxFANx8, etsysOidPhy5C105=etsysOidPhy5C105, etsysOidPhy6C207x3=etsysOidPhy6C207x3, etsysOidPhy7G4282x49=etsysOidPhy7G4282x49, etsysOidPhyMGBICxBX10xU=etsysOidPhyMGBICxBX10xU, etsysOidPhyK6xFAN=etsysOidPhyK6xFAN, etsysOidPhyPortSlot=etsysOidPhyPortSlot, etsysOidPhyN5PoEFanTraySlot=etsysOidPhyN5PoEFanTraySlot, etsysOidDevC3G124x24P=etsysOidDevC3G124x24P, etsysOidPhyK10Backplane=etsysOidPhyK10Backplane, etsysOidDevVG4x3DES=etsysOidDevVG4x3DES, etsysOidPhySSRxCM4=etsysOidPhySSRxCM4, etsysOidPhyNIMxBRIxUx01=etsysOidPhyNIMxBRIxUx01, etsysOidPhyER16xGTX32x08=etsysOidPhyER16xGTX32x08, etsysOidPhyC2G124x48=etsysOidPhyC2G124x48, etsysOidPhyMGBICxLC03=etsysOidPhyMGBICxLC03, etsysOidPhy5SlotFTM1Backplane=etsysOidPhy5SlotFTM1Backplane, etsysOidPhyGigEthSXPort=etsysOidPhyGigEthSXPort, etsysOidPhyXxFan=etsysOidPhyXxFan, etsysOidPhy10GbExLRMxXFP=etsysOidPhy10GbExLRMxXFP, etsysOidPhy10100T=etsysOidPhy10100T, etsysOidPhyS4Backplane=etsysOidPhyS4Backplane, etsysOidPhyNG1001x0448=etsysOidPhyNG1001x0448, etsysOidPhyMGBICxBX120xU=etsysOidPhyMGBICxBX120xU, etsysOidPhy10GbExCX4=etsysOidPhy10GbExCX4, etsysOidPhySSRxCM3=etsysOidPhySSRxCM3, etsysOidPhyV2G121x1=etsysOidPhyV2G121x1, etsysOidPhyNIMxT1E1x02=etsysOidPhyNIMxT1E1x02, etsysOidPhySxDCxPS=etsysOidPhySxDCxPS, etsysOidPhyV2G112x2=etsysOidPhyV2G112x2, etsysOidPhySxACxPS=etsysOidPhySxACxPS, etsysOidPhyPOSOC3SMF=etsysOidPhyPOSOC3SMF, etsysOidPhy7SlotFTM2Backplane=etsysOidPhy7SlotFTM2Backplane, etsysOidPhyXxG32x00=etsysOidPhyXxG32x00, etsysOidDevA4H124x24P=etsysOidDevA4H124x24P, etsysOidPhyKG2001x0224=etsysOidPhyKG2001x0224, etsysOidPhySSRxPOS31x02=etsysOidPhySSRxPOS31x02, etsysOidDevK6=etsysOidDevK6, etsysOidDevNSTAGxGE250xTX=etsysOidDevNSTAGxGE250xTX, etsysOidPhy10GBxLWx10=etsysOidPhy10GBxLWx10, etsysOidDevB5G124x48P2=etsysOidDevB5G124x48P2, etsysOidDevRBTSAxAB=etsysOidDevRBTSAxAB, etsysOidPhyB2H124x48P=etsysOidPhyB2H124x48P, etsysOidPhyE7PowerSupplySlot=etsysOidPhyE7PowerSupplySlot, etsysOidDevMatrixN7Gold=etsysOidDevMatrixN7Gold, etsysOidPhyC2G124x48P=etsysOidPhyC2G124x48P, etsysOidPhy4H4202x72=etsysOidPhy4H4202x72, enterasysOidsMib=enterasysOidsMib, etsysOidDevA4H124x48=etsysOidDevA4H124x48, etsysOidPhySSRxHSSIx02=etsysOidPhySSRxHSSIx02, etsysOidPhyS3Backplane=etsysOidPhyS3Backplane, etsysOidPhyMGBICxBX120xD=etsysOidPhyMGBICxBX120xD, etsysOidDevD2G124x12P=etsysOidDevD2G124x12P, etsysOidPhyXPx2xLX70xAA=etsysOidPhyXPx2xLX70xAA, etsysOidDevANGx2000=etsysOidDevANGx2000, etsysOidPhy1Hx16TX=etsysOidPhy1Hx16TX, etsysOidPhyVHxSMGMT2=etsysOidPhyVHxSMGMT2, etsysOidPhy7G4202x72=etsysOidPhy7G4202x72, etsysOidDevSSAxT4068x0252=etsysOidDevSSAxT4068x0252, etsysOidPhy7H4382x25=etsysOidPhy7H4382x25, etsysOidPhyXP8IntFlash=etsysOidPhyXP8IntFlash, etsysOidDevB5G124x24=etsysOidDevB5G124x24, etsysOidPhy7SlotFTM1Backplane=etsysOidPhy7SlotFTM1Backplane, etsysOidPhyNIMxC16E3x01=etsysOidPhyNIMxC16E3x01, etsysOidPhyPOSOC12MMF=etsysOidPhyPOSOC12MMF, etsysOidPhy7H4383x49=etsysOidPhy7H4383x49, etsysOidPhy7H4202x72=etsysOidPhy7H4202x72, etsysOidPhyNSAxACxPS=etsysOidPhyNSAxACxPS, etsysOidDevSSAxG5018x0652=etsysOidDevSSAxG5018x0652, etsysOidPhyXPxPCMCIAx16LN=etsysOidPhyXPxPCMCIAx16LN, etsysOidDevC5G124x24P2=etsysOidDevC5G124x24P2, etsysOidPhyXFanTraySlot=etsysOidPhyXFanTraySlot, etsysOidPhy7G4280x19=etsysOidPhy7G4280x19, etsysOidPhyNIMxCT1E1x02=etsysOidPhyNIMxCT1E1x02, etsysOidDevXSRx1100=etsysOidDevXSRx1100, etsysOidDevice=etsysOidDevice, etsysOidPhy7G4285x49=etsysOidPhy7G4285x49, etsysOidDevB3G124x48=etsysOidDevB3G124x48, etsysOidPhy7SxNSTAGx01xNPS=etsysOidPhy7SxNSTAGx01xNPS, etsysOidPhyNT4006x0272=etsysOidPhyNT4006x0272, etsysOidPhySSAxACxPSx600W=etsysOidPhySSAxACxPSx600W, etsysOidPhyXPx2xLXxAA=etsysOidPhyXPx2xLXxAA, etsysOidPhyK6FanTraySlot=etsysOidPhyK6FanTraySlot, etsysOidDev5H163x50=etsysOidDev5H163x50, etsysOidPhyNoXenpak=etsysOidPhyNoXenpak, etsysOidPhyXFPxGBIC=etsysOidPhyXFPxGBIC, etsysOidPhy7C107=etsysOidPhy7C107, etsysOidPhy10GbExC01xSFPP=etsysOidPhy10GbExC01xSFPP, etsysOidPhyER16x04=etsysOidPhyER16x04, etsysOidPhyER16xSXx08=etsysOidPhyER16xSXx08, etsysOidPhyNoXfp=etsysOidPhyNoXfp)
