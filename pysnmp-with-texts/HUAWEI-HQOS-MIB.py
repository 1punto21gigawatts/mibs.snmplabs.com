#
# PySNMP MIB module HUAWEI-HQOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-HQOS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:44:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
entPhysicalIndex, entPhysicalName = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex", "entPhysicalName")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Unsigned32, Bits, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, iso, Counter32, MibIdentifier, NotificationType, ObjectIdentity, Counter64, Gauge32, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Bits", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "iso", "Counter32", "MibIdentifier", "NotificationType", "ObjectIdentity", "Counter64", "Gauge32", "Integer32", "IpAddress")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
hwHQOS = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132))
hwHQOS.setRevisions(('2014-08-04 15:58', '2014-07-23 15:58', '2014-06-03 14:55', '2014-05-06 19:15', '2013-04-24 14:43', '2014-03-25 14:33', '2013-11-20 14:43', '2013-09-30 14:43', '2013-09-16 16:09', '2013-07-29 14:43', '2013-04-10 14:43', '2014-08-04 15:58', '2014-12-22 15:58',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hwHQOS.setRevisionsDescriptions(('MOD hwhqosUserQueueShapeAllTrafficEntry', 'ADD TABLE', 'DELETE hwhqosFlowQueueCfgWeightPercentageValue OF hwhqosFlowQueueCfgEntry', 'DELETE CIR LEAF OF HQOS CONFIG NODE', 'MOD hwhqosProfileName NODE', 'ADD IF USER QUEUE NODE', 'MOD VALUE-RANGE', 'ADD ALARM NODE', 'ADD ALARM NODE', 'ADD ALARM TABLE', 'ADD ALARM NODE', 'ADD ALARM NODE', 'ADD ALARM NODE',))
if mibBuilder.loadTexts: hwHQOS.setLastUpdated('201408041558Z')
if mibBuilder.loadTexts: hwHQOS.setOrganization('Huawei Technologies Co.,Ltd.')
if mibBuilder.loadTexts: hwHQOS.setContactInfo("Huawei Industrial Base Bantian, Longgang Shenzhen 518129 People's Republic of China Website: http://www.huawei.com Email: support@huawei.com ")
if mibBuilder.loadTexts: hwHQOS.setDescription('mib of Hierarchy Quality Of Service module the huawei-hqos-mib is only defined about statistic information now. ')
class CosType(TextualConvention, Integer32):
    description = ' BE(1) AF1(2) AF2(3) AF3(4) AF4(5) EF(6) CS6(7) CS7(8) '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8))

hwhqosStat = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1))
hwhqosIfStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 1), )
if mibBuilder.loadTexts: hwhqosIfStatTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfStatTable.setDescription("Table of Hierarchy QoS's statistic information.")
hwhqosIfStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 1, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosIfIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosDirection"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserLayer1"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserLayer2"), (0, "HUAWEI-HQOS-MIB", "hwhqosQueueIndex"))
if mibBuilder.loadTexts: hwhqosIfStatEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfStatEntry.setDescription("The table have multilevel index if don't have some or other index. please fill the MAX value 2147483647 for example : MA52 don't have statistic of user's queue, but have statistic of user. please set QueueIndex the MAX value 2147483647. ")
hwhqosIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hwhqosIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfIndex.setDescription('The value of this object identifies the index of an interface. The interface can be a physical interface or a logical interface. ')
hwhqosDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("absent", 255))))
if mibBuilder.loadTexts: hwhqosDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosDirection.setDescription('The value of this object identifies the incoming and outgoing directions. The object can be set to 0 when the direction is not specified. ')
hwhqosUserLayer1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hwhqosUserLayer1.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserLayer1.setDescription('The value of this object identifies the outer identifier of a user group. ')
hwhqosUserLayer2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hwhqosUserLayer2.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserLayer2.setDescription('The value of this object identifies the outer identifier of a user. ')
hwhqosQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hwhqosQueueIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosQueueIndex.setDescription('The value of this object identifies the queue index of a user. Each user has multiple queues and the index indicates the queues for each user. Each user of the NE40E has eight queues. If this object does not exist, you can set it to 0. ')
hwhqosQueueForwardPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosQueueForwardPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosQueueForwardPackets.setDescription('The value of this object identifies the packets forwarded in the queue. If this object is not supported, fill 0. ')
hwhqosQueueForwardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosQueueForwardBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosQueueForwardBytes.setDescription('The value of this object identifies the bytes forwarded in the queue. If this object is not supported, fill 0. ')
hwhqosQueueDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosQueueDropPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosQueueDropPackets.setDescription('This object indicates the number of packets discarded from the queue. If this object is not supported, fill 0. ')
hwhqosQueueDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosQueueDropBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosQueueDropBytes.setDescription('This object indicates the number of bytes discarded from the queue. If this object is not supported, fill 0. ')
hwhqosQueueRemarkPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosQueueRemarkPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosQueueRemarkPackets.setDescription('RemarkPackets number of queue. if not support, please fill 0. ')
hwhqosQueueRemarkBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosQueueRemarkBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosQueueRemarkBytes.setDescription('RemarkBytes number of queue. if not support, please fill 0. ')
hwhqosSetZero = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("setZero", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwhqosSetZero.setStatus('current')
if mibBuilder.loadTexts: hwhqosSetZero.setDescription('This object indicates that the statistics are cleared.')
hwhqosQueueForwardPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosQueueForwardPacketRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosQueueForwardPacketRate.setDescription('This object indicates the packet forwarding rate in the queue, in pps.')
hwhqosQueueForwardByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosQueueForwardByteRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosQueueForwardByteRate.setDescription('This object indicates the byte forwarding rate in the queue, in bps.')
hwhqosQueueDropPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosQueueDropPacketRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosQueueDropPacketRate.setDescription('This object indicates the packet discarding rate in the queue, in pps.')
hwhqosQueueDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosQueueDropByteRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosQueueDropByteRate.setDescription('This object indicates the byte discarding rate in the queue, in bps.')
hwhqosAtmPvcStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 2), )
if mibBuilder.loadTexts: hwhqosAtmPvcStatTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosAtmPvcStatTable.setDescription("Table of Hierarchy QoS's statistic information.")
hwhqosAtmPvcStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 2, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosAtmPvcIfIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosAtmPvcVPI"), (0, "HUAWEI-HQOS-MIB", "hwhqosAtmPvcVCI"), (0, "HUAWEI-HQOS-MIB", "hwhqosAtmPvcDirection"), (0, "HUAWEI-HQOS-MIB", "hwhqosAtmPvcUserLayer1"), (0, "HUAWEI-HQOS-MIB", "hwhqosAtmPvcUserLayer2"), (0, "HUAWEI-HQOS-MIB", "hwhqosAtmPvcQueueIndex"))
if mibBuilder.loadTexts: hwhqosAtmPvcStatEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosAtmPvcStatEntry.setDescription("The table have multilevel index if don't have some or other index. please fill the MAX value 2147483647 for example : MA52 don't have statistic of user's queue, but have statistic of user. please set QueueIndex the MAX value 2147483647. ")
hwhqosAtmPvcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hwhqosAtmPvcIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosAtmPvcIfIndex.setDescription('ATM interfaceindex. ')
hwhqosAtmPvcVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hwhqosAtmPvcVPI.setStatus('current')
if mibBuilder.loadTexts: hwhqosAtmPvcVPI.setDescription('VPI NUMBER. ')
hwhqosAtmPvcVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hwhqosAtmPvcVCI.setStatus('current')
if mibBuilder.loadTexts: hwhqosAtmPvcVCI.setDescription('VCI NUMBER. ')
hwhqosAtmPvcDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("absent", 255))))
if mibBuilder.loadTexts: hwhqosAtmPvcDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosAtmPvcDirection.setDescription("Direction: inbound;outbound. if don't have, please fill 255. ")
hwhqosAtmPvcUserLayer1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hwhqosAtmPvcUserLayer1.setStatus('current')
if mibBuilder.loadTexts: hwhqosAtmPvcUserLayer1.setDescription("Usergroupid: just the Usergroup's configure sequence Usergroupname is identifier in Hierarchy QoS. ")
hwhqosAtmPvcUserLayer2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hwhqosAtmPvcUserLayer2.setStatus('current')
if mibBuilder.loadTexts: hwhqosAtmPvcUserLayer2.setDescription("Userid: just the User's configure sequence Username is identifier in Hierarchy QoS. ")
hwhqosAtmPvcQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hwhqosAtmPvcQueueIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosAtmPvcQueueIndex.setDescription("index of user's queue. 8031: everyuser have 4 queues MA52: everyuser have 8 queues 8090: everyuser have 8 queues if don't have, please fill 0. ")
hwhqosAtmPvcQueueForwardPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosAtmPvcQueueForwardPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosAtmPvcQueueForwardPackets.setDescription('ForwardPackets number of queue. if not support, please fill 0. ')
hwhqosAtmPvcQueueForwardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosAtmPvcQueueForwardBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosAtmPvcQueueForwardBytes.setDescription('ForwardBytes number of queue. if not support, please fill 0. ')
hwhqosAtmPvcQueueDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosAtmPvcQueueDropPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosAtmPvcQueueDropPackets.setDescription('DropPackets number of queue. if not support, please fill 0. ')
hwhqosAtmPvcQueueDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosAtmPvcQueueDropBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosAtmPvcQueueDropBytes.setDescription('DropBytes number of queue. if not support, please fill 0. ')
hwhqosAtmPvcQueueRemarkPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosAtmPvcQueueRemarkPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosAtmPvcQueueRemarkPackets.setDescription('RemarkPackets number of queue. if not support, please fill 0. ')
hwhqosAtmPvcQueueRemarkBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosAtmPvcQueueRemarkBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosAtmPvcQueueRemarkBytes.setDescription('RemarkBytes number of queue. if not support, please fill 0. ')
hwhqosPortQueueTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 3), )
if mibBuilder.loadTexts: hwhqosPortQueueTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueTable.setDescription('Table of configuration about a port-queue.')
hwhqosPortQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 3, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosPortQueueIfIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosPortQueueCosValue"))
if mibBuilder.loadTexts: hwhqosPortQueueEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueEntry.setDescription('Information about configuration of an interface cos-queue.')
hwhqosPortQueueIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosPortQueueIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueIfIndex.setDescription('The value of this object identifies the index of a physical port.The value ranges from 0 to 2147483647.')
hwhqosPortQueueCosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("portqueueBE", 1), ("portqueueAF1", 2), ("portqueueAF2", 3), ("portqueueAF3", 4), ("portqueueAF4", 5), ("portqueueEF", 6), ("portqueueCS6", 7), ("portqueueCS7", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosPortQueueCosValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueCosValue.setDescription('The value of this object identifies the queue type.The value can be any of the following: portqueueBE(1) portqueueAF1(2) portqueueAF2(3) portqueueAF3(4) portqueueAF4(5) portqueueEF(6) portqueueCS6(7) portqueueCS7(8) ')
hwhqosPortQueueArithmetic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("portqueuePQ", 1), ("portqueueWFQ", 2), ("portqueueLPQ", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosPortQueueArithmetic.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueArithmetic.setDescription('The value of this object identifies the queue scheduling arithmetic. The value can be any of the following: portqueuePQ(1) portqueueWFQ(2) portqueueLPQ(3)')
hwhqosPortQueueWeightValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 3, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosPortQueueWeightValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueWeightValue.setDescription('The value of this object identifies the weight of the Weighted Fair Queuing (WFQ) scheduling arithmetic.')
hwhqosPortQueueShaValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 3, 1, 13), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosPortQueueShaValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueShaValue.setDescription('The value of this object identifies the bandwidth allocated to the queue.')
hwhqosPortQueueShaPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 3, 1, 14), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosPortQueueShaPercent.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueShaPercent.setDescription('The value of this object identifies the proportion of the queue bandwidth to the bandwidth of the port.')
hwhqosPortQueueWredName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 3, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosPortQueueWredName.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueWredName.setDescription('This object indicates the name of the Weighted Random Early Detection (WRED) template. The object is a string of 1 to 31 characters.')
hwhqosPortQueuePbsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 262144))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosPortQueuePbsValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueuePbsValue.setDescription('The object specifies the value of the port-queue specific queue pbs.')
hwhqosPortQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 3, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosPortQueueRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueRowStatus.setDescription('This object indicates the row status.')
hwhqosWredTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 4), )
if mibBuilder.loadTexts: hwhqosWredTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredTable.setDescription('Table of configuration about a wred template.')
hwhqosWredEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 4, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosWredName"))
if mibBuilder.loadTexts: hwhqosWredEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredEntry.setDescription('Information about configuration of the value of wred color .')
hwhqosWredName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwhqosWredName.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredName.setDescription('The value of this object identifies the name of the WRED template. The object is a string of 1 to 31 characters.')
hwhqosWredGreenLowLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 4, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosWredGreenLowLimit.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredGreenLowLimit.setDescription('The value of this object identifies the lower threshold of the green port queue.')
hwhqosWredGreenHighLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 4, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosWredGreenHighLimit.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredGreenHighLimit.setDescription('The value of this object identifies the upper threshold of the green port queue.')
hwhqosWredGreenDiscardPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 4, 1, 13), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosWredGreenDiscardPercent.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredGreenDiscardPercent.setDescription('The value of this object identifies the packet loss ratio between the upper threshold and the lower threshold of the green port queue.')
hwhqosWredYellowLowLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 4, 1, 14), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosWredYellowLowLimit.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredYellowLowLimit.setDescription('The value of this object identifies the lower threshold of the yellow port queue.')
hwhqosWredYellowHighLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 4, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosWredYellowHighLimit.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredYellowHighLimit.setDescription('The value of this object identifies the upper threshold of the yellow port queue.')
hwhqosWredYellowDiscardPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 4, 1, 16), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosWredYellowDiscardPercent.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredYellowDiscardPercent.setDescription('The value of this object identifies the packet loss ratio between the upper threshold and the lower threshold of the yellow port queue.')
hwhqosWredRedLowLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 4, 1, 17), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosWredRedLowLimit.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredRedLowLimit.setDescription('The value of this object identifies the lower threshold of the red port queue.')
hwhqosWredRedHighLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 4, 1, 18), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosWredRedHighLimit.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredRedHighLimit.setDescription('The value of this object identifies the upper threshold of the red port queue.')
hwhqosWredRedDiscardPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 4, 1, 19), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosWredRedDiscardPercent.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredRedDiscardPercent.setDescription('The value of this object identifies the packet loss ratio between the upper threshold and the lower threshold of the red port queue.')
hwhqosWredRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 4, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosWredRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredRowStatus.setDescription('This object indicates the row status.')
hwhqosIfQueueStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 5), )
if mibBuilder.loadTexts: hwhqosIfQueueStatTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfQueueStatTable.setDescription('Interface queue statistic table.')
hwhqosIfQueueStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 5, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosIfQueueStatIfIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosIfQueueStatQueueIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosIfQueueStatDirection"))
if mibBuilder.loadTexts: hwhqosIfQueueStatEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfQueueStatEntry.setDescription('Interface Queue statistic table entry.')
hwhqosIfQueueStatIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 5, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwhqosIfQueueStatIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfQueueStatIfIndex.setDescription('Interface index. ')
hwhqosIfQueueStatQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8))))
if mibBuilder.loadTexts: hwhqosIfQueueStatQueueIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfQueueStatQueueIndex.setDescription('Index number of queues with priority. The values and meanings are as follows: 1 be 2 af1 3 af2 4 af3 5 af4 6 ef 7 cs6 8 cs7 ')
hwhqosIfQueueStatDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2))))
if mibBuilder.loadTexts: hwhqosIfQueueStatDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfQueueStatDirection.setDescription('Direction: inbound 1,outbound 2')
hwhqosIfQueueStatForwardPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosIfQueueStatForwardPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfQueueStatForwardPackets.setDescription('Number of forwarded packets.')
hwhqosIfQueueStatForwardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosIfQueueStatForwardBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfQueueStatForwardBytes.setDescription('Number of forwarded bytes.')
hwhqosIfQueueStatDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosIfQueueStatDropPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfQueueStatDropPackets.setDescription('Number of discarded packets.')
hwhqosIfQueueStatDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosIfQueueStatDropBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfQueueStatDropBytes.setDescription('Number of discarded bytes.')
hwhqosUserQueueStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 6), )
if mibBuilder.loadTexts: hwhqosUserQueueStatTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatTable.setDescription('User queue statistic table.')
hwhqosUserQueueStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 6, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosUserQueueStatType"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserQueueStatNameString"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserQueueStatDirection"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserQueueStatQueueIndex"))
if mibBuilder.loadTexts: hwhqosUserQueueStatEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatEntry.setDescription('User Queue statistic table entry')
hwhqosUserQueueStatType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("interface", 1), ("mactunel", 2), ("userclassifier", 3))))
if mibBuilder.loadTexts: hwhqosUserQueueStatType.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatType.setDescription('Types of statistic: interface(1), mactunel(2), userclassifier(3) ')
hwhqosUserQueueStatNameString = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 6, 1, 2), OctetString())
if mibBuilder.loadTexts: hwhqosUserQueueStatNameString.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatNameString.setDescription('Name character string: If the statistic is based on mac-tunnel, this field is the name of the mac-tunnel. If the statistic is based on user classification, this field is the name of the user classification. If the statistic is based on an interface, this field is the name of the interface. ')
hwhqosUserQueueStatDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2))))
if mibBuilder.loadTexts: hwhqosUserQueueStatDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatDirection.setDescription('Direction: If the statistic is based on user classification, the direction is divided to upstream (1) and downstream (2). If the Statistic is based on mac-tunnel, the direction is applied only on the downstream (2).')
hwhqosUserQueueStatQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8), ("total", 9))))
if mibBuilder.loadTexts: hwhqosUserQueueStatQueueIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatQueueIndex.setDescription('Index number of the queues. The values and meanings are as follows: 1 be 2 af1 3 af2 4 af3 5 af4 6 ef 7 cs6 8 cs7 9 total ')
hwhqosUserQueueStatForwardPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueStatForwardPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatForwardPackets.setDescription('The number of packets that pass through.')
hwhqosUserQueueStatForwardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueStatForwardBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatForwardBytes.setDescription('The number of bytes that pass through.')
hwhqosUserQueueStatDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueStatDropPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatDropPackets.setDescription('The number of discarded packets.')
hwhqosUserQueueStatDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueStatDropBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatDropBytes.setDescription('The number of discarded bytes.')
hwhqosUserQueueStatReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwhqosUserQueueStatReset.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatReset.setDescription('Counter resetting. If the value is 1, the object resets the statistics through the set operation. It is no of use to access the value of this object. ')
hwhqosUserQueueStatLastResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 6, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueStatLastResetTime.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatLastResetTime.setDescription('The time stamp that the counter is reset last.')
hwhqosUserQueueStatPerDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 6, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueStatPerDropPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatPerDropPackets.setDescription('The number of discarded packets in a certain period.')
hwhqosUserGroupQueueStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 7), )
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatTable.setDescription('User group queue statistic table.')
hwhqosUserGroupQueueStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 7, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatGroupName"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatDirection"))
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatEntry.setDescription('user group queue statistic table entry')
hwhqosUserGroupQueueStatGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 7, 1, 1), OctetString())
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatGroupName.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatGroupName.setDescription('User group name. ')
hwhqosUserGroupQueueStatDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbount", 1), ("outbound", 2))))
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatDirection.setDescription('Direction: upstream (1), downstream (2);')
hwhqosUserGroupQueueForwardPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 7, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueForwardPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueForwardPackets.setDescription('The number of packets that pass through.')
hwhqosUserGroupQueueForwardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueForwardBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueForwardBytes.setDescription('The number of bytes that pass through.')
hwhqosUserGroupQueueDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 7, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueDropPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueDropPackets.setDescription('The number of discarded packets.')
hwhqosUserGroupQueueDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 7, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueDropBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueDropBytes.setDescription('The number of discarded bytes.')
hwhqosUserGroupQueueStatReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatReset.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatReset.setDescription('Counter resetting. If the value is reset(1), the object resets the statistics through the set operation. It is no of use to access the value of this object.')
hwhqosUserGroupQueueStatLastResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 7, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatLastResetTime.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatLastResetTime.setDescription('The time stamp that the counter is reset last.')
hwVPNHQoSTunnelStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 8), )
if mibBuilder.loadTexts: hwVPNHQoSTunnelStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: hwVPNHQoSTunnelStatisticsTable.setDescription('VPN qos tunnel statistic table.')
hwVPNHQoSTunnelStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 8, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwVPNHQoSTunnelIfIndex"), (0, "HUAWEI-HQOS-MIB", "hwVPNHQoSVPNType"), (0, "HUAWEI-HQOS-MIB", "hwVPNHQoSVPNValue"))
if mibBuilder.loadTexts: hwVPNHQoSTunnelStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: hwVPNHQoSTunnelStatisticsEntry.setDescription('VPN qos tunnel statistic table entry: L3VPN,VPLS and VLL are all supported. ')
hwVPNHQoSTunnelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVPNHQoSTunnelIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwVPNHQoSTunnelIfIndex.setDescription('VPN Tunnel interface index.')
hwVPNHQoSVPNType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVPNHQoSVPNType.setStatus('current')
if mibBuilder.loadTexts: hwVPNHQoSVPNType.setDescription('VPN Type: Tunnel (0), L3VPN (1), VPLS (2), VLL(3);')
hwVPNHQoSVPNValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 8, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVPNHQoSVPNValue.setStatus('current')
if mibBuilder.loadTexts: hwVPNHQoSVPNValue.setDescription('Name of VPN Instance.')
hwVPNHQoSPassBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 8, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVPNHQoSPassBytes.setStatus('current')
if mibBuilder.loadTexts: hwVPNHQoSPassBytes.setDescription('The number of bytes that pass through.')
hwVPNHQoSPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 8, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVPNHQoSPassPackets.setStatus('current')
if mibBuilder.loadTexts: hwVPNHQoSPassPackets.setDescription('The number of packets that pass through.')
hwVPNHQoSDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 8, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVPNHQoSDropPackets.setStatus('current')
if mibBuilder.loadTexts: hwVPNHQoSDropPackets.setDescription('The number of discarded packets.')
hwVPNHQoSDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 8, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVPNHQoSDropBytes.setStatus('current')
if mibBuilder.loadTexts: hwVPNHQoSDropBytes.setDescription(' The number of discarded bytes.')
hwhqosTunnelStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 9), )
if mibBuilder.loadTexts: hwhqosTunnelStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosTunnelStatisticsTable.setDescription('Tunnel statistic table.')
hwhqosTunnelStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 9, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosTunnelIfIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosTunnelCosType"), (0, "HUAWEI-HQOS-MIB", "hwhqosTunnelVPNType"), (0, "HUAWEI-HQOS-MIB", "hwhqosTunnelVPNName"))
if mibBuilder.loadTexts: hwhqosTunnelStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosTunnelStatisticsEntry.setDescription('Tunnel statistic table entry: L3VPN,VPLS and VLL are all supported. ')
hwhqosTunnelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosTunnelIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosTunnelIfIndex.setDescription('Tunnel interface index.')
hwhqosTunnelCosType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 9, 1, 2), CosType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosTunnelCosType.setStatus('current')
if mibBuilder.loadTexts: hwhqosTunnelCosType.setDescription('BE(1) AF1(2) AF2(3) AF3(4) AF4(5) EF(6) CS6(7) CS7(8)')
hwhqosTunnelVPNType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosTunnelVPNType.setStatus('current')
if mibBuilder.loadTexts: hwhqosTunnelVPNType.setDescription('VPN Type: Tunnel (0), L3VPN (1), VPLS (2), VLL(3);')
hwhqosTunnelVPNName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 9, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosTunnelVPNName.setStatus('current')
if mibBuilder.loadTexts: hwhqosTunnelVPNName.setDescription('Name of VPN Instance.')
hwhqosTunnelPassBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 9, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosTunnelPassBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosTunnelPassBytes.setDescription('The number of bytes that pass through.')
hwhqosTunnelPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 9, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosTunnelPassPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosTunnelPassPackets.setDescription('The number of packets that pass through.')
hwhqosTunnelDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 9, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosTunnelDropBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosTunnelDropBytes.setDescription(' The number of discarded bytes.')
hwhqosTunnelDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 9, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosTunnelDropPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosTunnelDropPackets.setDescription('The number of discarded packets.')
hwhqosTunnelPassedByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 9, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosTunnelPassedByteRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosTunnelPassedByteRate.setDescription('Rate of bytes passed of enqueue. Unit: Bps')
hwhqosTunnelPassPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 9, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosTunnelPassPacketRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosTunnelPassPacketRate.setDescription('Rate of packets passed of enqueue. Unit: pps')
hwhqosProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 10), )
if mibBuilder.loadTexts: hwhqosProfileTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileTable.setDescription(' hwhqosProfileTable ')
hwhqosProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 10, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosProfileName"))
if mibBuilder.loadTexts: hwhqosProfileEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileEntry.setDescription(' hwhqosProfileEntry ')
hwhqosProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 10, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileName.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileName.setDescription('The value of this object identifies the name of a QoS profile.')
hwhqosProfileDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 10, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileDescription.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileDescription.setDescription(' hwhqosProfileDescription ')
hwhqosProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 10, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileRowStatus.setDescription('This object indicates the row status.')
hwhqosProfileSuppressionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 11), )
if mibBuilder.loadTexts: hwhqosProfileSuppressionTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileSuppressionTable.setDescription(' hwhqosProfileSuppressionTable ')
hwhqosProfileSuppressionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 11, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosProfileName"), (0, "HUAWEI-HQOS-MIB", "hwhqosSuppressionDirection"), (0, "HUAWEI-HQOS-MIB", "hwhqosSuppressionType"))
if mibBuilder.loadTexts: hwhqosProfileSuppressionEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileSuppressionEntry.setDescription(' hwhqosProfileSuppressionEntry ')
hwhqosSuppressionDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("inout", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosSuppressionDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosSuppressionDirection.setDescription('This object indicates the direction where packets are suppressed.')
hwhqosSuppressionType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("broadcast", 1), ("multicast", 2), ("unkonwnUnicast", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosSuppressionType.setStatus('current')
if mibBuilder.loadTexts: hwhqosSuppressionType.setDescription('This object indicates the suppression type.')
hwhqosSuppressionCirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosSuppressionCirValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosSuppressionCirValue.setDescription('The value of this object identifies the CIR.')
hwhqosSuppressionCbsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 11, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 33554432))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosSuppressionCbsValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosSuppressionCbsValue.setDescription('The value of this object identifies the CBS.')
hwhqosSuppressionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 11, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosSuppressionRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosSuppressionRowStatus.setDescription('This object indicates the row status. Currently, three row statuses are supported: Active, CreateAndGo, and Destroy.')
hwhqosProfileCarTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 12), )
if mibBuilder.loadTexts: hwhqosProfileCarTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarTable.setDescription(' hwhqosProfileCarTable ')
hwhqosProfileCarEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 12, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosProfileName"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileCarDirection"))
if mibBuilder.loadTexts: hwhqosProfileCarEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarEntry.setDescription(' hwhqosProfileCarEntry ')
hwhqosProfileCarDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("inout", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileCarDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarDirection.setDescription('This object indicates the direction where traffic is policed.')
hwhqosProfileCarCirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileCarCirValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarCirValue.setDescription('The value of this object identifies the CIR.')
hwhqosProfileCarPirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileCarPirValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarPirValue.setDescription('The value of this object identifies the PIR.')
hwhqosProfileCarCbsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileCarCbsValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarCbsValue.setDescription('The value of this object identifies the CBS.')
hwhqosProfileCarPbsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileCarPbsValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarPbsValue.setDescription('The value of this object identifies the PBS.')
hwhqosProfileCarGreenAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pass", 1), ("discard", 2))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileCarGreenAction.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarGreenAction.setDescription('This object indicates the actions (pass and discard) taken on the packets marked in green.')
hwhqosProfileCarYellowAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pass", 1), ("discard", 2))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileCarYellowAction.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarYellowAction.setDescription('This object indicates the actions (pass and discard) taken on the packets marked in yellow.')
hwhqosProfileCarRedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 12, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pass", 1), ("discard", 2))).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileCarRedAction.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarRedAction.setDescription('This object indicates the actions (pass and discard) taken on the packets marked in red.')
hwhqosProfileCarRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 12, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileCarRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarRowStatus.setDescription('This object indicates the row status. Currently, three row statuses are supported: Active, CreateAndGo, and Destroy.')
hwhqosProfileUserQueueTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 13), )
if mibBuilder.loadTexts: hwhqosProfileUserQueueTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueTable.setDescription(' hwhqosProfileUserQueueTable ')
hwhqosProfileUserQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 13, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosProfileName"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueDirection"))
if mibBuilder.loadTexts: hwhqosProfileUserQueueEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueEntry.setDescription(' hwhqosProfileUserQueueEntry ')
hwhqosProfileUserQueueDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("inout", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileUserQueueDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueDirection.setDescription('This object indicates the direction where a user queue is scheduled.')
hwhqosProfileUserQueueCirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 10000000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileUserQueueCirValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueCirValue.setDescription('The value of this object identifies the guaranteed bandwidth of a user queue.')
hwhqosProfileUserQueuePirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 10000000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileUserQueuePirValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueuePirValue.setDescription('The value of this object identifies the PIR of a user queue.')
hwhqosProfileUserQueueFlowQueueName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 13, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileUserQueueFlowQueueName.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueFlowQueueName.setDescription('The value of this object identifies the name of a flow queue template.')
hwhqosProfileUserQueueMappingName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 13, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileUserQueueMappingName.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueMappingName.setDescription('The value of this object identifies the name of a flow queue mapping object.')
hwhqosProfileUserQueueGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 13, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileUserQueueGroupName.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueGroupName.setDescription('The value of this object identifies the name of a user group queue.')
hwhqosProfileUserQueueServiceTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 13, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileUserQueueServiceTemplateName.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueServiceTemplateName.setDescription('The value of this object identifies the name of a user-defined service template.')
hwhqosProfileUserQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 13, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileUserQueueRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueRowStatus.setDescription('This object indicates the row status. Currently, three row statuses are supported: Active, CreateAndGo, and Destroy.')
hwhqosProfileApplyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 14), )
if mibBuilder.loadTexts: hwhqosProfileApplyTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyTable.setDescription(' hwhqosProfileApplyTable ')
hwhqosProfileApplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 14, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosProfileInterfaceIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileApplyDirection"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileApplyPevid"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileApplyCevid"))
if mibBuilder.loadTexts: hwhqosProfileApplyEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyEntry.setDescription(' hwhqosProfileApplyEntry ')
hwhqosProfileInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 14, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileInterfaceIndex.setDescription('This object indicates the interface index.')
hwhqosProfileApplyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileApplyDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyDirection.setDescription('This object indicates the direction where a QoS profile is applied.')
hwhqosProfileApplyPevid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileApplyPevid.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyPevid.setDescription('The value of this object identifies the VLAN ID of a specified PE.')
hwhqosProfileApplyCevid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 14, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileApplyCevid.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyCevid.setDescription('The value of this object identifies the VLAN ID of a specified CE.')
hwhqosProfileApplyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 14, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileApplyName.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyName.setDescription('The value of this object identifies the name of a QoS profile.')
hwhqosProfileApplyIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 14, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("vlanId", 2), ("ceVid", 3), ("peVid", 4), ("peCeVid", 5))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileApplyIdentifier.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyIdentifier.setDescription('This object indicates the queue where packets enter.')
hwhqosGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 14, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosGroupName.setStatus('current')
if mibBuilder.loadTexts: hwhqosGroupName.setDescription('The value of this object identifies the name of a shared group of QoS profile instances.')
hwhqosProfileApplyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 14, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileApplyRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyRowStatus.setDescription('This object indicates the row status. Currently, three row statuses are supported: Active, CreateAndGo, and Destroy.')
hwhqosFlowMappingTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 15), )
if mibBuilder.loadTexts: hwhqosFlowMappingTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowMappingTable.setDescription(' hwhqosFlowMappingTable ')
hwhqosFlowMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 15, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosFlowMappingName"))
if mibBuilder.loadTexts: hwhqosFlowMappingEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowMappingEntry.setDescription(' hwhqosFlowMappingEntry ')
hwhqosFlowMappingName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 15, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosFlowMappingName.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowMappingName.setDescription('The value of this object identifies the name of a flow queue mapping object.')
hwhqosFlowMappingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 15, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowMappingRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowMappingRowStatus.setDescription('This object indicates the row status. Currently, three row statuses are supported: Active, CreateAndGo, and Destroy.')
hwhqosFlowMappingCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 16), )
if mibBuilder.loadTexts: hwhqosFlowMappingCfgTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowMappingCfgTable.setDescription(' hwhqosFlowMappingCfgTable ')
hwhqosFlowMappingCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 16, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosFlowMappingName"), (0, "HUAWEI-HQOS-MIB", "hwhqosFolwMappingCfgQueueCosValue"))
if mibBuilder.loadTexts: hwhqosFlowMappingCfgEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowMappingCfgEntry.setDescription(' hwhqosFlowMappingCfgEntry ')
hwhqosFolwMappingCfgQueueCosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosFolwMappingCfgQueueCosValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosFolwMappingCfgQueueCosValue.setDescription('This object indicates the service type of a class queue.')
hwhqosFlowMappingCfgPortQueueCosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowMappingCfgPortQueueCosValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowMappingCfgPortQueueCosValue.setDescription('This object indicates the service type of a port queue.')
hwhqosFlowMappingCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 16, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowMappingCfgRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowMappingCfgRowStatus.setDescription('This object indicates the row status. Currently, three row statuses are supported: Active, CreateAndGo, and Destroy.')
hwhqosFlowQueueTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 17), )
if mibBuilder.loadTexts: hwhqosFlowQueueTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueTable.setDescription(' hwhqosFlowQueueTable ')
hwhqosFlowQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 17, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosFlowQueueName"))
if mibBuilder.loadTexts: hwhqosFlowQueueEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueEntry.setDescription(' hwhqosFlowQueueEntry ')
hwhqosFlowQueueName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 17, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosFlowQueueName.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueName.setDescription('The value of this object identifies the name of a flow queue template.')
hwhqosFlowQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 17, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowQueueRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueRowStatus.setDescription('This object indicates the row status. Currently, three row statuses are supported: Active, CreateAndGo, and Destroy.')
hwhqosFlowQueueCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 18), )
if mibBuilder.loadTexts: hwhqosFlowQueueCfgTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueCfgTable.setDescription(' hwhqosFlowQueueCfgTable ')
hwhqosFlowQueueCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 18, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosFlowQueueName"), (0, "HUAWEI-HQOS-MIB", "hwhqosFlowQueueCfgCosValue"))
if mibBuilder.loadTexts: hwhqosFlowQueueCfgEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueCfgEntry.setDescription(' hwhqosFlowQueueCfgEntry ')
hwhqosFlowQueueCfgCosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowQueueCfgCosValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueCfgCosValue.setDescription('This object indicates the configured priority of a flow queue.')
hwhqosFlowQueueCfgType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pq", 1), ("wfq", 2), ("lpq", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowQueueCfgType.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueCfgType.setDescription('This object indicates the scheduling mode of a flow queue.')
hwhqosFlowQueueCfgWeightValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 100), ValueRangeConstraint(2147483647, 2147483647), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowQueueCfgWeightValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueCfgWeightValue.setDescription('The value of this object identifies the WFQ scheduling weight.')
hwhqosFlowQueueCfgShapingValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(8, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowQueueCfgShapingValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueCfgShapingValue.setDescription('The value of this object identifies the shaping rate, namely, the configured interface bandwidth. The value of this object is equal to the PIR value.')
hwhqosFlowQueueCfgShapingPercentageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 18, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 100), ValueRangeConstraint(2147483647, 2147483647), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowQueueCfgShapingPercentageValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueCfgShapingPercentageValue.setDescription('The value of this object identifies the percentage of the shaping rate, that is, the percentage of the traffic-shaping bandwidth to the interface bandwidth.')
hwhqosFlowQueueCfgWredName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 18, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowQueueCfgWredName.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueCfgWredName.setDescription('The value of this object identifies the WRED object used by a flow queue.')
hwhqosFlowQueueCfgPbsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 18, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4194304))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowQueueCfgPbsValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueCfgPbsValue.setDescription('The object specifies the value of the flow-queue specific queue pbs.')
hwhqosFlowQueueCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 18, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowQueueCfgRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueCfgRowStatus.setDescription('This object indicates the row status. Currently, three row statuses are supported: Active, CreateAndGo, and Destroy.')
hwhqosFlowWredTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 19), )
if mibBuilder.loadTexts: hwhqosFlowWredTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowWredTable.setDescription(' hwhqosFlowWredTable ')
hwhqosFlowWredEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 19, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosFlowWredName"))
if mibBuilder.loadTexts: hwhqosFlowWredEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowWredEntry.setDescription(' hwhqosFlowQueueEntry ')
hwhqosFlowWredName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 19, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosFlowWredName.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowWredName.setDescription('The value of this object identifies the name of a flow queue template.')
hwhqosFlowWredRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 19, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowWredRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowWredRowStatus.setDescription('This object indicates the row status. Currently, three row statuses are supported: Active, CreateAndGo, and Destroy.')
hwhqosFlowWredColorTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 20), )
if mibBuilder.loadTexts: hwhqosFlowWredColorTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowWredColorTable.setDescription(' hwhqosFlowWredColorTable ')
hwhqosFlowWredColorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 20, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosFlowWredName"), (0, "HUAWEI-HQOS-MIB", "hwhqosFlowWredColor"))
if mibBuilder.loadTexts: hwhqosFlowWredColorEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowWredColorEntry.setDescription(' hwhqosFlowWredColorEntry ')
hwhqosFlowWredColor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("green", 1), ("yellow", 2), ("red", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosFlowWredColor.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowWredColor.setDescription('This object indicates the color for marking packets.')
hwhqosFlowWredColorLowlimitPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 20, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowWredColorLowlimitPercentage.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowWredColorLowlimitPercentage.setDescription('The value of this object identifies the percentage of the WRED lower threshold, that is, the percentage of the WRED lower threshold to the flow queue length. When the average queue length reaches this number, packets are discarded.')
hwhqosFlowWredColorHighlimitPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 20, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowWredColorHighlimitPercentage.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowWredColorHighlimitPercentage.setDescription('The value of this object identifies the percentage of the WRED upper threshold, that is, the percentage of the WRED upper threshold to the flow queue length. When the average queue length reaches this number, packets are discarded.')
hwhqosFlowWredColorDiscardPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 20, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowWredColorDiscardPercentage.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowWredColorDiscardPercentage.setDescription('The value of this object identifies the percentage of the packets that are discarded by WRED.')
hwhqosFlowWredColorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 20, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowWredColorRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowWredColorRowStatus.setDescription('This object indicates the row status. Currently, three row statuses are supported: Active, CreateAndGo, and Destroy.')
hwhqosUserGroupQueueTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 21), )
if mibBuilder.loadTexts: hwhqosUserGroupQueueTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueTable.setDescription(' hwhqosUserGroupQueueTable ')
hwhqosUserGroupQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 21, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueName"))
if mibBuilder.loadTexts: hwhqosUserGroupQueueEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueEntry.setDescription(' hwhqosUserGroupQueueEntry ')
hwhqosUserGroupQueueName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 21, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueName.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueName.setDescription('The value of this object identifies the name of a user group queue.')
hwhqosUserGroupQueueSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserGroupQueueSlotNumber.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueSlotNumber.setDescription('The value of this object identifies the number of the slot where a user group queue object is located.')
hwhqosUserGroupQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 21, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserGroupQueueRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueRowStatus.setDescription('This object indicates the row status. Currently, three row statuses are supported: Active, CreateAndGo, and Destroy.')
hwhqosUserGroupQueueShapingTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 22), )
if mibBuilder.loadTexts: hwhqosUserGroupQueueShapingTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueShapingTable.setDescription(' hwhqosUserGroupQueueShapingTable ')
hwhqosUserGroupQueueShapingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 22, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueName"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueShapingDirection"))
if mibBuilder.loadTexts: hwhqosUserGroupQueueShapingEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueShapingEntry.setDescription(' hwhqosUserGroupQueueShapingEntry ')
hwhqosUserGroupQueueShapingDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 22, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueShapingDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueShapingDirection.setDescription('This object indicates the direction where a user group queue is scheduled.')
hwhqosUserGroupQueueShapingValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 22, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(66, 10000000))).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserGroupQueueShapingValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueShapingValue.setDescription('The value of this object identifies the PIR of a user group queue.')
hwhqosUserGroupQueuePbsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 22, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 2097152))).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserGroupQueuePbsValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueuePbsValue.setDescription(' The object specifies the value of the user group queue pbs. ')
hwhqosUserGroupQueueShapingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 22, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserGroupQueueShapingRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueShapingRowStatus.setDescription('This object indicates the row status. Currently, three row statuses are supported: Active, CreateAndGo, and Destroy.')
hwhqosUserQueueTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 23), )
if mibBuilder.loadTexts: hwhqosUserQueueTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueTable.setDescription(' hwhqosUserQueueTable ')
hwhqosUserQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 23, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosUserQueueInterfaceIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserQueueDirection"))
if mibBuilder.loadTexts: hwhqosUserQueueEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueEntry.setDescription(' hwhqosUserQueueEntry ')
hwhqosUserQueueInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 23, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueInterfaceIndex.setDescription('This object indicates the interface index.')
hwhqosUserQueueDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 23, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueDirection.setDescription('This object indicates the direction where a user queue is scheduled.')
hwhqosUserQueueCirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 23, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 1000000), ))).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserQueueCirValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueCirValue.setDescription('The value of this object identifies the guaranteed bandwidth of a user queue.')
hwhqosUserQueuePirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 23, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 1000000), ))).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserQueuePirValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueuePirValue.setDescription('The value of this object identifies the PIR of a user queue.')
hwhqosUserQueueFlowQueueName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 23, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserQueueFlowQueueName.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueFlowQueueName.setDescription('The value of this object identifies the flow queue template that is applied.')
hwhqosUserQueueFlowMappingName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 23, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserQueueFlowMappingName.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueFlowMappingName.setDescription('The value of this object identifies the flow queue mapping object that is applied.')
hwhqosUserQueueGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 23, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserQueueGroupName.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueGroupName.setDescription('The value of this object identifies the name of the user group queue that is applied.')
hwhqosUserQueueServiceTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 23, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserQueueServiceTemplateName.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueServiceTemplateName.setDescription('The value of this object identifies the name of the service template that is applied.')
hwhqosUserQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 23, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserQueueRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueRowStatus.setDescription('This object indicates the row status. Currently, three row statuses are supported: Active, CreateAndGo, and Destroy.')
hwhqosBehaviorUserQueueTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 24), )
if mibBuilder.loadTexts: hwhqosBehaviorUserQueueTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosBehaviorUserQueueTable.setDescription(' hwBehaviorhqosUserQueueTable ')
hwhqosBehaviorUserQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 24, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosBehaviorName"))
if mibBuilder.loadTexts: hwhqosBehaviorUserQueueEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosBehaviorUserQueueEntry.setDescription(' hwhqosBehaviorUserQueueEntry ')
hwhqosBehaviorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 24, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosBehaviorName.setStatus('current')
if mibBuilder.loadTexts: hwhqosBehaviorName.setDescription('The value of this object identifies the name of a flow behavior.')
hwhqosBehaviorCirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 24, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 10000000), ))).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosBehaviorCirValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosBehaviorCirValue.setDescription('The value of this object identifies the guaranteed bandwidth of a flow user queue.')
hwhqosBehaviorPirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 24, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 10000000), ))).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosBehaviorPirValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosBehaviorPirValue.setDescription('The value of this object identifies the PIR of a flow user queue.')
hwhqosBehaviorFlowQueueName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 24, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosBehaviorFlowQueueName.setStatus('current')
if mibBuilder.loadTexts: hwhqosBehaviorFlowQueueName.setDescription('The value of this object identifies the flow queue template that is applied.')
hwhqosBehaviorFlowMappingName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 24, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosBehaviorFlowMappingName.setStatus('current')
if mibBuilder.loadTexts: hwhqosBehaviorFlowMappingName.setDescription('The value of this object identifies the flow queue mapping object that is applied.')
hwhqosBehaviorGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 24, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosBehaviorGroupName.setStatus('current')
if mibBuilder.loadTexts: hwhqosBehaviorGroupName.setDescription('The value of this object identifies the name of the user group queue that is applied.')
hwhqosBehaviorServiceTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 24, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosBehaviorServiceTemplateName.setStatus('current')
if mibBuilder.loadTexts: hwhqosBehaviorServiceTemplateName.setDescription('The value of this object identifies the name of the service template that is applied.')
hwhqosBehaviorUserQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 24, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosBehaviorUserQueueRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosBehaviorUserQueueRowStatus.setDescription('This object indicates the row status. Currently, three row statuses are supported: Active, CreateAndGo, and Destroy.')
hwhqosBandwidthTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 25), )
if mibBuilder.loadTexts: hwhqosBandwidthTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosBandwidthTable.setDescription(' hwhqosBandwidthTable ')
hwhqosBandwidthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 25, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosBandwidthInterfaceIndex"))
if mibBuilder.loadTexts: hwhqosBandwidthEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosBandwidthEntry.setDescription(' hwhqosBandwidthEntry ')
hwhqosBandwidthInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 25, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosBandwidthInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosBandwidthInterfaceIndex.setDescription('This object indicates the name of a trunk interface.')
hwhqosBandwidthValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 25, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000)).clone(1000)).setUnits('Mbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosBandwidthValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosBandwidthValue.setDescription('The value of this object identifies the bandwidth of a trunk interface.')
hwhqosBandwidthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 25, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosBandwidthRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosBandwidthRowStatus.setDescription('This object indicates the row status. Currently, three row statuses are supported: Active, CreateAndGo, and Destroy.')
hwhqosServiceTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 26), )
if mibBuilder.loadTexts: hwhqosServiceTemplateTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceTemplateTable.setDescription(' hwhqosServiceTemplateTable ')
hwhqosServiceTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 26, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosServiceTemplateName"))
if mibBuilder.loadTexts: hwhqosServiceTemplateEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceTemplateEntry.setDescription(' hwhqosServiceTemplateEntry ')
hwhqosServiceTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 26, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosServiceTemplateName.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceTemplateName.setDescription('The value of this object identifies the name of a user-defined service template.')
hwhqosSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 26, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosSlotNumber.setStatus('current')
if mibBuilder.loadTexts: hwhqosSlotNumber.setDescription('The value of this object identifies the number of the slot where a user-defined service template is located.')
hwhqosServiceTemplateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 26, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosServiceTemplateRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceTemplateRowStatus.setDescription('This object indicates the row status. Currently, three row statuses are supported: Active, CreateAndGo, and Destroy.')
hwhqosNetworkHeaderLengthTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 27), )
if mibBuilder.loadTexts: hwhqosNetworkHeaderLengthTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosNetworkHeaderLengthTable.setDescription(' hwhqosNetworkHeaderLengthTable ')
hwhqosNetworkHeaderLengthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 27, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosServiceTemplateName"), (0, "HUAWEI-HQOS-MIB", "hwhqosNetworkHeaderLengthDirection"))
if mibBuilder.loadTexts: hwhqosNetworkHeaderLengthEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosNetworkHeaderLengthEntry.setDescription(' hwhqosNetworkHeaderLengthEntry ')
hwhqosNetworkHeaderLengthDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 27, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosNetworkHeaderLengthDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosNetworkHeaderLengthDirection.setDescription('This object indicates the direction where the packet loss compensation of a service template is configured.')
hwhqosNetWorkHeaderLengthValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 27, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-63, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosNetWorkHeaderLengthValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosNetWorkHeaderLengthValue.setDescription('The value of this object identifies the accuracy of the length for the packet loss compensation of a service template.')
hwhqosNetWorkHeaderLengthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 27, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosNetWorkHeaderLengthRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosNetWorkHeaderLengthRowStatus.setDescription('This object indicates the row status. Currently, three row statuses are supported: Active, CreateAndGo, and Destroy.')
hwhqosServiceTemplateApplyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 28), )
if mibBuilder.loadTexts: hwhqosServiceTemplateApplyTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceTemplateApplyTable.setDescription(' hwhqosServiceTemplateApplyTable ')
hwhqosServiceTemplateApplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 28, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosServiceTemplateApplyInterfaceIndex"))
if mibBuilder.loadTexts: hwhqosServiceTemplateApplyEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceTemplateApplyEntry.setDescription(' hwhqosServiceTemplateApplyEntry ')
hwhqosServiceTemplateApplyInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 28, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosServiceTemplateApplyInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceTemplateApplyInterfaceIndex.setDescription('This object indicates the name of the interface.')
hwhqosApplyServiceTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 28, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosApplyServiceTemplateName.setStatus('current')
if mibBuilder.loadTexts: hwhqosApplyServiceTemplateName.setDescription('The value of this object identifies the name of a user-defined service template.')
hwhqosServiceTemplateApplyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 28, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosServiceTemplateApplyRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceTemplateApplyRowStatus.setDescription('This object indicates the row status. Currently, three row statuses are supported: Active, CreateAndGo, and Destroy.')
hwhqosProfileUserQueueStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29), )
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsTable.setDescription(' hwhqosProfileUserQueueStatisticsTable ')
hwhqosProfileUserQueueStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsInterfaceIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsDirection"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsPevid"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsCevid"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsSlotNumber"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsQueueIndex"))
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsEntry.setDescription(' hwhqosProfileUserQueueStatisticsEntry ')
hwhqosProfileUserQueueStatisticsInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsInterfaceIndex.setDescription('This object indicates the interface index.')
hwhqosProfileUserQueueStatisticsDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsDirection.setDescription('This object indicates the direction where a QoS profile is applied.')
hwhqosProfileUserQueueStatisticsPevid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsPevid.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsPevid.setDescription('The value of this object identifies the PE VID (outer tag value) of a QoS profile.')
hwhqosProfileUserQueueStatisticsCevid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsCevid.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsCevid.setDescription('The value of this object identifies the CE VID (inner tag value) or the VLAN ID of a QoS profile.')
hwhqosProfileUserQueueStatisticsSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsSlotNumber.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsSlotNumber.setDescription('The value of this object identifies the number of the slot where the interface for applying a QoS profile is located.')
hwhqosProfileUserQueueStatisticsQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8), ("total", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsQueueIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsQueueIndex.setDescription('This object indicates the priority of the user queue whose statistics are queried.')
hwhqosProfileUserQueueStatisticsReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsReset.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsReset.setDescription('This object indicates the resetting of statistics.')
hwhqosProfileUserQueueStatisticsPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29, 1, 8), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsPassPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsPassPackets.setDescription('This object indicates the number of passed packets.')
hwhqosProfileUserQueueStatisticsPassBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29, 1, 9), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsPassBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsPassBytes.setDescription('This object indicates the number of passed bytes.')
hwhqosProfileUserQueueStatisticsDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29, 1, 10), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsDropPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsDropPackets.setDescription('This object indicates the number of discarded packets.')
hwhqosProfileUserQueueStatisticsDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29, 1, 11), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsDropBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsDropBytes.setDescription('This object indicates the number of discarded bytes.')
hwhqosProfileUserQueueStatisticsPassPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29, 1, 12), Counter64()).setUnits('pps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsPassPacketsRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsPassPacketsRate.setDescription('This object indicates the packet pass rate.')
hwhqosProfileUserQueueStatisticsPassBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29, 1, 13), Counter64()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsPassBytesRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsPassBytesRate.setDescription('This object indicates the byte pass rate.')
hwhqosProfileUserQueueStatisticsDropPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29, 1, 14), Counter64()).setUnits('pps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsDropPacketsRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsDropPacketsRate.setDescription('This object indicates the packet discarding rate.')
hwhqosProfileUserQueueStatisticsDropBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29, 1, 15), Counter64()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsDropBytesRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsDropBytesRate.setDescription('This object indicates the byte discarding rate.')
hwhqosProfileUserQueueStatisticsTrafficTowardsThisInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29, 1, 16), Counter64()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsTrafficTowardsThisInterface.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsTrafficTowardsThisInterface.setDescription('This object indicates the traffic which towards this interface.')
hwhqosProfileUserQueueStatisticsConfiguredCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29, 1, 17), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 4294967294), ))).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsConfiguredCir.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsConfiguredCir.setDescription('This object indicates the configured CIR.')
hwhqosProfileUserQueueStatisticsConfiguredPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 29, 1, 18), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 4294967294), ))).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsConfiguredPir.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsConfiguredPir.setDescription('This object indicates the configured PIR.')
hwhqosProfileCarStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 30), )
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsTable.setDescription(' hwhqosProfileCarStatisticsTable ')
hwhqosProfileCarStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 30, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsInterfaceIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsDirection"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsPevid"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsCevid"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsType"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsSlotNumber"))
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsEntry.setDescription(' hwhqosProfileCarStatisticsEntry ')
hwhqosProfileCarStatisticsInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 30, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsInterfaceIndex.setDescription('This object indicates the interface index.')
hwhqosProfileCarStatisticsDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 30, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsDirection.setDescription('This object indicates the direction where a QoS profile is applied.')
hwhqosProfileCarStatisticsPevid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 30, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsPevid.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsPevid.setDescription('The value of this object identifies the PE VID (outer tag value) of a QoS profile.')
hwhqosProfileCarStatisticsCevid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 30, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsCevid.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsCevid.setDescription('The value of this object identifies the CE VID (inner tag value) or the VLAN ID of a QoS profile.')
hwhqosProfileCarStatisticsType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 30, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("car", 1), ("broadcastSuppression", 2), ("multicastSuppression", 3), ("unknownUnicastSuppression", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsType.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsType.setDescription('This object indicates the type of the statistics on the CAR or suppression to be queried.')
hwhqosProfileCarStatisticsSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 30, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsSlotNumber.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsSlotNumber.setDescription('The value of this object identifies the number of the slot where the interface for applying a QoS profile is located.')
hwhqosProfileCarStatisticsReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 30, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsReset.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsReset.setDescription('This object indicates the resetting of statistics.')
hwhqosProfileCarStatisticsPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 30, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsPassPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsPassPackets.setDescription('This object indicates the number of passed packets.')
hwhqosProfileCarStatisticsPassBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 30, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsPassBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsPassBytes.setDescription('This object indicates the number of passed bytes.')
hwhqosProfileCarStatisticsDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 30, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsDropPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsDropPackets.setDescription('This object indicates the number of discarded packets.')
hwhqosProfileCarStatisticsDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 30, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsDropBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsDropBytes.setDescription('This object indicates the number of discarded bytes.')
hwhqosProfileCarStatisticsPassPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 30, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsPassPacketsRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsPassPacketsRate.setDescription('This object indicates the packet pass rate.')
hwhqosProfileCarStatisticsPassBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 30, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsPassBytesRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsPassBytesRate.setDescription('This object indicates the byte pass rate.')
hwhqosProfileCarStatisticsDropPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 30, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsDropPacketsRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsDropPacketsRate.setDescription('This object indicates the packet discarding rate.')
hwhqosProfileCarStatisticsDropBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 30, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsDropBytesRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsDropBytesRate.setDescription('This object indicates the byte discarding rate.')
hwhqosUserQueueStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 31), )
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsTable.setDescription(' hwhqosUserQueueStatisticsTable ')
hwhqosUserQueueStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 31, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosUserQueueStatisticsInterfaceIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserQueueStatisticsDirection"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserQueueStatisticsSlotNumber"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserQueueStatisticsQueueIndex"))
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsEntry.setDescription(' hwhqosUserQueueStatisticsEntry ')
hwhqosUserQueueStatisticsInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 31, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsInterfaceIndex.setDescription('This object indicates the interface index.')
hwhqosUserQueueStatisticsDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 31, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsDirection.setDescription('This object indicates the direction where a user queue is applied.')
hwhqosUserQueueStatisticsSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 31, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsSlotNumber.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsSlotNumber.setDescription('The value of this object identifies the number of the slot where the interface for applying a user queue is located.')
hwhqosUserQueueStatisticsQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 31, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8), ("total", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsQueueIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsQueueIndex.setDescription('This object indicates the priority of a user queue.')
hwhqosUserQueueStatisticsReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 31, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsReset.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsReset.setDescription('This object indicates the resetting of statistics.')
hwhqosUserQueueStatisticsPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 31, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsPassPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsPassPackets.setDescription('This object indicates the number of passed packets.')
hwhqosUserQueueStatisticsPassBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 31, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsPassBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsPassBytes.setDescription('This object indicates the number of passed bytes.')
hwhqosUserQueueStatisticsDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 31, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsDropPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsDropPackets.setDescription('This object indicates the number of discarded packets.')
hwhqosUserQueueStatisticsDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 31, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsDropBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsDropBytes.setDescription('This object indicates the number of discarded bytes.')
hwhqosUserQueueStatisticsPassPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 31, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsPassPacketsRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsPassPacketsRate.setDescription('This object indicates the packet pass rate.')
hwhqosUserQueueStatisticsPassBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 31, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsPassBytesRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsPassBytesRate.setDescription('This object indicates the byte pass rate.')
hwhqosUserQueueStatisticsDropPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 31, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsDropPacketsRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsDropPacketsRate.setDescription('This object indicates the packet discarding rate.')
hwhqosUserQueueStatisticsDropBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 31, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsDropBytesRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsDropBytesRate.setDescription('This object indicates the byte discarding rate.')
hwhqosUserQueueClassifierStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 32), )
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsTable.setDescription(' hwhqosUserQueueStatisticsTable ')
hwhqosUserQueueClassifierStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 32, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosUserQueueClassifierStatisticsInterfaceIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserQueueClassifierStatisticsDirection"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserQueueClassifierStatisticsClassifierName"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserQueueClassifierStatisticsSlotNumber"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserQueueClassifierStatisticsQueueIndex"))
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsEntry.setDescription(' hwhqosUserQueueStatisticsEntry ')
hwhqosUserQueueClassifierStatisticsInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 32, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsInterfaceIndex.setDescription('This object indicates the interface index.')
hwhqosUserQueueClassifierStatisticsDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 32, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsDirection.setDescription('This object indicates the direction where a policy is applied.')
hwhqosUserQueueClassifierStatisticsClassifierName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 32, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsClassifierName.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsClassifierName.setDescription('The value of this object identifies the name of a class template.')
hwhqosUserQueueClassifierStatisticsSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 32, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsSlotNumber.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsSlotNumber.setDescription('The value of this object identifies the number of the slot where the interface for applying a policy is located.')
hwhqosUserQueueClassifierStatisticsQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 32, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8), ("total", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsQueueIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsQueueIndex.setDescription('This object indicates the priority of a user queue.')
hwhqosUserQueueClassifierStatisticsReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 32, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsReset.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsReset.setDescription('This object indicates the resetting of statistics.')
hwhqosUserQueueClassifierStatisticsPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 32, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsPassPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsPassPackets.setDescription('This object indicates the number of passed packets.')
hwhqosUserQueueClassifierStatisticsPassBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 32, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsPassBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsPassBytes.setDescription('This object indicates the number of passed bytes.')
hwhqosUserQueueClassifierStatisticsDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 32, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsDropPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsDropPackets.setDescription('This object indicates the number of discarded packets.')
hwhqosUserQueueClassifierStatisticsDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 32, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsDropBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsDropBytes.setDescription('This object indicates the number of discarded bytes.')
hwhqosUserQueueClassifierStatisticsPassPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 32, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsPassPacketsRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsPassPacketsRate.setDescription('This object indicates the packet pass rate.')
hwhqosUserQueueClassifierStatisticsPassBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 32, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsPassBytesRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsPassBytesRate.setDescription('This object indicates the byte pass rate.')
hwhqosUserQueueClassifierStatisticsDropPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 32, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsDropPacketsRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsDropPacketsRate.setDescription('This object indicates the packet discarding rate.')
hwhqosUserQueueClassifierStatisticsDropBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 32, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsDropBytesRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsDropBytesRate.setDescription('This object indicates the byte discarding rate.')
hwhqosUserGroupQueueStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 33), )
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsTable.setDescription(' hwhqosUserGroupQueueStatisticsTable ')
hwhqosUserGroupQueueStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 33, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatisticsGroupName"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatisticsDirection"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatisticsSlotNumber"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatisticsQueueIndex"))
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsEntry.setDescription(' hwhqosUserGroupQueueStatisticsEntry ')
hwhqosUserGroupQueueStatisticsGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 33, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsGroupName.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsGroupName.setDescription('The value of this object identifies the name of a user group queue.')
hwhqosUserGroupQueueStatisticsDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 33, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsDirection.setDescription('This object indicates the direction where a user group queue template is applied.')
hwhqosUserGroupQueueStatisticsSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 33, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsSlotNumber.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsSlotNumber.setDescription('The value of this object identifies the number of the slot where a user group queue template is applied.')
hwhqosUserGroupQueueStatisticsQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 33, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8), ("total", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsQueueIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsQueueIndex.setDescription(' hwhqosUserGroupQueueStatisticsQueueIndex ')
hwhqosUserGroupQueueStatisticsReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 33, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsReset.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsReset.setDescription('This object indicates the resetting of statistics.')
hwhqosUserGroupQueueStatisticsPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 33, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsPassPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsPassPackets.setDescription('This object indicates the number of passed packets.')
hwhqosUserGroupQueueStatisticsPassBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 33, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsPassBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsPassBytes.setDescription('This object indicates the number of passed bytes.')
hwhqosUserGroupQueueStatisticsDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 33, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsDropPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsDropPackets.setDescription('This object indicates the number of discarded packets.')
hwhqosUserGroupQueueStatisticsDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 33, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsDropBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsDropBytes.setDescription('This object indicates the number of discarded bytes.')
hwhqosUserGroupQueueStatisticsPassPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 33, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsPassPacketsRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsPassPacketsRate.setDescription(' hwhqosUserGroupQueueStatisticsPassPacketsRate.')
hwhqosUserGroupQueueStatisticsPassBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 33, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsPassBytesRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsPassBytesRate.setDescription(' hwhqosUserGroupQueueStatisticsPassBytesRate.')
hwhqosUserGroupQueueStatisticsDropPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 33, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsDropPacketsRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsDropPacketsRate.setDescription(' hwhqosUserGroupQueueStatisticsDropPacketsRate.')
hwhqosUserGroupQueueStatisticsDropBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 33, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsDropBytesRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsDropBytesRate.setDescription(' hwhqosUserGroupQueueStatisticsDropBytesRate.')
hwhqosFlowQueueShaperTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 34), )
if mibBuilder.loadTexts: hwhqosFlowQueueShaperTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueShaperTable.setDescription('Description.')
hwhqosFlowQueueShaperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 34, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosFlowQueueName"))
if mibBuilder.loadTexts: hwhqosFlowQueueShaperEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueShaperEntry.setDescription('Description.')
hwhqosFlowQueueShaperBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 34, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowQueueShaperBE.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueShaperBE.setDescription('Description.')
hwhqosFlowQueueShaperAF1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 34, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowQueueShaperAF1.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueShaperAF1.setDescription('Description.')
hwhqosFlowQueueShaperAF2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 34, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowQueueShaperAF2.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueShaperAF2.setDescription('Description.')
hwhqosFlowQueueShaperAF3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 34, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowQueueShaperAF3.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueShaperAF3.setDescription('Description.')
hwhqosFlowQueueShaperAF4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 34, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowQueueShaperAF4.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueShaperAF4.setDescription('Description.')
hwhqosFlowQueueShaperEF = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 34, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowQueueShaperEF.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueShaperEF.setDescription('Description.')
hwhqosFlowQueueShaperCS6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 34, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowQueueShaperCS6.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueShaperCS6.setDescription('Description.')
hwhqosFlowQueueShaperCS7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 34, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowQueueShaperCS7.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueShaperCS7.setDescription('Description.')
hwhqosFlowQueueShaperValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 34, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowQueueShaperValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueShaperValue.setDescription('Description.')
hwhqosFlowQueueShaperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 34, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFlowQueueShaperRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueShaperRowStatus.setDescription('Description.')
hwhqosWredQueueDepthTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 35), )
if mibBuilder.loadTexts: hwhqosWredQueueDepthTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredQueueDepthTable.setDescription('Description.')
hwhqosWredQueueDepthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 35, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosWredQueueDepthType"), (0, "HUAWEI-HQOS-MIB", "hwhqosWredQueueDepthWredName"))
if mibBuilder.loadTexts: hwhqosWredQueueDepthEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredQueueDepthEntry.setDescription('Description.')
hwhqosWredQueueDepthType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 35, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("flowwred", 1), ("portwred", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosWredQueueDepthType.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredQueueDepthType.setDescription('Description.')
hwhqosWredQueueDepthWredName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 35, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosWredQueueDepthWredName.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredQueueDepthWredName.setDescription('Description.')
hwhqosWredQueueDepthValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 35, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 131072))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosWredQueueDepthValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredQueueDepthValue.setDescription('Description.')
hwhqosWredQueueDepthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 35, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosWredQueueDepthRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredQueueDepthRowStatus.setDescription('Description.')
hwhqosBandwidthCheckTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 36), )
if mibBuilder.loadTexts: hwhqosBandwidthCheckTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosBandwidthCheckTable.setDescription('Description.')
hwhqosBandwidthCheckEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 36, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosBandwidthCheckInterfaceIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosBandwidthCheckDirection"))
if mibBuilder.loadTexts: hwhqosBandwidthCheckEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosBandwidthCheckEntry.setDescription('Description.')
hwhqosBandwidthCheckInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 36, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosBandwidthCheckInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosBandwidthCheckInterfaceIndex.setDescription('Description.')
hwhqosBandwidthCheckDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 36, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosBandwidthCheckDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosBandwidthCheckDirection.setDescription('Description.')
hwhqosBandwidthCheckValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 36, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosBandwidthCheckValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosBandwidthCheckValue.setDescription('Description.')
hwhqosBandwidthCheckRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 36, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosBandwidthCheckRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosBandwidthCheckRowStatus.setDescription('Description.')
hwhqosServiceIdentifyPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 37), )
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyTable.setDescription('Description.')
hwhqosServiceIdentifyPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 37, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyName"))
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyEntry.setDescription('Description.')
hwhqosServiceIdentifyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 37, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyName.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyName.setDescription('Description.')
hwhqosServiceIdentifyPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 37, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyRowStatus.setDescription('Description.')
hwhqosServiceIdentifyPolicyApplyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 38), )
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyApplyTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyApplyTable.setDescription('Description.')
hwhqosServiceIdentifyPolicyApplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 38, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyApplyInterfaceIndex"))
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyApplyEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyApplyEntry.setDescription('Description.')
hwhqosServiceIdentifyPolicyApplyInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 38, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyApplyInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyApplyInterfaceIndex.setDescription('Description.')
hwhqosServiceIdentifyPolicyApplyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 38, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyApplyName.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyApplyName.setDescription('Description.')
hwhqosServiceIdentifyPolicyApplyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 38, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyApplyRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyApplyRowStatus.setDescription('Description.')
hwhqosServiceIdentifyPolicyTypeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 39), )
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyTypeTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyTypeTable.setDescription('Description.')
hwhqosServiceIdentifyPolicyTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 39, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyName"))
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyTypeEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyTypeEntry.setDescription('Description.')
hwhqosServiceIdentifyPolicyTypeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 39, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("innervlan", 1), ("outervlan", 2), ("cosinnervlan", 3), ("cosoutervlan", 4), ("dscp", 5), ("dhcpoption60", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyTypeValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyTypeValue.setDescription('Description.')
hwhqosServiceIdentifyPolicyTypeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 39, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyTypeRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyTypeRowStatus.setDescription('Description.')
hwhqosServiceIdentifyPolicyVlanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 40), )
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyVlanTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyVlanTable.setDescription('Description.')
hwhqosServiceIdentifyPolicyVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 40, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyName"), (0, "HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyVlanID"))
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyVlanEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyVlanEntry.setDescription('Description.')
hwhqosServiceIdentifyPolicyVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 40, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyVlanID.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyVlanID.setDescription('Description.')
hwhqosServiceIdentifyPolicyVlanDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 40, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyVlanDomainName.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyVlanDomainName.setDescription('Description.')
hwhqosServiceIdentifyPolicyVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 40, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyVlanRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyVlanRowStatus.setDescription('Description.')
hwhqosServiceIdentifyPolicy8021pTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 41), )
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicy8021pTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicy8021pTable.setDescription('Description.')
hwhqosServiceIdentifyPolicy8021pEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 41, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyName"), (0, "HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicy8021pCosID"))
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicy8021pEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicy8021pEntry.setDescription('Description.')
hwhqosServiceIdentifyPolicy8021pCosID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 41, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicy8021pCosID.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicy8021pCosID.setDescription('Description.')
hwhqosServiceIdentifyPolicy8021pDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 41, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicy8021pDomainName.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicy8021pDomainName.setDescription('Description.')
hwhqosServiceIdentifyPolicy8021pRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 41, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicy8021pRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicy8021pRowStatus.setDescription('Description.')
hwhqosServiceIdentifyPolicyDscpTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 42), )
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyDscpTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyDscpTable.setDescription('Description.')
hwhqosServiceIdentifyPolicyDscpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 42, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyName"), (0, "HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyDscpID"))
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyDscpEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyDscpEntry.setDescription('Description.')
hwhqosServiceIdentifyPolicyDscpID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 42, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyDscpID.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyDscpID.setDescription('Description.')
hwhqosServiceIdentifyPolicyDscpDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 42, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyDscpDomainName.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyDscpDomainName.setDescription('Description.')
hwhqosServiceIdentifyPolicyDscpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 42, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyDscpRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyDscpRowStatus.setDescription('Description.')
hwhqosServiceIdentifyPolicyOption60Table = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 43), )
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyOption60Table.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyOption60Table.setDescription('Description.')
hwhqosServiceIdentifyPolicyOption60Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 43, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyName"))
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyOption60Entry.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyOption60Entry.setDescription('Description.')
hwhqosServiceIdentifyPolicyOption60 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 43, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyOption60.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyOption60.setDescription('Description.')
hwhqosServiceIdentifyPolicyOption60RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 43, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyOption60RowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyOption60RowStatus.setDescription('Description.')
hwhqosDomainRateLimitModeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 44), )
if mibBuilder.loadTexts: hwhqosDomainRateLimitModeTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainRateLimitModeTable.setDescription('Description.')
hwhqosDomainRateLimitModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 44, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosDomainRateLimitModeDomainName"))
if mibBuilder.loadTexts: hwhqosDomainRateLimitModeEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainRateLimitModeEntry.setDescription('Description.')
hwhqosDomainRateLimitModeDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 44, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosDomainRateLimitModeDomainName.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainRateLimitModeDomainName.setDescription('Description.')
hwhqosDomainRateLimitModeDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 44, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosDomainRateLimitModeDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainRateLimitModeDirection.setDescription('Description.')
hwhqosDomainRateLimitModeRateLimitMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 44, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sq", 1), ("car", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosDomainRateLimitModeRateLimitMode.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainRateLimitModeRateLimitMode.setDescription('Description.')
hwhqosDomainRateLimitModeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 44, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosDomainRateLimitModeRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainRateLimitModeRowStatus.setDescription('Description.')
hwhqosDomainSessionGroupExcludeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 45), )
if mibBuilder.loadTexts: hwhqosDomainSessionGroupExcludeTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainSessionGroupExcludeTable.setDescription('Description.')
hwhqosDomainSessionGroupExcludeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 45, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosDomainSessionGroupExcludeDomainName"), (0, "HUAWEI-HQOS-MIB", "hwhqosDomainSessionGroupExcludeDirection"), (0, "HUAWEI-HQOS-MIB", "hwhqosDomainSessionGroupExcludeMode"))
if mibBuilder.loadTexts: hwhqosDomainSessionGroupExcludeEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainSessionGroupExcludeEntry.setDescription('Description.')
hwhqosDomainSessionGroupExcludeDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 45, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosDomainSessionGroupExcludeDomainName.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainSessionGroupExcludeDomainName.setDescription('Description.')
hwhqosDomainSessionGroupExcludeDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 45, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosDomainSessionGroupExcludeDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainSessionGroupExcludeDirection.setDescription('Description.')
hwhqosDomainSessionGroupExcludeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 45, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sq", 1), ("car", 2), ("all", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosDomainSessionGroupExcludeMode.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainSessionGroupExcludeMode.setDescription('Description.')
hwhqosDomainSessionGroupExcludeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 45, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosDomainSessionGroupExcludeRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainSessionGroupExcludeRowStatus.setDescription('Description.')
hwhqosDomainUserMaxSessionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 46), )
if mibBuilder.loadTexts: hwhqosDomainUserMaxSessionTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainUserMaxSessionTable.setDescription('Description.')
hwhqosDomainUserMaxSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 46, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosDomainUserMaxSessionDomainName"))
if mibBuilder.loadTexts: hwhqosDomainUserMaxSessionEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainUserMaxSessionEntry.setDescription('Description.')
hwhqosDomainUserMaxSessionDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 46, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosDomainUserMaxSessionDomainName.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainUserMaxSessionDomainName.setDescription('Description.')
hwhqosDomainUserMaxSessionNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 46, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 147456))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosDomainUserMaxSessionNum.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainUserMaxSessionNum.setDescription('Description.')
hwhqosDomainUserMaxSessionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 46, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosDomainUserMaxSessionRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainUserMaxSessionRowStatus.setDescription('Description.')
hwhqosUpdateUseridProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 47), )
if mibBuilder.loadTexts: hwhqosUpdateUseridProfileTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosUpdateUseridProfileTable.setDescription('Description.')
hwhqosUpdateUseridProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 47, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosUpdateUseridProfileUserid"), (0, "HUAWEI-HQOS-MIB", "hwhqosUpdateUseridProfileDirection"))
if mibBuilder.loadTexts: hwhqosUpdateUseridProfileEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosUpdateUseridProfileEntry.setDescription('Description.')
hwhqosUpdateUseridProfileUserid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 47, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 164864))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUpdateUseridProfileUserid.setStatus('current')
if mibBuilder.loadTexts: hwhqosUpdateUseridProfileUserid.setDescription('Description.')
hwhqosUpdateUseridProfileDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 47, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUpdateUseridProfileDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosUpdateUseridProfileDirection.setDescription('Description.')
hwhqosUpdateUseridProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 47, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUpdateUseridProfileName.setStatus('current')
if mibBuilder.loadTexts: hwhqosUpdateUseridProfileName.setDescription('Description.')
hwhqosUpdateUseridProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 47, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUpdateUseridProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosUpdateUseridProfileRowStatus.setDescription('Description.')
hwhqosDomainUserPriorityTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 48), )
if mibBuilder.loadTexts: hwhqosDomainUserPriorityTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainUserPriorityTable.setDescription('Description.')
hwhqosDomainUserPriorityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 48, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosDomainUserPriorityDomainName"), (0, "HUAWEI-HQOS-MIB", "hwhqosDomainUserPriorityDirection"))
if mibBuilder.loadTexts: hwhqosDomainUserPriorityEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainUserPriorityEntry.setDescription('Description.')
hwhqosDomainUserPriorityDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 48, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosDomainUserPriorityDomainName.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainUserPriorityDomainName.setDescription('Description.')
hwhqosDomainUserPriorityDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 48, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosDomainUserPriorityDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainUserPriorityDirection.setDescription('Description.')
hwhqosDomainUserPriorityValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 48, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("priority0", 1), ("priority1", 2), ("priority2", 3), ("priority3", 4), ("priority4", 5), ("priority5", 6), ("priority6", 7), ("priority7", 8), ("trust8021pinner", 9), ("trust8021pouter", 10), ("trustexpinner", 11), ("trustexpouter", 12), ("trustdscpinner", 13), ("trustdscpouter", 14), ("unchangeable", 15)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosDomainUserPriorityValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainUserPriorityValue.setDescription('Description.')
hwhqosDomainUserPriorityRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 48, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosDomainUserPriorityRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainUserPriorityRowStatus.setDescription('Description.')
hwhqosTMScheduleModeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 50), )
if mibBuilder.loadTexts: hwhqosTMScheduleModeTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosTMScheduleModeTable.setDescription('Description.')
hwhqosTMScheduleModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 50, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosTMScheduleModeSlot"))
if mibBuilder.loadTexts: hwhqosTMScheduleModeEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosTMScheduleModeEntry.setDescription('Description.')
hwhqosTMScheduleModeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 50, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosTMScheduleModeSlot.setStatus('current')
if mibBuilder.loadTexts: hwhqosTMScheduleModeSlot.setDescription('Description.')
hwhqosTMScheduleModeSimpleEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 50, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("simple", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosTMScheduleModeSimpleEnable.setStatus('current')
if mibBuilder.loadTexts: hwhqosTMScheduleModeSimpleEnable.setDescription('Description.')
hwhqosTMScheduleModeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 50, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosTMScheduleModeRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosTMScheduleModeRowStatus.setDescription('Description.')
hwhqosUserBandwidthTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 51), )
if mibBuilder.loadTexts: hwhqosUserBandwidthTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserBandwidthTable.setDescription('Description.')
hwhqosUserBandwidthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 51, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosUserBandwidthUserid"))
if mibBuilder.loadTexts: hwhqosUserBandwidthEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserBandwidthEntry.setDescription('Description.')
hwhqosUserBandwidthUserid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 51, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 164864))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserBandwidthUserid.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserBandwidthUserid.setDescription('Description.')
hwhqosUserBandwidthCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 51, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserBandwidthCir.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserBandwidthCir.setDescription('Description.')
hwhqosUserBandwidthPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 51, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserBandwidthPir.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserBandwidthPir.setDescription('Description.')
hwhqosUserBandwidthCommittedCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 51, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserBandwidthCommittedCir.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserBandwidthCommittedCir.setDescription('Description.')
hwhqosUserBandwidthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 51, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserBandwidthRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserBandwidthRowStatus.setDescription('Description.')
hwhqosUseridStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 52), )
if mibBuilder.loadTexts: hwhqosUseridStatTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosUseridStatTable.setDescription('Description.')
hwhqosUseridStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 52, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosUseridStatUserid"), (0, "HUAWEI-HQOS-MIB", "hwhqosUseridStatQueue"), (0, "HUAWEI-HQOS-MIB", "hwhqosUseridStatDirection"))
if mibBuilder.loadTexts: hwhqosUseridStatEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosUseridStatEntry.setDescription('Description.')
hwhqosUseridStatUserid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 52, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 164864))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUseridStatUserid.setStatus('current')
if mibBuilder.loadTexts: hwhqosUseridStatUserid.setDescription('Description.')
hwhqosUseridStatQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 52, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8), ("total", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUseridStatQueue.setStatus('current')
if mibBuilder.loadTexts: hwhqosUseridStatQueue.setDescription('Description.')
hwhqosUseridStatDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 52, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUseridStatDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosUseridStatDirection.setDescription('Description.')
hwhqosUseridStatPassBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 52, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUseridStatPassBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosUseridStatPassBytes.setDescription('Description.')
hwhqosUseridStatDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 52, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUseridStatDropBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosUseridStatDropBytes.setDescription('Description.')
hwhqosUseridStatPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 52, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUseridStatPassPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosUseridStatPassPackets.setDescription('Description.')
hwhqosUseridStatDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 52, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUseridStatDropPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosUseridStatDropPackets.setDescription('Description.')
hwhqosUseridStatPassPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 52, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUseridStatPassPacketsRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUseridStatPassPacketsRate.setDescription('Description.')
hwhqosUseridStatDropPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 52, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUseridStatDropPacketsRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUseridStatDropPacketsRate.setDescription('Description.')
hwhqosUseridStatReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 52, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUseridStatReset.setStatus('current')
if mibBuilder.loadTexts: hwhqosUseridStatReset.setDescription('Description.')
hwhqosUseridStatPassBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 52, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUseridStatPassBytesRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUseridStatPassBytesRate.setDescription('Description.')
hwhqosUseridStatDropBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 52, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUseridStatDropBytesRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUseridStatDropBytesRate.setDescription('Description.')
hwhqosFatherUserGroupQueueApplyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 53), )
if mibBuilder.loadTexts: hwhqosFatherUserGroupQueueApplyTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosFatherUserGroupQueueApplyTable.setDescription('Description.')
hwhqosFatherUserGroupQueueApplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 53, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosFatherUserGroupQueueApplyInterfaceIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosFatherUserGroupQueueApplyDirection"))
if mibBuilder.loadTexts: hwhqosFatherUserGroupQueueApplyEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosFatherUserGroupQueueApplyEntry.setDescription('Description.')
hwhqosFatherUserGroupQueueApplyInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 53, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosFatherUserGroupQueueApplyInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosFatherUserGroupQueueApplyInterfaceIndex.setDescription('Description.')
hwhqosFatherUserGroupQueueApplyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 53, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosFatherUserGroupQueueApplyDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosFatherUserGroupQueueApplyDirection.setDescription('Description.')
hwhqosFatherUserGroupQueueApplyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 53, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFatherUserGroupQueueApplyName.setStatus('current')
if mibBuilder.loadTexts: hwhqosFatherUserGroupQueueApplyName.setDescription('Description.')
hwhqosFatherUserGroupQueueApplyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 53, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosFatherUserGroupQueueApplyRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosFatherUserGroupQueueApplyRowStatus.setDescription('Description.')
hwhqosUserGroupQueueApplyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 54), )
if mibBuilder.loadTexts: hwhqosUserGroupQueueApplyTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueApplyTable.setDescription(' ')
hwhqosUserGroupQueueApplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 54, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueApplyInterfaceIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueApplyPeVid"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueApplyCeVid"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueApplyDirection"))
if mibBuilder.loadTexts: hwhqosUserGroupQueueApplyEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueApplyEntry.setDescription(' This table is used to apply a user group queue to interfaces. ')
hwhqosUserGroupQueueApplyInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 54, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueApplyInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueApplyInterfaceIndex.setDescription(' This object indicates the index of interface.')
hwhqosUserGroupQueueApplyPeVid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 54, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueApplyPeVid.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueApplyPeVid.setDescription('This object indicates the index of vlan or l2tp group.')
hwhqosUserGroupQueueApplyCeVid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 54, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueApplyCeVid.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueApplyCeVid.setDescription('This object indicates the index of vlan or l2tp group.')
hwhqosUserGroupQueueApplyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 54, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueApplyDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueApplyDirection.setDescription(' ')
hwhqosUserGroupQueueApplyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 54, 1, 5), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserGroupQueueApplyName.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueApplyName.setDescription('This object indicates the name of user-group-queue.')
hwhqosUserGroupQueueApplyEachvlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 54, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("eachVlan", 1), ("eachPevid", 2), ("eachCevid", 3), ("none", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserGroupQueueApplyEachvlan.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueApplyEachvlan.setDescription(' ')
hwhqosUserGroupQueueApplyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 54, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserGroupQueueApplyRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueApplyRowStatus.setDescription(' ')
hwhqosProfileApplyDomainTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 55), )
if mibBuilder.loadTexts: hwhqosProfileApplyDomainTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyDomainTable.setDescription(' ')
hwhqosProfileApplyDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 55, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosProfileApplyDomainName"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileApplyDomainDirection"))
if mibBuilder.loadTexts: hwhqosProfileApplyDomainEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyDomainEntry.setDescription('Description.')
hwhqosProfileApplyDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 55, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileApplyDomainName.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyDomainName.setDescription(' ')
hwhqosProfileApplyDomainDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 55, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileApplyDomainDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyDomainDirection.setDescription(' ')
hwhqosProfileApplyDomainProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 55, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileApplyDomainProfileName.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyDomainProfileName.setDescription(' ')
hwhqosProfileApplyDomainRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 55, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileApplyDomainRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyDomainRowStatus.setDescription(' ')
hwhqosProfileApplyUserVlanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 56), )
if mibBuilder.loadTexts: hwhqosProfileApplyUserVlanTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyUserVlanTable.setDescription(' ')
hwhqosProfileApplyUserVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 56, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosProfileApplyUserVlanInterfaceIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileApplyUserVlanPeVid"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileApplyUserVlanCeVid"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileApplyUserVlanDirection"))
if mibBuilder.loadTexts: hwhqosProfileApplyUserVlanEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyUserVlanEntry.setDescription('Description.')
hwhqosProfileApplyUserVlanInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 56, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileApplyUserVlanInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyUserVlanInterfaceIndex.setDescription(' ')
hwhqosProfileApplyUserVlanPeVid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 56, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileApplyUserVlanPeVid.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyUserVlanPeVid.setDescription('This object indicates the index of vlan or l2tp group.')
hwhqosProfileApplyUserVlanCeVid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 56, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileApplyUserVlanCeVid.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyUserVlanCeVid.setDescription('This object indicates the index of vlan or l2tp group.')
hwhqosProfileApplyUserVlanDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 56, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileApplyUserVlanDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyUserVlanDirection.setDescription(' ')
hwhqosProfileApplyUserVlanProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 56, 1, 5), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileApplyUserVlanProfileName.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyUserVlanProfileName.setDescription(' ')
hwhqosProfileApplyUserVlanEach = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 56, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileApplyUserVlanEach.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyUserVlanEach.setDescription(' ')
hwhqosProfileApplyUserVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 56, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileApplyUserVlanRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyUserVlanRowStatus.setDescription(' ')
hwhqosLinkAdjRemoteEnableTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 57), )
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteEnableTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteEnableTable.setDescription(' ')
hwhqosLinkAdjRemoteEnableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 57, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosLinkAdjRemoteEnableType"), (0, "HUAWEI-HQOS-MIB", "hwhqosLinkAdjRemoteEnableSlot"), (0, "HUAWEI-HQOS-MIB", "hwhqosLinkAdjRemoteEnableDomainName"))
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteEnableEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteEnableEntry.setDescription('Description.')
hwhqosLinkAdjRemoteEnableType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 57, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("system", 1), ("domain", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteEnableType.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteEnableType.setDescription(' ')
hwhqosLinkAdjRemoteEnableSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 57, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteEnableSlot.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteEnableSlot.setDescription(' ')
hwhqosLinkAdjRemoteEnableDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 57, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteEnableDomainName.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteEnableDomainName.setDescription(' hwhqosLinkAdjRemoteEnableDomainName')
hwhqosLinkAdjRemoteEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 57, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteEnable.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteEnable.setDescription(' ')
hwhqosLinkAdjRemoteEnableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 57, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteEnableRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteEnableRowStatus.setDescription(' ')
hwhqosLinkAdjShapingModeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 58), )
if mibBuilder.loadTexts: hwhqosLinkAdjShapingModeTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjShapingModeTable.setDescription(' ')
hwhqosLinkAdjShapingModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 58, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosLinkAdjShapingModeType"), (0, "HUAWEI-HQOS-MIB", "hwhqosLinkAdjShapingModeInterfaceIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosLinkAdjShapingModeDomainName"))
if mibBuilder.loadTexts: hwhqosLinkAdjShapingModeEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjShapingModeEntry.setDescription('Description.')
hwhqosLinkAdjShapingModeType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 58, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("interface", 1), ("domain", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosLinkAdjShapingModeType.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjShapingModeType.setDescription('Specify whether the command is applied on a interface or in a domain ')
hwhqosLinkAdjShapingModeInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 58, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosLinkAdjShapingModeInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjShapingModeInterfaceIndex.setDescription(' ')
hwhqosLinkAdjShapingModeDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 58, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosLinkAdjShapingModeDomainName.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjShapingModeDomainName.setDescription(' hwhqosLinkAdjShapingModeDomainName')
hwhqosLinkAdjShapingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 58, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("frame", 1), ("cell", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosLinkAdjShapingMode.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjShapingMode.setDescription(' ')
hwhqosLinkAdjShapingModeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 58, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosLinkAdjShapingModeRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjShapingModeRowStatus.setDescription(' ')
hwhqosLinkAdjRemoteTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 59), )
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteTable.setDescription(' ')
hwhqosLinkAdjRemoteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 59, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosLinkAdjRemoteType"), (0, "HUAWEI-HQOS-MIB", "hwhqosLinkAdjRemoteInterfaceIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosLinkAdjRemoteDomainName"))
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteEntry.setDescription('Description.')
hwhqosLinkAdjRemoteType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 59, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("interface", 1), ("domain", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteType.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteType.setDescription('Specify whether the command is applied on a interface or in a domain')
hwhqosLinkAdjRemoteInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 59, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteInterfaceIndex.setDescription(' ')
hwhqosLinkAdjRemoteDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 59, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteDomainName.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteDomainName.setDescription(' hwhqosLinkAdjRemoteDomainName')
hwhqosLinkAdjRemoteValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 59, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteValue.setDescription(' ')
hwhqosLinkAdjRemoteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 59, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteRowStatus.setDescription(' ')
hwhqosLinkAdjLocalTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 60), )
if mibBuilder.loadTexts: hwhqosLinkAdjLocalTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjLocalTable.setDescription(' ')
hwhqosLinkAdjLocalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 60, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosLinkAdjLocalSlotNumber"))
if mibBuilder.loadTexts: hwhqosLinkAdjLocalEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjLocalEntry.setDescription('Description.')
hwhqosLinkAdjLocalSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 60, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosLinkAdjLocalSlotNumber.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjLocalSlotNumber.setDescription(' ')
hwhqosLinkAdjLocalValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 60, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosLinkAdjLocalValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjLocalValue.setDescription(' ')
hwhqosLinkAdjLocalRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 60, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosLinkAdjLocalRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjLocalRowStatus.setDescription(' ')
hwhqosLinkAdjExcludeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 61), )
if mibBuilder.loadTexts: hwhqosLinkAdjExcludeTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjExcludeTable.setDescription(' ')
hwhqosLinkAdjExcludeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 61, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosLinkAdjExcludeSlotNumber"))
if mibBuilder.loadTexts: hwhqosLinkAdjExcludeEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjExcludeEntry.setDescription('Description.')
hwhqosLinkAdjExcludeSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 61, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosLinkAdjExcludeSlotNumber.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjExcludeSlotNumber.setDescription(' ')
hwhqosLinkAdjExcludeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 61, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosLinkAdjExcludeEnable.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjExcludeEnable.setDescription(' ')
hwhqosLinkAdjExcludeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 61, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosLinkAdjExcludeRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjExcludeRowStatus.setDescription(' ')
hwhqosProfileInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 62), )
if mibBuilder.loadTexts: hwhqosProfileInfoTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileInfoTable.setDescription(' hwhqosProfileInfoTable ')
hwhqosProfileInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 62, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosProfileInfoName"))
if mibBuilder.loadTexts: hwhqosProfileInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileInfoEntry.setDescription(' hwhqosProfileInfoEntry ')
hwhqosProfileInfoName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 62, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileInfoName.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileInfoName.setDescription(' hwhqosProfileInfoName ')
hwhqosProfileInfoDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 62, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1023))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileInfoDescription.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileInfoDescription.setDescription(' hwhqosProfileInfoDescription ')
hwhqosProfileInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 62, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileInfoRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileInfoRowStatus.setDescription(' Row status. The value ranges from 1 to 6 but usually 4 and 6 are used. createAndGo[4] - create a row. destroy[6] -delete a row. ')
hwhqosUserGroupQueueTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 63), )
if mibBuilder.loadTexts: hwhqosUserGroupQueueTemplateTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueTemplateTable.setDescription(' hwhqosUserGroupQueueTemplateTable ')
hwhqosUserGroupQueueTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 63, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueTemplateName"))
if mibBuilder.loadTexts: hwhqosUserGroupQueueTemplateEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueTemplateEntry.setDescription(' hwhqosUserGroupQueueTemplateEntry ')
hwhqosUserGroupQueueTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 63, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueTemplateName.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueTemplateName.setDescription(' hwhqosUserGroupQueueTemplateName ')
hwhqosUserGroupQueueTemplateModeTemplate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 63, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserGroupQueueTemplateModeTemplate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueTemplateModeTemplate.setDescription(' 1: modetemplate 2: unmodetemplate ')
hwhqosUserGroupQueueTemplateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 63, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserGroupQueueTemplateRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueTemplateRowStatus.setDescription(' Row status. The value ranges from 1 to 6 but usually 4 and 6 are used. createAndGo[4] - create a row. destroy[destroy[6] -delete a row. ')
hwhqosProfileWeightTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 64), )
if mibBuilder.loadTexts: hwhqosProfileWeightTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileWeightTable.setDescription(' hwhqosProfileWeightTable ')
hwhqosProfileWeightEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 64, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosProfileName"), (0, "HUAWEI-HQOS-MIB", "hwhqosProfileWeightDirection"))
if mibBuilder.loadTexts: hwhqosProfileWeightEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileWeightEntry.setDescription(' hwhqosProfileWeightTableEntry ')
hwhqosProfileWeightDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 64, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("inout", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosProfileWeightDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileWeightDirection.setDescription('This object indicates the direction where weight is applied.')
hwhqosProfileWeightValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 64, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileWeightValue.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileWeightValue.setDescription('This object indicates the weight value of user-queue.')
hwhqosProfileWeightRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 64, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosProfileWeightRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileWeightRowStatus.setDescription('This object indicates the row status. Currently, three row statuses are supported: Active, CreateAndGo, and Destroy.')
hwhqosUserQueueApplyAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 65), )
if mibBuilder.loadTexts: hwhqosUserQueueApplyAlarmTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueApplyAlarmTable.setDescription(' hwhqosUserQueueApplyAlarmTable ')
hwhqosUserQueueApplyAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 65, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosUserQueueApplyAlarmIfNetName"))
if mibBuilder.loadTexts: hwhqosUserQueueApplyAlarmEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueApplyAlarmEntry.setDescription(' hwhqosUserQueueApplyAlarmEntry ')
hwhqosUserQueueApplyAlarmIfNetName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 65, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 511))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserQueueApplyAlarmIfNetName.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueApplyAlarmIfNetName.setDescription('This object indicates the name of the interface which apply user-queue. The object is a string of 1 to 31 characters.')
hwhqosPortQueueStatDiscardAlarmTrapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 66), )
if mibBuilder.loadTexts: hwhqosPortQueueStatDiscardAlarmTrapTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueStatDiscardAlarmTrapTable.setDescription('hwhqosPortQueueStatDiscardAlarmTrapTable')
hwhqosPortQueueStatDiscardAlarmTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 66, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosPortQueueInterfaceTrap"), (0, "HUAWEI-HQOS-MIB", "hwhqosPortQueueCosValueTrap"), (0, "HUAWEI-HQOS-MIB", "hwhqosPortQueueDiscardTypeTrap"), (0, "HUAWEI-HQOS-MIB", "hwhqosPortQueueDiscardValueTrap"))
if mibBuilder.loadTexts: hwhqosPortQueueStatDiscardAlarmTrapEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueStatDiscardAlarmTrapEntry.setDescription('hwhqosPortQueueStatDiscardAlarmTrapEntry')
hwhqosPortQueueInterfaceTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 66, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosPortQueueInterfaceTrap.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueInterfaceTrap.setDescription('The value of this object identifies the name of an interface.')
hwhqosPortQueueCosValueTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 66, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("portqueueBE", 1), ("portqueueAF1", 2), ("portqueueAF2", 3), ("portqueueAF3", 4), ("portqueueAF4", 5), ("portqueueEF", 6), ("portqueueCS6", 7), ("portqueueCS7", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosPortQueueCosValueTrap.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueCosValueTrap.setDescription(' The value of this object identifies the queue type. The value can be any of the following: PORTQUEUEBE(1), PORTQUEUEAF1(2), PORTQUEUEAF2(3), PORTQUEUEAF3(4), PORTQUEUEAF4(5), PORTQUEUEEF(6), PORTQUEUECS6(7), PORTQUEUECS7(8) ')
hwhqosPortQueueDiscardTypeTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 66, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("discardpacket", 1), ("discardbyte", 2), ("discardpacketratio", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosPortQueueDiscardTypeTrap.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueDiscardTypeTrap.setDescription('The value of this object identifies the discard type. The value can be any of the following: DISCARD-PACKET(1), DISCARD-BYTE(2), DISCARD-PACKET-RATIO(3) ')
hwhqosPortQueueDiscardValueTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 66, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosPortQueueDiscardValueTrap.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueDiscardValueTrap.setDescription('This object indicates the discard value.')
hwhqosPortQueueStatDiscardAlarmCancelTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 67), )
if mibBuilder.loadTexts: hwhqosPortQueueStatDiscardAlarmCancelTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueStatDiscardAlarmCancelTable.setDescription('hwhqosPortQueueStatDiscardAlarmCancelTable')
hwhqosPortQueueStatDiscardAlarmCancelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 67, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosPortQueueInterfaceCancel"), (0, "HUAWEI-HQOS-MIB", "hwhqosPortQueueCosValueCancel"), (0, "HUAWEI-HQOS-MIB", "hwhqosPortQueueDiscardTypeCancel"), (0, "HUAWEI-HQOS-MIB", "hwhqosPortQueueDiscardValueCancel"))
if mibBuilder.loadTexts: hwhqosPortQueueStatDiscardAlarmCancelEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueStatDiscardAlarmCancelEntry.setDescription('hwhqosPortQueueStatDiscardAlarmCancelEntry')
hwhqosPortQueueInterfaceCancel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 67, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosPortQueueInterfaceCancel.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueInterfaceCancel.setDescription('The value of this object identifies the name of an interface.')
hwhqosPortQueueCosValueCancel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 67, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("portqueueBE", 1), ("portqueueAF1", 2), ("portqueueAF2", 3), ("portqueueAF3", 4), ("portqueueAF4", 5), ("portqueueEF", 6), ("portqueueCS6", 7), ("portqueueCS7", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosPortQueueCosValueCancel.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueCosValueCancel.setDescription(' The value of this object identifies the queue type. The value can be any of the following: PORTQUEUEBE(1), PORTQUEUEAF1(2), PORTQUEUEAF2(3), PORTQUEUEAF3(4), PORTQUEUEAF4(5), PORTQUEUEEF(6), PORTQUEUECS6(7), PORTQUEUECS7(8) ')
hwhqosPortQueueDiscardTypeCancel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 67, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("discardpacket", 1), ("discardbyte", 2), ("discardpacketratio", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosPortQueueDiscardTypeCancel.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueDiscardTypeCancel.setDescription('The value of this object identifies the discard type. The value can be any of the following: DISCARD-PACKET(1), DISCARD-BYTE(2), DISCARD-PACKET-RATIO(3) ')
hwhqosPortQueueDiscardValueCancel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 67, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosPortQueueDiscardValueCancel.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueDiscardValueCancel.setDescription('This object indicates the discard value.')
hwhqosIfUserQueueTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 68), )
if mibBuilder.loadTexts: hwhqosIfUserQueueTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueTable.setDescription('Description.')
hwhqosIfUserQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 68, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosIfUserQueueIfIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosIfUserQueueAclType"), (0, "HUAWEI-HQOS-MIB", "hwhqosIfUserQueueAclID1"), (0, "HUAWEI-HQOS-MIB", "hwhqosIfUserQueueAclID2"))
if mibBuilder.loadTexts: hwhqosIfUserQueueEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueEntry.setDescription('Description.')
hwhqosIfUserQueueIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 68, 1, 1), Integer32())
if mibBuilder.loadTexts: hwhqosIfUserQueueIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueIfIndex.setDescription('Description.')
hwhqosIfUserQueueAclType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 68, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2))))
if mibBuilder.loadTexts: hwhqosIfUserQueueAclType.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueAclType.setDescription('Description.')
hwhqosIfUserQueueAclID1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 68, 1, 3), Integer32())
if mibBuilder.loadTexts: hwhqosIfUserQueueAclID1.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueAclID1.setDescription('Description.')
hwhqosIfUserQueueAclID2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 68, 1, 4), Integer32())
if mibBuilder.loadTexts: hwhqosIfUserQueueAclID2.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueAclID2.setDescription('Description.')
hwhqosIfUserQueuePir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 68, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 10000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosIfUserQueuePir.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueuePir.setDescription('Description.')
hwhqosIfUserQueueFlowQueueProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 68, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwhqosIfUserQueueFlowQueueProfileName.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueFlowQueueProfileName.setDescription('Description.')
hwhqosIfUserQueueFlowMappingProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 68, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosIfUserQueueFlowMappingProfileName.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueFlowMappingProfileName.setDescription('Description.')
hwhqosIfUserQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 68, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosIfUserQueueRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueRowStatus.setDescription('Description.')
hwhqosIfUserQueueStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 69), )
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsTable.setDescription('Description.')
hwhqosIfUserQueueStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 69, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosIfUserQueueStatisticsIfIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosIfUserQueueStatisticsAclType"), (0, "HUAWEI-HQOS-MIB", "hwhqosIfUserQueueStatisticsAclID1"), (0, "HUAWEI-HQOS-MIB", "hwhqosIfUserQueueStatisticsAclID2"), (0, "HUAWEI-HQOS-MIB", "hwhqosIfUserQueueStatisticsQueueIndex"))
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsEntry.setDescription('Description.')
hwhqosIfUserQueueStatisticsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 69, 1, 1), Integer32())
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsIfIndex.setDescription('Description.')
hwhqosIfUserQueueStatisticsAclType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 69, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2))))
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsAclType.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsAclType.setDescription('Description.')
hwhqosIfUserQueueStatisticsAclID1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 69, 1, 3), Integer32())
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsAclID1.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsAclID1.setDescription('Description.')
hwhqosIfUserQueueStatisticsAclID2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 69, 1, 4), Integer32())
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsAclID2.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsAclID2.setDescription('Description.')
hwhqosIfUserQueueStatisticsQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 69, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 255))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8), ("total", 255))))
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsQueueIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsQueueIndex.setDescription('Description.')
hwhqosIfUserQueueStatisticsQueuePassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 69, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsQueuePassPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsQueuePassPackets.setDescription('Description.')
hwhqosIfUserQueueStatisticsQueuePassBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 69, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsQueuePassBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsQueuePassBytes.setDescription('Description.')
hwhqosIfUserQueueStatisticsQueueDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 69, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsQueueDropPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsQueueDropPackets.setDescription('Description.')
hwhqosIfUserQueueStatisticsQueueDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 69, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsQueueDropBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsQueueDropBytes.setDescription('Description.')
hwhqosIfUserQueueStatisticsReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 69, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("other", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsReset.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfUserQueueStatisticsReset.setDescription('Description.')
hwhqosUserQueueShapeAllTrafficTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 70), )
if mibBuilder.loadTexts: hwhqosUserQueueShapeAllTrafficTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueShapeAllTrafficTable.setDescription('hwhqosUserQueueShapeAllTrafficTable')
hwhqosUserQueueShapeAllTrafficEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 70, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosUserQueueShapeAllTrafficInterfaceIndex"))
if mibBuilder.loadTexts: hwhqosUserQueueShapeAllTrafficEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueShapeAllTrafficEntry.setDescription('hwhqosUserQueueShapeAllTrafficEntry')
hwhqosUserQueueShapeAllTrafficInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 70, 1, 1), Integer32())
if mibBuilder.loadTexts: hwhqosUserQueueShapeAllTrafficInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueShapeAllTrafficInterfaceIndex.setDescription('hwhqosUserQueueShapeAllTrafficInterfaceIndex')
hwhqosUserQueueShapeAllTrafficRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 70, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserQueueShapeAllTrafficRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueShapeAllTrafficRowStatus.setDescription(' Row status. The value ranges from 1 to 6 but usually 4 and 6 are used. createAndGo[4] - create a row. destroy[destroy[6] -delete a row. ')
hwhqosUserGroupQueueInterfaceStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 71), )
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsTable.setDescription(' hwhqosUserGroupQueueInterfaceStatisticsTable ')
hwhqosUserGroupQueueInterfaceStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 71, 1), ).setIndexNames((0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsIfIndex"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsDirection"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsPevid"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsCevid"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsVlanid"), (0, "HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsQueueIndex"))
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsEntry.setDescription(' hwhqosUserGroupQueueInterfaceStatisticsEntry ')
hwhqosUserGroupQueueInterfaceStatisticsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 71, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsIfIndex.setDescription('The value of this object identifies the index of an interface.')
hwhqosUserGroupQueueInterfaceStatisticsDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 71, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsDirection.setDescription('This object indicates the direction where a user group queue template is applied.')
hwhqosUserGroupQueueInterfaceStatisticsPevid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 71, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsPevid.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsPevid.setDescription('The value of this object identifies the pevid of an interface.')
hwhqosUserGroupQueueInterfaceStatisticsCevid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 71, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsCevid.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsCevid.setDescription('The value of this object identifies the cevid of an interface.')
hwhqosUserGroupQueueInterfaceStatisticsVlanid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 71, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsVlanid.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsVlanid.setDescription('The value of this object identifies the vlanid of an interface.')
hwhqosUserGroupQueueInterfaceStatisticsQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 71, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8), ("total", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsQueueIndex.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsQueueIndex.setDescription('hwhqosUserGroupQueueInterfaceStatisticsQueueIndex')
hwhqosUserGroupQueueInterfaceStatisticsReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 71, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsReset.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsReset.setDescription('This object indicates the resetting of statistics.')
hwhqosUserGroupQueueInterfaceStatisticsPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 71, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsPassPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsPassPackets.setDescription('This object indicates the number of passed packets.')
hwhqosUserGroupQueueInterfaceStatisticsPassBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 71, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsPassBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsPassBytes.setDescription('This object indicates the number of passed bytes.')
hwhqosUserGroupQueueInterfaceStatisticsDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 71, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsDropPackets.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsDropPackets.setDescription('This object indicates the number of discarded packets.')
hwhqosUserGroupQueueInterfaceStatisticsDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 71, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsDropBytes.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsDropBytes.setDescription('This object indicates the number of discarded bytes.')
hwhqosUserGroupQueueInterfaceStatisticsPassPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 71, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsPassPacketsRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsPassPacketsRate.setDescription('hwhqosUserGroupQueueInterfaceStatisticsPassPacketsRate.')
hwhqosUserGroupQueueInterfaceStatisticsPassBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 71, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsPassBytesRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsPassBytesRate.setDescription('hwhqosUserGroupQueueInterfaceStatisticsPassBytesRate.')
hwhqosUserGroupQueueInterfaceStatisticsDropPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 71, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsDropPacketsRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsDropPacketsRate.setDescription('hwhqosUserGroupQueueInterfaceStatisticsDropPacketsRate.')
hwhqosUserGroupQueueInterfaceStatisticsDropBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 1, 71, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsDropBytesRate.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsDropBytesRate.setDescription('hwhqosUserGroupQueueInterfaceStatisticsDropBytesRate.')
hwhqosObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 2))
hwhqosUserFrameId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserFrameId.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserFrameId.setDescription('The ID of the frame which the alarm device located.')
hwhqosUserSlotId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserSlotId.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserSlotId.setDescription('The ID of the slot on which the alarmed HQoS user applied.')
hwhqosUserPortId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserPortId.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserPortId.setDescription('The ID of port on which the alarmed HQoS user applied.')
hwhqosUserQueueApplyFailDirection = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwhqosUserQueueApplyFailDirection.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueApplyFailDirection.setDescription('The direction of alarmed HQoS which user applied.')
hwhqosTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 3))
hwhqosUserQueueStatDiscardAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 3, 1)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosUserFrameId"), ("HUAWEI-HQOS-MIB", "hwhqosUserSlotId"), ("HUAWEI-HQOS-MIB", "hwhqosUserPortId"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatPerDropPackets"))
if mibBuilder.loadTexts: hwhqosUserQueueStatDiscardAlarmTrap.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatDiscardAlarmTrap.setDescription('The user queue discard alarm trap.')
hwhqosUserQueueApplyPirFailAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 3, 2)).setObjects(("ENTITY-MIB", "entPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueApplyFailDirection"))
if mibBuilder.loadTexts: hwhqosUserQueueApplyPirFailAlarmTrap.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueApplyPirFailAlarmTrap.setDescription('The user apply pir fail alarm trap.')
hwhqosUserQueueApplyPirSucessAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 3, 3)).setObjects(("ENTITY-MIB", "entPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueApplyFailDirection"))
if mibBuilder.loadTexts: hwhqosUserQueueApplyPirSucessAlarmTrap.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueApplyPirSucessAlarmTrap.setDescription('The user apply pir sucess alarm trap.')
hwhqosUserQueueApplyAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 3, 4)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosUserQueueApplyAlarmIfNetName"))
if mibBuilder.loadTexts: hwhqosUserQueueApplyAlarmTrap.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueApplyAlarmTrap.setDescription('The user-queue apply alarm trap.')
hwhqosPortQueueStatDiscardAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 3, 5)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosPortQueueInterfaceTrap"), ("HUAWEI-HQOS-MIB", "hwhqosPortQueueCosValueTrap"), ("HUAWEI-HQOS-MIB", "hwhqosPortQueueDiscardTypeTrap"), ("HUAWEI-HQOS-MIB", "hwhqosPortQueueDiscardValueTrap"))
if mibBuilder.loadTexts: hwhqosPortQueueStatDiscardAlarmTrap.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueStatDiscardAlarmTrap.setDescription('The PortQueue Stat Discard alarm trap.')
hwhqosPortQueueStatDiscardAlarmCancelTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 3, 6)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosPortQueueInterfaceCancel"), ("HUAWEI-HQOS-MIB", "hwhqosPortQueueCosValueCancel"), ("HUAWEI-HQOS-MIB", "hwhqosPortQueueDiscardTypeCancel"), ("HUAWEI-HQOS-MIB", "hwhqosPortQueueDiscardValueCancel"))
if mibBuilder.loadTexts: hwhqosPortQueueStatDiscardAlarmCancelTrap.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueStatDiscardAlarmCancelTrap.setDescription('The PortQueue Stat Discard Cancel alarm trap.')
hwhqosConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4))
hwhqosCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 1))
hwhqosUserQueueStatCompliances = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 1, 1)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatGroup"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosUserQueueStatCompliances = hwhqosUserQueueStatCompliances.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatCompliances.setDescription('The compliance statment.')
hwhqosGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2))
hwhqosIfStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 1)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosQueueForwardPackets"), ("HUAWEI-HQOS-MIB", "hwhqosQueueForwardBytes"), ("HUAWEI-HQOS-MIB", "hwhqosQueueDropPackets"), ("HUAWEI-HQOS-MIB", "hwhqosQueueDropBytes"), ("HUAWEI-HQOS-MIB", "hwhqosQueueRemarkPackets"), ("HUAWEI-HQOS-MIB", "hwhqosQueueRemarkBytes"), ("HUAWEI-HQOS-MIB", "hwhqosSetZero"), ("HUAWEI-HQOS-MIB", "hwhqosQueueForwardPacketRate"), ("HUAWEI-HQOS-MIB", "hwhqosQueueForwardByteRate"), ("HUAWEI-HQOS-MIB", "hwhqosQueueDropPacketRate"), ("HUAWEI-HQOS-MIB", "hwhqosQueueDropByteRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosIfStatGroup = hwhqosIfStatGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfStatGroup.setDescription('Description.')
hqhqosAtmPvcStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 2)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosAtmPvcQueueForwardPackets"), ("HUAWEI-HQOS-MIB", "hwhqosAtmPvcQueueForwardBytes"), ("HUAWEI-HQOS-MIB", "hwhqosAtmPvcQueueDropPackets"), ("HUAWEI-HQOS-MIB", "hwhqosAtmPvcQueueDropBytes"), ("HUAWEI-HQOS-MIB", "hwhqosAtmPvcQueueRemarkPackets"), ("HUAWEI-HQOS-MIB", "hwhqosAtmPvcQueueRemarkBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hqhqosAtmPvcStatGroup = hqhqosAtmPvcStatGroup.setStatus('current')
if mibBuilder.loadTexts: hqhqosAtmPvcStatGroup.setDescription('Description.')
hwhqosPortQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 3)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosPortQueueArithmetic"), ("HUAWEI-HQOS-MIB", "hwhqosPortQueueWeightValue"), ("HUAWEI-HQOS-MIB", "hwhqosPortQueueShaValue"), ("HUAWEI-HQOS-MIB", "hwhqosPortQueueShaPercent"), ("HUAWEI-HQOS-MIB", "hwhqosPortQueueWredName"), ("HUAWEI-HQOS-MIB", "hwhqosPortQueuePbsValue"), ("HUAWEI-HQOS-MIB", "hwhqosPortQueueRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosPortQueueGroup = hwhqosPortQueueGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueGroup.setDescription('Description.')
hwhqosWredGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 4)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosWredGreenLowLimit"), ("HUAWEI-HQOS-MIB", "hwhqosWredGreenHighLimit"), ("HUAWEI-HQOS-MIB", "hwhqosWredGreenDiscardPercent"), ("HUAWEI-HQOS-MIB", "hwhqosWredYellowLowLimit"), ("HUAWEI-HQOS-MIB", "hwhqosWredYellowHighLimit"), ("HUAWEI-HQOS-MIB", "hwhqosWredYellowDiscardPercent"), ("HUAWEI-HQOS-MIB", "hwhqosWredRedLowLimit"), ("HUAWEI-HQOS-MIB", "hwhqosWredRedHighLimit"), ("HUAWEI-HQOS-MIB", "hwhqosWredRedDiscardPercent"), ("HUAWEI-HQOS-MIB", "hwhqosWredRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosWredGroup = hwhqosWredGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredGroup.setDescription('Description.')
hwhqosIfQueueStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 5)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosIfQueueStatForwardPackets"), ("HUAWEI-HQOS-MIB", "hwhqosIfQueueStatForwardBytes"), ("HUAWEI-HQOS-MIB", "hwhqosIfQueueStatDropBytes"), ("HUAWEI-HQOS-MIB", "hwhqosIfQueueStatDropPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosIfQueueStatGroup = hwhqosIfQueueStatGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosIfQueueStatGroup.setDescription('Description.')
hwhqosUserQueueStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 6)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatForwardPackets"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatForwardBytes"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatDropPackets"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatDropBytes"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatReset"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatLastResetTime"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatPerDropPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosUserQueueStatGroup = hwhqosUserQueueStatGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatGroup.setDescription('Description.')
hwhqosUserGroupQueueStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 7)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatReset"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueDropBytes"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueDropPackets"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueForwardBytes"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueForwardPackets"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatLastResetTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosUserGroupQueueStatGroup = hwhqosUserGroupQueueStatGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatGroup.setDescription('Description.')
hwhqosObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 8)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosUserFrameId"), ("HUAWEI-HQOS-MIB", "hwhqosUserSlotId"), ("HUAWEI-HQOS-MIB", "hwhqosUserPortId"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueApplyFailDirection"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosObjectsGroup = hwhqosObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosObjectsGroup.setDescription('Description.')
hwhqosUserQueueStatTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 9)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatDiscardAlarmTrap"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueApplyPirFailAlarmTrap"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueApplyPirSucessAlarmTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosUserQueueStatTrapGroup = hwhqosUserQueueStatTrapGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatTrapGroup.setDescription('The notification group defined for discard packets of a user`s queue.')
hwhqosVpnQoSTunnelStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 10)).setObjects(("HUAWEI-HQOS-MIB", "hwVPNHQoSTunnelIfIndex"), ("HUAWEI-HQOS-MIB", "hwVPNHQoSVPNType"), ("HUAWEI-HQOS-MIB", "hwVPNHQoSVPNValue"), ("HUAWEI-HQOS-MIB", "hwVPNHQoSPassBytes"), ("HUAWEI-HQOS-MIB", "hwVPNHQoSPassPackets"), ("HUAWEI-HQOS-MIB", "hwVPNHQoSDropPackets"), ("HUAWEI-HQOS-MIB", "hwVPNHQoSDropBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosVpnQoSTunnelStatGroup = hwhqosVpnQoSTunnelStatGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosVpnQoSTunnelStatGroup.setDescription('Description.')
hwhqosTunnelStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 11)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosTunnelIfIndex"), ("HUAWEI-HQOS-MIB", "hwhqosTunnelCosType"), ("HUAWEI-HQOS-MIB", "hwhqosTunnelVPNType"), ("HUAWEI-HQOS-MIB", "hwhqosTunnelVPNName"), ("HUAWEI-HQOS-MIB", "hwhqosTunnelPassBytes"), ("HUAWEI-HQOS-MIB", "hwhqosTunnelPassPackets"), ("HUAWEI-HQOS-MIB", "hwhqosTunnelDropBytes"), ("HUAWEI-HQOS-MIB", "hwhqosTunnelDropPackets"), ("HUAWEI-HQOS-MIB", "hwhqosTunnelPassedByteRate"), ("HUAWEI-HQOS-MIB", "hwhqosTunnelPassPacketRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosTunnelStatGroup = hwhqosTunnelStatGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosTunnelStatGroup.setDescription('Description.')
hwhqosProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 12)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosProfileName"), ("HUAWEI-HQOS-MIB", "hwhqosProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosProfileGroup = hwhqosProfileGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileGroup.setDescription('Description.')
hwhqosProfileSuppressionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 13)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosSuppressionDirection"), ("HUAWEI-HQOS-MIB", "hwhqosSuppressionType"), ("HUAWEI-HQOS-MIB", "hwhqosSuppressionCirValue"), ("HUAWEI-HQOS-MIB", "hwhqosSuppressionCbsValue"), ("HUAWEI-HQOS-MIB", "hwhqosSuppressionRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosProfileSuppressionGroup = hwhqosProfileSuppressionGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileSuppressionGroup.setDescription('Description.')
hwhqosProfileCarGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 14)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosProfileCarDirection"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarCirValue"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarPirValue"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarCbsValue"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarPbsValue"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarGreenAction"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarYellowAction"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarRedAction"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosProfileCarGroup = hwhqosProfileCarGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarGroup.setDescription('Description.')
hwhqosProfileUserQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 15)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueDirection"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueCirValue"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueuePirValue"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueFlowQueueName"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueMappingName"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueGroupName"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueServiceTemplateName"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosProfileUserQueueGroup = hwhqosProfileUserQueueGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueGroup.setDescription('Description.')
hwhqosProfileUserApplyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 16)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosProfileInterfaceIndex"), ("HUAWEI-HQOS-MIB", "hwhqosProfileApplyDirection"), ("HUAWEI-HQOS-MIB", "hwhqosProfileApplyPevid"), ("HUAWEI-HQOS-MIB", "hwhqosProfileApplyCevid"), ("HUAWEI-HQOS-MIB", "hwhqosProfileApplyName"), ("HUAWEI-HQOS-MIB", "hwhqosProfileApplyIdentifier"), ("HUAWEI-HQOS-MIB", "hwhqosGroupName"), ("HUAWEI-HQOS-MIB", "hwhqosProfileApplyRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosProfileUserApplyGroup = hwhqosProfileUserApplyGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserApplyGroup.setDescription('Description.')
hwhqosFlowMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 17)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosFlowMappingName"), ("HUAWEI-HQOS-MIB", "hwhqosFlowMappingRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosFlowMappingGroup = hwhqosFlowMappingGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowMappingGroup.setDescription('Description.')
hwhqosFlowMappingCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 18)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosFolwMappingCfgQueueCosValue"), ("HUAWEI-HQOS-MIB", "hwhqosFlowMappingCfgPortQueueCosValue"), ("HUAWEI-HQOS-MIB", "hwhqosFlowMappingCfgRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosFlowMappingCfgGroup = hwhqosFlowMappingCfgGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowMappingCfgGroup.setDescription('Description.')
hwhqosFlowQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 19)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosFlowQueueName"), ("HUAWEI-HQOS-MIB", "hwhqosFlowQueueRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosFlowQueueGroup = hwhqosFlowQueueGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueGroup.setDescription('Description.')
hwhqosFlowQueueCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 20)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosFlowQueueCfgCosValue"), ("HUAWEI-HQOS-MIB", "hwhqosFlowQueueCfgType"), ("HUAWEI-HQOS-MIB", "hwhqosFlowQueueCfgWeightValue"), ("HUAWEI-HQOS-MIB", "hwhqosFlowQueueCfgShapingValue"), ("HUAWEI-HQOS-MIB", "hwhqosFlowQueueCfgShapingPercentageValue"), ("HUAWEI-HQOS-MIB", "hwhqosFlowQueueCfgPbsValue"), ("HUAWEI-HQOS-MIB", "hwhqosFlowQueueCfgWredName"), ("HUAWEI-HQOS-MIB", "hwhqosFlowQueueCfgRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosFlowQueueCfgGroup = hwhqosFlowQueueCfgGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueCfgGroup.setDescription('Description.')
hwhqosFlowWredGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 21)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosFlowWredName"), ("HUAWEI-HQOS-MIB", "hwhqosFlowWredRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosFlowWredGroup = hwhqosFlowWredGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowWredGroup.setDescription('Description.')
hwhqosFlowWredColorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 22)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosFlowWredColor"), ("HUAWEI-HQOS-MIB", "hwhqosFlowWredColorLowlimitPercentage"), ("HUAWEI-HQOS-MIB", "hwhqosFlowWredColorHighlimitPercentage"), ("HUAWEI-HQOS-MIB", "hwhqosFlowWredColorDiscardPercentage"), ("HUAWEI-HQOS-MIB", "hwhqosFlowWredColorRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosFlowWredColorGroup = hwhqosFlowWredColorGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowWredColorGroup.setDescription('Description.')
hwhqosUserGroupQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 23)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueName"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueSlotNumber"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosUserGroupQueueGroup = hwhqosUserGroupQueueGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueGroup.setDescription('Description.')
hwhqosUserGroupQueueShapingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 24)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueShapingDirection"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueShapingValue"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueuePbsValue"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueShapingRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosUserGroupQueueShapingGroup = hwhqosUserGroupQueueShapingGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueShapingGroup.setDescription('Description.')
hwhqosUserQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 25)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosUserQueueInterfaceIndex"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueDirection"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueCirValue"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueuePirValue"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueFlowQueueName"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueFlowMappingName"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueGroupName"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueServiceTemplateName"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosUserQueueGroup = hwhqosUserQueueGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueGroup.setDescription('Description.')
hwhqosBehaviorUserQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 26)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosBehaviorName"), ("HUAWEI-HQOS-MIB", "hwhqosBehaviorCirValue"), ("HUAWEI-HQOS-MIB", "hwhqosBehaviorPirValue"), ("HUAWEI-HQOS-MIB", "hwhqosBehaviorFlowQueueName"), ("HUAWEI-HQOS-MIB", "hwhqosBehaviorFlowMappingName"), ("HUAWEI-HQOS-MIB", "hwhqosBehaviorGroupName"), ("HUAWEI-HQOS-MIB", "hwhqosBehaviorServiceTemplateName"), ("HUAWEI-HQOS-MIB", "hwhqosBehaviorUserQueueRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosBehaviorUserQueueGroup = hwhqosBehaviorUserQueueGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosBehaviorUserQueueGroup.setDescription('Description.')
hwhqosBandwidthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 27)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosBandwidthInterfaceIndex"), ("HUAWEI-HQOS-MIB", "hwhqosBandwidthValue"), ("HUAWEI-HQOS-MIB", "hwhqosBandwidthRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosBandwidthGroup = hwhqosBandwidthGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosBandwidthGroup.setDescription('Description.')
hwhqosServiceTemplateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 28)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosServiceTemplateName"), ("HUAWEI-HQOS-MIB", "hwhqosSlotNumber"), ("HUAWEI-HQOS-MIB", "hwhqosServiceTemplateRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosServiceTemplateGroup = hwhqosServiceTemplateGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceTemplateGroup.setDescription('Description.')
hwhqosNetworkHeaderLengthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 29)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosNetworkHeaderLengthDirection"), ("HUAWEI-HQOS-MIB", "hwhqosNetWorkHeaderLengthValue"), ("HUAWEI-HQOS-MIB", "hwhqosNetWorkHeaderLengthRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosNetworkHeaderLengthGroup = hwhqosNetworkHeaderLengthGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosNetworkHeaderLengthGroup.setDescription('Description.')
hwhqosServiceTemplateApplyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 30)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosServiceTemplateApplyInterfaceIndex"), ("HUAWEI-HQOS-MIB", "hwhqosApplyServiceTemplateName"), ("HUAWEI-HQOS-MIB", "hwhqosServiceTemplateApplyRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosServiceTemplateApplyGroup = hwhqosServiceTemplateApplyGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceTemplateApplyGroup.setDescription('Description.')
hwhqosProfileUserQueueStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 31)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsInterfaceIndex"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsDirection"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsPevid"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsCevid"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsSlotNumber"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsQueueIndex"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsReset"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsPassPackets"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsPassBytes"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsDropPackets"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsDropBytes"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsPassPacketsRate"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsPassBytesRate"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsDropPacketsRate"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsDropBytesRate"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsTrafficTowardsThisInterface"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsConfiguredCir"), ("HUAWEI-HQOS-MIB", "hwhqosProfileUserQueueStatisticsConfiguredPir"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosProfileUserQueueStatisticsGroup = hwhqosProfileUserQueueStatisticsGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileUserQueueStatisticsGroup.setDescription('Description.')
hwhqosProfileCarStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 32)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsInterfaceIndex"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsDirection"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsPevid"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsCevid"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsType"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsSlotNumber"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsReset"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsPassPackets"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsPassBytes"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsDropPackets"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsDropBytes"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsPassPacketsRate"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsPassBytesRate"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsDropPacketsRate"), ("HUAWEI-HQOS-MIB", "hwhqosProfileCarStatisticsDropBytesRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosProfileCarStatisticsGroup = hwhqosProfileCarStatisticsGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileCarStatisticsGroup.setDescription('Description.')
hwhqosUserQueueStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 33)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatisticsInterfaceIndex"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatisticsDirection"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatisticsSlotNumber"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatisticsQueueIndex"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatisticsReset"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatisticsPassPackets"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatisticsPassBytes"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatisticsDropPackets"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatisticsDropBytes"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatisticsPassPacketsRate"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatisticsPassBytesRate"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatisticsDropPacketsRate"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueStatisticsDropBytesRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosUserQueueStatisticsGroup = hwhqosUserQueueStatisticsGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueStatisticsGroup.setDescription('Description.')
hwhqosUserQueueClassifierStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 34)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosUserQueueClassifierStatisticsInterfaceIndex"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueClassifierStatisticsDirection"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueClassifierStatisticsClassifierName"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueClassifierStatisticsSlotNumber"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueClassifierStatisticsQueueIndex"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueClassifierStatisticsReset"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueClassifierStatisticsPassPackets"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueClassifierStatisticsPassBytes"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueClassifierStatisticsDropPackets"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueClassifierStatisticsDropBytes"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueClassifierStatisticsPassPacketsRate"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueClassifierStatisticsPassBytesRate"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueClassifierStatisticsDropPacketsRate"), ("HUAWEI-HQOS-MIB", "hwhqosUserQueueClassifierStatisticsDropBytesRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosUserQueueClassifierStatisticsGroup = hwhqosUserQueueClassifierStatisticsGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueClassifierStatisticsGroup.setDescription('Description.')
hwhqosUserGroupQueueStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 35)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatisticsGroupName"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatisticsDirection"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatisticsSlotNumber"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatisticsQueueIndex"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatisticsReset"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatisticsPassPackets"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatisticsPassBytes"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatisticsDropPackets"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatisticsDropBytes"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatisticsPassPacketsRate"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatisticsPassBytesRate"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatisticsDropPacketsRate"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueStatisticsDropBytesRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosUserGroupQueueStatisticsGroup = hwhqosUserGroupQueueStatisticsGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueStatisticsGroup.setDescription('Description.')
hwhqosFlowQueueShaperGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 36)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosFlowQueueShaperBE"), ("HUAWEI-HQOS-MIB", "hwhqosFlowQueueShaperAF1"), ("HUAWEI-HQOS-MIB", "hwhqosFlowQueueShaperAF2"), ("HUAWEI-HQOS-MIB", "hwhqosFlowQueueShaperAF3"), ("HUAWEI-HQOS-MIB", "hwhqosFlowQueueShaperAF4"), ("HUAWEI-HQOS-MIB", "hwhqosFlowQueueShaperEF"), ("HUAWEI-HQOS-MIB", "hwhqosFlowQueueShaperCS6"), ("HUAWEI-HQOS-MIB", "hwhqosFlowQueueShaperCS7"), ("HUAWEI-HQOS-MIB", "hwhqosFlowQueueShaperValue"), ("HUAWEI-HQOS-MIB", "hwhqosFlowQueueShaperRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosFlowQueueShaperGroup = hwhqosFlowQueueShaperGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosFlowQueueShaperGroup.setDescription('Description.')
hwhqosWredQueueDepthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 37)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosWredQueueDepthType"), ("HUAWEI-HQOS-MIB", "hwhqosWredQueueDepthWredName"), ("HUAWEI-HQOS-MIB", "hwhqosWredQueueDepthValue"), ("HUAWEI-HQOS-MIB", "hwhqosWredQueueDepthRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosWredQueueDepthGroup = hwhqosWredQueueDepthGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosWredQueueDepthGroup.setDescription('Description.')
hwhqosBandwidthCheck = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 38)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosBandwidthCheckInterfaceIndex"), ("HUAWEI-HQOS-MIB", "hwhqosBandwidthCheckValue"), ("HUAWEI-HQOS-MIB", "hwhqosBandwidthCheckRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosBandwidthCheck = hwhqosBandwidthCheck.setStatus('current')
if mibBuilder.loadTexts: hwhqosBandwidthCheck.setDescription('Description.')
hwhqosServiceIdentifyPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 39)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyName"), ("HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosServiceIdentifyPolicyGroup = hwhqosServiceIdentifyPolicyGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyGroup.setDescription('Description.')
hwhqosServiceIdentifyPolicyApplyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 40)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyApplyInterfaceIndex"), ("HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyApplyName"), ("HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyApplyRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosServiceIdentifyPolicyApplyGroup = hwhqosServiceIdentifyPolicyApplyGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyApplyGroup.setDescription('Description.')
hwhqosServiceIdentifyPolicyTypeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 41)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyTypeValue"), ("HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyTypeRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosServiceIdentifyPolicyTypeGroup = hwhqosServiceIdentifyPolicyTypeGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyTypeGroup.setDescription('Description.')
hwhqosServiceIdentifyPolicyVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 42)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyVlanID"), ("HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyVlanDomainName"), ("HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyVlanRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosServiceIdentifyPolicyVlanGroup = hwhqosServiceIdentifyPolicyVlanGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyVlanGroup.setDescription('Description.')
hwhqosServiceIdentifyPolicy8021pGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 43)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicy8021pCosID"), ("HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicy8021pDomainName"), ("HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicy8021pRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosServiceIdentifyPolicy8021pGroup = hwhqosServiceIdentifyPolicy8021pGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicy8021pGroup.setDescription('Description.')
hwhqosServiceIdentifyPolicyDscpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 44)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyDscpID"), ("HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyDscpDomainName"), ("HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyDscpRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosServiceIdentifyPolicyDscpGroup = hwhqosServiceIdentifyPolicyDscpGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyDscpGroup.setDescription('Description.')
hwhqosServiceIdentifyPolicyOption60Group = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 45)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyOption60"), ("HUAWEI-HQOS-MIB", "hwhqosServiceIdentifyPolicyOption60RowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosServiceIdentifyPolicyOption60Group = hwhqosServiceIdentifyPolicyOption60Group.setStatus('current')
if mibBuilder.loadTexts: hwhqosServiceIdentifyPolicyOption60Group.setDescription('Description.')
hwhqosDomainRateLimitModeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 46)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosDomainRateLimitModeDomainName"), ("HUAWEI-HQOS-MIB", "hwhqosDomainRateLimitModeRateLimitMode"), ("HUAWEI-HQOS-MIB", "hwhqosDomainRateLimitModeRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosDomainRateLimitModeGroup = hwhqosDomainRateLimitModeGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainRateLimitModeGroup.setDescription('Description.')
hwhqosDomainSessionGroupExcludeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 47)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosDomainSessionGroupExcludeDomainName"), ("HUAWEI-HQOS-MIB", "hwhqosDomainSessionGroupExcludeRowStatus"), ("HUAWEI-HQOS-MIB", "hwhqosDomainSessionGroupExcludeMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosDomainSessionGroupExcludeGroup = hwhqosDomainSessionGroupExcludeGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainSessionGroupExcludeGroup.setDescription('Description.')
hwhqosDomainUserMaxSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 48)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosDomainUserMaxSessionDomainName"), ("HUAWEI-HQOS-MIB", "hwhqosDomainUserMaxSessionNum"), ("HUAWEI-HQOS-MIB", "hwhqosDomainUserMaxSessionRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosDomainUserMaxSessionGroup = hwhqosDomainUserMaxSessionGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainUserMaxSessionGroup.setDescription('Description.')
hwhqosUpdateUseridProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 49)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosUpdateUseridProfileUserid"), ("HUAWEI-HQOS-MIB", "hwhqosUpdateUseridProfileDirection"), ("HUAWEI-HQOS-MIB", "hwhqosUpdateUseridProfileName"), ("HUAWEI-HQOS-MIB", "hwhqosUpdateUseridProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosUpdateUseridProfileGroup = hwhqosUpdateUseridProfileGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosUpdateUseridProfileGroup.setDescription('Description.')
hwhqosDomainUserPriorityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 50)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosDomainUserPriorityDomainName"), ("HUAWEI-HQOS-MIB", "hwhqosDomainUserPriorityDirection"), ("HUAWEI-HQOS-MIB", "hwhqosDomainUserPriorityRowStatus"), ("HUAWEI-HQOS-MIB", "hwhqosDomainUserPriorityValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosDomainUserPriorityGroup = hwhqosDomainUserPriorityGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosDomainUserPriorityGroup.setDescription('Description.')
hwhqosUseridStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 52)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosUseridStatUserid"), ("HUAWEI-HQOS-MIB", "hwhqosUseridStatQueue"), ("HUAWEI-HQOS-MIB", "hwhqosUseridStatDirection"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosUseridStatGroup = hwhqosUseridStatGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosUseridStatGroup.setDescription('Description.')
hwhqosFatherUserGroupQueueApplyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 55)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosFatherUserGroupQueueApplyInterfaceIndex"), ("HUAWEI-HQOS-MIB", "hwhqosFatherUserGroupQueueApplyDirection"), ("HUAWEI-HQOS-MIB", "hwhqosFatherUserGroupQueueApplyName"), ("HUAWEI-HQOS-MIB", "hwhqosFatherUserGroupQueueApplyRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosFatherUserGroupQueueApplyGroup = hwhqosFatherUserGroupQueueApplyGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosFatherUserGroupQueueApplyGroup.setDescription('Description.')
hwhqosUserGroupQueueApplyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 56)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueApplyInterfaceIndex"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueApplyDirection"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueApplyPeVid"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueApplyCeVid"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueApplyName"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueApplyEachvlan"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueApplyRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosUserGroupQueueApplyGroup = hwhqosUserGroupQueueApplyGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueApplyGroup.setDescription(' ')
hwhqosProfileApplyDomainGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 57)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosProfileApplyDomainName"), ("HUAWEI-HQOS-MIB", "hwhqosProfileApplyDomainDirection"), ("HUAWEI-HQOS-MIB", "hwhqosProfileApplyDomainProfileName"), ("HUAWEI-HQOS-MIB", "hwhqosProfileApplyDomainRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosProfileApplyDomainGroup = hwhqosProfileApplyDomainGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyDomainGroup.setDescription(' ')
hwhqosProfileApplyUserVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 58)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosProfileApplyUserVlanInterfaceIndex"), ("HUAWEI-HQOS-MIB", "hwhqosProfileApplyUserVlanDirection"), ("HUAWEI-HQOS-MIB", "hwhqosProfileApplyUserVlanPeVid"), ("HUAWEI-HQOS-MIB", "hwhqosProfileApplyUserVlanCeVid"), ("HUAWEI-HQOS-MIB", "hwhqosProfileApplyUserVlanProfileName"), ("HUAWEI-HQOS-MIB", "hwhqosProfileApplyUserVlanEach"), ("HUAWEI-HQOS-MIB", "hwhqosProfileApplyUserVlanRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosProfileApplyUserVlanGroup = hwhqosProfileApplyUserVlanGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileApplyUserVlanGroup.setDescription(' ')
hwhqosLinkAdjRemoteEnableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 59)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosLinkAdjRemoteEnableType"), ("HUAWEI-HQOS-MIB", "hwhqosLinkAdjRemoteEnable"), ("HUAWEI-HQOS-MIB", "hwhqosLinkAdjRemoteEnableSlot"), ("HUAWEI-HQOS-MIB", "hwhqosLinkAdjRemoteEnableRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosLinkAdjRemoteEnableGroup = hwhqosLinkAdjRemoteEnableGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteEnableGroup.setDescription(' ')
hwhqosLinkAdjShapingModeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 60)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosLinkAdjShapingModeType"), ("HUAWEI-HQOS-MIB", "hwhqosLinkAdjShapingMode"), ("HUAWEI-HQOS-MIB", "hwhqosLinkAdjShapingModeRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosLinkAdjShapingModeGroup = hwhqosLinkAdjShapingModeGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjShapingModeGroup.setDescription(' ')
hwhqosLinkAdjRemoteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 61)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosLinkAdjRemoteType"), ("HUAWEI-HQOS-MIB", "hwhqosLinkAdjRemoteValue"), ("HUAWEI-HQOS-MIB", "hwhqosLinkAdjRemoteRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosLinkAdjRemoteGroup = hwhqosLinkAdjRemoteGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjRemoteGroup.setDescription(' ')
hwhqosLinkAdjLocalTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 62)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosLinkAdjLocalSlotNumber"), ("HUAWEI-HQOS-MIB", "hwhqosLinkAdjLocalValue"), ("HUAWEI-HQOS-MIB", "hwhqosLinkAdjLocalRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosLinkAdjLocalTableGroup = hwhqosLinkAdjLocalTableGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjLocalTableGroup.setDescription(' ')
hwhqosLinkAdjExcludeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 63)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosLinkAdjExcludeSlotNumber"), ("HUAWEI-HQOS-MIB", "hwhqosLinkAdjExcludeEnable"), ("HUAWEI-HQOS-MIB", "hwhqosLinkAdjExcludeRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosLinkAdjExcludeGroup = hwhqosLinkAdjExcludeGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosLinkAdjExcludeGroup.setDescription(' ')
hwhqosProfileInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 64)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosProfileInfoName"), ("HUAWEI-HQOS-MIB", "hwhqosProfileInfoDescription"), ("HUAWEI-HQOS-MIB", "hwhqosProfileInfoRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosProfileInfoGroup = hwhqosProfileInfoGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileInfoGroup.setDescription('Description.')
hwhqosUserGroupQueueTemplateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 65)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueTemplateName"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueTemplateModeTemplate"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueTemplateRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosUserGroupQueueTemplateGroup = hwhqosUserGroupQueueTemplateGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueTemplateGroup.setDescription('Description.')
hwhqosProfileWeightGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 66)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosProfileWeightDirection"), ("HUAWEI-HQOS-MIB", "hwhqosProfileWeightValue"), ("HUAWEI-HQOS-MIB", "hwhqosProfileWeightRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosProfileWeightGroup = hwhqosProfileWeightGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosProfileWeightGroup.setDescription('Description.')
hwhqosUserQueueApplyAlarmGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 67)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosUserQueueApplyAlarmTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosUserQueueApplyAlarmGroup = hwhqosUserQueueApplyAlarmGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserQueueApplyAlarmGroup.setDescription('Description.')
hwhqosPortQueueStatDiscardAlarmTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 68)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosPortQueueStatDiscardAlarmTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosPortQueueStatDiscardAlarmTrapGroup = hwhqosPortQueueStatDiscardAlarmTrapGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueStatDiscardAlarmTrapGroup.setDescription('Description.')
hwhqosPortQueueStatDiscarAlarmCancelGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 69)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosPortQueueStatDiscardAlarmCancelTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosPortQueueStatDiscarAlarmCancelGroup = hwhqosPortQueueStatDiscarAlarmCancelGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosPortQueueStatDiscarAlarmCancelGroup.setDescription('Description.')
hwhqosUserGroupQueueInterfaceStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 132, 4, 2, 70)).setObjects(("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsIfIndex"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsDirection"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsPevid"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsCevid"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsVlanid"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsQueueIndex"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsReset"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsPassPackets"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsPassBytes"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsDropPackets"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsDropBytes"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsPassPacketsRate"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsPassBytesRate"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsDropPacketsRate"), ("HUAWEI-HQOS-MIB", "hwhqosUserGroupQueueInterfaceStatisticsDropBytesRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwhqosUserGroupQueueInterfaceStatisticsGroup = hwhqosUserGroupQueueInterfaceStatisticsGroup.setStatus('current')
if mibBuilder.loadTexts: hwhqosUserGroupQueueInterfaceStatisticsGroup.setDescription('Description.')
mibBuilder.exportSymbols("HUAWEI-HQOS-MIB", hwhqosFlowMappingCfgRowStatus=hwhqosFlowMappingCfgRowStatus, hwhqosFlowWredColorHighlimitPercentage=hwhqosFlowWredColorHighlimitPercentage, hwhqosUserQueueApplyAlarmEntry=hwhqosUserQueueApplyAlarmEntry, hwhqosFlowQueueCfgRowStatus=hwhqosFlowQueueCfgRowStatus, hwhqosBandwidthCheckInterfaceIndex=hwhqosBandwidthCheckInterfaceIndex, hwhqosWredRedLowLimit=hwhqosWredRedLowLimit, hwhqosLinkAdjLocalTable=hwhqosLinkAdjLocalTable, hwhqosLinkAdjRemoteEntry=hwhqosLinkAdjRemoteEntry, hwhqosProfileUserQueueGroupName=hwhqosProfileUserQueueGroupName, hwhqosProfileUserQueueStatisticsGroup=hwhqosProfileUserQueueStatisticsGroup, hwhqosProfileApplyDomainName=hwhqosProfileApplyDomainName, hwhqosFlowWredColorRowStatus=hwhqosFlowWredColorRowStatus, hwhqosUserQueueClassifierStatisticsEntry=hwhqosUserQueueClassifierStatisticsEntry, hwhqosUserQueueStatisticsPassPackets=hwhqosUserQueueStatisticsPassPackets, hwhqosUpdateUseridProfileEntry=hwhqosUpdateUseridProfileEntry, hwhqosIfQueueStatTable=hwhqosIfQueueStatTable, hwhqosUserGroupQueueInterfaceStatisticsEntry=hwhqosUserGroupQueueInterfaceStatisticsEntry, hwhqosProfileUserQueueStatisticsQueueIndex=hwhqosProfileUserQueueStatisticsQueueIndex, hwhqosSuppressionCbsValue=hwhqosSuppressionCbsValue, hwhqosTunnelDropBytes=hwhqosTunnelDropBytes, hwhqosObjects=hwhqosObjects, hwhqosProfileUserQueueEntry=hwhqosProfileUserQueueEntry, hwhqosIfUserQueueStatisticsAclID1=hwhqosIfUserQueueStatisticsAclID1, hwhqosUserQueueStatisticsPassPacketsRate=hwhqosUserQueueStatisticsPassPacketsRate, hwhqosTMScheduleModeTable=hwhqosTMScheduleModeTable, hwhqosUseridStatDropPackets=hwhqosUseridStatDropPackets, hwhqosCompliances=hwhqosCompliances, hwhqosUserGroupQueueShapingDirection=hwhqosUserGroupQueueShapingDirection, hwhqosFlowQueueCfgEntry=hwhqosFlowQueueCfgEntry, hwhqosProfileCarTable=hwhqosProfileCarTable, hwhqosProfileUserQueueRowStatus=hwhqosProfileUserQueueRowStatus, hwhqosProfileWeightRowStatus=hwhqosProfileWeightRowStatus, hwhqosProfileApplyDomainGroup=hwhqosProfileApplyDomainGroup, hwhqosLinkAdjRemoteEnableRowStatus=hwhqosLinkAdjRemoteEnableRowStatus, hqhqosAtmPvcStatGroup=hqhqosAtmPvcStatGroup, hwhqosWredTable=hwhqosWredTable, hwhqosUserQueueStatisticsPassBytesRate=hwhqosUserQueueStatisticsPassBytesRate, hwhqosUserGroupQueueDropPackets=hwhqosUserGroupQueueDropPackets, hwhqosGroups=hwhqosGroups, hwhqosUserGroupQueueStatDirection=hwhqosUserGroupQueueStatDirection, hwhqosBehaviorPirValue=hwhqosBehaviorPirValue, hwhqosUserGroupQueueStatisticsGroup=hwhqosUserGroupQueueStatisticsGroup, hwhqosTunnelStatisticsEntry=hwhqosTunnelStatisticsEntry, hwhqosServiceTemplateRowStatus=hwhqosServiceTemplateRowStatus, hwhqosProfileCarStatisticsSlotNumber=hwhqosProfileCarStatisticsSlotNumber, hwhqosUserGroupQueueInterfaceStatisticsDropPackets=hwhqosUserGroupQueueInterfaceStatisticsDropPackets, hwhqosIfUserQueueStatisticsEntry=hwhqosIfUserQueueStatisticsEntry, hwhqosBandwidthTable=hwhqosBandwidthTable, hwhqosUpdateUseridProfileTable=hwhqosUpdateUseridProfileTable, hwhqosServiceIdentifyPolicyApplyGroup=hwhqosServiceIdentifyPolicyApplyGroup, hwhqosPortQueueShaValue=hwhqosPortQueueShaValue, hwhqosProfileApplyDomainEntry=hwhqosProfileApplyDomainEntry, hwhqosProfileApplyEntry=hwhqosProfileApplyEntry, hwhqosUserQueueStatDropBytes=hwhqosUserQueueStatDropBytes, hwhqosUserQueueStatGroup=hwhqosUserQueueStatGroup, hwhqosUserGroupQueueShapingEntry=hwhqosUserGroupQueueShapingEntry, hwhqosUserGroupQueueInterfaceStatisticsDirection=hwhqosUserGroupQueueInterfaceStatisticsDirection, hwhqosProfileCarStatisticsGroup=hwhqosProfileCarStatisticsGroup, hwVPNHQoSTunnelIfIndex=hwVPNHQoSTunnelIfIndex, hwhqosServiceTemplateEntry=hwhqosServiceTemplateEntry, hwhqosServiceTemplateApplyInterfaceIndex=hwhqosServiceTemplateApplyInterfaceIndex, hwhqosTunnelPassedByteRate=hwhqosTunnelPassedByteRate, hwhqosWredGreenDiscardPercent=hwhqosWredGreenDiscardPercent, hwhqosUserQueueApplyAlarmTable=hwhqosUserQueueApplyAlarmTable, hwhqosBandwidthCheckEntry=hwhqosBandwidthCheckEntry, hwhqosWredQueueDepthTable=hwhqosWredQueueDepthTable, hwhqosServiceIdentifyPolicyOption60Entry=hwhqosServiceIdentifyPolicyOption60Entry, hwhqosUserQueueStatForwardBytes=hwhqosUserQueueStatForwardBytes, hwhqosDomainRateLimitModeDomainName=hwhqosDomainRateLimitModeDomainName, hwhqosBehaviorFlowQueueName=hwhqosBehaviorFlowQueueName, hwhqosUserBandwidthUserid=hwhqosUserBandwidthUserid, hwhqosUserGroupQueueTemplateName=hwhqosUserGroupQueueTemplateName, hwhqosProfileUserQueueStatisticsDirection=hwhqosProfileUserQueueStatisticsDirection, hwhqosUserGroupQueueTemplateTable=hwhqosUserGroupQueueTemplateTable, hwhqosLinkAdjRemoteEnableEntry=hwhqosLinkAdjRemoteEnableEntry, hwhqosUserBandwidthPir=hwhqosUserBandwidthPir, hwhqosIfQueueStatForwardPackets=hwhqosIfQueueStatForwardPackets, hwhqosServiceIdentifyPolicyApplyRowStatus=hwhqosServiceIdentifyPolicyApplyRowStatus, hwhqosUserQueueStatEntry=hwhqosUserQueueStatEntry, hwhqosServiceTemplateName=hwhqosServiceTemplateName, hwhqosServiceIdentifyPolicy8021pRowStatus=hwhqosServiceIdentifyPolicy8021pRowStatus, hwhqosBandwidthCheckTable=hwhqosBandwidthCheckTable, hwhqosUserQueueDirection=hwhqosUserQueueDirection, hwhqosFatherUserGroupQueueApplyGroup=hwhqosFatherUserGroupQueueApplyGroup, hwhqosLinkAdjExcludeRowStatus=hwhqosLinkAdjExcludeRowStatus, hwhqosUserQueueClassifierStatisticsDirection=hwhqosUserQueueClassifierStatisticsDirection, hwhqosAtmPvcStatEntry=hwhqosAtmPvcStatEntry, hwhqosUserGroupQueueInterfaceStatisticsPassPacketsRate=hwhqosUserGroupQueueInterfaceStatisticsPassPacketsRate, hwhqosLinkAdjRemoteEnableGroup=hwhqosLinkAdjRemoteEnableGroup, hwhqosUserGroupQueueStatisticsPassBytesRate=hwhqosUserGroupQueueStatisticsPassBytesRate, hwVPNHQoSDropPackets=hwVPNHQoSDropPackets, hwhqosIfUserQueueStatisticsQueuePassPackets=hwhqosIfUserQueueStatisticsQueuePassPackets, hwhqosQueueRemarkBytes=hwhqosQueueRemarkBytes, hwhqosQueueDropByteRate=hwhqosQueueDropByteRate, hwhqosServiceTemplateApplyEntry=hwhqosServiceTemplateApplyEntry, hwhqosQueueDropPacketRate=hwhqosQueueDropPacketRate, hwhqosUserQueueStatQueueIndex=hwhqosUserQueueStatQueueIndex, hwhqosProfileUserQueuePirValue=hwhqosProfileUserQueuePirValue, hwhqosUserQueueClassifierStatisticsPassPacketsRate=hwhqosUserQueueClassifierStatisticsPassPacketsRate, hwhqosUserQueueStatisticsDirection=hwhqosUserQueueStatisticsDirection, hwhqosBehaviorUserQueueGroup=hwhqosBehaviorUserQueueGroup, hwhqosQueueForwardPacketRate=hwhqosQueueForwardPacketRate, hwhqosProfileCarPirValue=hwhqosProfileCarPirValue, hwhqosIfUserQueueStatisticsQueueDropPackets=hwhqosIfUserQueueStatisticsQueueDropPackets, hwhqosServiceIdentifyPolicyTypeEntry=hwhqosServiceIdentifyPolicyTypeEntry, hwhqosProfileApplyUserVlanCeVid=hwhqosProfileApplyUserVlanCeVid, hwhqosUserBandwidthRowStatus=hwhqosUserBandwidthRowStatus, hwhqosProfileApplyDirection=hwhqosProfileApplyDirection, hwhqosFlowQueueCfgGroup=hwhqosFlowQueueCfgGroup, hwhqosProfileApplyCevid=hwhqosProfileApplyCevid, hwhqosStat=hwhqosStat, hwhqosProfileCarCbsValue=hwhqosProfileCarCbsValue, hwhqosWredGroup=hwhqosWredGroup, hwhqosUserGroupQueueInterfaceStatisticsTable=hwhqosUserGroupQueueInterfaceStatisticsTable, hwhqosServiceIdentifyPolicyOption60Table=hwhqosServiceIdentifyPolicyOption60Table, hwhqosIfUserQueueEntry=hwhqosIfUserQueueEntry, hwhqosServiceTemplateApplyRowStatus=hwhqosServiceTemplateApplyRowStatus, hwhqosAtmPvcVCI=hwhqosAtmPvcVCI, hwhqosIfUserQueueFlowQueueProfileName=hwhqosIfUserQueueFlowQueueProfileName, hwhqosIfUserQueueStatisticsIfIndex=hwhqosIfUserQueueStatisticsIfIndex, hwhqosFlowWredColorEntry=hwhqosFlowWredColorEntry, hwhqosWredQueueDepthType=hwhqosWredQueueDepthType, hwhqosDomainUserPriorityValue=hwhqosDomainUserPriorityValue, hwhqosProfileCarGreenAction=hwhqosProfileCarGreenAction, hwhqosLinkAdjExcludeEnable=hwhqosLinkAdjExcludeEnable, hwhqosUserGroupQueueEntry=hwhqosUserGroupQueueEntry, hwhqosProfileCarRowStatus=hwhqosProfileCarRowStatus, hwhqosPortQueueEntry=hwhqosPortQueueEntry, hwhqosUserGroupQueueStatisticsSlotNumber=hwhqosUserGroupQueueStatisticsSlotNumber, hwhqosPortQueueStatDiscardAlarmTrapEntry=hwhqosPortQueueStatDiscardAlarmTrapEntry, hwhqosProfileCarGroup=hwhqosProfileCarGroup, hwhqosWredQueueDepthGroup=hwhqosWredQueueDepthGroup, hwhqosProfileWeightTable=hwhqosProfileWeightTable, hwhqosProfileWeightDirection=hwhqosProfileWeightDirection, hwhqosUserQueueApplyAlarmTrap=hwhqosUserQueueApplyAlarmTrap, hwhqosProfileCarStatisticsPassBytesRate=hwhqosProfileCarStatisticsPassBytesRate, hwhqosUserGroupQueueRowStatus=hwhqosUserGroupQueueRowStatus, hwhqosLinkAdjRemoteRowStatus=hwhqosLinkAdjRemoteRowStatus, hwhqosProfileApplyUserVlanPeVid=hwhqosProfileApplyUserVlanPeVid, hwhqosPortQueueShaPercent=hwhqosPortQueueShaPercent, hwhqosUserQueueShapeAllTrafficTable=hwhqosUserQueueShapeAllTrafficTable, hwhqosUserQueueServiceTemplateName=hwhqosUserQueueServiceTemplateName, hwhqosUserQueueApplyAlarmGroup=hwhqosUserQueueApplyAlarmGroup, hwhqosProfileUserQueueStatisticsTrafficTowardsThisInterface=hwhqosProfileUserQueueStatisticsTrafficTowardsThisInterface, hwhqosTunnelPassPacketRate=hwhqosTunnelPassPacketRate, hwhqosIfUserQueueStatisticsQueueIndex=hwhqosIfUserQueueStatisticsQueueIndex, hwhqosProfileApplyIdentifier=hwhqosProfileApplyIdentifier, hwhqosProfileUserQueueFlowQueueName=hwhqosProfileUserQueueFlowQueueName, hwhqosUserGroupQueueTemplateModeTemplate=hwhqosUserGroupQueueTemplateModeTemplate, hwhqosProfileCarStatisticsPassBytes=hwhqosProfileCarStatisticsPassBytes, hwhqosUserGroupQueueGroup=hwhqosUserGroupQueueGroup, hwhqosFlowQueueCfgType=hwhqosFlowQueueCfgType, hwhqosLinkAdjRemoteValue=hwhqosLinkAdjRemoteValue, hwhqosTunnelCosType=hwhqosTunnelCosType, hwhqosBandwidthEntry=hwhqosBandwidthEntry, hwhqosNetworkHeaderLengthGroup=hwhqosNetworkHeaderLengthGroup, hwhqosFatherUserGroupQueueApplyRowStatus=hwhqosFatherUserGroupQueueApplyRowStatus, hwhqosFlowQueueShaperCS6=hwhqosFlowQueueShaperCS6, hwhqosProfileUserQueueGroup=hwhqosProfileUserQueueGroup, hwhqosLinkAdjRemoteInterfaceIndex=hwhqosLinkAdjRemoteInterfaceIndex, hwhqosFlowQueueCfgShapingPercentageValue=hwhqosFlowQueueCfgShapingPercentageValue, hwVPNHQoSTunnelStatisticsTable=hwVPNHQoSTunnelStatisticsTable, hwhqosNetworkHeaderLengthTable=hwhqosNetworkHeaderLengthTable, hwhqosFlowMappingCfgEntry=hwhqosFlowMappingCfgEntry, hwhqosLinkAdjRemoteType=hwhqosLinkAdjRemoteType, hwhqosNetworkHeaderLengthDirection=hwhqosNetworkHeaderLengthDirection, hwhqosUserQueueGroup=hwhqosUserQueueGroup, hwhqosProfileApplyUserVlanTable=hwhqosProfileApplyUserVlanTable, hwhqosWredQueueDepthEntry=hwhqosWredQueueDepthEntry, hwhqosLinkAdjShapingModeGroup=hwhqosLinkAdjShapingModeGroup, hwhqosFlowWredColorLowlimitPercentage=hwhqosFlowWredColorLowlimitPercentage, hwhqosUserGroupQueueApplyEachvlan=hwhqosUserGroupQueueApplyEachvlan, hwhqosUserQueueCirValue=hwhqosUserQueueCirValue, hwhqosProfileApplyDomainRowStatus=hwhqosProfileApplyDomainRowStatus, hwhqosUserQueueStatisticsDropBytes=hwhqosUserQueueStatisticsDropBytes, hwhqosUserGroupQueueName=hwhqosUserGroupQueueName, PYSNMP_MODULE_ID=hwHQOS, hwhqosProfileUserQueueStatisticsReset=hwhqosProfileUserQueueStatisticsReset, hwhqosUserGroupQueueStatTable=hwhqosUserGroupQueueStatTable, hwhqosProfileApplyDomainDirection=hwhqosProfileApplyDomainDirection, hwhqosAtmPvcQueueRemarkBytes=hwhqosAtmPvcQueueRemarkBytes, hwhqosDomainSessionGroupExcludeRowStatus=hwhqosDomainSessionGroupExcludeRowStatus, hwhqosFatherUserGroupQueueApplyName=hwhqosFatherUserGroupQueueApplyName, hwhqosWredEntry=hwhqosWredEntry, hwhqosUserBandwidthCir=hwhqosUserBandwidthCir, hwhqosUserGroupQueueTemplateRowStatus=hwhqosUserGroupQueueTemplateRowStatus, hwhqosPortQueueDiscardValueCancel=hwhqosPortQueueDiscardValueCancel, hwhqosServiceIdentifyPolicy8021pEntry=hwhqosServiceIdentifyPolicy8021pEntry, hwhqosProfileUserQueueStatisticsPassBytes=hwhqosProfileUserQueueStatisticsPassBytes, hwhqosProfileApplyUserVlanEntry=hwhqosProfileApplyUserVlanEntry, hwhqosNetworkHeaderLengthEntry=hwhqosNetworkHeaderLengthEntry, hwhqosServiceTemplateTable=hwhqosServiceTemplateTable, hwhqosServiceIdentifyPolicyVlanEntry=hwhqosServiceIdentifyPolicyVlanEntry, hwhqosServiceIdentifyPolicyVlanDomainName=hwhqosServiceIdentifyPolicyVlanDomainName, hwhqosFlowMappingCfgPortQueueCosValue=hwhqosFlowMappingCfgPortQueueCosValue, hwhqosPortQueueInterfaceCancel=hwhqosPortQueueInterfaceCancel, hwhqosFlowWredColorGroup=hwhqosFlowWredColorGroup, hwhqosIfUserQueueStatisticsTable=hwhqosIfUserQueueStatisticsTable, hwhqosPortQueueStatDiscardAlarmCancelEntry=hwhqosPortQueueStatDiscardAlarmCancelEntry, hwhqosDomainUserPriorityGroup=hwhqosDomainUserPriorityGroup, hwhqosFlowMappingName=hwhqosFlowMappingName, hwhqosBehaviorUserQueueEntry=hwhqosBehaviorUserQueueEntry, hwhqosFolwMappingCfgQueueCosValue=hwhqosFolwMappingCfgQueueCosValue, hwhqosFlowQueueName=hwhqosFlowQueueName, hwhqosServiceIdentifyPolicyDscpID=hwhqosServiceIdentifyPolicyDscpID, hwhqosUserGroupQueueForwardPackets=hwhqosUserGroupQueueForwardPackets, hwhqosAtmPvcQueueRemarkPackets=hwhqosAtmPvcQueueRemarkPackets, hwhqosPortQueueCosValueTrap=hwhqosPortQueueCosValueTrap, hwhqosSlotNumber=hwhqosSlotNumber, hwhqosUserGroupQueueStatisticsDropPacketsRate=hwhqosUserGroupQueueStatisticsDropPacketsRate, hwhqosTunnelDropPackets=hwhqosTunnelDropPackets, hwhqosFlowWredColorTable=hwhqosFlowWredColorTable, hwhqosUserGroupQueueShapingValue=hwhqosUserGroupQueueShapingValue, hwhqosFlowQueueShaperAF3=hwhqosFlowQueueShaperAF3, hwhqosProfileApplyRowStatus=hwhqosProfileApplyRowStatus, hwhqosUserQueueClassifierStatisticsReset=hwhqosUserQueueClassifierStatisticsReset, hwhqosProfileUserQueueStatisticsEntry=hwhqosProfileUserQueueStatisticsEntry, hwhqosUserPortId=hwhqosUserPortId, hwhqosUserGroupQueueTable=hwhqosUserGroupQueueTable, hwhqosAtmPvcUserLayer1=hwhqosAtmPvcUserLayer1, hwhqosNetWorkHeaderLengthRowStatus=hwhqosNetWorkHeaderLengthRowStatus, hwhqosQueueForwardBytes=hwhqosQueueForwardBytes, hwhqosProfileGroup=hwhqosProfileGroup, hwhqosProfileUserQueueStatisticsSlotNumber=hwhqosProfileUserQueueStatisticsSlotNumber, hwhqosBehaviorUserQueueRowStatus=hwhqosBehaviorUserQueueRowStatus, hwhqosProfileSuppressionTable=hwhqosProfileSuppressionTable, hwhqosIfUserQueueIfIndex=hwhqosIfUserQueueIfIndex, hwhqosFlowMappingRowStatus=hwhqosFlowMappingRowStatus, hwVPNHQoSVPNType=hwVPNHQoSVPNType, hwhqosBandwidthInterfaceIndex=hwhqosBandwidthInterfaceIndex, hwhqosUserQueueStatCompliances=hwhqosUserQueueStatCompliances, hwhqosDomainRateLimitModeGroup=hwhqosDomainRateLimitModeGroup, hwhqosDomainSessionGroupExcludeDirection=hwhqosDomainSessionGroupExcludeDirection, hwhqosLinkAdjRemoteTable=hwhqosLinkAdjRemoteTable, hwhqosFlowQueueShaperRowStatus=hwhqosFlowQueueShaperRowStatus, hwhqosAtmPvcDirection=hwhqosAtmPvcDirection, hwhqosServiceIdentifyPolicyTypeTable=hwhqosServiceIdentifyPolicyTypeTable, hwhqosProfileInfoEntry=hwhqosProfileInfoEntry, hwhqosFlowQueueCfgCosValue=hwhqosFlowQueueCfgCosValue, hwhqosUserQueueClassifierStatisticsDropPacketsRate=hwhqosUserQueueClassifierStatisticsDropPacketsRate, hwhqosLinkAdjLocalRowStatus=hwhqosLinkAdjLocalRowStatus, hwhqosUseridStatQueue=hwhqosUseridStatQueue, hwhqosUserQueueApplyFailDirection=hwhqosUserQueueApplyFailDirection, hwhqosProfileApplyUserVlanInterfaceIndex=hwhqosProfileApplyUserVlanInterfaceIndex, hwhqosAtmPvcUserLayer2=hwhqosAtmPvcUserLayer2, hwhqosPortQueueRowStatus=hwhqosPortQueueRowStatus, hwhqosServiceIdentifyPolicyEntry=hwhqosServiceIdentifyPolicyEntry, hwhqosProfileInfoDescription=hwhqosProfileInfoDescription, hwhqosProfileUserQueueStatisticsTable=hwhqosProfileUserQueueStatisticsTable, hwhqosProfileApplyUserVlanProfileName=hwhqosProfileApplyUserVlanProfileName, hwhqosUserQueueFlowQueueName=hwhqosUserQueueFlowQueueName, hwhqosNetWorkHeaderLengthValue=hwhqosNetWorkHeaderLengthValue, hwhqosAtmPvcQueueForwardPackets=hwhqosAtmPvcQueueForwardPackets, hwhqosIfUserQueueAclID2=hwhqosIfUserQueueAclID2)
mibBuilder.exportSymbols("HUAWEI-HQOS-MIB", hwhqosProfileCarRedAction=hwhqosProfileCarRedAction, hwhqosServiceIdentifyPolicyApplyInterfaceIndex=hwhqosServiceIdentifyPolicyApplyInterfaceIndex, hwhqosLinkAdjShapingModeType=hwhqosLinkAdjShapingModeType, hwhqosUserGroupQueueStatisticsDropBytesRate=hwhqosUserGroupQueueStatisticsDropBytesRate, hwVPNHQoSVPNValue=hwVPNHQoSVPNValue, hwhqosUserGroupQueuePbsValue=hwhqosUserGroupQueuePbsValue, hwhqosUserQueueRowStatus=hwhqosUserQueueRowStatus, hwhqosProfileUserQueueMappingName=hwhqosProfileUserQueueMappingName, hwhqosQueueDropPackets=hwhqosQueueDropPackets, hwhqosUserGroupQueueInterfaceStatisticsQueueIndex=hwhqosUserGroupQueueInterfaceStatisticsQueueIndex, hwhqosUserQueueStatReset=hwhqosUserQueueStatReset, hwVPNHQoSDropBytes=hwVPNHQoSDropBytes, hwhqosDomainRateLimitModeRateLimitMode=hwhqosDomainRateLimitModeRateLimitMode, hwhqosFlowQueueTable=hwhqosFlowQueueTable, hwhqosUserQueueStatDirection=hwhqosUserQueueStatDirection, hwhqosBehaviorName=hwhqosBehaviorName, hwhqosBandwidthRowStatus=hwhqosBandwidthRowStatus, hwhqosLinkAdjLocalTableGroup=hwhqosLinkAdjLocalTableGroup, hwhqosAtmPvcQueueIndex=hwhqosAtmPvcQueueIndex, hwhqosSetZero=hwhqosSetZero, hwhqosIfUserQueueAclID1=hwhqosIfUserQueueAclID1, hwhqosTMScheduleModeSimpleEnable=hwhqosTMScheduleModeSimpleEnable, hwhqosPortQueueStatDiscarAlarmCancelGroup=hwhqosPortQueueStatDiscarAlarmCancelGroup, hwhqosQueueIndex=hwhqosQueueIndex, hwhqosDomainUserMaxSessionRowStatus=hwhqosDomainUserMaxSessionRowStatus, hwhqosUserGroupQueueTemplateGroup=hwhqosUserGroupQueueTemplateGroup, hwhqosDomainUserMaxSessionTable=hwhqosDomainUserMaxSessionTable, hwhqosFlowMappingGroup=hwhqosFlowMappingGroup, hwhqosProfileCarCirValue=hwhqosProfileCarCirValue, hwhqosLinkAdjRemoteGroup=hwhqosLinkAdjRemoteGroup, hwhqosFlowQueueEntry=hwhqosFlowQueueEntry, hwhqosFatherUserGroupQueueApplyEntry=hwhqosFatherUserGroupQueueApplyEntry, hwhqosProfileCarEntry=hwhqosProfileCarEntry, hwhqosServiceIdentifyPolicyDscpEntry=hwhqosServiceIdentifyPolicyDscpEntry, hwhqosProfileApplyUserVlanEach=hwhqosProfileApplyUserVlanEach, hwhqosFlowWredColorDiscardPercentage=hwhqosFlowWredColorDiscardPercentage, hwhqosServiceTemplateApplyGroup=hwhqosServiceTemplateApplyGroup, hwhqosUserLayer2=hwhqosUserLayer2, hwhqosIfQueueStatDropPackets=hwhqosIfQueueStatDropPackets, hwhqosProfileCarYellowAction=hwhqosProfileCarYellowAction, hwhqosProfileUserQueueServiceTemplateName=hwhqosProfileUserQueueServiceTemplateName, hwhqosUserQueueTable=hwhqosUserQueueTable, hwhqosIfUserQueueFlowMappingProfileName=hwhqosIfUserQueueFlowMappingProfileName, hwhqosAtmPvcVPI=hwhqosAtmPvcVPI, hwhqosUpdateUseridProfileRowStatus=hwhqosUpdateUseridProfileRowStatus, hwhqosUserGroupQueueStatisticsPassPacketsRate=hwhqosUserGroupQueueStatisticsPassPacketsRate, hwhqosFlowWredColor=hwhqosFlowWredColor, hwhqosProfileInfoTable=hwhqosProfileInfoTable, hwhqosTunnelVPNName=hwhqosTunnelVPNName, hwhqosFlowQueueShaperAF4=hwhqosFlowQueueShaperAF4, hwhqosBandwidthCheckValue=hwhqosBandwidthCheckValue, hwhqosProfileCarStatisticsDropBytes=hwhqosProfileCarStatisticsDropBytes, hwhqosPortQueueDiscardTypeTrap=hwhqosPortQueueDiscardTypeTrap, hwhqosDirection=hwhqosDirection, hwhqosFlowMappingTable=hwhqosFlowMappingTable, hwhqosProfileApplyUserVlanRowStatus=hwhqosProfileApplyUserVlanRowStatus, hwhqosProfileCarDirection=hwhqosProfileCarDirection, hwhqosUserQueueStatisticsQueueIndex=hwhqosUserQueueStatisticsQueueIndex, hwhqosProfileCarStatisticsTable=hwhqosProfileCarStatisticsTable, hwhqosTMScheduleModeSlot=hwhqosTMScheduleModeSlot, hwhqosLinkAdjShapingModeInterfaceIndex=hwhqosLinkAdjShapingModeInterfaceIndex, hwhqosProfileUserQueueCirValue=hwhqosProfileUserQueueCirValue, hwhqosUpdateUseridProfileUserid=hwhqosUpdateUseridProfileUserid, hwhqosServiceIdentifyPolicyApplyName=hwhqosServiceIdentifyPolicyApplyName, hwhqosServiceIdentifyPolicyVlanTable=hwhqosServiceIdentifyPolicyVlanTable, hwhqosDomainSessionGroupExcludeTable=hwhqosDomainSessionGroupExcludeTable, hwhqosServiceIdentifyPolicyVlanGroup=hwhqosServiceIdentifyPolicyVlanGroup, hwhqosUserGroupQueueStatisticsGroupName=hwhqosUserGroupQueueStatisticsGroupName, hwhqosUserGroupQueueStatReset=hwhqosUserGroupQueueStatReset, hwhqosLinkAdjExcludeGroup=hwhqosLinkAdjExcludeGroup, hwhqosProfileUserQueueStatisticsPassBytesRate=hwhqosProfileUserQueueStatisticsPassBytesRate, hwhqosIfStatGroup=hwhqosIfStatGroup, hwhqosServiceIdentifyPolicyApplyTable=hwhqosServiceIdentifyPolicyApplyTable, hwhqosUseridStatPassPackets=hwhqosUseridStatPassPackets, hwhqosUserGroupQueueShapingRowStatus=hwhqosUserGroupQueueShapingRowStatus, hwhqosDomainUserMaxSessionNum=hwhqosDomainUserMaxSessionNum, hwhqosFlowQueueGroup=hwhqosFlowQueueGroup, hwhqosFlowQueueShaperValue=hwhqosFlowQueueShaperValue, hwhqosUserQueueClassifierStatisticsTable=hwhqosUserQueueClassifierStatisticsTable, hwhqosServiceIdentifyPolicyTable=hwhqosServiceIdentifyPolicyTable, hwhqosFlowQueueRowStatus=hwhqosFlowQueueRowStatus, hwhqosProfileName=hwhqosProfileName, hwhqosBandwidthCheck=hwhqosBandwidthCheck, hwhqosFlowWredGroup=hwhqosFlowWredGroup, hwhqosServiceIdentifyPolicyDscpTable=hwhqosServiceIdentifyPolicyDscpTable, hwhqosUserGroupQueueStatisticsPassBytes=hwhqosUserGroupQueueStatisticsPassBytes, hwVPNHQoSPassPackets=hwVPNHQoSPassPackets, hwhqosUserQueueClassifierStatisticsPassBytesRate=hwhqosUserQueueClassifierStatisticsPassBytesRate, hwhqosUserGroupQueueStatisticsTable=hwhqosUserGroupQueueStatisticsTable, hwhqosUserGroupQueueApplyName=hwhqosUserGroupQueueApplyName, hwhqosProfileInfoName=hwhqosProfileInfoName, hwhqosProfileApplyPevid=hwhqosProfileApplyPevid, hwhqosUserQueueStatPerDropPackets=hwhqosUserQueueStatPerDropPackets, hwhqosProfileUserApplyGroup=hwhqosProfileUserApplyGroup, hwhqosDomainUserPriorityTable=hwhqosDomainUserPriorityTable, hwhqosFlowQueueCfgTable=hwhqosFlowQueueCfgTable, hwhqosLinkAdjLocalValue=hwhqosLinkAdjLocalValue, hwhqosUserGroupQueueInterfaceStatisticsDropPacketsRate=hwhqosUserGroupQueueInterfaceStatisticsDropPacketsRate, hwhqosPortQueueStatDiscardAlarmTrapTable=hwhqosPortQueueStatDiscardAlarmTrapTable, hwhqosServiceIdentifyPolicyDscpRowStatus=hwhqosServiceIdentifyPolicyDscpRowStatus, hwhqosUserGroupQueueStatisticsDirection=hwhqosUserGroupQueueStatisticsDirection, hwhqosPortQueueStatDiscardAlarmTrapGroup=hwhqosPortQueueStatDiscardAlarmTrapGroup, hwhqosUserQueueClassifierStatisticsDropBytesRate=hwhqosUserQueueClassifierStatisticsDropBytesRate, hwhqosLinkAdjRemoteEnableSlot=hwhqosLinkAdjRemoteEnableSlot, hwhqosProfileDescription=hwhqosProfileDescription, hwhqosUserQueueStatisticsSlotNumber=hwhqosUserQueueStatisticsSlotNumber, hwhqosUserQueueClassifierStatisticsDropBytes=hwhqosUserQueueClassifierStatisticsDropBytes, hwhqosUseridStatDropPacketsRate=hwhqosUseridStatDropPacketsRate, hwhqosUpdateUseridProfileName=hwhqosUpdateUseridProfileName, hwhqosIfQueueStatDropBytes=hwhqosIfQueueStatDropBytes, hwhqosUserQueueStatLastResetTime=hwhqosUserQueueStatLastResetTime, hwhqosUserQueueClassifierStatisticsQueueIndex=hwhqosUserQueueClassifierStatisticsQueueIndex, hwhqosServiceIdentifyPolicyName=hwhqosServiceIdentifyPolicyName, hwhqosFlowMappingEntry=hwhqosFlowMappingEntry, hwhqosLinkAdjShapingModeRowStatus=hwhqosLinkAdjShapingModeRowStatus, hwhqosIfUserQueueStatisticsQueuePassBytes=hwhqosIfUserQueueStatisticsQueuePassBytes, hwhqosUserSlotId=hwhqosUserSlotId, hwhqosUserQueuePirValue=hwhqosUserQueuePirValue, hwhqosTMScheduleModeRowStatus=hwhqosTMScheduleModeRowStatus, hwhqosUserQueueStatisticsTable=hwhqosUserQueueStatisticsTable, hwhqosProfileUserQueueStatisticsInterfaceIndex=hwhqosProfileUserQueueStatisticsInterfaceIndex, hwhqosProfileUserQueueStatisticsDropPacketsRate=hwhqosProfileUserQueueStatisticsDropPacketsRate, hwhqosPortQueueWeightValue=hwhqosPortQueueWeightValue, hwhqosAtmPvcQueueDropBytes=hwhqosAtmPvcQueueDropBytes, hwhqosBehaviorCirValue=hwhqosBehaviorCirValue, hwhqosUserGroupQueueStatisticsPassPackets=hwhqosUserGroupQueueStatisticsPassPackets, hwhqosDomainUserPriorityDomainName=hwhqosDomainUserPriorityDomainName, hwhqosUserQueueStatisticsInterfaceIndex=hwhqosUserQueueStatisticsInterfaceIndex, hwhqosPortQueueCosValueCancel=hwhqosPortQueueCosValueCancel, hwhqosLinkAdjLocalEntry=hwhqosLinkAdjLocalEntry, hwhqosPortQueueWredName=hwhqosPortQueueWredName, hwhqosProfileUserQueueTable=hwhqosProfileUserQueueTable, hwhqosWredRedHighLimit=hwhqosWredRedHighLimit, hwhqosProfileApplyDomainTable=hwhqosProfileApplyDomainTable, hwhqosUserQueueInterfaceIndex=hwhqosUserQueueInterfaceIndex, hwhqosLinkAdjShapingModeDomainName=hwhqosLinkAdjShapingModeDomainName, hwhqosProfileWeightValue=hwhqosProfileWeightValue, hwhqosPortQueueCosValue=hwhqosPortQueueCosValue, hwhqosTunnelPassPackets=hwhqosTunnelPassPackets, hwhqosProfileTable=hwhqosProfileTable, hwhqosProfileInterfaceIndex=hwhqosProfileInterfaceIndex, hwhqosUseridStatTable=hwhqosUseridStatTable, hwhqosIfUserQueueStatisticsQueueDropBytes=hwhqosIfUserQueueStatisticsQueueDropBytes, hwhqosUserQueueStatDropPackets=hwhqosUserQueueStatDropPackets, hwhqosUserFrameId=hwhqosUserFrameId, hwhqosUserQueueClassifierStatisticsInterfaceIndex=hwhqosUserQueueClassifierStatisticsInterfaceIndex, hwhqosLinkAdjRemoteEnableTable=hwhqosLinkAdjRemoteEnableTable, hwhqosProfileUserQueueStatisticsPassPackets=hwhqosProfileUserQueueStatisticsPassPackets, hwhqosFlowWredName=hwhqosFlowWredName, hwhqosUserQueueApplyPirSucessAlarmTrap=hwhqosUserQueueApplyPirSucessAlarmTrap, hwhqosUserQueueGroupName=hwhqosUserQueueGroupName, hwhqosIfUserQueueAclType=hwhqosIfUserQueueAclType, hwhqosProfileUserQueueStatisticsPassPacketsRate=hwhqosProfileUserQueueStatisticsPassPacketsRate, hwhqosSuppressionType=hwhqosSuppressionType, hwhqosIfUserQueueStatisticsAclType=hwhqosIfUserQueueStatisticsAclType, hwhqosUserQueueStatTrapGroup=hwhqosUserQueueStatTrapGroup, hwhqosTMScheduleModeEntry=hwhqosTMScheduleModeEntry, hwhqosIfQueueStatEntry=hwhqosIfQueueStatEntry, hwhqosLinkAdjExcludeEntry=hwhqosLinkAdjExcludeEntry, hwhqosUserQueueStatisticsGroup=hwhqosUserQueueStatisticsGroup, hwhqosFlowMappingCfgGroup=hwhqosFlowMappingCfgGroup, hwhqosBehaviorUserQueueTable=hwhqosBehaviorUserQueueTable, hwhqosUserGroupQueueApplyEntry=hwhqosUserGroupQueueApplyEntry, hwhqosQueueForwardByteRate=hwhqosQueueForwardByteRate, hwhqosUserQueueShapeAllTrafficEntry=hwhqosUserQueueShapeAllTrafficEntry, hwhqosServiceIdentifyPolicyTypeGroup=hwhqosServiceIdentifyPolicyTypeGroup, hwhqosUserGroupQueueInterfaceStatisticsDropBytesRate=hwhqosUserGroupQueueInterfaceStatisticsDropBytesRate, hwhqosServiceTemplateGroup=hwhqosServiceTemplateGroup, hwhqosDomainRateLimitModeDirection=hwhqosDomainRateLimitModeDirection, hwhqosUserGroupQueueSlotNumber=hwhqosUserGroupQueueSlotNumber, hwhqosUserQueueApplyAlarmIfNetName=hwhqosUserQueueApplyAlarmIfNetName, hwhqosIfQueueStatGroup=hwhqosIfQueueStatGroup, hwhqosWredRowStatus=hwhqosWredRowStatus, hwhqosProfileApplyTable=hwhqosProfileApplyTable, hwhqosUserGroupQueueApplyTable=hwhqosUserGroupQueueApplyTable, hwhqosUserQueueClassifierStatisticsSlotNumber=hwhqosUserQueueClassifierStatisticsSlotNumber, hwhqosObjectsGroup=hwhqosObjectsGroup, hwhqosUseridStatUserid=hwhqosUseridStatUserid, hwhqosProfileUserQueueStatisticsDropBytesRate=hwhqosProfileUserQueueStatisticsDropBytesRate, hwhqosLinkAdjRemoteEnable=hwhqosLinkAdjRemoteEnable, hwhqosProfileRowStatus=hwhqosProfileRowStatus, hwhqosDomainRateLimitModeEntry=hwhqosDomainRateLimitModeEntry, hwhqosUserQueueClassifierStatisticsPassBytes=hwhqosUserQueueClassifierStatisticsPassBytes, hwhqosIfUserQueueTable=hwhqosIfUserQueueTable, hwhqosProfileCarStatisticsReset=hwhqosProfileCarStatisticsReset, hwhqosPortQueueDiscardValueTrap=hwhqosPortQueueDiscardValueTrap, hwhqosUserQueueShapeAllTrafficInterfaceIndex=hwhqosUserQueueShapeAllTrafficInterfaceIndex, hwVPNHQoSPassBytes=hwVPNHQoSPassBytes, hwhqosLinkAdjExcludeSlotNumber=hwhqosLinkAdjExcludeSlotNumber, hwhqosUserGroupQueueInterfaceStatisticsPassPackets=hwhqosUserGroupQueueInterfaceStatisticsPassPackets, hwhqosServiceIdentifyPolicyOption60RowStatus=hwhqosServiceIdentifyPolicyOption60RowStatus, hwhqosServiceTemplateApplyTable=hwhqosServiceTemplateApplyTable, hwhqosFlowQueueShaperCS7=hwhqosFlowQueueShaperCS7, hwhqosFlowQueueCfgPbsValue=hwhqosFlowQueueCfgPbsValue, hwhqosAtmPvcIfIndex=hwhqosAtmPvcIfIndex, hwhqosProfileUserQueueDirection=hwhqosProfileUserQueueDirection, hwhqosUserQueueFlowMappingName=hwhqosUserQueueFlowMappingName, hwhqosUserQueueStatisticsReset=hwhqosUserQueueStatisticsReset, hwhqosUserQueueClassifierStatisticsPassPackets=hwhqosUserQueueClassifierStatisticsPassPackets, hwhqosUserBandwidthTable=hwhqosUserBandwidthTable, hwhqosUserQueueStatType=hwhqosUserQueueStatType, hwhqosProfileCarStatisticsCevid=hwhqosProfileCarStatisticsCevid, hwhqosLinkAdjShapingMode=hwhqosLinkAdjShapingMode, hwhqosTunnelStatGroup=hwhqosTunnelStatGroup, hwhqosDomainSessionGroupExcludeDomainName=hwhqosDomainSessionGroupExcludeDomainName, hwhqosUserGroupQueueStatEntry=hwhqosUserGroupQueueStatEntry, hwhqosUserGroupQueueApplyDirection=hwhqosUserGroupQueueApplyDirection, hwHQOS=hwHQOS, hwhqosQueueDropBytes=hwhqosQueueDropBytes, hwhqosIfUserQueueStatisticsReset=hwhqosIfUserQueueStatisticsReset, hwhqosUserGroupQueueInterfaceStatisticsDropBytes=hwhqosUserGroupQueueInterfaceStatisticsDropBytes, hwhqosBehaviorGroupName=hwhqosBehaviorGroupName, hwhqosUserGroupQueueDropBytes=hwhqosUserGroupQueueDropBytes, hwhqosUserGroupQueueApplyCeVid=hwhqosUserGroupQueueApplyCeVid, hwhqosSuppressionCirValue=hwhqosSuppressionCirValue, hwhqosProfileCarStatisticsEntry=hwhqosProfileCarStatisticsEntry, hwhqosServiceIdentifyPolicyDscpDomainName=hwhqosServiceIdentifyPolicyDscpDomainName, hwhqosAtmPvcStatTable=hwhqosAtmPvcStatTable, hwhqosUserGroupQueueApplyPeVid=hwhqosUserGroupQueueApplyPeVid, hwhqosUserQueueStatisticsPassBytes=hwhqosUserQueueStatisticsPassBytes, hwhqosUseridStatReset=hwhqosUseridStatReset, hwhqosProfileCarStatisticsInterfaceIndex=hwhqosProfileCarStatisticsInterfaceIndex, hwhqosProfileSuppressionEntry=hwhqosProfileSuppressionEntry, hwhqosBandwidthGroup=hwhqosBandwidthGroup, hwhqosLinkAdjRemoteDomainName=hwhqosLinkAdjRemoteDomainName, hwhqosUseridStatEntry=hwhqosUseridStatEntry, hwhqosWredQueueDepthRowStatus=hwhqosWredQueueDepthRowStatus, hwhqosFlowQueueShaperBE=hwhqosFlowQueueShaperBE, hwhqosProfileUserQueueStatisticsConfiguredCir=hwhqosProfileUserQueueStatisticsConfiguredCir, hwhqosUpdateUseridProfileGroup=hwhqosUpdateUseridProfileGroup, hwhqosApplyServiceTemplateName=hwhqosApplyServiceTemplateName, hwhqosUserGroupQueueInterfaceStatisticsPevid=hwhqosUserGroupQueueInterfaceStatisticsPevid, hwhqosUserQueueClassifierStatisticsClassifierName=hwhqosUserQueueClassifierStatisticsClassifierName, hwhqosUserQueueStatisticsDropPacketsRate=hwhqosUserQueueStatisticsDropPacketsRate, hwhqosUserLayer1=hwhqosUserLayer1, hwhqosDomainRateLimitModeRowStatus=hwhqosDomainRateLimitModeRowStatus, hwhqosProfileUserQueueStatisticsConfiguredPir=hwhqosProfileUserQueueStatisticsConfiguredPir, hwhqosIfQueueStatIfIndex=hwhqosIfQueueStatIfIndex, hwhqosGroupName=hwhqosGroupName, hwhqosUserGroupQueueStatisticsQueueIndex=hwhqosUserGroupQueueStatisticsQueueIndex, hwhqosPortQueueStatDiscardAlarmCancelTable=hwhqosPortQueueStatDiscardAlarmCancelTable, hwhqosPortQueuePbsValue=hwhqosPortQueuePbsValue, hwhqosProfileApplyName=hwhqosProfileApplyName, hwhqosProfileCarStatisticsDirection=hwhqosProfileCarStatisticsDirection, hwhqosProfileCarStatisticsDropPacketsRate=hwhqosProfileCarStatisticsDropPacketsRate, hwhqosFatherUserGroupQueueApplyInterfaceIndex=hwhqosFatherUserGroupQueueApplyInterfaceIndex, hwhqosLinkAdjRemoteEnableDomainName=hwhqosLinkAdjRemoteEnableDomainName, hwhqosTraps=hwhqosTraps, hwhqosProfileUserQueueStatisticsCevid=hwhqosProfileUserQueueStatisticsCevid, hwhqosBandwidthCheckDirection=hwhqosBandwidthCheckDirection, hwhqosFlowQueueShaperTable=hwhqosFlowQueueShaperTable, hwhqosUserGroupQueueApplyRowStatus=hwhqosUserGroupQueueApplyRowStatus, hwhqosUserQueueStatForwardPackets=hwhqosUserQueueStatForwardPackets, hwhqosDomainUserPriorityEntry=hwhqosDomainUserPriorityEntry)
mibBuilder.exportSymbols("HUAWEI-HQOS-MIB", hwhqosAtmPvcQueueDropPackets=hwhqosAtmPvcQueueDropPackets, hwhqosProfileWeightEntry=hwhqosProfileWeightEntry, hwhqosServiceIdentifyPolicy8021pGroup=hwhqosServiceIdentifyPolicy8021pGroup, hwhqosUseridStatDropBytes=hwhqosUseridStatDropBytes, hwhqosBehaviorServiceTemplateName=hwhqosBehaviorServiceTemplateName, hwhqosPortQueueGroup=hwhqosPortQueueGroup, hwhqosDomainSessionGroupExcludeMode=hwhqosDomainSessionGroupExcludeMode, hwhqosUserQueueEntry=hwhqosUserQueueEntry, hwhqosWredYellowLowLimit=hwhqosWredYellowLowLimit, hwhqosServiceIdentifyPolicy8021pCosID=hwhqosServiceIdentifyPolicy8021pCosID, hwhqosFatherUserGroupQueueApplyTable=hwhqosFatherUserGroupQueueApplyTable, hwhqosBandwidthCheckRowStatus=hwhqosBandwidthCheckRowStatus, hwhqosWredGreenHighLimit=hwhqosWredGreenHighLimit, hwhqosPortQueueStatDiscardAlarmTrap=hwhqosPortQueueStatDiscardAlarmTrap, hwhqosUseridStatGroup=hwhqosUseridStatGroup, hwhqosServiceIdentifyPolicyOption60=hwhqosServiceIdentifyPolicyOption60, hwhqosUseridStatPassBytesRate=hwhqosUseridStatPassBytesRate, hwhqosUserQueueStatDiscardAlarmTrap=hwhqosUserQueueStatDiscardAlarmTrap, hwhqosWredQueueDepthWredName=hwhqosWredQueueDepthWredName, hwhqosUserGroupQueueInterfaceStatisticsReset=hwhqosUserGroupQueueInterfaceStatisticsReset, hwhqosProfileApplyDomainProfileName=hwhqosProfileApplyDomainProfileName, hwhqosFlowWredEntry=hwhqosFlowWredEntry, hwhqosWredName=hwhqosWredName, hwhqosUserGroupQueueInterfaceStatisticsVlanid=hwhqosUserGroupQueueInterfaceStatisticsVlanid, hwhqosFlowWredRowStatus=hwhqosFlowWredRowStatus, hwhqosUserGroupQueueForwardBytes=hwhqosUserGroupQueueForwardBytes, hwhqosUserQueueShapeAllTrafficRowStatus=hwhqosUserQueueShapeAllTrafficRowStatus, hwhqosUseridStatPassBytes=hwhqosUseridStatPassBytes, hwhqosIfQueueStatDirection=hwhqosIfQueueStatDirection, hwhqosServiceIdentifyPolicyGroup=hwhqosServiceIdentifyPolicyGroup, hwhqosDomainUserPriorityRowStatus=hwhqosDomainUserPriorityRowStatus, hwhqosTunnelPassBytes=hwhqosTunnelPassBytes, hwhqosIfUserQueuePir=hwhqosIfUserQueuePir, hwhqosVpnQoSTunnelStatGroup=hwhqosVpnQoSTunnelStatGroup, hwhqosUserQueueClassifierStatisticsGroup=hwhqosUserQueueClassifierStatisticsGroup, hwhqosQueueForwardPackets=hwhqosQueueForwardPackets, hwhqosTunnelVPNType=hwhqosTunnelVPNType, hwhqosDomainUserMaxSessionDomainName=hwhqosDomainUserMaxSessionDomainName, hwhqosPortQueueStatDiscardAlarmCancelTrap=hwhqosPortQueueStatDiscardAlarmCancelTrap, hwhqosProfileCarPbsValue=hwhqosProfileCarPbsValue, hwhqosFlowQueueShaperAF1=hwhqosFlowQueueShaperAF1, hwhqosUpdateUseridProfileDirection=hwhqosUpdateUseridProfileDirection, hwhqosDomainSessionGroupExcludeEntry=hwhqosDomainSessionGroupExcludeEntry, hwhqosLinkAdjRemoteEnableType=hwhqosLinkAdjRemoteEnableType, hwhqosProfileCarStatisticsPassPacketsRate=hwhqosProfileCarStatisticsPassPacketsRate, hwhqosUserQueueStatisticsEntry=hwhqosUserQueueStatisticsEntry, hwhqosPortQueueTable=hwhqosPortQueueTable, hwVPNHQoSTunnelStatisticsEntry=hwVPNHQoSTunnelStatisticsEntry, hwhqosServiceIdentifyPolicyOption60Group=hwhqosServiceIdentifyPolicyOption60Group, hwhqosIfIndex=hwhqosIfIndex, hwhqosFlowQueueCfgShapingValue=hwhqosFlowQueueCfgShapingValue, hwhqosUserBandwidthCommittedCir=hwhqosUserBandwidthCommittedCir, hwhqosServiceIdentifyPolicyRowStatus=hwhqosServiceIdentifyPolicyRowStatus, hwhqosProfileCarStatisticsType=hwhqosProfileCarStatisticsType, hwhqosUserQueueStatTable=hwhqosUserQueueStatTable, hwhqosProfileUserQueueStatisticsPevid=hwhqosProfileUserQueueStatisticsPevid, hwhqosLinkAdjShapingModeEntry=hwhqosLinkAdjShapingModeEntry, hwhqosPortQueueDiscardTypeCancel=hwhqosPortQueueDiscardTypeCancel, hwhqosIfStatTable=hwhqosIfStatTable, hwhqosLinkAdjExcludeTable=hwhqosLinkAdjExcludeTable, hwhqosProfileSuppressionGroup=hwhqosProfileSuppressionGroup, hwhqosDomainSessionGroupExcludeGroup=hwhqosDomainSessionGroupExcludeGroup, hwhqosUserGroupQueueStatisticsEntry=hwhqosUserGroupQueueStatisticsEntry, hwhqosTunnelIfIndex=hwhqosTunnelIfIndex, hwhqosFlowQueueShaperGroup=hwhqosFlowQueueShaperGroup, hwhqosFlowQueueCfgWredName=hwhqosFlowQueueCfgWredName, hwhqosFlowQueueCfgWeightValue=hwhqosFlowQueueCfgWeightValue, hwhqosDomainUserMaxSessionEntry=hwhqosDomainUserMaxSessionEntry, hwhqosLinkAdjShapingModeTable=hwhqosLinkAdjShapingModeTable, hwhqosIfUserQueueRowStatus=hwhqosIfUserQueueRowStatus, hwhqosServiceIdentifyPolicyDscpGroup=hwhqosServiceIdentifyPolicyDscpGroup, hwhqosUserGroupQueueInterfaceStatisticsCevid=hwhqosUserGroupQueueInterfaceStatisticsCevid, hwhqosConformance=hwhqosConformance, hwhqosUserGroupQueueInterfaceStatisticsGroup=hwhqosUserGroupQueueInterfaceStatisticsGroup, hwhqosWredRedDiscardPercent=hwhqosWredRedDiscardPercent, CosType=CosType, hwhqosUserQueueStatNameString=hwhqosUserQueueStatNameString, hwhqosWredQueueDepthValue=hwhqosWredQueueDepthValue, hwhqosUserGroupQueueShapingGroup=hwhqosUserGroupQueueShapingGroup, hwhqosProfileApplyUserVlanDirection=hwhqosProfileApplyUserVlanDirection, hwhqosIfStatEntry=hwhqosIfStatEntry, hwhqosWredYellowDiscardPercent=hwhqosWredYellowDiscardPercent, hwhqosBehaviorFlowMappingName=hwhqosBehaviorFlowMappingName, hwhqosServiceIdentifyPolicy8021pTable=hwhqosServiceIdentifyPolicy8021pTable, hwhqosIfQueueStatForwardBytes=hwhqosIfQueueStatForwardBytes, hwhqosWredGreenLowLimit=hwhqosWredGreenLowLimit, hwhqosDomainUserPriorityDirection=hwhqosDomainUserPriorityDirection, hwhqosUserGroupQueueStatisticsDropBytes=hwhqosUserGroupQueueStatisticsDropBytes, hwhqosTunnelStatisticsTable=hwhqosTunnelStatisticsTable, hwhqosUserGroupQueueInterfaceStatisticsIfIndex=hwhqosUserGroupQueueInterfaceStatisticsIfIndex, hwhqosProfileCarStatisticsPassPackets=hwhqosProfileCarStatisticsPassPackets, hwhqosProfileInfoRowStatus=hwhqosProfileInfoRowStatus, hwhqosQueueRemarkPackets=hwhqosQueueRemarkPackets, hwhqosUserQueueApplyPirFailAlarmTrap=hwhqosUserQueueApplyPirFailAlarmTrap, hwhqosLinkAdjLocalSlotNumber=hwhqosLinkAdjLocalSlotNumber, hwhqosProfileCarStatisticsDropPackets=hwhqosProfileCarStatisticsDropPackets, hwhqosUserGroupQueueApplyGroup=hwhqosUserGroupQueueApplyGroup, hwhqosPortQueueIfIndex=hwhqosPortQueueIfIndex, hwhqosUserBandwidthEntry=hwhqosUserBandwidthEntry, hwhqosAtmPvcQueueForwardBytes=hwhqosAtmPvcQueueForwardBytes, hwhqosUserGroupQueueStatLastResetTime=hwhqosUserGroupQueueStatLastResetTime, hwhqosServiceIdentifyPolicyVlanID=hwhqosServiceIdentifyPolicyVlanID, hwhqosProfileApplyUserVlanGroup=hwhqosProfileApplyUserVlanGroup, hwhqosProfileEntry=hwhqosProfileEntry, hwhqosFlowQueueShaperAF2=hwhqosFlowQueueShaperAF2, hwhqosSuppressionRowStatus=hwhqosSuppressionRowStatus, hwhqosIfQueueStatQueueIndex=hwhqosIfQueueStatQueueIndex, hwhqosUserQueueClassifierStatisticsDropPackets=hwhqosUserQueueClassifierStatisticsDropPackets, hwhqosBandwidthValue=hwhqosBandwidthValue, hwhqosUserGroupQueueApplyInterfaceIndex=hwhqosUserGroupQueueApplyInterfaceIndex, hwhqosFlowWredTable=hwhqosFlowWredTable, hwhqosUserGroupQueueInterfaceStatisticsPassBytesRate=hwhqosUserGroupQueueInterfaceStatisticsPassBytesRate, hwhqosProfileCarStatisticsPevid=hwhqosProfileCarStatisticsPevid, hwhqosProfileUserQueueStatisticsDropPackets=hwhqosProfileUserQueueStatisticsDropPackets, hwhqosDomainRateLimitModeTable=hwhqosDomainRateLimitModeTable, hwhqosUserGroupQueueTemplateEntry=hwhqosUserGroupQueueTemplateEntry, hwhqosServiceIdentifyPolicy8021pDomainName=hwhqosServiceIdentifyPolicy8021pDomainName, hwhqosServiceIdentifyPolicyVlanRowStatus=hwhqosServiceIdentifyPolicyVlanRowStatus, hwhqosUserGroupQueueStatGroup=hwhqosUserGroupQueueStatGroup, hwhqosUserGroupQueueStatisticsReset=hwhqosUserGroupQueueStatisticsReset, hwhqosFatherUserGroupQueueApplyDirection=hwhqosFatherUserGroupQueueApplyDirection, hwhqosUserGroupQueueStatGroupName=hwhqosUserGroupQueueStatGroupName, hwhqosProfileCarStatisticsDropBytesRate=hwhqosProfileCarStatisticsDropBytesRate, hwhqosProfileUserQueueStatisticsDropBytes=hwhqosProfileUserQueueStatisticsDropBytes, hwhqosWredYellowHighLimit=hwhqosWredYellowHighLimit, hwhqosSuppressionDirection=hwhqosSuppressionDirection, hwhqosUserGroupQueueShapingTable=hwhqosUserGroupQueueShapingTable, hwhqosFlowQueueShaperEF=hwhqosFlowQueueShaperEF, hwhqosUserGroupQueueInterfaceStatisticsPassBytes=hwhqosUserGroupQueueInterfaceStatisticsPassBytes, hwhqosFlowQueueShaperEntry=hwhqosFlowQueueShaperEntry, hwhqosServiceIdentifyPolicyTypeRowStatus=hwhqosServiceIdentifyPolicyTypeRowStatus, hwhqosUseridStatDropBytesRate=hwhqosUseridStatDropBytesRate, hwhqosProfileInfoGroup=hwhqosProfileInfoGroup, hwhqosFlowMappingCfgTable=hwhqosFlowMappingCfgTable, hwhqosServiceIdentifyPolicyTypeValue=hwhqosServiceIdentifyPolicyTypeValue, hwhqosPortQueueArithmetic=hwhqosPortQueueArithmetic, hwhqosIfUserQueueStatisticsAclID2=hwhqosIfUserQueueStatisticsAclID2, hwhqosDomainUserMaxSessionGroup=hwhqosDomainUserMaxSessionGroup, hwhqosUseridStatPassPacketsRate=hwhqosUseridStatPassPacketsRate, hwhqosPortQueueInterfaceTrap=hwhqosPortQueueInterfaceTrap, hwhqosUserGroupQueueStatisticsDropPackets=hwhqosUserGroupQueueStatisticsDropPackets, hwhqosUseridStatDirection=hwhqosUseridStatDirection, hwhqosUserQueueStatisticsDropBytesRate=hwhqosUserQueueStatisticsDropBytesRate, hwhqosProfileWeightGroup=hwhqosProfileWeightGroup, hwhqosUserQueueStatisticsDropPackets=hwhqosUserQueueStatisticsDropPackets, hwhqosServiceIdentifyPolicyApplyEntry=hwhqosServiceIdentifyPolicyApplyEntry)
