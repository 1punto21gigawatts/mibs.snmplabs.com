#
# PySNMP MIB module CXUDRV-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CXUDRV-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:33:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
cxUDrv, = mibBuilder.importSymbols("CXProduct-SMI", "cxUDrv")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, TimeTicks, ObjectIdentity, iso, MibIdentifier, Gauge32, Bits, NotificationType, IpAddress, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter64, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "TimeTicks", "ObjectIdentity", "iso", "MibIdentifier", "Gauge32", "Bits", "NotificationType", "IpAddress", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter64", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
udrvTable = MibTable((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 41, 10), )
if mibBuilder.loadTexts: udrvTable.setStatus('mandatory')
if mibBuilder.loadTexts: udrvTable.setDescription('A table containing statistics of the U interface transceiver driver.')
udrvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 41, 10, 1), ).setIndexNames((0, "CXUDRV-MIB", "udrvSlotNumberIndex"))
if mibBuilder.loadTexts: udrvEntry.setStatus('mandatory')
if mibBuilder.loadTexts: udrvEntry.setDescription('The parameters for a specific ISDN U-Interface daughter card.')
udrvSlotNumberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 41, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: udrvSlotNumberIndex.setStatus('mandatory')
if mibBuilder.loadTexts: udrvSlotNumberIndex.setDescription('Indicates the row containing objects for controlling (or monitoring) an I/O card in the CX900. Range of Values: 1-6 Default Value: none')
udrvClearStat = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 41, 10, 1, 20), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: udrvClearStat.setStatus('mandatory')
if mibBuilder.loadTexts: udrvClearStat.setDescription('Clears the statistics counter for this I/O card. Options: clearStats : clears statistics Default value: none')
udrvPortUp = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 41, 10, 1, 21), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: udrvPortUp.setStatus('mandatory')
if mibBuilder.loadTexts: udrvPortUp.setDescription("Brings up the port on this I/O card. Options: portUp: forces port into 'up' state Default Value: none")
udrvPortReset = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 41, 10, 1, 23), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: udrvPortReset.setStatus('mandatory')
if mibBuilder.loadTexts: udrvPortReset.setDescription('Resets the port on this I/O card. Options: portReset: forces port to reset Default Value: none')
udrvPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 41, 10, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("portDown", 1), ("portUp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: udrvPortStatus.setStatus('mandatory')
if mibBuilder.loadTexts: udrvPortStatus.setDescription('Indicates the status of the port on this I/O card. Options: portDown (1): port is down portUp (2): port is up Default Value: none')
udrvFebe = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 41, 10, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udrvFebe.setStatus('mandatory')
if mibBuilder.loadTexts: udrvFebe.setDescription('Indicates the number of far-end block errors received by this I/O card. Range of Values: 0-65, 535 Default Value: none')
udrvNebe = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 41, 10, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udrvNebe.setStatus('mandatory')
if mibBuilder.loadTexts: udrvNebe.setDescription('Indicates the number of near-end block errors received by this I/O card. Range of Values: 0-65, 535 Default Value: none')
udrvActivation = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 41, 10, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udrvActivation.setStatus('mandatory')
if mibBuilder.loadTexts: udrvActivation.setDescription('Indicates the number of activation requests received by this I/O card. Range of Values: 0-4, 294, 967, 295 Default Value: none')
udrvDeactivation = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 41, 10, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udrvDeactivation.setStatus('mandatory')
if mibBuilder.loadTexts: udrvDeactivation.setDescription('Indicates the number of deactivation requests received by this I/O card. Range of Values: 0-4, 294, 967, 295 Default Value: none')
udrvTransition = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 41, 10, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udrvTransition.setStatus('mandatory')
if mibBuilder.loadTexts: udrvTransition.setDescription("Indicates the number of down-to-up or up-to-down transitions that have occurred on this I/O card's port. Range of Values: 0-4, 294, 967, 295 Default Value: none")
mibBuilder.exportSymbols("CXUDRV-MIB", udrvSlotNumberIndex=udrvSlotNumberIndex, udrvPortStatus=udrvPortStatus, udrvTable=udrvTable, udrvEntry=udrvEntry, udrvTransition=udrvTransition, udrvPortReset=udrvPortReset, udrvNebe=udrvNebe, udrvActivation=udrvActivation, udrvClearStat=udrvClearStat, udrvPortUp=udrvPortUp, udrvFebe=udrvFebe, udrvDeactivation=udrvDeactivation)
