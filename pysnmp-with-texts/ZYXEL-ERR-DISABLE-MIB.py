#
# PySNMP MIB module ZYXEL-ERR-DISABLE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-ERR-DISABLE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:49:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64, ModuleIdentity, ObjectIdentity, Bits, Unsigned32, iso, NotificationType, IpAddress, Integer32, Gauge32, MibIdentifier, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64", "ModuleIdentity", "ObjectIdentity", "Bits", "Unsigned32", "iso", "NotificationType", "IpAddress", "Integer32", "Gauge32", "MibIdentifier", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelErrdisable = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24))
if mibBuilder.loadTexts: zyxelErrdisable.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelErrdisable.setOrganization('Enterprise Solution ZyXEL')
if mibBuilder.loadTexts: zyxelErrdisable.setContactInfo('')
if mibBuilder.loadTexts: zyxelErrdisable.setDescription('The subtree for errdisable')
zyxelErrdisableSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 1))
zyxelErrdisableStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 2))
zyxelErrdisableTrapInfoObject = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 3))
zyxelErrdisableNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 4))
zyxelErrdisableRecovery = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 1, 1))
zyErrdisableRecoveryState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 1, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyErrdisableRecoveryState.setStatus('current')
if mibBuilder.loadTexts: zyErrdisableRecoveryState.setDescription('Enable/Disable error disabled port recovery feature on the switch. Some features, such as loop guard, allow the switch to shut down a port when an error is detected on the port. For example, if the switch detects that packets sent out the port(s) loop back to the switch, the switch can shut down the port(s) automatically. After that, you need to enable the port(s) manually. With disabled port recovery, you can set the disabled port(s) to become active again after the time interval you specify.')
zyxelErrdisableRecoveryReasonTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 1, 1, 2), )
if mibBuilder.loadTexts: zyxelErrdisableRecoveryReasonTable.setStatus('current')
if mibBuilder.loadTexts: zyxelErrdisableRecoveryReasonTable.setDescription('The table contains errdisable recovery reason configuration.')
zyxelErrdisableRecoveryReasonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 1, 1, 2, 1), ).setIndexNames((0, "ZYXEL-ERR-DISABLE-MIB", "zyErrdisableRecoveryReasonType"))
if mibBuilder.loadTexts: zyxelErrdisableRecoveryReasonEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelErrdisableRecoveryReasonEntry.setDescription('An entry contains errdisable recovery reason configuration.')
zyErrdisableRecoveryReasonType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("loopguard", 0), ("arp", 1), ("bpdu", 2), ("igmp", 3))))
if mibBuilder.loadTexts: zyErrdisableRecoveryReasonType.setStatus('current')
if mibBuilder.loadTexts: zyErrdisableRecoveryReasonType.setDescription('This entry displays the supported features that allow the switch to shut down a port or discard packets on a port according to the feature requirements and what action you configure.')
zyErrdisableRecoveryReasonState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 1, 1, 2, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyErrdisableRecoveryReasonState.setStatus('current')
if mibBuilder.loadTexts: zyErrdisableRecoveryReasonState.setDescription('Enable/Disable this entry to allow/prohibit the switch to activate a port after the specified time interval, which is shut down by the supported feature.')
zyErrdisableRecoveryReasonInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 2592000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyErrdisableRecoveryReasonInterval.setStatus('current')
if mibBuilder.loadTexts: zyErrdisableRecoveryReasonInterval.setDescription('Enter the number of seconds (from 30 to 2592000) for the switch to wait before enabling the port which was shut down.')
zyxelErrdisableDetect = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 1, 2))
zyxelErrdisableDetectReasonTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 1, 2, 1), )
if mibBuilder.loadTexts: zyxelErrdisableDetectReasonTable.setStatus('current')
if mibBuilder.loadTexts: zyxelErrdisableDetectReasonTable.setDescription('The table contains errdisable detect reason configuration.')
zyxelErrdisableDetectReasonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 1, 2, 1, 1), ).setIndexNames((0, "ZYXEL-ERR-DISABLE-MIB", "zyErrdisableDetectReasonType"))
if mibBuilder.loadTexts: zyxelErrdisableDetectReasonEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelErrdisableDetectReasonEntry.setDescription('An entry contains errdisable detect reason configuration.')
zyErrdisableDetectReasonType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("arp", 1), ("bpdu", 2), ("igmp", 3))))
if mibBuilder.loadTexts: zyErrdisableDetectReasonType.setStatus('current')
if mibBuilder.loadTexts: zyErrdisableDetectReasonType.setDescription('This field displays the type of control packets that may cause CPU overload.')
zyErrdisableDetectReasonState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 1, 2, 1, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyErrdisableDetectReasonState.setStatus('current')
if mibBuilder.loadTexts: zyErrdisableDetectReasonState.setDescription('Enable/Disable the detection on switch to monitor if the configured rate limit for a specific control packet is exceeded and take the mode selected below.')
zyErrdisableDetectReasonMode = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactivePort", 1), ("inactiveReason", 2), ("rateLimitation", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyErrdisableDetectReasonMode.setStatus('current')
if mibBuilder.loadTexts: zyErrdisableDetectReasonMode.setDescription('Select the mode that the switch takes when the number of control packets exceeds the rate limit on a port, set in the CPU protection. inactivePort - The switch disables the port on which the control packets are received. inactiveReason - The switch bypasses the processing of the specified control packets (such as ARP or IGMP packets), or drops all the specified control packets (such as BPDU) on the port. rateLimitation - The switch drops the additional control packets the port has to handle in every one second.')
zyxelErrdisableRecoveryTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 2, 1), )
if mibBuilder.loadTexts: zyxelErrdisableRecoveryTable.setStatus('current')
if mibBuilder.loadTexts: zyxelErrdisableRecoveryTable.setDescription('The table contains errdisable recovery information.')
zyxelErrdisableRecoveryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 2, 1, 1), ).setIndexNames((0, "ZYXEL-ERR-DISABLE-MIB", "zyErrdisableRecoveryType"), (0, "ZYXEL-ERR-DISABLE-MIB", "zyErrdisableRecoveryPort"))
if mibBuilder.loadTexts: zyxelErrdisableRecoveryEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelErrdisableRecoveryEntry.setDescription('An entry contains errdisable recovery information.')
zyErrdisableRecoveryType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("loopguard", 0), ("arp", 1), ("bpdu", 2), ("igmp", 3))))
if mibBuilder.loadTexts: zyErrdisableRecoveryType.setStatus('current')
if mibBuilder.loadTexts: zyErrdisableRecoveryType.setDescription('This field displays the supported features that allow the switch to shut down a port or discard packets on a port according to the feature requirements and what action you configure.')
zyErrdisableRecoveryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 2, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: zyErrdisableRecoveryPort.setStatus('current')
if mibBuilder.loadTexts: zyErrdisableRecoveryPort.setDescription('This field displays which port(s) are shut down or discard packets by above reason.')
zyErrdisableRecoveryTimeToRecover = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 2592000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyErrdisableRecoveryTimeToRecover.setStatus('current')
if mibBuilder.loadTexts: zyErrdisableRecoveryTimeToRecover.setDescription('This field displays how long (seconds) those ports will be re-activated.')
zyErrdisableTrapPort = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyErrdisableTrapPort.setStatus('current')
if mibBuilder.loadTexts: zyErrdisableTrapPort.setDescription('This trap displays error disable detect on which port(s) by reason below.')
zyErrdisableTrapReasonType = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("loopguard", 0), ("arp", 1), ("bpdu", 2), ("igmp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyErrdisableTrapReasonType.setStatus('current')
if mibBuilder.loadTexts: zyErrdisableTrapReasonType.setDescription('This trap displays which port(s) are shut down or discard packets by mode below.')
zyErrdisableTrapMode = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inactivePort", 0), ("inactiveReason", 1), ("rateLimitation", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyErrdisableTrapMode.setStatus('current')
if mibBuilder.loadTexts: zyErrdisableTrapMode.setDescription('This trap displays which error disable mode on this port.')
zyErrdisableDetect = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 4, 1)).setObjects(("ZYXEL-ERR-DISABLE-MIB", "zyErrdisableTrapPort"), ("ZYXEL-ERR-DISABLE-MIB", "zyErrdisableTrapReasonType"), ("ZYXEL-ERR-DISABLE-MIB", "zyErrdisableTrapMode"))
if mibBuilder.loadTexts: zyErrdisableDetect.setStatus('current')
if mibBuilder.loadTexts: zyErrdisableDetect.setDescription('The trap is sent when an error is detected on a port, such as a loop occurs or the rate limit for specific control packets is exceeded.')
zyErrdisableRecovery = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 24, 4, 2)).setObjects(("ZYXEL-ERR-DISABLE-MIB", "zyErrdisableTrapPort"), ("ZYXEL-ERR-DISABLE-MIB", "zyErrdisableTrapReasonType"), ("ZYXEL-ERR-DISABLE-MIB", "zyErrdisableTrapMode"))
if mibBuilder.loadTexts: zyErrdisableRecovery.setStatus('current')
if mibBuilder.loadTexts: zyErrdisableRecovery.setDescription('This trap is sent when the switch ceases the action taken on a port, such as shutting down the port or discarding packets on the port, after the specified recovery interval.')
mibBuilder.exportSymbols("ZYXEL-ERR-DISABLE-MIB", zyxelErrdisableSetup=zyxelErrdisableSetup, zyErrdisableRecoveryReasonInterval=zyErrdisableRecoveryReasonInterval, zyxelErrdisableRecoveryReasonEntry=zyxelErrdisableRecoveryReasonEntry, zyxelErrdisableDetectReasonEntry=zyxelErrdisableDetectReasonEntry, zyxelErrdisableTrapInfoObject=zyxelErrdisableTrapInfoObject, zyxelErrdisableNotifications=zyxelErrdisableNotifications, zyErrdisableTrapMode=zyErrdisableTrapMode, zyxelErrdisableRecoveryEntry=zyxelErrdisableRecoveryEntry, zyErrdisableDetectReasonType=zyErrdisableDetectReasonType, zyErrdisableRecoveryState=zyErrdisableRecoveryState, zyxelErrdisableRecovery=zyxelErrdisableRecovery, zyErrdisableRecoveryReasonType=zyErrdisableRecoveryReasonType, zyxelErrdisableRecoveryReasonTable=zyxelErrdisableRecoveryReasonTable, zyErrdisableDetect=zyErrdisableDetect, zyErrdisableRecoveryType=zyErrdisableRecoveryType, zyxelErrdisableRecoveryTable=zyxelErrdisableRecoveryTable, zyErrdisableRecoveryTimeToRecover=zyErrdisableRecoveryTimeToRecover, zyxelErrdisableStatus=zyxelErrdisableStatus, zyErrdisableTrapReasonType=zyErrdisableTrapReasonType, zyxelErrdisableDetect=zyxelErrdisableDetect, zyxelErrdisableDetectReasonTable=zyxelErrdisableDetectReasonTable, zyErrdisableRecovery=zyErrdisableRecovery, zyxelErrdisable=zyxelErrdisable, PYSNMP_MODULE_ID=zyxelErrdisable, zyErrdisableRecoveryReasonState=zyErrdisableRecoveryReasonState, zyErrdisableDetectReasonState=zyErrdisableDetectReasonState, zyErrdisableTrapPort=zyErrdisableTrapPort, zyErrdisableRecoveryPort=zyErrdisableRecoveryPort, zyErrdisableDetectReasonMode=zyErrdisableDetectReasonMode)
