#
# PySNMP MIB module TPT-NGFW-SYSTEM-INFO-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPT-NGFW-SYSTEM-INFO-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:26:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Counter32, IpAddress, MibIdentifier, NotificationType, Gauge32, TimeTicks, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter64, Unsigned32, Bits, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "IpAddress", "MibIdentifier", "NotificationType", "Gauge32", "TimeTicks", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter64", "Unsigned32", "Bits", "ObjectIdentity")
DateAndTime, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TruthValue", "TextualConvention", "DisplayString")
tpt_ngfw_eventsV2, tptNgfwNotifySeverity, tpt_ngfw_groups, tpt_ngfw_compls, tpt_ngfw_objs = mibBuilder.importSymbols("TPT-NGFW-REG-MIB", "tpt-ngfw-eventsV2", "tptNgfwNotifySeverity", "tpt-ngfw-groups", "tpt-ngfw-compls", "tpt-ngfw-objs")
tptNgfwSystemInfo = ModuleIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 1))
tptNgfwSystemInfo.setRevisions(('2016-05-25 18:54', '2013-01-03 17:39',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: tptNgfwSystemInfo.setRevisionsDescriptions(('Updated copyright information. Minor MIB syntax fixes.', 'Initial version of NGFW System MIB.',))
if mibBuilder.loadTexts: tptNgfwSystemInfo.setLastUpdated('201605251854Z')
if mibBuilder.loadTexts: tptNgfwSystemInfo.setOrganization('Trend Micro, Inc.')
if mibBuilder.loadTexts: tptNgfwSystemInfo.setContactInfo('www.trendmicro.com')
if mibBuilder.loadTexts: tptNgfwSystemInfo.setDescription(" Hardware and system software version and runtime information for TippingPoint Next-Generation Firewall products. Copyright (C) 2016 Trend Micro Incorporated. All Rights Reserved. Trend Micro makes no warranty of any kind with regard to this material, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose. Trend Micro shall not be liable for errors contained herein or for incidental or consequential damages in connection with the furnishing, performance, or use of this material. This document contains proprietary information, which is protected by copyright. No part of this document may be photocopied, reproduced, or translated into another language without the prior written consent of Trend Micro. The information is provided 'as is' without warranty of any kind and is subject to change without notice. The only warranties for Trend Micro products and services are set forth in the express warranty statements accompanying such products and services. Nothing herein should be construed as constituting an additional warranty. Trend Micro shall not be liable for technical or editorial errors or omissions contained herein. TippingPoint(R), the TippingPoint logo, and Digital Vaccine(R) are registered trademarks of Trend Micro. All other company and product names may be trademarks of their respective holders. All rights reserved. This document contains confidential information, trade secrets or both, which are the property of Trend Micro. No part of this documentation may be reproduced in any form or by any means or used to make any derivative work (such as translation, transformation, or adaptation) without written permission from Trend Micro or one of its subsidiaries. All other company and product names may be trademarks of their respective holders. ")
class FipsState(TextualConvention, Integer32):
    description = 'The state of FIPS (140-2) encryption (disabled, crypto, or full).'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("disabled", 1), ("crypto", 2), ("full", 3))

class BuildType(TextualConvention, Integer32):
    description = ' The type of build installed and running (production, or development). '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("production", 1), ("development", 2))

tptNgfwSystemSerial = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptNgfwSystemSerial.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemSerial.setDescription('The installed software serial number.')
tptNgfwSystemSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptNgfwSystemSoftwareVersion.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemSoftwareVersion.setDescription('The installed software version.')
tptNgfwSystemBuildDate = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptNgfwSystemBuildDate.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemBuildDate.setDescription('The software build date & time.')
tptNgfwSystemBuildType = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 1, 4), BuildType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptNgfwSystemBuildType.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemBuildType.setDescription(" The software build type (production, or development). If a development build, the revision object is populated with the source code revision otherwise it's not provided. ")
tptNgfwSystemBuildRevision = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptNgfwSystemBuildRevision.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemBuildRevision.setDescription(" The software build revision. This object reports the source code revision of the development build that's installed and running. This object is empty if a production build is installed. ")
tptNgfwSystemDigitalVaccineVersion = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptNgfwSystemDigitalVaccineVersion.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemDigitalVaccineVersion.setDescription('The installed Digital Vaccine version.')
tptNgfwSystemModel = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptNgfwSystemModel.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemModel.setDescription('The model number.')
tptNgfwSystemHardwareSerial = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptNgfwSystemHardwareSerial.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemHardwareSerial.setDescription('The hardware serial number.')
tptNgfwSystemHardwareRevision = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptNgfwSystemHardwareRevision.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemHardwareRevision.setDescription('The hardware revision.')
tptNgfwSystemFailsafeVersion = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptNgfwSystemFailsafeVersion.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemFailsafeVersion.setDescription('The fail-safe boot image version.')
tptNgfwSystemBootTime = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptNgfwSystemBootTime.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemBootTime.setDescription('The local date and time when the device was powered on.')
tptNgfwSystemUpTime = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptNgfwSystemUpTime.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemUpTime.setDescription('The time (in 100th/second) since the system was powered on.')
tptNgfwSystemSmsManaged = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptNgfwSystemSmsManaged.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemSmsManaged.setDescription(' Indicates if this device is under SMS management control. This object is set to true when the device is under SMS control, false otherwise. ')
tptNgfwSystemSmsIpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 1, 14), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptNgfwSystemSmsIpAddressType.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemSmsIpAddressType.setDescription('The SMS IP address type.')
tptNgfwSystemSmsIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 1, 15), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptNgfwSystemSmsIpAddress.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemSmsIpAddress.setDescription(' The SMS IP address that is managing this device. Only set if SMS is managing the device. ')
tptNgfwSystemFipsAdminState = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 1, 16), FipsState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptNgfwSystemFipsAdminState.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemFipsAdminState.setDescription(' The administrative state of FIPS (140-2) encryption (disabled, crypto, or full) ')
tptNgfwSystemFipsOperState = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 1, 17), FipsState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptNgfwSystemFipsOperState.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemFipsOperState.setDescription(' The operational state of FIPS (140-2) encryption (disabled, crypto, or full.) ')
tptNgfwSystemMasterKeySet = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptNgfwSystemMasterKeySet.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemMasterKeySet.setDescription(' Indicates if a master key (or password) has been set for the device. The value is true when a master key is set (configured), false otherwise. ')
tptNgfwSystemReadyNotify = NotificationType((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 0, 11)).setObjects(("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemSerial"), ("TPT-NGFW-REG-MIB", "tptNgfwNotifySeverity"))
if mibBuilder.loadTexts: tptNgfwSystemReadyNotify.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemReadyNotify.setDescription('A notification that the system has achieved the system ready state. ')
tptNgfwSystemShutdownNotify = NotificationType((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 0, 12)).setObjects(("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemSerial"), ("TPT-NGFW-REG-MIB", "tptNgfwNotifySeverity"))
if mibBuilder.loadTexts: tptNgfwSystemShutdownNotify.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemShutdownNotify.setDescription('A notification that the system is performing a controlled shutdown or reboot. ')
tptNgfwSystemSmsNotAuthNotify = NotificationType((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 0, 13)).setObjects(("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemSerial"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemSmsIpAddressType"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemSmsIpAddress"), ("TPT-NGFW-REG-MIB", "tptNgfwNotifySeverity"))
if mibBuilder.loadTexts: tptNgfwSystemSmsNotAuthNotify.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemSmsNotAuthNotify.setDescription('A notification that a management station was denied control of the system because it did not have an authorized IP address. Notification includes the IP address of the management station that attempted control. ')
tptNgfwSystemInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 10734, 3, 9, 1, 1, 1)).setObjects(("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemSerial"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemSoftwareVersion"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemBuildDate"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemBuildType"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemBuildRevision"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemDigitalVaccineVersion"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemModel"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemHardwareSerial"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemHardwareRevision"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemFailsafeVersion"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemBootTime"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemUpTime"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemSmsManaged"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemSmsIpAddressType"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemSmsIpAddress"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemFipsAdminState"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemFipsOperState"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemMasterKeySet"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tptNgfwSystemInfoGroup = tptNgfwSystemInfoGroup.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemInfoGroup.setDescription(' System group for Next-generation Firewall products consisting of hardware and software version information. ')
tptNgfwSystemNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 10734, 3, 9, 1, 1, 9)).setObjects(("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemReadyNotify"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemShutdownNotify"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemSmsNotAuthNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tptNgfwSystemNotificationGroup = tptNgfwSystemNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemNotificationGroup.setDescription('A group of notifications related to NGFW system status. ')
tptNgfwSystemInfoCompl = ModuleCompliance((1, 3, 6, 1, 4, 1, 10734, 3, 9, 1, 2, 1)).setObjects(("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemInfoGroup"), ("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tptNgfwSystemInfoCompl = tptNgfwSystemInfoCompl.setStatus('current')
if mibBuilder.loadTexts: tptNgfwSystemInfoCompl.setDescription('Compliance for TippingPoint Next-generation Firewall products.')
mibBuilder.exportSymbols("TPT-NGFW-SYSTEM-INFO-MIB", tptNgfwSystemReadyNotify=tptNgfwSystemReadyNotify, tptNgfwSystemInfoGroup=tptNgfwSystemInfoGroup, tptNgfwSystemSmsNotAuthNotify=tptNgfwSystemSmsNotAuthNotify, tptNgfwSystemUpTime=tptNgfwSystemUpTime, tptNgfwSystemSmsIpAddress=tptNgfwSystemSmsIpAddress, tptNgfwSystemSerial=tptNgfwSystemSerial, tptNgfwSystemHardwareRevision=tptNgfwSystemHardwareRevision, tptNgfwSystemBuildType=tptNgfwSystemBuildType, tptNgfwSystemFipsOperState=tptNgfwSystemFipsOperState, BuildType=BuildType, tptNgfwSystemShutdownNotify=tptNgfwSystemShutdownNotify, PYSNMP_MODULE_ID=tptNgfwSystemInfo, tptNgfwSystemNotificationGroup=tptNgfwSystemNotificationGroup, tptNgfwSystemHardwareSerial=tptNgfwSystemHardwareSerial, tptNgfwSystemFailsafeVersion=tptNgfwSystemFailsafeVersion, FipsState=FipsState, tptNgfwSystemSoftwareVersion=tptNgfwSystemSoftwareVersion, tptNgfwSystemFipsAdminState=tptNgfwSystemFipsAdminState, tptNgfwSystemModel=tptNgfwSystemModel, tptNgfwSystemInfoCompl=tptNgfwSystemInfoCompl, tptNgfwSystemSmsManaged=tptNgfwSystemSmsManaged, tptNgfwSystemInfo=tptNgfwSystemInfo, tptNgfwSystemSmsIpAddressType=tptNgfwSystemSmsIpAddressType, tptNgfwSystemDigitalVaccineVersion=tptNgfwSystemDigitalVaccineVersion, tptNgfwSystemBootTime=tptNgfwSystemBootTime, tptNgfwSystemBuildRevision=tptNgfwSystemBuildRevision, tptNgfwSystemBuildDate=tptNgfwSystemBuildDate, tptNgfwSystemMasterKeySet=tptNgfwSystemMasterKeySet)
