#
# PySNMP MIB module A3COM-HUAWEI-EVC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-EVC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:04:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cCommon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cCommon")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, IpAddress, iso, ObjectIdentity, NotificationType, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Unsigned32, ModuleIdentity, Counter64, Integer32, TimeTicks, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "IpAddress", "iso", "ObjectIdentity", "NotificationType", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Unsigned32", "ModuleIdentity", "Counter64", "Integer32", "TimeTicks", "MibIdentifier")
RowStatus, DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention", "TruthValue")
h3cEvc = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106))
h3cEvc.setRevisions(('2009-08-08 10:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: h3cEvc.setRevisionsDescriptions(('The initial version of this MIB.',))
if mibBuilder.loadTexts: h3cEvc.setLastUpdated('200908081000Z')
if mibBuilder.loadTexts: h3cEvc.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
if mibBuilder.loadTexts: h3cEvc.setContactInfo('Platform Team Hangzhou H3C Tech. Co., Ltd. Hai-Dian District Beijing P.R. China http://www.h3c.com Zip:100085')
if mibBuilder.loadTexts: h3cEvc.setDescription('Ethernet Virtual Connection MIB')
h3cEvcObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1))
h3cEvcScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 1))
h3cEvcSrvInstEncapCapabilities = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 1, 1), Bits().clone(namedValues=NamedValues(("encapPortBased", 0), ("encapUntagged", 1), ("encapTagged", 2), ("encapSvlanId", 3), ("encapSvlanIdList", 4), ("encapSvlanIdOnlyTagged", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cEvcSrvInstEncapCapabilities.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstEncapCapabilities.setDescription('This object displays the encapsulation capabilities of service instance with respect to certain fields. The following values may be supported: encapPortBased: Support for matching packets by port. encapUntagged: Support for matching untagged packets. encapTagged: Support for matching all tagged packets. encapSvlanId: Support for matching packets by a SVLAN ID, and the packets may be untagged if PVID of the port is the SVLAN ID when the encapSvlanIdOnlyTagged field is not set. encapSvlanIdList: Support for matching packets by SVLAN ID list, and the packets may be untagged if PVID of the port is in SVLAN ID list when the encapSvlanIdOnlyTagged field is not set. encapSvlanIdOnlyTagged: encapSvlanId or encapSvlanId field indicates to support for matching only tagged packets when this field is set.')
h3cEvcPortMaxSrvInstNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cEvcPortMaxSrvInstNum.setStatus('current')
if mibBuilder.loadTexts: h3cEvcPortMaxSrvInstNum.setDescription('The max service instance number of a port.')
h3cEvcSrvInstTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 2), )
if mibBuilder.loadTexts: h3cEvcSrvInstTable.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstTable.setDescription('A table for configuring service instance parameter of the port.')
h3cEvcSrvInstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "A3COM-HUAWEI-EVC-MIB", "h3cEvcSrvInstId"))
if mibBuilder.loadTexts: h3cEvcSrvInstEntry.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstEntry.setDescription('An entry for configuring service instance parameter of the port.')
h3cEvcSrvInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: h3cEvcSrvInstId.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstId.setDescription('Service instance ID. Its value ranges from 1 to the value of h3cEvcPortMaxSrvInstNum.')
h3cEvcSrvInstEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 0), ("portBased", 1), ("untagged", 2), ("tagged", 3), ("svlanIdList", 4), ("svlanIdListOnlyTagged", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cEvcSrvInstEncap.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstEncap.setDescription('Encapsulation mode of a service instance. none : Invalid value. portBased : Match packets by port. It is supported when encapPortBased field of h3cEvcCapabilities is set. untagged : Match untagged packets. It is supported when encapUntagged field of h3cEvcCapabilities is set. tagged : Match all tagged packets. It is supported when encapTagged field of h3cEvcCapabilities is set. svlanIdList: Match packets by SVLAN ID list and untagged packets if PVID of the port is in SVLAN ID list, the SVLAN ID list is denoted by h3cEvcSrvInstSvlanIdListLow and h3cEvcSrvInstSvlanIdListLow. It is supported when encapSvlanId or encapSvlanIdList field of h3cEvcCapabilities is set. Only a VLAN ID is supported when encapSvlanId field of h3cEvcCapabilities is set. svlanIdListOnlyTagged: Match only tagged packets by SVLAN ID list, the SVLAN ID is denoted by h3cEvcSrvInstSvlanIdListLow and h3cEvcSrvInstSvlanIdListLow. It is supported when encapSvlanId (or encapSvlanIdList) and encapSvlanIdOnlyTagged fields of h3cEvcCapabilities are set. Only a VLAN ID is supported when encapSvlanId and encapSvlanIdOnlyTagged field of h3cEvcCapabilities are set.')
h3cEvcSrvInstSvlanIdListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cEvcSrvInstSvlanIdListLow.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstSvlanIdListLow.setDescription('This object contains the first 2048 bits of the 4096 bit vector indicating which SVLAN IDs are assigned to this service instance. The lowest order bit of the first octet corresponds to SVLAN 1, while the highest order bit of the last octet corresponds to SVLAN 2048. A bit that is on (equal to 1) indicates that the corresponding SVLAN ID is assigned to this service instance.')
h3cEvcSrvInstSvlanIdListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cEvcSrvInstSvlanIdListHigh.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstSvlanIdListHigh.setDescription('This object contains the second 2048 bits of the 4096 bit vector indicating which SVLAN IDs are assigned to this service instance. The lowest order bit of the first octet corresponds to SVLAN 2049, while the third highest order bit of the last octet corresponds to SVLAN 4094. A bit that is on (equal to 1) indicates that the corresponding SVLAN ID is assigned to this service instance.')
h3cEvcSrvInstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cEvcSrvInstRowStatus.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstRowStatus.setDescription('Operation status of this table entry.')
h3cEvcSrvInstEnableInStat = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 2, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cEvcSrvInstEnableInStat.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstEnableInStat.setDescription('The object is used to configure inbound statistics function to this service instance.')
h3cEvcSrvInstEnableOutStat = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 2, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cEvcSrvInstEnableOutStat.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstEnableOutStat.setDescription('The object is used to configure outbound statistics function to this service instance.')
h3cEvcSrvInstCarTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 3), )
if mibBuilder.loadTexts: h3cEvcSrvInstCarTable.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstCarTable.setDescription('A table of configuring CAR for the service instance.')
h3cEvcSrvInstCarEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "A3COM-HUAWEI-EVC-MIB", "h3cEvcSrvInstId"))
if mibBuilder.loadTexts: h3cEvcSrvInstCarEntry.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstCarEntry.setDescription('An entry in the table containing CAR configuration on the service instance. If the following entries are not supported by the service instance, or not configured to the service instance, they are zero.')
h3cEvcSrvInstInCarIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 3, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cEvcSrvInstInCarIndex.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstInCarIndex.setDescription('The object is used to configure inbound CAR function to this service instance. The CAR index is defined in h3cIfQoSAggregativeCarIndex at A3COM-HUAWEI-IFQOS2-MIB. The default value is 0.')
h3cEvcSrvInstOutCarIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cEvcSrvInstOutCarIndex.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstOutCarIndex.setDescription('The object is used to configure outbound CAR function to this service instance. The CAR index is defined in h3cIfQoSAggregativeCarIndex at A3COM-HUAWEI-IFQOS2-MIB. The default value is 0.')
h3cEvcSrvInstStatInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 4), )
if mibBuilder.loadTexts: h3cEvcSrvInstStatInfoTable.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstStatInfoTable.setDescription('A table for displaying statistics information of service instance.')
h3cEvcSrvInstStatInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "A3COM-HUAWEI-EVC-MIB", "h3cEvcSrvInstId"))
if mibBuilder.loadTexts: h3cEvcSrvInstStatInfoEntry.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstStatInfoEntry.setDescription('Table entry of the service instance. If the statistics function is not supported by the service instance, or not configured to the service instance, following entries will be zero.')
h3cEvcSrvInstInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 4, 1, 1), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cEvcSrvInstInPackets.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstInPackets.setDescription('Number of inbound packets received on this service instance.')
h3cEvcSrvInstInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 4, 1, 2), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cEvcSrvInstInBytes.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstInBytes.setDescription('Byte counts of inbound packets received on this service instance.')
h3cEvcSrvInstOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 4, 1, 3), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cEvcSrvInstOutPackets.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstOutPackets.setDescription('Number of outbound packets transmitted on this service instance.')
h3cEvcSrvInstOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 106, 1, 4, 1, 4), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cEvcSrvInstOutBytes.setStatus('current')
if mibBuilder.loadTexts: h3cEvcSrvInstOutBytes.setDescription('Byte counts of outbound packets transmitted on this service instance.')
mibBuilder.exportSymbols("A3COM-HUAWEI-EVC-MIB", h3cEvcSrvInstOutBytes=h3cEvcSrvInstOutBytes, h3cEvcSrvInstStatInfoEntry=h3cEvcSrvInstStatInfoEntry, h3cEvcSrvInstStatInfoTable=h3cEvcSrvInstStatInfoTable, h3cEvcPortMaxSrvInstNum=h3cEvcPortMaxSrvInstNum, h3cEvcSrvInstEncap=h3cEvcSrvInstEncap, h3cEvcSrvInstCarTable=h3cEvcSrvInstCarTable, h3cEvcScalarGroup=h3cEvcScalarGroup, h3cEvcSrvInstInPackets=h3cEvcSrvInstInPackets, h3cEvc=h3cEvc, h3cEvcSrvInstInBytes=h3cEvcSrvInstInBytes, h3cEvcSrvInstSvlanIdListLow=h3cEvcSrvInstSvlanIdListLow, h3cEvcSrvInstInCarIndex=h3cEvcSrvInstInCarIndex, h3cEvcSrvInstEncapCapabilities=h3cEvcSrvInstEncapCapabilities, h3cEvcSrvInstCarEntry=h3cEvcSrvInstCarEntry, h3cEvcSrvInstOutPackets=h3cEvcSrvInstOutPackets, h3cEvcSrvInstId=h3cEvcSrvInstId, h3cEvcSrvInstSvlanIdListHigh=h3cEvcSrvInstSvlanIdListHigh, h3cEvcSrvInstEnableOutStat=h3cEvcSrvInstEnableOutStat, h3cEvcObjects=h3cEvcObjects, h3cEvcSrvInstEntry=h3cEvcSrvInstEntry, h3cEvcSrvInstOutCarIndex=h3cEvcSrvInstOutCarIndex, PYSNMP_MODULE_ID=h3cEvc, h3cEvcSrvInstEnableInStat=h3cEvcSrvInstEnableInStat, h3cEvcSrvInstTable=h3cEvcSrvInstTable, h3cEvcSrvInstRowStatus=h3cEvcSrvInstRowStatus)
