#
# PySNMP MIB module INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:55:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
enterprises, MibIdentifier, Counter64, NotificationType, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, TimeTicks, Bits, iso, Unsigned32, IpAddress, Integer32, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "MibIdentifier", "Counter64", "NotificationType", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "TimeTicks", "Bits", "iso", "Unsigned32", "IpAddress", "Integer32", "ModuleIdentity", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class DmiInteger(Integer32):
    pass

class DmiDisplaystring(DisplayString):
    pass

class DmiDateX(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(28, 28)
    fixedLength = 28

class DmiComponentIndex(Integer32):
    pass

intel = MibIdentifier((1, 3, 6, 1, 4, 1, 343))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2))
server_products = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2, 6)).setLabel("server-products")
dmtfGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2, 6, 7))
tNameTable = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 5), )
if mibBuilder.loadTexts: tNameTable.setStatus('mandatory')
if mibBuilder.loadTexts: tNameTable.setDescription('Maps a component Name to a MIF ID')
eNameTable = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 5, 1), ).setIndexNames((0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB", "DmiComponentIndex"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB", "a2MifId"))
if mibBuilder.loadTexts: eNameTable.setStatus('mandatory')
if mibBuilder.loadTexts: eNameTable.setDescription('')
a2MifId = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 99))).clone(namedValues=NamedValues(("vUnknown", 0), ("vBaseboard", 1), ("vAdaptecScsi", 2), ("vMylexRaid", 3), ("vNic", 4), ("vUps", 5), ("vSymbiosSdms", 6), ("vAmiRaid", 7), ("vMylexGamRaid", 8), ("vAdaptecCioScsi", 9), ("vSymbiosScsi", 10), ("vIntelNic", 11), ("vTestmif", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2MifId.setStatus('mandatory')
if mibBuilder.loadTexts: a2MifId.setDescription('The MIF Id that corresponds to the component Name. This is used further in Action Table')
a2ComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 5, 1, 2), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2ComponentName.setStatus('mandatory')
if mibBuilder.loadTexts: a2ComponentName.setDescription('The component Name that will be matched to a MIF Id')
tActionsTable = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6), )
if mibBuilder.loadTexts: tActionsTable.setStatus('mandatory')
if mibBuilder.loadTexts: tActionsTable.setDescription('LRA Event Response Configuration')
eActionsTable = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6, 1), ).setIndexNames((0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB", "DmiComponentIndex"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB", "a4RelatedMif"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB", "a4Group"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB", "a4Instance"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB", "a4Attribute"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB", "a4Value"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB", "a4Severity"))
if mibBuilder.loadTexts: eActionsTable.setStatus('mandatory')
if mibBuilder.loadTexts: eActionsTable.setDescription('')
a4RelatedMif = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 99))).clone(namedValues=NamedValues(("vUnknown", 0), ("vBaseboard", 1), ("vAdaptecScsi", 2), ("vMylexRaid", 3), ("vNic", 4), ("vUps", 5), ("vSymbiosSdms", 6), ("vAmiRaid", 7), ("vMylexGamRaid", 8), ("vAdaptecCioScsi", 9), ("vSymbiosScsi", 10), ("vIntelNic", 11), ("vTestmif", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4RelatedMif.setStatus('mandatory')
if mibBuilder.loadTexts: a4RelatedMif.setDescription('This field identifies that the row in this group corresponds to BASEBOARD MIF or something else. This is for a future expansion.')
a4Group = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6, 1, 2), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4Group.setStatus('mandatory')
if mibBuilder.loadTexts: a4Group.setDescription('This is the Group ID that caused the error.')
a4Instance = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6, 1, 3), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4Instance.setStatus('mandatory')
if mibBuilder.loadTexts: a4Instance.setDescription('The Row in the Group that caused the error.')
a4Attribute = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6, 1, 4), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4Attribute.setStatus('mandatory')
if mibBuilder.loadTexts: a4Attribute.setDescription('The Attribute ID (within the Group) that caused the error')
a4Value = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6, 1, 5), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4Value.setStatus('mandatory')
if mibBuilder.loadTexts: a4Value.setDescription('The value of the attribute causing the error')
a4Severity = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6, 1, 6), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4Severity.setStatus('mandatory')
if mibBuilder.loadTexts: a4Severity.setDescription('The value of the Error Status attribute from the Error Control Group')
a4BeepSpeaker = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6, 1, 7), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4BeepSpeaker.setStatus('mandatory')
if mibBuilder.loadTexts: a4BeepSpeaker.setDescription('Beep the Speaker on the local Server')
a4DisplayAlertMessageOnConsole = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6, 1, 8), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4DisplayAlertMessageOnConsole.setStatus('mandatory')
if mibBuilder.loadTexts: a4DisplayAlertMessageOnConsole.setDescription('Write a Text message on the local server console')
a4LogToDisk = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6, 1, 9), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4LogToDisk.setStatus('mandatory')
if mibBuilder.loadTexts: a4LogToDisk.setDescription('Log a message into standard system log')
a4WriteToLcd = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6, 1, 10), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4WriteToLcd.setStatus('mandatory')
if mibBuilder.loadTexts: a4WriteToLcd.setDescription('Write a text message to LCD display on local server')
a4ShutdownTheOs = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6, 1, 11), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4ShutdownTheOs.setStatus('mandatory')
if mibBuilder.loadTexts: a4ShutdownTheOs.setDescription('Shutdown the Operating System')
a4ShutdownAndPowerOffTheSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6, 1, 12), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4ShutdownAndPowerOffTheSystem.setStatus('mandatory')
if mibBuilder.loadTexts: a4ShutdownAndPowerOffTheSystem.setDescription('Shutdown the Operating System and then Power Off the machine')
a4ShutdownAndResetTheSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6, 1, 13), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4ShutdownAndResetTheSystem.setStatus('mandatory')
if mibBuilder.loadTexts: a4ShutdownAndResetTheSystem.setDescription('Shutdown the Operating System and then do a Hardware Reset')
a4ImmediatePowerOff = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6, 1, 14), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4ImmediatePowerOff.setStatus('mandatory')
if mibBuilder.loadTexts: a4ImmediatePowerOff.setDescription('Do an immediate Power Off. No attempt is made to shutdown the OS. Data may be lost')
a4ImmediateReset = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6, 1, 15), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4ImmediateReset.setStatus('mandatory')
if mibBuilder.loadTexts: a4ImmediateReset.setDescription('Do a hardware reset. No attempt is made to shutdown the OS. Data may be lost')
a4BroadcastMessageOnNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6, 1, 16), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4BroadcastMessageOnNetwork.setStatus('mandatory')
if mibBuilder.loadTexts: a4BroadcastMessageOnNetwork.setDescription('Broadcast a message on Network. On NetWare, this will be to Supervisor/Admin. On Windows NT, this will be to everyone in domain. ')
a4AmsAlertName = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6, 1, 17), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4AmsAlertName.setStatus('mandatory')
if mibBuilder.loadTexts: a4AmsAlertName.setDescription('Name of the AMS Alert that will be generated')
a4Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 6, 1, 30), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4Enabled.setStatus('mandatory')
if mibBuilder.loadTexts: a4Enabled.setDescription('The Flag indicating if the actions are enabled')
tActionsTableForStandardIndications = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7), )
if mibBuilder.loadTexts: tActionsTableForStandardIndications.setStatus('mandatory')
if mibBuilder.loadTexts: tActionsTableForStandardIndications.setDescription('LRA Event Response Configuration')
eActionsTableForStandardIndications = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1), ).setIndexNames((0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB", "DmiComponentIndex"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB", "a10RelatedMif"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB", "a10EventGenerationGroup"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB", "a10EventType"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB", "a10Instance"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB", "a10Reserved"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB", "a10Severity"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB", "a10EventSystem"), (0, "INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB", "a10EventSub-system"))
if mibBuilder.loadTexts: eActionsTableForStandardIndications.setStatus('mandatory')
if mibBuilder.loadTexts: eActionsTableForStandardIndications.setDescription('')
a10RelatedMif = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 99))).clone(namedValues=NamedValues(("vUnknown", 0), ("vBaseboard", 1), ("vAdaptecScsi", 2), ("vMylexRaid", 3), ("vNic", 4), ("vUps", 5), ("vSymbiosSdms", 6), ("vAmiRaid", 7), ("vMylexGamRaid", 8), ("vAdaptecCioScsi", 9), ("vSymbiosScsi", 10), ("vIntelNic", 11), ("vTestmif", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a10RelatedMif.setStatus('mandatory')
if mibBuilder.loadTexts: a10RelatedMif.setDescription('This field identifies that the row in this group corresponds to BASEBOARD MIF or something else. ')
a10EventGenerationGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 2), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a10EventGenerationGroup.setStatus('mandatory')
if mibBuilder.loadTexts: a10EventGenerationGroup.setDescription('This is the Group ID of the Event generation Group sending the indication.')
a10EventType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 3), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a10EventType.setStatus('mandatory')
if mibBuilder.loadTexts: a10EventType.setDescription('This is the ID number for the reported event in the enumeration list of possible events.')
a10Instance = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 4), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a10Instance.setStatus('mandatory')
if mibBuilder.loadTexts: a10Instance.setDescription('The Row in the Group that caused the error.')
a10Reserved = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 5), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a10Reserved.setStatus('mandatory')
if mibBuilder.loadTexts: a10Reserved.setDescription('This attribute is reserved for future use. ')
a10Severity = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 6), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a10Severity.setStatus('mandatory')
if mibBuilder.loadTexts: a10Severity.setDescription('The severity of the Error ')
a10BeepSpeaker = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 7), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10BeepSpeaker.setStatus('mandatory')
if mibBuilder.loadTexts: a10BeepSpeaker.setDescription('Beep the Speaker on the local Server')
a10DisplayAlertMessageOnConsole = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 8), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10DisplayAlertMessageOnConsole.setStatus('mandatory')
if mibBuilder.loadTexts: a10DisplayAlertMessageOnConsole.setDescription('Write a Text message on the local server console')
a10LogToDisk = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 9), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10LogToDisk.setStatus('mandatory')
if mibBuilder.loadTexts: a10LogToDisk.setDescription('Log a message into standard system log')
a10WriteToLcd = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 10), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10WriteToLcd.setStatus('mandatory')
if mibBuilder.loadTexts: a10WriteToLcd.setDescription('Write a text message to LCD display on local server')
a10ShutdownTheOs = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 11), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10ShutdownTheOs.setStatus('mandatory')
if mibBuilder.loadTexts: a10ShutdownTheOs.setDescription('Shutdown the Operating System')
a10ShutdownAndPowerOffTheSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 12), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10ShutdownAndPowerOffTheSystem.setStatus('mandatory')
if mibBuilder.loadTexts: a10ShutdownAndPowerOffTheSystem.setDescription('Shutdown the Operating System and then Power Off the machine')
a10ShutdownAndResetTheSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 13), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10ShutdownAndResetTheSystem.setStatus('mandatory')
if mibBuilder.loadTexts: a10ShutdownAndResetTheSystem.setDescription('Shutdown the Operating System and then do a Hardware Reset')
a10ImmediatePowerOff = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 14), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10ImmediatePowerOff.setStatus('mandatory')
if mibBuilder.loadTexts: a10ImmediatePowerOff.setDescription('Do an immediate Power Off. No attempt is made to shutdown the OS. Data may be lost')
a10ImmediateReset = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 15), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10ImmediateReset.setStatus('mandatory')
if mibBuilder.loadTexts: a10ImmediateReset.setDescription('Do a hardware reset. No attempt is made to shutdown the OS. Data may be lost')
a10BroadcastMessageOnNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 16), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10BroadcastMessageOnNetwork.setStatus('mandatory')
if mibBuilder.loadTexts: a10BroadcastMessageOnNetwork.setDescription('Broadcast a message on Network. On NetWare, this will be to Supervisor/Admin. On Windows NT, this will be to everyone in domain. ')
a10AmsAlertName = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 17), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a10AmsAlertName.setStatus('mandatory')
if mibBuilder.loadTexts: a10AmsAlertName.setDescription('Name of the AMS Alert that will be generated')
a10ImmediateNmi = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 18), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10ImmediateNmi.setStatus('mandatory')
if mibBuilder.loadTexts: a10ImmediateNmi.setDescription('Issue a hardware NMI (Non-Maskable Interrupt) to the system.On certain Operating Systems, this will cause a system crash dump. ')
a10Page = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 19), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10Page.setStatus('mandatory')
if mibBuilder.loadTexts: a10Page.setDescription('Issue a page request')
a10Email = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 20), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10Email.setStatus('mandatory')
if mibBuilder.loadTexts: a10Email.setDescription('Send an e-mail Alert')
a10Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 30), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a10Enabled.setStatus('mandatory')
if mibBuilder.loadTexts: a10Enabled.setDescription('The Flag indicating if the actions are enabled')
a10EventSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 31), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a10EventSystem.setStatus('mandatory')
if mibBuilder.loadTexts: a10EventSystem.setDescription('The value of Event System attribute in the indication ')
a10EventSub_system = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 6, 7, 7, 1, 32), DmiInteger()).setLabel("a10EventSub-system").setMaxAccess("readonly")
if mibBuilder.loadTexts: a10EventSub_system.setStatus('mandatory')
if mibBuilder.loadTexts: a10EventSub_system.setDescription('The value of Event Sub-System attribute in the indication ')
mibBuilder.exportSymbols("INTELLANDESKSERVERMANAGER-LOCALRESPONSEAMAPPER-MIB", a4Value=a4Value, a10BroadcastMessageOnNetwork=a10BroadcastMessageOnNetwork, eActionsTableForStandardIndications=eActionsTableForStandardIndications, intel=intel, a10ShutdownAndPowerOffTheSystem=a10ShutdownAndPowerOffTheSystem, a4Severity=a4Severity, a10Instance=a10Instance, a4ImmediateReset=a4ImmediateReset, server_products=server_products, a4RelatedMif=a4RelatedMif, a2ComponentName=a2ComponentName, a4BeepSpeaker=a4BeepSpeaker, a4BroadcastMessageOnNetwork=a4BroadcastMessageOnNetwork, a10ImmediatePowerOff=a10ImmediatePowerOff, a10DisplayAlertMessageOnConsole=a10DisplayAlertMessageOnConsole, a10Severity=a10Severity, a10Page=a10Page, a10EventSystem=a10EventSystem, a4ShutdownAndPowerOffTheSystem=a4ShutdownAndPowerOffTheSystem, a4Enabled=a4Enabled, a4WriteToLcd=a4WriteToLcd, a10EventType=a10EventType, a4DisplayAlertMessageOnConsole=a4DisplayAlertMessageOnConsole, a10AmsAlertName=a10AmsAlertName, a10BeepSpeaker=a10BeepSpeaker, a10Email=a10Email, a10EventGenerationGroup=a10EventGenerationGroup, a10ShutdownAndResetTheSystem=a10ShutdownAndResetTheSystem, dmtfGroups=dmtfGroups, DmiDateX=DmiDateX, DmiInteger=DmiInteger, a4Group=a4Group, eActionsTable=eActionsTable, tActionsTableForStandardIndications=tActionsTableForStandardIndications, a10LogToDisk=a10LogToDisk, a4ShutdownAndResetTheSystem=a4ShutdownAndResetTheSystem, a4ImmediatePowerOff=a4ImmediatePowerOff, a10EventSub_system=a10EventSub_system, a4Instance=a4Instance, a10ImmediateNmi=a10ImmediateNmi, a4Attribute=a4Attribute, a10ShutdownTheOs=a10ShutdownTheOs, a10WriteToLcd=a10WriteToLcd, a4LogToDisk=a4LogToDisk, DmiComponentIndex=DmiComponentIndex, a10RelatedMif=a10RelatedMif, a4ShutdownTheOs=a4ShutdownTheOs, a10Enabled=a10Enabled, a10Reserved=a10Reserved, a10ImmediateReset=a10ImmediateReset, DmiDisplaystring=DmiDisplaystring, eNameTable=eNameTable, a4AmsAlertName=a4AmsAlertName, a2MifId=a2MifId, products=products, tActionsTable=tActionsTable, tNameTable=tNameTable)
