#
# PySNMP MIB module ZXR10-T128-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZXR10-T128-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:48:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, ObjectIdentity, Counter64, TimeTicks, Gauge32, NotificationType, Integer32, MibIdentifier, Counter32, Bits, Unsigned32, ModuleIdentity, mgmt, iso, NotificationType, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "ObjectIdentity", "Counter64", "TimeTicks", "Gauge32", "NotificationType", "Integer32", "MibIdentifier", "Counter32", "Bits", "Unsigned32", "ModuleIdentity", "mgmt", "iso", "NotificationType", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
DisplayString, MasterStatus, BoolStatus, AvailStatus, UnitRunStatus, PidUsedStatus, NpcType, PortWorkingType, ShelfAttrib, BoardType, zxr10RackNo, zxr10PosInRack, zxr10, PortType, zxr10rack, OperStatus = mibBuilder.importSymbols("ZXR10-MIB", "DisplayString", "MasterStatus", "BoolStatus", "AvailStatus", "UnitRunStatus", "PidUsedStatus", "NpcType", "PortWorkingType", "ShelfAttrib", "BoardType", "zxr10RackNo", "zxr10PosInRack", "zxr10", "PortType", "zxr10rack", "OperStatus")
class AlarmType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 129, 130, 131, 132, 133, 134))
    namedValues = NamedValues(("hardware-environment", 1), ("hardware-board", 2), ("hardware-port", 3), ("softprotocol-ros", 65), ("softprotocol-database", 66), ("softprotocol-oam", 67), ("softprotocol-security", 68), ("softprotocol-ospf", 69), ("softprotocol-rip", 70), ("softprotocol-bgp", 71), ("softprotocol-drp", 72), ("softprotocol-tcp-udp", 73), ("softprotocol-ip", 74), ("softprotocol-igmp", 75), ("softprotocol-telnet", 76), ("softprotocol-udp", 77), ("softprotocol-arp", 78), ("softprotocol-isis", 79), ("softprotocol-icmp", 80), ("softprotocol-snmp", 81), ("softprotocol-rmon", 82), ("statistics-microcode", 129), ("statistics-ip", 130), ("statistics-tcp", 131), ("statistics-udp", 132), ("statistics-icmp", 133), ("statistics-bgp", 134))

zxr10shelfTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 2, 2), )
if mibBuilder.loadTexts: zxr10shelfTable.setStatus('current')
if mibBuilder.loadTexts: zxr10shelfTable.setDescription('the description of zxr10 shelf infomation it is a list of shelf entries.')
zxr10shelfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 2, 2, 1), ).setIndexNames((0, "ZXR10-MIB", "zxr10RackNo"), (0, "ZXR10-T128-MIB", "zxr10ShelfNo"))
if mibBuilder.loadTexts: zxr10shelfEntry.setStatus('current')
if mibBuilder.loadTexts: zxr10shelfEntry.setDescription('A shelf entry containing objects that descript the shelf infomation,such as: zxr10ShelfRackNo,zxr10ShelfNo , zxr10ShelfAttrib,zxr10ShelfAvailStatus.')
zxr10ShelfNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ShelfNo.setStatus('current')
if mibBuilder.loadTexts: zxr10ShelfNo.setDescription('the no. of the special shelf.')
zxr10ShelfAttrib = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 2, 1, 2), ShelfAttrib()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ShelfAttrib.setStatus('current')
if mibBuilder.loadTexts: zxr10ShelfAttrib.setDescription('the attribute. of the special rack. eg ,the current shelf is a working shelf, we use 1,else if the shelf is a fan shelf we use 2 ,etc.')
zxr10ShelfAvailStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 2, 1, 3), AvailStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ShelfAvailStatus.setStatus('current')
if mibBuilder.loadTexts: zxr10ShelfAvailStatus.setDescription('the status. of the special shelf. eg ,the current shelf is in use, we use 1,else if the shelfis unuse, we use 0 .')
zxr10portTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4), )
if mibBuilder.loadTexts: zxr10portTable.setStatus('current')
if mibBuilder.loadTexts: zxr10portTable.setDescription('the description of port infomation in the zxr10 card . it is a list of port entries.')
zxr10portEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1), ).setIndexNames((0, "ZXR10-MIB", "zxr10RackNo"), (0, "ZXR10-T128-MIB", "zxr10ShelfNo"), (0, "ZXR10-MIB", "zxr10PosInRack"), (0, "ZXR10-T128-MIB", "zxr10PortNo"))
if mibBuilder.loadTexts: zxr10portEntry.setStatus('current')
if mibBuilder.loadTexts: zxr10portEntry.setDescription('A port entry containing objects that descript the port infomation,such as: zxr10PortNo zxr10PortType zxr10PortWorkingType zxr10PortMTU zxr10PortSpeed zxr10PortAvailStatus zxr10PortOperStatus.')
zxr10PortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortIfIndex.setStatus('current')
if mibBuilder.loadTexts: zxr10PortIfIndex.setDescription('the IfIndex of the port on the card.')
zxr10PortNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortNo.setStatus('current')
if mibBuilder.loadTexts: zxr10PortNo.setDescription('the no. of the port on the card, which contains several ports .')
zxr10PortType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 3), PortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortType.setStatus('current')
if mibBuilder.loadTexts: zxr10PortType.setDescription('the type of the port.such as: fei : Fast Ethernet Interface gei : Gigabit Ethernet Interface card oc3 : Optic Cable 3 interface card oc12 : Optic Cable 12 interface card oc48 : Optic Cable 48 interface card atm155 : atm155 interface card .')
zxr10PortWorkingType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 4), PortWorkingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortWorkingType.setStatus('current')
if mibBuilder.loadTexts: zxr10PortWorkingType.setDescription(' auto-config(0) indicate the port working type is auto-config, full-duplex(1) indicate the port working type is full duplex, half-duplex(2) indicate the port working type is half duplex.')
zxr10PortMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortMTU.setStatus('current')
if mibBuilder.loadTexts: zxr10PortMTU.setDescription('the mtu of this port .')
zxr10PortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortSpeed.setStatus('current')
if mibBuilder.loadTexts: zxr10PortSpeed.setDescription('the transmit speed of this port, unit is Mbps.')
zxr10PortAvailStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 7), AvailStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortAvailStatus.setStatus('current')
if mibBuilder.loadTexts: zxr10PortAvailStatus.setDescription('the status. of the special port. eg ,the current port is running, we use 1,else if the card is down, we use 0 . 1 indicate physical level initialize ok 0 indicate physical level initialize not ok ')
zxr10PortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 8), OperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortOperStatus.setStatus('current')
if mibBuilder.loadTexts: zxr10PortOperStatus.setDescription("the operstatus. of the special card. eg ,the current card can work, we use 1, else if the card can't,we use 0 . for upc board: 1 indicate mpu and rpu both run normally, 0 indicate error, for sfc npc board: 1 indicate upc communicate with them(sfc,upc) normally, 0 indicate error.")
mibBuilder.exportSymbols("ZXR10-T128-MIB", zxr10ShelfAvailStatus=zxr10ShelfAvailStatus, zxr10PortIfIndex=zxr10PortIfIndex, zxr10PortType=zxr10PortType, zxr10shelfTable=zxr10shelfTable, zxr10portTable=zxr10portTable, zxr10PortWorkingType=zxr10PortWorkingType, zxr10portEntry=zxr10portEntry, zxr10PortMTU=zxr10PortMTU, zxr10ShelfNo=zxr10ShelfNo, zxr10shelfEntry=zxr10shelfEntry, zxr10PortAvailStatus=zxr10PortAvailStatus, zxr10PortOperStatus=zxr10PortOperStatus, zxr10PortSpeed=zxr10PortSpeed, zxr10ShelfAttrib=zxr10ShelfAttrib, zxr10PortNo=zxr10PortNo, AlarmType=AlarmType)
