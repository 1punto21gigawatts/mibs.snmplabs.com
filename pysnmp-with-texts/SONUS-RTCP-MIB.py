#
# PySNMP MIB module SONUS-RTCP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONUS-RTCP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:10:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Unsigned32, Gauge32, IpAddress, ModuleIdentity, Integer32, Counter64, NotificationType, Counter32, MibIdentifier, ObjectIdentity, iso, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Unsigned32", "Gauge32", "IpAddress", "ModuleIdentity", "Integer32", "Counter64", "NotificationType", "Counter32", "MibIdentifier", "ObjectIdentity", "iso", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DateAndTime, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TextualConvention", "DisplayString")
sonusEventLevel, sonusSlotIndex, sonusEventDescription, sonusShelfIndex, sonusEventClass = mibBuilder.importSymbols("SONUS-COMMON-MIB", "sonusEventLevel", "sonusSlotIndex", "sonusEventDescription", "sonusShelfIndex", "sonusEventClass")
sonusResourcesMIBs, = mibBuilder.importSymbols("SONUS-SMI", "sonusResourcesMIBs")
SonusShelfIndex, SonusBoolean = mibBuilder.importSymbols("SONUS-TC", "SonusShelfIndex", "SonusBoolean")
sonusRtcpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7))
if mibBuilder.loadTexts: sonusRtcpMIB.setLastUpdated('200104180000Z')
if mibBuilder.loadTexts: sonusRtcpMIB.setOrganization('Sonus Networks, Inc.')
if mibBuilder.loadTexts: sonusRtcpMIB.setContactInfo(' Customer Support Sonus Networks, Inc, 5 Carlisle Road Westford, MA 01886 USA Tel: 978-692-8999 Fax: 978-392-9118 E-mail: cs.snmp@sonusnet.com')
if mibBuilder.loadTexts: sonusRtcpMIB.setDescription('The MIB Module for RTCP.')
sonusRtcpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1))
sonusRtcpShelfAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 1), )
if mibBuilder.loadTexts: sonusRtcpShelfAdmnTable.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpShelfAdmnTable.setDescription('Table of Sonus Enterprise RTCP Admn information.')
sonusRtcpShelfAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 1, 1), ).setIndexNames((0, "SONUS-RTCP-MIB", "sonusRtcpShelfAdmnIndex"))
if mibBuilder.loadTexts: sonusRtcpShelfAdmnEntry.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpShelfAdmnEntry.setDescription('Entry in Table consisting of the Sonus RTCP ADMN information.')
sonusRtcpShelfAdmnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 1, 1, 1), SonusShelfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpShelfAdmnIndex.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpShelfAdmnIndex.setDescription('Shelf Index for Sonus RTCP table.')
sonusRtcpShelfAdmnSrInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 40)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusRtcpShelfAdmnSrInterval.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpShelfAdmnSrInterval.setDescription('Time interval between the transmition of RTCP Sender Reports.')
sonusRtcpShelfAdmnEstablishInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusRtcpShelfAdmnEstablishInterval.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpShelfAdmnEstablishInterval.setDescription('The number of SR Intervals to elapse before starting bearer plane connectivity checks.')
sonusRtcpShelfAdmnLossTrapHistoryEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusRtcpShelfAdmnLossTrapHistoryEntries.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpShelfAdmnLossTrapHistoryEntries.setDescription('The number of entries in the loss trap history table.')
sonusRtcpShelfAdmnAbsenceTrapHistoryEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusRtcpShelfAdmnAbsenceTrapHistoryEntries.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpShelfAdmnAbsenceTrapHistoryEntries.setDescription('The number of entries in the absence trap history table.')
sonusRtcpShelfAdmnLossTrapHistoryTableReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unknown", 1), ("reset", 2))).clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusRtcpShelfAdmnLossTrapHistoryTableReset.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpShelfAdmnLossTrapHistoryTableReset.setDescription('This object is used to reset the loss trap history table. This object always reads as unknown(1).')
sonusRtcpShelfAdmnAbsenceTrapHistoryTableReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unknown", 1), ("reset", 2))).clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusRtcpShelfAdmnAbsenceTrapHistoryTableReset.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpShelfAdmnAbsenceTrapHistoryTableReset.setDescription('This object is used to reset the absence trap history table. This object always reads as unknown(1).')
sonusRtcpSlotLinkLossTrapStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 4), )
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatusTable.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatusTable.setDescription('This table contains RTCP packet loss trap statistics for a specific slot and link. A link is an IP connection over which voice over IP calls are made. The IP link is terminated on the PNS NIF. The RTCP instance runs on the CNS slot (collecting RTP statistics from the DSP). Every call made through this slot and link, and configured to trap for excessive packet loss, can contribute to the statistics in this entry. This table is enabled when the configured number of entries is non-zero. Entries remain in the table indefinitely. A link can displace the oldest entry in the table that is no longer active. Also, the entire table can be reset.')
sonusRtcpSlotLinkLossTrapStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 4, 1), ).setIndexNames((0, "SONUS-RTCP-MIB", "sonusRtcpSlotLinkLossTrapStatShelfIndex"), (0, "SONUS-RTCP-MIB", "sonusRtcpSlotLinkLossTrapStatSlotIndex"), (0, "SONUS-RTCP-MIB", "sonusRtcpSlotLinkLossTrapStatSrcIpAddress"), (0, "SONUS-RTCP-MIB", "sonusRtcpSlotLinkLossTrapStatDestIpAddress"))
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatusEntry.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatusEntry.setDescription('The index into this table is composed of the shelf index, the slot index, the source IP address and the destination IP address of the RTP connection.')
sonusRtcpSlotLinkLossTrapStatShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 4, 1, 1), SonusShelfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatShelfIndex.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatShelfIndex.setDescription('Shelf index for this table.')
sonusRtcpSlotLinkLossTrapStatSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatSlotIndex.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatSlotIndex.setDescription('The slot index for the CNS server that hosts the RTCP instance maintaing this table.')
sonusRtcpSlotLinkLossTrapStatSrcIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatSrcIpAddress.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatSrcIpAddress.setDescription('Source IP address of the link. RTCP detected excessive packet loss for a voice over IP call on this link for which trap generation is specified.')
sonusRtcpSlotLinkLossTrapStatDestIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 4, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatDestIpAddress.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatDestIpAddress.setDescription('Destination IP address of the link. RTCP detected excessive packet loss for a voice over IP call on this link for which trap generation is specified.')
sonusRtcpSlotLinkLossTrapStatCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatCount.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatCount.setDescription('This field reflects the number of times excessive loss was detected on voice over IP calls made through this slot and link during the period between the described start time and last time.')
sonusRtcpSlotLinkLossTrapStatTotalCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatTotalCount.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatTotalCount.setDescription('This field indicates the total number of times excessive loss was detected on voice over IP calls made through this slot and link.')
sonusRtcpSlotLinkLossTrapStatStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 4, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatStartTime.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatStartTime.setDescription('Indicates the time excessive packet loss started on a call made through this slot and link. This field is unchanged while excessive loss is active. It is later updated if excessive packet loss resumes, after a quiet period of 15 seconds is detected.')
sonusRtcpSlotLinkLossTrapStatLastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 4, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatLastTime.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatLastTime.setDescription('Indicates the last time excessive packet loss was detected through this slot and link.')
sonusRtcpSlotLinkLossTrapStatActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 4, 1, 9), SonusBoolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatActive.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkLossTrapStatActive.setDescription('This field is TRUE if excessive loss is detected on a call through this slot and link. It is FALSE if 15 seconds have elapsed without excessive loss occuring.')
sonusRtcpSlotLinkAbsenceTrapStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 5), )
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatusTable.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatusTable.setDescription('This table contains RTCP packet loss trap statistics for a specific slot and link. A link is an IP connection over which voice over IP calls are made. The IP link is terminated on the PNS NIF. The RTCP instance runs on the CNS slot (collecting RTP statistics from the DSP). Every call made through this slot and link, and configured to trap in the absence of RTP and RTCP packets within the detection interval , can contribute to the statistics in this entry. The detection interval is two times the configured Sender Report interval. This table is enabled when the configured number of entries is non-zero. Entries remain in the table indefinitely. A link can displace the oldest entry in the table that is no longer active. Also, the entire table can be reset.')
sonusRtcpSlotLinkAbsenceTrapStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 5, 1), ).setIndexNames((0, "SONUS-RTCP-MIB", "sonusRtcpSlotLinkAbsenceTrapStatShelfIndex"), (0, "SONUS-RTCP-MIB", "sonusRtcpSlotLinkAbsenceTrapStatSlotIndex"), (0, "SONUS-RTCP-MIB", "sonusRtcpSlotLinkAbsenceTrapStatSrcIpAddress"), (0, "SONUS-RTCP-MIB", "sonusRtcpSlotLinkAbsenceTrapStatDestIpAddress"))
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatusEntry.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatusEntry.setDescription('The index into this table is composed of the shelf index, the slot index, the source IP address and the destination IP address of the RTP connection.')
sonusRtcpSlotLinkAbsenceTrapStatShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 5, 1, 1), SonusShelfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatShelfIndex.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatShelfIndex.setDescription('Shelf for this RTCP slot link table.')
sonusRtcpSlotLinkAbsenceTrapStatSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatSlotIndex.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatSlotIndex.setDescription('The slot index for the CNS server that hosts the RTCP instance maintaing this table.')
sonusRtcpSlotLinkAbsenceTrapStatSrcIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 5, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatSrcIpAddress.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatSrcIpAddress.setDescription('Source IP address of the link. RTCP detected absence for a voice over IP call on this link for which trap generation is specified.')
sonusRtcpSlotLinkAbsenceTrapStatDestIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 5, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatDestIpAddress.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatDestIpAddress.setDescription('Destination IP address of the link. RTCP detected absence for a voice over IP call on this link for which trap generation is specified.')
sonusRtcpSlotLinkAbsenceTrapStatCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatCount.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatCount.setDescription('This field reflects the number of times RTCP detected absence on voice over IP calls made through this slot and link during the period between the described start time and last time.')
sonusRtcpSlotLinkAbsenceTrapStatTotalCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatTotalCount.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatTotalCount.setDescription('This field indicates the total number of times RTCP detected absence on voice over IP calls made through this slot and link.')
sonusRtcpSlotLinkAbsenceTrapStatStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 5, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatStartTime.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatStartTime.setDescription('Indicates the time RTCP detected absence on a call made through this slot and link. This field is unchanged while absence is active. It is updated if excessive packet loss resumes, after a quiet period of 15 seconds is detected.')
sonusRtcpSlotLinkAbsenceTrapStatLastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 5, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatLastTime.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatLastTime.setDescription('Indicates the last time absence was detected through this slot and link.')
sonusRtcpSlotLinkAbsenceTrapStatActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 1, 5, 1, 9), SonusBoolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatActive.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpSlotLinkAbsenceTrapStatActive.setDescription('This field is TRUE if absence is detected on a call through this slot and link. It is FALSE if 15 seconds have elapsed without absence occuring.')
sonusRtcpMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 2))
sonusRtcpMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 2, 0))
sonusRtcpMIBNotificationsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 2, 1))
sonusRtcpLocalIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpLocalIpAddr.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpLocalIpAddr.setDescription('Represents the local IP address for this RTP session.')
sonusRtcpRemoteIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusRtcpRemoteIpAddr.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpRemoteIpAddr.setDescription('Represents the remote IP address for this RTP session.')
sonusRtcpPacketLossThresholdExceededNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 2, 0, 1)).setObjects(("SONUS-COMMON-MIB", "sonusShelfIndex"), ("SONUS-COMMON-MIB", "sonusSlotIndex"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusRtcpPacketLossThresholdExceededNotification.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpPacketLossThresholdExceededNotification.setDescription('This trap indicates that the RTP packet loss count has exceeded a user-specified threshold in one or more RTP sessions on the specified shelf and slot.')
sonusRtcpPacketLossThresholdClearedNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 2, 0, 2)).setObjects(("SONUS-COMMON-MIB", "sonusShelfIndex"), ("SONUS-COMMON-MIB", "sonusSlotIndex"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusRtcpPacketLossThresholdClearedNotification.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpPacketLossThresholdClearedNotification.setDescription('This trap indicates that the RTP packet loss threshold was not exceeded in any RTP session on the specified shelf and slot for a period of 15 seconds.')
sonusRtcpNoRtpOrRtcpPacketsReceivedNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 2, 0, 3)).setObjects(("SONUS-COMMON-MIB", "sonusShelfIndex"), ("SONUS-COMMON-MIB", "sonusSlotIndex"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusRtcpNoRtpOrRtcpPacketsReceivedNotification.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpNoRtpOrRtcpPacketsReceivedNotification.setDescription('This trap indicates that no RTP packets and no RTCP packets were received on a session originating on the specified shelf and slot.')
sonusRtcpNoRtpOrRtcpPacketsClearedNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 2, 7, 2, 0, 4)).setObjects(("SONUS-COMMON-MIB", "sonusShelfIndex"), ("SONUS-COMMON-MIB", "sonusSlotIndex"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusRtcpNoRtpOrRtcpPacketsClearedNotification.setStatus('current')
if mibBuilder.loadTexts: sonusRtcpNoRtpOrRtcpPacketsClearedNotification.setDescription('This trap indicates that the condition of no RTP or RTCP packets received has not occured on the specified shelf and slot for a period of 15 seconds.')
mibBuilder.exportSymbols("SONUS-RTCP-MIB", sonusRtcpLocalIpAddr=sonusRtcpLocalIpAddr, sonusRtcpSlotLinkLossTrapStatusEntry=sonusRtcpSlotLinkLossTrapStatusEntry, sonusRtcpSlotLinkAbsenceTrapStatSrcIpAddress=sonusRtcpSlotLinkAbsenceTrapStatSrcIpAddress, sonusRtcpPacketLossThresholdExceededNotification=sonusRtcpPacketLossThresholdExceededNotification, sonusRtcpPacketLossThresholdClearedNotification=sonusRtcpPacketLossThresholdClearedNotification, sonusRtcpShelfAdmnIndex=sonusRtcpShelfAdmnIndex, sonusRtcpNoRtpOrRtcpPacketsClearedNotification=sonusRtcpNoRtpOrRtcpPacketsClearedNotification, sonusRtcpNoRtpOrRtcpPacketsReceivedNotification=sonusRtcpNoRtpOrRtcpPacketsReceivedNotification, sonusRtcpSlotLinkLossTrapStatDestIpAddress=sonusRtcpSlotLinkLossTrapStatDestIpAddress, sonusRtcpMIBObjects=sonusRtcpMIBObjects, sonusRtcpSlotLinkAbsenceTrapStatShelfIndex=sonusRtcpSlotLinkAbsenceTrapStatShelfIndex, sonusRtcpShelfAdmnLossTrapHistoryEntries=sonusRtcpShelfAdmnLossTrapHistoryEntries, sonusRtcpSlotLinkLossTrapStatSrcIpAddress=sonusRtcpSlotLinkLossTrapStatSrcIpAddress, sonusRtcpShelfAdmnAbsenceTrapHistoryEntries=sonusRtcpShelfAdmnAbsenceTrapHistoryEntries, sonusRtcpSlotLinkAbsenceTrapStatStartTime=sonusRtcpSlotLinkAbsenceTrapStatStartTime, sonusRtcpSlotLinkLossTrapStatStartTime=sonusRtcpSlotLinkLossTrapStatStartTime, sonusRtcpSlotLinkLossTrapStatLastTime=sonusRtcpSlotLinkLossTrapStatLastTime, sonusRtcpSlotLinkLossTrapStatTotalCount=sonusRtcpSlotLinkLossTrapStatTotalCount, sonusRtcpSlotLinkLossTrapStatActive=sonusRtcpSlotLinkLossTrapStatActive, sonusRtcpSlotLinkAbsenceTrapStatSlotIndex=sonusRtcpSlotLinkAbsenceTrapStatSlotIndex, sonusRtcpSlotLinkAbsenceTrapStatusEntry=sonusRtcpSlotLinkAbsenceTrapStatusEntry, sonusRtcpShelfAdmnEstablishInterval=sonusRtcpShelfAdmnEstablishInterval, sonusRtcpShelfAdmnTable=sonusRtcpShelfAdmnTable, sonusRtcpMIB=sonusRtcpMIB, sonusRtcpSlotLinkAbsenceTrapStatActive=sonusRtcpSlotLinkAbsenceTrapStatActive, sonusRtcpMIBNotificationsObjects=sonusRtcpMIBNotificationsObjects, sonusRtcpSlotLinkAbsenceTrapStatCount=sonusRtcpSlotLinkAbsenceTrapStatCount, sonusRtcpSlotLinkAbsenceTrapStatDestIpAddress=sonusRtcpSlotLinkAbsenceTrapStatDestIpAddress, sonusRtcpSlotLinkLossTrapStatShelfIndex=sonusRtcpSlotLinkLossTrapStatShelfIndex, sonusRtcpSlotLinkLossTrapStatCount=sonusRtcpSlotLinkLossTrapStatCount, sonusRtcpMIBNotifications=sonusRtcpMIBNotifications, sonusRtcpSlotLinkLossTrapStatSlotIndex=sonusRtcpSlotLinkLossTrapStatSlotIndex, PYSNMP_MODULE_ID=sonusRtcpMIB, sonusRtcpSlotLinkAbsenceTrapStatLastTime=sonusRtcpSlotLinkAbsenceTrapStatLastTime, sonusRtcpSlotLinkAbsenceTrapStatTotalCount=sonusRtcpSlotLinkAbsenceTrapStatTotalCount, sonusRtcpRemoteIpAddr=sonusRtcpRemoteIpAddr, sonusRtcpSlotLinkAbsenceTrapStatusTable=sonusRtcpSlotLinkAbsenceTrapStatusTable, sonusRtcpMIBNotificationsPrefix=sonusRtcpMIBNotificationsPrefix, sonusRtcpShelfAdmnSrInterval=sonusRtcpShelfAdmnSrInterval, sonusRtcpShelfAdmnLossTrapHistoryTableReset=sonusRtcpShelfAdmnLossTrapHistoryTableReset, sonusRtcpShelfAdmnAbsenceTrapHistoryTableReset=sonusRtcpShelfAdmnAbsenceTrapHistoryTableReset, sonusRtcpSlotLinkLossTrapStatusTable=sonusRtcpSlotLinkLossTrapStatusTable, sonusRtcpShelfAdmnEntry=sonusRtcpShelfAdmnEntry)
