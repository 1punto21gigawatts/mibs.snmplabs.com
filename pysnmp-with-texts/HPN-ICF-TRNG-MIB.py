#
# PySNMP MIB module HPN-ICF-TRNG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-TRNG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:41:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
hpnicfRhw, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfRhw")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Integer32, Gauge32, Counter64, ModuleIdentity, ObjectIdentity, iso, NotificationType, Counter32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, MibIdentifier, IpAddress, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Gauge32", "Counter64", "ModuleIdentity", "ObjectIdentity", "iso", "NotificationType", "Counter32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "MibIdentifier", "IpAddress", "Bits")
DateAndTime, RowStatus, TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "RowStatus", "TextualConvention", "DisplayString", "TruthValue")
hpnicfTRNG = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13))
hpnicfTRNG.setRevisions(('2003-04-11 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpnicfTRNG.setRevisionsDescriptions(('200304110000Z, --The initial revision of this MIB module.',))
if mibBuilder.loadTexts: hpnicfTRNG.setLastUpdated('200304110000Z')
if mibBuilder.loadTexts: hpnicfTRNG.setOrganization('')
if mibBuilder.loadTexts: hpnicfTRNG.setContactInfo('')
if mibBuilder.loadTexts: hpnicfTRNG.setDescription('The HPN-ICF-TRNG-MIB contains objects to Configure the system absolute and periodic time-range.')
hpnicfTRNGMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1))
hpnicfTrngCreateTimerangeTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 1), )
if mibBuilder.loadTexts: hpnicfTrngCreateTimerangeTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrngCreateTimerangeTable.setDescription('Creat TimeRange.')
hpnicfTrngCreateTimerangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-TRNG-MIB", "hpnicfTrngIndex"))
if mibBuilder.loadTexts: hpnicfTrngCreateTimerangeEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrngCreateTimerangeEntry.setDescription('Define the entry of hpnicfTrngCreateTimerangeTable')
hpnicfTrngIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: hpnicfTrngIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrngIndex.setDescription("TimeRange's index")
hpnicfTrngName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTrngName.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrngName.setDescription("TimeRange's name")
hpnicfTrngValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfTrngValidFlag.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrngValidFlag.setDescription('Valid or Invalid flag')
hpnicfTrngCreateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTrngCreateRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrngCreateRowStatus.setDescription('The status of this conceptual row.Now only realize CreateAndGo and Destroy and Active.')
hpnicfTrngAbsoluteTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 2), )
if mibBuilder.loadTexts: hpnicfTrngAbsoluteTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrngAbsoluteTable.setDescription('Creat absoluteness time item of the TimeRange')
hpnicfTrngAbsoluteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-TRNG-MIB", "hpnicfTrngAbsoluteNameIndex"), (0, "HPN-ICF-TRNG-MIB", "hpnicfTrngAbsoluteSubIndex"))
if mibBuilder.loadTexts: hpnicfTrngAbsoluteEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrngAbsoluteEntry.setDescription('Define the entry of hpnicfTrngAbsoluteTable')
hpnicfTrngAbsoluteNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: hpnicfTrngAbsoluteNameIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrngAbsoluteNameIndex.setDescription("TimeRange's index")
hpnicfTrngAbsoluteSubIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12)))
if mibBuilder.loadTexts: hpnicfTrngAbsoluteSubIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrngAbsoluteSubIndex.setDescription("SubItem's index")
hpnicfTimerangeAbsoluteStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 2, 1, 3), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTimerangeAbsoluteStartTime.setStatus('current')
if mibBuilder.loadTexts: hpnicfTimerangeAbsoluteStartTime.setDescription("Start point of the timerange.The format defined like 'YYYY-MM-DD,hh:mm:0.0'.")
hpnicfTimerangeAbsoluteEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 2, 1, 4), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTimerangeAbsoluteEndTime.setStatus('current')
if mibBuilder.loadTexts: hpnicfTimerangeAbsoluteEndTime.setDescription("End point of the timerange.The format defined like 'YYYY-MM-DD,hh:mm:0.0'.")
hpnicfTimerangeAbsolueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTimerangeAbsolueRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfTimerangeAbsolueRowStatus.setDescription('The status of this conceptual row. Now only realize CreateAndGo and Destroy and Active.')
hpnicfTrngPeriodicTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 3), )
if mibBuilder.loadTexts: hpnicfTrngPeriodicTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrngPeriodicTable.setDescription('Creat periodic time item of the TimeRange')
hpnicfTrngPeriodicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 3, 1), ).setIndexNames((0, "HPN-ICF-TRNG-MIB", "hpnicfTrngPeriodicNameIndex"), (0, "HPN-ICF-TRNG-MIB", "hpnicfTrngPeriodicSubIndex"))
if mibBuilder.loadTexts: hpnicfTrngPeriodicEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrngPeriodicEntry.setDescription('Define the index of hpnicfTrngPeriodicTable')
hpnicfTrngPeriodicNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: hpnicfTrngPeriodicNameIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrngPeriodicNameIndex.setDescription("TimeRange's index")
hpnicfTrngPeriodicSubIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: hpnicfTrngPeriodicSubIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrngPeriodicSubIndex.setDescription("SubItem's index")
hpnicfTrngPeriodicDayOfWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 3, 1, 3), Bits().clone(namedValues=NamedValues(("sunday", 0), ("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTrngPeriodicDayOfWeek.setStatus('current')
if mibBuilder.loadTexts: hpnicfTrngPeriodicDayOfWeek.setDescription('The day of week. This is a bit-map of possible conditions. The various bit positions are: |0 |sunday | |1 |monday | |2 |tuesday | |3 |wednesday | |4 |thursday | |5 |friday | |6 |saturday | ')
hpnicfTimerangePeriodicStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 3, 1, 4), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTimerangePeriodicStartTime.setStatus('current')
if mibBuilder.loadTexts: hpnicfTimerangePeriodicStartTime.setDescription("Start point of this timerange,The format defined like 'hh:mm:0,0'.")
hpnicfTimerangePeriodicEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 3, 1, 5), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTimerangePeriodicEndTime.setStatus('current')
if mibBuilder.loadTexts: hpnicfTimerangePeriodicEndTime.setDescription("End point of this timerange. The format definedlike 'hh:mm:0,0'.")
hpnicfTimerangePeriodicRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 1, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTimerangePeriodicRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfTimerangePeriodicRowStatus.setDescription('The status of this conceptual row, Now only realize CreateAndGo and Destroy and Active.')
hpnicfTRNGMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 3))
hpnicfTRNGMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 3, 1))
hpnicfTRNGMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 3, 1, 1)).setObjects(("HPN-ICF-TRNG-MIB", "hpnicfTRNGGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfTRNGMibCompliance = hpnicfTRNGMibCompliance.setStatus('current')
if mibBuilder.loadTexts: hpnicfTRNGMibCompliance.setDescription('The compliance statement for entities which implement the Time-range MIB.')
hpnicfTRNGMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 3, 2))
hpnicfTRNGGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 13, 3, 2, 1)).setObjects(("HPN-ICF-TRNG-MIB", "hpnicfTrngName"), ("HPN-ICF-TRNG-MIB", "hpnicfTrngValidFlag"), ("HPN-ICF-TRNG-MIB", "hpnicfTrngCreateRowStatus"), ("HPN-ICF-TRNG-MIB", "hpnicfTimerangeAbsoluteStartTime"), ("HPN-ICF-TRNG-MIB", "hpnicfTimerangeAbsoluteEndTime"), ("HPN-ICF-TRNG-MIB", "hpnicfTimerangeAbsolueRowStatus"), ("HPN-ICF-TRNG-MIB", "hpnicfTrngPeriodicDayOfWeek"), ("HPN-ICF-TRNG-MIB", "hpnicfTimerangePeriodicStartTime"), ("HPN-ICF-TRNG-MIB", "hpnicfTimerangePeriodicEndTime"), ("HPN-ICF-TRNG-MIB", "hpnicfTimerangePeriodicRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfTRNGGroup = hpnicfTRNGGroup.setStatus('current')
if mibBuilder.loadTexts: hpnicfTRNGGroup.setDescription('A collection of objects providing mandatory time-range information.')
mibBuilder.exportSymbols("HPN-ICF-TRNG-MIB", hpnicfTrngIndex=hpnicfTrngIndex, PYSNMP_MODULE_ID=hpnicfTRNG, hpnicfTRNGGroup=hpnicfTRNGGroup, hpnicfTrngAbsoluteEntry=hpnicfTrngAbsoluteEntry, hpnicfTrngName=hpnicfTrngName, hpnicfTrngAbsoluteSubIndex=hpnicfTrngAbsoluteSubIndex, hpnicfTimerangePeriodicEndTime=hpnicfTimerangePeriodicEndTime, hpnicfTimerangeAbsoluteEndTime=hpnicfTimerangeAbsoluteEndTime, hpnicfTimerangePeriodicRowStatus=hpnicfTimerangePeriodicRowStatus, hpnicfTRNG=hpnicfTRNG, hpnicfTrngValidFlag=hpnicfTrngValidFlag, hpnicfTrngPeriodicNameIndex=hpnicfTrngPeriodicNameIndex, hpnicfTrngAbsoluteNameIndex=hpnicfTrngAbsoluteNameIndex, hpnicfTimerangePeriodicStartTime=hpnicfTimerangePeriodicStartTime, hpnicfTRNGMibCompliance=hpnicfTRNGMibCompliance, hpnicfTimerangeAbsoluteStartTime=hpnicfTimerangeAbsoluteStartTime, hpnicfTrngCreateTimerangeEntry=hpnicfTrngCreateTimerangeEntry, hpnicfTrngPeriodicSubIndex=hpnicfTrngPeriodicSubIndex, hpnicfTrngAbsoluteTable=hpnicfTrngAbsoluteTable, hpnicfTrngPeriodicEntry=hpnicfTrngPeriodicEntry, hpnicfTRNGMibCompliances=hpnicfTRNGMibCompliances, hpnicfTrngCreateRowStatus=hpnicfTrngCreateRowStatus, hpnicfTrngPeriodicDayOfWeek=hpnicfTrngPeriodicDayOfWeek, hpnicfTRNGMibObjects=hpnicfTRNGMibObjects, hpnicfTrngCreateTimerangeTable=hpnicfTrngCreateTimerangeTable, hpnicfTRNGMibConformance=hpnicfTRNGMibConformance, hpnicfTimerangeAbsolueRowStatus=hpnicfTimerangeAbsolueRowStatus, hpnicfTRNGMibGroups=hpnicfTRNGMibGroups, hpnicfTrngPeriodicTable=hpnicfTrngPeriodicTable)
