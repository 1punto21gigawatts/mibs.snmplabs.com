#
# PySNMP MIB module CISCO-AUTHORIZATION-STATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-AUTHORIZATION-STATS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:51:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoPort, = mibBuilder.importSymbols("CISCO-TC", "CiscoPort")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, MibIdentifier, iso, TimeTicks, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter32, Gauge32, IpAddress, Integer32, Counter64, NotificationType, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibIdentifier", "iso", "TimeTicks", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter32", "Gauge32", "IpAddress", "Integer32", "Counter64", "NotificationType", "Unsigned32")
DisplayString, TextualConvention, TimeInterval = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TimeInterval")
ciscoAuthorizationStatsMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 343))
ciscoAuthorizationStatsMibModule.setRevisions(('2006-11-08 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoAuthorizationStatsMibModule.setRevisionsDescriptions(('The initial version of this MIB.',))
if mibBuilder.loadTexts: ciscoAuthorizationStatsMibModule.setLastUpdated('200611080000Z')
if mibBuilder.loadTexts: ciscoAuthorizationStatsMibModule.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoAuthorizationStatsMibModule.setContactInfo('Cisco Systems 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-cvpn3000@cisco.com')
if mibBuilder.loadTexts: ciscoAuthorizationStatsMibModule.setDescription('The Cisco User Authorization Statistics MIB models counters and objects that are of management interest. ')
cStatsAuthorization = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 343, 1))
cAuthorizationGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 343, 1, 1))
cAuthorizationStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 343, 1, 2), )
if mibBuilder.loadTexts: cAuthorizationStatsTable.setStatus('current')
if mibBuilder.loadTexts: cAuthorizationStatsTable.setDescription('The list of servers that may be queried for authorization attributes for connecting IPSec tunnel users.')
cAuthorizationStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 343, 1, 2, 1), ).setIndexNames((0, "CISCO-AUTHORIZATION-STATS-MIB", "cAuthorizServerIndex"))
if mibBuilder.loadTexts: cAuthorizationStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cAuthorizationStatsEntry.setDescription('An entry in the cAuthorizationStatsTable. These entries are created or destroyed whenever an authorization server connection is added or removed via one of the management interfaces to the tunnel server.')
cAuthorizServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 343, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cAuthorizServerIndex.setStatus('current')
if mibBuilder.loadTexts: cAuthorizServerIndex.setDescription('The unique number used as the index for this row.')
cAuthorizServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 343, 1, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAuthorizServerAddressType.setStatus('current')
if mibBuilder.loadTexts: cAuthorizServerAddressType.setDescription('The type of Internet address used by this entry.')
cAuthorizServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 343, 1, 2, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAuthorizServerAddress.setStatus('current')
if mibBuilder.loadTexts: cAuthorizServerAddress.setDescription('The IP address of the authorization server whose statistics are being reported.')
cAuthorizClientServerPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 343, 1, 2, 1, 4), CiscoPort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAuthorizClientServerPortNum.setStatus('current')
if mibBuilder.loadTexts: cAuthorizClientServerPortNum.setDescription('The UDP The port on the server to which authorization requests are directed.')
cAuthorizClientRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 343, 1, 2, 1, 5), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAuthorizClientRoundTripTime.setStatus('current')
if mibBuilder.loadTexts: cAuthorizClientRoundTripTime.setDescription('The time interval between the most recent Access-Reply/Access-Challenge and the Access-Request.')
cAuthorizClientAccessRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 343, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAuthorizClientAccessRequests.setStatus('current')
if mibBuilder.loadTexts: cAuthorizClientAccessRequests.setDescription('The total number of Access-Request packets sent to authorization server since client start-up. This does not include retransmissions.')
cAuthorizClientAccessRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 343, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAuthorizClientAccessRetrans.setStatus('current')
if mibBuilder.loadTexts: cAuthorizClientAccessRetrans.setDescription('The total number of Access-Request packets retransmitted to authorization server since client start-up.')
cAuthorizClientAccessAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 343, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAuthorizClientAccessAccepts.setStatus('current')
if mibBuilder.loadTexts: cAuthorizClientAccessAccepts.setDescription('The total number of Access-Accept packets received by authorization server since client start-up.')
cAuthorizClientAccessRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 343, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAuthorizClientAccessRejects.setStatus('current')
if mibBuilder.loadTexts: cAuthorizClientAccessRejects.setDescription('The total number of Access-Reject packets received by authorization server since client start-up.')
cAuthorizClientAccessChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 343, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAuthorizClientAccessChallenges.setStatus('current')
if mibBuilder.loadTexts: cAuthorizClientAccessChallenges.setDescription('The total number of Access-Challenge packets received by authorization server since client start-up.')
cAuthorizClientMalAccessResps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 343, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAuthorizClientMalAccessResps.setStatus('current')
if mibBuilder.loadTexts: cAuthorizClientMalAccessResps.setDescription('The total number of malformed Access-Response packets received by authoriztion server since client start-up. Malformed packets include packets with an invalid length. Bad authenticators or Signature attributes are not included as malformed access responses.')
cAuthorizClientBadAuthenticates = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 343, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAuthorizClientBadAuthenticates.setStatus('current')
if mibBuilder.loadTexts: cAuthorizClientBadAuthenticates.setDescription('The total number of Access-Response packets containing invalid authenticators or Signature attributes received by authorization server since client start-up.')
cAuthorizClientPendingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 343, 1, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAuthorizClientPendingRequests.setStatus('current')
if mibBuilder.loadTexts: cAuthorizClientPendingRequests.setDescription('The total number of Access-Request packets destined for authorization server that have not yet timed out or received a response. This variable is incremented when an Access-Request is sent and decremented due to receipt of an Access-Reply or Access-Challenge, a timeout or retransmission.')
cAuthorizClientTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 343, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAuthorizClientTimeouts.setStatus('current')
if mibBuilder.loadTexts: cAuthorizClientTimeouts.setDescription('The total number of timeouts to authorization server since client startup. After a timeout the client may retry to the same server, send to a different server, or give up. A retry to the same server is counted as a retransmit as well as a timeout. A send to a different server is counted as a Request as well as a timeout.')
cAuthorizClientUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 343, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAuthorizClientUnknownTypes.setStatus('current')
if mibBuilder.loadTexts: cAuthorizClientUnknownTypes.setDescription('The total number of unknown type packets received by authorization server since client start-up.')
cAuthorizServerGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 343, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAuthorizServerGroupId.setStatus('current')
if mibBuilder.loadTexts: cAuthorizServerGroupId.setDescription('The Id of user group associated with authorization server. The group ID is an integer value assigned by the tunnel server. Group ID 0 is a special value used to refer all gorups.')
cAuthorizationMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 343, 2))
cAuthorizationMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 343, 2, 1))
cAuthorizationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 343, 2, 2))
cAuthorizationMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 343, 2, 1, 1)).setObjects(("CISCO-AUTHORIZATION-STATS-MIB", "cAuthorizationClientMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAuthorizationMIBCompliance = cAuthorizationMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: cAuthorizationMIBCompliance.setDescription('The compliance statement for authorization clients implementing the Authorization Client MIB.')
cAuthorizationClientMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 343, 2, 2, 1)).setObjects(("CISCO-AUTHORIZATION-STATS-MIB", "cAuthorizServerAddressType"), ("CISCO-AUTHORIZATION-STATS-MIB", "cAuthorizServerAddress"), ("CISCO-AUTHORIZATION-STATS-MIB", "cAuthorizClientServerPortNum"), ("CISCO-AUTHORIZATION-STATS-MIB", "cAuthorizClientRoundTripTime"), ("CISCO-AUTHORIZATION-STATS-MIB", "cAuthorizClientAccessRequests"), ("CISCO-AUTHORIZATION-STATS-MIB", "cAuthorizClientAccessRetrans"), ("CISCO-AUTHORIZATION-STATS-MIB", "cAuthorizClientAccessAccepts"), ("CISCO-AUTHORIZATION-STATS-MIB", "cAuthorizClientAccessRejects"), ("CISCO-AUTHORIZATION-STATS-MIB", "cAuthorizClientAccessChallenges"), ("CISCO-AUTHORIZATION-STATS-MIB", "cAuthorizClientMalAccessResps"), ("CISCO-AUTHORIZATION-STATS-MIB", "cAuthorizClientBadAuthenticates"), ("CISCO-AUTHORIZATION-STATS-MIB", "cAuthorizClientPendingRequests"), ("CISCO-AUTHORIZATION-STATS-MIB", "cAuthorizClientTimeouts"), ("CISCO-AUTHORIZATION-STATS-MIB", "cAuthorizClientUnknownTypes"), ("CISCO-AUTHORIZATION-STATS-MIB", "cAuthorizServerGroupId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAuthorizationClientMIBGroup = cAuthorizationClientMIBGroup.setStatus('current')
if mibBuilder.loadTexts: cAuthorizationClientMIBGroup.setDescription('The basic collection of objects providing management of Authorization Clients.')
mibBuilder.exportSymbols("CISCO-AUTHORIZATION-STATS-MIB", cAuthorizationGlobal=cAuthorizationGlobal, cAuthorizClientUnknownTypes=cAuthorizClientUnknownTypes, cAuthorizClientRoundTripTime=cAuthorizClientRoundTripTime, cAuthorizationClientMIBGroup=cAuthorizationClientMIBGroup, cAuthorizationGroup=cAuthorizationGroup, cAuthorizClientAccessRejects=cAuthorizClientAccessRejects, cAuthorizClientTimeouts=cAuthorizClientTimeouts, cAuthorizClientAccessRetrans=cAuthorizClientAccessRetrans, cAuthorizServerGroupId=cAuthorizServerGroupId, cStatsAuthorization=cStatsAuthorization, cAuthorizationStatsTable=cAuthorizationStatsTable, cAuthorizClientAccessRequests=cAuthorizClientAccessRequests, PYSNMP_MODULE_ID=ciscoAuthorizationStatsMibModule, cAuthorizationMIBCompliance=cAuthorizationMIBCompliance, cAuthorizClientMalAccessResps=cAuthorizClientMalAccessResps, cAuthorizClientAccessAccepts=cAuthorizClientAccessAccepts, cAuthorizClientBadAuthenticates=cAuthorizClientBadAuthenticates, cAuthorizationMIBConformance=cAuthorizationMIBConformance, cAuthorizClientPendingRequests=cAuthorizClientPendingRequests, cAuthorizClientServerPortNum=cAuthorizClientServerPortNum, cAuthorizationStatsEntry=cAuthorizationStatsEntry, cAuthorizClientAccessChallenges=cAuthorizClientAccessChallenges, cAuthorizationMIBCompliances=cAuthorizationMIBCompliances, ciscoAuthorizationStatsMibModule=ciscoAuthorizationStatsMibModule, cAuthorizServerAddressType=cAuthorizServerAddressType, cAuthorizServerIndex=cAuthorizServerIndex, cAuthorizServerAddress=cAuthorizServerAddress)
