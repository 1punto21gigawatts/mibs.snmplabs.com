#
# PySNMP MIB module CISCO-DMN-DSG-MOIP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DMN-DSG-MOIP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:55:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ciscoDSGUtilities, = mibBuilder.importSymbols("CISCO-DMN-DSG-ROOT-MIB", "ciscoDSGUtilities")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Gauge32, IpAddress, Counter32, Integer32, iso, Bits, ModuleIdentity, Counter64, TimeTicks, MibIdentifier, NotificationType, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Gauge32", "IpAddress", "Counter32", "Integer32", "iso", "Bits", "ModuleIdentity", "Counter64", "TimeTicks", "MibIdentifier", "NotificationType", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoDSGMOIP = ModuleIdentity((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35))
ciscoDSGMOIP.setRevisions(('2012-03-20 11:00', '2010-08-24 07:30',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoDSGMOIP.setRevisionsDescriptions(('V01.00.01 2012-03-20 Updated for D9854 R4 Release.', 'V01.00.00 2010-08-24 Initial Version.',))
if mibBuilder.loadTexts: ciscoDSGMOIP.setLastUpdated('201203201100Z')
if mibBuilder.loadTexts: ciscoDSGMOIP.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoDSGMOIP.setContactInfo('Cisco Systems, Inc. Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553 NETS E-mail: cs-ipsla@cisco.com')
if mibBuilder.loadTexts: ciscoDSGMOIP.setDescription('Cisco MOIP MIB.')
moipIPOTable = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1))
moipIPOConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1), )
if mibBuilder.loadTexts: moipIPOConfigTable.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigTable.setDescription('MOIP IP Output Table.')
moipIPOConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1), ).setIndexNames((0, "CISCO-DMN-DSG-MOIP-MIB", "moipIPOConfigID"))
if mibBuilder.loadTexts: moipIPOConfigEntry.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigEntry.setDescription('Entry for DPM Aligned PMT table.')
moipIPOConfigID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipIPOConfigID.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigID.setDescription('MPEG Over IP Output Instance ID .')
moipIPOConfigOutputEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("no", 1), ("yes", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOConfigOutputEnabled.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigOutputEnabled.setDescription('MPEG Over IP Output is enabled.')
moipIPOConfigInstanceName = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOConfigInstanceName.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigInstanceName.setDescription('MPEG Over IP Output Name.')
moipIPOConfigTPProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("udp", 1), ("rtp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOConfigTPProtocol.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigTPProtocol.setDescription('Transport Protocol to be used: UDP/ RPT.')
moipIPOConfigIPVer = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipIPOConfigIPVer.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigIPVer.setDescription('Internet Protocol version of the destination IP address:IPv4/IPv6.')
moipIPOConfigDestIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOConfigDestIPAddr.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigDestIPAddr.setDescription('MPEG Over IP Destination IP Address.')
moipIPOConfigSAPMulticastIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOConfigSAPMulticastIPAddr.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigSAPMulticastIPAddr.setDescription('MPEG Over IP Destination IP Address.')
moipIPOConfigDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOConfigDestPort.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigDestPort.setDescription('Source UDP Port - 0 allows automatic Port Selection, enter a value to override..')
moipIPOConfigSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOConfigSrcPort.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigSrcPort.setDescription('Source UDP Port - 0 allows automatic Port Selection, enter a value to override..')
moipIPOConfigMinIPPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOConfigMinIPPerSec.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigMinIPPerSec.setDescription('Minimum Number of IP Packets to be sent per second.')
moipIPOConfigPCRAddition = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOConfigPCRAddition.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigPCRAddition.setDescription('Program Clock Reference Addition. This OID is read only on D9824, D9854-i and D9859 ')
moipIPOConfigPCRStartNewPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOConfigPCRStartNewPkt.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigPCRStartNewPkt.setDescription('Enabling new Ethernet Packet when new Program Clock Reference arrives.')
moipIPOConfigSendSAP = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("rfc2327", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOConfigSendSAP.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigSendSAP.setDescription('Send SAP Messages.')
moipIPOConfigUseSAPStr = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("userString", 1), ("sdtChName", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOConfigUseSAPStr.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigUseSAPStr.setDescription('User Configured SAP String or PE1 SDT Channel name as the Transport Name in the SAP.')
moipIPOConfigMaxTransPktPerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOConfigMaxTransPktPerIP.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigMaxTransPktPerIP.setDescription('Maximum Number of Transport Packets per IP Packet.')
moipIPOConfigSAPStr = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOConfigSAPStr.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigSAPStr.setDescription("User configured Session Announcement Protocol Transport Name to be used when DPMIPOConfigUseSAPStr is set to 'YES'.")
moipIPOConfigInterfaceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("data1", 2), ("data2", 3), ("both", 4), ("redundancy", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOConfigInterfaceMode.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigInterfaceMode.setDescription('MPEG Over IP Output port selection.')
moipIPOConfigBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 206000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOConfigBitRate.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigBitRate.setDescription('Maxmum ASI output rate in Mbps with scaling factor of 6.')
moipIPOConfigTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOConfigTOS.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigTOS.setDescription('TOS field in IP header. This is an 8 bits field divided into 5 sub-fields namely Precedence, D, T, R and Unused.')
moipIPOConfigTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOConfigTTL.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigTTL.setDescription('Time to live. This is an 8 bits fiels that defines how many hops an IP datagram can travel through.')
moipIPOConfigSAPDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOConfigSAPDestPort.setStatus('current')
if mibBuilder.loadTexts: moipIPOConfigSAPDestPort.setDescription('SAP Destination Port Number.')
moipIPOFECMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("oneD", 2), ("twoD", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOFECMode.setStatus('current')
if mibBuilder.loadTexts: moipIPOFECMode.setDescription('FEC Mode.')
moipIPOFECColDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOFECColDepth.setStatus('current')
if mibBuilder.loadTexts: moipIPOFECColDepth.setDescription('FEC Column Depth (L Value).')
moipIPOFECRowWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOFECRowWidth.setStatus('current')
if mibBuilder.loadTexts: moipIPOFECRowWidth.setDescription('FEC Row Width (D Value).')
moipIPOAnnexType = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("annexA", 1), ("annexB", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOAnnexType.setStatus('current')
if mibBuilder.loadTexts: moipIPOAnnexType.setDescription('FEC arrangement : Non block-aligned (Annex A in Pro-MPEG FEC, Annex B in SMPTE 2022), Block-aligned (Annex B in Pro-MPEG FEC, Annex C in SMPTE-2022).')
moipIPOFEC1UDPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOFEC1UDPPort.setStatus('current')
if mibBuilder.loadTexts: moipIPOFEC1UDPPort.setDescription('UDP Port for FEC Columns Stream in step of 2. ')
moipIPOFEC2UDPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipIPOFEC2UDPPort.setStatus('current')
if mibBuilder.loadTexts: moipIPOFEC2UDPPort.setDescription('UDP Port for FEC Rows Stream in step of 2.')
moipIPOStreamStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 2), )
if mibBuilder.loadTexts: moipIPOStreamStatusTable.setStatus('current')
if mibBuilder.loadTexts: moipIPOStreamStatusTable.setDescription('MOIP IP Output Table.')
moipIPOStreamStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 2, 1), ).setIndexNames((0, "CISCO-DMN-DSG-MOIP-MIB", "moipIPOStreamStatusID"))
if mibBuilder.loadTexts: moipIPOStreamStatusEntry.setStatus('current')
if mibBuilder.loadTexts: moipIPOStreamStatusEntry.setDescription('Entry for DPM Aligned PMT table.')
moipIPOStreamStatusID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipIPOStreamStatusID.setStatus('current')
if mibBuilder.loadTexts: moipIPOStreamStatusID.setDescription('MPEG Over IP Output Instance ID .')
moipIPOStreamStatusIntf1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notInit", 1), ("stopped", 2), ("suspended", 3), ("muted", 4), ("active", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipIPOStreamStatusIntf1.setStatus('current')
if mibBuilder.loadTexts: moipIPOStreamStatusIntf1.setDescription('Stream Status, Ethernet Port 1.')
moipIPOStreamStatusIntf2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notInit", 1), ("stopped", 2), ("suspended", 3), ("muted", 4), ("active", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipIPOStreamStatusIntf2.setStatus('current')
if mibBuilder.loadTexts: moipIPOStreamStatusIntf2.setDescription('Stream Status, Ethernet Port 2.')
moipIPOStreamStatusContentOvfl = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipIPOStreamStatusContentOvfl.setStatus('current')
if mibBuilder.loadTexts: moipIPOStreamStatusContentOvfl.setDescription('Content Overflow.')
moipIPOStreamStatusLinkOvfl = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipIPOStreamStatusLinkOvfl.setStatus('current')
if mibBuilder.loadTexts: moipIPOStreamStatusLinkOvfl.setDescription('Link Overflow.')
moipIPOInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 2))
moipIPOStatsHWGlobalError = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipIPOStatsHWGlobalError.setStatus('current')
if mibBuilder.loadTexts: moipIPOStatsHWGlobalError.setDescription('Critical MPEG over IP Engine Failure.')
moipIPOStatsStreamError = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipIPOStatsStreamError.setStatus('current')
if mibBuilder.loadTexts: moipIPOStatsStreamError.setDescription('MPEG over IP TS Overflow.')
moipIPOStatsBandwidthConf = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipIPOStatsBandwidthConf.setStatus('current')
if mibBuilder.loadTexts: moipIPOStatsBandwidthConf.setDescription('Combined User Rate (Mbps).')
moipIPOStatsBandwidthActIntf1 = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipIPOStatsBandwidthActIntf1.setStatus('current')
if mibBuilder.loadTexts: moipIPOStatsBandwidthActIntf1.setDescription('Actual Rate (Mbps), Ethernet Port 1.')
moipIPOStatsBandwidthActIntf2 = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 35, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipIPOStatsBandwidthActIntf2.setStatus('current')
if mibBuilder.loadTexts: moipIPOStatsBandwidthActIntf2.setDescription('Actual Rate (Mbps), Ethernet Port 2.')
mibBuilder.exportSymbols("CISCO-DMN-DSG-MOIP-MIB", moipIPOConfigMaxTransPktPerIP=moipIPOConfigMaxTransPktPerIP, moipIPOConfigSAPMulticastIPAddr=moipIPOConfigSAPMulticastIPAddr, moipIPOConfigSrcPort=moipIPOConfigSrcPort, moipIPOTable=moipIPOTable, moipIPOStreamStatusContentOvfl=moipIPOStreamStatusContentOvfl, moipIPOFECMode=moipIPOFECMode, moipIPOFEC1UDPPort=moipIPOFEC1UDPPort, moipIPOConfigDestIPAddr=moipIPOConfigDestIPAddr, moipIPOConfigPCRStartNewPkt=moipIPOConfigPCRStartNewPkt, moipIPOConfigSAPDestPort=moipIPOConfigSAPDestPort, moipIPOStreamStatusID=moipIPOStreamStatusID, moipIPOConfigTable=moipIPOConfigTable, moipIPOStreamStatusIntf1=moipIPOStreamStatusIntf1, moipIPOInfo=moipIPOInfo, moipIPOStatsHWGlobalError=moipIPOStatsHWGlobalError, moipIPOConfigInstanceName=moipIPOConfigInstanceName, moipIPOFECColDepth=moipIPOFECColDepth, moipIPOConfigSAPStr=moipIPOConfigSAPStr, moipIPOStatsStreamError=moipIPOStatsStreamError, moipIPOStreamStatusLinkOvfl=moipIPOStreamStatusLinkOvfl, moipIPOStreamStatusIntf2=moipIPOStreamStatusIntf2, moipIPOStatsBandwidthConf=moipIPOStatsBandwidthConf, moipIPOAnnexType=moipIPOAnnexType, moipIPOConfigTPProtocol=moipIPOConfigTPProtocol, moipIPOConfigIPVer=moipIPOConfigIPVer, moipIPOConfigMinIPPerSec=moipIPOConfigMinIPPerSec, moipIPOConfigSendSAP=moipIPOConfigSendSAP, moipIPOConfigInterfaceMode=moipIPOConfigInterfaceMode, moipIPOFEC2UDPPort=moipIPOFEC2UDPPort, moipIPOStreamStatusEntry=moipIPOStreamStatusEntry, moipIPOConfigPCRAddition=moipIPOConfigPCRAddition, moipIPOConfigBitRate=moipIPOConfigBitRate, moipIPOConfigTTL=moipIPOConfigTTL, moipIPOConfigTOS=moipIPOConfigTOS, moipIPOConfigUseSAPStr=moipIPOConfigUseSAPStr, moipIPOConfigOutputEnabled=moipIPOConfigOutputEnabled, moipIPOConfigEntry=moipIPOConfigEntry, PYSNMP_MODULE_ID=ciscoDSGMOIP, moipIPOConfigDestPort=moipIPOConfigDestPort, moipIPOStreamStatusTable=moipIPOStreamStatusTable, moipIPOStatsBandwidthActIntf1=moipIPOStatsBandwidthActIntf1, moipIPOStatsBandwidthActIntf2=moipIPOStatsBandwidthActIntf2, ciscoDSGMOIP=ciscoDSGMOIP, moipIPOFECRowWidth=moipIPOFECRowWidth, moipIPOConfigID=moipIPOConfigID)
