#
# PySNMP MIB module IBM-TN3270E-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IBM-TN3270E-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:51:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
enterprises, NotificationType, Bits, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, ObjectIdentity, iso, MibIdentifier, TimeTicks, Integer32, Counter64, IpAddress, Unsigned32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "NotificationType", "Bits", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "ObjectIdentity", "iso", "MibIdentifier", "TimeTicks", "Integer32", "Counter64", "IpAddress", "Unsigned32", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ibmtn3270eMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 18, 1))
ibmtn3270eConnRejectTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 18, 1, 1), )
if mibBuilder.loadTexts: ibmtn3270eConnRejectTable.setStatus('mandatory')
if mibBuilder.loadTexts: ibmtn3270eConnRejectTable.setDescription('A table of information about TN3270E connection rejections. This table does not contain information for connections that were successfully established, but terminated abnormally.')
ibmtn3270eConnRejectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 18, 1, 1, 1), ).setIndexNames((0, "IBM-TN3270E-MIB", "ibmtn3270eConnRejectIndex"))
if mibBuilder.loadTexts: ibmtn3270eConnRejectEntry.setStatus('mandatory')
if mibBuilder.loadTexts: ibmtn3270eConnRejectEntry.setDescription('Information indicating why a particular client connection was rejected.')
ibmtn3270eConnRejectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 18, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: ibmtn3270eConnRejectIndex.setStatus('mandatory')
if mibBuilder.loadTexts: ibmtn3270eConnRejectIndex.setDescription('A unique identifier of a row in the connection rejection table.')
ibmtn3270eConnRejectAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 18, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmtn3270eConnRejectAddrType.setStatus('mandatory')
if mibBuilder.loadTexts: ibmtn3270eConnRejectAddrType.setDescription('A indication of the type of client address provided in ibmtn3270eConnRejectClient.')
ibmtn3270eConnRejectClient = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 18, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmtn3270eConnRejectClient.setStatus('mandatory')
if mibBuilder.loadTexts: ibmtn3270eConnRejectClient.setDescription('The IP address of the client whose connection was rejected.')
ibmtn3270eConnRejectReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 18, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44))).clone(namedValues=NamedValues(("noportinfo", 1), ("cliunknown", 2), ("clinoauth", 3), ("sockblock", 4), ("nodeterm", 5), ("createfail", 6), ("seqnum", 7), ("negfailed", 8), ("notelquale", 9), ("termtypefail", 10), ("notypeprtgen", 11), ("clirplyfail", 12), ("valtelquale", 13), ("clisendfail", 14), ("failtelquale", 15), ("termtypagain", 16), ("noportagain", 17), ("prtnoluname", 18), ("clinoauthent", 19), ("clinoauthflt", 20), ("noluconf", 21), ("noportmore", 22), ("noresource", 23), ("nameresource", 24), ("prtnoluagain", 25), ("noimplu", 26), ("lunotfound", 27), ("valluprt", 28), ("vallu", 29), ("prtlunofind", 30), ("nameinuse", 31), ("reqlunofind", 32), ("valprtagain", 33), ("valluagain", 34), ("luprtnofind", 35), ("poolluinuse", 36), ("poollunofind", 37), ("restypnofind", 38), ("poolluconf", 39), ("lucapreach", 40), ("noappnmem", 41), ("nomoreconn", 42), ("pooldep", 43), ("termnorsp", 44)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmtn3270eConnRejectReason.setStatus('mandatory')
if mibBuilder.loadTexts: ibmtn3270eConnRejectReason.setDescription("The reason the connection was rejected. Some of the values sound similar, but represent different failure points within the TN3270E server software. Also, some values are very specific to the TN3270E server software internals, so they may seem a bit cryptic to the user. noportinfo (1) // GetPortInfo failed to retrieve Port information cliunknown (2) // HostName filter failure - client_hostname unknown clinoauth (3) // Client is not authorized by FilterUser sockblock (4) // Could not make socket nonblocking nodeterm (5) // Node is terminating createfail (6) // TN3270Create failed to create session environment seqnum (7) // 0xFF seq number not doubled negfailed (8) // Negotiation failed notelquale (9) // Not TELQUALE_REQUEST termtypefail (10) // Verification of terminal type failed notypeprtgen (11) // TELQUALE_ASSOCIATE req but not TYPE_PRINTER_GENERIC clirplyfail (12) // Sending reply to client failed. valtelquale (13) // Validation of TELQUALE_REQUEST failed clisendfail (14) // Send to client failed failtelquale (15) // Verification of TELQUAL_IS failed termtypagain (16) // Received invalid terminal type for 2nd time noportagain (17) // GetPortInfo failed to retrieve Port information prtnoluname (18) // Associated printer req. with no LU name specified clinoauthent (19) // Client is not authorized by Filter entries clinoauthflt (20) // Client not authorized by Filter entries after retry noluconf (21) // REJECT_UNSUPP_REQ: No LUs configured. noportmore (22) // GetPortInfo failed to retrieve Port information noresource (23) // No resource spe+cified on Port & no name requested nameresource (24) // Resource specified on Port doesn't match name requested prtnoluagain (25) // Associated printer req. with no LU name specified noimplu (26) // No implicit LUs are available lunotfound (27) // Specified LU not found/available valluprt (28) // Validation of LU type failed for assoc. printer vallu (29) // Validation of LU type failed prtlunofind (30) // LU for associated printer not found nameinuse (31) // LU name requested currently in use reqlunofind (32) // LU requested not found valprtagain (33) // Validation of LU type failed for assoc. printer valluagain (34) // Validation of LU type failed luprtnofind (35) // LU for associated printer not found poolluinuse (36) // Requested pooled LU is already in use poollunofind (37) // Requested pooled LU is not found for assoc. printer restypnofind (38) // Requested type of resource is not found poolluconf (39) // Requested pooled LU is not found in config. list lucapreach (40) // LU capping value reached for this client address noappnmem (41) // APPN memory above the constrained threashold nomoreconn (42) // Max. number of TN3270 connection reached pooldep (43) // The pool from which the resource was requested has been depleted termnorsp (44) // The session was terminated before receiving a response from APPN ")
ibmtn3270eConnRejectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 18, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmtn3270eConnRejectTime.setStatus('mandatory')
if mibBuilder.loadTexts: ibmtn3270eConnRejectTime.setDescription('A string providing the date and time the connection was rejected.')
mibBuilder.exportSymbols("IBM-TN3270E-MIB", ibmtn3270eConnRejectReason=ibmtn3270eConnRejectReason, ibmtn3270eConnRejectTable=ibmtn3270eConnRejectTable, ibmtn3270eMIB=ibmtn3270eMIB, ibmtn3270eConnRejectEntry=ibmtn3270eConnRejectEntry, ibmtn3270eConnRejectIndex=ibmtn3270eConnRejectIndex, ibmtn3270eConnRejectAddrType=ibmtn3270eConnRejectAddrType, ibmtn3270eConnRejectClient=ibmtn3270eConnRejectClient, ibmtn3270eConnRejectTime=ibmtn3270eConnRejectTime)
