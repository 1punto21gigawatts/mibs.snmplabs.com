#
# PySNMP MIB module Juniper-UNI-SONET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Juniper-UNI-SONET-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:04:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
ifIndex, ifAlias, InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifAlias", "InterfaceIndex", "InterfaceIndexOrZero")
juniMibs, = mibBuilder.importSymbols("Juniper-MIBs", "juniMibs")
JuniNextIfIndex, = mibBuilder.importSymbols("Juniper-TC", "JuniNextIfIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ModuleIdentity, Integer32, Bits, iso, Counter64, ObjectIdentity, Unsigned32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, NotificationType, TimeTicks, IpAddress, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Integer32", "Bits", "iso", "Counter64", "ObjectIdentity", "Unsigned32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "NotificationType", "TimeTicks", "IpAddress", "MibIdentifier")
TextualConvention, TruthValue, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString", "RowStatus")
juniSonetMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7))
juniSonetMIB.setRevisions(('2003-07-16 19:52', '2002-11-22 16:37', '2001-10-10 20:42', '2001-01-02 18:00', '1998-11-13 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: juniSonetMIB.setRevisionsDescriptions(('Added path event status and notification support. Updated path creation description. Added missing default values.', 'Replaced Unisphere names with Juniper names. Expanded MIB to include following objects: juniSonetMediumTriggerAlarms juniSonetMediumTriggerDelay juniSonetPathTriggerAlarms juniSonetPathTriggerDelay juniSonetPathC2ByteOverrideFlag juniSonetPathC2ByteOverride ', 'Deprecated juniSonetMediumType, juniSonetMediumCircuitIdentifier and juniSonetVTType.', 'Expanded MIB to include following tables and objects: juniSonetPathCapabilityTable juniSonetPathNextIfIndex juniSonetPathTable juniSonetVTNextIfIndex juniSonetVTTable ', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: juniSonetMIB.setLastUpdated('200307161952Z')
if mibBuilder.loadTexts: juniSonetMIB.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: juniSonetMIB.setContactInfo(' Juniper Networks, Inc. Postal: 10 Technology Park Drive Westford, MA 01886-3146 USA Tel: +1 978 589 5800 Email: mib@Juniper.net')
if mibBuilder.loadTexts: juniSonetMIB.setDescription('The SONET MIB for the Juniper Networks enterprise. This MIB contains managed objects for SONET interfaces. It contains management objects for configuration of interface attributes that either are absent from, or read-only in the standard SONET-MIB.')
class JuniSonetLineSpeed(TextualConvention, Integer32):
    description = 'The set of SONET Line Speeds.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("sonetUnknownSpeed", 0), ("sonetOc1Stm0", 1), ("sonetOc3Stm1", 2), ("sonetOc12Stm3", 3), ("sonetOc48Stm16", 4))

class JuniSonetLogicalPathChannel(TextualConvention, Integer32):
    description = 'A SONET Path channel description that uniquely identifies the SONET Path and is administratively assigned.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class JuniSonetPathHierarchy(TextualConvention, OctetString):
    reference = 'RFC 854: NVT ASCII character set. See SNMPv2-TC.DisplayString DESCRIPTION for a summary.'
    description = 'Represents textual information taken from the NVT ASCII character set. The SONET path hierarchy is based upon the SONET line capacity. Configuration examples follow the diagram below, which depicts the SONET Path hierarchy. OC-192/STM-64 ^ | OC-48/STM-16 (1-4) ^ | OC-12/STM-4 (1-4) ^ | OC-3/STM-1 (1-4) ^ | OC-1/STM-0 (1-3) ^ | ^----------------^----------------^ | | | DS3 (1) VT1.5/TU11 DS1 (1-28) VT2/TU12 (1-21) For Line Speed = OC-48/STM-16: When the entire capacity contains only one path, no specifier is used. OC-12/STM-4 Path To specify an OC-12 path over OC-48 provide a single digit of the form a where: a - OC-12/STM-4 path number (1-4) OC-3/STM-1 Path To specify an OC-3 Path over OC-48 provide two digits of the form a/b where: a - OC-12/STM-4 path number (1-4) b - OC-3/STM-1 path within the OC-12 (1-4) OC-1/STM-0 Path To specify an OC1 Path over OC-48 provide three digits of the form a/b/c where: a - OC-12/STM-4 path number (1-4) b - OC-3/STM-1 path number within OC-12 (1-4) c - OC-1/STM-0 path number within OC-3 (1-3) For Line Speed = OC-12/STM-4: OC-12/STM-4 Path: When entire line capacity contains only one path, no channel-specifier is used. OC-3/STM-1 Path: To specify an OC-3 path over OC-12 provide a single digit of the form a where: a - OC-3/STM-1 path within the OC-12 (1-4) OC-1 Path: To specify an OC-1 path over OC-12 provide two digits of the form a/b where: a - OC-3/STM-1 path within the OC-12 (1-4) b - OC-1/STM-0 path within the OC-3 (1-3) For Line Speed = OC-3/STM-1: OC-3/STM-1 Path: When entire line capacity contains only one path, no channel-specifier is used. OC-1 Path: To specify an OC-1 path over OC-3 provide one digit of the form a where: a - OC-1/STM-1 path within the OC-3 (1-3) '
    status = 'current'
    displayHint = '32a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

class JuniSonetPathC2ByteOverride(TextualConvention, Integer32):
    description = 'SONET Path c2 overhead byte. This value should only be set in cases where the value set by the upper interface type needs to be overridden. Standard values are: 0 Unequipped 1 Nonspecific 2 Floating VT 4 Asyncronous mapping of DS3 19 ATM 22 HDLC over Sonet - scrambling enabled 207 HDLC over Sonet - no scrambling'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 255)

class JuniSonetVTType(TextualConvention, Integer32):
    description = 'The SONET Virtual Tributary Type. This TC has been deprecated because RFC2558 provides this information in SONET-MIB.sonetVTCurrentWidth.'
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 3, 4, 5))
    namedValues = NamedValues(("tribVT15TU11", 0), ("tribVT20TU12", 1), ("tribVT3", 3), ("tribVT6", 4), ("tribVT6c", 5))

juniSonetObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 1))
juniSonetPathObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2))
juniSonetVTObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3))
juniSonetMediumTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 1, 1), )
if mibBuilder.loadTexts: juniSonetMediumTable.setStatus('current')
if mibBuilder.loadTexts: juniSonetMediumTable.setDescription('This table contains entries for SONET interfaces present in the system.')
juniSonetMediumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: juniSonetMediumEntry.setStatus('current')
if mibBuilder.loadTexts: juniSonetMediumEntry.setDescription('Each entry describes the characteristics of an SONET interface.')
juniSonetMediumType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sonet", 1), ("sdh", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniSonetMediumType.setStatus('deprecated')
if mibBuilder.loadTexts: juniSonetMediumType.setDescription('This variable identifies whether a SONET or a SDH signal is used across this interface. This object was deprecated because the same information is provided by the SONET-MIB.sonetMediumType object (RFC 2558).')
juniSonetMediumLoopbackConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("sonetNoLoop", 0), ("sonetFacilityLoop", 1), ("sonetTerminalLoop", 2), ("sonetOtherLoop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniSonetMediumLoopbackConfig.setStatus('current')
if mibBuilder.loadTexts: juniSonetMediumLoopbackConfig.setDescription('The current loopback state of the SONET/SDH interface. The values mean: sonetNoLoop Not in the loopback state. A device that is not capable of performing a loopback on this interface shall always return this value. sonetFacilityLoop The received signal at this interface is looped back out through the corresponding transmitter in the return direction. sonetTerminalLoop The signal that is about to be transmitted is connected to the associated incoming receiver. sonetOtherLoop Loopbacks that are not defined here.')
juniSonetMediumTimingSource = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("loop", 0), ("internalModule", 1), ("internalChassis", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniSonetMediumTimingSource.setStatus('current')
if mibBuilder.loadTexts: juniSonetMediumTimingSource.setDescription('Selects the source from which transmit timing is derived. loop timing is recovered from the receiver internalModule timing is from the module associated with this interface internalChassis timing is taken from the internal system timing reference ')
juniSonetMediumCircuitIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 1, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniSonetMediumCircuitIdentifier.setStatus('deprecated')
if mibBuilder.loadTexts: juniSonetMediumCircuitIdentifier.setDescription("This variable contains the transmission vendor's circuit identifier, for the purpose of facilitating troubleshooting. This object was deprecated because the same information is provided by the SONET-MIB.sonetMediumCircuitIdentifier object (RFC 2558).")
juniSonetMediumTriggerAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 1, 1, 1, 5), Bits().clone(namedValues=NamedValues(("sectionLOS", 0), ("sectionLOF", 1), ("lineAIS", 2), ("lineRDI", 3))).clone(namedValues=NamedValues(("sectionLOS", 0), ("sectionLOS", 0), ("lineAIS", 2), ("lineRDI", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniSonetMediumTriggerAlarms.setStatus('current')
if mibBuilder.loadTexts: juniSonetMediumTriggerAlarms.setDescription('The alarms that are used in the operational status calculation for this SONET interface. sectionLOS When this bit is set, section LOS is used for operational status calculation. sectionLOF When this bit is set, section LOF is used for operational status calculation. lineAIS When this bit is set, line AIS is used for operational status calculation. lineRDI When this bit is set, line RDI is used for operational status calculation. The value of this object defaults to all the bits set, indicating all of the alarms are used for the operational status calculation.')
juniSonetMediumTriggerDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2500)).clone(2500)).setUnits('ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniSonetMediumTriggerDelay.setStatus('current')
if mibBuilder.loadTexts: juniSonetMediumTriggerDelay.setDescription('The time delay (in milliseconds) before a defect is accepted as an alarm for this SONET interface.')
juniSonetPathCapabilityTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 1), )
if mibBuilder.loadTexts: juniSonetPathCapabilityTable.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathCapabilityTable.setDescription('This table contains entries for SONET Paths present in the system.')
juniSonetPathCapabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: juniSonetPathCapabilityEntry.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathCapabilityEntry.setDescription('Each entry describes the SONET path capability of a SONET interface. This table is index by the ifIndex of the SONET interface.')
juniSonetPathRemoveFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniSonetPathRemoveFlag.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathRemoveFlag.setDescription('This variable identifies whether a SONET/SDH supports the deletion of SONET Paths. A value of true(1) indicates the SONET path is removable; a value of false(2) indicates the SONET path cannot be removed.')
juniSonetPathChannelized = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniSonetPathChannelized.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathChannelized.setDescription('Identifies whether or not this SONET interface supports channelization. A value of true(1) indicates the SONET path is channelized; a value of false(2) indicates the SONET path is not channelized.')
juniSonetPathMaximumChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniSonetPathMaximumChannels.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathMaximumChannels.setDescription('Identifies the maximum number of SONET paths/channels for this interface.')
juniSonetPathMinimumPathSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 1, 1, 4), JuniSonetLineSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniSonetPathMinimumPathSpeed.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathMinimumPathSpeed.setDescription('Identifies the minimum SONET path speed for this interface.')
juniSonetPathMaximumPathSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 1, 1, 5), JuniSonetLineSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniSonetPathMaximumPathSpeed.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathMaximumPathSpeed.setDescription('Identifies the maximum SONET path speed for this interface.')
juniSonetPathNextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 2), JuniNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniSonetPathNextIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathNextIfIndex.setDescription('Coordinate ifIndex value allocation for entries in juniSonetPathTable. A GET of this object returns the next available ifIndex value to be used to create an entry in the associated interface table; or zero, if no valid ifIndex value is available. This object also returns a value of zero when it is the lexicographic successor of a varbind presented in an SNMP GETNEXT or GETBULK request, for which circumstance it is assumed that ifIndex allocation is unintended. Successive GETs will typically return different values, thus avoiding collisions among cooperating management clients seeking to create table entries simultaneously.')
juniSonetPathTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3), )
if mibBuilder.loadTexts: juniSonetPathTable.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathTable.setDescription('This table contains entries for SONET Path interfaces present in the system.')
juniSonetPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3, 1), ).setIndexNames((0, "Juniper-UNI-SONET-MIB", "juniSonetPathIfIndex"))
if mibBuilder.loadTexts: juniSonetPathEntry.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathEntry.setDescription('Each entry describes the characteristics of an SONET Path interface.')
juniSonetPathIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: juniSonetPathIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathIfIndex.setDescription('The ifIndex of the SONET Path interface. When creating entries in this table, suitable values for this object are determined by reading juniSonetPathNextIfIndex.')
juniSonetPathLogicalChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3, 1, 2), JuniSonetLogicalPathChannel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniSonetPathLogicalChannel.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathLogicalChannel.setDescription('The logical channel number assigned to this SONET Path. If the underlying SONET interface does not support channelization, the value of this object is zero.')
juniSonetPathSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3, 1, 3), JuniSonetLineSpeed()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniSonetPathSpeed.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathSpeed.setDescription('The line speed associated with this SONET PATH.')
juniSonetPathHierarchy = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3, 1, 4), JuniSonetPathHierarchy()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniSonetPathHierarchy.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathHierarchy.setDescription('The SONET Path hierarchy associated with this path.')
juniSonetPathLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3, 1, 5), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniSonetPathLowerIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathLowerIfIndex.setDescription('The ifIndex of the interface over which this SONET Path interface is to be layered - typically a SONET/SDH interface. A value of zero indicates no layering. An implementation may choose to require that a nonzero value be configured at entry creation.')
juniSonetPathRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniSonetPathRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathRowStatus.setDescription('Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: juniSonetPathRowStatus juniSonetPathSpeed juniSonetPathHierarchy juniSonetPathLowerIfIndex The logical channel may optionally be specified. If it is not specified an unused logical channel value will be assigned by the system. juniSonetPathLogicalChannel In addition, when creating an entry the following conditions must hold: A value for juniSonetPathIfIndex must have been determined previously, by reading juniSonetPathNextIfIndex. The interface identified by the juniSonetPathLowerIfIndex must exist. The juniSonetPathSpeed must be consistent with the speed for the channel specified by the juniSonetPathHierarchy, based on the speed of the interface identified by the juniSonetPathLowerIfIndex. A corresponding entry in ifTable/ifXTable/juniIfTable is created/ destroyed as a result of creating/destroying an entry in this table.')
juniSonetPathTriggerAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3, 1, 7), Bits().clone(namedValues=NamedValues(("pathLOP", 0), ("pathAIS", 1), ("pathRDI", 2))).clone(namedValues=NamedValues(("pathLOP", 0), ("pathAIS", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniSonetPathTriggerAlarms.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathTriggerAlarms.setDescription('The path alarms that are used in the operational status calculation for this SONET Path. pathLOP When this bit is set, path LOP is used for operational status calculation. This bit may not be modified. pathAIS When this bit is set, path AIS is used for operational status calculation. This bit may not be modified. pathRDI When this bit is set, path RDI is used for operational status calculation. The value of this object defaults to bits 0 and 1 set, indication LOP and AIS will be used for operational status calculation this SONET Path.')
juniSonetPathC2ByteOverrideFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniSonetPathC2ByteOverrideFlag.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathC2ByteOverrideFlag.setDescription('The path overhead c2 transmit override enable. If set to true(1), juniSonetPathC2Byte override value must be specified. If set to false(2), c2 byte will be automatically set by the system based on the upper interface type.')
juniSonetPathC2ByteOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3, 1, 9), JuniSonetPathC2ByteOverride()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniSonetPathC2ByteOverride.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathC2ByteOverride.setDescription('The path overhead c2 transmit and expected value for this SONET Path.')
juniSonetPathTriggerDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2500)).clone(2500)).setUnits('ms').setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniSonetPathTriggerDelay.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathTriggerDelay.setDescription('The time delay (in milliseconds) before a defect is accepted as an alarm for this SONET Path.')
juniSonetPathEventStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 2, 3, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: juniSonetPathEventStatus.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathEventStatus.setDescription('This variable specifies which events have occurred in the current 15 minute interval. The value represents a vector of bits, each specifying a unique event: - Bit 0 Rising threshold alarm, sonetPathCurrentESs. - Bit 1 Rising threshold alarm, sonetPathCurrentSESs. - Bit 2 Reserved. - Bit 3 Rising threshold alarm, sonetPathCurrentCVs. - Bit 4 Rising threshold alarm, sonetPathCurrentUASs. - Bit 5 LOP failure indication. - Bit 6 LOP failure cleared. - Bit 7 AIS failure indication. - Bit 8 AIS failure cleared. - Bit 9 RFI indication. - Bit 10 RFI cleared. - Bit 11 UNEQ failure indication. - Bit 12 UNEQ failure cleared. - Bit 13 PLM failure indication. - Bit 14 PLM failure cleared. ')
juniSonetVTNextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 1), JuniNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniSonetVTNextIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniSonetVTNextIfIndex.setDescription('Coordinate ifIndex value allocation for entries in juniSonetVTTable. A GET of this object returns the next available ifIndex value to be used to create an entry in the associated interface table; or zero, if no valid ifIndex value is available. This object also returns a value of zero when it is the lexicographic successor of a varbind presented in an SNMP GETNEXT or GETBULK request, for which circumstance it is assumed that ifIndex allocation is unintended. Successive GETs will typically return different values, thus avoiding collisions among cooperating management clients seeking to create table entries simultaneously.')
juniSonetVTTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2), )
if mibBuilder.loadTexts: juniSonetVTTable.setStatus('current')
if mibBuilder.loadTexts: juniSonetVTTable.setDescription('This table contains entries for SONET Virtual Tributary interfaces present in the system. This table augments the standard SONET-MIB.sonetVTCurrentTable.')
juniSonetVTEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2, 1), ).setIndexNames((0, "Juniper-UNI-SONET-MIB", "juniSonetVTIfIndex"))
if mibBuilder.loadTexts: juniSonetVTEntry.setStatus('current')
if mibBuilder.loadTexts: juniSonetVTEntry.setDescription('Each entry describes the characteristics of an SONET Virtual Tributary interface.')
juniSonetVTIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: juniSonetVTIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniSonetVTIfIndex.setDescription('The ifIndex of the SONET Virtual Tributary interface. When creating entries in this table, suitable values for this object are determined by reading juniSonetVTNextIfIndex.')
juniSonetVTPathLogicalChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2, 1, 2), JuniSonetLogicalPathChannel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniSonetVTPathLogicalChannel.setStatus('current')
if mibBuilder.loadTexts: juniSonetVTPathLogicalChannel.setDescription('The SONET Path logical channel number associated with this virtual tributary.')
juniSonetVTType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2, 1, 3), JuniSonetVTType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniSonetVTType.setStatus('deprecated')
if mibBuilder.loadTexts: juniSonetVTType.setDescription('The SONET virtual tributary type. This object was deprecated because the same information is provided in the SONET-MIB.sonetVTCurrentWidth object.')
juniSonetVTPathPayload = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniSonetVTPathPayload.setStatus('current')
if mibBuilder.loadTexts: juniSonetVTPathPayload.setDescription('The SONET Path payload number associated with this virtual tributary. For SDH mode, this is a value with a range from 1-3. For SONET mode, the value of this object is always 1.')
juniSonetVTTributaryGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniSonetVTTributaryGroup.setStatus('current')
if mibBuilder.loadTexts: juniSonetVTTributaryGroup.setDescription('The SONET Path group number for this virtual tributary. In SONET and SDH mode, the value of this object is 1-7.')
juniSonetVTTributarySubChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniSonetVTTributarySubChannel.setStatus('current')
if mibBuilder.loadTexts: juniSonetVTTributarySubChannel.setDescription('Specifies the virtual tributary number within the tributary group defined by juniSonetVTTributaryGroup object. The value of this object ranges from 1-4 if the tributary type is tribVT15/TU11(0); and the values 1-3 if the tributary type is tribVT20/TU12(1).')
juniSonetVTLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2, 1, 7), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniSonetVTLowerIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniSonetVTLowerIfIndex.setDescription('The ifIndex of the interface over which this SONET Virtual Tributary interface is to be layered - typically a SONET PATH interface. A value of zero indicates no layering. An implementation may choose to require that a nonzero value be configured at entry creation.')
juniSonetVTRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 3, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniSonetVTRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniSonetVTRowStatus.setDescription('Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: juniSonetVTRowStatus juniSonetVTPathLogicalChannel juniSonetVTType juniSonetVTPathPayload juniSonetVTTributaryGroup juniSonetVTTributarySubChannel juniSonetVTLowerIfIndex In addition, when creating an entry the following conditions must hold: A value for juniSonetVTIfIndex must have been determined previously, by reading juniSonetVTNextIfIndex. The interface identified by juniSonetVTLowerIfIndex must exist. A corresponding entry in ifTable/ifXTable/juniIfTable is created/ destroyed as a result of creating/destroying an entry in this table.')
juniSonetTrapControl = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 5))
juniSonetPathEventIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 5, 1), InterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: juniSonetPathEventIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathEventIfIndex.setDescription('The ifIndex of the SONET Path interface. This is the same value as juniSonetPathIfIndex for the interface that is reporting an event.')
juniSonetTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 6))
juniSonetTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 6, 0))
juniSonetPathEvents = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 6, 0, 1)).setObjects(("Juniper-UNI-SONET-MIB", "juniSonetPathEventIfIndex"), ("Juniper-UNI-SONET-MIB", "juniSonetPathEventStatus"), ("IF-MIB", "ifAlias"))
if mibBuilder.loadTexts: juniSonetPathEvents.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathEvents.setDescription('This trap reports SONET path events for the failures and normal conditions of the SONET path entity.')
juniSonetConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4))
juniSonetCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 1))
juniSonetGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 2))
juniSonetCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 1, 1)).setObjects(("Juniper-UNI-SONET-MIB", "juniSonetGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniSonetCompliance = juniSonetCompliance.setStatus('obsolete')
if mibBuilder.loadTexts: juniSonetCompliance.setDescription('Obsolete compliance statement for entities which implement the Juniper SONET MIB. This statement became obsolete when the SONET Path and SONET VT groups of objects were added.')
juniSonetCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 1, 2)).setObjects(("Juniper-UNI-SONET-MIB", "juniSonetGroup"), ("Juniper-UNI-SONET-MIB", "juniSonetPathGroup"), ("Juniper-UNI-SONET-MIB", "juniSonetVirtualTributaryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniSonetCompliance2 = juniSonetCompliance2.setStatus('obsolete')
if mibBuilder.loadTexts: juniSonetCompliance2.setDescription('Obsolete compliance statement for entities which implement the Juniper SONET MIB. This statement became obsolete when the juniSonetMediumType, juniSonetMediumCircuitIdentifier and juniSonetVTType objects were deprecated.')
juniSonetCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 1, 3)).setObjects(("Juniper-UNI-SONET-MIB", "juniSonetGroup2"), ("Juniper-UNI-SONET-MIB", "juniSonetPathGroup"), ("Juniper-UNI-SONET-MIB", "juniSonetVirtualTributaryGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniSonetCompliance3 = juniSonetCompliance3.setStatus('obsolete')
if mibBuilder.loadTexts: juniSonetCompliance3.setDescription('Obsolete compliance statement for entities which implement the Juniper SONET MIB. This statement became obsolete when support was added for alarm triggers and path c2 byte override.')
juniSonetCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 1, 4)).setObjects(("Juniper-UNI-SONET-MIB", "juniSonetGroup3"), ("Juniper-UNI-SONET-MIB", "juniSonetPathGroup2"), ("Juniper-UNI-SONET-MIB", "juniSonetVirtualTributaryGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniSonetCompliance4 = juniSonetCompliance4.setStatus('obsolete')
if mibBuilder.loadTexts: juniSonetCompliance4.setDescription('Obsolete compliance statement for entities which implement the Juniper SONET MIB. This statement became obsolete when the SONET Path event status and notification support was added.')
juniSonetCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 1, 5)).setObjects(("Juniper-UNI-SONET-MIB", "juniSonetGroup3"), ("Juniper-UNI-SONET-MIB", "juniSonetPathGroup3"), ("Juniper-UNI-SONET-MIB", "juniSonetPathNotificationGroup"), ("Juniper-UNI-SONET-MIB", "juniSonetVirtualTributaryGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniSonetCompliance5 = juniSonetCompliance5.setStatus('current')
if mibBuilder.loadTexts: juniSonetCompliance5.setDescription('The compliance statement for entities which implement the Juniper SONET MIB.')
juniSonetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 2, 1)).setObjects(("Juniper-UNI-SONET-MIB", "juniSonetMediumType"), ("Juniper-UNI-SONET-MIB", "juniSonetMediumLoopbackConfig"), ("Juniper-UNI-SONET-MIB", "juniSonetMediumTimingSource"), ("Juniper-UNI-SONET-MIB", "juniSonetMediumCircuitIdentifier"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniSonetGroup = juniSonetGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniSonetGroup.setDescription('Obsolete collection of objects providing management of SONET/SDH interfaces in a Juniper product. This group became obsolete when the juniSonetMediumType and juniSonetMediumCircuitIdentifier objects were deprecated.')
juniSonetPathGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 2, 2)).setObjects(("Juniper-UNI-SONET-MIB", "juniSonetPathRemoveFlag"), ("Juniper-UNI-SONET-MIB", "juniSonetPathChannelized"), ("Juniper-UNI-SONET-MIB", "juniSonetPathMaximumChannels"), ("Juniper-UNI-SONET-MIB", "juniSonetPathMinimumPathSpeed"), ("Juniper-UNI-SONET-MIB", "juniSonetPathMaximumPathSpeed"), ("Juniper-UNI-SONET-MIB", "juniSonetPathNextIfIndex"), ("Juniper-UNI-SONET-MIB", "juniSonetPathLogicalChannel"), ("Juniper-UNI-SONET-MIB", "juniSonetPathSpeed"), ("Juniper-UNI-SONET-MIB", "juniSonetPathHierarchy"), ("Juniper-UNI-SONET-MIB", "juniSonetPathLowerIfIndex"), ("Juniper-UNI-SONET-MIB", "juniSonetPathRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniSonetPathGroup = juniSonetPathGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniSonetPathGroup.setDescription('Obsolete collection of objects providing management of SONET/SDH Path interfaces in a Juniper product. This group became obsolete when new SONET path objects were added.')
juniSonetVirtualTributaryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 2, 3)).setObjects(("Juniper-UNI-SONET-MIB", "juniSonetVTNextIfIndex"), ("Juniper-UNI-SONET-MIB", "juniSonetVTPathLogicalChannel"), ("Juniper-UNI-SONET-MIB", "juniSonetVTType"), ("Juniper-UNI-SONET-MIB", "juniSonetVTPathPayload"), ("Juniper-UNI-SONET-MIB", "juniSonetVTTributaryGroup"), ("Juniper-UNI-SONET-MIB", "juniSonetVTTributarySubChannel"), ("Juniper-UNI-SONET-MIB", "juniSonetVTLowerIfIndex"), ("Juniper-UNI-SONET-MIB", "juniSonetVTRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniSonetVirtualTributaryGroup = juniSonetVirtualTributaryGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniSonetVirtualTributaryGroup.setDescription('Obsolete collection of objects providing management of SONET virtual tributaries in a Juniper product. This group became obsolete when juniSonetVTType was deprecated.')
juniSonetGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 2, 4)).setObjects(("Juniper-UNI-SONET-MIB", "juniSonetMediumLoopbackConfig"), ("Juniper-UNI-SONET-MIB", "juniSonetMediumTimingSource"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniSonetGroup2 = juniSonetGroup2.setStatus('obsolete')
if mibBuilder.loadTexts: juniSonetGroup2.setDescription('Obsolete collection of objects providing management of SONET/SDH interfaces in a Juniper product. This group became obsolete when juniSonetMediumTriggerAlarms was added.')
juniSonetVirtualTributaryGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 2, 5)).setObjects(("Juniper-UNI-SONET-MIB", "juniSonetVTNextIfIndex"), ("Juniper-UNI-SONET-MIB", "juniSonetVTPathLogicalChannel"), ("Juniper-UNI-SONET-MIB", "juniSonetVTPathPayload"), ("Juniper-UNI-SONET-MIB", "juniSonetVTTributaryGroup"), ("Juniper-UNI-SONET-MIB", "juniSonetVTTributarySubChannel"), ("Juniper-UNI-SONET-MIB", "juniSonetVTLowerIfIndex"), ("Juniper-UNI-SONET-MIB", "juniSonetVTRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniSonetVirtualTributaryGroup2 = juniSonetVirtualTributaryGroup2.setStatus('current')
if mibBuilder.loadTexts: juniSonetVirtualTributaryGroup2.setDescription('A collection of objects providing management of SONET virtual tributaries in a Juniper product.')
juniSonetDeprecatedMediumGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 2, 6)).setObjects(("Juniper-UNI-SONET-MIB", "juniSonetMediumType"), ("Juniper-UNI-SONET-MIB", "juniSonetMediumCircuitIdentifier"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniSonetDeprecatedMediumGroup = juniSonetDeprecatedMediumGroup.setStatus('deprecated')
if mibBuilder.loadTexts: juniSonetDeprecatedMediumGroup.setDescription('A collection of deprecated objects providing management of SONET/SDH interfaces in a Juniper product. This group is deprecated because the same information is provided by SONET-MIB objects (RFC 2558). Support for the objects in this group will be phased out over time.')
juniSonetDeprecatedVTGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 2, 7)).setObjects(("Juniper-UNI-SONET-MIB", "juniSonetVTType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniSonetDeprecatedVTGroup = juniSonetDeprecatedVTGroup.setStatus('deprecated')
if mibBuilder.loadTexts: juniSonetDeprecatedVTGroup.setDescription('A deprecated object providing management of SONET/SDH VT interfaces in a Juniper product. This group is deprecated because the same information is provided by SONET-MIB objects (RFC 2558). Support for the VT type object will be phased out over time.')
juniSonetGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 2, 8)).setObjects(("Juniper-UNI-SONET-MIB", "juniSonetMediumLoopbackConfig"), ("Juniper-UNI-SONET-MIB", "juniSonetMediumTimingSource"), ("Juniper-UNI-SONET-MIB", "juniSonetMediumTriggerAlarms"), ("Juniper-UNI-SONET-MIB", "juniSonetMediumTriggerDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniSonetGroup3 = juniSonetGroup3.setStatus('current')
if mibBuilder.loadTexts: juniSonetGroup3.setDescription('A collection of objects providing management of SONET/SDH interfaces in a Juniper product.')
juniSonetPathGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 2, 9)).setObjects(("Juniper-UNI-SONET-MIB", "juniSonetPathRemoveFlag"), ("Juniper-UNI-SONET-MIB", "juniSonetPathChannelized"), ("Juniper-UNI-SONET-MIB", "juniSonetPathMaximumChannels"), ("Juniper-UNI-SONET-MIB", "juniSonetPathMinimumPathSpeed"), ("Juniper-UNI-SONET-MIB", "juniSonetPathMaximumPathSpeed"), ("Juniper-UNI-SONET-MIB", "juniSonetPathNextIfIndex"), ("Juniper-UNI-SONET-MIB", "juniSonetPathLogicalChannel"), ("Juniper-UNI-SONET-MIB", "juniSonetPathSpeed"), ("Juniper-UNI-SONET-MIB", "juniSonetPathHierarchy"), ("Juniper-UNI-SONET-MIB", "juniSonetPathLowerIfIndex"), ("Juniper-UNI-SONET-MIB", "juniSonetPathRowStatus"), ("Juniper-UNI-SONET-MIB", "juniSonetPathTriggerAlarms"), ("Juniper-UNI-SONET-MIB", "juniSonetPathC2ByteOverrideFlag"), ("Juniper-UNI-SONET-MIB", "juniSonetPathC2ByteOverride"), ("Juniper-UNI-SONET-MIB", "juniSonetPathTriggerDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniSonetPathGroup2 = juniSonetPathGroup2.setStatus('obsolete')
if mibBuilder.loadTexts: juniSonetPathGroup2.setDescription('Obsolete collection of management objects providing management of SONET/SDH Path interfaces in a Juniper product. This group became obsolete when path event notification support was added.')
juniSonetPathGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 2, 10)).setObjects(("Juniper-UNI-SONET-MIB", "juniSonetPathRemoveFlag"), ("Juniper-UNI-SONET-MIB", "juniSonetPathChannelized"), ("Juniper-UNI-SONET-MIB", "juniSonetPathMaximumChannels"), ("Juniper-UNI-SONET-MIB", "juniSonetPathMinimumPathSpeed"), ("Juniper-UNI-SONET-MIB", "juniSonetPathMaximumPathSpeed"), ("Juniper-UNI-SONET-MIB", "juniSonetPathNextIfIndex"), ("Juniper-UNI-SONET-MIB", "juniSonetPathLogicalChannel"), ("Juniper-UNI-SONET-MIB", "juniSonetPathSpeed"), ("Juniper-UNI-SONET-MIB", "juniSonetPathHierarchy"), ("Juniper-UNI-SONET-MIB", "juniSonetPathLowerIfIndex"), ("Juniper-UNI-SONET-MIB", "juniSonetPathRowStatus"), ("Juniper-UNI-SONET-MIB", "juniSonetPathTriggerAlarms"), ("Juniper-UNI-SONET-MIB", "juniSonetPathC2ByteOverrideFlag"), ("Juniper-UNI-SONET-MIB", "juniSonetPathC2ByteOverride"), ("Juniper-UNI-SONET-MIB", "juniSonetPathTriggerDelay"), ("Juniper-UNI-SONET-MIB", "juniSonetPathEventIfIndex"), ("Juniper-UNI-SONET-MIB", "juniSonetPathEventStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniSonetPathGroup3 = juniSonetPathGroup3.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathGroup3.setDescription('A collection of objects providing management of SONET/SDH Path interfaces in a Juniper product.')
juniSonetPathNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 7, 4, 2, 11)).setObjects(("Juniper-UNI-SONET-MIB", "juniSonetPathEvents"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniSonetPathNotificationGroup = juniSonetPathNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: juniSonetPathNotificationGroup.setDescription('A management notification for signaling SONET Path interface status changes in a Juniper product.')
mibBuilder.exportSymbols("Juniper-UNI-SONET-MIB", juniSonetPathEvents=juniSonetPathEvents, juniSonetPathCapabilityTable=juniSonetPathCapabilityTable, juniSonetGroup2=juniSonetGroup2, juniSonetPathGroup=juniSonetPathGroup, juniSonetPathCapabilityEntry=juniSonetPathCapabilityEntry, juniSonetVTPathPayload=juniSonetVTPathPayload, juniSonetVTRowStatus=juniSonetVTRowStatus, juniSonetMediumTimingSource=juniSonetMediumTimingSource, juniSonetMediumLoopbackConfig=juniSonetMediumLoopbackConfig, juniSonetPathMinimumPathSpeed=juniSonetPathMinimumPathSpeed, juniSonetTraps=juniSonetTraps, juniSonetObjects=juniSonetObjects, juniSonetVTEntry=juniSonetVTEntry, juniSonetVirtualTributaryGroup2=juniSonetVirtualTributaryGroup2, juniSonetCompliance5=juniSonetCompliance5, juniSonetVTNextIfIndex=juniSonetVTNextIfIndex, juniSonetVTPathLogicalChannel=juniSonetVTPathLogicalChannel, juniSonetMediumEntry=juniSonetMediumEntry, juniSonetMediumTriggerAlarms=juniSonetMediumTriggerAlarms, JuniSonetPathHierarchy=JuniSonetPathHierarchy, juniSonetCompliance3=juniSonetCompliance3, juniSonetGroup=juniSonetGroup, juniSonetPathMaximumChannels=juniSonetPathMaximumChannels, juniSonetPathObjects=juniSonetPathObjects, juniSonetConformance=juniSonetConformance, juniSonetVTTributarySubChannel=juniSonetVTTributarySubChannel, juniSonetCompliances=juniSonetCompliances, juniSonetGroup3=juniSonetGroup3, juniSonetPathNextIfIndex=juniSonetPathNextIfIndex, juniSonetPathLowerIfIndex=juniSonetPathLowerIfIndex, juniSonetPathRowStatus=juniSonetPathRowStatus, juniSonetVTTable=juniSonetVTTable, JuniSonetLineSpeed=JuniSonetLineSpeed, juniSonetCompliance=juniSonetCompliance, juniSonetTrapPrefix=juniSonetTrapPrefix, juniSonetVTType=juniSonetVTType, juniSonetMediumTable=juniSonetMediumTable, juniSonetVTIfIndex=juniSonetVTIfIndex, juniSonetPathEventIfIndex=juniSonetPathEventIfIndex, juniSonetVirtualTributaryGroup=juniSonetVirtualTributaryGroup, juniSonetPathTriggerDelay=juniSonetPathTriggerDelay, juniSonetDeprecatedVTGroup=juniSonetDeprecatedVTGroup, juniSonetPathMaximumPathSpeed=juniSonetPathMaximumPathSpeed, juniSonetPathGroup2=juniSonetPathGroup2, juniSonetPathSpeed=juniSonetPathSpeed, JuniSonetPathC2ByteOverride=JuniSonetPathC2ByteOverride, juniSonetCompliance4=juniSonetCompliance4, juniSonetPathGroup3=juniSonetPathGroup3, JuniSonetVTType=JuniSonetVTType, JuniSonetLogicalPathChannel=JuniSonetLogicalPathChannel, juniSonetPathChannelized=juniSonetPathChannelized, juniSonetPathHierarchy=juniSonetPathHierarchy, juniSonetMediumTriggerDelay=juniSonetMediumTriggerDelay, juniSonetPathLogicalChannel=juniSonetPathLogicalChannel, juniSonetVTTributaryGroup=juniSonetVTTributaryGroup, juniSonetPathIfIndex=juniSonetPathIfIndex, juniSonetPathEventStatus=juniSonetPathEventStatus, juniSonetVTObjects=juniSonetVTObjects, juniSonetVTLowerIfIndex=juniSonetVTLowerIfIndex, juniSonetGroups=juniSonetGroups, juniSonetPathNotificationGroup=juniSonetPathNotificationGroup, juniSonetDeprecatedMediumGroup=juniSonetDeprecatedMediumGroup, PYSNMP_MODULE_ID=juniSonetMIB, juniSonetMediumType=juniSonetMediumType, juniSonetPathTable=juniSonetPathTable, juniSonetPathTriggerAlarms=juniSonetPathTriggerAlarms, juniSonetTrapControl=juniSonetTrapControl, juniSonetMIB=juniSonetMIB, juniSonetMediumCircuitIdentifier=juniSonetMediumCircuitIdentifier, juniSonetCompliance2=juniSonetCompliance2, juniSonetPathEntry=juniSonetPathEntry, juniSonetPathC2ByteOverride=juniSonetPathC2ByteOverride, juniSonetPathC2ByteOverrideFlag=juniSonetPathC2ByteOverrideFlag, juniSonetPathRemoveFlag=juniSonetPathRemoveFlag)
