#
# PySNMP MIB module DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:52:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
docsDevEvLevel, docsDevSwServer, docsDevEvId, docsDevServerDhcp, docsDevServerTime, docsDevSwFilename, docsDevEvText = mibBuilder.importSymbols("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel", "docsDevSwServer", "docsDevEvId", "docsDevServerDhcp", "docsDevServerTime", "docsDevSwFilename", "docsDevEvText")
docsIfCmtsCmStatusDocsisRegMode, docsIfCmtsCmStatusModulationType, docsIfCmStatusModulationType, docsIfCmCmtsAddress, docsIfCmtsCmStatusMacAddress, docsIfDocsisBaseCapability, docsIfCmStatusDocsisOperMode = mibBuilder.importSymbols("DOCS-IF-MIB", "docsIfCmtsCmStatusDocsisRegMode", "docsIfCmtsCmStatusModulationType", "docsIfCmStatusModulationType", "docsIfCmCmtsAddress", "docsIfCmtsCmStatusMacAddress", "docsIfDocsisBaseCapability", "docsIfCmStatusDocsisOperMode")
ifPhysAddress, = mibBuilder.importSymbols("IF-MIB", "ifPhysAddress")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Counter64, Counter32, MibIdentifier, ObjectIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Gauge32, Unsigned32, TimeTicks, IpAddress, mib_2, Integer32, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Counter32", "MibIdentifier", "ObjectIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Gauge32", "Unsigned32", "TimeTicks", "IpAddress", "mib-2", "Integer32", "ModuleIdentity", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
docsDevNotifMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 132))
docsDevNotifMIB.setRevisions(('2006-05-24 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: docsDevNotifMIB.setRevisionsDescriptions(('Initial version, published as RFC 4547.',))
if mibBuilder.loadTexts: docsDevNotifMIB.setLastUpdated('200605240000Z')
if mibBuilder.loadTexts: docsDevNotifMIB.setOrganization('IETF IP over Cable Data Network Working Group')
if mibBuilder.loadTexts: docsDevNotifMIB.setContactInfo(' Azlina Ahmad Postal: Cisco Systems, Inc. 170 West Tasman Drive San Jose, CA 95134, U.S.A. Phone: 408 853 7927 E-mail: azlina@cisco.com Greg Nakanishi Postal: Motorola 6450 Sequence Drive San Diego, CA 92121, U.S.A. Phone: 858 404 2366 E-mail: gnakanishi@motorola.com IETF IPCDN Working Group General Discussion: ipcdn@ietf.org Subscribe: http://www.ietf.org/mailman/listinfo/ipcdn Archive: ftp://ftp.ietf.org/ietf-mail-archive/ipcdn Co-chairs: Richard Woundy, richard_woundy@cable.comcast.com Jean-Francois Mule, jf.mule@cablelabs.com')
if mibBuilder.loadTexts: docsDevNotifMIB.setDescription('The Event Notification MIB is an extension of the CABLE DEVICE MIB. It defines various notification objects for both cable modem and cable modem termination systems. Two groups of SNMP notification objects are defined. One group is for notifying cable modem events, and one group is for notifying cable modem termination system events. DOCSIS defines numerous events, and each event is assigned to a functional category. This MIB defines a notification object for each functional category. The varbinding list of each notification includes information about the event that occurred on the device. Copyright (C) The Internet Society (2006). This version of this MIB module is part of RFC 4547; see the RFC itself for full legal notices.')
docsDevNotifControl = MibIdentifier((1, 3, 6, 1, 2, 1, 132, 1))
docsDevCmNotifs = MibIdentifier((1, 3, 6, 1, 2, 1, 132, 2, 0))
docsDevCmtsNotifs = MibIdentifier((1, 3, 6, 1, 2, 1, 132, 3, 0))
docsDevCmNotifControl = MibScalar((1, 3, 6, 1, 2, 1, 132, 1, 1), Bits().clone(namedValues=NamedValues(("cmInitTLVUnknownNotif", 0), ("cmDynServReqFailNotif", 1), ("cmDynServRspFailNotif", 2), ("cmDynServAckFailNotif", 3), ("cmBpiInitNotif", 4), ("cmBPKMNotif", 5), ("cmDynamicSANotif", 6), ("cmDHCPFailNotif", 7), ("cmSwUpgradeInitNotif", 8), ("cmSwUpgradeFailNotif", 9), ("cmSwUpgradeSuccessNotif", 10), ("cmSwUpgradeCVCNotif", 11), ("cmTODFailNotif", 12), ("cmDCCReqFailNotif", 13), ("cmDCCRspFailNotif", 14), ("cmDCCAckFailNotif", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDevCmNotifControl.setStatus('current')
if mibBuilder.loadTexts: docsDevCmNotifControl.setDescription('The object is used to enable specific CM notifications. For example, if the first bit is set, then docsDevCmInitTLVUnknownNotif is enabled. If it is not set, the notification is disabled. Note that notifications are also under the control of the MIB modules defined in RFC3413. If the device is rebooted,the value of this object SHOULD revert to the default value. ')
docsDevCmtsNotifControl = MibScalar((1, 3, 6, 1, 2, 1, 132, 1, 2), Bits().clone(namedValues=NamedValues(("cmtsInitRegReqFailNotif", 0), ("cmtsInitRegRspFailNotif", 1), ("cmtsInitRegAckFailNotif", 2), ("cmtsDynServReqFailNotif", 3), ("cmtsDynServRspFailNotif", 4), ("cmtsDynServAckFailNotif", 5), ("cmtsBpiInitNotif", 6), ("cmtsBPKMNotif", 7), ("cmtsDynamicSANotif", 8), ("cmtsDCCReqFailNotif", 9), ("cmtsDCCRspFailNotif", 10), ("cmtsDCCAckFailNotif", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDevCmtsNotifControl.setStatus('current')
if mibBuilder.loadTexts: docsDevCmtsNotifControl.setDescription('The object is used to enable specific CMTS notifications. For example, if the first bit is set, then docsDevCmtsInitRegRspFailNotif is enabled. If it is not set, the notification is disabled. Note that notifications are also under the control of the MIB modules defined in RFC3413. If the device is rebooted,the value of this object SHOULD revert to the default value. ')
docsDevCmInitTLVUnknownNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 2, 0, 1)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmCmtsAddress"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmStatusDocsisOperMode"), ("DOCS-IF-MIB", "docsIfCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmInitTLVUnknownNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmInitTLVUnknownNotif.setDescription('Notification to indicate that an unknown TLV was encountered during the TLV parsing process. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - ifPhysAddress: the MAC address of the cable interface of this cable modem. - docsIfCmCmtsAddress: the MAC address of the CMTS to which the CM is connected (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface to which it is connected). - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmStatusDocsisOperMode: the QOS level (1.0, 1.1) that the CM is operating in. - docsIfCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmDynServReqFailNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 2, 0, 2)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmCmtsAddress"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmStatusDocsisOperMode"), ("DOCS-IF-MIB", "docsIfCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmDynServReqFailNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmDynServReqFailNotif.setDescription('A notification to report the failure of a dynamic service request during the dynamic services process. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - ifPhysAddress: the MAC address of the cable interface of this cable modem. - docsIfCmCmtsAddress: the MAC address of the CMTS to which the CM is connected to (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface to which it is connected). - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmStatusDocsisOperMode: the QOS level (1.0, 1.1) that the CM is operating in. - docsIfCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmDynServRspFailNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 2, 0, 3)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmCmtsAddress"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmStatusDocsisOperMode"), ("DOCS-IF-MIB", "docsIfCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmDynServRspFailNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmDynServRspFailNotif.setDescription(' A notification to report the failure of a dynamic service response during the dynamic services process. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - ifPhysAddress: the MAC address of the cable interface of this cable modem. - docsIfCmCmtsAddress: the MAC address of the CMTS to which the CM is connected (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface to which it is connected). - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmStatusDocsisOperMode: the QOS level (1.0, 1.1) that the CM is operating in. - docsIfCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmDynServAckFailNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 2, 0, 4)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmCmtsAddress"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmStatusDocsisOperMode"), ("DOCS-IF-MIB", "docsIfCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmDynServAckFailNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmDynServAckFailNotif.setDescription('A notification to report the failure of a dynamic service acknowledgement during the dynamic services process. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - ifPhysAddress: the MAC address of the cable interface of this cable modem. - docsIfCmCmtsAddress: the MAC address of the CMTS to which the CM is connected (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface to which it is connected). - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmStatusDocsisOperMode: the QOS level (1.0, 1.1) that the CM is operating in. - docsIfCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmBpiInitNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 2, 0, 5)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmCmtsAddress"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmStatusDocsisOperMode"), ("DOCS-IF-MIB", "docsIfCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmBpiInitNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmBpiInitNotif.setDescription('A notification to report the failure of a BPI initialization attempt during the registration process. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - ifPhysAddress: the MAC address of the cable interface of this cable modem. - docsIfCmCmtsAddress: the MAC address of the CMTS to which the CM is connected (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface to which it is connected). - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmStatusDocsisOperMode: the QOS level (1.0, 1.1) that the CM is operating in. - docsIfCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmBPKMNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 2, 0, 6)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmCmtsAddress"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmStatusDocsisOperMode"), ("DOCS-IF-MIB", "docsIfCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmBPKMNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmBPKMNotif.setDescription('A notification to report the failure of a Baseline Privacy Key Management (BPKM) operation. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - ifPhysAddress: the MAC address of the cable interface of this cable modem. - docsIfCmCmtsAddress: the MAC address of the CMTS to which the CM is connected (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface to which it is connected). - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmStatusDocsisOperMode: the QOS level (1.0, 1.1) that the CM is operating in. - docsIfCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmDynamicSANotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 2, 0, 7)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmCmtsAddress"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmStatusDocsisOperMode"), ("DOCS-IF-MIB", "docsIfCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmDynamicSANotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmDynamicSANotif.setDescription('A notification to report the failure of a dynamic security association operation. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - ifPhysAddress: the MAC address of the cable interface of this cable modem. - docsIfCmCmtsAddress: the MAC address of the CMTS to which the CM is connected (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface to which it is connected). - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmStatusDocsisOperMode: the QOS level (1.0, 1.1) that the CM is operating in. - docsIfCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmDHCPFailNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 2, 0, 8)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmCmtsAddress"), ("DOCS-CABLE-DEVICE-MIB", "docsDevServerDhcp"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmStatusDocsisOperMode"), ("DOCS-IF-MIB", "docsIfCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmDHCPFailNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmDHCPFailNotif.setDescription('A notification to report the failure of a DHCP operation. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - ifPhysAddress: the MAC address of the cable interface of this cable modem. - docsIfCmCmtsAddress: the MAC address of the CMTS to which the CM is connected (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface to which it is connected). - docsDevServerDhcp: the IP address of the DHCP server. - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmStatusDocsisOperMode: the QOS level (1.0, 1.1) that the CM is operating in. - docsIfCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmSwUpgradeInitNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 2, 0, 9)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmCmtsAddress"), ("DOCS-CABLE-DEVICE-MIB", "docsDevSwFilename"), ("DOCS-CABLE-DEVICE-MIB", "docsDevSwServer"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmStatusDocsisOperMode"), ("DOCS-IF-MIB", "docsIfCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmSwUpgradeInitNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmSwUpgradeInitNotif.setDescription('A notification to indicate that a software upgrade has been initiated on the device. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - ifPhysAddress: the MAC address of the cable interface of this cable modem. - docsIfCmCmtsAddress: the MAC address of the CMTS to which the CM is connected (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface to which it is connected). - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmStatusDocsisOperMode: the QOS level (1.0, 1.1) that the CM is operating in. - docsIfCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmSwUpgradeFailNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 2, 0, 10)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmCmtsAddress"), ("DOCS-CABLE-DEVICE-MIB", "docsDevSwFilename"), ("DOCS-CABLE-DEVICE-MIB", "docsDevSwServer"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmStatusDocsisOperMode"), ("DOCS-IF-MIB", "docsIfCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmSwUpgradeFailNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmSwUpgradeFailNotif.setDescription('A notification to report the failure of a software upgrade attempt. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - ifPhysAddress: the MAC address of the cable interface of this cable modem. - docsIfCmCmtsAddress: the MAC address of the CMTS to which the CM is connected (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface to which it is connected). - docsDevSwFilename: the software image file name - docsDevSwServer: the IP address of the server that the image is retrieved from. - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmStatusDocsisOperMode: the QOS level (1.0, 1.1) that the CM is operating in. - docsIfCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmSwUpgradeSuccessNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 2, 0, 11)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmCmtsAddress"), ("DOCS-CABLE-DEVICE-MIB", "docsDevSwFilename"), ("DOCS-CABLE-DEVICE-MIB", "docsDevSwServer"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmStatusDocsisOperMode"), ("DOCS-IF-MIB", "docsIfCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmSwUpgradeSuccessNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmSwUpgradeSuccessNotif.setDescription('A notification to report the software upgrade success status. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - ifPhysAddress: the MAC address of the cable interface of this cable modem. - docsIfCmCmtsAddress: the MAC address of the CMTS to which the CM is connected (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface to which it is connected). - docsDevSwFilename: the software image file name - docsDevSwServer: the IP address of the server that the image is retrieved from. - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmStatusDocsisOperMode: the QOS level (1.0, 1.1) that the CM is operating in. - docsIfCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmSwUpgradeCVCFailNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 2, 0, 12)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmCmtsAddress"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmStatusDocsisOperMode"), ("DOCS-IF-MIB", "docsIfCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmSwUpgradeCVCFailNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmSwUpgradeCVCFailNotif.setDescription('A notification to report that the verification of the code file has failed during a secure software upgrade attempt. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - ifPhysAddress: the MAC address of the cable interface of this cable modem. - docsIfCmCmtsAddress: the MAC address of the CMTS to which the CM is connected (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface to which it is connected). - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmStatusDocsisOperMode: the QOS level (1.0, 1.1) that the CM is operating in. - docsIfCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmTODFailNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 2, 0, 13)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmCmtsAddress"), ("DOCS-CABLE-DEVICE-MIB", "docsDevServerTime"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmStatusDocsisOperMode"), ("DOCS-IF-MIB", "docsIfCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmTODFailNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmTODFailNotif.setDescription('A notification to report the failure of a time of day operation. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - ifPhysAddress: the MAC address of the cable interface of this cable modem. - docsIfCmCmtsAddress: the MAC address of the CMTS to which the CM is connected (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface to which it is connected). - docsDevServerTime: the IP address of the time server. - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmStatusDocsisOperMode: the QOS level (1.0, 1.1) that the CM is operating in. - docsIfCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmDCCReqFailNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 2, 0, 14)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmCmtsAddress"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmStatusDocsisOperMode"), ("DOCS-IF-MIB", "docsIfCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmDCCReqFailNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmDCCReqFailNotif.setDescription(' A notification to report the failure of a dynamic channel change request during the dynamic channel change process on the CM. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - ifPhysAddress: the MAC address of the cable interface of this cable modem. - docsIfCmCmtsAddress: the MAC address of the CMTS to which the CM is connected (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface to which it is connected). - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmStatusDocsisOperMode: the QOS level (1.0, 1.1) that the CM is operating in. - docsIfCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmDCCRspFailNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 2, 0, 15)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmCmtsAddress"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmStatusDocsisOperMode"), ("DOCS-IF-MIB", "docsIfCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmDCCRspFailNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmDCCRspFailNotif.setDescription('A notification to report the failure of a dynamic channel change response during the dynamic channel change process on the CM. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - ifPhysAddress: the MAC address of the cable interface of this cable modem. - docsIfCmCmtsAddress: the MAC address of the CMTS to which the CM is connected (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface to which it is connected). - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmStatusDocsisOperMode: the QOS level (1.0, 1.1) that the CM is operating in. - docsIfCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmDCCAckFailNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 2, 0, 16)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmCmtsAddress"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmStatusDocsisOperMode"), ("DOCS-IF-MIB", "docsIfCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmDCCAckFailNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmDCCAckFailNotif.setDescription('A notification to report the failure of a dynamic channel change acknowledgement during the dynamic channel change process on the CM. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - ifPhysAddress: the MAC address of the cable interface of this cable modem. - docsIfCmCmtsAddress: the MAC address of the CMTS to which the CM is connected (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface to which it is connected). - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmStatusDocsisOperMode: the QOS level (1.0, 1.1) that the CM is operating in. - docsIfCmtsCmStatusModulationType the upstream modulation methodology used by the CM. ')
docsDevCmtsInitRegReqFailNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 3, 0, 1)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusMacAddress"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusDocsisRegMode"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmtsInitRegReqFailNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmtsInitRegReqFailNotif.setDescription('A notification to report the failure of a registration request from a CM during the CM initialization process that was detected on the CMTS. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - docsIfCmtsCmStatusMacAddress: the MAC address of the CM with which this notification is associated. - ifPhysAddress: the MAC address of the CMTS (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface that connected to the CM) cable interface connected to the CM. - docsIfCmtsCmStatusDocsisRegMode: the QOS level (1.0, 1.1) that the reporting CM is operating in. - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmtsCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmtsInitRegRspFailNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 3, 0, 2)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusMacAddress"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusDocsisRegMode"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmtsInitRegRspFailNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmtsInitRegRspFailNotif.setDescription('A notification to report the failure of a registration response during the CM initialization process that was detected by the CMTS. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - docsIfCmtsCmStatusMacAddress: the MAC address of the CM with which this notification is associated. - ifPhysAddress: the MAC address of the CMTS (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface that connected to the CM) cable interface connected to the CM. - docsIfCmtsCmStatusDocsisRegMode: the QOS level (1.0, 1.1) that the reporting CM is operating in. - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmtsCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmtsInitRegAckFailNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 3, 0, 3)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusMacAddress"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusDocsisRegMode"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmtsInitRegAckFailNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmtsInitRegAckFailNotif.setDescription('A notification to report the failure of a registration acknowledgement from the CM during the CM initialization process that was detected by the CMTS. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - docsIfCmtsCmStatusMacAddress: the MAC address of the CM with which this notification is associated. - ifPhysAddress: the MAC address of the CMTS (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface that connected to the CM) cable interface connected to the CM. - docsIfCmtsCmStatusDocsisRegMode: the QOS level (1.0, 1.1) that the reporting CM is operating in. - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmtsCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmtsDynServReqFailNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 3, 0, 4)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusMacAddress"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusDocsisRegMode"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmtsDynServReqFailNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmtsDynServReqFailNotif.setDescription('A notification to report the failure of a dynamic service request during the dynamic services process that was detected by the CMTS. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - docsIfCmtsCmStatusMacAddress: the MAC address of the CM with which this notification is associated. - ifPhysAddress: the MAC address of the CMTS (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface that connected to the CM) cable interface connected to the CM. - docsIfCmtsCmStatusDocsisRegMode: the QOS level (1.0, 1.1) that the reporting CM is operating in. - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmtsCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmtsDynServRspFailNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 3, 0, 5)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusMacAddress"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusDocsisRegMode"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmtsDynServRspFailNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmtsDynServRspFailNotif.setDescription('A notification to report the failure of a dynamic service response during the dynamic services process that was detected by the CMTS. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - docsIfCmtsCmStatusMacAddress: the MAC address of the CM with which this notification is associated. - ifPhysAddress: the MAC address of the CMTS (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface that connected to the CM) cable interface connected to the CM. - docsIfCmtsCmStatusDocsisRegMode: the QOS level (1.0, 1.1) that the reporting CM is operating in. - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmtsCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmtsDynServAckFailNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 3, 0, 6)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusMacAddress"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusDocsisRegMode"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmtsDynServAckFailNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmtsDynServAckFailNotif.setDescription('A notification to report the failure of a dynamic service acknowledgement during the dynamic services process that was detected by the CMTS. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - docsIfCmtsCmStatusMacAddress: the MAC address of the CM with which this notification is associated. - ifPhysAddress: the MAC address of the CMTS (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface that connected to the CM) cable interface connected to the CM. - docsIfCmtsCmStatusDocsisRegMode: the QOS level (1.0, 1.1) that the reporting CM is operating in. - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmtsCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmtsBpiInitNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 3, 0, 7)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusMacAddress"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusDocsisRegMode"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmtsBpiInitNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmtsBpiInitNotif.setDescription('A notification to report the failure of a BPI initialization attempt during the CM registration process that was detected by the CMTS. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - docsIfCmtsCmStatusMacAddress: the MAC address of the CM with which this notification is associated. - ifPhysAddress: the MAC address of the CMTS (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface that connected to the CM) cable interface connected to the CM. - docsIfCmtsCmStatusDocsisRegMode: the QOS level (1.0, 1.1) that the reporting CM is operating in. - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmtsCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmtsBPKMNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 3, 0, 8)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusMacAddress"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusDocsisRegMode"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmtsBPKMNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmtsBPKMNotif.setDescription('A notification to report the failure of a BPKM operation that is detected by the CMTS. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - docsIfCmtsCmStatusMacAddress: the MAC address of the CM with which this notification is associated. - ifPhysAddress: the MAC address of the CMTS (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface that connected to the CM) cable interface connected to the CM. - docsIfCmtsCmStatusDocsisRegMode: the QOS level (1.0, 1.1) that the reporting CM is operating in. - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmtsCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmtsDynamicSANotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 3, 0, 9)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusMacAddress"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusDocsisRegMode"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmtsDynamicSANotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmtsDynamicSANotif.setDescription('A notification to report the failure of a dynamic security association operation that is detected by the CMTS. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - docsIfCmtsCmStatusMacAddress: the MAC address of the CM with which this notification is associated. - ifPhysAddress: the MAC address of the CMTS (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface that connected to the CM) cable interface connected to the CM. - docsIfCmtsCmStatusDocsisRegMode: the QOS level (1.0, 1.1) that the reporting CM is operating in. - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmtsCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmtsDCCReqFailNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 3, 0, 10)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusMacAddress"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusDocsisRegMode"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmtsDCCReqFailNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmtsDCCReqFailNotif.setDescription('A notification to report the failure of a dynamic channel change request during the dynamic channel change process and is detected by the CMTS. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - docsIfCmtsCmStatusMacAddress: the MAC address of the CM with which this notification is associated. - ifPhysAddress: the MAC address of the CMTS (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface that connected to the CM) cable interface connected to the CM. - docsIfCmtsCmStatusDocsisRegMode: the QOS level (1.0, 1.1) that the reporting CM is operating in. - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmtsCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmtsDCCRspFailNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 3, 0, 11)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusMacAddress"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusDocsisRegMode"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmtsDCCRspFailNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmtsDCCRspFailNotif.setDescription('A notification to report the failure of a dynamic channel change response during the dynamic channel change process and is detected by the CMTS. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - docsIfCmtsCmStatusMacAddress: the MAC address of the CM with which this notification is associated. - ifPhysAddress: the MAC address of the CMTS (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface that connected to the CM) cable interface connected to the CM. - docsIfCmtsCmStatusDocsisRegMode: the QOS level (1.0, 1.1) that the reporting CM is operating in. - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmtsCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevCmtsDCCAckFailNotif = NotificationType((1, 3, 6, 1, 2, 1, 132, 3, 0, 12)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusMacAddress"), ("IF-MIB", "ifPhysAddress"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusDocsisRegMode"), ("DOCS-IF-MIB", "docsIfDocsisBaseCapability"), ("DOCS-IF-MIB", "docsIfCmtsCmStatusModulationType"))
if mibBuilder.loadTexts: docsDevCmtsDCCAckFailNotif.setStatus('current')
if mibBuilder.loadTexts: docsDevCmtsDCCAckFailNotif.setDescription('A notification to report the failure of a dynamic channel change acknowledgement during the dynamic channel change process and is detected by the CMTS. This notification sends additional information about the event by including the following objects in its varbinding list. - docsDevEvLevel: the priority level associated with the event. - docsDevEvId: the unique identifier of the event that occurred. - docsDevEvText: a textual description of the event. - docsIfCmtsCmStatusMacAddress: the MAC address of the CM with which this notification is associated. - ifPhysAddress: the MAC address of the CMTS (if there is a cable card/interface in the CMTS, then it is actually the MAC address of the cable interface that connected to the CM) cable interface connected to the CM. - docsIfCmtsCmStatusDocsisRegMode: the QOS level (1.0, 1.1) that the reporting CM is operating in. - docsIfDocsisBaseCapability: the highest version of the DOCSIS specification (1.0, 1.1, 2.0) that the device is capable of supporting. - docsIfCmtsCmStatusModulationType: the upstream modulation methodology used by the CM. ')
docsDevNotifConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 132, 4))
docsDevNotifGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 132, 4, 1))
docsDevNotifCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 132, 4, 2))
docsDevCmNotifCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 132, 4, 2, 1)).setObjects(("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmNotifControlGroup"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsDevCmNotifCompliance = docsDevCmNotifCompliance.setStatus('current')
if mibBuilder.loadTexts: docsDevCmNotifCompliance.setDescription('The compliance statement for CM Notifications and Control.')
docsDevCmNotifControlGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 132, 4, 1, 1)).setObjects(("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmNotifControl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsDevCmNotifControlGroup = docsDevCmNotifControlGroup.setStatus('current')
if mibBuilder.loadTexts: docsDevCmNotifControlGroup.setDescription('This group represents objects that allow control over CM Notifications.')
docsDevCmNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 132, 4, 1, 2)).setObjects(("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmInitTLVUnknownNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmDynServReqFailNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmDynServRspFailNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmDynServAckFailNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmBpiInitNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmBPKMNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmDynamicSANotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmDHCPFailNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmSwUpgradeInitNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmSwUpgradeFailNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmSwUpgradeSuccessNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmSwUpgradeCVCFailNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmTODFailNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmDCCReqFailNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmDCCRspFailNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmDCCAckFailNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsDevCmNotificationGroup = docsDevCmNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: docsDevCmNotificationGroup.setDescription('A collection of CM notifications providing device status and control.')
docsDevCmtsNotifCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 132, 4, 2, 2)).setObjects(("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmtsNotifControlGroup"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmtsNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsDevCmtsNotifCompliance = docsDevCmtsNotifCompliance.setStatus('current')
if mibBuilder.loadTexts: docsDevCmtsNotifCompliance.setDescription('The compliance statement for DOCSIS CMTS Notification and Control.')
docsDevCmtsNotifControlGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 132, 4, 1, 3)).setObjects(("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmtsNotifControl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsDevCmtsNotifControlGroup = docsDevCmtsNotifControlGroup.setStatus('current')
if mibBuilder.loadTexts: docsDevCmtsNotifControlGroup.setDescription('This group represents objects that allow control over CMTS Notifications.')
docsDevCmtsNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 132, 4, 1, 4)).setObjects(("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmtsInitRegReqFailNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmtsInitRegRspFailNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmtsInitRegAckFailNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmtsDynServReqFailNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmtsDynServRspFailNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmtsDynServAckFailNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmtsBpiInitNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmtsBPKMNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmtsDynamicSANotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmtsDCCReqFailNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmtsDCCRspFailNotif"), ("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", "docsDevCmtsDCCAckFailNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsDevCmtsNotificationGroup = docsDevCmtsNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: docsDevCmtsNotificationGroup.setDescription('A collection of CMTS notifications providing device status and control.')
mibBuilder.exportSymbols("DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB", docsDevCmtsNotifCompliance=docsDevCmtsNotifCompliance, docsDevCmSwUpgradeInitNotif=docsDevCmSwUpgradeInitNotif, docsDevCmDynServRspFailNotif=docsDevCmDynServRspFailNotif, docsDevNotifCompliances=docsDevNotifCompliances, docsDevCmtsDynServRspFailNotif=docsDevCmtsDynServRspFailNotif, docsDevCmtsDCCReqFailNotif=docsDevCmtsDCCReqFailNotif, docsDevNotifControl=docsDevNotifControl, docsDevCmtsDynServReqFailNotif=docsDevCmtsDynServReqFailNotif, PYSNMP_MODULE_ID=docsDevNotifMIB, docsDevCmtsNotifs=docsDevCmtsNotifs, docsDevCmtsNotifControl=docsDevCmtsNotifControl, docsDevCmtsNotificationGroup=docsDevCmtsNotificationGroup, docsDevCmBPKMNotif=docsDevCmBPKMNotif, docsDevNotifMIB=docsDevNotifMIB, docsDevCmtsDynamicSANotif=docsDevCmtsDynamicSANotif, docsDevCmtsInitRegRspFailNotif=docsDevCmtsInitRegRspFailNotif, docsDevNotifGroups=docsDevNotifGroups, docsDevCmDynServReqFailNotif=docsDevCmDynServReqFailNotif, docsDevCmNotificationGroup=docsDevCmNotificationGroup, docsDevCmInitTLVUnknownNotif=docsDevCmInitTLVUnknownNotif, docsDevCmtsNotifControlGroup=docsDevCmtsNotifControlGroup, docsDevCmDynServAckFailNotif=docsDevCmDynServAckFailNotif, docsDevCmtsInitRegReqFailNotif=docsDevCmtsInitRegReqFailNotif, docsDevCmDCCRspFailNotif=docsDevCmDCCRspFailNotif, docsDevCmNotifCompliance=docsDevCmNotifCompliance, docsDevCmDCCReqFailNotif=docsDevCmDCCReqFailNotif, docsDevCmDynamicSANotif=docsDevCmDynamicSANotif, docsDevCmtsDynServAckFailNotif=docsDevCmtsDynServAckFailNotif, docsDevNotifConformance=docsDevNotifConformance, docsDevCmDCCAckFailNotif=docsDevCmDCCAckFailNotif, docsDevCmtsBpiInitNotif=docsDevCmtsBpiInitNotif, docsDevCmNotifControl=docsDevCmNotifControl, docsDevCmNotifs=docsDevCmNotifs, docsDevCmDHCPFailNotif=docsDevCmDHCPFailNotif, docsDevCmSwUpgradeCVCFailNotif=docsDevCmSwUpgradeCVCFailNotif, docsDevCmtsBPKMNotif=docsDevCmtsBPKMNotif, docsDevCmtsDCCRspFailNotif=docsDevCmtsDCCRspFailNotif, docsDevCmtsDCCAckFailNotif=docsDevCmtsDCCAckFailNotif, docsDevCmNotifControlGroup=docsDevCmNotifControlGroup, docsDevCmBpiInitNotif=docsDevCmBpiInitNotif, docsDevCmSwUpgradeFailNotif=docsDevCmSwUpgradeFailNotif, docsDevCmTODFailNotif=docsDevCmTODFailNotif, docsDevCmSwUpgradeSuccessNotif=docsDevCmSwUpgradeSuccessNotif, docsDevCmtsInitRegAckFailNotif=docsDevCmtsInitRegAckFailNotif)
