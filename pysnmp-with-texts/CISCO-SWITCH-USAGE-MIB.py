#
# PySNMP MIB module CISCO-SWITCH-USAGE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SWITCH-USAGE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:13:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Bits, ModuleIdentity, iso, Counter32, NotificationType, Integer32, Gauge32, ObjectIdentity, Counter64, Unsigned32, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ModuleIdentity", "iso", "Counter32", "NotificationType", "Integer32", "Gauge32", "ObjectIdentity", "Counter64", "Unsigned32", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoSwitchUsageMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 201))
ciscoSwitchUsageMIB.setRevisions(('2001-05-02 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoSwitchUsageMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoSwitchUsageMIB.setLastUpdated('200105020000Z')
if mibBuilder.loadTexts: ciscoSwitchUsageMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoSwitchUsageMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-switch-usage-mib@cisco.com')
if mibBuilder.loadTexts: ciscoSwitchUsageMIB.setDescription('This MIB defines objects related to statistics for the usage of switch fabric. The switch fabric is used by the incoming packets from the line/network to a interface. Such packets are called ingress packets. Counters are maintained for number of ingress packets/ octets switched by the switch fabric for each interface. NOTE: These counters are not counting the total number of incoming packets and octets for a particular interface. Instead only the counts of packets and octets that actually use the switch-fabric are being accounted for by this MIB. Therefore, the counters in this MIB are distinctly different from packet and octet counters found in the IF-MIB.')
ciscoSwitchUsageMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 201, 1))
ciscoSwitchUsageStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 201, 1, 1))
cswitchUsageStatTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 201, 1, 1, 1), )
if mibBuilder.loadTexts: cswitchUsageStatTable.setStatus('current')
if mibBuilder.loadTexts: cswitchUsageStatTable.setDescription('A list of switch resouce usage statistics entries. The statistics will give information on the switch usage by each interface.')
cswitchUsageStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 201, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cswitchUsageStatEntry.setStatus('current')
if mibBuilder.loadTexts: cswitchUsageStatEntry.setDescription('Entry contains information of a particular interface in terms of how much switch resource it has used. An entry in this table exists for each ifEntry with an ifType of fastEther(62) for FastEthernet interface and gigabitEthernet (117) for Gigabit interface.')
cswitchUsageByIngrsIntfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 201, 1, 1, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cswitchUsageByIngrsIntfPkts.setStatus('current')
if mibBuilder.loadTexts: cswitchUsageByIngrsIntfPkts.setDescription('The number of ingress packets of a interface which use the switch resource.')
cswitchUsageByIngrsIntfHCPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 201, 1, 1, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cswitchUsageByIngrsIntfHCPkts.setStatus('current')
if mibBuilder.loadTexts: cswitchUsageByIngrsIntfHCPkts.setDescription('The number of ingress packets of a interface which use the switch resource. This is a 64 bit (High Capacity) version of the cswitchUsageByIngrsIntfPkts counter for use with SNMP v2c or v3 Managers.')
cswitchUsageByIngrsIntfOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 201, 1, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cswitchUsageByIngrsIntfOctets.setStatus('current')
if mibBuilder.loadTexts: cswitchUsageByIngrsIntfOctets.setDescription('The number of ingress octets of a interface which use the switch resource.')
cswitchUsageByIngrsIntfHCOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 201, 1, 1, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cswitchUsageByIngrsIntfHCOctets.setStatus('current')
if mibBuilder.loadTexts: cswitchUsageByIngrsIntfHCOctets.setDescription('The number of ingress octets of a interface which use the switch resource. This is a 64 bit (High Capacity) version of the cswitchUsageByIngrsIntfOctets counter for use with SNMP v2c or v3 Managers.')
ciscoSwitchUsageMIBNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 201, 2))
ciscoSwitchUsageMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 201, 2, 0))
ciscoSwitchUsageMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 201, 3))
ciscoSwitchUsageMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 201, 3, 1))
ciscoSwitchUsageMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 201, 3, 2))
ciscoSwitchUsageMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 201, 3, 1, 1)).setObjects(("CISCO-SWITCH-USAGE-MIB", "ciscoSwitchUsageMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSwitchUsageMIBCompliance = ciscoSwitchUsageMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoSwitchUsageMIBCompliance.setDescription('The compliance statement for the switch usage statistics group.')
ciscoSwitchUsageMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 201, 3, 2, 1)).setObjects(("CISCO-SWITCH-USAGE-MIB", "cswitchUsageByIngrsIntfPkts"), ("CISCO-SWITCH-USAGE-MIB", "cswitchUsageByIngrsIntfHCPkts"), ("CISCO-SWITCH-USAGE-MIB", "cswitchUsageByIngrsIntfOctets"), ("CISCO-SWITCH-USAGE-MIB", "cswitchUsageByIngrsIntfHCOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSwitchUsageMIBGroup = ciscoSwitchUsageMIBGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoSwitchUsageMIBGroup.setDescription('The Object Group for switch usage statistics')
mibBuilder.exportSymbols("CISCO-SWITCH-USAGE-MIB", PYSNMP_MODULE_ID=ciscoSwitchUsageMIB, cswitchUsageByIngrsIntfHCPkts=cswitchUsageByIngrsIntfHCPkts, ciscoSwitchUsageMIBNotifyPrefix=ciscoSwitchUsageMIBNotifyPrefix, ciscoSwitchUsageMIBGroup=ciscoSwitchUsageMIBGroup, cswitchUsageByIngrsIntfHCOctets=cswitchUsageByIngrsIntfHCOctets, cswitchUsageByIngrsIntfPkts=cswitchUsageByIngrsIntfPkts, ciscoSwitchUsageMIBConformance=ciscoSwitchUsageMIBConformance, ciscoSwitchUsageMIB=ciscoSwitchUsageMIB, ciscoSwitchUsageMIBCompliances=ciscoSwitchUsageMIBCompliances, ciscoSwitchUsageMIBCompliance=ciscoSwitchUsageMIBCompliance, cswitchUsageByIngrsIntfOctets=cswitchUsageByIngrsIntfOctets, ciscoSwitchUsageMIBObjects=ciscoSwitchUsageMIBObjects, ciscoSwitchUsageStats=ciscoSwitchUsageStats, ciscoSwitchUsageMIBGroups=ciscoSwitchUsageMIBGroups, cswitchUsageStatTable=cswitchUsageStatTable, ciscoSwitchUsageMIBNotifications=ciscoSwitchUsageMIBNotifications, cswitchUsageStatEntry=cswitchUsageStatEntry)
