#
# PySNMP MIB module FASTPATH-DHCP6SERVER-PRIVATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FASTPATH-DHCP6SERVER-PRIVATE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:11:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
fastPath, = mibBuilder.importSymbols("BROADCOM-REF-MIB", "fastPath")
Ipv6Address, Ipv6IfIndexOrZero, Ipv6IfIndex, Ipv6AddressIfIdentifier, Ipv6AddressPrefix = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address", "Ipv6IfIndexOrZero", "Ipv6IfIndex", "Ipv6AddressIfIdentifier", "Ipv6AddressPrefix")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, iso, TimeTicks, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ModuleIdentity, Bits, Gauge32, ObjectIdentity, NotificationType, MibIdentifier, Unsigned32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "iso", "TimeTicks", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ModuleIdentity", "Bits", "Gauge32", "ObjectIdentity", "NotificationType", "MibIdentifier", "Unsigned32", "IpAddress")
RowStatus, TruthValue, DisplayString, RowPointer, PhysAddress, StorageType, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "DisplayString", "RowPointer", "PhysAddress", "StorageType", "TextualConvention", "MacAddress")
fastPathDHCP6ServerPrivate = ModuleIdentity((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25))
fastPathDHCP6ServerPrivate.setRevisions(('2007-05-23 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: fastPathDHCP6ServerPrivate.setRevisionsDescriptions(('Broadcom branding related changes.',))
if mibBuilder.loadTexts: fastPathDHCP6ServerPrivate.setLastUpdated('200705230000Z')
if mibBuilder.loadTexts: fastPathDHCP6ServerPrivate.setOrganization('Broadcom Corporation')
if mibBuilder.loadTexts: fastPathDHCP6ServerPrivate.setContactInfo(' Customer Support Postal: Broadcom Corporation 13000 Weston Parkway Suite #105 Cary, NC 27513 Tel: +1 919 865 2700')
if mibBuilder.loadTexts: fastPathDHCP6ServerPrivate.setDescription('The Broadcom Private MIB for FASTPATH DHCPv6 Server/Relay')
agentDhcp6ServerGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1))
agentDhcp6ServerAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcp6ServerAdminMode.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerAdminMode.setDescription(' Admin-mode of the DHCPv6 Server/Relay.')
agentDhcp6ServerRelayOptParm = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(54, 65535)).clone(54)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcp6ServerRelayOptParm.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerRelayOptParm.setDescription(' The numeric value for the Relay Agent Information Option to be used by DHCPv6 Server/Relay.')
agentDhcp6ServerRelayOptRemoteIdSuboptParm = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcp6ServerRelayOptRemoteIdSuboptParm.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerRelayOptRemoteIdSuboptParm.setDescription(' The numeric value for the Relay Agent Information Option Remote-ID Sub-option to be used by DHCPv6 Server/Relay.')
agentDhcp6ServerDuid = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerDuid.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerDuid.setDescription(' The DHCPv6 Server unique DUID. This value cannot be modified')
agentDhcp6ServerMalformedMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerMalformedMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerMalformedMessagesReceived.setDescription(' The no. of malformed(truncated or corrupt) messages that have been received by the DHCPv6 server.')
agentDhcp6ServerDiscardedMessages = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerDiscardedMessages.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerDiscardedMessages.setDescription(' The no. of discarded messages that have been received by the DHCPv6 server.')
agentDhcp6ServerSOLICITMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerSOLICITMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerSOLICITMessagesReceived.setDescription(' The no. of DHCPv6 messages of type SOLICIT that have been received by the DHCPv6 server.')
agentDhcp6ServerREQUESTMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerREQUESTMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerREQUESTMessagesReceived.setDescription(' The no. of DHCPv6 messages of type REQUEST that have been received by the DHCPv6 server.')
agentDhcp6ServerCONFIRMMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerCONFIRMMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerCONFIRMMessagesReceived.setDescription(' The no. of DHCPv6 messages of type CONFIRM that have been received by the DHCPv6 server.')
agentDhcp6ServerRENEWMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerRENEWMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerRENEWMessagesReceived.setDescription(' The no. of DHCPv6 messages of type RENEW that have been received by the DHCPv6 server.')
agentDhcp6ServerREBINDMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerREBINDMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerREBINDMessagesReceived.setDescription(' The no. of DHCPv6 messages of type REBIND that have been received by the DHCPv6 server.')
agentDhcp6ServerRELEASEMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerRELEASEMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerRELEASEMessagesReceived.setDescription(' The no. of DHCPv6 messages of type RELEASE that have been received by the DHCPv6 server.')
agentDhcp6ServerDECLINEMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerDECLINEMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerDECLINEMessagesReceived.setDescription(' The no. of DHCPv6 messages of type DECLINE that have been received by the DHCPv6 server.')
agentDhcp6ServerINFORMREQMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerINFORMREQMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerINFORMREQMessagesReceived.setDescription(' The no. of DHCPv6 messages of type INFORMATION-REQUEST that have been received by the DHCPv6 server.')
agentDhcp6ServerRELAYREPLYMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerRELAYREPLYMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerRELAYREPLYMessagesReceived.setDescription(' The no. of DHCPv6 messages of type RELAY-REPLY that have been received by the DHCPv6 server.')
agentDhcp6ServerRELAYFORWMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerRELAYFORWMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerRELAYFORWMessagesReceived.setDescription(' The no. of DHCPv6 messages of type RELAY-FORWARD that have been received by the DHCPv6 server.')
agentDhcp6ServerADVERTISEMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerADVERTISEMessagesSent.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerADVERTISEMessagesSent.setDescription(' The no. of DHCPv6 messages of type ADVERTISE that have been sent by the DHCPv6 server.')
agentDhcp6ServerREPLYMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerREPLYMessagesSent.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerREPLYMessagesSent.setDescription(' The no. of DHCPv6 messages of type REPLY that have been sent by the DHCPv6 server.')
agentDhcp6ServerRECONFIGUREMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerRECONFIGUREMessagesSent.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerRECONFIGUREMessagesSent.setDescription(' The no. of DHCPv6 messages of type RECONFIGURE that have been sent by the DHCPv6 server.')
agentDhcp6ServerRELAYREPLYMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerRELAYREPLYMessagesSent.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerRELAYREPLYMessagesSent.setDescription(' The no. of DHCPv6 messages of type RELAY-REPLY that have been sent by the DHCPv6 server.')
agentDhcp6ServerRELAYFORWMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerRELAYFORWMessagesSent.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerRELAYFORWMessagesSent.setDescription(' The no. of DHCPv6 messages of type RELAY-FORWARD that have been sent by the DHCPv6 server.')
agentDhcp6ServerClearStatistics = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcp6ServerClearStatistics.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerClearStatistics.setDescription(' Clears the DHCPv6 server statistics.')
agentDhcp6ServerPoolConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2))
agentDhcp6ServerPoolNameCreate = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 1), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 31), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcp6ServerPoolNameCreate.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolNameCreate.setDescription('A pool is created by applying write operation on this MIB object and providing a new pool-name. Get operation on this MIB object returns a null-value, as for the purpose of viewing the pool name, the user should perform the traversal of agentDhcp6ServerPoolConfigTable. For this reason the get operation on object agentDhcp6ServerPoolNameCreate becomes insignificant.')
agentDhcp6ServerPoolConfigTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 2), )
if mibBuilder.loadTexts: agentDhcp6ServerPoolConfigTable.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolConfigTable.setDescription('A table of the DHCPv6 Server Pool configuration entries.')
agentDhcp6ServerPoolConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 2, 1), ).setIndexNames((0, "FASTPATH-DHCP6SERVER-PRIVATE-MIB", "agentDhcp6ServerPoolIndex"))
if mibBuilder.loadTexts: agentDhcp6ServerPoolConfigEntry.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolConfigEntry.setDescription('Represents entry for a DHCPv6 server pool.')
agentDhcp6ServerPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerPoolIndex.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolIndex.setDescription("The Pool Index, which 'll be used as index for the PoolConfig Table.")
agentDhcp6ServerPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerPoolName.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolName.setDescription('The name of the DHCPv6 pool. This value cannot be modified')
agentDhcp6ServerPoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("un-allocated", 0), ("dynamic", 1), ("manual", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerPoolType.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolType.setDescription('This specifies the type of the binding that is associated with this pool.')
agentDhcp6ServerPoolDnsDomainCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsDomainCreate.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsDomainCreate.setDescription('A DNS domain for a pool is created by applying write operation on this MIB object and providing a new DNS domain name. Get operation on this MIB object returns a null-value, as for the purpose of viewing the DNS domain name, the user should perform the traversal of agentDhcp6ServerPoolDnsDomainTable. For this reason the get operation on object agentDhcp6ServerDnsDomainCreate becomes insignificant.')
agentDhcp6ServerPoolDnsServerCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 2, 1, 5), Ipv6Address()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsServerCreate.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsServerCreate.setDescription('A DNS server for a pool is created by applying write operation on this MIB object and providing a new DNS server address. Get operation on this MIB object returns a null-value, as for the purpose of viewing the DNS server address, the user should perform the traversal of agentDhcp6ServerPoolDnsServerTable. For this reason the get operation on object agentDhcp6ServerDnsServerCreate becomes insignificant.')
agentDhcp6ServerPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 2, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcp6ServerPoolRowStatus.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolRowStatus.setDescription("The row status variable is used according to installation and removal conventions for conceptual rows. When a pool is created by applying write operation on 'agentDhcp6ServerPoolCreateName',row-status becomes 'active'. If row-status for a poolEntry is set to 'destroy', the corresponding pool gets deleted. ")
agentDhcp6ServerPoolDnsDomainTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 4), )
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsDomainTable.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsDomainTable.setDescription("A table of the DHCPv6 Server Pool's DNS domain entries.")
agentDhcp6ServerPoolDnsDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 4, 1), ).setIndexNames((0, "FASTPATH-DHCP6SERVER-PRIVATE-MIB", "agentDhcp6ServerPoolIndex"), (0, "FASTPATH-DHCP6SERVER-PRIVATE-MIB", "agentDhcp6ServerPoolDnsDomainIndex"))
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsDomainEntry.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsDomainEntry.setDescription("Represents entry for a DHCPv6 server pool's DNS domains.")
agentDhcp6ServerPoolDnsDomainIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsDomainIndex.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsDomainIndex.setDescription('The DNS Domain Index, which will be used as index for the DnsDomain Table.')
agentDhcp6ServerPoolDnsDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsDomainName.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsDomainName.setDescription('This specifies a DNS domain name for distribution to a DHCPv6 client.')
agentDhcp6ServerPoolDnsDomainRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 4, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsDomainRowStatus.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsDomainRowStatus.setDescription("The row status variable is used according to installation and removal conventions for conceptual rows. When a DNS domain is created by applying write operation on 'agentDhcp6ServerDnsDomainCreate', row-status becomes 'active'. If row-status for a DnsDomainEntry is set to 'destroy', the corresponding DNS domain gets deleted. ")
agentDhcp6ServerPoolDnsServerTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 6), )
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsServerTable.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsServerTable.setDescription("A table of the DHCPv6 Server Pool's DNS server address entries.")
agentDhcp6ServerPoolDnsServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 6, 1), ).setIndexNames((0, "FASTPATH-DHCP6SERVER-PRIVATE-MIB", "agentDhcp6ServerPoolIndex"), (0, "FASTPATH-DHCP6SERVER-PRIVATE-MIB", "agentDhcp6ServerPoolDnsServerIndex"))
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsServerEntry.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsServerEntry.setDescription("Represents entry for a DHCPv6 server pool's DNS server addresses.")
agentDhcp6ServerPoolDnsServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsServerIndex.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsServerIndex.setDescription('The DNS Server Index, which will be used as index for the DNS Server Table.')
agentDhcp6ServerPoolDnsServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 6, 1, 2), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsServerAddress.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsServerAddress.setDescription('This specifies a DNS server address for distribution to a DHCPv6 client.')
agentDhcp6ServerPoolDnsServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 6, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsServerRowStatus.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolDnsServerRowStatus.setDescription("The row status variable is used according to installation and removal conventions for conceptual rows. When a DNS server is created by applying write operation on 'agentDhcp6ServerDnsServerCreate', row-status becomes 'active'. If row-status for a DnsServerEntry is set to 'destroy', the corresponding DNS server gets deleted. ")
agentDhcp6ServerPoolAllocationTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 7), )
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationTable.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationTable.setDescription("A table of the DHCPv6 Server pool's allocation entries, showing prefix delegation specific parameters.")
agentDhcp6ServerPoolAllocationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 7, 1), ).setIndexNames((0, "FASTPATH-DHCP6SERVER-PRIVATE-MIB", "agentDhcp6ServerPoolIndex"), (0, "FASTPATH-DHCP6SERVER-PRIVATE-MIB", "agentDhcp6ServerPoolAllocationIndex"))
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationEntry.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationEntry.setDescription("Represents entry for a DHCPv6 server pool's prefix delegation information.")
agentDhcp6ServerPoolAllocationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 7, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationIndex.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationIndex.setDescription('The DNS Server Pool Allocation Index, which will be used as index for the DNS Server Pool Allocation Table.')
agentDhcp6ServerPoolAllocationClientIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationClientIdentifier.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationClientIdentifier.setDescription('It specifies the unique identifier, a.k.a. DUID, (in colon-separated hexadecimal format) of a DHCPv6 client. ')
agentDhcp6ServerPoolAllocationPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 7, 1, 3), Ipv6AddressPrefix()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationPrefix.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationPrefix.setDescription('The IPv6 address prefix for delegation to DHCPv6 clients.')
agentDhcp6ServerPoolAllocationPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationPrefixLength.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationPrefixLength.setDescription('This specifies the no. of bits that comprise the address-prefix mask length.')
agentDhcp6ServerPoolAllocationClientName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationClientName.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationClientName.setDescription('It specifies a name for a DHCPv6 client. This name is purely used for internal use, and can be a NULL string.')
agentDhcp6ServerPoolAllocationIaid = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 7, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationIaid.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationIaid.setDescription('This specifies a identity association ID (IAID) associated with the allocation. It can be set to 0.')
agentDhcp6ServerPoolAllocationValidLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 7, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationValidLifetime.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationValidLifetime.setDescription("This specifies the valid lifetime timer interval (in seconds) for the associated allocation. If set to 0, the timer is set to 'infinity'.")
agentDhcp6ServerPoolAllocationPreferLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 7, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationPreferLifetime.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationPreferLifetime.setDescription("This specifies the preferred lifetime timer interval (in seconds) for the associated allocation. If set to 0, the timer is set to 'infinity'. Also, the preferred lifetime value must be less than or equal to the valid lifetime value.")
agentDhcp6ServerPoolAllocationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 2, 7, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationRowStatus.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerPoolAllocationRowStatus.setDescription("The row status variable is used according to installation and removal conventions for conceptual rows. When an allocation is created, row-status becomes 'active'. If row-status for an allocation is set to 'invalid', the corresponding allocation gets deleted. ")
agentDhcp6InterfaceGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3))
agentDhcp6InterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 1), )
if mibBuilder.loadTexts: agentDhcp6InterfaceTable.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceTable.setDescription('A table of the DHCPv6 Server/Relay interface entries.')
agentDhcp6InterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 1, 1), ).setIndexNames((0, "FASTPATH-DHCP6SERVER-PRIVATE-MIB", "agentDhcp6InterfaceIndex"))
if mibBuilder.loadTexts: agentDhcp6InterfaceEntry.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceEntry.setDescription('Represents entry for DHCPv6 server or relay functionality on an interface.')
agentDhcp6InterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 1, 1, 1), Ipv6IfIndex())
if mibBuilder.loadTexts: agentDhcp6InterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceIndex.setDescription('This specifies the ifindex of the DHCPv6 interface')
agentDhcp6InterfaceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("server", 1), ("relay", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDhcp6InterfaceMode.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceMode.setDescription("This specifies whether an interface is in DHCPv6 Server or Relay mode. Setting the mode to 'disable' (0) effectively un-configures the interface.")
agentDhcp6InterfaceServerPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDhcp6InterfaceServerPoolName.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceServerPoolName.setDescription('This specifies a DHCPv6 Server pool name, which exists within the agentDhcp6ServerPoolConfigTable. This parameter is only meaningful when the interface is in DHCPv6 server mode.')
agentDhcp6InterfaceServerPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 1, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDhcp6InterfaceServerPreference.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceServerPreference.setDescription('This specifies a DHCPv6 Server preference value, which is used by DHCPv6 clients to choose betweeen servers. This parameter is only meaningful when the interface is in DHCPv6 server mode.')
agentDhcp6InterfaceRelayAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 1, 1, 5), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDhcp6InterfaceRelayAddress.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceRelayAddress.setDescription('This specifies the IPv6 address of a DHCPv6 relay server, to which DHCPv6 messages receivd on this interface will be relayed. If this is specified as global IPv6 address, then agentDhcp6ServerInterfaceRelayInterface is not required to be configured. However, if the address is specified as a link-local or multicast address, then agentDhcp6ServerInterfaceRelayInterface is required. This parameter is only meaningful when the interface is in DHCPv6 relay mode.')
agentDhcp6InterfaceRelayInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 1, 1, 6), Ipv6IfIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDhcp6InterfaceRelayInterface.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceRelayInterface.setDescription('This specifies the IPv6 ifindex of a interface to reach a DHCPv6 relay server, to which DHCPv6 messages received on this interface will be relayed. This parameter is only meaningful when the interface is in DHCPv6 relay mode.')
agentDhcp6InterfaceRemoteIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDhcp6InterfaceRemoteIdentifier.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceRemoteIdentifier.setDescription("This specifies the Relay Agent Information Option 'remote-id' sub-option to be attached to DHCPv6 messages being relayed on this interface. There exists a special reserved value of 'duid-ifid', which causes the remote-id value to be derived from the local DHCPv6 Server DUID and the interface ifindex. Otherwise, the string defined here is used as the remote-id value. This parameter is only meaningful when the interface is in DHCPv6 relay mode.")
agentDhcp6InterfaceOptionFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 1, 1, 8), Bits().clone(namedValues=NamedValues(("rapid-commit", 0), ("allow-unicast", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDhcp6InterfaceOptionFlags.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceOptionFlags.setDescription("This specifies a bitmask field for various DHCPv6 options. Currently, only the 'rapid-commit' option is available, which is only meaningful when the interface is in DHCPv6 Server mode. Setting this parameter to 0 effectively clears any configured option flags on the interface.")
agentDhcp6InterfaceStatsTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2), )
if mibBuilder.loadTexts: agentDhcp6InterfaceStatsTable.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceStatsTable.setDescription('A table of the DHCPv6 Server/Relay interface statistics')
agentDhcp6InterfaceStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1), ).setIndexNames((0, "FASTPATH-DHCP6SERVER-PRIVATE-MIB", "agentDhcp6InterfaceStatsIndex"))
if mibBuilder.loadTexts: agentDhcp6InterfaceStatsEntry.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceStatsEntry.setDescription('Represents entry for DHCPv6 server or relay statistics on an interface.')
agentDhcp6InterfaceStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1, 1), Ipv6IfIndex())
if mibBuilder.loadTexts: agentDhcp6InterfaceStatsIndex.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceStatsIndex.setDescription('This specifies the ifindex of the DHCPv6 interface')
agentDhcp6InterfaceMalformedMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6InterfaceMalformedMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceMalformedMessagesReceived.setDescription(' The number of malformed (truncated or corrupt) messages that have been received on the interface')
agentDhcp6InterfaceDiscardedMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6InterfaceDiscardedMessages.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceDiscardedMessages.setDescription(' The no. of discarded messages on the interface.')
agentDhcp6InterfaceSOLICITMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6InterfaceSOLICITMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceSOLICITMessagesReceived.setDescription(' The no. of DHCPv6 messages of type SOLICIT that have been received on the interface.')
agentDhcp6InterfaceREQUESTMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6InterfaceREQUESTMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceREQUESTMessagesReceived.setDescription(' The no. of DHCPv6 messages of type REQUEST that have been received on the interface.')
agentDhcp6InterfaceCONFIRMMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6InterfaceCONFIRMMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceCONFIRMMessagesReceived.setDescription(' The no. of DHCPv6 messages of type CONFIRM that have been received on the interface.')
agentDhcp6InterfaceRENEWMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6InterfaceRENEWMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceRENEWMessagesReceived.setDescription(' The no. of DHCPv6 messages of type RENEW that have been received on the interface.')
agentDhcp6InterfaceREBINDMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6InterfaceREBINDMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceREBINDMessagesReceived.setDescription(' The no. of DHCPv6 messages of type REBIND that have been received on the interface.')
agentDhcp6InterfaceRELEASEMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6InterfaceRELEASEMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceRELEASEMessagesReceived.setDescription(' The no. of DHCPv6 messages of type RELEASE that have been received on the interface.')
agentDhcp6InterfaceDECLINEMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6InterfaceDECLINEMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceDECLINEMessagesReceived.setDescription(' The no. of DHCPv6 messages of type DECLINE that have been received on the interface.')
agentDhcp6InterfaceINFORMREQMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6InterfaceINFORMREQMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceINFORMREQMessagesReceived.setDescription(' The no. of DHCPv6 messages of type INFORMATION-REQUEST that have been received on the interface.')
agentDhcp6InterfaceRELAYREPLYMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6InterfaceRELAYREPLYMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceRELAYREPLYMessagesReceived.setDescription(' The no. of DHCPv6 messages of type RELAY-REPLY that have been received on the interface.')
agentDhcp6InterfaceRELAYFORWMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6InterfaceRELAYFORWMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceRELAYFORWMessagesReceived.setDescription(' The no. of DHCPv6 messages of type RELAY-FORWARD that have been received on the interface.')
agentDhcp6InterfaceADVERTISEMessagesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6InterfaceADVERTISEMessagesSent.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceADVERTISEMessagesSent.setDescription(' The no. of DHCPv6 messages of type ADVERTISE that have been sent on the interface.')
agentDhcp6InterfaceREPLYMessagesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6InterfaceREPLYMessagesSent.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceREPLYMessagesSent.setDescription(' The no. of DHCPv6 messages of type REPLY that have been sent on the interface.')
agentDhcp6InterfaceRECONFIGUREMessagesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6InterfaceRECONFIGUREMessagesSent.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceRECONFIGUREMessagesSent.setDescription(' The no. of DHCPv6 messages of type RECONFIGURE that have been sent on the interface.')
agentDhcp6InterfaceRELAYREPLYMessagesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6InterfaceRELAYREPLYMessagesSent.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceRELAYREPLYMessagesSent.setDescription(' The no. of DHCPv6 messages of type RELAY-REPLY that have been sent on the interface.')
agentDhcp6InterfaceRELAYFORWMessagesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6InterfaceRELAYFORWMessagesSent.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceRELAYFORWMessagesSent.setDescription(' The no. of DHCPv6 messages of type RELAY-FORWARD that have been sent on the interface.')
agentDhcp6InterfaceClearStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 3, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDhcp6InterfaceClearStatistics.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6InterfaceClearStatistics.setDescription(' Clears the DHCPv6 statistics on the interface.')
agentDhcp6ServerBindingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 4))
agentDhcp6ServerBindingTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 4, 1), )
if mibBuilder.loadTexts: agentDhcp6ServerBindingTable.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerBindingTable.setDescription("A table of the DHCPv6 Server's active binding entries.")
agentDhcp6ServerBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 4, 1, 1), ).setIndexNames((0, "FASTPATH-DHCP6SERVER-PRIVATE-MIB", "agentDhcp6ServerBindingIndex"))
if mibBuilder.loadTexts: agentDhcp6ServerBindingEntry.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerBindingEntry.setDescription("Represents entry for a DHCPv6 server's active bindings.")
agentDhcp6ServerBindingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 4, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerBindingIndex.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerBindingIndex.setDescription("The index of the entry in the list of the DHCPv6 server's active bindings.")
agentDhcp6ServerBindingPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 4, 1, 1, 2), Ipv6AddressPrefix()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerBindingPrefix.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerBindingPrefix.setDescription('The IPv6 address prefix delegated to a DHCPv6 client.')
agentDhcp6ServerBindingPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerBindingPrefixLength.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerBindingPrefixLength.setDescription('This specifies the no. of bits that comprise the address-prefix mask length for the delegated prefix.')
agentDhcp6ServerBindingPrefixType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("iapd", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerBindingPrefixType.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerBindingPrefixType.setDescription('This specifies the type of prefix associated with the binding. Currently, only IA_PD type (prefix delegation) is supported.')
agentDhcp6ServerBindingClientIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 4, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerBindingClientIdentifier.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerBindingClientIdentifier.setDescription('It specifies the unique identifier, a.k.a. DUID, (in colon-separated hexadecimal format) of a DHCPv6 client. ')
agentDhcp6ServerBindingClientAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 4, 1, 1, 6), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerBindingClientAddress.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerBindingClientAddress.setDescription('It specifies the address for a DHCPv6 client.')
agentDhcp6ServerBindingClientInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 4, 1, 1, 7), Ipv6IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerBindingClientInterface.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerBindingClientInterface.setDescription('It specifies the interface for a DHCPv6 client.')
agentDhcp6ServerBindingIaid = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 4, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerBindingIaid.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerBindingIaid.setDescription('This specifies a identity association ID (IAID) associated with the binding.')
agentDhcp6ServerBindingValidLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 4, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerBindingValidLifetime.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerBindingValidLifetime.setDescription("This specifies the valid lifetime timer interval (in seconds) for the associated allocation. If set to 0, the timer is set to 'infinity'.")
agentDhcp6ServerBindingPreferLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 4, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerBindingPreferLifetime.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerBindingPreferLifetime.setDescription("This specifies the preferred lifetime timer interval (in seconds) for the associated allocation. If set to 0, the timer is set to 'infinity'. Also, the preferred lifetime value must be less than or equal to the valid lifetime value.")
agentDhcp6ServerBindingExpiration = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 25, 4, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ServerBindingExpiration.setStatus('current')
if mibBuilder.loadTexts: agentDhcp6ServerBindingExpiration.setDescription('This specifies the amount of time (in seconds) for the associated binding to expire.')
mibBuilder.exportSymbols("FASTPATH-DHCP6SERVER-PRIVATE-MIB", agentDhcp6ServerBindingPrefixLength=agentDhcp6ServerBindingPrefixLength, agentDhcp6ServerBindingExpiration=agentDhcp6ServerBindingExpiration, agentDhcp6InterfaceADVERTISEMessagesSent=agentDhcp6InterfaceADVERTISEMessagesSent, agentDhcp6ServerCONFIRMMessagesReceived=agentDhcp6ServerCONFIRMMessagesReceived, agentDhcp6InterfaceRelayAddress=agentDhcp6InterfaceRelayAddress, agentDhcp6ServerRelayOptRemoteIdSuboptParm=agentDhcp6ServerRelayOptRemoteIdSuboptParm, agentDhcp6ServerPoolDnsServerCreate=agentDhcp6ServerPoolDnsServerCreate, agentDhcp6ServerPoolDnsServerTable=agentDhcp6ServerPoolDnsServerTable, agentDhcp6ServerPoolIndex=agentDhcp6ServerPoolIndex, agentDhcp6ServerPoolAllocationTable=agentDhcp6ServerPoolAllocationTable, agentDhcp6ServerREPLYMessagesSent=agentDhcp6ServerREPLYMessagesSent, agentDhcp6ServerBindingGroup=agentDhcp6ServerBindingGroup, agentDhcp6InterfaceEntry=agentDhcp6InterfaceEntry, agentDhcp6InterfaceRelayInterface=agentDhcp6InterfaceRelayInterface, agentDhcp6ServerDECLINEMessagesReceived=agentDhcp6ServerDECLINEMessagesReceived, agentDhcp6InterfaceGroup=agentDhcp6InterfaceGroup, agentDhcp6ServerREQUESTMessagesReceived=agentDhcp6ServerREQUESTMessagesReceived, agentDhcp6ServerINFORMREQMessagesReceived=agentDhcp6ServerINFORMREQMessagesReceived, agentDhcp6ServerPoolDnsDomainRowStatus=agentDhcp6ServerPoolDnsDomainRowStatus, agentDhcp6InterfaceRELAYFORWMessagesReceived=agentDhcp6InterfaceRELAYFORWMessagesReceived, agentDhcp6ServerBindingEntry=agentDhcp6ServerBindingEntry, agentDhcp6ServerPoolAllocationClientIdentifier=agentDhcp6ServerPoolAllocationClientIdentifier, agentDhcp6ServerPoolName=agentDhcp6ServerPoolName, agentDhcp6InterfaceServerPoolName=agentDhcp6InterfaceServerPoolName, agentDhcp6ServerBindingIaid=agentDhcp6ServerBindingIaid, agentDhcp6ServerBindingClientIdentifier=agentDhcp6ServerBindingClientIdentifier, PYSNMP_MODULE_ID=fastPathDHCP6ServerPrivate, agentDhcp6ServerPoolDnsDomainEntry=agentDhcp6ServerPoolDnsDomainEntry, agentDhcp6ServerPoolRowStatus=agentDhcp6ServerPoolRowStatus, agentDhcp6ServerPoolAllocationClientName=agentDhcp6ServerPoolAllocationClientName, agentDhcp6ServerPoolAllocationEntry=agentDhcp6ServerPoolAllocationEntry, agentDhcp6InterfaceClearStatistics=agentDhcp6InterfaceClearStatistics, agentDhcp6ServerRENEWMessagesReceived=agentDhcp6ServerRENEWMessagesReceived, agentDhcp6InterfaceDiscardedMessages=agentDhcp6InterfaceDiscardedMessages, agentDhcp6InterfaceREQUESTMessagesReceived=agentDhcp6InterfaceREQUESTMessagesReceived, agentDhcp6InterfaceINFORMREQMessagesReceived=agentDhcp6InterfaceINFORMREQMessagesReceived, agentDhcp6ServerPoolDnsDomainName=agentDhcp6ServerPoolDnsDomainName, agentDhcp6ServerPoolConfigGroup=agentDhcp6ServerPoolConfigGroup, agentDhcp6InterfaceTable=agentDhcp6InterfaceTable, agentDhcp6ServerDuid=agentDhcp6ServerDuid, agentDhcp6InterfaceDECLINEMessagesReceived=agentDhcp6InterfaceDECLINEMessagesReceived, agentDhcp6ServerGroup=agentDhcp6ServerGroup, agentDhcp6InterfaceMalformedMessagesReceived=agentDhcp6InterfaceMalformedMessagesReceived, fastPathDHCP6ServerPrivate=fastPathDHCP6ServerPrivate, agentDhcp6ServerPoolAllocationPrefix=agentDhcp6ServerPoolAllocationPrefix, agentDhcp6ServerPoolDnsDomainCreate=agentDhcp6ServerPoolDnsDomainCreate, agentDhcp6InterfaceRELAYREPLYMessagesSent=agentDhcp6InterfaceRELAYREPLYMessagesSent, agentDhcp6InterfaceSOLICITMessagesReceived=agentDhcp6InterfaceSOLICITMessagesReceived, agentDhcp6ServerPoolAllocationPreferLifetime=agentDhcp6ServerPoolAllocationPreferLifetime, agentDhcp6ServerBindingClientAddress=agentDhcp6ServerBindingClientAddress, agentDhcp6ServerBindingPreferLifetime=agentDhcp6ServerBindingPreferLifetime, agentDhcp6ServerBindingIndex=agentDhcp6ServerBindingIndex, agentDhcp6ServerPoolAllocationIaid=agentDhcp6ServerPoolAllocationIaid, agentDhcp6InterfaceMode=agentDhcp6InterfaceMode, agentDhcp6InterfaceRELAYREPLYMessagesReceived=agentDhcp6InterfaceRELAYREPLYMessagesReceived, agentDhcp6ServerRECONFIGUREMessagesSent=agentDhcp6ServerRECONFIGUREMessagesSent, agentDhcp6ServerPoolDnsServerAddress=agentDhcp6ServerPoolDnsServerAddress, agentDhcp6ServerPoolDnsDomainTable=agentDhcp6ServerPoolDnsDomainTable, agentDhcp6ServerREBINDMessagesReceived=agentDhcp6ServerREBINDMessagesReceived, agentDhcp6ServerPoolAllocationPrefixLength=agentDhcp6ServerPoolAllocationPrefixLength, agentDhcp6InterfaceREPLYMessagesSent=agentDhcp6InterfaceREPLYMessagesSent, agentDhcp6ServerPoolDnsDomainIndex=agentDhcp6ServerPoolDnsDomainIndex, agentDhcp6ServerPoolNameCreate=agentDhcp6ServerPoolNameCreate, agentDhcp6ServerRelayOptParm=agentDhcp6ServerRelayOptParm, agentDhcp6ServerRELEASEMessagesReceived=agentDhcp6ServerRELEASEMessagesReceived, agentDhcp6ServerDiscardedMessages=agentDhcp6ServerDiscardedMessages, agentDhcp6ServerPoolAllocationRowStatus=agentDhcp6ServerPoolAllocationRowStatus, agentDhcp6ServerRELAYREPLYMessagesSent=agentDhcp6ServerRELAYREPLYMessagesSent, agentDhcp6InterfaceREBINDMessagesReceived=agentDhcp6InterfaceREBINDMessagesReceived, agentDhcp6ServerPoolConfigTable=agentDhcp6ServerPoolConfigTable, agentDhcp6ServerPoolAllocationValidLifetime=agentDhcp6ServerPoolAllocationValidLifetime, agentDhcp6ServerPoolAllocationIndex=agentDhcp6ServerPoolAllocationIndex, agentDhcp6ServerRELAYREPLYMessagesReceived=agentDhcp6ServerRELAYREPLYMessagesReceived, agentDhcp6InterfaceRELEASEMessagesReceived=agentDhcp6InterfaceRELEASEMessagesReceived, agentDhcp6ServerBindingTable=agentDhcp6ServerBindingTable, agentDhcp6InterfaceStatsTable=agentDhcp6InterfaceStatsTable, agentDhcp6ServerMalformedMessagesReceived=agentDhcp6ServerMalformedMessagesReceived, agentDhcp6InterfaceRELAYFORWMessagesSent=agentDhcp6InterfaceRELAYFORWMessagesSent, agentDhcp6ServerSOLICITMessagesReceived=agentDhcp6ServerSOLICITMessagesReceived, agentDhcp6ServerBindingClientInterface=agentDhcp6ServerBindingClientInterface, agentDhcp6InterfaceServerPreference=agentDhcp6InterfaceServerPreference, agentDhcp6ServerBindingPrefixType=agentDhcp6ServerBindingPrefixType, agentDhcp6ServerPoolDnsServerRowStatus=agentDhcp6ServerPoolDnsServerRowStatus, agentDhcp6InterfaceStatsEntry=agentDhcp6InterfaceStatsEntry, agentDhcp6ServerPoolDnsServerEntry=agentDhcp6ServerPoolDnsServerEntry, agentDhcp6ServerRELAYFORWMessagesReceived=agentDhcp6ServerRELAYFORWMessagesReceived, agentDhcp6ServerBindingPrefix=agentDhcp6ServerBindingPrefix, agentDhcp6InterfaceOptionFlags=agentDhcp6InterfaceOptionFlags, agentDhcp6ServerPoolConfigEntry=agentDhcp6ServerPoolConfigEntry, agentDhcp6ServerPoolDnsServerIndex=agentDhcp6ServerPoolDnsServerIndex, agentDhcp6InterfaceRemoteIdentifier=agentDhcp6InterfaceRemoteIdentifier, agentDhcp6InterfaceCONFIRMMessagesReceived=agentDhcp6InterfaceCONFIRMMessagesReceived, agentDhcp6ServerClearStatistics=agentDhcp6ServerClearStatistics, agentDhcp6ServerRELAYFORWMessagesSent=agentDhcp6ServerRELAYFORWMessagesSent, agentDhcp6InterfaceRECONFIGUREMessagesSent=agentDhcp6InterfaceRECONFIGUREMessagesSent, agentDhcp6InterfaceStatsIndex=agentDhcp6InterfaceStatsIndex, agentDhcp6ServerAdminMode=agentDhcp6ServerAdminMode, agentDhcp6ServerBindingValidLifetime=agentDhcp6ServerBindingValidLifetime, agentDhcp6InterfaceRENEWMessagesReceived=agentDhcp6InterfaceRENEWMessagesReceived, agentDhcp6ServerADVERTISEMessagesSent=agentDhcp6ServerADVERTISEMessagesSent, agentDhcp6ServerPoolType=agentDhcp6ServerPoolType, agentDhcp6InterfaceIndex=agentDhcp6InterfaceIndex)
