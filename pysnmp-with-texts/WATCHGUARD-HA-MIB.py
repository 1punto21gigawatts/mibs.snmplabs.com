#
# PySNMP MIB module WATCHGUARD-HA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WATCHGUARD-HA-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:35:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Integer32, Gauge32, ObjectIdentity, NotificationType, MibIdentifier, ModuleIdentity, enterprises, iso, Bits, Counter64, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Integer32", "Gauge32", "ObjectIdentity", "NotificationType", "MibIdentifier", "ModuleIdentity", "enterprises", "iso", "Bits", "Counter64", "Unsigned32")
TextualConvention, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "DisplayString")
watchguard, = mibBuilder.importSymbols("WATCHGUARD-MIB", "watchguard")
wgInfoModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3097, 6))
wgInfoModule.setRevisions(('2007-01-25 12:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: wgInfoModule.setRevisionsDescriptions(('Initial revision.',))
if mibBuilder.loadTexts: wgInfoModule.setLastUpdated('200701251200Z')
if mibBuilder.loadTexts: wgInfoModule.setOrganization('WatchGuard Technologies, Inc.')
if mibBuilder.loadTexts: wgInfoModule.setContactInfo(' Ella Yu WatchGuard Technologies, Inc. 1841 Zanker Road San Jose, CA 95112 USA 408-519-4888 ella.yu@watchguard.com ')
if mibBuilder.loadTexts: wgInfoModule.setDescription('The MIB module describes general information of WatchGuard system. Mainly, the information obtained from this MIB is used by wgInfoSystemMIB, wgClientMIB, wgSystemStatisticsMIB, wgIpsecTunnelMIB, wgHAMIB.')
wgHAMIB = ObjectIdentity((1, 3, 6, 1, 4, 1, 3097, 6, 6))
if mibBuilder.loadTexts: wgHAMIB.setStatus('current')
if mibBuilder.loadTexts: wgHAMIB.setDescription('This is the base object identifier for all HA related branches.')
wgHALocal = ObjectIdentity((1, 3, 6, 1, 4, 1, 3097, 6, 6, 1))
if mibBuilder.loadTexts: wgHALocal.setStatus('current')
if mibBuilder.loadTexts: wgHALocal.setDescription('This is the base object identifier for all objects which are belong to local appliance.')
wgHAPeer = ObjectIdentity((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2))
if mibBuilder.loadTexts: wgHAPeer.setStatus('current')
if mibBuilder.loadTexts: wgHAPeer.setDescription('This is the base object identifier for all objects which are belong to peer appliance.')
wgHAStatus = MibScalar((1, 3, 6, 1, 4, 1, 3097, 6, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("disabled", 0), ("unknown", 1), ("as-primary-active", 2), ("as-secondary-active", 3), ("aa-primary-ative", 4), ("aa-secondary-active", 5), ("aa-primary-takeover", 6), ("aa-secondary-takeover", 7), ("standby", 8), ("admin", 9), ("failed", 10), ("unavailable", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAStatus.setStatus('current')
if mibBuilder.loadTexts: wgHAStatus.setDescription("Indicates current status of local appliance. disabled: The local appliance of HA system is not enabled. unknown: The local appliance of HA system is in initialization as-primary-active: The local appliance that is the primary appliance of HA/AS system is in active mode. This status is also called MASTER in some systems. as-secondary-active: The local appliance that is the secondary appliance of HA/AS system is in active mode. This status is also called BACKUP in some systems. aa-primary-ative: The local appliance that is the primary appliance of HA/AA system is in active mode. aa-secondary-active: The local appliance that is the secondary appliance of HA/AA system is in active mode. aa-primary-takeover: The local appliance that is the primary appliance of HA/AA system has taken over the peer's duty. aa-secondary-takeover: The local appliance of the secondary appliance of HA/AA system has taken over the peer's duty. standby: The local appliance of HA/AS system is in standby mode. admin: The local appliance of HA system detects an mismatched configuration and waits for system administrator to reslove the conflict. failed: The local appliance of the HA system is down due to forced failover or other reasons. unavailable: It's reported when local appliance of HA system is unabled to get status information. ")
wgHAPeerStatus = MibScalar((1, 3, 6, 1, 4, 1, 3097, 6, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unavailable", 0), ("active", 1), ("standby", 2), ("admin", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAPeerStatus.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerStatus.setDescription("Indicates current status of peer appliance. unavailable: It's reported when peer appliance of HA system is unabled to get status information. active: The peer applicance of HA system is in active mode. standby: The peer applicance of HA system is in standby mode. admin: The peer applicance of HA system dectects an mismatched configuration and waits for system administrator to reslove the conflict. failed: The peer appliance of HA system is down due to forced failover or other reasons. ")
wgHALastDBSyncTime = MibScalar((1, 3, 6, 1, 4, 1, 3097, 6, 6, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHALastDBSyncTime.setStatus('current')
if mibBuilder.loadTexts: wgHALastDBSyncTime.setDescription('The last DB synchronized time of local appliance.')
wgHAError = MibScalar((1, 3, 6, 1, 4, 1, 3097, 6, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("no-error", 0), ("mismatched-ha-id", 1), ("mismatched-software", 2), ("mismatched-database", 3), ("mismatched-hardware", 4), ("forced-fail", 5), ("invalid-ha-role", 6), ("link-down", 7), ("lost-mia-heartbeat", 8), ("mia-not-responding", 9), ("admin-command-failed", 10), ("detect-ha-error", 11), ("unavailable", 12), ("hotsync-failed", 13), ("config-sync-failed", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAError.setStatus('current')
if mibBuilder.loadTexts: wgHAError.setDescription('Reports the current error that occurred in local appliance .')
wgHAPeerError = MibScalar((1, 3, 6, 1, 4, 1, 3097, 6, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("no-error", 0), ("mismatched-ha-id", 1), ("mismatched-software", 2), ("mismatched-database", 3), ("mismatched-hardware", 4), ("forced-fail", 5), ("invalid-ha-role", 6), ("link-down", 7), ("lost-mia-heartbeat", 8), ("mia-not-responding", 9), ("admin-command-failed", 10), ("detect-ha-error", 11), ("unavailable", 12), ("hotsync-failed", 13), ("config-sync-failed", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAPeerError.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerError.setDescription('Reports the current error that occurred in peer appliance.')
wgHAPeerSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAPeerSerialNumber.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerSerialNumber.setDescription('The serial number of peer appliance.')
wgHAPeerLastDBSyncTime = MibScalar((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAPeerLastDBSyncTime.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerLastDBSyncTime.setDescription('The last DB synchronized time of peer appliance.')
wgHAPeerDevice = ObjectIdentity((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 3))
if mibBuilder.loadTexts: wgHAPeerDevice.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerDevice.setDescription('This is the base object for parameters and configuration data of devices in this entity.')
wgHAPeerCounters = ObjectIdentity((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 4))
if mibBuilder.loadTexts: wgHAPeerCounters.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerCounters.setDescription('This is the base object for parameters and configuration data of devices in this entity.')
wgHAPeerIfNumber = MibScalar((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 3, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAPeerIfNumber.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerIfNumber.setDescription('The number of RapidCard installed in this entity.')
wgHAPeerIfTable = MibTable((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 3, 2), )
if mibBuilder.loadTexts: wgHAPeerIfTable.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerIfTable.setDescription('A list of RapidCard entries. The number of entries is given by the value of wgHAPeerDeviceNumber.')
wgHAPeerIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 3, 2, 1), ).setIndexNames((0, "WATCHGUARD-HA-MIB", "wgHAPeerIfIndex"))
if mibBuilder.loadTexts: wgHAPeerIfEntry.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerIfEntry.setDescription('A RapidCard entry containing objects for a particular RapidCard.')
wgHAPeerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 3, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAPeerIfIndex.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerIfIndex.setDescription('The unique value for each interface.')
wgHAPeerIfIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 3, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAPeerIfIpAddr.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerIfIpAddr.setDescription('The ip address of the interface.')
wgHAPeerIfLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("down", 0), ("up", 1), ("other", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAPeerIfLinkStatus.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerIfLinkStatus.setDescription('The current state of the interface.')
wgHAPeerSystemCpuUtil = MibScalar((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 4, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAPeerSystemCpuUtil.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerSystemCpuUtil.setDescription('The CPU utilization of the peer system in last 5 seconds.')
wgHAPeerSystemTotalSendBytes = MibScalar((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 4, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAPeerSystemTotalSendBytes.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerSystemTotalSendBytes.setDescription('The total number of bytes sent since peer system is up.')
wgHAPeerSystemTotalRecvBytes = MibScalar((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 4, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAPeerSystemTotalRecvBytes.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerSystemTotalRecvBytes.setDescription('The total number of bytes received since peer system is up.')
wgHAPeerSystemTotalSendPackets = MibScalar((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 4, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAPeerSystemTotalSendPackets.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerSystemTotalSendPackets.setDescription('The total number of packets sent since peer system is up.')
wgHAPeerSystemTotalRecvPackets = MibScalar((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 4, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAPeerSystemTotalRecvPackets.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerSystemTotalRecvPackets.setDescription('The total number of packets received since peer system is up.')
wgHAPeerSystemStreamReqTotal = MibScalar((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 4, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAPeerSystemStreamReqTotal.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerSystemStreamReqTotal.setDescription('The total number of the connection requests since system is up.')
wgHAPeerSystemStreamReqDrop = MibScalar((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 4, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAPeerSystemStreamReqDrop.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerSystemStreamReqDrop.setDescription('The total number of the connection requests being dropped since system is up.')
wgHAPeerSystemCurrIpsecTunnels = MibScalar((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 4, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAPeerSystemCurrIpsecTunnels.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerSystemCurrIpsecTunnels.setDescription('The number of ipsec tunnels in the peer system currently.')
wgHAPeerSystemCpuUtil1 = MibScalar((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 4, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAPeerSystemCpuUtil1.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerSystemCpuUtil1.setDescription('The CPU utilization of the peer system in last 1 minute.')
wgHAPeerSystemCpuUtil5 = MibScalar((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 4, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAPeerSystemCpuUtil5.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerSystemCpuUtil5.setDescription('The CPU utilization of the peer system in last 5 minutes.')
wgHAPeerSystemCpuUtil15 = MibScalar((1, 3, 6, 1, 4, 1, 3097, 6, 6, 2, 4, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgHAPeerSystemCpuUtil15.setStatus('current')
if mibBuilder.loadTexts: wgHAPeerSystemCpuUtil15.setDescription('The CPU utilization of the peer system in last 15 minutes.')
mibBuilder.exportSymbols("WATCHGUARD-HA-MIB", wgHAPeerSystemCpuUtil1=wgHAPeerSystemCpuUtil1, wgHAPeerIfNumber=wgHAPeerIfNumber, wgHAPeerSystemCpuUtil5=wgHAPeerSystemCpuUtil5, wgHAPeerSystemCurrIpsecTunnels=wgHAPeerSystemCurrIpsecTunnels, wgHAPeerSystemCpuUtil15=wgHAPeerSystemCpuUtil15, wgHAPeerSystemTotalSendBytes=wgHAPeerSystemTotalSendBytes, wgHAPeerSystemTotalSendPackets=wgHAPeerSystemTotalSendPackets, wgHAPeerIfLinkStatus=wgHAPeerIfLinkStatus, wgHAPeerSystemStreamReqDrop=wgHAPeerSystemStreamReqDrop, wgHAPeerSystemTotalRecvBytes=wgHAPeerSystemTotalRecvBytes, wgHALocal=wgHALocal, wgHAError=wgHAError, wgHAPeerDevice=wgHAPeerDevice, wgHAPeerCounters=wgHAPeerCounters, wgHAPeerStatus=wgHAPeerStatus, PYSNMP_MODULE_ID=wgInfoModule, wgHAPeerIfTable=wgHAPeerIfTable, wgHAMIB=wgHAMIB, wgInfoModule=wgInfoModule, wgHAPeerSerialNumber=wgHAPeerSerialNumber, wgHALastDBSyncTime=wgHALastDBSyncTime, wgHAPeerIfEntry=wgHAPeerIfEntry, wgHAPeer=wgHAPeer, wgHAPeerSystemCpuUtil=wgHAPeerSystemCpuUtil, wgHAPeerError=wgHAPeerError, wgHAPeerSystemStreamReqTotal=wgHAPeerSystemStreamReqTotal, wgHAPeerIfIpAddr=wgHAPeerIfIpAddr, wgHAStatus=wgHAStatus, wgHAPeerIfIndex=wgHAPeerIfIndex, wgHAPeerLastDBSyncTime=wgHAPeerLastDBSyncTime, wgHAPeerSystemTotalRecvPackets=wgHAPeerSystemTotalRecvPackets)
