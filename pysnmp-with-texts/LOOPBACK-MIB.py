#
# PySNMP MIB module LOOPBACK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LOOPBACK-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:56:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
InetAddressIPv4, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv4")
switch, = mibBuilder.importSymbols("QUANTA-SWITCH-MIB", "switch")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, ObjectIdentity, Bits, ModuleIdentity, Integer32, IpAddress, TimeTicks, Counter32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter64, Unsigned32, Gauge32, mib_2 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ObjectIdentity", "Bits", "ModuleIdentity", "Integer32", "IpAddress", "TimeTicks", "Counter32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter64", "Unsigned32", "Gauge32", "mib-2")
RowStatus, TextualConvention, DisplayString, PhysAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString", "PhysAddress", "TruthValue")
loopback = ModuleIdentity((1, 3, 6, 1, 4, 1, 7244, 2, 22))
if mibBuilder.loadTexts: loopback.setLastUpdated('201108310000Z')
if mibBuilder.loadTexts: loopback.setOrganization('QCI')
if mibBuilder.loadTexts: loopback.setContactInfo(' Customer Support Postal: Quanta Computer Inc. 4, Wen Ming 1 St., Kuei Shan Hsiang, Tao Yuan Shien, Taiwan, R.O.C. Tel: +886 3 328 0050 E-Mail: strong.chen@quantatw.com')
if mibBuilder.loadTexts: loopback.setDescription('The Quanta Private MIB for Loopback IPV6 address configuration')
agentLoopbackGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 22, 1))
agentLoopbackTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 22, 1, 1), )
if mibBuilder.loadTexts: agentLoopbackTable.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackTable.setDescription('A summary table of the Loopback instances')
agentLoopbackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 22, 1, 1, 1), ).setIndexNames((0, "LOOPBACK-MIB", "agentLoopbackID"))
if mibBuilder.loadTexts: agentLoopbackEntry.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackEntry.setDescription('')
agentLoopbackID = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 22, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: agentLoopbackID.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackID.setDescription('The Loopback ID is associated with Internal Interface number which will be generated when we create a loopback.')
agentLoopbackIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 22, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoopbackIfIndex.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackIfIndex.setDescription('This is external interface associated with inetrnal interface of loopback. The Loopback ID is associated with Internal Interface number which will be generated when we create a loopback.')
agentLoopbackIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 22, 1, 1, 1, 3), InetAddressIPv4()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLoopbackIPAddress.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackIPAddress.setDescription('The IP Address configured for the respective loopback')
agentLoopbackIPSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 22, 1, 1, 1, 4), InetAddressIPv4()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLoopbackIPSubnet.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackIPSubnet.setDescription('The Subnet mask configured for the respective loopback')
agentLoopbackStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 22, 1, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentLoopbackStatus.setStatus('current')
if mibBuilder.loadTexts: agentLoopbackStatus.setDescription('Status of this instance. The rows can be added/deleted in the table by setting createAndGo/destroy respectively active(1) - this loopback instance is active createAndGo(4) - set to this value to create an instance destroy(6) - set to this value to delete an instance')
mibBuilder.exportSymbols("LOOPBACK-MIB", agentLoopbackEntry=agentLoopbackEntry, PYSNMP_MODULE_ID=loopback, agentLoopbackIPAddress=agentLoopbackIPAddress, agentLoopbackGroup=agentLoopbackGroup, agentLoopbackIPSubnet=agentLoopbackIPSubnet, agentLoopbackStatus=agentLoopbackStatus, agentLoopbackIfIndex=agentLoopbackIfIndex, loopback=loopback, agentLoopbackTable=agentLoopbackTable, agentLoopbackID=agentLoopbackID)
