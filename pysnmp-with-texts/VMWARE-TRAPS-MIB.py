#
# PySNMP MIB module VMWARE-TRAPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VMWARE-TRAPS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:35:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, Counter64, Integer32, TimeTicks, Unsigned32, NotificationType, IpAddress, ObjectIdentity, Counter32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "Counter64", "Integer32", "TimeTicks", "Unsigned32", "NotificationType", "IpAddress", "ObjectIdentity", "Counter32", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
vmwTraps, vmware = mibBuilder.importSymbols("VMWARE-ROOT-MIB", "vmwTraps", "vmware")
vmDisplayName, = mibBuilder.importSymbols("VMWARE-VMINFO-MIB", "vmDisplayName")
vmPoweredOn = NotificationType((1, 3, 6, 1, 4, 1, 6876) + (0,1)).setObjects(("VMWARE-TRAPS-MIB", "vmID"), ("VMWARE-TRAPS-MIB", "vmConfigFile"), ("VMWARE-VMINFO-MIB", "vmDisplayName"))
if mibBuilder.loadTexts: vmPoweredOn.setDescription('This trap is sent when a virtual machine is powered ON from a suspended or a powered off state.')
vmPoweredOff = NotificationType((1, 3, 6, 1, 4, 1, 6876) + (0,2)).setObjects(("VMWARE-TRAPS-MIB", "vmID"), ("VMWARE-TRAPS-MIB", "vmConfigFile"), ("VMWARE-VMINFO-MIB", "vmDisplayName"))
if mibBuilder.loadTexts: vmPoweredOff.setDescription('This trap is sent when a virtual machine is powered OFF.')
vmHBLost = NotificationType((1, 3, 6, 1, 4, 1, 6876) + (0,3)).setObjects(("VMWARE-TRAPS-MIB", "vmID"), ("VMWARE-TRAPS-MIB", "vmConfigFile"), ("VMWARE-VMINFO-MIB", "vmDisplayName"))
if mibBuilder.loadTexts: vmHBLost.setDescription('This trap is sent when a virtual machine detects a loss in guest heartbeat.')
vmHBDetected = NotificationType((1, 3, 6, 1, 4, 1, 6876) + (0,4)).setObjects(("VMWARE-TRAPS-MIB", "vmID"), ("VMWARE-TRAPS-MIB", "vmConfigFile"), ("VMWARE-VMINFO-MIB", "vmDisplayName"))
if mibBuilder.loadTexts: vmHBDetected.setDescription('This trap is sent when a virtual machine detects or regains the guest heartbeat.')
vmSuspended = NotificationType((1, 3, 6, 1, 4, 1, 6876) + (0,5)).setObjects(("VMWARE-TRAPS-MIB", "vmID"), ("VMWARE-TRAPS-MIB", "vmConfigFile"), ("VMWARE-VMINFO-MIB", "vmDisplayName"))
if mibBuilder.loadTexts: vmSuspended.setDescription('This trap is sent when a virtual machine is suspended.')
vmID = MibScalar((1, 3, 6, 1, 4, 1, 6876, 50, 101), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmID.setStatus('mandatory')
if mibBuilder.loadTexts: vmID.setDescription('This is the ID of the affected vm generating the trap. If the vmID is non-existent, (such as for a power-off trap) -1 is returned.')
vmConfigFile = MibScalar((1, 3, 6, 1, 4, 1, 6876, 50, 102), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmConfigFile.setStatus('mandatory')
if mibBuilder.loadTexts: vmConfigFile.setDescription('This is the config file of the affected vm generating the trap.')
vpxdTrap = NotificationType((1, 3, 6, 1, 4, 1, 6876, 50) + (0,201)).setObjects(("VMWARE-TRAPS-MIB", "vpxdTrapType"), ("VMWARE-TRAPS-MIB", "vpxdHostName"), ("VMWARE-TRAPS-MIB", "vpxdVMName"), ("VMWARE-TRAPS-MIB", "vpxdNewStatus"), ("VMWARE-TRAPS-MIB", "vpxdOldStatus"), ("VMWARE-TRAPS-MIB", "vpxdObjValue"))
if mibBuilder.loadTexts: vpxdTrap.setDescription('This trap is sent when entity status changed.')
vpxdTrapType = MibScalar((1, 3, 6, 1, 4, 1, 6876, 50, 301), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpxdTrapType.setStatus('mandatory')
if mibBuilder.loadTexts: vpxdTrapType.setDescription('This is the trap type in the preceding traps.')
vpxdHostName = MibScalar((1, 3, 6, 1, 4, 1, 6876, 50, 302), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpxdHostName.setStatus('mandatory')
if mibBuilder.loadTexts: vpxdHostName.setDescription('This is the name of the host in the preceding traps.')
vpxdVMName = MibScalar((1, 3, 6, 1, 4, 1, 6876, 50, 303), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpxdVMName.setStatus('mandatory')
if mibBuilder.loadTexts: vpxdVMName.setDescription('This is the name of the VM in the preceding traps.')
vpxdOldStatus = MibScalar((1, 3, 6, 1, 4, 1, 6876, 50, 304), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpxdOldStatus.setStatus('mandatory')
if mibBuilder.loadTexts: vpxdOldStatus.setDescription('This is the old status in the preceding traps.')
vpxdNewStatus = MibScalar((1, 3, 6, 1, 4, 1, 6876, 50, 305), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpxdNewStatus.setStatus('mandatory')
if mibBuilder.loadTexts: vpxdNewStatus.setDescription('This is the new status in the preceding traps.')
vpxdObjValue = MibScalar((1, 3, 6, 1, 4, 1, 6876, 50, 306), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpxdObjValue.setStatus('mandatory')
if mibBuilder.loadTexts: vpxdObjValue.setDescription('This is the current object value in the preceding traps.')
mibBuilder.exportSymbols("VMWARE-TRAPS-MIB", vmHBDetected=vmHBDetected, vmPoweredOn=vmPoweredOn, vpxdHostName=vpxdHostName, vpxdTrap=vpxdTrap, vpxdOldStatus=vpxdOldStatus, vmID=vmID, vpxdVMName=vpxdVMName, vpxdTrapType=vpxdTrapType, vmSuspended=vmSuspended, vmConfigFile=vmConfigFile, vmPoweredOff=vmPoweredOff, vpxdNewStatus=vpxdNewStatus, vmHBLost=vmHBLost, vpxdObjValue=vpxdObjValue)
