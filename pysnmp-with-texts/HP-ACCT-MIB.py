#
# PySNMP MIB module HP-ACCT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ACCT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:33:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Gauge32, Unsigned32, MibIdentifier, NotificationType, Counter64, ObjectIdentity, IpAddress, Counter32, Bits, Integer32, iso, TimeTicks, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Unsigned32", "MibIdentifier", "NotificationType", "Counter64", "ObjectIdentity", "IpAddress", "Counter32", "Bits", "Integer32", "iso", "TimeTicks", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hpSwitchAccountingMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 17))
hpSwitchAccountingMIB.setRevisions(('2014-08-04 00:00', '2011-03-05 00:00', '2009-07-14 00:00', '2008-07-11 00:00', '2001-08-22 02:38',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpSwitchAccountingMIB.setRevisionsDescriptions(("Updated 'hpSwitchAcctServiceMethod' object with 'tacacs' value and updated the description.", "Updated 'hpSwitchAcctServiceMethod' object with 'syslog' value.", "Added 'hpSwitchAcctSessionIdentification' object, updated 'hpSwitchAcctServiceMode' object with 'interim-update' value.", "Added 'hpSwitchAcctServiceServerGroupName' object.", 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: hpSwitchAccountingMIB.setLastUpdated('201408040000Z')
if mibBuilder.loadTexts: hpSwitchAccountingMIB.setOrganization('HP Networking')
if mibBuilder.loadTexts: hpSwitchAccountingMIB.setContactInfo('Hewlett Packard Company 8000 Foothills Blvd. Roseville, CA 95747')
if mibBuilder.loadTexts: hpSwitchAccountingMIB.setDescription('This MIB module describes objects for managing the Accounting service features of devices in the HP Integrated Communication Facility product line.')
hpSwitchAccountingConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 17, 1))
hpSwitchAcctUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 525600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAcctUpdateInterval.setStatus('current')
if mibBuilder.loadTexts: hpSwitchAcctUpdateInterval.setDescription('Defines periodic intervals to send accounting update records (in minutes).')
hpSwitchAcctSuppressNullUserName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAcctSuppressNullUserName.setStatus('current')
if mibBuilder.loadTexts: hpSwitchAcctSuppressNullUserName.setDescription('An indication of whether accounting records need to be generated for users, whose username string is NULL. If yes(1), then prevent accounting records from being generated.')
hpSwitchAcctSessionIdentification = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unique", 1), ("common", 2))).clone('unique')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAcctSessionIdentification.setStatus('current')
if mibBuilder.loadTexts: hpSwitchAcctSessionIdentification.setDescription("Specifies how accounting sessions for different accounting service types will be identified. unique - use a unique accounting session identifier in accounting records for each accounting service type (network, exec, system, commands). common - use identical accounting session identifier in all accounting records sent out of switch for a given user's access session, irrespective to the accounting service type that generates the records within the session.")
hpSwitchAcctServiceTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 17, 2), )
if mibBuilder.loadTexts: hpSwitchAcctServiceTable.setStatus('current')
if mibBuilder.loadTexts: hpSwitchAcctServiceTable.setDescription('This table lists the accounting service types, accounting methods and the way of how accounting sessions should be initiated or terminated.')
hpSwitchAcctServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 17, 2, 1), ).setIndexNames((0, "HP-ACCT-MIB", "hpSwitchAcctServiceIndex"))
if mibBuilder.loadTexts: hpSwitchAcctServiceEntry.setStatus('current')
if mibBuilder.loadTexts: hpSwitchAcctServiceEntry.setDescription('An accounting service table entry.')
hpSwitchAcctServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 17, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("network", 1), ("exec", 2), ("system", 3), ("commands", 4))))
if mibBuilder.loadTexts: hpSwitchAcctServiceIndex.setStatus('current')
if mibBuilder.loadTexts: hpSwitchAcctServiceIndex.setDescription('Specifies the accounting service type configured on the switch.')
hpSwitchAcctServiceMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 17, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("radius", 2), ("syslog", 3), ("tacacs", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAcctServiceMethod.setStatus('current')
if mibBuilder.loadTexts: hpSwitchAcctServiceMethod.setDescription('The method used for accounting. A value of none (1) indicates that accounting is not performed. A value of radius (2) indicates that accounting is performed using RADIUS. A value of syslog (3) indicates that accounting is performed using SYSLOG. A value of tacacs (4) indicates that accounting is performed using TACACS+.')
hpSwitchAcctServiceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 17, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("startStop", 2), ("stopOnly", 3), ("interimUpdate", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAcctServiceMode.setStatus('current')
if mibBuilder.loadTexts: hpSwitchAcctServiceMode.setDescription("The mode of sending accounting messages to the server. A value of none (1) indicates that no accounting messages are sent to the server. A value of startStop (2) indicates that a start accounting message is sent to the server at the beginning of an event and a stop accounting message is sent at the end of the event. A value of stopOnly (3) indicates that a stop accounting message is sent at the end of an event. A value of interim update (4) indicates that an accounting message is sent to the server after the command is executed. This option can be set only if the value of hpSwitchAcctServiceIndex is set to 'commands.")
hpSwitchAcctServiceServerGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 17, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAcctServiceServerGroupName.setStatus('current')
if mibBuilder.loadTexts: hpSwitchAcctServiceServerGroupName.setDescription('The name that defines the RADIUS server group that this authentication method is associated with. See the documentation for the maximum length of the group name.')
hpSwitchAccountingMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 17, 3))
hpSwitchAccountingMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 17, 3, 1))
hpSwitchAccountingMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 17, 3, 2))
hpSwitchAccountingMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 17, 3, 1, 1)).setObjects(("HP-ACCT-MIB", "hpSwitchAccountingConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAccountingMIBCompliance = hpSwitchAccountingMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: hpSwitchAccountingMIBCompliance.setDescription('The compliance statement for devices implementing the HP Accounting Mib.')
hpSwitchAccountingConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 17, 3, 2, 1)).setObjects(("HP-ACCT-MIB", "hpSwitchAcctUpdateInterval"), ("HP-ACCT-MIB", "hpSwitchAcctSuppressNullUserName"), ("HP-ACCT-MIB", "hpSwitchAcctSessionIdentification"), ("HP-ACCT-MIB", "hpSwitchAcctServiceMethod"), ("HP-ACCT-MIB", "hpSwitchAcctServiceMode"), ("HP-ACCT-MIB", "hpSwitchAcctServiceServerGroupName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAccountingConfigGroup = hpSwitchAccountingConfigGroup.setStatus('current')
if mibBuilder.loadTexts: hpSwitchAccountingConfigGroup.setDescription('A collection of objects for configuring the accounting features.')
mibBuilder.exportSymbols("HP-ACCT-MIB", hpSwitchAcctServiceMode=hpSwitchAcctServiceMode, hpSwitchAccountingMIB=hpSwitchAccountingMIB, hpSwitchAcctServiceServerGroupName=hpSwitchAcctServiceServerGroupName, hpSwitchAccountingConfigGroup=hpSwitchAccountingConfigGroup, PYSNMP_MODULE_ID=hpSwitchAccountingMIB, hpSwitchAcctServiceIndex=hpSwitchAcctServiceIndex, hpSwitchAcctServiceMethod=hpSwitchAcctServiceMethod, hpSwitchAccountingConfig=hpSwitchAccountingConfig, hpSwitchAcctServiceEntry=hpSwitchAcctServiceEntry, hpSwitchAccountingMIBCompliances=hpSwitchAccountingMIBCompliances, hpSwitchAcctSessionIdentification=hpSwitchAcctSessionIdentification, hpSwitchAcctUpdateInterval=hpSwitchAcctUpdateInterval, hpSwitchAccountingMIBGroups=hpSwitchAccountingMIBGroups, hpSwitchAccountingMIBCompliance=hpSwitchAccountingMIBCompliance, hpSwitchAcctServiceTable=hpSwitchAcctServiceTable, hpSwitchAcctSuppressNullUserName=hpSwitchAcctSuppressNullUserName, hpSwitchAccountingMIBConformance=hpSwitchAccountingMIBConformance)
