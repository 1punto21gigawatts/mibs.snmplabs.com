#
# PySNMP MIB module REDSTONE-SMI (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/REDSTONE-SMI
# Produced by pysmi-0.3.4 at Wed May  1 14:55:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
enterprises, Gauge32, Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter64, ModuleIdentity, NotificationType, ObjectIdentity, MibIdentifier, Counter32, iso, Bits, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "Gauge32", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter64", "ModuleIdentity", "NotificationType", "ObjectIdentity", "MibIdentifier", "Counter32", "iso", "Bits", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
redstone = ModuleIdentity((1, 3, 6, 1, 4, 1, 2773))
redstone.setRevisions(('1998-01-01 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: redstone.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: redstone.setLastUpdated('9801010000Z')
if mibBuilder.loadTexts: redstone.setOrganization('Redstone Communications, Inc.')
if mibBuilder.loadTexts: redstone.setContactInfo(' Redstone Communications, Inc. 5 Carlisle Road Westford MA 01886 USA Tel: +1-978-692-1999 Email: mib@redstonecom.com ')
if mibBuilder.loadTexts: redstone.setDescription('The Structure of Management Information for the Redstone Communications Inc. enterprise.')
rsRegistration = ObjectIdentity((1, 3, 6, 1, 4, 1, 2773, 1))
if mibBuilder.loadTexts: rsRegistration.setStatus('current')
if mibBuilder.loadTexts: rsRegistration.setDescription('The root OBJECT IDENTIFIER under which administratively assigned OBJECT IDENTIFIERS are registered, for example, sysObjectIDs, hardware components, chip sets, etc.')
rsRegGeneric = ObjectIdentity((1, 3, 6, 1, 4, 1, 2773, 1, 1))
if mibBuilder.loadTexts: rsRegGeneric.setStatus('current')
if mibBuilder.loadTexts: rsRegGeneric.setDescription('The root OBJECT IDENTIFIER under which identifiers of generic significance are assigned.')
rsRegGenericOther = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 1, 1, 1))
rsRegGenericNone = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 1, 1, 2))
rsRegGenericUnknown = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 1, 1, 3))
rsRegHardware = ObjectIdentity((1, 3, 6, 1, 4, 1, 2773, 1, 2))
if mibBuilder.loadTexts: rsRegHardware.setStatus('current')
if mibBuilder.loadTexts: rsRegHardware.setDescription('The root OBJECT IDENTIFIER under which identifiers for hardware components are assigned.')
rsRegHwPlatform = ObjectIdentity((1, 3, 6, 1, 4, 1, 2773, 1, 2, 1))
if mibBuilder.loadTexts: rsRegHwPlatform.setStatus('current')
if mibBuilder.loadTexts: rsRegHwPlatform.setDescription('The root OBJECT IDENTIFIER under which identifiers for platforms are assigned. These identifiers are typically used as sysObjectID values.')
rsRegHwPlatformRX1400 = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 1, 2, 1, 1))
rsRegHwPlatformRX700 = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 1, 2, 1, 2))
rsRegHwModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 2773, 1, 2, 2))
if mibBuilder.loadTexts: rsRegHwModule.setStatus('current')
if mibBuilder.loadTexts: rsRegHwModule.setDescription('The root OBJECT IDENTIFIER under which identifiers for platform modules are assigned.')
rsRegHwChip = ObjectIdentity((1, 3, 6, 1, 4, 1, 2773, 1, 2, 3))
if mibBuilder.loadTexts: rsRegHwChip.setStatus('current')
if mibBuilder.loadTexts: rsRegHwChip.setDescription('The root OBJECT IDENTIFIER under which identifiers for chip sets are assigned.')
rsMgmt = ObjectIdentity((1, 3, 6, 1, 4, 1, 2773, 2))
if mibBuilder.loadTexts: rsMgmt.setStatus('current')
if mibBuilder.loadTexts: rsMgmt.setDescription('The root OBJECT IDENTIFIER under which enterprise MIB modules are defined.')
rsRegAgentCapabilities = ObjectIdentity((1, 3, 6, 1, 4, 1, 2773, 3))
if mibBuilder.loadTexts: rsRegAgentCapabilities.setStatus('current')
if mibBuilder.loadTexts: rsRegAgentCapabilities.setDescription('The root OBJECT IDENTIFIER under which AGENT-CAPABILITIES identifiers are assigned.')
rsExperiment = ObjectIdentity((1, 3, 6, 1, 4, 1, 2773, 4))
if mibBuilder.loadTexts: rsExperiment.setStatus('current')
if mibBuilder.loadTexts: rsExperiment.setDescription('The root OBJECT IDENTIFIER under which experimental MIBs may be temporarily located for development purposes. Support for MIBs in the rsExperiment subtree will be deleted when a permanent object identifier is assigned.')
mibBuilder.exportSymbols("REDSTONE-SMI", PYSNMP_MODULE_ID=redstone, rsRegistration=rsRegistration, rsRegHwModule=rsRegHwModule, rsRegAgentCapabilities=rsRegAgentCapabilities, rsRegHardware=rsRegHardware, redstone=redstone, rsRegGeneric=rsRegGeneric, rsExperiment=rsExperiment, rsMgmt=rsMgmt, rsRegHwPlatformRX700=rsRegHwPlatformRX700, rsRegHwPlatform=rsRegHwPlatform, rsRegHwPlatformRX1400=rsRegHwPlatformRX1400, rsRegGenericOther=rsRegGenericOther, rsRegGenericNone=rsRegGenericNone, rsRegHwChip=rsRegHwChip, rsRegGenericUnknown=rsRegGenericUnknown)
