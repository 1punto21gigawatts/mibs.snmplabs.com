#
# PySNMP MIB module A3COM-HUAWEI-EFM-COMMON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-EFM-COMMON-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:04:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cEpon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cEpon")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
mib_2, ModuleIdentity, TimeTicks, Integer32, Bits, Counter64, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ObjectIdentity, IpAddress, iso, Counter32, Gauge32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "mib-2", "ModuleIdentity", "TimeTicks", "Integer32", "Bits", "Counter64", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ObjectIdentity", "IpAddress", "iso", "Counter32", "Gauge32", "MibIdentifier")
TextualConvention, MacAddress, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "MacAddress", "DisplayString", "DateAndTime")
h3cEfmOamMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3))
h3cEfmOamMIB.setRevisions(('2004-10-24 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: h3cEfmOamMIB.setRevisionsDescriptions(('Initial version, published as RFC XXXX.',))
if mibBuilder.loadTexts: h3cEfmOamMIB.setLastUpdated('200410240000Z')
if mibBuilder.loadTexts: h3cEfmOamMIB.setOrganization('IETF Ethernet Interfaces and Hub MIB Working Group')
if mibBuilder.loadTexts: h3cEfmOamMIB.setContactInfo('WG Charter: http://www.ietf.org/html.charters/hubmib-charter.html Mailing lists: General Discussion: hubmib@ietf.org To Subscribe: hubmib-requests@ietf.org In Body: subscribe your_email_address Chair: Dan Romascanu, Avaya Tel: +972-3-645-8414 Email: dromasca@avaya.com Editor: Matt Squire Hatteras Networks Tel: +1-919-991-5460 Fax: +1-919-991-0743 E-mail: msquire@hatterasnetworks.com ')
if mibBuilder.loadTexts: h3cEfmOamMIB.setDescription("The MIB module for managing the new Ethernet OAM features introduced by the Ethernet in the First Mile task force (IEEE 802.3ah). The functionality presented here is based on IEEE 802.3ah [802.3ah], released in October, 2004. In particular, this MIB focused on the changes to Clause 30 of the draft that are not specific to any physical layer. These changes are primarily reflected in the new OAM features developed under this project, that can be applied to any Ethernet like interface. The OAM features are described in Clause 57 of [802.3ah]. This mib is excerpted from the draft files directly,only changed the object name,added the h3c as prefix. The following reference is used throughout this MIB module: [802.3ah] refers to: IEEE Std 802.3ah-2004: 'Draft amendment to - Information technology - Telecommunications and information exchange between systems - Local and metropolitan are networks - Specific requirements - Part 3: Carrier sense multiple access with collision detection (CSMA/CD) access method and physical layer specifications - Media Access Control Parameters, Physical Layers and Management Parameters for subscriber access networks', October 2004. [802-2001] refers to: 'IEEE Standard for LAN/MAN (Local Area Network/Metropolitan Area Network): Overview and Architecture', IEEE 802, June 2001. Copyright (c) The Internet Society (2004). This version of this MIB module is part of RFC XXXX; See the RFC itself for full legal notices. ")
h3cDot3OamMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1))
h3cDot3OamConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 2))
class Dot3Oui(TextualConvention, OctetString):
    description = '24-bit Organizationally Unique Identifier. Information on OUIs can be found in IEEE 802-2001 [802-2001] Clause 9.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(3, 3)
    fixedLength = 3

h3cDot3OamTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 1), )
if mibBuilder.loadTexts: h3cDot3OamTable.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamTable.setDescription('Primary controls and status for the OAM capabilities of an Ethernet like interface. There will be one row in this table for each Ethernet like interface in the system that supports the Ethernet OAM functions defined in [802.3ah].')
h3cDot3OamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cDot3OamEntry.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamEntry.setDescription('An entry in the table, containing information on the Ethernet OAM function for a single Ethernet like interface.')
h3cDot3OamAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot3OamAdminState.setReference('[802.3ah], 30.3.6.1.2')
if mibBuilder.loadTexts: h3cDot3OamAdminState.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamAdminState.setDescription('This object is used to provision the default administrative OAM mode for this interface. This object represents the desired state of OAM for this interface. The h3cDot3OamAdminState always starts in the disabled(1) state until an explicity management action or configuration information retained by the system causes a transition to the enabled(2) state. Note that the value of this object is ignored when the interface is not operating in full-duplex mode. OAM is not supported on half-duplex links. ')
h3cDot3OamOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("disabled", 1), ("linkfault", 2), ("passiveWait", 3), ("activeSendLocal", 4), ("sendLocalAndRemote", 5), ("sendLocalAndRemoteOk", 6), ("oamPeeringLocallyRejected", 7), ("oamPeeringRemotelyRejected", 8), ("operational", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamOperStatus.setReference('[802.3ah], 30.3.6.1.4, 30.3.6.1.10, 30.3.6.1.11')
if mibBuilder.loadTexts: h3cDot3OamOperStatus.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamOperStatus.setDescription('At initialization and failure conditions, two OAM entities on the same full-duplex Ethernet link begin a discovery phase to determine what OAM capabilities may be used on that link. The progress of this initialization is controlled by the OAM sublayer. This value is always disabled(1) if OAM is disabled on this interface via the h3cDot3OamAdminState. If the link has detected a fault and is transmitting OAMPDUs with a link fault indication, the value is linkFault(2). The passiveWait(3) state is returned only by OAM entities in passive mode (h3cDot3OamMode) and reflects the state in which the OAM entity is waiting to see if the peer device is OAM capable. The activeSendLocal(4) is used by active mode devices (h3cDot3OamMode) and reflects the OAM entity actively trying to discover whether the peer has OAM capability but has not yet made that determination. The state sendLocalAndRemote(5) reflects that the local OAM entity has discovered the peer but has not yet accepted or rejected the configuration of the peer. The local device can, for whatever reason, decide that the peer device is unacceptable and decline OAM peering. If the local OAM entity rejects the peer OAM entity, the state becomes oamPeeringLocallyRejected(7). If the OAM peering is allowed by the local device, the state moves to sendLocalAndRemoteOk(6). Note that both the sendLocalAndRemote(5) and oamPeeringLocallyRejected(7) states fall within the state SEND_LOCAL_REMOTE of the Discovery state diagram [802.3ah, Figure 57-5], with the difference being whether the local OAM client has actively rejected the peering or has just not indicated any decision yet. Whether a peering decision has been made is indicated via the local flags field in the OAMPDU (reflected in the aOAMLocalFlagsField of 30.3.6.1.10). If the remote OAM entity rejects the peering, the state becomes oamPeeringRemotelyRejected(8). Note that both the sendLocalAndRemoteOk(6) and oamPeeringRemotelyRejected(8) states fall within the state SEND_LOCAL_REMOTE_OK of the Discovery state diagram [802.3ah, Figure 57-5], with the difference being whether the remote OAM client has rejected the peering or has just not yet decided. This is indicated via the remote flags field in the OAM PDU (reflected in the aOAMRemoteFlagsField of 30.3.6.1.11). When the local OAM entity learns that both it and the remote OAM entity have accepted the peering, the state moves to operational(9) corresponding to the SEND_ANY state of the Discovery state diagram [802.3ah, Figure 57-5]. ')
h3cDot3OamMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("passive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot3OamMode.setReference('[802.3ah], 30.3.6.1.3')
if mibBuilder.loadTexts: h3cDot3OamMode.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamMode.setDescription("This object configures the mode of OAM operation for this Ethernet like interface. OAM on Ethernet interfaces may be in 'active' mode or 'passive' mode. These two modes differ in that active mode provides additional capabilities to initiate monitoring activities with the remote OAM peer entity, while passive mode generally waits for the peer to initiate OAM actions with it. As an example, an active OAM entity can put the remote OAM entity in a loopback state, where a passive OAM entity cannot. Changing this value results in incrementing the configuration revision field of locally generated OAMPDUs (30.3.6.1.12) and potentially re-doing the OAM discovery process if the h3cDot3OamOperStatus was already operational(9). ")
h3cDot3OamMaxOamPduSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 1522))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamMaxOamPduSize.setReference('[802.3ah], 30.3.6.1.8')
if mibBuilder.loadTexts: h3cDot3OamMaxOamPduSize.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamMaxOamPduSize.setDescription('The largest OAMPDU that the OAM entity supports. OAM entities exchange maximum OAMPDU sizes and negotiate to use the smaller of the two maximum OAMPDU sizes between the peers. This value is determined by the local implementation. ')
h3cDot3OamConfigRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamConfigRevision.setReference('[802.3ah], 30.3.6.1.12')
if mibBuilder.loadTexts: h3cDot3OamConfigRevision.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamConfigRevision.setDescription('The configuration revision of the OAM entity as reflected in the latest OAMPDU sent by the OAM entity. The config revision is used by OAM entities to indicate configuration changes have occured which might require the peer OAM entity to re-evaluate whether the peering is allowed. See local_satisfied in [802.3ah, 57.3.1.2]. ')
h3cDot3OamFunctionsSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 1, 1, 6), Bits().clone(namedValues=NamedValues(("unidirectionalSupport", 0), ("loopbackSupport", 1), ("eventSupport", 2), ("variableSupport", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamFunctionsSupported.setReference('[802.3ah], 30.3.6.1.6')
if mibBuilder.loadTexts: h3cDot3OamFunctionsSupported.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamFunctionsSupported.setDescription('The OAM functions supported on this Ethernet like interface. OAM consists of separate functional sets beyond the basic discovery process which is always required. These functional groups can be supported independently by any implementation. These values are communicated to the peer via the local configuration field of Information OAMPDUs. ')
h3cDot3OamPeerTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 2), )
if mibBuilder.loadTexts: h3cDot3OamPeerTable.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamPeerTable.setDescription('Information about the OAM peer for a particular Ethernet like interface. OAM entities communicate with a single OAM peer entity on full-duplex Ethernet links on which OAM is enabled and operating properly. In certain states, the OAM peer information is not available. Whether peer information is available is communicated via the h3cDot3OamPeerStatus object. When this object is inactive, all other information in the row is to be considered invalid. ')
h3cDot3OamPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cDot3OamPeerEntry.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamPeerEntry.setDescription('An entry in the table, containing information on the peer OAM entity for a single Ethernet like interface. Note that there is at most one OAM peer for each Ethernet like interface. There is exactly one row in this table for each Ethernet like interface supporting OAM. ')
h3cDot3OamPeerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamPeerStatus.setReference('N/A')
if mibBuilder.loadTexts: h3cDot3OamPeerStatus.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamPeerStatus.setDescription('This object indicates whether the information in this row should be considered valid. When active(1), the information is valid and represents the current peer of the OAM entity. When inactive(2), the information in this row is invalid. A value of inactive(2) is returned if the h3cDot3OamOperStatus is disabled, passiveWait, or activeSendLocal. For all other values of h3cDot3OamOperStatus, a value of active(1) is returned. ')
h3cDot3OamPeerMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamPeerMacAddress.setReference('[802.3ah], 30.3.6.1.5.')
if mibBuilder.loadTexts: h3cDot3OamPeerMacAddress.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamPeerMacAddress.setDescription('The MAC address of the peer OAM entity. The MAC address is derived from the most recently received OAMPDU. This value is initialized to all zeros (0x000000000000). This value is invalid if the h3cDot3OamPeerStatus is inactive. An OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) and a Slow Protocols subtype equal to that of the subtype reserved for OAM. ')
h3cDot3OamPeerVendorOui = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 2, 1, 3), Dot3Oui()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamPeerVendorOui.setReference('[802.3ah], 30.3.6.1.16.')
if mibBuilder.loadTexts: h3cDot3OamPeerVendorOui.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamPeerVendorOui.setDescription('The OUI of the OAM peer as reflected in the latest Information OAMPDU received with a Local Information TLV. The OUI can be used to identify the vendor of the remote OAM entity. This value is initialized to all zeros (0x000000). This value is considered invalid if the h3cDot3OamPeerStatus is inactive. An Information OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, (4) a OAM code that equals the code reserved for Information OAMPDUs. ')
h3cDot3OamPeerVendorInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamPeerVendorInfo.setReference('[802.3ah], 30.3.6.1.17.')
if mibBuilder.loadTexts: h3cDot3OamPeerVendorInfo.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamPeerVendorInfo.setDescription('The Vendor Info of the OAM peer as reflected in the latest Information OAMPDU received with a Local Information TLV. The vendor information field is within the Local Information TLV, and can be used to determine additional information about the peer entity. The format of the vendor information is unspecified within the 32-bit field. This value is intialized to all zeros (0x00000000). This value is invalid if the h3cDot3OamPeerStatus is inactive. An Information OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) a OAM code that equals the code reserved for Information OAMPDUs. ')
h3cDot3OamPeerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("passive", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamPeerMode.setReference('[802.3ah], 30.3.6.1.7.')
if mibBuilder.loadTexts: h3cDot3OamPeerMode.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamPeerMode.setDescription('The mode of the OAM peer as reflected in the latest Information OAMPDU received with a Local Information TLV. The mode of the peer can be determined from the Configuration field in the Local Information TLV of the last Information OAMPDU received from the peer. This value is initialized to unknown(3), and is not valid if the h3cDot3OamPeerStatus is inactive. An Information OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) a OAM code that equals the code reserved for Information OAMPDUs. ')
h3cDot3OamPeerMaxOamPduSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 1522))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamPeerMaxOamPduSize.setReference('[802.3ah], 30.3.6.1.9.')
if mibBuilder.loadTexts: h3cDot3OamPeerMaxOamPduSize.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamPeerMaxOamPduSize.setDescription('The maximum size of OAMPDU supported by the peer as reflected in the latest Information OAMPDU received with a Local Information TLV. Ethernet OAM on this interface must not use OAMPDUs that exceed this size. The maximum OAMPDU size can be determined from the PDU Configuration field of the Local Information TLV of the last Information OAMPDU received from the peer. This value is initialized to 64, and is invalid if the h3cDot3OamPeerStatus is inactive. An Information OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) a OAM code that equals the code reserved for Information OAMPDUs. ')
h3cDot3OamPeerConfigRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamPeerConfigRevision.setReference('[802.3ah], 30.3.6.1.13.')
if mibBuilder.loadTexts: h3cDot3OamPeerConfigRevision.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamPeerConfigRevision.setDescription('The configuration revision of the OAM peer as reflected in the latest OAMPDU. This attribute is changed by the peer whenever it has a local configuration change for Ethernet OAM this interface. This value is initialized to all zeros (0x00000000), and is invalid if the h3cDot3OamPeerStatus is inactive. The configuration revision can be determined from the Revision field of the Local Information TLV of the most recently received Information OAMPDU with a Local Information TLV. An Information OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) a OAM code that equals the code reserved for Information OAMPDUs. ')
h3cDot3OamPeerFunctionsSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 2, 1, 8), Bits().clone(namedValues=NamedValues(("unidirectionalSupport", 0), ("loopbackSupport", 1), ("eventSupport", 2), ("variableSupport", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamPeerFunctionsSupported.setReference('[802.3ah], REFERENCE 30.3.6.1.7.')
if mibBuilder.loadTexts: h3cDot3OamPeerFunctionsSupported.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamPeerFunctionsSupported.setDescription('The OAM functions supported on this Ethernet like interface. OAM consists of separate functionality sets above the basic discovery process. This value indicates the capabilities of the peer OAM entity with respect to these functions. This value is initialized so all bits are clear, and is invalid if the h3cDot3OamPeerStatus is inactive. The capbilities of the OAM peer can be determined from the configuration field of the Local Information TLV of the most recently received Information OAMPDU with a Local Information TLV. An Information OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) a OAM code that equals the code reserved for Information OAMPDUs. ')
h3cDot3OamLoopbackTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 3), )
if mibBuilder.loadTexts: h3cDot3OamLoopbackTable.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamLoopbackTable.setDescription("This table contains methods to control the loopback state of the local link as well as indicating the status of the loopback function. Loopback can be used to place the remote OAM entity in a state where every received frame (except OAMPDUs) are echoed back over the same interface on which they were received. In this state, at the remote entity, 'normal' traffic is disabled as only the looped back frames are transmitted on the interface. Loopback is thus an intrusive operation that prohibits normal data flow and should be used accordingly. ")
h3cDot3OamLoopbackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cDot3OamLoopbackEntry.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamLoopbackEntry.setDescription('An entry in the table, containing information on the loopback status for a single Ethernet like interface. There is an entry in this table for every Ethernet like interface on which supports OAM and loopback function within OAM (as indicated in h3cDot3OamFunctionsSupported). ')
h3cDot3OamLoopbackCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noLoopback", 1), ("startRemoteLoopback", 2), ("stopRemoteLoopback", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot3OamLoopbackCommand.setReference('[802.3ah], 57.2.11')
if mibBuilder.loadTexts: h3cDot3OamLoopbackCommand.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamLoopbackCommand.setDescription("This attribute initiates or terminates remote loopback with an OAM peer. Writing startRemoteLoopback(2) to this attribute cause the local OAM client to send a loopback OAMPDU to the OAM peer with the loopback enable flags set. Writing stopRemoteLoopback(3) to this attribute will cause the local OAM client to send a loopback OAMPDU to the OAM peer with the loopback enable flags cleared. Writing noLoopback to this attribute has no effect. Writes to this attribute are ignored unless the OAM status of this interface is 'operational' (h3cDot3OamOperStatus). The attribute always returns noLoopback on a read. To determine the loopback status, use the attribute h3cDot3OamLoopbackStatus. ")
h3cDot3OamLoopbackStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noLoopback", 1), ("initiatingLoopback", 2), ("remoteLoopback", 3), ("terminatingLoopback", 4), ("localLoopback", 5), ("unknown", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamLoopbackStatus.setReference('[802.3ah], REFERENCE 57.2.11, 30.3.61.14, 30.3.6.1.15')
if mibBuilder.loadTexts: h3cDot3OamLoopbackStatus.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamLoopbackStatus.setDescription("The loopback status of the OAM entity. This status is determined by a combination of the local parser and multiplexer states, the remote parser and multiplexer states, as well as by the actions of the local OAM client. When operating in normal mode with no loopback in progress, the status reads noLoopback(1). If the OAM client has sent an Loopback OAMPDU and is waiting for a response, where the local parser and multiplexer states are DISCARD (see [802.3ah, 57.2.11.1]), the status is 'initiatingLoopback'. In this case, the local OAM entity has yet to receive any acknowledgement that the remote OAM entity has received its loopback command request. If the local OAM client knows that the remote OAM entity is in loopback mode (via the remote state information as described in [802.3ah, 57.2.11.1, 30.3.6.1.15]), the status is remoteLoopback(3). If the local OAM client is in the process of terminating the remote loopback [802.3ah, 57.2.11.3, 30.3.6.1.14], with its local multiplexer and parser states in DISCARD, the status is terminatingLoopback(4). If the remote OAM client has put the local OAM entity in loopback mode as indicated by its local parser state, the status is localLoopback(5). The unknown(6) status indicates the parser and multiplexer combination is unexpected. This status may be returned if the OAM loopback is in a transition state but should not persist. The values of this attribute correspond to the following values of the local and remote parser and multiplexer states. value LclPrsr LclMux RmtPrsr RmtMux noLoopback FWD FWD FWD FWD initLoopback DISCARD DISCARD FWD FWD rmtLoopback DISCARD FWD LPBK DISCARD tmtngLoopback DISCARD DISCARD LPBK DISCARD lclLoopback LPBK DISCARD DISCARD FWD unknown *** any other combination *** ")
h3cDot3OamLoopbackIgnoreRx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ignore", 1), ("process", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot3OamLoopbackIgnoreRx.setReference('[802.3ah], REFERENCE 57.2.11, 30.3.61.14, 30.3.6.1.15')
if mibBuilder.loadTexts: h3cDot3OamLoopbackIgnoreRx.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamLoopbackIgnoreRx.setDescription('Since OAM loopback is a distruptive operation (user traffic does not pass), this attribute provides a mechanism to provide controls over whether received OAM loopback commands are processed or ignored. When the value is ignore(1), received loopback commands are ignored. When the value is process(2), OAM loopback commands are processed. The default value is to ignore loopback commands (ignore(1)). The attribute has no meaning if the local OAM entity does not support the loopback function (as defined in h3cDot3OamFunctionsSupported). ')
h3cDot3OamStatsTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 4), )
if mibBuilder.loadTexts: h3cDot3OamStatsTable.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamStatsTable.setDescription('Statistics for the OAM function on a particular Ethernet like interface.')
h3cDot3OamStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cDot3OamStatsEntry.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamStatsEntry.setDescription('An entry in the table, containing statistics information on the Ethernet OAM function for a single Ethernet like interface.')
h3cDot3OamInformationTx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamInformationTx.setReference('[802.3ah], 30.3.6.1.20.')
if mibBuilder.loadTexts: h3cDot3OamInformationTx.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamInformationTx.setDescription('A count of the number of Information OAMPDUs transmitted on this interface. An Information OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) an OAMPDU code equals the OAM Information code. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
h3cDot3OamInformationRx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamInformationRx.setReference('[802.3ah], 30.3.6.1.21.')
if mibBuilder.loadTexts: h3cDot3OamInformationRx.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamInformationRx.setDescription('A count of the number of Information OAMPDUs received on this interface. An Information OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) an OAMPDU code equals the OAM Information code. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
h3cDot3OamUniqueEventNotificationTx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamUniqueEventNotificationTx.setReference('[802.3ah], 30.3.6.1.22.')
if mibBuilder.loadTexts: h3cDot3OamUniqueEventNotificationTx.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamUniqueEventNotificationTx.setDescription('A count of the number of unique Event OAMPDUs transmitted on this interface. Event notifications may be sent in duplicate to increase the probability of successfully being received, given the possiblity that a frame may be lost in transit. An Event Notification OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) an OAMPDU code equals the OAM Event code. A unique Event Notification OAMPDU is indicated as an Event Notification OAMPDU with a Sequence Number field that is distinct from the previously transmitted Event Notification OAMPDU Sequence Number. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
h3cDot3OamUniqueEventNotificationRx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamUniqueEventNotificationRx.setReference('[802.3ah], 30.3.6.1.24.')
if mibBuilder.loadTexts: h3cDot3OamUniqueEventNotificationRx.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamUniqueEventNotificationRx.setDescription('A count of the number of unique Event OAMPDUs received on this interface. Event notification OAMPDUs may be sent in duplicate to increase the probability of successfully being received, given the possiblity that a frame may be lost in transit. An Event Notification OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) an OAMPDU code equals the OAM Event code. A unique Event Notification OAMPDU is indicated as an Event Notification OAMPDU with a Sequence Number field that is distinct from the previously received Event Notification OAMPDU Sequence Number. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
h3cDot3OamDuplicateEventNotificationTx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamDuplicateEventNotificationTx.setReference('[802.3ah], 30.3.6.1.23.')
if mibBuilder.loadTexts: h3cDot3OamDuplicateEventNotificationTx.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamDuplicateEventNotificationTx.setDescription('A count of the number of duplicate Event OAMPDUs transmitted on this interface. Event notification OAMPDUs may be sent in duplicate to increase the probability of successfully being received, given the possiblity that a frame may be lost in transit. An Event Notification OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) an OAMPDU code equals the OAM Event code. A duplicate Event Notification OAMPDU is indicated as an Event Notification OAMPDU with a Sequence Number field that is identical to the previously transmitted Event Notification OAMPDU Sequence Number. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
h3cDot3OamDuplicateEventNotificationRx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamDuplicateEventNotificationRx.setReference('[802.3ah], 30.3.6.1.25.')
if mibBuilder.loadTexts: h3cDot3OamDuplicateEventNotificationRx.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamDuplicateEventNotificationRx.setDescription('A count of the number of duplicate Event OAMPDUs received on this interface. Event notification OAMPDUs may be sent in duplicate to increase the probability of successfully being received, given the possiblity that a frame may be lost in transit. An Event Notification OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) an OAMPDU code equals the OAM Event code. A duplicate Event Notification OAMPDU is indicated as an Event Notification OAMPDU with a Sequence Number field that is identical to the previously received Event Notification OAMPDU Sequence Number. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
h3cDot3OamLoopbackControlTx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamLoopbackControlTx.setReference('[802.3ah], 30.3.6.1.26.')
if mibBuilder.loadTexts: h3cDot3OamLoopbackControlTx.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamLoopbackControlTx.setDescription('A count of the number of Loopback Control OAMPDUs transmitted on this interface. An Loopback Conrol OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) an OAMPDU code equals the OAM Loopback Control code. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
h3cDot3OamLoopbackControlRx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamLoopbackControlRx.setReference('[802.3ah], 30.3.6.1.27.')
if mibBuilder.loadTexts: h3cDot3OamLoopbackControlRx.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamLoopbackControlRx.setDescription('A count of the number of Loopback Control OAMPDUs transmitted on this interface. An Loopback Control OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) an OAMPDU code equals the OAM Loopback Control code. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
h3cDot3OamVariableRequestTx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamVariableRequestTx.setReference('[802.3ah], 30.3.6.1.28.')
if mibBuilder.loadTexts: h3cDot3OamVariableRequestTx.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamVariableRequestTx.setDescription('A count of the number of Variable Request OAMPDUs transmitted on this interface. An Variable Request OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) an OAMPDU code equals the OAM Variable Request code. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
h3cDot3OamVariableRequestRx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamVariableRequestRx.setReference('[802.3ah], 30.3.6.1.29.')
if mibBuilder.loadTexts: h3cDot3OamVariableRequestRx.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamVariableRequestRx.setDescription('A count of the number of Variable Request OAMPDUs received on this interface. An Variable Request OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) an OAMPDU code equals the OAM Variable Request code. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
h3cDot3OamVariableResponseTx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamVariableResponseTx.setReference('[802.3ah], 30.3.6.1.30.')
if mibBuilder.loadTexts: h3cDot3OamVariableResponseTx.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamVariableResponseTx.setDescription('A count of the number of Variable Response OAMPDUs transmitted on this interface. An Variable Response OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) an OAMPDU code equals the OAM Variable Response code. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
h3cDot3OamVariableResponseRx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamVariableResponseRx.setReference('[802.3ah], 30.3.6.1.31.')
if mibBuilder.loadTexts: h3cDot3OamVariableResponseRx.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamVariableResponseRx.setDescription('A count of the number of Variable Response OAMPDUs received on this interface. An Variable Response OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) an OAMPDU code equals the OAM Variable Response code. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
h3cDot3OamOrgSpecificTx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamOrgSpecificTx.setReference('[802.3ah], 30.3.6.1.32.')
if mibBuilder.loadTexts: h3cDot3OamOrgSpecificTx.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamOrgSpecificTx.setDescription('A count of the number of Organization Specific OAMPDUs transmitted on this interface. An Organization Specific OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) an OAMPDU code equals the OAM Organization Specific code. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
h3cDot3OamOrgSpecificRx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamOrgSpecificRx.setReference('[802.3ah], 30.3.6.1.33.')
if mibBuilder.loadTexts: h3cDot3OamOrgSpecificRx.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamOrgSpecificRx.setDescription('A count of the number of Organization Specific OAMPDUs received on this interface. An Organization Specific OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) an OAMPDU code equals the OAM Organization Specific code. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
h3cDot3OamUnsupportedCodesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamUnsupportedCodesTx.setReference('[802.3ah], 30.3.6.1.18.')
if mibBuilder.loadTexts: h3cDot3OamUnsupportedCodesTx.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamUnsupportedCodesTx.setDescription('A count of the number of OAMPDUs transmitted on this interface with an unsupported op-code. An unsupported opcode OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) an OAMPDU code equals the opcode for a function that is not supported by the device. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
h3cDot3OamUnsupportedCodesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamUnsupportedCodesRx.setReference('[802.3ah], 30.3.6.1.19.')
if mibBuilder.loadTexts: h3cDot3OamUnsupportedCodesRx.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamUnsupportedCodesRx.setDescription('A count of the number of OAMPDUs received on this interface with an unsupported op-code. An unsupported opcode OAMPDU is indicated by a valid frame with (1) destination MAC address equal to that of the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), (2) a lengthOrType field equal to the reserved type for Slow Protocols, (3) a Slow Protocols subtype equal to that of the subtype reserved for OAM, and (4) an OAMPDU code equals the opcode for a function that is not supported by the device. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
h3cDot3OamFramesLostDueToOam = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamFramesLostDueToOam.setReference('[802.3ah], 30.3.6.1.46.')
if mibBuilder.loadTexts: h3cDot3OamFramesLostDueToOam.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamFramesLostDueToOam.setDescription('A count of the number of frames that were dropped by the OAM multiplexer. Since the OAM mulitplexer has multiple inputs and a single output, there may be cases where frames are dropped due to transmit resource contention. This counter is incremented whenever a frame is dropped by the OAM layer. When this counter is incremented, no other counters in this MIB are incremented. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
h3cDot3OamEventConfigTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 5), )
if mibBuilder.loadTexts: h3cDot3OamEventConfigTable.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamEventConfigTable.setDescription('Ethernet OAM includes the ability to generate and receive event notifications to indicate various link problems. This table contains the mechanisms to configure the thresholds to generate the standard Ethernet OAM events. These events are: - Errored Symbol Period Event. Generated when the number of symbol errors exceeds a threshold within a given window defined by a number of symbols (e.g. 1,000 symbols out of 1,000,000 had errors). - Errored Frame Period Event. Generated when the number of frame errors exceeds a threshold within a given window defined by a number of frames (e.g. 10 frames out of 1000 had errors). - Errored Frame Event. Generated when the number of frame errors exceeds a threshold within a given window defined by a period of time (e.g. 10 frames in 1 second had errors). - Errored Frame Seconds Summary Event. Generated when the number of errored frame seconds exceeds a threshold within a given time period (e.g. 10 errored frame seconds within the last 100 seconds). An errored frame second is defined as a 1 second interval which had >0 frame errors. ')
h3cDot3OamEventConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cDot3OamEventConfigEntry.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamEventConfigEntry.setDescription('Event configuration information is available for every Ethernet like interface that supports OAM and the event function of OAM as indicated in the h3cDot3OamFunctionsSupported attribute. Event configuration controls when the local management entity sends Event Notification OAMPDUs to its OAM peer. ')
h3cDot3OamErrSymPeriodWindowHi = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 5, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot3OamErrSymPeriodWindowHi.setReference('[802.3ah], 30.3.6.1.34')
if mibBuilder.loadTexts: h3cDot3OamErrSymPeriodWindowHi.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamErrSymPeriodWindowHi.setDescription('The two objects h3cDot3OamErrSymPeriodWindowHi and h3cDot3OamErrSymPeriodLo together form an unsigned 64-bit integer representing the number of symbols over which this threshold event is defined. This is defined as h3cDot3OamErrSymPeriodWindow = ((2^32)*h3cDot3OamErrSymPeriodWindowHi) + h3cDot3OamErrSymPeriodWindowLo If h3cDot3OamErrSymPeriodThreshold symbol errors occur within a window of h3cDot3OamErrSymPeriodWindow symbols, an Event Notification OAMPDU should be generated with an Errored Symbol Period Event TLV indicating the threshold has been crossed in this window. ')
h3cDot3OamErrSymPeriodWindowLo = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 5, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot3OamErrSymPeriodWindowLo.setReference('[802.3ah], 30.3.6.1.34')
if mibBuilder.loadTexts: h3cDot3OamErrSymPeriodWindowLo.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamErrSymPeriodWindowLo.setDescription('The two objects h3cDot3OamErrSymPeriodWindowHi and h3cDot3OamErrSymPeriodWindowLo together form an unsigned 64-bit integer representing the number of symbols over which this threshold event is defined. This is defined as h3cDot3OamErrSymPeriodWindow = ((2^32)*h3cDot3OamErrSymPeriodWindowHi) + h3cDot3OamErrSymPeriodWindowLo If h3cDot3OamErrSymPeriodThreshold symbol errors occur within a window of h3cDot3OamErrSymPeriodWindow symbols, an Event Notification OAMPDU should be generated with an Errored Symbol Period Event TLV indicating the threshold has been crossed in this window. ')
h3cDot3OamErrSymPeriodThresholdHi = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 5, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot3OamErrSymPeriodThresholdHi.setReference('[802.3ah], 30.3.6.1.34')
if mibBuilder.loadTexts: h3cDot3OamErrSymPeriodThresholdHi.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamErrSymPeriodThresholdHi.setDescription('The two objects h3cDot3OamErrSymPeriodThresholdHi and h3cDot3OamErrSymPeriodThresholdLo together form an unsigned 64-bit integer representing the number of symbol errors that must occur within a given window to cause this event. This is defined as h3cDot3OamErrSymPeriodThreshold = ((2^32) * h3cDot3OamErrSymPeriodThresholdHi) + h3cDot3OamErrSymPeriodThresholdLo If h3cDot3OamErrSymPeriodThreshold symbol errors occur within a window of h3cDot3OamErrSymPeriodWindow symbols, an Event Notification OAMPDU should be generated with an Errored Symbol Period Event TLV indicating the threshold has been crossed in this window. ')
h3cDot3OamErrSymPeriodThresholdLo = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 5, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot3OamErrSymPeriodThresholdLo.setReference('[802.3ah], 30.3.6.1.34')
if mibBuilder.loadTexts: h3cDot3OamErrSymPeriodThresholdLo.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamErrSymPeriodThresholdLo.setDescription('The two objects h3cDot3OamErrSymPeriodThresholdHi and h3cDot3OamErrSymPeriodThresholdLo together form an unsigned 64-bit integer representing the number of symbol errors that must occur within a given window to cause this event. This is defined as h3cDot3OamErrSymPeriodThreshold = ((2^32) * h3cDot3OamErrSymPeriodThresholdHi) + h3cDot3OamErrSymPeriodThresholdLo If h3cDot3OamErrSymPeriodThreshold symbol errors occur within a window of h3cDot3OamErrSymPeriodWindow symbols, an Event Notification OAMPDU should be generated with an Errored Symbol Period Event TLV indicating the threshold has been crossed in this window. ')
h3cDot3OamErrSymPeriodEvNotifEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot3OamErrSymPeriodEvNotifEnable.setReference('N/A')
if mibBuilder.loadTexts: h3cDot3OamErrSymPeriodEvNotifEnable.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamErrSymPeriodEvNotifEnable.setDescription('Indicates whether the occurence of Errored Symbol Period Events should result in Event Notification OAMPDUs generated by the OAM layer. By default, this object should have the value enabled(1) for Ethernet like interfaces that support OAM. If the OAM layer does not support event notifications (as indicated via the h3cDot3OamFunctionsSupported attribute), this value is ignored. ')
h3cDot3OamErrFramePeriodWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 5, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot3OamErrFramePeriodWindow.setReference('[802.3ah], 30.3.6.1.38')
if mibBuilder.loadTexts: h3cDot3OamErrFramePeriodWindow.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamErrFramePeriodWindow.setDescription('The number of frames over which the threshold is defined. If h3cDot3OamErrFramePeriodThreshold frame errors occur within a window of h3cDot3OamErrFramePeriodWindow frames, an Event Notification OAMPDU should be generated with an Errored Frame Period Event TLV indicating the threshold has been crossed in this window. ')
h3cDot3OamErrFramePeriodThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 5, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot3OamErrFramePeriodThreshold.setReference('[802.3ah], 30.3.6.1.38')
if mibBuilder.loadTexts: h3cDot3OamErrFramePeriodThreshold.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamErrFramePeriodThreshold.setDescription('The number of frame errors that must occur for this event to be triggered. If h3cDot3OamErrFramePeriodThreshold frame errors occur within a window of h3cDot3OamErrFramePeriodWindow frames, an Event Notification OAMPDU should be generated with an Errored Frame Period Event TLV indicating the threshold has been crossed in this window. ')
h3cDot3OamErrFramePeriodEvNotifEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot3OamErrFramePeriodEvNotifEnable.setReference('N/A')
if mibBuilder.loadTexts: h3cDot3OamErrFramePeriodEvNotifEnable.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamErrFramePeriodEvNotifEnable.setDescription('Indicates whether the occurence of an Errored Frame Period Event should result in an Event Notification OAMPDU generated by the OAM layer. By default, this object should have the value enabled(1) for Ethernet like interfaces that support OAM. If the OAM layer does not support event notifications (as indicated via the h3cDot3OamFunctionsSupported attribute), this value is ignored. ')
h3cDot3OamErrFrameWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 5, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot3OamErrFrameWindow.setReference('[802.3ah], 30.3.6.1.36')
if mibBuilder.loadTexts: h3cDot3OamErrFrameWindow.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamErrFrameWindow.setDescription('The amount of time (in 100ms increments) over which the threshold is defined. If h3cDot3OamErrFrameThreshold frame errors occur within a window of h3cDot3OamErrFrameWindow seconds (measured in tenths of seconds), an Event Notification OAMPDU should be generated with an Errored Frame Event TLV indicating the threshold has been crossed in this window. ')
h3cDot3OamErrFrameThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 5, 1, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot3OamErrFrameThreshold.setReference('[802.3ah], 30.3.6.1.36')
if mibBuilder.loadTexts: h3cDot3OamErrFrameThreshold.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamErrFrameThreshold.setDescription('The number of frame errors that must occur for this event to be triggered. If h3cDot3OamErrFrameThreshold frame errors occur within a window of h3cDot3OamErrFrameWindow (in tenths of seconds), an Event Notification OAMPDU should be generated with an Errored Frame Event TLV indicating the threshold has been crossed in this window. ')
h3cDot3OamErrFrameEvNotifEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot3OamErrFrameEvNotifEnable.setReference('N/A')
if mibBuilder.loadTexts: h3cDot3OamErrFrameEvNotifEnable.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamErrFrameEvNotifEnable.setDescription('Indicates whether the occurence of an Errored Frame Event should result in an Event Notification OAMPDU generated by the OAM layer. By default, this object should have the value enabled(1) for Ethernet like interfaces that support OAM. If the OAM layer does not support event notifications (as indicated via the h3cDot3OamFunctionsSupported attribute), this value is ignored. ')
h3cDot3OamErrFrameSecsSummaryWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 5, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 9000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot3OamErrFrameSecsSummaryWindow.setReference('[802.3ah], 30.3.6.1.40')
if mibBuilder.loadTexts: h3cDot3OamErrFrameSecsSummaryWindow.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamErrFrameSecsSummaryWindow.setDescription('The amount of time (in 100ms intervals) over which the threshold is defined. If h3cDot3OamErrFrameSecsSummaryThreshold frame errors occur within a window of h3cDot3OamErrFrameSecsSummaryWindow (in tenths of seconds), an Event Notification OAMPDU should be generated with an Errored Frame Seconds Summary Event TLV indicating the threshold has been crossed in this window. ')
h3cDot3OamErrFrameSecsSummaryThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 5, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot3OamErrFrameSecsSummaryThreshold.setReference('[802.3ah], 30.3.6.1.40')
if mibBuilder.loadTexts: h3cDot3OamErrFrameSecsSummaryThreshold.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamErrFrameSecsSummaryThreshold.setDescription('The number of errored frame seconds that must occur for this event to be triggered. If h3cDot3OamErrFrameSecsSummaryThreshold frame errors occur within a window of h3cDot3OamErrFrameSecsSummaryWindow (in tenths of seconds), an Event Notification OAMPDU should be generated with an Errored Frame Seconds Summary Event TLV indicating the threshold has been crossed in this window. ')
h3cDot3OamErrFrameSecsEvNotifEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 5, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot3OamErrFrameSecsEvNotifEnable.setReference('N/A')
if mibBuilder.loadTexts: h3cDot3OamErrFrameSecsEvNotifEnable.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamErrFrameSecsEvNotifEnable.setDescription('Indicates whether the occurence of an Errored Frame Seconds Summary Event should result in an Event Notification OAMPDU generated by the OAM layer. By default, this object should have the value enabled(1) for Ethernet like interfaces that support OAM. If the OAM layer does not support event notifications (as indicated via the h3cDot3OamFunctionsSupported attribute), this value is ignored.')
h3cDot3OamEventLogTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 6), )
if mibBuilder.loadTexts: h3cDot3OamEventLogTable.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamEventLogTable.setDescription('This table records a history of the events that have occurred at the Ethernet OAM level. These events can include locally detected events, which may result in locally generated OAMPDUs, and remotely detected events, which are detected by the OAM peer entity and signaled to the local entity via Ethernet OAM. Ethernet OAM events can be signaled by Event Notification OAMPDUs or by the flags field in any OAMPDU. ')
h3cDot3OamEventLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogIndex"))
if mibBuilder.loadTexts: h3cDot3OamEventLogEntry.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamEventLogEntry.setDescription('An entry in the h3cDot3OamEventLogTable.')
h3cDot3OamEventLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: h3cDot3OamEventLogIndex.setReference('N/A')
if mibBuilder.loadTexts: h3cDot3OamEventLogIndex.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamEventLogIndex.setDescription('An arbitrary integer for identifiying individual events within the event log. ')
h3cDot3OamEventLogTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 6, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamEventLogTimestamp.setReference('N/A')
if mibBuilder.loadTexts: h3cDot3OamEventLogTimestamp.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamEventLogTimestamp.setDescription('The date and time that this event instance occurred. ')
h3cDot3OamEventLogOui = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 6, 1, 3), Dot3Oui()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamEventLogOui.setReference('N/A')
if mibBuilder.loadTexts: h3cDot3OamEventLogOui.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamEventLogOui.setDescription('The OUI of the entity defining the object type. All IEEE 802.3 defined events (as appearing in [802.3ah] except for the Organizationally Unique Event TLVs) use the IEEE 802.3 OUI of 0x0180C2. Organizations defining their own Event Notification TLVs include their OUI in the Event Notification TLV which gets reflected here. ')
h3cDot3OamEventLogType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 6, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamEventLogType.setReference('[802.3ah], 30.3.6.1.10 and 57.5.3.')
if mibBuilder.loadTexts: h3cDot3OamEventLogType.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamEventLogType.setDescription('The type of event that generated this entry in the event log. When the OUI is the IEEE 802.3 OUI of 0x0180C2, the following event types are defined: erroredSymbolEvent(1), erroredFramePeriodEvent (2), erroredFrameEvent(3), erroredFrameSecondsEvent(4), linkFault(256), dyingGaspEvent(257), criticalLinkEvent(258) The first four are considered threshold crossing events as they are generated when a metric exceeds a given value within a specified window. The other three are not threshold crossing events. When the OUI is not 0x0180C2, then some other organization has defined the event space. If event subtyping is known to the implementation, it may be reflected here. Otherwise, this value should return all Fs (0xFFFFFFFF). ')
h3cDot3OamEventLogLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamEventLogLocation.setReference('N/A')
if mibBuilder.loadTexts: h3cDot3OamEventLogLocation.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamEventLogLocation.setDescription('Whether this event occurred locally, or was received from the OAM peer via Ethernet OAM.')
h3cDot3OamEventLogWindowHi = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 6, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamEventLogWindowHi.setReference('[802.3ah], 30.3.6.1.37 and 57.5.3.2.')
if mibBuilder.loadTexts: h3cDot3OamEventLogWindowHi.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamEventLogWindowHi.setDescription("If the event represents a threshold crossing event, the two objects h3cDot3OamEventWindowHi and h3cDot3OamEventWindowLo form an unsigned 64-bit integer yielding the window over which the value was measured for the threshold crossing event (e.g. 5, when 11 occurrences happened in 5 seconds while the threshold was 10). The two objects are combined as: h3cDot3OamEventLogWindow = ((2^32) * h3cDot3OamEventLogWindowHi) + h3cDot3OamEventLogWindowLo Otherwise, this value is returned as all F's (0xFFFFFFFF) and adds no useful information. ")
h3cDot3OamEventLogWindowLo = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 6, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamEventLogWindowLo.setReference('[802.3ah], 30.3.6.1.37 and 57.5.3.2.')
if mibBuilder.loadTexts: h3cDot3OamEventLogWindowLo.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamEventLogWindowLo.setDescription("If the event represents a threshold crossing event, the two objects h3cDot3OamEventWindowHi and h3cDot3OamEventWindowLo form an unsigned 64-bit integer yielding the window over which the value was measured for the threshold crossing event (e.g. 5, when 11 occurrences happened in 5 seconds while the threshold was 10). The two objects are combined as: h3cDot3OamEventLogWindow = ((2^32) * h3cDot3OamEventLogWindowHi) + h3cDot3OamEventLogWindowLo Otherwise, this value is returned as all F's (0xFFFFFFFF) and adds no useful information. ")
h3cDot3OamEventLogThresholdHi = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 6, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamEventLogThresholdHi.setReference('[802.3ah], 30.3.6.1.37 and 57.5.3.2.')
if mibBuilder.loadTexts: h3cDot3OamEventLogThresholdHi.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamEventLogThresholdHi.setDescription("If the event represents a threshold crossing event, the two objects h3cDot3OamEventThresholdHi and h3cDot3OamEventThresholdLo form an unsigned 64-bit integer yielding the value that was crossed for the threshold crossing event (e.g. 10, when 11 occurrences happened in 5 seconds while the threshold was 10). The two objects are combined as: h3cDot3OamEventLogThreshold = ((2^32) * h3cDot3OamEventLogThresholdHi) + h3cDot3OamEventLogThresholdLo Otherwise, this value is returned as all F's (0xFFFFFFFF) and adds no useful information. ")
h3cDot3OamEventLogThresholdLo = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 6, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamEventLogThresholdLo.setReference('[802.3ah], 30.3.6.1.37 and 57.5.3.2.')
if mibBuilder.loadTexts: h3cDot3OamEventLogThresholdLo.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamEventLogThresholdLo.setDescription("If the event represents a threshold crossing event, the two objects h3cDot3OamEventThresholdHi and h3cDot3OamEventThresholdLo form an unsigned 64-bit integer yielding the value that was crossed for the threshold crossing event (e.g. 10, when 11 occurrences happened in 5 seconds while the threshold was 10). The two objects are combined as: h3cDot3OamEventLogThreshold = ((2^32) * h3cDot3OamEventLogThresholdHi) + h3cDot3OamEventLogThresholdLo Otherwise, this value is returned as all F's (0xFFFFFFFF) and adds no useful information. ")
h3cDot3OamEventLogValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 6, 1, 10), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamEventLogValue.setReference('[802.3ah], 30.3.6.1.37 and 57.5.3.2.')
if mibBuilder.loadTexts: h3cDot3OamEventLogValue.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamEventLogValue.setDescription("If the event represents a threshold crossing event, this value indicates the value of the parameter within the given window that generated this event (e.g. 11, when 11 occurrences happened in 5 seconds while the threshold was 10). Otherwise, this value is returned as all F's (0xFFFFFFFFFFFFFFFF) and adds no useful information. ")
h3cDot3OamEventLogRunningTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 6, 1, 11), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamEventLogRunningTotal.setReference('[802.3ah], 30.3.6.1.37 and 57.5.3.2.')
if mibBuilder.loadTexts: h3cDot3OamEventLogRunningTotal.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamEventLogRunningTotal.setDescription('This value respresents the total number of times this occurence has happened since the last reset (e.g. 3253, when 3253 symbol errors have occurred since the last reset, which has resulted in 51 symbol error threshold crossing events since the last reset). ')
h3cDot3OamEventLogEventTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 6, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot3OamEventLogEventTotal.setReference('[802.3ah], 30.3.6.1.37 and 57.5.3.2.')
if mibBuilder.loadTexts: h3cDot3OamEventLogEventTotal.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamEventLogEventTotal.setDescription('This value respresents the total number of times one or more of these occurences have resulted in an event (e.g. 51 when 3253 symbol errors have occurred since the last reset, which has resulted in 51 symbol error threshold crossing events since the last reset). ')
h3cDot3OamTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 7))
h3cDot3OamTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 7, 0))
h3cDot3OamThresholdEvent = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 7, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogTimestamp"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogOui"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogType"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogLocation"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogWindowHi"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogWindowLo"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogThresholdHi"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogThresholdLo"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogValue"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogRunningTotal"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogEventTotal"))
if mibBuilder.loadTexts: h3cDot3OamThresholdEvent.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamThresholdEvent.setDescription('A h3cDot3OamThresholdEvent notification is sent when a local or remote threshold crossing event is detected. A local threshold crossing event is detected by the local entity, while a remote threshold crossing event is detected by the reception of an Ethernet OAM Event Notification OAMPDU indicating a threshold event. This notification should not be sent more than once per second. The management entity should periodically check h3cDot3OamEventLogTable to detect any missed events.')
h3cDot3OamNonThresholdEvent = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 1, 7, 0, 2)).setObjects(("IF-MIB", "ifIndex"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogTimestamp"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogOui"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogType"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogLocation"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogEventTotal"))
if mibBuilder.loadTexts: h3cDot3OamNonThresholdEvent.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamNonThresholdEvent.setDescription('A h3cDot3OamNonThresholdEvent notification is sent when a local or remote non-threshold crossing event is detected. A local event is detected by the local entity, while a remote event is detected by the reception of an Ethernet OAM Event Notification OAMPDU indicating a non-threshold crossing event. This notification should not be sent more than once per second. The management entity should periodically check h3cDot3OamEventLogTable to detect any missed events.')
h3cDot3OamGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 2, 1))
h3cDot3OamCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 2, 2))
h3cDot3OamCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 2, 2, 1)).setObjects(("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamControlGroup"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamPeerGroup"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamStatsBaseGroup"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamLoopbackGroup"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamErrSymbolPeriodEventGroup"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamErrFramePeriodEventGroup"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamErrFrameEventGroup"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamErrFrameSecsSummaryEventGroup"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogGroup"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDot3OamCompliance = h3cDot3OamCompliance.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamCompliance.setDescription('The compliance statement for managed entities supporting OAM on Ethernet like interfaces. ')
h3cDot3OamControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 2, 1, 1)).setObjects(("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamAdminState"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamOperStatus"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamMode"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamMaxOamPduSize"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamConfigRevision"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamFunctionsSupported"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDot3OamControlGroup = h3cDot3OamControlGroup.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamControlGroup.setDescription('A collection of objects providing the abilities, configuration, and status of an Ethernet OAM entity. ')
h3cDot3OamPeerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 2, 1, 2)).setObjects(("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamPeerStatus"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamPeerMacAddress"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamPeerVendorOui"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamPeerVendorInfo"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamPeerMode"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamPeerFunctionsSupported"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamPeerMaxOamPduSize"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamPeerConfigRevision"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDot3OamPeerGroup = h3cDot3OamPeerGroup.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamPeerGroup.setDescription('A collection of objects providing the abilities, configuration, and status of a peer Ethernet OAM entity. ')
h3cDot3OamStatsBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 2, 1, 3)).setObjects(("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamInformationTx"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamInformationRx"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamUniqueEventNotificationTx"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamUniqueEventNotificationRx"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamDuplicateEventNotificationTx"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamDuplicateEventNotificationRx"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamLoopbackControlTx"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamLoopbackControlRx"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamVariableRequestTx"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamVariableRequestRx"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamVariableResponseTx"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamVariableResponseRx"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamOrgSpecificTx"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamOrgSpecificRx"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamUnsupportedCodesTx"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamUnsupportedCodesRx"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamFramesLostDueToOam"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDot3OamStatsBaseGroup = h3cDot3OamStatsBaseGroup.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamStatsBaseGroup.setDescription('A collection of objects providing the statistics for the number of various transmit and recieve events for OAM on an Ethernet like interface. Note that all of these counters must be supported even if the related function (as described in h3cDot3OamFunctionsSupported) is not supported. ')
h3cDot3OamLoopbackGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 2, 1, 4)).setObjects(("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamLoopbackCommand"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamLoopbackStatus"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamLoopbackIgnoreRx"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDot3OamLoopbackGroup = h3cDot3OamLoopbackGroup.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamLoopbackGroup.setDescription('A collection of objects for controlling the OAM remote loopback function. ')
h3cDot3OamErrSymbolPeriodEventGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 2, 1, 5)).setObjects(("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamErrSymPeriodWindowHi"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamErrSymPeriodWindowLo"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamErrSymPeriodThresholdHi"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamErrSymPeriodThresholdLo"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamErrSymPeriodEvNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDot3OamErrSymbolPeriodEventGroup = h3cDot3OamErrSymbolPeriodEventGroup.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamErrSymbolPeriodEventGroup.setDescription('A collection of objects for configuring the thresholds for an Errored Symbol Period Event. Each [802.3ah] defined Event Notification TLV has its own conformance group because each event can be implemented independently of any other. ')
h3cDot3OamErrFramePeriodEventGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 2, 1, 6)).setObjects(("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamErrFramePeriodWindow"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamErrFramePeriodThreshold"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamErrFramePeriodEvNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDot3OamErrFramePeriodEventGroup = h3cDot3OamErrFramePeriodEventGroup.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamErrFramePeriodEventGroup.setDescription('A collection of objects for configuring the thresholds for an Errored Frame Period Event. Each [802.3ah] defined Event Notification TLV has its own conformance group because each event can be implemented independently of any other. ')
h3cDot3OamErrFrameEventGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 2, 1, 7)).setObjects(("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamErrFrameWindow"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamErrFrameThreshold"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamErrFrameEvNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDot3OamErrFrameEventGroup = h3cDot3OamErrFrameEventGroup.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamErrFrameEventGroup.setDescription('A collection of objects for configuring the thresholds for an Errored Frame Event. Each [802.3ah] defined Event Notification TLV has its own conformance group because each event can be implemented independently of any other. ')
h3cDot3OamErrFrameSecsSummaryEventGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 2, 1, 8)).setObjects(("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamErrFrameSecsSummaryWindow"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamErrFrameSecsSummaryThreshold"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamErrFrameSecsEvNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDot3OamErrFrameSecsSummaryEventGroup = h3cDot3OamErrFrameSecsSummaryEventGroup.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamErrFrameSecsSummaryEventGroup.setDescription('A collection of objects for configuring the thresholds for an Errored Frame Seconds Summary Event. Each [802.3ah] defined Event Notification TLV has its own conformance group because each event can be implemented independently of any other. ')
h3cDot3OamEventLogGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 2, 1, 9)).setObjects(("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogTimestamp"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogOui"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogType"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogLocation"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogWindowHi"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogWindowLo"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogThresholdHi"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogThresholdLo"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogValue"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogRunningTotal"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamEventLogEventTotal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDot3OamEventLogGroup = h3cDot3OamEventLogGroup.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamEventLogGroup.setDescription('A collection of objects for configuring the thresholds for an Errored Frame Seconds Summary Event and maintaining the event information. ')
h3cDot3OamNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 42, 3, 2, 1, 10)).setObjects(("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamThresholdEvent"), ("A3COM-HUAWEI-EFM-COMMON-MIB", "h3cDot3OamNonThresholdEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDot3OamNotificationGroup = h3cDot3OamNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: h3cDot3OamNotificationGroup.setDescription('A collection of notifications used by Ethernet OAM to signal to a management entity that local or remote events have occured on a specified Ethernet link.')
mibBuilder.exportSymbols("A3COM-HUAWEI-EFM-COMMON-MIB", h3cDot3OamTraps=h3cDot3OamTraps, h3cDot3OamVariableRequestRx=h3cDot3OamVariableRequestRx, h3cDot3OamPeerEntry=h3cDot3OamPeerEntry, h3cDot3OamGroups=h3cDot3OamGroups, h3cDot3OamOrgSpecificRx=h3cDot3OamOrgSpecificRx, h3cDot3OamEventLogValue=h3cDot3OamEventLogValue, h3cDot3OamLoopbackGroup=h3cDot3OamLoopbackGroup, h3cDot3OamPeerGroup=h3cDot3OamPeerGroup, h3cDot3OamErrSymPeriodThresholdHi=h3cDot3OamErrSymPeriodThresholdHi, h3cDot3OamUnsupportedCodesTx=h3cDot3OamUnsupportedCodesTx, h3cDot3OamErrFrameSecsSummaryThreshold=h3cDot3OamErrFrameSecsSummaryThreshold, h3cDot3OamErrSymPeriodWindowLo=h3cDot3OamErrSymPeriodWindowLo, h3cDot3OamErrSymPeriodThresholdLo=h3cDot3OamErrSymPeriodThresholdLo, h3cDot3OamVariableResponseTx=h3cDot3OamVariableResponseTx, h3cDot3OamErrFrameThreshold=h3cDot3OamErrFrameThreshold, h3cDot3OamCompliances=h3cDot3OamCompliances, h3cDot3OamMaxOamPduSize=h3cDot3OamMaxOamPduSize, h3cDot3OamTable=h3cDot3OamTable, h3cDot3OamLoopbackTable=h3cDot3OamLoopbackTable, h3cDot3OamControlGroup=h3cDot3OamControlGroup, h3cDot3OamCompliance=h3cDot3OamCompliance, h3cDot3OamErrFrameWindow=h3cDot3OamErrFrameWindow, h3cDot3OamInformationTx=h3cDot3OamInformationTx, h3cDot3OamErrFrameEvNotifEnable=h3cDot3OamErrFrameEvNotifEnable, h3cDot3OamConformance=h3cDot3OamConformance, h3cDot3OamEventLogWindowLo=h3cDot3OamEventLogWindowLo, h3cDot3OamFramesLostDueToOam=h3cDot3OamFramesLostDueToOam, h3cDot3OamLoopbackIgnoreRx=h3cDot3OamLoopbackIgnoreRx, h3cDot3OamEventLogRunningTotal=h3cDot3OamEventLogRunningTotal, h3cDot3OamPeerConfigRevision=h3cDot3OamPeerConfigRevision, h3cDot3OamTrapsPrefix=h3cDot3OamTrapsPrefix, h3cDot3OamConfigRevision=h3cDot3OamConfigRevision, h3cDot3OamErrFramePeriodEventGroup=h3cDot3OamErrFramePeriodEventGroup, h3cDot3OamNotificationGroup=h3cDot3OamNotificationGroup, h3cDot3OamAdminState=h3cDot3OamAdminState, h3cDot3OamUnsupportedCodesRx=h3cDot3OamUnsupportedCodesRx, h3cDot3OamLoopbackEntry=h3cDot3OamLoopbackEntry, h3cDot3OamOrgSpecificTx=h3cDot3OamOrgSpecificTx, h3cDot3OamStatsTable=h3cDot3OamStatsTable, h3cDot3OamErrFrameSecsSummaryEventGroup=h3cDot3OamErrFrameSecsSummaryEventGroup, h3cDot3OamOperStatus=h3cDot3OamOperStatus, h3cDot3OamPeerMacAddress=h3cDot3OamPeerMacAddress, h3cDot3OamErrFrameEventGroup=h3cDot3OamErrFrameEventGroup, h3cDot3OamDuplicateEventNotificationTx=h3cDot3OamDuplicateEventNotificationTx, PYSNMP_MODULE_ID=h3cEfmOamMIB, Dot3Oui=Dot3Oui, h3cDot3OamErrFramePeriodEvNotifEnable=h3cDot3OamErrFramePeriodEvNotifEnable, h3cDot3OamErrSymbolPeriodEventGroup=h3cDot3OamErrSymbolPeriodEventGroup, h3cDot3OamEventLogIndex=h3cDot3OamEventLogIndex, h3cDot3OamEventLogLocation=h3cDot3OamEventLogLocation, h3cDot3OamErrFramePeriodWindow=h3cDot3OamErrFramePeriodWindow, h3cDot3OamEventLogGroup=h3cDot3OamEventLogGroup, h3cDot3OamMIB=h3cDot3OamMIB, h3cDot3OamPeerVendorInfo=h3cDot3OamPeerVendorInfo, h3cDot3OamPeerMaxOamPduSize=h3cDot3OamPeerMaxOamPduSize, h3cDot3OamDuplicateEventNotificationRx=h3cDot3OamDuplicateEventNotificationRx, h3cDot3OamErrSymPeriodEvNotifEnable=h3cDot3OamErrSymPeriodEvNotifEnable, h3cDot3OamEventLogTable=h3cDot3OamEventLogTable, h3cDot3OamInformationRx=h3cDot3OamInformationRx, h3cDot3OamEventLogThresholdHi=h3cDot3OamEventLogThresholdHi, h3cDot3OamThresholdEvent=h3cDot3OamThresholdEvent, h3cDot3OamFunctionsSupported=h3cDot3OamFunctionsSupported, h3cDot3OamStatsBaseGroup=h3cDot3OamStatsBaseGroup, h3cDot3OamEventLogThresholdLo=h3cDot3OamEventLogThresholdLo, h3cDot3OamNonThresholdEvent=h3cDot3OamNonThresholdEvent, h3cDot3OamPeerFunctionsSupported=h3cDot3OamPeerFunctionsSupported, h3cDot3OamMode=h3cDot3OamMode, h3cDot3OamErrFramePeriodThreshold=h3cDot3OamErrFramePeriodThreshold, h3cDot3OamUniqueEventNotificationTx=h3cDot3OamUniqueEventNotificationTx, h3cDot3OamEventConfigTable=h3cDot3OamEventConfigTable, h3cDot3OamEntry=h3cDot3OamEntry, h3cDot3OamEventConfigEntry=h3cDot3OamEventConfigEntry, h3cDot3OamErrFrameSecsEvNotifEnable=h3cDot3OamErrFrameSecsEvNotifEnable, h3cEfmOamMIB=h3cEfmOamMIB, h3cDot3OamLoopbackStatus=h3cDot3OamLoopbackStatus, h3cDot3OamPeerTable=h3cDot3OamPeerTable, h3cDot3OamLoopbackControlRx=h3cDot3OamLoopbackControlRx, h3cDot3OamEventLogEntry=h3cDot3OamEventLogEntry, h3cDot3OamErrSymPeriodWindowHi=h3cDot3OamErrSymPeriodWindowHi, h3cDot3OamLoopbackCommand=h3cDot3OamLoopbackCommand, h3cDot3OamVariableRequestTx=h3cDot3OamVariableRequestTx, h3cDot3OamLoopbackControlTx=h3cDot3OamLoopbackControlTx, h3cDot3OamEventLogEventTotal=h3cDot3OamEventLogEventTotal, h3cDot3OamUniqueEventNotificationRx=h3cDot3OamUniqueEventNotificationRx, h3cDot3OamPeerMode=h3cDot3OamPeerMode, h3cDot3OamPeerStatus=h3cDot3OamPeerStatus, h3cDot3OamPeerVendorOui=h3cDot3OamPeerVendorOui, h3cDot3OamStatsEntry=h3cDot3OamStatsEntry, h3cDot3OamEventLogType=h3cDot3OamEventLogType, h3cDot3OamEventLogOui=h3cDot3OamEventLogOui, h3cDot3OamEventLogWindowHi=h3cDot3OamEventLogWindowHi, h3cDot3OamErrFrameSecsSummaryWindow=h3cDot3OamErrFrameSecsSummaryWindow, h3cDot3OamEventLogTimestamp=h3cDot3OamEventLogTimestamp, h3cDot3OamVariableResponseRx=h3cDot3OamVariableResponseRx)
