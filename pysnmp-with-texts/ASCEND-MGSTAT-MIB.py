#
# PySNMP MIB module ASCEND-MGSTAT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MGSTAT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:26:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
mgGroup, = mibBuilder.importSymbols("ASCEND-MIB", "mgGroup")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Counter64, NotificationType, ModuleIdentity, iso, ObjectIdentity, Unsigned32, Integer32, MibIdentifier, IpAddress, TimeTicks, Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter64", "NotificationType", "ModuleIdentity", "iso", "ObjectIdentity", "Unsigned32", "Integer32", "MibIdentifier", "IpAddress", "TimeTicks", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
mgNumLinks = MibScalar((1, 3, 6, 1, 4, 1, 529, 29, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgNumLinks.setStatus('mandatory')
if mibBuilder.loadTexts: mgNumLinks.setDescription('Number of media gateway links (link groups) available in this system.')
mgTable = MibTable((1, 3, 6, 1, 4, 1, 529, 29, 2), )
if mibBuilder.loadTexts: mgTable.setStatus('mandatory')
if mibBuilder.loadTexts: mgTable.setDescription('A list of mgTableEntry objects.')
mgTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 29, 2, 1), ).setIndexNames((0, "ASCEND-MGSTAT-MIB", "mgLinkName"))
if mibBuilder.loadTexts: mgTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mgTableEntry.setDescription('Entry holding information about a group of Media Gateway Controllers sharing the same signaling link.')
mgLinkName = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 2, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgLinkName.setStatus('mandatory')
if mibBuilder.loadTexts: mgLinkName.setDescription('Name of this media gateway control group.')
mgProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notApplicable", 1), ("other", 2), ("asgcp", 3), ("ipdc", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgProtocol.setStatus('mandatory')
if mibBuilder.loadTexts: mgProtocol.setDescription('Type of the control protocol in use.')
mgAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgAdminStatus.setStatus('mandatory')
if mibBuilder.loadTexts: mgAdminStatus.setDescription('Administrative status for this media gateway control group.')
mgOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: mgOperStatus.setDescription('Current operational status of the signaling link.')
mgLastStatusChange = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 2, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgLastStatusChange.setStatus('mandatory')
if mibBuilder.loadTexts: mgLastStatusChange.setDescription('The value of sysUpTime at the time the associated link entered its current operational status. If the current status was entered prior to the last re-initialization of the local network management subsystem, then this object contains a zero value.')
mgNumInMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgNumInMessages.setStatus('mandatory')
if mibBuilder.loadTexts: mgNumInMessages.setDescription('Total number of messages received on the link.')
mgNumInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgNumInOctets.setStatus('mandatory')
if mibBuilder.loadTexts: mgNumInOctets.setDescription('Total number of octets received on the link.')
mgNumOutMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgNumOutMessages.setStatus('mandatory')
if mibBuilder.loadTexts: mgNumOutMessages.setDescription('Total number of messages sent on the link.')
mgNumOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgNumOutOctets.setStatus('mandatory')
if mibBuilder.loadTexts: mgNumOutOctets.setDescription('Total number of octets sent on the link.')
mgNumErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgNumErrors.setStatus('mandatory')
if mibBuilder.loadTexts: mgNumErrors.setDescription('Total number of signaling-level errors encountered. Includes, but is not limited to, number of bad messages received, number of failures to sent a message and number of other errors.')
mgNumTimerRecovery = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgNumTimerRecovery.setStatus('mandatory')
if mibBuilder.loadTexts: mgNumTimerRecovery.setDescription('Number of timer recovery events since the statistics was last reset. This reflects all timers.')
mgTransportNumLosses = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgTransportNumLosses.setStatus('mandatory')
if mibBuilder.loadTexts: mgTransportNumLosses.setDescription('Number of times a transport link was lost (excluding switch-over cases).')
mgTransportNumSwitchover = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgTransportNumSwitchover.setStatus('mandatory')
if mibBuilder.loadTexts: mgTransportNumSwitchover.setDescription('Number of times when the signaling was switched over to an alternative link.')
mgTransportTotalNumAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgTransportTotalNumAlarms.setStatus('mandatory')
if mibBuilder.loadTexts: mgTransportTotalNumAlarms.setDescription('Total number of all alarms issued for the transport layer.')
mgTransportLastEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notApplicable", 1), ("other", 2), ("linkUp", 3), ("linkLoss", 4), ("persistentError", 5), ("linkShutdown", 6), ("switchOver", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgTransportLastEvent.setStatus('mandatory')
if mibBuilder.loadTexts: mgTransportLastEvent.setDescription('Last event reported by the transport layer.')
mgTransportLastEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 2, 1, 16), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgTransportLastEventTime.setStatus('mandatory')
if mibBuilder.loadTexts: mgTransportLastEventTime.setDescription('The value of sysUpTime at the time when the event specified by mgTransportLastEvent occured. If the last event occured prior to the last re-initialization of the local network management subsystem, then this object contains a zero value.')
mgResetStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("other", 2), ("reset", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgResetStatistics.setStatus('mandatory')
if mibBuilder.loadTexts: mgResetStatistics.setDescription("This object can be used to reset all statistics collected for this media gateway link so far. Statistics will be reset when the object is SET to 'reset'. GET from this object always returns 'notApplicable'.")
mgLastStatisticsReset = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 2, 1, 18), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgLastStatisticsReset.setStatus('mandatory')
if mibBuilder.loadTexts: mgLastStatisticsReset.setDescription('The value of sysUpTime at the time when the statistics was reset. If the reset occured prior to the last re-initialization of the local network management subsystem, this object contains a zero value.')
mgControllerTable = MibTable((1, 3, 6, 1, 4, 1, 529, 29, 3), )
if mibBuilder.loadTexts: mgControllerTable.setStatus('mandatory')
if mibBuilder.loadTexts: mgControllerTable.setDescription('Addresses of Media Gateway Controllers.')
mgControllerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 29, 3, 1), ).setIndexNames((0, "ASCEND-MGSTAT-MIB", "mgControllerLinkName"), (0, "ASCEND-MGSTAT-MIB", "mgControllerIndex"))
if mibBuilder.loadTexts: mgControllerEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mgControllerEntry.setDescription('Entry holding information about an individual Media Gateway Controller.')
mgControllerLinkName = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 3, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgControllerLinkName.setStatus('mandatory')
if mibBuilder.loadTexts: mgControllerLinkName.setDescription('The same as mgLinkName.')
mgControllerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgControllerIndex.setStatus('mandatory')
if mibBuilder.loadTexts: mgControllerIndex.setDescription('The index number for this Media Gateway Controller entry. Its value ranges from 1 to the maximum number of controllers per group and identifies which controller the entry is associated with.')
mgControllerIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgControllerIPAddress.setStatus('mandatory')
if mibBuilder.loadTexts: mgControllerIPAddress.setDescription('The IP address of the Media Gateway Controller. The value 0.0.0.0 is returned if the entry is invalid.')
mgControllerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgControllerPort.setStatus('mandatory')
if mibBuilder.loadTexts: mgControllerPort.setDescription('TCP port of the Media Gateway Controller. The value 0 is returned if the entry is invalid.')
mgControllerOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 29, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("standby", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgControllerOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: mgControllerOperStatus.setDescription('Status of the transport link to this particular Media Gateway Controller.')
mibBuilder.exportSymbols("ASCEND-MGSTAT-MIB", mgTransportLastEvent=mgTransportLastEvent, mgAdminStatus=mgAdminStatus, mgTable=mgTable, mgControllerEntry=mgControllerEntry, mgNumInOctets=mgNumInOctets, mgControllerTable=mgControllerTable, mgTransportNumSwitchover=mgTransportNumSwitchover, mgTableEntry=mgTableEntry, mgControllerPort=mgControllerPort, mgOperStatus=mgOperStatus, mgControllerIndex=mgControllerIndex, mgLastStatisticsReset=mgLastStatisticsReset, mgNumInMessages=mgNumInMessages, mgNumOutOctets=mgNumOutOctets, mgNumLinks=mgNumLinks, mgControllerIPAddress=mgControllerIPAddress, mgProtocol=mgProtocol, mgControllerLinkName=mgControllerLinkName, mgNumTimerRecovery=mgNumTimerRecovery, mgTransportNumLosses=mgTransportNumLosses, mgTransportLastEventTime=mgTransportLastEventTime, mgNumOutMessages=mgNumOutMessages, mgLastStatusChange=mgLastStatusChange, mgTransportTotalNumAlarms=mgTransportTotalNumAlarms, mgNumErrors=mgNumErrors, mgResetStatistics=mgResetStatistics, mgControllerOperStatus=mgControllerOperStatus, mgLinkName=mgLinkName)
