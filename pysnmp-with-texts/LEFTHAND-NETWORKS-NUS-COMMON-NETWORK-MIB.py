#
# PySNMP MIB module LEFTHAND-NETWORKS-NUS-COMMON-NETWORK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LEFTHAND-NETWORKS-NUS-COMMON-NETWORK-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:06:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
lhnModules, = mibBuilder.importSymbols("LEFTHAND-NETWORKS-GLOBAL-REG", "lhnModules")
lhnNusCommonNetwork, = mibBuilder.importSymbols("LEFTHAND-NETWORKS-NUS-COMMON-MIB", "lhnNusCommonNetwork")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, MibIdentifier, ModuleIdentity, NotificationType, ObjectIdentity, Unsigned32, IpAddress, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter32, Gauge32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "ModuleIdentity", "NotificationType", "ObjectIdentity", "Unsigned32", "IpAddress", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter32", "Gauge32", "TimeTicks")
DisplayString, TextualConvention, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus", "TruthValue")
lhnNusCommonNetworkModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 9804, 1, 1, 5))
if mibBuilder.loadTexts: lhnNusCommonNetworkModule.setLastUpdated('0106010000Z')
if mibBuilder.loadTexts: lhnNusCommonNetworkModule.setOrganization('LeftHand Networks, Inc.')
if mibBuilder.loadTexts: lhnNusCommonNetworkModule.setContactInfo(' Author: Jose Faria LeftHand Networks postal: 1688 Conestoga St. Boulder, CO 80301 USA email: jfaria@lefthandnetworks.com phone: +1 303 449-4100 ')
if mibBuilder.loadTexts: lhnNusCommonNetworkModule.setDescription('network items for NSM Devices')
networkDeviceCount = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: networkDeviceCount.setStatus('current')
if mibBuilder.loadTexts: networkDeviceCount.setDescription('number of network devices')
networkDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 2), )
if mibBuilder.loadTexts: networkDeviceTable.setStatus('current')
if mibBuilder.loadTexts: networkDeviceTable.setDescription('A table of network setup parameters for the NSM. The number of entries is given by networkDeviceCount.')
networkDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 2, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-NETWORK-MIB", "networkIndex"))
if mibBuilder.loadTexts: networkDeviceEntry.setStatus('current')
if mibBuilder.loadTexts: networkDeviceEntry.setDescription('A row of network setup parameters for the NSM.')
networkDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: networkDeviceIndex.setStatus('current')
if mibBuilder.loadTexts: networkDeviceIndex.setDescription('network device index')
networkDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 2, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: networkDeviceName.setStatus('current')
if mibBuilder.loadTexts: networkDeviceName.setDescription('network device name')
networkDeviceIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 2, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkDeviceIpAddress.setStatus('current')
if mibBuilder.loadTexts: networkDeviceIpAddress.setDescription('IP address')
networkDeviceMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 2, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkDeviceMask.setStatus('current')
if mibBuilder.loadTexts: networkDeviceMask.setDescription('network mask')
networkDeviceDefaultGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 2, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkDeviceDefaultGateway.setStatus('current')
if mibBuilder.loadTexts: networkDeviceDefaultGateway.setDescription('network default gateway')
networkDeviceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("auto", 2), ("static", 3), ("slave", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkDeviceMode.setStatus('current')
if mibBuilder.loadTexts: networkDeviceMode.setDescription('network device mode')
networkDeviceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 2, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: networkDeviceStatus.setStatus('current')
if mibBuilder.loadTexts: networkDeviceStatus.setDescription('network device status')
mibBuilder.exportSymbols("LEFTHAND-NETWORKS-NUS-COMMON-NETWORK-MIB", networkDeviceIpAddress=networkDeviceIpAddress, networkDeviceTable=networkDeviceTable, networkDeviceEntry=networkDeviceEntry, networkDeviceDefaultGateway=networkDeviceDefaultGateway, networkDeviceMask=networkDeviceMask, lhnNusCommonNetworkModule=lhnNusCommonNetworkModule, networkDeviceStatus=networkDeviceStatus, networkDeviceCount=networkDeviceCount, networkDeviceName=networkDeviceName, networkDeviceIndex=networkDeviceIndex, PYSNMP_MODULE_ID=lhnNusCommonNetworkModule, networkDeviceMode=networkDeviceMode)
