#
# PySNMP MIB module HPN-ICF-DHCPSNOOP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-DHCPSNOOP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:37:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
hpnicfdot1qVlanIndex, = mibBuilder.importSymbols("HPN-ICF-LswVLAN-MIB", "hpnicfdot1qVlanIndex")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Counter64, NotificationType, ModuleIdentity, IpAddress, MibIdentifier, Integer32, TimeTicks, Gauge32, Counter32, iso, Unsigned32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter64", "NotificationType", "ModuleIdentity", "IpAddress", "MibIdentifier", "Integer32", "TimeTicks", "Gauge32", "Counter32", "iso", "Unsigned32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TruthValue, MacAddress, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "MacAddress", "TextualConvention", "DisplayString")
hpnicfDhcpSnoop = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36))
if mibBuilder.loadTexts: hpnicfDhcpSnoop.setLastUpdated('200501140000Z')
if mibBuilder.loadTexts: hpnicfDhcpSnoop.setOrganization('')
if mibBuilder.loadTexts: hpnicfDhcpSnoop.setContactInfo('')
if mibBuilder.loadTexts: hpnicfDhcpSnoop.setDescription('The private MIB file includes the DHCP Snooping profile.')
hpnicfDhcpSnoopMibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 1))
hpnicfDhcpSnoopEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDhcpSnoopEnable.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopEnable.setDescription('DHCP Snooping status (enable or disable).')
hpnicfDhcpSnoopTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 1, 2), )
if mibBuilder.loadTexts: hpnicfDhcpSnoopTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopTable.setDescription("The table containing information of DHCP clients listened by DHCP snooping and it's enabled or disabled by setting hpnicfDhcpSnoopEnable node.")
hpnicfDhcpSnoopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-DHCPSNOOP-MIB", "hpnicfDhcpSnoopClientIpAddressType"), (0, "HPN-ICF-DHCPSNOOP-MIB", "hpnicfDhcpSnoopClientIpAddress"))
if mibBuilder.loadTexts: hpnicfDhcpSnoopEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopEntry.setDescription('An entry containing information of DHCP clients.')
hpnicfDhcpSnoopClientIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 1, 2, 1, 1), InetAddressType().clone('ipv4'))
if mibBuilder.loadTexts: hpnicfDhcpSnoopClientIpAddressType.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopClientIpAddressType.setDescription("DHCP clients' IP addresses type (IPv4 or IPv6).")
hpnicfDhcpSnoopClientIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 1, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: hpnicfDhcpSnoopClientIpAddress.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopClientIpAddress.setDescription("DHCP clients' IP addresses collected by DHCP snooping.")
hpnicfDhcpSnoopClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 1, 2, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDhcpSnoopClientMacAddress.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopClientMacAddress.setDescription("DHCP clients' MAC addresses collected by DHCP snooping.")
hpnicfDhcpSnoopClientProperty = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDhcpSnoopClientProperty.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopClientProperty.setDescription('Method of getting IP addresses collected by DHCP snooping.')
hpnicfDhcpSnoopClientUnitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDhcpSnoopClientUnitNum.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopClientUnitNum.setDescription('IRF (Intelligent Resilient Fabric) unit number via whom the clients get their IP addresses. The value 0 means this device does not support IRF.')
hpnicfDhcpSnoopTrustTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 1, 3), )
if mibBuilder.loadTexts: hpnicfDhcpSnoopTrustTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopTrustTable.setDescription('A table is used to configure and monitor port trusted status.')
hpnicfDhcpSnoopTrustEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfDhcpSnoopTrustEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopTrustEntry.setDescription('An entry containing information about trusted status of ports.')
hpnicfDhcpSnoopTrustStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("untrusted", 0), ("trusted", 1))).clone('untrusted')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDhcpSnoopTrustStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopTrustStatus.setDescription('Trusted status of current port which supports both get and set operation.')
hpnicfDhcpSnoopVlanTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 1, 4), )
if mibBuilder.loadTexts: hpnicfDhcpSnoopVlanTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopVlanTable.setDescription('A table is used to configure and monitor DHCP Snooping status of VLANs.')
hpnicfDhcpSnoopVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 1, 4, 1), ).setIndexNames((0, "HPN-ICF-DHCPSNOOP-MIB", "hpnicfDhcpSnoopVlanIndex"))
if mibBuilder.loadTexts: hpnicfDhcpSnoopVlanEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopVlanEntry.setDescription('The entry information about hpnicfDhcpSnoopVlanTable.')
hpnicfDhcpSnoopVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hpnicfDhcpSnoopVlanIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopVlanIndex.setDescription('Current VLAN index.')
hpnicfDhcpSnoopVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 1, 4, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDhcpSnoopVlanEnable.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopVlanEnable.setDescription('DHCP Snooping status of current VLAN.')
hpnicfDhcpSnoopTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 2))
hpnicfDhcpSnoopTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 2, 0))
hpnicfDhcpSnoopTrapsObject = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 2, 1))
hpnicfDhcpSnoopSpoofServerMac = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 2, 1, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDhcpSnoopSpoofServerMac.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopSpoofServerMac.setDescription('MAC address of the spoofing server and it is derived from link-layer header of offer packet. If the offer packet is relayed by dhcp relay entity, it may be the MAC address of relay entity. ')
hpnicfDhcpSnoopSpoofServerIP = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 2, 1, 2), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDhcpSnoopSpoofServerIP.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopSpoofServerIP.setDescription("IP address of the spoofing server and it is derived from IP header of offer packet. A tricksy host may send offer packet use other host's address, so this address can not always be trust. ")
hpnicfDhcpSnoopBindingIP = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 2, 1, 3), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDhcpSnoopBindingIP.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopBindingIP.setDescription('IP address of a new binding. ')
hpnicfDhcpSnoopBindingMac = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 2, 1, 4), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDhcpSnoopBindingMac.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopBindingMac.setDescription('MAC address of a new binding. ')
hpnicfDhcpSnoopSpoofServerDetected = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 2, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("HPN-ICF-LswVLAN-MIB", "hpnicfdot1qVlanIndex"), ("HPN-ICF-DHCPSNOOP-MIB", "hpnicfDhcpSnoopSpoofServerMac"), ("HPN-ICF-DHCPSNOOP-MIB", "hpnicfDhcpSnoopSpoofServerIP"))
if mibBuilder.loadTexts: hpnicfDhcpSnoopSpoofServerDetected.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopSpoofServerDetected.setDescription('To detect unauthorized DHCP servers on a network, the DHCP snooping device sends DHCP-DISCOVER messages through its downstream port (which is connected to the DHCP clients). If any response (DHCP-OFFER message) is received from the downstream port, an unauthorized DHCP server is considered present, and then the device sends a trap. With unauthorized DHCP server detection enabled, the interface sends a DHCP-DISCOVER message to detect unauthorized DHCP servers on the network. If this interface receives a DHCP-OFFER message, the DHCP server which sent it is considered unauthorized. ')
hpnicfDhcpSnoopNewBinding = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 36, 2, 0, 2)).setObjects(("HPN-ICF-DHCPSNOOP-MIB", "hpnicfDhcpSnoopBindingIP"), ("HPN-ICF-DHCPSNOOP-MIB", "hpnicfDhcpSnoopBindingMac"))
if mibBuilder.loadTexts: hpnicfDhcpSnoopNewBinding.setStatus('current')
if mibBuilder.loadTexts: hpnicfDhcpSnoopNewBinding.setDescription('The device sends a trap when adding a new binding.')
mibBuilder.exportSymbols("HPN-ICF-DHCPSNOOP-MIB", hpnicfDhcpSnoopSpoofServerDetected=hpnicfDhcpSnoopSpoofServerDetected, PYSNMP_MODULE_ID=hpnicfDhcpSnoop, hpnicfDhcpSnoopClientUnitNum=hpnicfDhcpSnoopClientUnitNum, hpnicfDhcpSnoopVlanEntry=hpnicfDhcpSnoopVlanEntry, hpnicfDhcpSnoopTrapsPrefix=hpnicfDhcpSnoopTrapsPrefix, hpnicfDhcpSnoopTrapsObject=hpnicfDhcpSnoopTrapsObject, hpnicfDhcpSnoopTrustTable=hpnicfDhcpSnoopTrustTable, hpnicfDhcpSnoopVlanIndex=hpnicfDhcpSnoopVlanIndex, hpnicfDhcpSnoopTrustStatus=hpnicfDhcpSnoopTrustStatus, hpnicfDhcpSnoopEntry=hpnicfDhcpSnoopEntry, hpnicfDhcpSnoopBindingMac=hpnicfDhcpSnoopBindingMac, hpnicfDhcpSnoop=hpnicfDhcpSnoop, hpnicfDhcpSnoopTable=hpnicfDhcpSnoopTable, hpnicfDhcpSnoopNewBinding=hpnicfDhcpSnoopNewBinding, hpnicfDhcpSnoopSpoofServerIP=hpnicfDhcpSnoopSpoofServerIP, hpnicfDhcpSnoopClientIpAddress=hpnicfDhcpSnoopClientIpAddress, hpnicfDhcpSnoopBindingIP=hpnicfDhcpSnoopBindingIP, hpnicfDhcpSnoopMibObject=hpnicfDhcpSnoopMibObject, hpnicfDhcpSnoopTraps=hpnicfDhcpSnoopTraps, hpnicfDhcpSnoopEnable=hpnicfDhcpSnoopEnable, hpnicfDhcpSnoopClientIpAddressType=hpnicfDhcpSnoopClientIpAddressType, hpnicfDhcpSnoopClientProperty=hpnicfDhcpSnoopClientProperty, hpnicfDhcpSnoopSpoofServerMac=hpnicfDhcpSnoopSpoofServerMac, hpnicfDhcpSnoopTrustEntry=hpnicfDhcpSnoopTrustEntry, hpnicfDhcpSnoopVlanEnable=hpnicfDhcpSnoopVlanEnable, hpnicfDhcpSnoopVlanTable=hpnicfDhcpSnoopVlanTable, hpnicfDhcpSnoopClientMacAddress=hpnicfDhcpSnoopClientMacAddress)
