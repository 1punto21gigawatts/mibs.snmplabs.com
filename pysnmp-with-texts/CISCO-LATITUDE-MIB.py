#
# PySNMP MIB module CISCO-LATITUDE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LATITUDE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:04:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
iso, TimeTicks, Counter32, Unsigned32, NotificationType, Gauge32, enterprises, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter64, Integer32, ObjectIdentity, MibIdentifier, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "TimeTicks", "Counter32", "Unsigned32", "NotificationType", "Gauge32", "enterprises", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter64", "Integer32", "ObjectIdentity", "MibIdentifier", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
latitudeComm = ModuleIdentity((1, 3, 6, 1, 4, 1, 7185))
latitudeComm.setRevisions(('2004-08-16 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: latitudeComm.setRevisionsDescriptions(('Initial version of this MIB.',))
if mibBuilder.loadTexts: latitudeComm.setLastUpdated('200408160000Z')
if mibBuilder.loadTexts: latitudeComm.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: latitudeComm.setContactInfo(' Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cse-meetingplace@cisco.com')
if mibBuilder.loadTexts: latitudeComm.setDescription('The MIB module for the managment of Cisco Latitude MeetingPlace conferencing solution. MeetignPlace MIB traps are generated under the following conditions. - T1 status - Gateway System Integrity - Major hardware alarm - Minor hardware alarm - Major software alarm - Minor software alarm Each major and minor hardware and software notification includes an integer alarm code that indicates which software module and server reported the alarm. For hardware alarms, four additional codes identify the device type, the device address, slot number, and port number.')
latitudeReg = MibIdentifier((1, 3, 6, 1, 4, 1, 7185, 1))
latitudeModules = MibIdentifier((1, 3, 6, 1, 4, 1, 7185, 1, 1))
latitudeGeneric = MibIdentifier((1, 3, 6, 1, 4, 1, 7185, 2))
latitudeProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 7185, 3))
meetingplace = MibIdentifier((1, 3, 6, 1, 4, 1, 7185, 3, 1))
meetingplaceConfs = MibIdentifier((1, 3, 6, 1, 4, 1, 7185, 3, 1, 1))
meetingplaceObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 7185, 3, 1, 2))
meetingplaceEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 7185, 3, 1, 3))
meetingplaceEventsV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 7185, 3, 1, 3, 0))
mpExCode = MibScalar((1, 3, 6, 1, 4, 1, 7185, 3, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpExCode.setStatus('current')
if mibBuilder.loadTexts: mpExCode.setDescription('MeetingPlace Exception Code. This is the primary code associated with each MeetingPlace exception condition. The mpAlarmDesc OID will provide a textual description of the exception code. Refer to the MeetingPlace System Managers Guide for more details.')
mpSysUnit = MibScalar((1, 3, 6, 1, 4, 1, 7185, 3, 1, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpSysUnit.setStatus('current')
if mibBuilder.loadTexts: mpSysUnit.setDescription('MeetingPlace Server Unit Number. This is the unit (server) number of the server that reported the exception.')
mpHwDev = MibScalar((1, 3, 6, 1, 4, 1, 7185, 3, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19))).clone(namedValues=NamedValues(("mpTemperature", 1), ("mpPowerSupply", 2), ("mpSerialPort", 3), ("mpTapeDrive", 4), ("mpHardDrive", 5), ("mpDisketteDrive", 6), ("mpEthernet", 7), ("mpModem", 8), ("mpSystemMisc", 9), ("mpDSPMSC", 10), ("mpDSPPRC", 11), ("mpT1Blade", 12), ("mpAnalogBlade", 13), ("mpT1Network", 14), ("mpSystemIntegrityCard", 15), ("mpMainMemory", 16), ("mpE1Blade", 17), ("mpE1Network", 18), ("mpVoIPBlade", 19)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpHwDev.setStatus('current')
if mibBuilder.loadTexts: mpHwDev.setDescription("MeetingPlace Hardware Device Code. This defines the class of device that generated a hardware fault. 'mpTemperature' - Temperature Sensor 'mpPowerSupply' - Power Supply 'mpSerialPort' - Serial Port 'mpTapeDrive' - Tape Drive 'mpHardDrive' - Hard Drive 'mpDisketteDrive' - Diskette Drive 'mpEthernet' - Ethernet Port 'mpModem' - Modem Port 'mpSystemMisc' - System Misc 'mpDSPMSC' - Master Switch Controller 'mpDSPPRC' - Port Resource Card 'mpT1Blade' - T1 Blade 'mpAnalogBlade' - Analog Blade 'mpT1Network' - T1 Network Interface 'mpSystemIntegrityCard' - System Integrity Card 'mpMainMemory' - Main Memory 'mpE1Blade' - E1 Blade 'mpE1Network' - E1 Network Interface 'mpVoIPBlade' - VoIP Blade ")
mpHwUnit = MibScalar((1, 3, 6, 1, 4, 1, 7185, 3, 1, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpHwUnit.setStatus('current')
if mibBuilder.loadTexts: mpHwUnit.setDescription('MeetingPlace Hardware Device Unit Number. This is the unit number of the hardware device that generated a fault. For a disk this would be the SCSI ID. For a blade this would the the logical card number as defined in the system configuration.')
mpHwSlot = MibScalar((1, 3, 6, 1, 4, 1, 7185, 3, 1, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpHwSlot.setStatus('current')
if mibBuilder.loadTexts: mpHwSlot.setDescription('MeetingPlace Hardware Device Slot Number. This is the location of the hardware device that generated a fault. For a blade this would be the slot number.')
mpHwPort = MibScalar((1, 3, 6, 1, 4, 1, 7185, 3, 1, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpHwPort.setStatus('current')
if mibBuilder.loadTexts: mpHwPort.setDescription('MeetingPlace Hardware Device Port Number. This is the logical port number associated with a hardware fault. For a T1 alarm, this is the logical span number.')
mpAlarmDesc = MibScalar((1, 3, 6, 1, 4, 1, 7185, 3, 1, 3, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpAlarmDesc.setStatus('current')
if mibBuilder.loadTexts: mpAlarmDesc.setDescription('MeetingPlace Alarm Description. This is a one-line text description of the exception condition. It comprises a string indexed by the exception code filled in with context-specific values.')
mpT1Down = NotificationType((1, 3, 6, 1, 4, 1, 7185, 3, 1, 3, 0, 1))
if mibBuilder.loadTexts: mpT1Down.setStatus('current')
if mibBuilder.loadTexts: mpT1Down.setDescription('MeetingPlace T1 Down Alarm. This indicates generically there is a problem with a telephony port. There are several possible alarm conditions that will generate this trap. This is from Release 4.3.')
mpGWSimAlarm = NotificationType((1, 3, 6, 1, 4, 1, 7185, 3, 1, 3, 0, 2))
if mibBuilder.loadTexts: mpGWSimAlarm.setStatus('current')
if mibBuilder.loadTexts: mpGWSimAlarm.setDescription('MeetingPlace Gateway Alarm. This indicates an alarm generated by a MeetingPlace gateway. There are several alarms that will generate this trap. This is from Release 4.3')
mpMajHwAlarm = NotificationType((1, 3, 6, 1, 4, 1, 7185, 3, 1, 3, 0, 3)).setObjects(("CISCO-LATITUDE-MIB", "mpExCode"), ("CISCO-LATITUDE-MIB", "mpSysUnit"), ("CISCO-LATITUDE-MIB", "mpHwDev"), ("CISCO-LATITUDE-MIB", "mpHwUnit"), ("CISCO-LATITUDE-MIB", "mpHwSlot"), ("CISCO-LATITUDE-MIB", "mpHwPort"))
if mibBuilder.loadTexts: mpMajHwAlarm.setStatus('current')
if mibBuilder.loadTexts: mpMajHwAlarm.setDescription('MeetingPlace Major Hardware Alarm. This is generated any time MeetingPlace reports a major hardware alarm.')
mpMinHwAlarm = NotificationType((1, 3, 6, 1, 4, 1, 7185, 3, 1, 3, 0, 4)).setObjects(("CISCO-LATITUDE-MIB", "mpExCode"), ("CISCO-LATITUDE-MIB", "mpSysUnit"), ("CISCO-LATITUDE-MIB", "mpHwDev"), ("CISCO-LATITUDE-MIB", "mpHwUnit"), ("CISCO-LATITUDE-MIB", "mpHwSlot"), ("CISCO-LATITUDE-MIB", "mpHwPort"))
if mibBuilder.loadTexts: mpMinHwAlarm.setStatus('current')
if mibBuilder.loadTexts: mpMinHwAlarm.setDescription('MeetingPlace Minor Hardware Alarm. This is generated any time MeetingPlace reports a minor hardware alarm.')
mpMajSwAlarm = NotificationType((1, 3, 6, 1, 4, 1, 7185, 3, 1, 3, 0, 5)).setObjects(("CISCO-LATITUDE-MIB", "mpExCode"), ("CISCO-LATITUDE-MIB", "mpSysUnit"), ("CISCO-LATITUDE-MIB", "mpAlarmDesc"))
if mibBuilder.loadTexts: mpMajSwAlarm.setStatus('current')
if mibBuilder.loadTexts: mpMajSwAlarm.setDescription('MeetingPlace Major Software Alarm. This is generated any time MeetingPlace reports a major software alarm.')
mpMinSwAlarm = NotificationType((1, 3, 6, 1, 4, 1, 7185, 3, 1, 3, 0, 6)).setObjects(("CISCO-LATITUDE-MIB", "mpExCode"), ("CISCO-LATITUDE-MIB", "mpSysUnit"), ("CISCO-LATITUDE-MIB", "mpAlarmDesc"))
if mibBuilder.loadTexts: mpMinSwAlarm.setStatus('current')
if mibBuilder.loadTexts: mpMinSwAlarm.setDescription('MeetingPlace Minor Software Alarm. This is generated any time MeetingPlace reports a minor hardware alarm.')
ciscoLatitudeMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 7185, 3, 1, 1, 1))
ciscoLatitudeMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 7185, 3, 1, 1, 2))
ciscoLatitudeMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 7185, 3, 1, 1, 1, 1)).setObjects(("CISCO-LATITUDE-MIB", "ciscoLatitudeAlarmGroupRev1"), ("CISCO-LATITUDE-MIB", "ciscoLatitudeNotifsGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLatitudeMIBComplianceRev1 = ciscoLatitudeMIBComplianceRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoLatitudeMIBComplianceRev1.setDescription('The compliance statement for entities which implement the MeetingPlace MIB.')
ciscoLatitudeAlarmGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 7185, 3, 1, 1, 2, 1)).setObjects(("CISCO-LATITUDE-MIB", "mpExCode"), ("CISCO-LATITUDE-MIB", "mpSysUnit"), ("CISCO-LATITUDE-MIB", "mpHwDev"), ("CISCO-LATITUDE-MIB", "mpHwUnit"), ("CISCO-LATITUDE-MIB", "mpHwSlot"), ("CISCO-LATITUDE-MIB", "mpHwPort"), ("CISCO-LATITUDE-MIB", "mpAlarmDesc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLatitudeAlarmGroupRev1 = ciscoLatitudeAlarmGroupRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoLatitudeAlarmGroupRev1.setDescription('Alarms objects within MeetingPlace.')
ciscoLatitudeNotifsGroupRev1 = NotificationGroup((1, 3, 6, 1, 4, 1, 7185, 3, 1, 1, 2, 2)).setObjects(("CISCO-LATITUDE-MIB", "mpT1Down"), ("CISCO-LATITUDE-MIB", "mpGWSimAlarm"), ("CISCO-LATITUDE-MIB", "mpMajHwAlarm"), ("CISCO-LATITUDE-MIB", "mpMinHwAlarm"), ("CISCO-LATITUDE-MIB", "mpMajSwAlarm"), ("CISCO-LATITUDE-MIB", "mpMinSwAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLatitudeNotifsGroupRev1 = ciscoLatitudeNotifsGroupRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoLatitudeNotifsGroupRev1.setDescription('Notifications applicable to meetingplace.')
mibBuilder.exportSymbols("CISCO-LATITUDE-MIB", mpMajHwAlarm=mpMajHwAlarm, latitudeModules=latitudeModules, ciscoLatitudeMIBGroups=ciscoLatitudeMIBGroups, meetingplace=meetingplace, mpHwSlot=mpHwSlot, meetingplaceEventsV2=meetingplaceEventsV2, mpHwUnit=mpHwUnit, mpGWSimAlarm=mpGWSimAlarm, latitudeReg=latitudeReg, latitudeGeneric=latitudeGeneric, meetingplaceEvents=meetingplaceEvents, PYSNMP_MODULE_ID=latitudeComm, mpSysUnit=mpSysUnit, mpExCode=mpExCode, ciscoLatitudeAlarmGroupRev1=ciscoLatitudeAlarmGroupRev1, latitudeProducts=latitudeProducts, ciscoLatitudeMIBComplianceRev1=ciscoLatitudeMIBComplianceRev1, mpMinSwAlarm=mpMinSwAlarm, ciscoLatitudeNotifsGroupRev1=ciscoLatitudeNotifsGroupRev1, mpAlarmDesc=mpAlarmDesc, mpT1Down=mpT1Down, mpHwPort=mpHwPort, meetingplaceObjs=meetingplaceObjs, latitudeComm=latitudeComm, ciscoLatitudeMIBCompliances=ciscoLatitudeMIBCompliances, mpHwDev=mpHwDev, mpMajSwAlarm=mpMajSwAlarm, mpMinHwAlarm=mpMinHwAlarm, meetingplaceConfs=meetingplaceConfs)
