#
# PySNMP MIB module RADLAN-DHCPv6-RELAY (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RADLAN-DHCPv6-RELAY
# Produced by pysmi-0.3.4 at Wed May  1 14:46:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
InetAddressType, InetAddress, InetAddressIPv6 = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetAddressIPv6")
rlDhcpv6Relay, = mibBuilder.importSymbols("RADLAN-DHCPv6", "rlDhcpv6Relay")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Counter64, ModuleIdentity, Counter32, MibIdentifier, Integer32, Gauge32, Unsigned32, ObjectIdentity, IpAddress, TimeTicks, Bits, iso, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter64", "ModuleIdentity", "Counter32", "MibIdentifier", "Integer32", "Gauge32", "Unsigned32", "ObjectIdentity", "IpAddress", "TimeTicks", "Bits", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TruthValue, TextualConvention, RowStatus, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "RowStatus", "MacAddress")
rlDhcpv6RelayInterfaceListTable = MibTable((1, 3, 6, 1, 4, 1, 89, 214, 3, 1), )
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceListTable.setStatus('current')
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceListTable.setDescription('This table contains interfaces that have configured DHCPv6 relay')
rlDhcpv6RelayInterfaceListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 214, 3, 1, 1), ).setIndexNames((0, "RADLAN-DHCPv6-RELAY", "rlDhcpv6RelayInterfaceListIfIndex"))
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceListEntry.setStatus('current')
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceListEntry.setDescription(' The entry contains ifindex field.')
rlDhcpv6RelayInterfaceListIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 214, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceListIfIndex.setStatus('current')
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceListIfIndex.setDescription('Interface that have configured DHCPv6 relay')
rlDhcpv6RelayInterfaceListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 214, 3, 1, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceListRowStatus.setStatus('current')
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceListRowStatus.setDescription("This variable displays the validity or invalidity of the entry. Setting it to 'destroy' has the effect of rendering it inoperative. The internal effect (row removal) is implementation dependent.")
rlDhcpv6RelayDestinationsGlobalTable = MibTable((1, 3, 6, 1, 4, 1, 89, 214, 3, 2), )
if mibBuilder.loadTexts: rlDhcpv6RelayDestinationsGlobalTable.setStatus('current')
if mibBuilder.loadTexts: rlDhcpv6RelayDestinationsGlobalTable.setDescription(' The table is used to store the global destinations defined by the user to which the relay agent forwards RELAY-FW messages ')
rlDhcpv6RelayDestinationsGlobalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 214, 3, 2, 1), ).setIndexNames((0, "RADLAN-DHCPv6-RELAY", "rlDhcpv6RelayDestinationsGlobalIpv6AddrType"), (0, "RADLAN-DHCPv6-RELAY", "rlDhcpv6RelayDestinationsGlobalIpv6Addr"), (0, "RADLAN-DHCPv6-RELAY", "rlDhcpv6RelayDestinationsGlobalOutputInterface"))
if mibBuilder.loadTexts: rlDhcpv6RelayDestinationsGlobalEntry.setStatus('current')
if mibBuilder.loadTexts: rlDhcpv6RelayDestinationsGlobalEntry.setDescription(' The row definition for this table. ')
rlDhcpv6RelayDestinationsGlobalIpv6AddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 214, 3, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: rlDhcpv6RelayDestinationsGlobalIpv6AddrType.setStatus('current')
if mibBuilder.loadTexts: rlDhcpv6RelayDestinationsGlobalIpv6AddrType.setDescription('The only inet type that is supported is ipv6')
rlDhcpv6RelayDestinationsGlobalIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 214, 3, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: rlDhcpv6RelayDestinationsGlobalIpv6Addr.setStatus('current')
if mibBuilder.loadTexts: rlDhcpv6RelayDestinationsGlobalIpv6Addr.setDescription('The address relay uses to forward the message')
rlDhcpv6RelayDestinationsGlobalOutputInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 214, 3, 2, 1, 3), Unsigned32())
if mibBuilder.loadTexts: rlDhcpv6RelayDestinationsGlobalOutputInterface.setStatus('current')
if mibBuilder.loadTexts: rlDhcpv6RelayDestinationsGlobalOutputInterface.setDescription('The output interface (ifindex) is required only in case the destination address is not global unicast.')
rlDhcpv6RelayDestinationsGlobalRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 214, 3, 2, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpv6RelayDestinationsGlobalRowStatus.setStatus('current')
if mibBuilder.loadTexts: rlDhcpv6RelayDestinationsGlobalRowStatus.setDescription("This variable displays the validity or invalidity of the entry. Setting it to 'destroy' has the effect of rendering it inoperative. The internal effect (row removal) is implementation dependent.")
rlDhcpv6RelayInterfaceDestinationsTable = MibTable((1, 3, 6, 1, 4, 1, 89, 214, 3, 3), )
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceDestinationsTable.setStatus('current')
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceDestinationsTable.setDescription(' The table is used to store destinations defined by the user per interface to which the relay agent forwards RELAY-FW messages ')
rlDhcpv6RelayInterfaceDestinationsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 214, 3, 3, 1), ).setIndexNames((0, "RADLAN-DHCPv6-RELAY", "rlDhcpv6RelayInterfaceDestinationsIfindex"), (0, "RADLAN-DHCPv6-RELAY", "rlDhcpv6RelayInterfaceDestinationsIpv6AddrType"), (0, "RADLAN-DHCPv6-RELAY", "rlDhcpv6RelayInterfaceDestinationsIpv6Addr"), (0, "RADLAN-DHCPv6-RELAY", "rlDhcpv6RelayInterfaceDestinationsOutputInterface"))
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceDestinationsEntry.setStatus('current')
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceDestinationsEntry.setDescription(' The row definition for this table. ')
rlDhcpv6RelayInterfaceDestinationsIfindex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 214, 3, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceDestinationsIfindex.setStatus('current')
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceDestinationsIfindex.setDescription('The relay interface')
rlDhcpv6RelayInterfaceDestinationsIpv6AddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 214, 3, 3, 1, 2), InetAddressType())
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceDestinationsIpv6AddrType.setStatus('current')
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceDestinationsIpv6AddrType.setDescription('The only inet type that is supported is ipv6')
rlDhcpv6RelayInterfaceDestinationsIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 214, 3, 3, 1, 3), InetAddress())
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceDestinationsIpv6Addr.setStatus('current')
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceDestinationsIpv6Addr.setDescription('The address relay uses to forward the message')
rlDhcpv6RelayInterfaceDestinationsOutputInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 214, 3, 3, 1, 4), Unsigned32())
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceDestinationsOutputInterface.setStatus('current')
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceDestinationsOutputInterface.setDescription('The output interface (ifindex) is required only in case the destination address is not global unicast.')
rlDhcpv6RelayInterfaceDestinationsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 214, 3, 3, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceDestinationsRowStatus.setStatus('current')
if mibBuilder.loadTexts: rlDhcpv6RelayInterfaceDestinationsRowStatus.setDescription("This variable displays the validity or invalidity of the entry. Setting it to 'destroy' has the effect of rendering it inoperative. The internal effect (row removal) is implementation dependent.")
mibBuilder.exportSymbols("RADLAN-DHCPv6-RELAY", rlDhcpv6RelayDestinationsGlobalEntry=rlDhcpv6RelayDestinationsGlobalEntry, rlDhcpv6RelayDestinationsGlobalIpv6Addr=rlDhcpv6RelayDestinationsGlobalIpv6Addr, rlDhcpv6RelayInterfaceDestinationsIpv6AddrType=rlDhcpv6RelayInterfaceDestinationsIpv6AddrType, rlDhcpv6RelayInterfaceListRowStatus=rlDhcpv6RelayInterfaceListRowStatus, rlDhcpv6RelayInterfaceListEntry=rlDhcpv6RelayInterfaceListEntry, rlDhcpv6RelayDestinationsGlobalIpv6AddrType=rlDhcpv6RelayDestinationsGlobalIpv6AddrType, rlDhcpv6RelayInterfaceDestinationsTable=rlDhcpv6RelayInterfaceDestinationsTable, rlDhcpv6RelayInterfaceDestinationsIfindex=rlDhcpv6RelayInterfaceDestinationsIfindex, rlDhcpv6RelayInterfaceDestinationsEntry=rlDhcpv6RelayInterfaceDestinationsEntry, rlDhcpv6RelayInterfaceDestinationsIpv6Addr=rlDhcpv6RelayInterfaceDestinationsIpv6Addr, rlDhcpv6RelayInterfaceDestinationsRowStatus=rlDhcpv6RelayInterfaceDestinationsRowStatus, rlDhcpv6RelayDestinationsGlobalOutputInterface=rlDhcpv6RelayDestinationsGlobalOutputInterface, rlDhcpv6RelayInterfaceListIfIndex=rlDhcpv6RelayInterfaceListIfIndex, rlDhcpv6RelayDestinationsGlobalRowStatus=rlDhcpv6RelayDestinationsGlobalRowStatus, rlDhcpv6RelayInterfaceListTable=rlDhcpv6RelayInterfaceListTable, rlDhcpv6RelayDestinationsGlobalTable=rlDhcpv6RelayDestinationsGlobalTable, rlDhcpv6RelayInterfaceDestinationsOutputInterface=rlDhcpv6RelayInterfaceDestinationsOutputInterface)
