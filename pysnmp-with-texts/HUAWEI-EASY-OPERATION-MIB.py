#
# PySNMP MIB module HUAWEI-EASY-OPERATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-EASY-OPERATION-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:44:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Integer32, Unsigned32, IpAddress, Counter64, Bits, NotificationType, Counter32, Gauge32, ObjectIdentity, TimeTicks, ModuleIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Integer32", "Unsigned32", "IpAddress", "Counter64", "Bits", "NotificationType", "Counter32", "Gauge32", "ObjectIdentity", "TimeTicks", "ModuleIdentity", "MibIdentifier")
MacAddress, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "RowStatus", "TextualConvention")
hwEasyOperationMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311))
hwEasyOperationMIB.setRevisions(('2014-09-09 00:00', '2014-06-04 00:00', '2013-12-30 00:00', '2013-08-05 00:00', '2013-03-18 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hwEasyOperationMIB.setRevisionsDescriptions(('Revisions made by HUAWEI.', 'Revisions made by HUAWEI.', 'Revisions made by HUAWEI.', 'Revisions made by HUAWEI.', 'Revisions made by HUAWEI.',))
if mibBuilder.loadTexts: hwEasyOperationMIB.setLastUpdated('201409090000Z')
if mibBuilder.loadTexts: hwEasyOperationMIB.setOrganization('Huawei Technologies Co.,Ltd.')
if mibBuilder.loadTexts: hwEasyOperationMIB.setContactInfo("Huawei Industrial Base Bantian, Longgang Shenzhen 518129 People's Republic of China Website: http://www.huawei.com Email: support@huawei.com ")
if mibBuilder.loadTexts: hwEasyOperationMIB.setDescription('Huawei Easy Opearation MIB.')
hwEasyOperationGlobalObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1))
hwEasyOperationCommanderEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationCommanderEnable.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationCommanderEnable.setDescription('This object specifies the Easy Operation Commander operation mode.')
hwEasyOperationCommanderIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationCommanderIpAddress.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationCommanderIpAddress.setDescription('The IP address of commander.')
hwEasyOperationCommanderIpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 3), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationCommanderIpAddressType.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationCommanderIpAddressType.setDescription('The IP address type of commander.')
hwEasyOperationCommanderUdpPort = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationCommanderUdpPort.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationCommanderUdpPort.setDescription('The UDP port of commander.')
hwEasyOperationServerType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tftp", 1), ("ftp", 2), ("sftp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationServerType.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationServerType.setDescription('The type of file server.')
hwEasyOperationServerIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 6), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationServerIpAddress.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationServerIpAddress.setDescription('The IP address of file server.')
hwEasyOperationServerIpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 7), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationServerIpAddressType.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationServerIpAddressType.setDescription('The IP address type of file server.')
hwEasyOperationServerPort = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationServerPort.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationServerPort.setDescription('The port number of file server.')
hwEasyOperationAutoClearEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 9), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationAutoClearEnable.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationAutoClearEnable.setDescription('Whether client would clear the old software file when the free space is not enough.')
hwEasyOperationActivateMode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("reload", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationActivateMode.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationActivateMode.setDescription('The mode of activating file.')
hwEasyOperationActivateDelayTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationActivateDelayTime.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationActivateDelayTime.setDescription('The delay time of activating file.The unit is second(s).')
hwEasyOperationActivateInTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationActivateInTime.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationActivateInTime.setDescription('The specific time of activating file.')
hwEasyOperationBackupConfigMode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("overwrite", 1), ("duplicate", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationBackupConfigMode.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationBackupConfigMode.setDescription('The mode of file created on the server.')
hwEasyOperationBackupConfigInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationBackupConfigInterval.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationBackupConfigInterval.setDescription('The interval of configuration backup .The unit is hour(s)')
hwEasyOperationDefaultSysSoftware = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationDefaultSysSoftware.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationDefaultSysSoftware.setDescription('The default name of software file.')
hwEasyOperationDefaultSysSoftwareVer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationDefaultSysSoftwareVer.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationDefaultSysSoftwareVer.setDescription('The version of default software file.')
hwEasyOperationDefaultConfig = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationDefaultConfig.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationDefaultConfig.setDescription('The default name of configuration file.')
hwEasyOperationDefaultPatch = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationDefaultPatch.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationDefaultPatch.setDescription('The default name of patch file.')
hwEasyOperationDefaultWebfile = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationDefaultWebfile.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationDefaultWebfile.setDescription('The default name of WEB file.')
hwEasyOperationDefaultLicense = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationDefaultLicense.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationDefaultLicense.setDescription('The default name of license file.')
hwEasyOperationDefaultCustomfile1 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationDefaultCustomfile1.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationDefaultCustomfile1.setDescription('The default name of custom file.')
hwEasyOperationDefaultCustomfile2 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationDefaultCustomfile2.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationDefaultCustomfile2.setDescription('The default name of custom file.')
hwEasyOperationDefaultCustomfile3 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationDefaultCustomfile3.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationDefaultCustomfile3.setDescription('The default name of custom file.')
hwEasyOperationClientAutoJoinEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 24), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationClientAutoJoinEnable.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientAutoJoinEnable.setDescription('Whether commander can receive the information of new clients.')
hwEasyOperationTopologyEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 25), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationTopologyEnable.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationTopologyEnable.setDescription('Whether commander can collect the topology information of new clients.')
hwEasyOperationClientAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 1, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationClientAgingTime.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientAgingTime.setDescription('The aging time of client which is lost. The unit is hour(s).')
hwEasyOperationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2))
hwEasyOperationTotalGroupNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationTotalGroupNumber.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationTotalGroupNumber.setDescription('The total number of group.')
hwEasyOperationBuildInGroupNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationBuildInGroupNumber.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationBuildInGroupNumber.setDescription('The number of build-in group.')
hwEasyOperationCustomGroupNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationCustomGroupNumber.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationCustomGroupNumber.setDescription('The number of custom group.')
hwEasyOperationGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 4), )
if mibBuilder.loadTexts: hwEasyOperationGroupTable.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupTable.setDescription('Group table.')
hwEasyOperationGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 4, 1), ).setIndexNames((0, "HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupIndex"))
if mibBuilder.loadTexts: hwEasyOperationGroupEntry.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupEntry.setDescription('The entry of group table.')
hwEasyOperationGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: hwEasyOperationGroupIndex.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupIndex.setDescription('The index of group table.')
hwEasyOperationGroupType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("buildIn", 1), ("macAddress", 2), ("esn", 3), ("model", 4), ("deviceType", 5), ("ipAddress", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupType.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupType.setDescription('The type of group.')
hwEasyOperationGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 4, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupName.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupName.setDescription('The name of group.')
hwEasyOperationGroupSysSoftware = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 4, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupSysSoftware.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupSysSoftware.setDescription('The software file name of group.')
hwEasyOperationGroupSysSoftwareVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 4, 1, 5), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupSysSoftwareVer.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupSysSoftwareVer.setDescription('The software version of group.')
hwEasyOperationGroupConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 4, 1, 6), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupConfig.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupConfig.setDescription('The configuration file name of group.')
hwEasyOperationGroupPatch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 4, 1, 7), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupPatch.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupPatch.setDescription('The patch file name of group.')
hwEasyOperationGroupWebfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 4, 1, 8), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupWebfile.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupWebfile.setDescription('The WEB file name of group.')
hwEasyOperationGroupLicense = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 4, 1, 9), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupLicense.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupLicense.setDescription('The license file name of group.')
hwEasyOperationGroupCustomfile1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 4, 1, 10), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupCustomfile1.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupCustomfile1.setDescription('The custom file name of group.')
hwEasyOperationGroupCustomfile2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 4, 1, 11), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupCustomfile2.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupCustomfile2.setDescription('The custom file name of group.')
hwEasyOperationGroupCustomfile3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 4, 1, 12), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupCustomfile3.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupCustomfile3.setDescription('The custom file name of group.')
hwEasyOperationGroupActivateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("reload", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupActivateMode.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupActivateMode.setDescription('The mode of activating file of group.')
hwEasyOperationGroupActivateDelayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 4, 1, 14), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupActivateDelayTime.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupActivateDelayTime.setDescription('The delay time of activating file of group.The unit is second(s)')
hwEasyOperationGroupActivateInTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 4, 1, 15), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupActivateInTime.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupActivateInTime.setDescription('The specific time of activating file of group.')
hwEasyOperationGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 4, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupRowStatus.setDescription('The RowStatus of group table.')
hwEasyOperationGroupMatchTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 5), )
if mibBuilder.loadTexts: hwEasyOperationGroupMatchTable.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupMatchTable.setDescription('The match rule of group.')
hwEasyOperationGroupMatchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 5, 1), ).setIndexNames((0, "HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupIndex"), (0, "HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupMatchIndex"))
if mibBuilder.loadTexts: hwEasyOperationGroupMatchEntry.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupMatchEntry.setDescription('The entry of match rule of group.')
hwEasyOperationGroupMatchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: hwEasyOperationGroupMatchIndex.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupMatchIndex.setDescription('The index of match rule table.')
hwEasyOperationGroupMatchMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 5, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupMatchMacAddress.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupMatchMacAddress.setDescription('The match rule of MAC address.')
hwEasyOperationGroupMatchMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 5, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupMatchMacMask.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupMatchMacMask.setDescription('The match rule of mask of MAC address.')
hwEasyOperationGroupMatchEsn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 5, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupMatchEsn.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupMatchEsn.setDescription('The match rule of ESN.')
hwEasyOperationGroupMatchModel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 5, 1, 5), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupMatchModel.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupMatchModel.setDescription('The match rule of model of device.')
hwEasyOperationGroupMatchDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 5, 1, 6), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupMatchDeviceType.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupMatchDeviceType.setDescription('The match rule of type of device.')
hwEasyOperationGroupMatchIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 5, 1, 7), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupMatchIpAddress.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupMatchIpAddress.setDescription('The match rule of IP address.')
hwEasyOperationGroupMatchIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 5, 1, 8), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupMatchIpAddressType.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupMatchIpAddressType.setDescription('The match rule of type of IP address.')
hwEasyOperationGroupMatchIpAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 5, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupMatchIpAddressMask.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupMatchIpAddressMask.setDescription('The match rule of mask of IP address.')
hwEasyOperationGroupMatchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 2, 5, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationGroupMatchRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupMatchRowStatus.setDescription('The RowStatus of match rule table.')
hwEasyOperationClient = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5))
hwEasyOperationClientNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientNumber.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientNumber.setDescription('The number of client.')
hwEasyOperationClientInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2), )
if mibBuilder.loadTexts: hwEasyOperationClientInfoTable.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoTable.setDescription('The client table.')
hwEasyOperationClientInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1), ).setIndexNames((0, "HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientIndex"))
if mibBuilder.loadTexts: hwEasyOperationClientInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoEntry.setDescription('The entry of client table.')
hwEasyOperationClientInfoClientIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientIndex.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientIndex.setDescription('The index of client table.')
hwEasyOperationClientInfoClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientMacAddress.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientMacAddress.setDescription('The MAC address of client.')
hwEasyOperationClientInfoClientEsn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientEsn.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientEsn.setDescription('The ESN of client.')
hwEasyOperationClientInfoClientHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientHostName.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientHostName.setDescription('The host name of client.')
hwEasyOperationClientInfoClientIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientIpAddress.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientIpAddress.setDescription('The IP address of client.')
hwEasyOperationClientInfoClientIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 6), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientIpAddressType.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientIpAddressType.setDescription('The IP address type of client.')
hwEasyOperationClientInfoClientModel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientModel.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientModel.setDescription('The model of client.')
hwEasyOperationClientInfoClientDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDeviceType.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDeviceType.setDescription('The device type of client.')
hwEasyOperationClientInfoClientSysSoftware = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientSysSoftware.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientSysSoftware.setDescription('The startup software file name of client.')
hwEasyOperationClientInfoClientSysSoftwareVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientSysSoftwareVer.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientSysSoftwareVer.setDescription('The startup software version of client.')
hwEasyOperationClientInfoClientSysConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientSysConfig.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientSysConfig.setDescription('The startup configuration file name of client.')
hwEasyOperationClientInfoClientSysPatch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientSysPatch.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientSysPatch.setDescription('The startup patch file name of client.')
hwEasyOperationClientInfoClientSysWebFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientSysWebFile.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientSysWebFile.setDescription('The startup WEB file name of client.')
hwEasyOperationClientInfoClientSysLicense = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientSysLicense.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientSysLicense.setDescription('The startup license file name of client.')
hwEasyOperationClientInfoClientDownloadSoftware = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 15), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadSoftware.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadSoftware.setDescription('The software file name of client in downloading status.')
hwEasyOperationClientInfoClientDownloadSoftwareVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 16), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadSoftwareVer.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadSoftwareVer.setDescription('The software version of client in downloading status.')
hwEasyOperationClientInfoClientDownloadConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 17), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadConfig.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadConfig.setDescription('The configuration file name of client in downloading status.')
hwEasyOperationClientInfoClientDownloadPatch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 18), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadPatch.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadPatch.setDescription('The patch file name of client in downloading status.')
hwEasyOperationClientInfoClientDownloadWebFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 19), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadWebFile.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadWebFile.setDescription('The WEB file name of client in downloading status.')
hwEasyOperationClientInfoClientDownloadLicense = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 20), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadLicense.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadLicense.setDescription('The license file name of client in downloading status.')
hwEasyOperationClientInfoClientDownloadCustomfile1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 21), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadCustomfile1.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadCustomfile1.setDescription('The custom file name of client in downloading status.')
hwEasyOperationClientInfoClientDownloadCustomfile2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 22), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadCustomfile2.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadCustomfile2.setDescription('The custom file name of client in downloading status.')
hwEasyOperationClientInfoClientDownloadCustomfile3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 23), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadCustomfile3.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadCustomfile3.setDescription('The custom file name of client in downloading status.')
hwEasyOperationClientInfoClientMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("running", 1), ("upgrade", 2), ("zeroTouch", 3), ("usbDownload", 4), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientMethod.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientMethod.setDescription('The method of upgrading.')
hwEasyOperationClientInfoClientPhase = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 255))).clone(namedValues=NamedValues(("initial", 1), ("requestIp", 2), ("getDownloadInfo", 3), ("downloadFile", 4), ("activateFile", 5), ("normalRunning", 6), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientPhase.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientPhase.setDescription('The downloading phase of client.')
hwEasyOperationClientInfoClientOperateState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 255))).clone(namedValues=NamedValues(("finished", 1), ("downloadSoftware", 2), ("downloadConfig", 3), ("downloadPatch", 4), ("downloadWebFile", 5), ("downloadLicense", 6), ("downloadCustomFile1", 7), ("downloadCustomFile2", 8), ("downloadCustomFile3", 9), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientOperateState.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientOperateState.setDescription('The file type in downloading.')
hwEasyOperationClientInfoClientDownloadPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadPercent.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientDownloadPercent.setDescription('The percentage of file downloading.')
hwEasyOperationClientInfoClientErrorReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientErrorReason.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientErrorReason.setDescription('The error reason in processing.')
hwEasyOperationClientInfoClientErrorDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientErrorDescr.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientErrorDescr.setDescription('The error description in processing.')
hwEasyOperationClientInfoClientBackupErrorReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientBackupErrorReason.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientBackupErrorReason.setDescription('The error reason in backup configuration.')
hwEasyOperationClientInfoClientBackupErrorDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientBackupErrorDescr.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientBackupErrorDescr.setDescription('The error description in backup configuration.')
hwEasyOperationClientInfoClientRunState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 255))).clone(namedValues=NamedValues(("initial", 1), ("normalRunning", 2), ("upgrading", 3), ("lost", 4), ("configuring", 5), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientRunState.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientRunState.setDescription('The running state of client.')
hwEasyOperationClientInfoClientCpuUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientCpuUsage.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientCpuUsage.setDescription('The cpu usage of client.')
hwEasyOperationClientInfoClientMemoryUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientMemoryUsage.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientMemoryUsage.setDescription('The memory usage of client.')
hwEasyOperationClientInfoClientRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 2, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoClientRowStatus.setDescription('The RowStatus of client table.')
hwEasyOperationClientReplaceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 3), )
if mibBuilder.loadTexts: hwEasyOperationClientReplaceTable.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientReplaceTable.setDescription('The replace client table.')
hwEasyOperationClientReplaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 3, 1), ).setIndexNames((0, "HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientReplaceClientIndex"))
if mibBuilder.loadTexts: hwEasyOperationClientReplaceEntry.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientReplaceEntry.setDescription('The entry of replace client table.')
hwEasyOperationClientReplaceClientIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: hwEasyOperationClientReplaceClientIndex.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientReplaceClientIndex.setDescription('The index of replace client table.')
hwEasyOperationClientReplaceNewMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 3, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientReplaceNewMacAddress.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientReplaceNewMacAddress.setDescription('The MAC address of new device.')
hwEasyOperationClientReplaceNewEsn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 3, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientReplaceNewEsn.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientReplaceNewEsn.setDescription('The ESN of new device.')
hwEasyOperationClientReplaceDownloadSoftware = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 3, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientReplaceDownloadSoftware.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientReplaceDownloadSoftware.setDescription('The software file name needs to be downloaded.')
hwEasyOperationClientReplaceDownloadSoftwareVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 3, 1, 5), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientReplaceDownloadSoftwareVer.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientReplaceDownloadSoftwareVer.setDescription('The software version needs to be downloaded.')
hwEasyOperationClientReplaceDownloadPatch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 3, 1, 6), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientReplaceDownloadPatch.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientReplaceDownloadPatch.setDescription('The patch file name needs to be downloaded.')
hwEasyOperationClientReplaceDownloadWebFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 3, 1, 7), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientReplaceDownloadWebFile.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientReplaceDownloadWebFile.setDescription('The WEB file name needs to be downloaded.')
hwEasyOperationClientReplaceDownloadLicense = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 3, 1, 8), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientReplaceDownloadLicense.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientReplaceDownloadLicense.setDescription('The license file name needs to be downloaded.')
hwEasyOperationClientReplaceDownloadCustomfile1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 3, 1, 9), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientReplaceDownloadCustomfile1.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientReplaceDownloadCustomfile1.setDescription('The custom file name needs to be downloaded.')
hwEasyOperationClientReplaceDownloadCustomfile2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 3, 1, 10), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientReplaceDownloadCustomfile2.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientReplaceDownloadCustomfile2.setDescription('The custom file name needs to be downloaded.')
hwEasyOperationClientReplaceDownloadCustomfile3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 3, 1, 11), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientReplaceDownloadCustomfile3.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientReplaceDownloadCustomfile3.setDescription('The custom file name needs to be downloaded.')
hwEasyOperationClientReplaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 5, 3, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEasyOperationClientReplaceRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientReplaceRowStatus.setDescription('The RowStatus of table.')
hwEasyOperationNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 6))
hwEasyOperationTrapVar = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 6, 1))
hwEasyOperationTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 6, 2))
hwEasyOperationClientAdded = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 6, 2, 1)).setObjects(("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientHostName"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientIpAddress"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientMacAddress"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientEsn"))
if mibBuilder.loadTexts: hwEasyOperationClientAdded.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientAdded.setDescription('The notification of client added.')
hwEasyOperationClientLost = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 6, 2, 2)).setObjects(("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientHostName"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientIpAddress"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientMacAddress"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientEsn"))
if mibBuilder.loadTexts: hwEasyOperationClientLost.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientLost.setDescription('The notification of client lost.')
hwEasyOperationClientJoinNotPermit = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 6, 2, 3)).setObjects(("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientHostName"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientIpAddress"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientMacAddress"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientEsn"))
if mibBuilder.loadTexts: hwEasyOperationClientJoinNotPermit.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientJoinNotPermit.setDescription('The notification of not permit client to join.')
hwEasyOperationMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7))
hwEasyOperationPowerInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 1))
hwEasyOperationDevicePowerInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 1, 1), )
if mibBuilder.loadTexts: hwEasyOperationDevicePowerInfoTable.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationDevicePowerInfoTable.setDescription('The device power information table.')
hwEasyOperationDevicePowerInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 1, 1, 1), ).setIndexNames((0, "HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationDevicePowerInfoIndex"))
if mibBuilder.loadTexts: hwEasyOperationDevicePowerInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationDevicePowerInfoEntry.setDescription('The entry of device power infomation table.')
hwEasyOperationDevicePowerInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hwEasyOperationDevicePowerInfoIndex.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationDevicePowerInfoIndex.setDescription('The index of device power table.')
hwEasyOperationDevicePowerInfoCurrentPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationDevicePowerInfoCurrentPower.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationDevicePowerInfoCurrentPower.setDescription('The current power of device.')
hwEasyOperationDevicePowerInfoGauge = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("actual", 1), ("rated", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationDevicePowerInfoGauge.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationDevicePowerInfoGauge.setDescription('The gauge of device power.')
hwEasyOperationDevicePowerInfoRatedPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationDevicePowerInfoRatedPower.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationDevicePowerInfoRatedPower.setDescription('The rated power of device.')
hwEasyOperationDevicePowerInfoPowerManageMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("userDefined", 1), ("standard", 2), ("basic", 3), ("deep", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationDevicePowerInfoPowerManageMode.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationDevicePowerInfoPowerManageMode.setDescription('The power manage mode of device.')
hwEasyOperationPortPowerInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 1, 2), )
if mibBuilder.loadTexts: hwEasyOperationPortPowerInfoTable.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationPortPowerInfoTable.setDescription('The port power information table.')
hwEasyOperationPortPowerInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 1, 2, 1), ).setIndexNames((0, "HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationPortPowerInfoDeviceIndex"), (0, "HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationPortPowerInfoPortIndex"))
if mibBuilder.loadTexts: hwEasyOperationPortPowerInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationPortPowerInfoEntry.setDescription('The entry of port power table.')
hwEasyOperationPortPowerInfoDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hwEasyOperationPortPowerInfoDeviceIndex.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationPortPowerInfoDeviceIndex.setDescription('The index of device.')
hwEasyOperationPortPowerInfoPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 1, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: hwEasyOperationPortPowerInfoPortIndex.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationPortPowerInfoPortIndex.setDescription('The index of port.')
hwEasyOperationPortPowerInfoPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 1, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationPortPowerInfoPortName.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationPortPowerInfoPortName.setDescription('The port name.')
hwEasyOperationPortPowerInfoCurrentPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationPortPowerInfoCurrentPower.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationPortPowerInfoCurrentPower.setDescription('The current power of port.')
hwEasyOperationPortPowerInfoGauge = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("actual", 1), ("presumed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEasyOperationPortPowerInfoGauge.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationPortPowerInfoGauge.setDescription('The gauge of port power.')
hwEasyOperationNetPowerHistoryInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 1, 3), )
if mibBuilder.loadTexts: hwEasyOperationNetPowerHistoryInfoTable.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationNetPowerHistoryInfoTable.setDescription('The net power history information table.')
hwEasyOperationNetPowerHistoryInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 1, 3, 1), ).setIndexNames((0, "HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationNetPowerHistoryInfoIndex"))
if mibBuilder.loadTexts: hwEasyOperationNetPowerHistoryInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationNetPowerHistoryInfoEntry.setDescription('The entry of net power history table.')
hwEasyOperationNetPowerHistoryInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hwEasyOperationNetPowerHistoryInfoIndex.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationNetPowerHistoryInfoIndex.setDescription('The index of the table.')
hwEasyOperationNetPowerHistoryInfoWholePower = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationNetPowerHistoryInfoWholePower.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationNetPowerHistoryInfoWholePower.setDescription('The total power of the whole network.')
hwEasyOperationTopologyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 3), )
if mibBuilder.loadTexts: hwEasyOperationTopologyTable.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationTopologyTable.setDescription('The topology table.')
hwEasyOperationTopologyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 3, 1), ).setIndexNames((0, "HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationTopologyHopIndex"), (0, "HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationTopologyDeviceIndex"))
if mibBuilder.loadTexts: hwEasyOperationTopologyEntry.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationTopologyEntry.setDescription('The entry of topology table.')
hwEasyOperationTopologyHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hwEasyOperationTopologyHopIndex.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationTopologyHopIndex.setDescription('The topoloy hop.')
hwEasyOperationTopologyDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 3, 1, 2), Integer32())
if mibBuilder.loadTexts: hwEasyOperationTopologyDeviceIndex.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationTopologyDeviceIndex.setDescription('The index of topology device.')
hwEasyOperationTopologyLocalMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 3, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationTopologyLocalMac.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationTopologyLocalMac.setDescription('The mac address of local topology node.')
hwEasyOperationTopologyFatherMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 3, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationTopologyFatherMac.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationTopologyFatherMac.setDescription('The mac address of father topology node.')
hwEasyOperationTopologyLocalPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 3, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationTopologyLocalPortName.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationTopologyLocalPortName.setDescription('The port name of local topology node.')
hwEasyOperationTopologyFatherPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 3, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationTopologyFatherPortName.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationTopologyFatherPortName.setDescription('The port name of father topology node.')
hwEasyOperationTopologyLocalDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationTopologyLocalDeviceId.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationTopologyLocalDeviceId.setDescription('The device id of local topology node.')
hwEasyOperationTopologyFatherDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationTopologyFatherDeviceId.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationTopologyFatherDeviceId.setDescription('The device id of father topology node.')
hwEasyOperationSavedTopologyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 4), )
if mibBuilder.loadTexts: hwEasyOperationSavedTopologyTable.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationSavedTopologyTable.setDescription('The saved topology table.')
hwEasyOperationSavedTopologyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 4, 1), ).setIndexNames((0, "HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationSavedTopologyHopIndex"), (0, "HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationSavedTopologyDeviceIndex"))
if mibBuilder.loadTexts: hwEasyOperationSavedTopologyEntry.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationSavedTopologyEntry.setDescription('The entry of saved topology table.')
hwEasyOperationSavedTopologyHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: hwEasyOperationSavedTopologyHopIndex.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationSavedTopologyHopIndex.setDescription('The index of saved topology hop.')
hwEasyOperationSavedTopologyDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 4, 1, 2), Integer32())
if mibBuilder.loadTexts: hwEasyOperationSavedTopologyDeviceIndex.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationSavedTopologyDeviceIndex.setDescription('The index of saved topology device.')
hwEasyOperationSavedTopologyLocalMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 4, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationSavedTopologyLocalMac.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationSavedTopologyLocalMac.setDescription('The mac address of saved local topology node.')
hwEasyOperationSavedTopologyFatherMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 4, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationSavedTopologyFatherMac.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationSavedTopologyFatherMac.setDescription('The mac address of saved father topology node.')
hwEasyOperationSavedTopologyLocalPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 4, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationSavedTopologyLocalPortName.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationSavedTopologyLocalPortName.setDescription('The port name of saved local topology node.')
hwEasyOperationSavedTopologyFatherPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 7, 4, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEasyOperationSavedTopologyFatherPortName.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationSavedTopologyFatherPortName.setDescription('The port name of saved father topology node.')
hwEasyOperationCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 100)).setObjects(("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGlobalObjectsGroup"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupObjectsGroup"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupTableGroup"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupMatchTableGroup"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientObjectsGroup"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoGroup"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationTopologyGroup"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationPortPowerInfoGroup"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationDevicePowerInfoGroup"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationNotificationGroup"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientReplaceGroup"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationSavedTopologyGroup"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationNetPowerHistoryInfoGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEasyOperationCompliance = hwEasyOperationCompliance.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationCompliance.setDescription('The compliance.')
hwEasyOperationGlobalObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 100, 1)).setObjects(("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationCommanderIpAddressType"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationBackupConfigMode"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationActivateInTime"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationActivateDelayTime"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationActivateMode"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationAutoClearEnable"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationServerIpAddressType"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationServerIpAddress"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationServerType"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationDefaultSysSoftwareVer"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationDefaultConfig"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationDefaultPatch"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationDefaultWebfile"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationDefaultLicense"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationDefaultCustomfile1"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationDefaultCustomfile2"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationDefaultCustomfile3"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationDefaultSysSoftware"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationBackupConfigInterval"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationCommanderUdpPort"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationServerPort"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientAgingTime"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationTopologyEnable"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationCommanderIpAddress"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationCommanderEnable"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientAutoJoinEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEasyOperationGlobalObjectsGroup = hwEasyOperationGlobalObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGlobalObjectsGroup.setDescription('The global objects group.')
hwEasyOperationGroupObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 100, 2)).setObjects(("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationTotalGroupNumber"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationBuildInGroupNumber"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationCustomGroupNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEasyOperationGroupObjectsGroup = hwEasyOperationGroupObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupObjectsGroup.setDescription('The group objects group.')
hwEasyOperationGroupTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 100, 3)).setObjects(("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupType"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupName"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupSysSoftware"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupSysSoftwareVer"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupConfig"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupPatch"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupWebfile"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupLicense"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupCustomfile1"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupCustomfile2"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupCustomfile3"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupActivateMode"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupActivateDelayTime"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupActivateInTime"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEasyOperationGroupTableGroup = hwEasyOperationGroupTableGroup.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupTableGroup.setDescription('The group table group.')
hwEasyOperationGroupMatchTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 100, 4)).setObjects(("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupMatchMacAddress"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupMatchEsn"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupMatchModel"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupMatchDeviceType"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupMatchRowStatus"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupMatchMacMask"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupMatchIpAddress"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupMatchIpAddressType"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationGroupMatchIpAddressMask"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEasyOperationGroupMatchTableGroup = hwEasyOperationGroupMatchTableGroup.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationGroupMatchTableGroup.setDescription('The match rule table objects group.')
hwEasyOperationClientObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 100, 5)).setObjects(("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEasyOperationClientObjectsGroup = hwEasyOperationClientObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientObjectsGroup.setDescription('The client objects group.')
hwEasyOperationClientInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 100, 6)).setObjects(("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientMacAddress"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientEsn"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientModel"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientDeviceType"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientSysSoftware"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientSysSoftwareVer"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientSysConfig"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientSysPatch"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientSysWebFile"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientSysLicense"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientDownloadSoftware"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientDownloadSoftwareVer"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientDownloadConfig"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientDownloadPatch"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientDownloadWebFile"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientDownloadLicense"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientDownloadCustomfile1"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientDownloadCustomfile2"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientDownloadCustomfile3"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientErrorDescr"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientIpAddress"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientRowStatus"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientHostName"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientBackupErrorDescr"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientBackupErrorReason"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientErrorReason"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientDownloadPercent"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientIpAddressType"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientMethod"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientPhase"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientOperateState"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientRunState"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientCpuUsage"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientInfoClientMemoryUsage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEasyOperationClientInfoGroup = hwEasyOperationClientInfoGroup.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientInfoGroup.setDescription('The client table group.')
hwEasyOperationClientReplaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 100, 7)).setObjects(("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientReplaceRowStatus"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientReplaceDownloadCustomfile3"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientReplaceDownloadCustomfile2"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientReplaceDownloadCustomfile1"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientReplaceDownloadLicense"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientReplaceDownloadWebFile"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientReplaceDownloadPatch"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientReplaceDownloadSoftwareVer"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientReplaceDownloadSoftware"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientReplaceNewEsn"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientReplaceNewMacAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEasyOperationClientReplaceGroup = hwEasyOperationClientReplaceGroup.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationClientReplaceGroup.setDescription('The replace client table group.')
hwEasyOperationNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 100, 8)).setObjects(("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientAdded"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationClientLost"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEasyOperationNotificationGroup = hwEasyOperationNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationNotificationGroup.setDescription('The notification objects group.')
hwEasyOperationDevicePowerInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 100, 9)).setObjects(("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationDevicePowerInfoCurrentPower"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationDevicePowerInfoGauge"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationDevicePowerInfoRatedPower"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationDevicePowerInfoPowerManageMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEasyOperationDevicePowerInfoGroup = hwEasyOperationDevicePowerInfoGroup.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationDevicePowerInfoGroup.setDescription('The device power information table group.')
hwEasyOperationPortPowerInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 100, 10)).setObjects(("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationPortPowerInfoPortName"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationPortPowerInfoCurrentPower"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationPortPowerInfoGauge"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEasyOperationPortPowerInfoGroup = hwEasyOperationPortPowerInfoGroup.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationPortPowerInfoGroup.setDescription('The port power information table group.')
hwEasyOperationTopologyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 100, 11)).setObjects(("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationTopologyLocalMac"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationTopologyFatherMac"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationTopologyLocalPortName"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationTopologyFatherPortName"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationTopologyLocalDeviceId"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationTopologyFatherDeviceId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEasyOperationTopologyGroup = hwEasyOperationTopologyGroup.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationTopologyGroup.setDescription('The topology table group.')
hwEasyOperationSavedTopologyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 100, 12)).setObjects(("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationSavedTopologyLocalMac"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationSavedTopologyFatherMac"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationSavedTopologyLocalPortName"), ("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationSavedTopologyFatherPortName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEasyOperationSavedTopologyGroup = hwEasyOperationSavedTopologyGroup.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationSavedTopologyGroup.setDescription('The saved topology table group.')
hwEasyOperationNetPowerHistoryInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 311, 100, 13)).setObjects(("HUAWEI-EASY-OPERATION-MIB", "hwEasyOperationNetPowerHistoryInfoWholePower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEasyOperationNetPowerHistoryInfoGroup = hwEasyOperationNetPowerHistoryInfoGroup.setStatus('current')
if mibBuilder.loadTexts: hwEasyOperationNetPowerHistoryInfoGroup.setDescription('The power history of whole network table group.')
mibBuilder.exportSymbols("HUAWEI-EASY-OPERATION-MIB", hwEasyOperationClientInfoClientDeviceType=hwEasyOperationClientInfoClientDeviceType, hwEasyOperationGroupCustomfile1=hwEasyOperationGroupCustomfile1, hwEasyOperationGroupMatchMacMask=hwEasyOperationGroupMatchMacMask, hwEasyOperationSavedTopologyFatherMac=hwEasyOperationSavedTopologyFatherMac, hwEasyOperationTopologyFatherMac=hwEasyOperationTopologyFatherMac, hwEasyOperationDevicePowerInfoGauge=hwEasyOperationDevicePowerInfoGauge, hwEasyOperationClientReplaceDownloadSoftware=hwEasyOperationClientReplaceDownloadSoftware, hwEasyOperationClientInfoGroup=hwEasyOperationClientInfoGroup, hwEasyOperationGroupMatchIpAddress=hwEasyOperationGroupMatchIpAddress, hwEasyOperationSavedTopologyFatherPortName=hwEasyOperationSavedTopologyFatherPortName, hwEasyOperationClientInfoClientSysWebFile=hwEasyOperationClientInfoClientSysWebFile, hwEasyOperationClientInfoClientDownloadSoftwareVer=hwEasyOperationClientInfoClientDownloadSoftwareVer, hwEasyOperationCommanderIpAddressType=hwEasyOperationCommanderIpAddressType, hwEasyOperationGroupMatchIpAddressType=hwEasyOperationGroupMatchIpAddressType, PYSNMP_MODULE_ID=hwEasyOperationMIB, hwEasyOperationClientInfoClientSysConfig=hwEasyOperationClientInfoClientSysConfig, hwEasyOperationClientInfoClientDownloadWebFile=hwEasyOperationClientInfoClientDownloadWebFile, hwEasyOperationClientInfoClientMethod=hwEasyOperationClientInfoClientMethod, hwEasyOperationClientInfoClientErrorDescr=hwEasyOperationClientInfoClientErrorDescr, hwEasyOperationDefaultWebfile=hwEasyOperationDefaultWebfile, hwEasyOperationGroupEntry=hwEasyOperationGroupEntry, hwEasyOperationSavedTopologyGroup=hwEasyOperationSavedTopologyGroup, hwEasyOperationGroupSysSoftwareVer=hwEasyOperationGroupSysSoftwareVer, hwEasyOperationCommanderEnable=hwEasyOperationCommanderEnable, hwEasyOperationGroupObjectsGroup=hwEasyOperationGroupObjectsGroup, hwEasyOperationDefaultConfig=hwEasyOperationDefaultConfig, hwEasyOperationClientReplaceDownloadLicense=hwEasyOperationClientReplaceDownloadLicense, hwEasyOperationTrapVar=hwEasyOperationTrapVar, hwEasyOperationClientInfoClientDownloadConfig=hwEasyOperationClientInfoClientDownloadConfig, hwEasyOperationClientObjectsGroup=hwEasyOperationClientObjectsGroup, hwEasyOperationNetPowerHistoryInfoGroup=hwEasyOperationNetPowerHistoryInfoGroup, hwEasyOperationSavedTopologyLocalMac=hwEasyOperationSavedTopologyLocalMac, hwEasyOperationDevicePowerInfoEntry=hwEasyOperationDevicePowerInfoEntry, hwEasyOperationClientReplaceGroup=hwEasyOperationClientReplaceGroup, hwEasyOperationClientInfoClientSysSoftwareVer=hwEasyOperationClientInfoClientSysSoftwareVer, hwEasyOperationClientReplaceDownloadSoftwareVer=hwEasyOperationClientReplaceDownloadSoftwareVer, hwEasyOperationSavedTopologyLocalPortName=hwEasyOperationSavedTopologyLocalPortName, hwEasyOperationGroup=hwEasyOperationGroup, hwEasyOperationClient=hwEasyOperationClient, hwEasyOperationNetPowerHistoryInfoTable=hwEasyOperationNetPowerHistoryInfoTable, hwEasyOperationDevicePowerInfoRatedPower=hwEasyOperationDevicePowerInfoRatedPower, hwEasyOperationClientInfoClientDownloadCustomfile2=hwEasyOperationClientInfoClientDownloadCustomfile2, hwEasyOperationClientInfoClientDownloadLicense=hwEasyOperationClientInfoClientDownloadLicense, hwEasyOperationGroupType=hwEasyOperationGroupType, hwEasyOperationGroupMatchTableGroup=hwEasyOperationGroupMatchTableGroup, hwEasyOperationGroupIndex=hwEasyOperationGroupIndex, hwEasyOperationAutoClearEnable=hwEasyOperationAutoClearEnable, hwEasyOperationActivateMode=hwEasyOperationActivateMode, hwEasyOperationSavedTopologyHopIndex=hwEasyOperationSavedTopologyHopIndex, hwEasyOperationClientInfoClientSysPatch=hwEasyOperationClientInfoClientSysPatch, hwEasyOperationDefaultCustomfile3=hwEasyOperationDefaultCustomfile3, hwEasyOperationGlobalObjectsGroup=hwEasyOperationGlobalObjectsGroup, hwEasyOperationPortPowerInfoCurrentPower=hwEasyOperationPortPowerInfoCurrentPower, hwEasyOperationGroupActivateDelayTime=hwEasyOperationGroupActivateDelayTime, hwEasyOperationCompliance=hwEasyOperationCompliance, hwEasyOperationNotificationGroup=hwEasyOperationNotificationGroup, hwEasyOperationClientInfoClientCpuUsage=hwEasyOperationClientInfoClientCpuUsage, hwEasyOperationGroupTable=hwEasyOperationGroupTable, hwEasyOperationServerType=hwEasyOperationServerType, hwEasyOperationTopologyDeviceIndex=hwEasyOperationTopologyDeviceIndex, hwEasyOperationGroupMatchMacAddress=hwEasyOperationGroupMatchMacAddress, hwEasyOperationTopologyLocalDeviceId=hwEasyOperationTopologyLocalDeviceId, hwEasyOperationGroupCustomfile3=hwEasyOperationGroupCustomfile3, hwEasyOperationDefaultPatch=hwEasyOperationDefaultPatch, hwEasyOperationClientReplaceNewMacAddress=hwEasyOperationClientReplaceNewMacAddress, hwEasyOperationClientAdded=hwEasyOperationClientAdded, hwEasyOperationClientInfoClientDownloadPercent=hwEasyOperationClientInfoClientDownloadPercent, hwEasyOperationSavedTopologyEntry=hwEasyOperationSavedTopologyEntry, hwEasyOperationClientInfoClientBackupErrorDescr=hwEasyOperationClientInfoClientBackupErrorDescr, hwEasyOperationCustomGroupNumber=hwEasyOperationCustomGroupNumber, hwEasyOperationClientInfoClientMacAddress=hwEasyOperationClientInfoClientMacAddress, hwEasyOperationTopologyEnable=hwEasyOperationTopologyEnable, hwEasyOperationDevicePowerInfoTable=hwEasyOperationDevicePowerInfoTable, hwEasyOperationServerIpAddressType=hwEasyOperationServerIpAddressType, hwEasyOperationGroupRowStatus=hwEasyOperationGroupRowStatus, hwEasyOperationGroupMatchDeviceType=hwEasyOperationGroupMatchDeviceType, hwEasyOperationClientInfoClientIndex=hwEasyOperationClientInfoClientIndex, hwEasyOperationDefaultSysSoftware=hwEasyOperationDefaultSysSoftware, hwEasyOperationClientInfoClientHostName=hwEasyOperationClientInfoClientHostName, hwEasyOperationGroupLicense=hwEasyOperationGroupLicense, hwEasyOperationGlobalObjects=hwEasyOperationGlobalObjects, hwEasyOperationTopologyTable=hwEasyOperationTopologyTable, hwEasyOperationGroupActivateMode=hwEasyOperationGroupActivateMode, hwEasyOperationClientInfoClientIpAddressType=hwEasyOperationClientInfoClientIpAddressType, hwEasyOperationBackupConfigMode=hwEasyOperationBackupConfigMode, hwEasyOperationDevicePowerInfoPowerManageMode=hwEasyOperationDevicePowerInfoPowerManageMode, hwEasyOperationClientInfoClientIpAddress=hwEasyOperationClientInfoClientIpAddress, hwEasyOperationClientReplaceDownloadCustomfile3=hwEasyOperationClientReplaceDownloadCustomfile3, hwEasyOperationPortPowerInfoDeviceIndex=hwEasyOperationPortPowerInfoDeviceIndex, hwEasyOperationPortPowerInfoTable=hwEasyOperationPortPowerInfoTable, hwEasyOperationClientInfoClientPhase=hwEasyOperationClientInfoClientPhase, hwEasyOperationTopologyFatherPortName=hwEasyOperationTopologyFatherPortName, hwEasyOperationTopologyLocalPortName=hwEasyOperationTopologyLocalPortName, hwEasyOperationSavedTopologyDeviceIndex=hwEasyOperationSavedTopologyDeviceIndex, hwEasyOperationServerPort=hwEasyOperationServerPort, hwEasyOperationDevicePowerInfoCurrentPower=hwEasyOperationDevicePowerInfoCurrentPower, hwEasyOperationGroupMatchModel=hwEasyOperationGroupMatchModel, hwEasyOperationClientInfoClientRowStatus=hwEasyOperationClientInfoClientRowStatus, hwEasyOperationCommanderUdpPort=hwEasyOperationCommanderUdpPort, hwEasyOperationTotalGroupNumber=hwEasyOperationTotalGroupNumber, hwEasyOperationClientInfoClientDownloadSoftware=hwEasyOperationClientInfoClientDownloadSoftware, hwEasyOperationDevicePowerInfoIndex=hwEasyOperationDevicePowerInfoIndex, hwEasyOperationClientReplaceClientIndex=hwEasyOperationClientReplaceClientIndex, hwEasyOperationClientInfoClientDownloadPatch=hwEasyOperationClientInfoClientDownloadPatch, hwEasyOperationGroupConfig=hwEasyOperationGroupConfig, hwEasyOperationPowerInfo=hwEasyOperationPowerInfo, hwEasyOperationGroupActivateInTime=hwEasyOperationGroupActivateInTime, hwEasyOperationMonitor=hwEasyOperationMonitor, hwEasyOperationClientAutoJoinEnable=hwEasyOperationClientAutoJoinEnable, hwEasyOperationNotification=hwEasyOperationNotification, hwEasyOperationClientReplaceEntry=hwEasyOperationClientReplaceEntry, hwEasyOperationTopologyHopIndex=hwEasyOperationTopologyHopIndex, hwEasyOperationClientInfoClientEsn=hwEasyOperationClientInfoClientEsn, hwEasyOperationClientInfoClientMemoryUsage=hwEasyOperationClientInfoClientMemoryUsage, hwEasyOperationBuildInGroupNumber=hwEasyOperationBuildInGroupNumber, hwEasyOperationClientInfoEntry=hwEasyOperationClientInfoEntry, hwEasyOperationNetPowerHistoryInfoIndex=hwEasyOperationNetPowerHistoryInfoIndex, hwEasyOperationClientJoinNotPermit=hwEasyOperationClientJoinNotPermit, hwEasyOperationGroupMatchRowStatus=hwEasyOperationGroupMatchRowStatus, hwEasyOperationTrap=hwEasyOperationTrap, hwEasyOperationNetPowerHistoryInfoEntry=hwEasyOperationNetPowerHistoryInfoEntry, hwEasyOperationTopologyFatherDeviceId=hwEasyOperationTopologyFatherDeviceId, hwEasyOperationGroupPatch=hwEasyOperationGroupPatch, hwEasyOperationDefaultCustomfile1=hwEasyOperationDefaultCustomfile1, hwEasyOperationDefaultLicense=hwEasyOperationDefaultLicense, hwEasyOperationGroupCustomfile2=hwEasyOperationGroupCustomfile2, hwEasyOperationNetPowerHistoryInfoWholePower=hwEasyOperationNetPowerHistoryInfoWholePower, hwEasyOperationClientReplaceDownloadCustomfile2=hwEasyOperationClientReplaceDownloadCustomfile2, hwEasyOperationGroupMatchIndex=hwEasyOperationGroupMatchIndex, hwEasyOperationClientAgingTime=hwEasyOperationClientAgingTime, hwEasyOperationClientReplaceDownloadPatch=hwEasyOperationClientReplaceDownloadPatch, hwEasyOperationServerIpAddress=hwEasyOperationServerIpAddress, hwEasyOperationClientLost=hwEasyOperationClientLost, hwEasyOperationClientReplaceRowStatus=hwEasyOperationClientReplaceRowStatus, hwEasyOperationDevicePowerInfoGroup=hwEasyOperationDevicePowerInfoGroup, hwEasyOperationClientInfoClientDownloadCustomfile1=hwEasyOperationClientInfoClientDownloadCustomfile1, hwEasyOperationCommanderIpAddress=hwEasyOperationCommanderIpAddress, hwEasyOperationTopologyGroup=hwEasyOperationTopologyGroup, hwEasyOperationClientInfoClientBackupErrorReason=hwEasyOperationClientInfoClientBackupErrorReason, hwEasyOperationClientReplaceNewEsn=hwEasyOperationClientReplaceNewEsn, hwEasyOperationActivateDelayTime=hwEasyOperationActivateDelayTime, hwEasyOperationPortPowerInfoPortName=hwEasyOperationPortPowerInfoPortName, hwEasyOperationActivateInTime=hwEasyOperationActivateInTime, hwEasyOperationMIB=hwEasyOperationMIB, hwEasyOperationClientInfoClientOperateState=hwEasyOperationClientInfoClientOperateState, hwEasyOperationClientReplaceDownloadWebFile=hwEasyOperationClientReplaceDownloadWebFile, hwEasyOperationGroupMatchIpAddressMask=hwEasyOperationGroupMatchIpAddressMask, hwEasyOperationGroupWebfile=hwEasyOperationGroupWebfile, hwEasyOperationPortPowerInfoPortIndex=hwEasyOperationPortPowerInfoPortIndex, hwEasyOperationClientInfoClientSysLicense=hwEasyOperationClientInfoClientSysLicense, hwEasyOperationGroupSysSoftware=hwEasyOperationGroupSysSoftware, hwEasyOperationClientInfoClientModel=hwEasyOperationClientInfoClientModel, hwEasyOperationGroupMatchTable=hwEasyOperationGroupMatchTable, hwEasyOperationGroupMatchEntry=hwEasyOperationGroupMatchEntry, hwEasyOperationGroupMatchEsn=hwEasyOperationGroupMatchEsn, hwEasyOperationTopologyLocalMac=hwEasyOperationTopologyLocalMac, hwEasyOperationGroupName=hwEasyOperationGroupName, hwEasyOperationBackupConfigInterval=hwEasyOperationBackupConfigInterval, hwEasyOperationPortPowerInfoEntry=hwEasyOperationPortPowerInfoEntry, hwEasyOperationDefaultCustomfile2=hwEasyOperationDefaultCustomfile2, hwEasyOperationClientInfoClientSysSoftware=hwEasyOperationClientInfoClientSysSoftware, hwEasyOperationClientInfoClientDownloadCustomfile3=hwEasyOperationClientInfoClientDownloadCustomfile3, hwEasyOperationClientInfoClientRunState=hwEasyOperationClientInfoClientRunState, hwEasyOperationClientInfoClientErrorReason=hwEasyOperationClientInfoClientErrorReason, hwEasyOperationClientReplaceDownloadCustomfile1=hwEasyOperationClientReplaceDownloadCustomfile1, hwEasyOperationSavedTopologyTable=hwEasyOperationSavedTopologyTable, hwEasyOperationGroupTableGroup=hwEasyOperationGroupTableGroup, hwEasyOperationClientReplaceTable=hwEasyOperationClientReplaceTable, hwEasyOperationTopologyEntry=hwEasyOperationTopologyEntry, hwEasyOperationPortPowerInfoGauge=hwEasyOperationPortPowerInfoGauge, hwEasyOperationDefaultSysSoftwareVer=hwEasyOperationDefaultSysSoftwareVer, hwEasyOperationClientInfoTable=hwEasyOperationClientInfoTable, hwEasyOperationClientNumber=hwEasyOperationClientNumber, hwEasyOperationPortPowerInfoGroup=hwEasyOperationPortPowerInfoGroup)
