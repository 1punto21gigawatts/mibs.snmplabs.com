#
# PySNMP MIB module SONUS-TRANSPORT-RESOURCES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONUS-TRANSPORT-RESOURCES-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:10:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, ModuleIdentity, IpAddress, Bits, TimeTicks, Counter32, NotificationType, Counter64, Unsigned32, Gauge32, ObjectIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ModuleIdentity", "IpAddress", "Bits", "TimeTicks", "Counter32", "NotificationType", "Counter64", "Unsigned32", "Gauge32", "ObjectIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
sonusResourcesMIBs, = mibBuilder.importSymbols("SONUS-SMI", "sonusResourcesMIBs")
sonusTransportResourcesMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2879, 2, 2, 4))
if mibBuilder.loadTexts: sonusTransportResourcesMIB.setLastUpdated('200102030000Z')
if mibBuilder.loadTexts: sonusTransportResourcesMIB.setOrganization('Sonus Networks, Inc.')
if mibBuilder.loadTexts: sonusTransportResourcesMIB.setContactInfo(' Customer Support Sonus Networks, Inc, 5 carlisle Road Westford, MA 01886 USA Tel: 978-692-8999 Fax: 978-392-9118 E-mail: cs.snmp@sonusnet.com')
if mibBuilder.loadTexts: sonusTransportResourcesMIB.setDescription('The MIB Module for Transport Reources Management.')
sonusTransportResourcesMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 4, 1))
sonusNifStatTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 4, 1, 1), )
if mibBuilder.loadTexts: sonusNifStatTable.setStatus('current')
if mibBuilder.loadTexts: sonusNifStatTable.setDescription('This table contains status information about each NIF')
sonusNifStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 4, 1, 1, 1), ).setIndexNames((0, "SONUS-TRANSPORT-RESOURCES-MIB", "sonusNifStatNifIndex"))
if mibBuilder.loadTexts: sonusNifStatEntry.setStatus('current')
if mibBuilder.loadTexts: sonusNifStatEntry.setDescription('This table describes the NIF status')
sonusNifStatNifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 4, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNifStatNifIndex.setStatus('current')
if mibBuilder.loadTexts: sonusNifStatNifIndex.setDescription("Nif's ifIndex that identifies the NIF")
sonusNifStatState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("outOfService", 1), ("inService", 2), ("dryUp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNifStatState.setStatus('current')
if mibBuilder.loadTexts: sonusNifStatState.setDescription('The state of this NIF')
sonusNifStatCallNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 4, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNifStatCallNum.setStatus('current')
if mibBuilder.loadTexts: sonusNifStatCallNum.setDescription('The number of calls on this NIF')
sonusNifStatResNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 4, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNifStatResNum.setStatus('current')
if mibBuilder.loadTexts: sonusNifStatResNum.setDescription('The number of xres allocated on this NIF')
sonusNifStatSpeedCur = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 4, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNifStatSpeedCur.setStatus('current')
if mibBuilder.loadTexts: sonusNifStatSpeedCur.setDescription('The current speed(bandwidth) allocated on this NIF')
sonusNifStatSpeedMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 4, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNifStatSpeedMax.setStatus('current')
if mibBuilder.loadTexts: sonusNifStatSpeedMax.setDescription('The maximum speed allowed on this NIF')
sonusNifStatSpeedActual = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 4, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNifStatSpeedActual.setStatus('current')
if mibBuilder.loadTexts: sonusNifStatSpeedActual.setDescription('The actual speed(bandwidth) on this NIF')
sonusNifStatSpeedDeviation = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 4, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNifStatSpeedDeviation.setStatus('current')
if mibBuilder.loadTexts: sonusNifStatSpeedDeviation.setDescription('The actual speed(bandwidth) deviation on this NIF')
sonusPnsAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 4, 1, 2), )
if mibBuilder.loadTexts: sonusPnsAdmnTable.setStatus('current')
if mibBuilder.loadTexts: sonusPnsAdmnTable.setDescription('This table contains admin information about each PNS')
sonusPnsAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 4, 1, 2, 1), ).setIndexNames((0, "SONUS-TRANSPORT-RESOURCES-MIB", "sonusPnsAdmnShelf"), (0, "SONUS-TRANSPORT-RESOURCES-MIB", "sonusPnsAdmnSlot"))
if mibBuilder.loadTexts: sonusPnsAdmnEntry.setStatus('current')
if mibBuilder.loadTexts: sonusPnsAdmnEntry.setDescription('This table describes the PNS admin objects')
sonusPnsAdmnShelf = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 4, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPnsAdmnShelf.setStatus('current')
if mibBuilder.loadTexts: sonusPnsAdmnShelf.setDescription('A 32-bit integer identifying the shelf of the PNS')
sonusPnsAdmnSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 4, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPnsAdmnSlot.setStatus('current')
if mibBuilder.loadTexts: sonusPnsAdmnSlot.setDescription('A 32-bit integer identifying the slot of the PNS')
sonusPnsAdmnReservedUdpPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 4, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPnsAdmnReservedUdpPorts.setStatus('current')
if mibBuilder.loadTexts: sonusPnsAdmnReservedUdpPorts.setDescription('The number UDP ports on this PNS are reserved for IPDC or MGSG usage')
sonusPnsAdmnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 4, 1, 2, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPnsAdmnRowStatus.setStatus('current')
if mibBuilder.loadTexts: sonusPnsAdmnRowStatus.setDescription('')
mibBuilder.exportSymbols("SONUS-TRANSPORT-RESOURCES-MIB", sonusNifStatResNum=sonusNifStatResNum, sonusNifStatSpeedMax=sonusNifStatSpeedMax, sonusPnsAdmnEntry=sonusPnsAdmnEntry, sonusNifStatEntry=sonusNifStatEntry, sonusNifStatSpeedDeviation=sonusNifStatSpeedDeviation, sonusTransportResourcesMIB=sonusTransportResourcesMIB, sonusNifStatState=sonusNifStatState, sonusNifStatSpeedActual=sonusNifStatSpeedActual, sonusPnsAdmnRowStatus=sonusPnsAdmnRowStatus, sonusPnsAdmnReservedUdpPorts=sonusPnsAdmnReservedUdpPorts, sonusPnsAdmnSlot=sonusPnsAdmnSlot, sonusTransportResourcesMIBObjects=sonusTransportResourcesMIBObjects, sonusNifStatTable=sonusNifStatTable, PYSNMP_MODULE_ID=sonusTransportResourcesMIB, sonusPnsAdmnShelf=sonusPnsAdmnShelf, sonusNifStatNifIndex=sonusNifStatNifIndex, sonusPnsAdmnTable=sonusPnsAdmnTable, sonusNifStatCallNum=sonusNifStatCallNum, sonusNifStatSpeedCur=sonusNifStatSpeedCur)
