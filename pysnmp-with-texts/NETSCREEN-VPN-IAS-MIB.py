#
# PySNMP MIB module NETSCREEN-VPN-IAS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-VPN-IAS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:20:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
netscreenVpn, = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenVpn")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Integer32, NotificationType, IpAddress, Unsigned32, Bits, ObjectIdentity, iso, Counter64, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "NotificationType", "IpAddress", "Unsigned32", "Bits", "ObjectIdentity", "iso", "Counter64", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nsVpnIas = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 4, 11))
nsVpnIasTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 4, 11, 1), )
if mibBuilder.loadTexts: nsVpnIasTable.setStatus('mandatory')
if mibBuilder.loadTexts: nsVpnIasTable.setDescription('VPN IAS entry for ipv6 and ipv4.')
nsVpnIasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 4, 11, 1, 1), ).setIndexNames((0, "NETSCREEN-VPN-IAS-MIB", "nsVpnIasType"))
if mibBuilder.loadTexts: nsVpnIasEntry.setStatus('mandatory')
if mibBuilder.loadTexts: nsVpnIasEntry.setDescription('VPN IAS entry')
nsVpnIasType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIasType.setStatus('mandatory')
if mibBuilder.loadTexts: nsVpnIasType.setDescription('The IAS type (ipv4(1) or ipv6(2))')
nsVpnIasTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 11, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIasTotal.setStatus('mandatory')
if mibBuilder.loadTexts: nsVpnIasTotal.setDescription('The total count of IAS')
nsVpnIasSessTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 4, 11, 2), )
if mibBuilder.loadTexts: nsVpnIasSessTable.setStatus('mandatory')
if mibBuilder.loadTexts: nsVpnIasSessTable.setDescription('VPN IAS session entry.')
nsVpnIasSessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 4, 11, 2, 1), ).setIndexNames((0, "NETSCREEN-VPN-IAS-MIB", "nsVpnIasSessIndex"))
if mibBuilder.loadTexts: nsVpnIasSessEntry.setStatus('mandatory')
if mibBuilder.loadTexts: nsVpnIasSessEntry.setDescription('VPN IAS session entry')
nsVpnIasSessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 11, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIasSessIndex.setStatus('mandatory')
if mibBuilder.loadTexts: nsVpnIasSessIndex.setDescription('The internal index for this entry')
nsVpnIasSessXauthUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 11, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIasSessXauthUserName.setStatus('mandatory')
if mibBuilder.loadTexts: nsVpnIasSessXauthUserName.setDescription('Active IAS session Xauth-ID username')
mibBuilder.exportSymbols("NETSCREEN-VPN-IAS-MIB", nsVpnIasSessTable=nsVpnIasSessTable, nsVpnIasTotal=nsVpnIasTotal, nsVpnIasSessEntry=nsVpnIasSessEntry, nsVpnIasEntry=nsVpnIasEntry, nsVpnIasType=nsVpnIasType, nsVpnIasSessXauthUserName=nsVpnIasSessXauthUserName, nsVpnIas=nsVpnIas, nsVpnIasSessIndex=nsVpnIasSessIndex, nsVpnIasTable=nsVpnIasTable)
