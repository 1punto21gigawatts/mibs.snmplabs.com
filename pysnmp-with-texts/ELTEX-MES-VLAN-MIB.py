#
# PySNMP MIB module ELTEX-MES-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-MES-VLAN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:02:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
eltMes, = mibBuilder.importSymbols("ELTEX-MES", "eltMes")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddressType, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType")
VlanIndex, dot1qVlanIndex, PortList = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex", "dot1qVlanIndex", "PortList")
rnd, = mibBuilder.importSymbols("RADLAN-MIB", "rnd")
vlanMulticastTvEntry, = mibBuilder.importSymbols("RADLAN-vlan-MIB", "vlanMulticastTvEntry")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, MibIdentifier, IpAddress, Counter32, Gauge32, iso, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, TimeTicks, ObjectIdentity, ModuleIdentity, Bits, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "IpAddress", "Counter32", "Gauge32", "iso", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "TimeTicks", "ObjectIdentity", "ModuleIdentity", "Bits", "NotificationType")
TruthValue, RowStatus, MacAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "MacAddress", "DisplayString", "TextualConvention")
eltMesVlan = ModuleIdentity((1, 3, 6, 1, 4, 1, 35265, 1, 23, 5))
eltMesVlan.setRevisions(('2013-11-18 00:00', '2013-11-18 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: eltMesVlan.setRevisionsDescriptions(('Editorial changes to support new MIB compilers.', 'Initial version of this MIB.',))
if mibBuilder.loadTexts: eltMesVlan.setLastUpdated('201311180000Z')
if mibBuilder.loadTexts: eltMesVlan.setOrganization('Eltex Ltd.')
if mibBuilder.loadTexts: eltMesVlan.setContactInfo('www.eltex.nsk.ru')
if mibBuilder.loadTexts: eltMesVlan.setDescription('The private MIB module definition for IP Multicast support in Eltex devices.')
class EltVlanMode(TextualConvention, Integer32):
    reference = 'TR-101'
    description = 'Indicates global VLAN QinQ operation mode. '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("basic", 1), ("tr101", 2))

eltVlanMulticastTvTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 5, 1), )
if mibBuilder.loadTexts: eltVlanMulticastTvTable.setStatus('current')
if mibBuilder.loadTexts: eltVlanMulticastTvTable.setDescription('Multicast vlan used for this port')
eltVlanMulticastTvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 5, 1, 1), )
vlanMulticastTvEntry.registerAugmentions(("ELTEX-MES-VLAN-MIB", "eltVlanMulticastTvEntry"))
eltVlanMulticastTvEntry.setIndexNames(*vlanMulticastTvEntry.getIndexNames())
if mibBuilder.loadTexts: eltVlanMulticastTvEntry.setStatus('current')
if mibBuilder.loadTexts: eltVlanMulticastTvEntry.setDescription('Entry of multicast tag')
eltVlanMulticastTvVIDIsTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 5, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltVlanMulticastTvVIDIsTagged.setStatus('current')
if mibBuilder.loadTexts: eltVlanMulticastTvVIDIsTagged.setDescription('Specify whether the port is tagged in TV vlan or not.')
eltVlanMode = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 5, 2), EltVlanMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltVlanMode.setStatus('current')
if mibBuilder.loadTexts: eltVlanMode.setDescription('Global VLAN QinQ operation mode')
eltdot1qPortVlanCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 5, 3), )
if mibBuilder.loadTexts: eltdot1qPortVlanCurrentTable.setStatus('current')
if mibBuilder.loadTexts: eltdot1qPortVlanCurrentTable.setDescription('A table containing current vlan port membership information.')
eltdot1qPortVlanCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 5, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: eltdot1qPortVlanCurrentEntry.setStatus('current')
if mibBuilder.loadTexts: eltdot1qPortVlanCurrentEntry.setDescription('Current vlan membership information per port')
eltdot1qPortVlanCurrentEgressList1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 5, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1qPortVlanCurrentEgressList1to1024.setStatus('current')
if mibBuilder.loadTexts: eltdot1qPortVlanCurrentEgressList1to1024.setDescription('The port egress vlan current list.')
eltdot1qPortVlanCurrentEgressList1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 5, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1qPortVlanCurrentEgressList1025to2048.setStatus('current')
if mibBuilder.loadTexts: eltdot1qPortVlanCurrentEgressList1025to2048.setDescription('The port egress vlan current list.')
eltdot1qPortVlanCurrentEgressList2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 5, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1qPortVlanCurrentEgressList2049to3072.setStatus('current')
if mibBuilder.loadTexts: eltdot1qPortVlanCurrentEgressList2049to3072.setDescription('The port egress vlan current list.')
eltdot1qPortVlanCurrentEgressList3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 5, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltdot1qPortVlanCurrentEgressList3073to4094.setStatus('current')
if mibBuilder.loadTexts: eltdot1qPortVlanCurrentEgressList3073to4094.setDescription('The port egress vlan current list.')
mibBuilder.exportSymbols("ELTEX-MES-VLAN-MIB", eltVlanMulticastTvEntry=eltVlanMulticastTvEntry, EltVlanMode=EltVlanMode, eltdot1qPortVlanCurrentTable=eltdot1qPortVlanCurrentTable, PYSNMP_MODULE_ID=eltMesVlan, eltVlanMulticastTvTable=eltVlanMulticastTvTable, eltdot1qPortVlanCurrentEntry=eltdot1qPortVlanCurrentEntry, eltVlanMulticastTvVIDIsTagged=eltVlanMulticastTvVIDIsTagged, eltdot1qPortVlanCurrentEgressList1to1024=eltdot1qPortVlanCurrentEgressList1to1024, eltdot1qPortVlanCurrentEgressList2049to3072=eltdot1qPortVlanCurrentEgressList2049to3072, eltdot1qPortVlanCurrentEgressList3073to4094=eltdot1qPortVlanCurrentEgressList3073to4094, eltdot1qPortVlanCurrentEgressList1025to2048=eltdot1qPortVlanCurrentEgressList1025to2048, eltMesVlan=eltMesVlan, eltVlanMode=eltVlanMode)
