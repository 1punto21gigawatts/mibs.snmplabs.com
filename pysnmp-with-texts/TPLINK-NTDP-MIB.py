#
# PySNMP MIB module TPLINK-NTDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-NTDP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:25:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, Counter64, ObjectIdentity, Unsigned32, iso, Integer32, NotificationType, MibIdentifier, Gauge32, TimeTicks, IpAddress, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "Counter64", "ObjectIdentity", "Unsigned32", "iso", "Integer32", "NotificationType", "MibIdentifier", "Gauge32", "TimeTicks", "IpAddress", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ntdpManage, = mibBuilder.importSymbols("TPLINK-CLUSTER-MIB", "ntdpManage")
ntdpGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 1))
ntdpStatus = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntdpStatus.setStatus('current')
if mibBuilder.loadTexts: ntdpStatus.setDescription('This object indicates the ntdp status of the port.')
ntdpIntervalTime = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntdpIntervalTime.setStatus('current')
if mibBuilder.loadTexts: ntdpIntervalTime.setDescription('This object indicates the interval time of the switch in miniute to periodical send out ntdp packet. The minimum valus is 1, maximum value is 60. ')
ntdpHop = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntdpHop.setStatus('current')
if mibBuilder.loadTexts: ntdpHop.setDescription('This object indicates the hop count the switch topology collects.')
ntdpHopDelay = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntdpHopDelay.setStatus('current')
if mibBuilder.loadTexts: ntdpHopDelay.setDescription('This object indicates the time between the switch receiving NTDP request packets and the switch forwarding NTDP request packets for the first time.')
ntpdPortDelay = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpdPortDelay.setStatus('current')
if mibBuilder.loadTexts: ntpdPortDelay.setDescription('This object indicates the time between the port forwarding NTDP request packets and its adjacent port forwarding NTDP request packets over.')
ntdpPortTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 2), )
if mibBuilder.loadTexts: ntdpPortTable.setStatus('current')
if mibBuilder.loadTexts: ntdpPortTable.setDescription('A table that contains ntdp information of every port.')
ntdpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 2, 1), ).setIndexNames((0, "TPLINK-NTDP-MIB", "ifIndex"))
if mibBuilder.loadTexts: ntdpPortEntry.setStatus('current')
if mibBuilder.loadTexts: ntdpPortEntry.setDescription('A list of ntdp information for every port of the device.')
ntdpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntdpPortStatus.setStatus('current')
if mibBuilder.loadTexts: ntdpPortStatus.setDescription('This object indicates the ntdp status of the port.')
ntdpCollectTopo = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("commit", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntdpCollectTopo.setStatus('current')
if mibBuilder.loadTexts: ntdpCollectTopo.setDescription('This object use to collect the topology.')
mibBuilder.exportSymbols("TPLINK-NTDP-MIB", ntdpGlobalConfig=ntdpGlobalConfig, ntpdPortDelay=ntpdPortDelay, ntdpPortTable=ntdpPortTable, ntdpPortStatus=ntdpPortStatus, ntdpHopDelay=ntdpHopDelay, ntdpIntervalTime=ntdpIntervalTime, ntdpPortEntry=ntdpPortEntry, ntdpHop=ntdpHop, ntdpStatus=ntdpStatus, ntdpCollectTopo=ntdpCollectTopo)
