#
# PySNMP MIB module PDN-PPP-BRIDGE-NCP-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-PPP-BRIDGE-NCP-EXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:39:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
pdn_interfaces, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdn-interfaces")
SwitchState, PdnPPPState = mibBuilder.importSymbols("PDN-TC", "SwitchState", "PdnPPPState")
pppBridgeMediaConfigEntry, pppBridgeEntry = mibBuilder.importSymbols("PPP-BRIDGE-NCP-MIB", "pppBridgeMediaConfigEntry", "pppBridgeEntry")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
iso, MibIdentifier, ModuleIdentity, Counter64, IpAddress, TimeTicks, NotificationType, Counter32, ObjectIdentity, Gauge32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibIdentifier", "ModuleIdentity", "Counter64", "IpAddress", "TimeTicks", "NotificationType", "Counter32", "ObjectIdentity", "Gauge32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
pdnPppBridgeExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29))
pdnPppBridgeExtMIB.setRevisions(('2004-09-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: pdnPppBridgeExtMIB.setRevisionsDescriptions(('Initial release.',))
if mibBuilder.loadTexts: pdnPppBridgeExtMIB.setLastUpdated('200409100000Z')
if mibBuilder.loadTexts: pdnPppBridgeExtMIB.setOrganization('Paradyne Networks MIB Working Group Other information about group editing the MIB')
if mibBuilder.loadTexts: pdnPppBridgeExtMIB.setContactInfo('Paradyne Networks, Inc. 8545 126th Avenue North Largo, FL 33733 www.paradyne.com General Comments to: mibwg_team@paradyne.com Editor Clay Sikes')
if mibBuilder.loadTexts: pdnPppBridgeExtMIB.setDescription("The MIB module provides enterprise-specific extensions to the PPP-BRIDGE-MIB for managing the Bridge Control Protocol (BCP) on subnetwork interfaces that use the family of point-to-Point Protocols (PPP). BCP is a member of the Network Control Protocol suite of point-to-point protocols. The following documents should be referenced with respect to this MIB module: [RFC 1474] Kastenholz, F., `The Definitions of Managed Objects for the Bridge Network Control Protocol of the Point-to-Point Protocol', June 1993. [RFC 1661] Simpson, W., `The Point-to-Point Protocol', July 1994. [RFC 3518] Higashiyama, M., Baker, F., and Liao, T., `Point-to-Point Protocol (PPP) Bridging Control Protocol (BCP)', April 2003.")
pdnPppBridgeExtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 0))
pdnPppBridgeExtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 1))
pdnPppBridgeExtAFNs = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 2))
pdnPppBridgeExtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 3))
pdnPppBridgeExtTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 1, 1), )
if mibBuilder.loadTexts: pdnPppBridgeExtTable.setStatus('current')
if mibBuilder.loadTexts: pdnPppBridgeExtTable.setDescription('An entry in the PPP Bridge Table, pppBridgeTable. The PPP Bridge Table contains parameters and statistics for the local PPP entity.')
pdnPppBridgeExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 1, 1, 1), )
pppBridgeEntry.registerAugmentions(("PDN-PPP-BRIDGE-NCP-EXT-MIB", "pdnPppBridgeExtEntry"))
pdnPppBridgeExtEntry.setIndexNames(*pppBridgeEntry.getIndexNames())
if mibBuilder.loadTexts: pdnPppBridgeExtEntry.setStatus('current')
if mibBuilder.loadTexts: pdnPppBridgeExtEntry.setDescription('An entry in the Multilink PPP Configuration Table.')
pdnPppBridgeBcpLinkStatusCurrState = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 1, 1, 1, 1), PdnPPPState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPppBridgeBcpLinkStatusCurrState.setReference("RFC 1661, Section 4.2, `State Transition Table'.")
if mibBuilder.loadTexts: pdnPppBridgeBcpLinkStatusCurrState.setStatus('current')
if mibBuilder.loadTexts: pdnPppBridgeBcpLinkStatusCurrState.setDescription('The current state of the BCP State Machine.')
pdnPppBridgeLocalToRemote802Tagged = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 1, 1, 1, 2), SwitchState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPppBridgeLocalToRemote802Tagged.setReference("RFC 3518, Section 5.7, `IEEE-802-Tagged-Frame'.")
if mibBuilder.loadTexts: pdnPppBridgeLocalToRemote802Tagged.setStatus('current')
if mibBuilder.loadTexts: pdnPppBridgeLocalToRemote802Tagged.setDescription('Indicates whether or not the local PPP entity is transmitting IEEE 802 tagged frames. An enabled(1) indicates that frames will be transmitted 802 tagged. A disabled(2) indicate that frames will not be transmitted 802 tagged.')
pdnPppBridgeRemoteToLocal802Tagged = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 1, 1, 1, 3), SwitchState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPppBridgeRemoteToLocal802Tagged.setReference("RFC 3518, Section 5.7, `IEEE-802-Tagged-Frame'.")
if mibBuilder.loadTexts: pdnPppBridgeRemoteToLocal802Tagged.setStatus('current')
if mibBuilder.loadTexts: pdnPppBridgeRemoteToLocal802Tagged.setDescription('Indicates whether or not the remote PPP entity is transmitting IEEE 802 tagged frames. An enabled(1) indicates that frames will be transmitted 802 tagged. A disabled(2) indicate that frames will not be transmitted 802 tagged.')
pdnPppBridgeMediaConfigExtTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 1, 2), )
if mibBuilder.loadTexts: pdnPppBridgeMediaConfigExtTable.setStatus('current')
if mibBuilder.loadTexts: pdnPppBridgeMediaConfigExtTable.setDescription('An entry in the PPP Bridge Media Configuration Table, pppBridgeTable. The PPP Bridge Media Configuration Table contains objects relative to MAC media types.')
pdnPppBridgeMediaConfigExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 1, 2, 1), )
pppBridgeMediaConfigEntry.registerAugmentions(("PDN-PPP-BRIDGE-NCP-EXT-MIB", "pdnPppBridgeMediaConfigExtEntry"))
pdnPppBridgeMediaConfigExtEntry.setIndexNames(*pppBridgeMediaConfigEntry.getIndexNames())
if mibBuilder.loadTexts: pdnPppBridgeMediaConfigExtEntry.setStatus('current')
if mibBuilder.loadTexts: pdnPppBridgeMediaConfigExtEntry.setDescription('An entry in the Multilink PPP Media Configuration Table.')
pdnPppBridgeMediaIeee802Tagged = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 1, 2, 1, 1), SwitchState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPppBridgeMediaIeee802Tagged.setReference("RFC 3518, Section 5.7, `IEEE-802-Tagged-Frame'.")
if mibBuilder.loadTexts: pdnPppBridgeMediaIeee802Tagged.setStatus('current')
if mibBuilder.loadTexts: pdnPppBridgeMediaIeee802Tagged.setDescription('Configures whether or not the local PPP entity will attempt to negotiate the IEEE-802-Tagged Frame option. An enabled(1) will result in the option being supported. A disabled(2) will result in the options not being supported.')
pdnPppBridgeExtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 3, 1))
pdnPppBridgeExtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 3, 2))
pdnPppBridgeExtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 3, 1, 1)).setObjects(("PDN-PPP-BRIDGE-NCP-EXT-MIB", "pdnPppBridgeExtStateMachineGroup"), ("PDN-PPP-BRIDGE-NCP-EXT-MIB", "pdnPppBridgeExt802TaggedGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnPppBridgeExtCompliance = pdnPppBridgeExtCompliance.setStatus('current')
if mibBuilder.loadTexts: pdnPppBridgeExtCompliance.setDescription('The compliance statement for network elements implementing PPP Bridging Control Protocol.')
pdnPppBridgeExtObjGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 3, 2, 1))
pdnPppBridgeExtAfnGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 3, 2, 2))
pdnPppBridgeExtNtfyGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 3, 2, 3))
pdnPppBridgeExtStateMachineGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 3, 2, 1, 1)).setObjects(("PDN-PPP-BRIDGE-NCP-EXT-MIB", "pdnPppBridgeBcpLinkStatusCurrState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnPppBridgeExtStateMachineGroup = pdnPppBridgeExtStateMachineGroup.setStatus('current')
if mibBuilder.loadTexts: pdnPppBridgeExtStateMachineGroup.setDescription("Displays the BCP State Machine's state.")
pdnPppBridgeExt802TaggedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 29, 3, 2, 1, 2)).setObjects(("PDN-PPP-BRIDGE-NCP-EXT-MIB", "pdnPppBridgeMediaIeee802Tagged"), ("PDN-PPP-BRIDGE-NCP-EXT-MIB", "pdnPppBridgeLocalToRemote802Tagged"), ("PDN-PPP-BRIDGE-NCP-EXT-MIB", "pdnPppBridgeRemoteToLocal802Tagged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnPppBridgeExt802TaggedGroup = pdnPppBridgeExt802TaggedGroup.setStatus('current')
if mibBuilder.loadTexts: pdnPppBridgeExt802TaggedGroup.setDescription('Displays whether or not IEEE 802 tagged frames are being transmitted.')
mibBuilder.exportSymbols("PDN-PPP-BRIDGE-NCP-EXT-MIB", pdnPppBridgeExtConformance=pdnPppBridgeExtConformance, pdnPppBridgeExtCompliances=pdnPppBridgeExtCompliances, pdnPppBridgeExtObjects=pdnPppBridgeExtObjects, pdnPppBridgeExt802TaggedGroup=pdnPppBridgeExt802TaggedGroup, PYSNMP_MODULE_ID=pdnPppBridgeExtMIB, pdnPppBridgeRemoteToLocal802Tagged=pdnPppBridgeRemoteToLocal802Tagged, pdnPppBridgeExtCompliance=pdnPppBridgeExtCompliance, pdnPppBridgeExtAFNs=pdnPppBridgeExtAFNs, pdnPppBridgeExtMIB=pdnPppBridgeExtMIB, pdnPppBridgeBcpLinkStatusCurrState=pdnPppBridgeBcpLinkStatusCurrState, pdnPppBridgeExtAfnGroups=pdnPppBridgeExtAfnGroups, pdnPppBridgeExtStateMachineGroup=pdnPppBridgeExtStateMachineGroup, pdnPppBridgeMediaConfigExtEntry=pdnPppBridgeMediaConfigExtEntry, pdnPppBridgeExtGroups=pdnPppBridgeExtGroups, pdnPppBridgeExtObjGroups=pdnPppBridgeExtObjGroups, pdnPppBridgeMediaIeee802Tagged=pdnPppBridgeMediaIeee802Tagged, pdnPppBridgeExtNtfyGroups=pdnPppBridgeExtNtfyGroups, pdnPppBridgeExtTable=pdnPppBridgeExtTable, pdnPppBridgeExtNotifications=pdnPppBridgeExtNotifications, pdnPppBridgeExtEntry=pdnPppBridgeExtEntry, pdnPppBridgeLocalToRemote802Tagged=pdnPppBridgeLocalToRemote802Tagged, pdnPppBridgeMediaConfigExtTable=pdnPppBridgeMediaConfigExtTable)
