#
# PySNMP MIB module MY-AP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MY-AP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:16:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
myMgmt, = mibBuilder.importSymbols("MY-SMI", "myMgmt")
IfIndex, ConfigStatus, MemberMap = mibBuilder.importSymbols("MY-TC", "IfIndex", "ConfigStatus", "MemberMap")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
PortList, VlanId = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList", "VlanId")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibIdentifier, NotificationType, ModuleIdentity, Unsigned32, IpAddress, Counter32, Counter64, Gauge32, TimeTicks, iso, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "NotificationType", "ModuleIdentity", "Unsigned32", "IpAddress", "Counter32", "Counter64", "Gauge32", "TimeTicks", "iso", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Bits")
DisplayString, MacAddress, RowStatus, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "RowStatus", "TextualConvention", "TruthValue")
myApMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7))
myApMIB.setRevisions(('2002-03-20 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: myApMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: myApMIB.setLastUpdated('200203200000Z')
if mibBuilder.loadTexts: myApMIB.setOrganization('D-Link Crop.')
if mibBuilder.loadTexts: myApMIB.setContactInfo(' http://support.dlink.com')
if mibBuilder.loadTexts: myApMIB.setDescription('This module defines my aggreate port(AP) mibs.')
myApMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1))
myApMaxNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myApMaxNumber.setStatus('current')
if mibBuilder.loadTexts: myApMaxNumber.setDescription('Number of MAX aggreate ports this system supported.')
myApCurrentNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myApCurrentNumber.setStatus('current')
if mibBuilder.loadTexts: myApCurrentNumber.setDescription('Number of current aggreate ports this system have.')
myApPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 3), )
if mibBuilder.loadTexts: myApPortConfigTable.setStatus('obsolete')
if mibBuilder.loadTexts: myApPortConfigTable.setDescription('aggreate port table.')
myApPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 3, 1), ).setIndexNames((0, "MY-AP-MIB", "myApPortConfigPortIndex"))
if mibBuilder.loadTexts: myApPortConfigEntry.setStatus('obsolete')
if mibBuilder.loadTexts: myApPortConfigEntry.setDescription("list of aggreate port and it's port group table.")
myApPortConfigPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 3, 1, 1), IfIndex())
if mibBuilder.loadTexts: myApPortConfigPortIndex.setStatus('obsolete')
if mibBuilder.loadTexts: myApPortConfigPortIndex.setDescription(' ')
myApPortConfigApIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 3, 1, 2), IfIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myApPortConfigApIndex.setStatus('obsolete')
if mibBuilder.loadTexts: myApPortConfigApIndex.setDescription('Set this value to 1 myApMaxNumber indicate that add this value to that aggreate port which this aggreate port must be valid. It separates this port from aggreate port to set this value to 0 ')
myApTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 4), )
if mibBuilder.loadTexts: myApTable.setStatus('obsolete')
if mibBuilder.loadTexts: myApTable.setDescription('Aggreate ports table.')
myApEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 4, 1), ).setIndexNames((0, "MY-AP-MIB", "myApIndex"))
if mibBuilder.loadTexts: myApEntry.setStatus('obsolete')
if mibBuilder.loadTexts: myApEntry.setDescription("list of aggreate ports and it's distribution table.")
myApIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 4, 1, 1), IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myApIndex.setStatus('obsolete')
if mibBuilder.loadTexts: myApIndex.setDescription('aggreate ports index.')
myApMemberAction = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 4, 1, 2), MemberMap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myApMemberAction.setStatus('obsolete')
if mibBuilder.loadTexts: myApMemberAction.setDescription("Each octet in this member action map assigned to a port, when the octet's value is 1 indicates the port of this octect is in the aggreate port. and 0 indicates the port is not in the aggreate port. this object can be modified only when the status of this entry is invalid.")
myApPossibleMember = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 4, 1, 3), MemberMap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myApPossibleMember.setStatus('obsolete')
if mibBuilder.loadTexts: myApPossibleMember.setDescription("Each octet in this member action map assigned to a port, when the octet's value is 1 indicates the port of this octect can be set in the aggreate port. and 0 indicates the port is not possible be set in the aggreate port.")
myApMaxPtNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myApMaxPtNumber.setStatus('obsolete')
if mibBuilder.loadTexts: myApMaxPtNumber.setDescription('Max number of ports this aggreate port can include.')
myApFlowBalance = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 0), ("source-mac", 1), ("destination-mac", 2), ("src-dest-mac", 3), ("source-ip", 4), ("destination-ip", 5), ("src-dest-ip", 6), ("src-dest-port", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myApFlowBalance.setStatus('current')
if mibBuilder.loadTexts: myApFlowBalance.setDescription("Aggreate port's flow banlance arithmetic.")
myApConfigTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 6), )
if mibBuilder.loadTexts: myApConfigTable.setStatus('current')
if mibBuilder.loadTexts: myApConfigTable.setDescription('Aggreate ports table.')
myApConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 6, 1), ).setIndexNames((0, "MY-AP-MIB", "myApConfigNumber"))
if mibBuilder.loadTexts: myApConfigEntry.setStatus('current')
if mibBuilder.loadTexts: myApConfigEntry.setDescription("list of aggreate ports and it's distribution table.")
myApConfigNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 6, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: myApConfigNumber.setStatus('current')
if mibBuilder.loadTexts: myApConfigNumber.setDescription('aggreate ports number.Set this value to 1 myApMaxNumber.')
myApConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 6, 1, 2), IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myApConfigIndex.setStatus('current')
if mibBuilder.loadTexts: myApConfigIndex.setDescription('aggreate ports index.')
myApConfigMaxPtNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myApConfigMaxPtNumber.setStatus('current')
if mibBuilder.loadTexts: myApConfigMaxPtNumber.setDescription('Number of MAX aggreate ports this system supported.')
myApConfigCurrentPtNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myApConfigCurrentPtNumber.setStatus('current')
if mibBuilder.loadTexts: myApConfigCurrentPtNumber.setDescription('Number of current ports this aggreate port have.')
myApConfigPortMember = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 6, 1, 5), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myApConfigPortMember.setStatus('current')
if mibBuilder.loadTexts: myApConfigPortMember.setDescription("Each octet in this member action map assigned to a port, when the octet's value is 1 indicates the port of this octect is in the aggreate port. and 0 indicates the port is not in the aggreate port. this object can be modified only when the status of this entry is invalid.")
myApConfigAction = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 6, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myApConfigAction.setStatus('current')
if mibBuilder.loadTexts: myApConfigAction.setDescription('The value 1 to add an aggreate port, 0 to delete an aggreate port.')
myApPortMemberTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 7), )
if mibBuilder.loadTexts: myApPortMemberTable.setStatus('current')
if mibBuilder.loadTexts: myApPortMemberTable.setDescription('aggreate port table.')
myApPortMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 7, 1), ).setIndexNames((0, "MY-AP-MIB", "myApPortMemberPortIndex"))
if mibBuilder.loadTexts: myApPortMemberEntry.setStatus('current')
if mibBuilder.loadTexts: myApPortMemberEntry.setDescription("list of aggreate port and it's port group table.")
myApPortMemberPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 7, 1, 1), IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myApPortMemberPortIndex.setStatus('current')
if mibBuilder.loadTexts: myApPortMemberPortIndex.setDescription(' a switch port index. ')
myApPortMemberApNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 7, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myApPortMemberApNumber.setStatus('current')
if mibBuilder.loadTexts: myApPortMemberApNumber.setDescription('Set this value to 1 myApMaxNumber indicate that add this value to that aggreate port.')
myApPortMemberAction = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 1, 7, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myApPortMemberAction.setStatus('current')
if mibBuilder.loadTexts: myApPortMemberAction.setDescription('The value 1 indcate add to an aggreate port, 0 to delete from an aggreate port.')
myApMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 2))
myApMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 2, 1))
myApMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 2, 2))
myApMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 2, 1, 1)).setObjects(("MY-AP-MIB", "myApMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myApMIBCompliance = myApMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: myApMIBCompliance.setDescription('The compliance statement for entities which implement the My Ap MIB')
myApMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 7, 2, 2, 1)).setObjects(("MY-AP-MIB", "myApMaxNumber"), ("MY-AP-MIB", "myApCurrentNumber"), ("MY-AP-MIB", "myApPortConfigApIndex"), ("MY-AP-MIB", "myApIndex"), ("MY-AP-MIB", "myApMemberAction"), ("MY-AP-MIB", "myApMaxPtNumber"), ("MY-AP-MIB", "myApFlowBalance"), ("MY-AP-MIB", "myApConfigNumber"), ("MY-AP-MIB", "myApConfigIndex"), ("MY-AP-MIB", "myApConfigMaxPtNumber"), ("MY-AP-MIB", "myApConfigCurrentPtNumber"), ("MY-AP-MIB", "myApConfigPortMember"), ("MY-AP-MIB", "myApConfigAction"), ("MY-AP-MIB", "myApPortMemberPortIndex"), ("MY-AP-MIB", "myApPortMemberApNumber"), ("MY-AP-MIB", "myApPortMemberAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myApMIBGroup = myApMIBGroup.setStatus('current')
if mibBuilder.loadTexts: myApMIBGroup.setDescription('A collection of objects providing aggreate port configure.')
mibBuilder.exportSymbols("MY-AP-MIB", myApConfigTable=myApConfigTable, myApTable=myApTable, myApConfigNumber=myApConfigNumber, myApPortMemberEntry=myApPortMemberEntry, myApPortMemberAction=myApPortMemberAction, myApMIBCompliances=myApMIBCompliances, myApPossibleMember=myApPossibleMember, myApPortMemberPortIndex=myApPortMemberPortIndex, myApCurrentNumber=myApCurrentNumber, myApConfigIndex=myApConfigIndex, myApConfigMaxPtNumber=myApConfigMaxPtNumber, myApMIBGroup=myApMIBGroup, myApIndex=myApIndex, myApMIB=myApMIB, myApMemberAction=myApMemberAction, myApPortMemberApNumber=myApPortMemberApNumber, myApMaxNumber=myApMaxNumber, myApMIBConformance=myApMIBConformance, myApConfigEntry=myApConfigEntry, myApMIBObjects=myApMIBObjects, myApFlowBalance=myApFlowBalance, myApPortConfigEntry=myApPortConfigEntry, myApConfigCurrentPtNumber=myApConfigCurrentPtNumber, myApConfigPortMember=myApConfigPortMember, myApMIBGroups=myApMIBGroups, myApPortConfigTable=myApPortConfigTable, myApMIBCompliance=myApMIBCompliance, myApMaxPtNumber=myApMaxPtNumber, myApEntry=myApEntry, myApPortConfigApIndex=myApPortConfigApIndex, PYSNMP_MODULE_ID=myApMIB, myApPortConfigPortIndex=myApPortConfigPortIndex, myApPortMemberTable=myApPortMemberTable, myApConfigAction=myApConfigAction)
