#
# PySNMP MIB module CISCOSB-TIMEBASED-PORT-SHUTDOWN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCOSB-TIMEBASED-PORT-SHUTDOWN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:23:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
switch001, = mibBuilder.importSymbols("CISCOSB-MIB", "switch001")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, Integer32, Gauge32, iso, NotificationType, IpAddress, ModuleIdentity, Counter64, TimeTicks, Bits, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "Integer32", "Gauge32", "iso", "NotificationType", "IpAddress", "ModuleIdentity", "Counter64", "TimeTicks", "Bits", "Counter32")
TextualConvention, DisplayString, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "TruthValue")
rlTimeBasedPort = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 208))
rlTimeBasedPort.setRevisions(('2011-08-06 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: rlTimeBasedPort.setRevisionsDescriptions(('Initial version of this MIB.',))
if mibBuilder.loadTexts: rlTimeBasedPort.setLastUpdated('201108060000Z')
if mibBuilder.loadTexts: rlTimeBasedPort.setOrganization('Cisco Small Business')
if mibBuilder.loadTexts: rlTimeBasedPort.setContactInfo('Postal: 170 West Tasman Drive San Jose , CA 95134-1706 USA Website: Cisco Small Business Home http://www.cisco.com/smb>;, Cisco Small Business Support Community <http://www.cisco.com/go/smallbizsupport>')
if mibBuilder.loadTexts: rlTimeBasedPort.setDescription('The private MIB module definition for Time Based Port Operation MIB.')
rlTimeBasedPortVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 208, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlTimeBasedPortVersion.setStatus('current')
if mibBuilder.loadTexts: rlTimeBasedPortVersion.setDescription('This scalar keep current supported version for Time Based Port feature.Initial version value is 1')
rlTimeBasedPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 208, 2), )
if mibBuilder.loadTexts: rlTimeBasedPortTable.setStatus('current')
if mibBuilder.loadTexts: rlTimeBasedPortTable.setDescription('The table is used to manage time based port operation schedules.')
rlTimeBasedPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 208, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCOSB-TIMEBASED-PORT-SHUTDOWN-MIB", "rlTimeBasedPortTimeRangeName"))
if mibBuilder.loadTexts: rlTimeBasedPortEntry.setStatus('current')
if mibBuilder.loadTexts: rlTimeBasedPortEntry.setDescription('An entry (conceptual row) in the rlTimeBasedPortEntry.')
rlTimeBasedPortTimeRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 208, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlTimeBasedPortTimeRangeName.setStatus('current')
if mibBuilder.loadTexts: rlTimeBasedPortTimeRangeName.setDescription('Name of time range.')
rlTimeBasedPortAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 208, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeBasedPortAction.setStatus('current')
if mibBuilder.loadTexts: rlTimeBasedPortAction.setDescription('This field constitutes what action must be applyed to port during the time range.')
rlTimeBasedPortActive = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 208, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlTimeBasedPortActive.setStatus('current')
if mibBuilder.loadTexts: rlTimeBasedPortActive.setDescription('This field indicates if the time-range is active or not .')
rlTimeBasedPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 208, 2, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeBasedPortRowStatus.setStatus('current')
if mibBuilder.loadTexts: rlTimeBasedPortRowStatus.setDescription('The status of a table entry. It is used to delete an entry from this table.')
mibBuilder.exportSymbols("CISCOSB-TIMEBASED-PORT-SHUTDOWN-MIB", rlTimeBasedPort=rlTimeBasedPort, rlTimeBasedPortAction=rlTimeBasedPortAction, PYSNMP_MODULE_ID=rlTimeBasedPort, rlTimeBasedPortEntry=rlTimeBasedPortEntry, rlTimeBasedPortTimeRangeName=rlTimeBasedPortTimeRangeName, rlTimeBasedPortRowStatus=rlTimeBasedPortRowStatus, rlTimeBasedPortVersion=rlTimeBasedPortVersion, rlTimeBasedPortTable=rlTimeBasedPortTable, rlTimeBasedPortActive=rlTimeBasedPortActive)
