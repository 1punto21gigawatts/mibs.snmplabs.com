#
# PySNMP MIB module CXFLT-IPXSAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CXFLT-IPXSAP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:32:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
cxIpx, = mibBuilder.importSymbols("CXProduct-SMI", "cxIpx")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, IpAddress, Bits, iso, ObjectIdentity, TimeTicks, NotificationType, Integer32, Counter64, ModuleIdentity, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "IpAddress", "Bits", "iso", "ObjectIdentity", "TimeTicks", "NotificationType", "Integer32", "Counter64", "ModuleIdentity", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cxFltIpxSapTable = MibTable((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 3), )
if mibBuilder.loadTexts: cxFltIpxSapTable.setStatus('mandatory')
if mibBuilder.loadTexts: cxFltIpxSapTable.setDescription("Provides the parameters used to filter various IPX SAP's (Service Advertising Protocol). SAP filtering allows certain SAP types and names (selected by the network administrator) to be excluded from the router's SAP database; filtered SAPs will not be advertised by the router. Each row (entry) of the table corresponds to a particular SAP selected for filtering.")
cxFltIpxSapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 3, 1), ).setIndexNames((0, "CXFLT-IPXSAP-MIB", "cxFltIpxSapIndex"))
if mibBuilder.loadTexts: cxFltIpxSapEntry.setStatus('mandatory')
if mibBuilder.loadTexts: cxFltIpxSapEntry.setDescription('Provides the parameters used to filter a particular type of IPX SAP (Service Advertising Protocol). SAP filtering allows a particular combination of SAP type and name (selected by the network administrator) to be excluded from the SAP database; filtered SAPs will not be advertised by the router.')
cxFltIpxSapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cxFltIpxSapIndex.setStatus('mandatory')
if mibBuilder.loadTexts: cxFltIpxSapIndex.setDescription('Identifies a number used to index the filtering information for particular SAP. Each number must be unique. Range of Values: 1 to 32 Default Value: None.')
cxFltIpxSapType = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cxFltIpxSapType.setStatus('mandatory')
if mibBuilder.loadTexts: cxFltIpxSapType.setDescription('Determines the IPX SAP type that is included in the filter. The SAP type (i.e. 0004 for file server ) must be a valid SAP number as defined by Novell. Range of Values: 0 - 65535 Note: If 0 is selected, then all SAP types will be included in this filter. Default Value: None Configuration Changed: administrative')
cxFltIpxSapName = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cxFltIpxSapName.setStatus('mandatory')
if mibBuilder.loadTexts: cxFltIpxSapName.setDescription('Determines the IPX SAP name of the Novell server that advertises the SAP type(s) assigned in cxFltIpxSapType. The name must be a valid SAP name as defined by Novell. Range of Values: 0-48 ASCII characters Note: If 0 is selected, then all SAP names will be included in this filter. Default Value: None Configuration Changed: administrative')
cxFltIpxSapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("discard", 1), ("nodiscard", 2))).clone('discard')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cxFltIpxSapStatus.setStatus('mandatory')
if mibBuilder.loadTexts: cxFltIpxSapStatus.setDescription("Determines whether the filter as defined in cxFltIpxSapType and cxFltIpxSapName will be discarded (filtered). If the value is set to discard, then the SAP will not be included in the router's database; hence the SAP will not be advertised by the router. If the value is set to nodiscard the SAP will be included in the local database. Options: discard (1) nodiscard (2) Default Value: discard (1) Configuration Changed: administrative ")
cxFltIpxSapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2))).clone('valid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cxFltIpxSapRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: cxFltIpxSapRowStatus.setDescription('Determines the status of the objects in a table row. Options: invalid (1): row is flagged, after next reset the values will be disabled and the row will be deleted from the table. valid (2): values are enabled Default Value: valid (2) Configuration Changed: administrative')
mibBuilder.exportSymbols("CXFLT-IPXSAP-MIB", cxFltIpxSapIndex=cxFltIpxSapIndex, cxFltIpxSapEntry=cxFltIpxSapEntry, cxFltIpxSapTable=cxFltIpxSapTable, cxFltIpxSapRowStatus=cxFltIpxSapRowStatus, cxFltIpxSapStatus=cxFltIpxSapStatus, cxFltIpxSapName=cxFltIpxSapName, cxFltIpxSapType=cxFltIpxSapType)
