#
# PySNMP MIB module MWRM-PM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MWRM-PM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:16:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
genEquipRadioCfgRadioId, = mibBuilder.importSymbols("MWRM-RADIO-MIB", "genEquipRadioCfgRadioId")
HalfFull, DownUp, Integrity, SwCommandTimer, MetricImperial, AllowedNotAllowed, EnableDisableSMI2, RadioId, LoopbackType, OffOn, InputSeverity, ProgressStatus, ClockSrc, SlotId, PmTableType, EnableDisable, TrailProtectedType, Severity, NoYes, SwCommand, BerLevel, TrailIfType, SignalLevel, RateMbps, QueueName, GreenYellow, RfuId = mibBuilder.importSymbols("MWRM-UNIT-MIB", "HalfFull", "DownUp", "Integrity", "SwCommandTimer", "MetricImperial", "AllowedNotAllowed", "EnableDisableSMI2", "RadioId", "LoopbackType", "OffOn", "InputSeverity", "ProgressStatus", "ClockSrc", "SlotId", "PmTableType", "EnableDisable", "TrailProtectedType", "Severity", "NoYes", "SwCommand", "BerLevel", "TrailIfType", "SignalLevel", "RateMbps", "QueueName", "GreenYellow", "RfuId")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Counter64, Bits, Integer32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, TimeTicks, iso, Unsigned32, IpAddress, ModuleIdentity, enterprises, Gauge32, NotificationType, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter64", "Bits", "Integer32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "TimeTicks", "iso", "Unsigned32", "IpAddress", "ModuleIdentity", "enterprises", "Gauge32", "NotificationType", "MibIdentifier")
RowStatus, DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "MacAddress", "TextualConvention")
microwave_radio = MibIdentifier((1, 3, 6, 1, 4, 1, 2281)).setLabel("microwave-radio")
genEquip = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10))
genEquipUnit = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 1))
genEquipPM = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6))
genEquipPmRfu = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1))
genEquipPmRfuCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1))
genEquipPmRfuCommonSL15minTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 1), )
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minTable.setDescription('This table indicates the RFU Signal Level PM data.')
genEquipPmRfuCommonSL15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 1, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmRfuCommonSL15minId"))
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minEntry.setDescription('Entry containing the data of the RFU SL PM.')
genEquipPmRfuCommonSL15minId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minId.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minId.setDescription('This value indicates an index of a specific RFU')
genEquipPmRfuCommonSL15minIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minIfIndex.setDescription('This value indicates the interface index of a specific RFU (as appears in the ifTable)')
genEquipPmRfuCommonSL15minTimeAndDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minTimeAndDate.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minTimeAndDate.setDescription('This value indicates the Time and date for the specific PM.')
genEquipPmRfuCommonSL15minMinRsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minMinRsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minMinRsl.setDescription('This value indicates the minimum RSL value.')
genEquipPmRfuCommonSL15minMaxRsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minMaxRsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minMaxRsl.setDescription('This value indicates the maximum RSL value.')
genEquipPmRfuCommonSL15minRslExceed1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minRslExceed1.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minRslExceed1.setDescription('This value indicates the number of seconds RSL exceeded threshold number 1.')
genEquipPmRfuCommonSL15minRslExceed2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minRslExceed2.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minRslExceed2.setDescription('This value indicates the number of seconds RSL exceeded threshold number 2.')
genEquipPmRfuCommonSL15minMinTsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minMinTsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minMinTsl.setDescription('This value indicates the Min TSL value.')
genEquipPmRfuCommonSL15minMaxTsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minMaxTsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minMaxTsl.setDescription('This value indicates the Max TSL value.')
genEquipPmRfuCommonSL15minTslExceed = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minTslExceed.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minTslExceed.setDescription('This value indicates the number of seconds TSL exceeded the threshold')
genEquipPmRfuCommonSL15minIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 1, 1, 11), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minIDF.setDescription('This value indicates the IDF (Invalid Data Flag) of the interval. integrity(0), nointegrity(1).')
genEquipPmRfuCommonSL15minCurrTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 2), )
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrTable.setDescription('This table indicates the RFU Signal Level PM data for the current 15 min. interval.')
genEquipPmRfuCommonSL15minCurrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 2, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmRfuCommonSL15minCurrId"))
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrEntry.setDescription('Entry containing the data of the Rfu SL PM.')
genEquipPmRfuCommonSL15minCurrId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrId.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrId.setDescription('This value indicates an index of a specific RFU')
genEquipPmRfuCommonSL15minCurrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrIfIndex.setDescription('This value indicates the interface index of a specific RFU (as appears in the ifTable)')
genEquipPmRfuCommonSL15minCurrTimeAndDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrTimeAndDate.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrTimeAndDate.setDescription('This value indicates the Time and date for the specific PM.')
genEquipPmRfuCommonSL15minCurrMinRsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrMinRsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrMinRsl.setDescription('This value indicates the minimum RSL value.')
genEquipPmRfuCommonSL15minCurrMaxRsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrMaxRsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrMaxRsl.setDescription('This value indicates the maximum RSL value.')
genEquipPmRfuCommonSL15minCurrRslExceed1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrRslExceed1.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrRslExceed1.setDescription('This value indicates the number of seconds RSL exceeded threshold number 1.')
genEquipPmRfuCommonSL15minCurrRslExceed2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrRslExceed2.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrRslExceed2.setDescription('This value indicates the number of seconds RSL exceeded threshold number 2.')
genEquipPmRfuCommonSL15minCurrMinTsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrMinTsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrMinTsl.setDescription('This value indicates the Min TSL value.')
genEquipPmRfuCommonSL15minCurrMaxTsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrMaxTsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrMaxTsl.setDescription('This value indicates the Max TSL value.')
genEquipPmRfuCommonSL15minCurrTslExceed = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrTslExceed.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrTslExceed.setDescription('This value indicates the number of seconds TSL exceeded the threshold')
genEquipPmRfuCommonSL15minCurrIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 2, 1, 11), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL15minCurrIDF.setDescription('This value indicates the IDF (Invalid Data Flag) of the current interval. integrity(0), nointegrity(1).')
genEquipPmRfuCommonSL24hrTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 3), )
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrTable.setDescription('This table indicates the RFU Signal Level 24 hr PM data.')
genEquipPmRfuCommonSL24hrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 3, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmRfuCommonSL24hrId"))
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrEntry.setDescription('Entry containing the data of the RFU SL PM.')
genEquipPmRfuCommonSL24hrId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrId.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrId.setDescription('This value indicates an index of a specific RFU')
genEquipPmRfuCommonSL24hrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrIfIndex.setDescription('This value indicates the interface index of a specific RFU (as appears in the ifTable)')
genEquipPmRfuCommonSL24hrTimeAndDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrTimeAndDate.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrTimeAndDate.setDescription('This value indicates the time and date for the specific PM.')
genEquipPmRfuCommonSL24hrMinRsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrMinRsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrMinRsl.setDescription('This value indicates the min RSL value.')
genEquipPmRfuCommonSL24hrMaxRsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrMaxRsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrMaxRsl.setDescription('This value indicates the max RSL value.')
genEquipPmRfuCommonSL24hrRslExceed1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrRslExceed1.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrRslExceed1.setDescription('This value indicates the number of seconds RSL exceeded threshold number 1.')
genEquipPmRfuCommonSL24hrRslExceed2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrRslExceed2.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrRslExceed2.setDescription('This value indicates the number of seconds RSL exceeded threshold number 2.')
genEquipPmRfuCommonSL24hrMinTsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrMinTsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrMinTsl.setDescription('This value indicates the Min TSL value.')
genEquipPmRfuCommonSL24hrMaxTsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrMaxTsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrMaxTsl.setDescription('This value indicates the Max TSL value.')
genEquipPmRfuCommonSL24hrTslExceed = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrTslExceed.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrTslExceed.setDescription('This value indicates the number of seconds RSL exceeded the threshold')
genEquipPmRfuCommonSL24hrIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 3, 1, 11), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrIDF.setDescription('This value indicates the IDF (Invalid Data Flag) of the interval. integrity(0), nointegrity(1).')
genEquipPmRfuCommonSL24hrCurrTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 4), )
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrTable.setDescription('This table indicates the RFU Signal Level PM data for the current 24 hour interval.')
genEquipPmRfuCommonSL24hrCurrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 4, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmRfuCommonSL24hrCurrId"))
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrEntry.setDescription('Entry containing the data of the RFU SL PM.')
genEquipPmRfuCommonSL24hrCurrId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrId.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrId.setDescription('This value indicates an index of a specific RFU')
genEquipPmRfuCommonSL24hrCurrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrIfIndex.setDescription('This value indicates the interface index of a specific RFU (as appears in the ifTable)')
genEquipPmRfuCommonSL24hrCurrTimeAndDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrTimeAndDate.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrTimeAndDate.setDescription('This value indicates the time and date for the specific PM.')
genEquipPmRfuCommonSL24hrCurrMinRsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrMinRsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrMinRsl.setDescription('This value indicates the min RSL value.')
genEquipPmRfuCommonSL24hrCurrMaxRsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrMaxRsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrMaxRsl.setDescription('This value indicates the Max RSL value.')
genEquipPmRfuCommonSL24hrCurrRslExceed1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrRslExceed1.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrRslExceed1.setDescription('This value indicates the number of seconds RSL exceeded threshold number 1.')
genEquipPmRfuCommonSL24hrCurrRslExceed2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrRslExceed2.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrRslExceed2.setDescription('This value indicates the number of seconds RSL exceeded threshold number 2.')
genEquipPmRfuCommonSL24hrCurrMinTsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrMinTsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrMinTsl.setDescription('This value indicates the Min TSL value.')
genEquipPmRfuCommonSL24hrCurrMaxTsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrMaxTsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrMaxTsl.setDescription('This value indicates the Max TSL value.')
genEquipPmRfuCommonSL24hrCurrTslExceed = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrTslExceed.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrTslExceed.setDescription('This value indicates the number of seconds TSL exceeded the threshold')
genEquipPmRfuCommonSL24hrCurrIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 1, 1, 4, 1, 11), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRfuCommonSL24hrCurrIDF.setDescription('This value indicates the IDF (Invalid Data Flag) of the interval. integrity(0), nointegrity(1).')
genEquipPmTraffic = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2))
genEquipPmTrafficRadioAgg15minTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 1), )
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minTable.setDescription('This table indicates the Radio Aggregate PM data for all 15 min intervals.')
genEquipPmTrafficRadioAgg15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 1, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmTrafficRadioAgg15minId"))
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minEntry.setDescription('This table indicates the Radio Aggregate PM data for all 15 min intervals.')
genEquipPmTrafficRadioAgg15minId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minId.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minId.setDescription('This value indicates an index of a specific RFU')
genEquipPmTrafficRadioAgg15minIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minIfIndex.setDescription('This value indicates the interface index of a specific RFU (as appears in the ifTable)')
genEquipPmTrafficRadioAgg15minTimeAndDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minTimeAndDate.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minTimeAndDate.setDescription('This value indicates the time and date for the specific PM.')
genEquipPmTrafficRadioAgg15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minES.setDescription('This value indicates the ES value.')
genEquipPmTrafficRadioAgg15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minSES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minSES.setDescription('This value indicates the SES value.')
genEquipPmTrafficRadioAgg15minUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minUAS.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minUAS.setDescription('This value indicates the UAS value.')
genEquipPmTrafficRadioAgg15minBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minBBE.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minBBE.setDescription('This value indicates the BBE value.')
genEquipPmTrafficRadioAgg15minIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 1, 1, 8), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minIDF.setDescription('This value indicates the IDF (Invalid Data Flag) of the interval. integrity(0), nointegrity(1).')
genEquipPmTrafficRadioAgg15minCurrTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 2), )
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrTable.setDescription('This table indicates the Radio Aggregate PM data for all 15 min intervals.')
genEquipPmTrafficRadioAgg15minCurrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 2, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmTrafficRadioAgg15minCurrId"))
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrEntry.setDescription('This table indicates the Radio Aggregate PM data for all 15 min intervals.')
genEquipPmTrafficRadioAgg15minCurrId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrId.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrId.setDescription('This value indicates an index of a specific RFU')
genEquipPmTrafficRadioAgg15minCurrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrIfIndex.setDescription('This value indicates the interface index of a specific RFU (as appears in the ifTable)')
genEquipPmTrafficRadioAgg15minCurrTimeAndDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrTimeAndDate.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrTimeAndDate.setDescription('This value indicates the time and date for the specific PM.')
genEquipPmTrafficRadioAgg15minCurrES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrES.setDescription('This value indicates the ES value.')
genEquipPmTrafficRadioAgg15minCurrSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrSES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrSES.setDescription('This value indicates the SES value.')
genEquipPmTrafficRadioAgg15minCurrUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrUAS.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrUAS.setDescription('This value indicates the UAS value.')
genEquipPmTrafficRadioAgg15minCurrBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrBBE.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrBBE.setDescription('This value indicates the BBE value.')
genEquipPmTrafficRadioAgg15minCurrIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 2, 1, 8), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg15minCurrIDF.setDescription('This value indicates the IDF (Invalid Data Flag) of the interval. integrity(0), nointegrity(1).')
genEquipPmTrafficRadioAgg24hrTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 3), )
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrTable.setDescription('This table indicates the Radio Aggregate PM data for all 15 min intervals.')
genEquipPmTrafficRadioAgg24hrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 3, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmTrafficRadioAgg24hrId"))
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrEntry.setDescription('This table indicates the Radio Aggregate PM data for all 15 min intervals.')
genEquipPmTrafficRadioAgg24hrId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrId.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrId.setDescription('This value indicates an index of a specific RFU')
genEquipPmTrafficRadioAgg24hrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrIfIndex.setDescription('This value indicates the interface index of a specific RFU (as appears in the ifTable)')
genEquipPmTrafficRadioAgg24hrTimeAndDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrTimeAndDate.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrTimeAndDate.setDescription('This value indicates the time and date for the specific PM.')
genEquipPmTrafficRadioAgg24hrES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrES.setDescription('This value indicates the ES value.')
genEquipPmTrafficRadioAgg24hrSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrSES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrSES.setDescription('This value indicates the SES value.')
genEquipPmTrafficRadioAgg24hrUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrUAS.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrUAS.setDescription('This value indicates the UAS value.')
genEquipPmTrafficRadioAgg24hrBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrBBE.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrBBE.setDescription('This value indicates the BBE value.')
genEquipPmTrafficRadioAgg24hrIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 3, 1, 8), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrIDF.setDescription('This value indicates the IDF (Invalid Data Flag) of the interval. integrity(0), nointegrity(1).')
genEquipPmTrafficRadioAgg24hrCurrTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 4), )
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrTable.setDescription('This table indicates the Radio Aggregate PM data for all 15 min intervals.')
genEquipPmTrafficRadioAgg24hrCurrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 4, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmTrafficRadioAgg24hrCurrId"))
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrEntry.setDescription('This table indicates the Radio Aggregate PM data for all 15 min intervals.')
genEquipPmTrafficRadioAgg24hrCurrId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrId.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrId.setDescription('This value indicates an index of a specific RFU')
genEquipPmTrafficRadioAgg24hrCurrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrIfIndex.setDescription('This value indicates the interface index of a specific RFU (as appears in the ifTable)')
genEquipPmTrafficRadioAgg24hrCurrTimeAndDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrTimeAndDate.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrTimeAndDate.setDescription('This value indicates the time and date for the specific PM.')
genEquipPmTrafficRadioAgg24hrCurrES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrES.setDescription('This value indicates the ES value.')
genEquipPmTrafficRadioAgg24hrCurrSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrSES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrSES.setDescription('This value indicates the SES value.')
genEquipPmTrafficRadioAgg24hrCurrUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrUAS.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrUAS.setDescription('This value indicates the UAS value.')
genEquipPmTrafficRadioAgg24hrCurrBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrBBE.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrBBE.setDescription('This value indicates the BBE value.')
genEquipPmTrafficRadioAgg24hrCurrIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 2, 4, 1, 8), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficRadioAgg24hrCurrIDF.setDescription('This value indicates the IDF (Invalid Data Flag) of the current interval. integrity(0), nointegrity(1).')
genEquipPmAll = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3))
genEquipPmClear = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 1), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmClear.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmClear.setDescription('Clear All values for PM tables.')
genEquipPmTrafficSL = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 2))
genEquipPmTrafficSLTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 2, 1), )
if mibBuilder.loadTexts: genEquipPmTrafficSLTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficSLTable.setDescription('This table indicates the RFU Signal Level PM data.')
genEquipPmTrafficSLEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 2, 1, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmTrafficSLPmType"), (0, "MWRM-PM-MIB", "genEquipPmTrafficSLId"), (0, "MWRM-PM-MIB", "genEquipPmTrafficSLInterval"))
if mibBuilder.loadTexts: genEquipPmTrafficSLEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficSLEntry.setDescription('Entry containing the data of the RFU signal level PM.')
genEquipPmTrafficSLPmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 2, 1, 1, 1), PmTableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficSLPmType.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficSLPmType.setDescription('This value indicates the PM Type table to access, 15 min, current 15 min, 24 hours or current 24 hours')
genEquipPmTrafficSLId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 2, 1, 1, 2), RfuId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficSLId.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficSLId.setDescription('This value indicates an index of a specific RFU')
genEquipPmTrafficSLInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficSLInterval.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficSLInterval.setDescription('This value indicates an index of a specific PM Interval')
genEquipPmTrafficSLMinRsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficSLMinRsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficSLMinRsl.setDescription('This value indicates the min RSL value.')
genEquipPmTrafficSLMaxRsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficSLMaxRsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficSLMaxRsl.setDescription('This value indicates the max RSL value.')
genEquipPmTrafficSLRslExceed1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficSLRslExceed1.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficSLRslExceed1.setDescription('This value indicates the number of seconds RSL exceeded threshold number 1.')
genEquipPmTrafficSLRslExceed2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficSLRslExceed2.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficSLRslExceed2.setDescription('This value indicates the number of seconds RSL exceeded threshold number 2.')
genEquipPmTrafficSLMinTsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficSLMinTsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficSLMinTsl.setDescription('This value indicates the Minimum TSL value.')
genEquipPmTrafficSLMaxTsl = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficSLMaxTsl.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficSLMaxTsl.setDescription('This value indicates the Maximum TSL value.')
genEquipPmTrafficSLTslExceed = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficSLTslExceed.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficSLTslExceed.setDescription('This value indicates the number of seconds TSL exceeded the threshold')
genEquipPmTrafficSLIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 2, 1, 1, 11), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficSLIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficSLIDF.setDescription('This value indicates if the IDF (Invalid Data Flag), was set.')
genEquipPmTrafficAggregate = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 3))
genEquipPmTrafficAggTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 3, 1), )
if mibBuilder.loadTexts: genEquipPmTrafficAggTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficAggTable.setDescription('This table indicates the Radio Aggregate PM data.')
genEquipPmTrafficAggEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 3, 1, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmTrafficAggPmType"), (0, "IF-MIB", "ifIndex"), (0, "MWRM-PM-MIB", "genEquipPmTrafficAggInterval"))
if mibBuilder.loadTexts: genEquipPmTrafficAggEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficAggEntry.setDescription('This table indicates the Radio Aggregate PM data.')
genEquipPmTrafficAggPmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 3, 1, 1, 1), PmTableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficAggPmType.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficAggPmType.setDescription('This value indicates the PM Type table to access, 15 min, current 15 min, 24 hours or current 24 hours')
genEquipPmTrafficAggInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficAggInterval.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficAggInterval.setDescription('This value indicates an index of a specific PM Interval')
genEquipPmTrafficAggES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficAggES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficAggES.setDescription('This value indicates the ES value (Errored seconds).')
genEquipPmTrafficAggSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficAggSES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficAggSES.setDescription('This value indicates the SES value (Severe Errored seconds).')
genEquipPmTrafficAggUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficAggUAS.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficAggUAS.setDescription('This value indicates the UAS value. (Unavailable Seconds)')
genEquipPmTrafficAggBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficAggBBE.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficAggBBE.setDescription('This value indicates the BBE value. (Background Block Error)')
genEquipPmTrafficAggIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 3, 1, 1, 7), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrafficAggIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrafficAggIDF.setDescription('This value indicates if the IDF (Invalid Data Flag), was set.')
genEquipPmRadio = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4))
genEquipPmRadioMRMC = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 1))
genEquipPmRadioMRMCTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 1, 1), )
if mibBuilder.loadTexts: genEquipPmRadioMRMCTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMRMCTable.setDescription('The MRMC PM table')
genEquipPmRadioMRMCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 1, 1, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmRadioMRMCPmType"), (0, "MWRM-PM-MIB", "genEquipPmRadioMRMCId"), (0, "MWRM-PM-MIB", "genEquipPmRadioMRMCInterval"))
if mibBuilder.loadTexts: genEquipPmRadioMRMCEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMRMCEntry.setDescription('The MRMC PM table')
genEquipPmRadioMRMCPmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 1, 1, 1, 1), PmTableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioMRMCPmType.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMRMCPmType.setDescription('This value indicates the PM Type table to access, 15 min, current 15 min, 24 hours or current 24 hours')
genEquipPmRadioMRMCId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 1, 1, 1, 2), RadioId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioMRMCId.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMRMCId.setDescription('This value indicates an index of a specific RFU')
genEquipPmRadioMRMCInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioMRMCInterval.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMRMCInterval.setDescription('This value indicates an index of a specific PM Interval')
genEquipPmRadioMRMCIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioMRMCIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMRMCIfIndex.setDescription('This value indicates the interface index of a specific RFU interface (as appears in the ifTable)')
genEquipPmRadioMRMCMinProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioMRMCMinProfile.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMRMCMinProfile.setDescription('Minimum MRMC profile.')
genEquipPmRadioMRMCMaxProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioMRMCMaxProfile.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMRMCMaxProfile.setDescription('The maximum profile (Kbps) that was measured during the interva')
genEquipPmRadioMRMCMinBitrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioMRMCMinBitrate.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMRMCMinBitrate.setDescription('Minimum MRMC nominal bitrate (Units are Kbps)')
genEquipPmRadioMRMCMaxBitrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioMRMCMaxBitrate.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMRMCMaxBitrate.setDescription('Maximum MRMC nominal bitrate (Units are Kbps)')
genEquipPmRadioMRMCMinTDMIf = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioMRMCMinTDMIf.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMRMCMinTDMIf.setDescription('Minimum number of allocated TDM channels')
genEquipPmRadioMRMCMaxTDMIf = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioMRMCMaxTDMIf.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMRMCMaxTDMIf.setDescription('Maximum number of allocated TDM channels')
genEquipPmRadioMRMCIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 1, 1, 1, 11), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioMRMCIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMRMCIDF.setDescription('This value indicates if the IDF (Invalid Data Flag), was set.')
genEquipPmRadioTDM = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 2))
genEquipPmRadioTDMTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 2, 1), )
if mibBuilder.loadTexts: genEquipPmRadioTDMTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioTDMTable.setDescription('The PM table of logical TDM channels within the Radio link')
genEquipPmRadioTDMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 2, 1, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmRadioTDMPmType"), (0, "IF-MIB", "ifIndex"), (0, "MWRM-PM-MIB", "genEquipPmRadioTDMInterval"))
if mibBuilder.loadTexts: genEquipPmRadioTDMEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioTDMEntry.setDescription('The PM table of logical TDM channels within the Radio link')
genEquipPmRadioTDMPmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 2, 1, 1, 1), PmTableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioTDMPmType.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioTDMPmType.setDescription('This value indicates the PM Type table to access, 15 min, current 15 min, 24 hours or current 24 hours')
genEquipPmRadioTDMInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioTDMInterval.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioTDMInterval.setDescription('The interval of the PM')
genEquipPmRadioTDMRadioUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioTDMRadioUAS.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioTDMRadioUAS.setDescription('TDM channel UAS (unavailable seconds)')
genEquipPmRadioTDMIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 2, 1, 1, 4), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioTDMIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioTDMIDF.setDescription('This value indicates if the IDF (Invalid Data Flag), was set.')
genEquipPmRadioEthernet = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3))
genEquipPmRadioEthernetTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 1), )
if mibBuilder.loadTexts: genEquipPmRadioEthernetTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetTable.setDescription('The Ethernet PMs on the radio link')
genEquipPmRadioEthernetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 1, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmRadioEthernetPmType"), (0, "IF-MIB", "ifIndex"), (0, "MWRM-PM-MIB", "genEquipPmRadioEthernetInterval"))
if mibBuilder.loadTexts: genEquipPmRadioEthernetEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEntry.setDescription('The Ethernet PMs on the radio link')
genEquipPmRadioEthernetPmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 1, 1, 1), PmTableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetPmType.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetPmType.setDescription('This value indicates the PM Type table to access, 15 min, current 15 min, 24 hours or current 24 hours')
genEquipPmRadioEthernetInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetInterval.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetInterval.setDescription('The interval of the PM')
genEquipPmRadioEthernetFrameErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetFrameErrorRate.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetFrameErrorRate.setDescription('Ethernet Frame Error Rate PM')
genEquipPmRadioEthernetPeakThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetPeakThroughput.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetPeakThroughput.setDescription('Ethernet Peak throughput PM (Units are bits per second)')
genEquipPmRadioEthernetAverageThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetAverageThroughput.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetAverageThroughput.setDescription('Ethernet Average throughput PM (Units are bits per second)')
genEquipPmRadioEthernetExceedThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetExceedThroughput.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetExceedThroughput.setDescription('Ethernet Exceed throughput PM')
genEquipPmRadioEthernetPeakCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetPeakCapacity.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetPeakCapacity.setDescription('Ethernet Peak capacity PM (in bps)')
genEquipPmRadioEthernetAverageCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetAverageCapacity.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetAverageCapacity.setDescription('Ethernet Average capacity PM (in bps)')
genEquipPmRadioEthernetExceedCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetExceedCapacity.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetExceedCapacity.setDescription('Ethernet Exceed capacity PM')
genEquipPmRadioEthernetPeakUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetPeakUtilization.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetPeakUtilization.setDescription('Ethernet Peak utilization PM (%)')
genEquipPmRadioEthernetAverageUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetAverageUtilization.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetAverageUtilization.setDescription('Ethernet Average utilization PM (%)')
genEquipPmRadioEthernetExceedUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetExceedUtilization.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetExceedUtilization.setDescription('Ethernet Exceed utilization PM')
genEquipPmRadioEthernetIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 1, 1, 13), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetIDF.setDescription('This value indicates if the IDF (Invalid Data Flag), was set.')
genEquipPmRadioEthernetThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 2), )
if mibBuilder.loadTexts: genEquipPmRadioEthernetThresholdTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetThresholdTable.setDescription('The Ethernet PMs on the radio link')
genEquipPmRadioEthernetThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 2, 1), ).setIndexNames((0, "MWRM-RADIO-MIB", "genEquipRadioCfgRadioId"))
if mibBuilder.loadTexts: genEquipPmRadioEthernetThresholdEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetThresholdEntry.setDescription('The Ethernet PMs on the radio link')
genEquipPmRadioEthernetThresholdThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmRadioEthernetThresholdThroughput.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetThresholdThroughput.setDescription('Ethernet Throughput threshold (in Mbps)')
genEquipPmRadioEthernetThresholdCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmRadioEthernetThresholdCapacity.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetThresholdCapacity.setDescription('Ethernet capacity threshold (in Mbps)')
genEquipPmRadioEthernetThresholdUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("above-0", 0), ("above-20", 1), ("above-40", 2), ("above-60", 3), ("above-80", 4), ("no-threshold", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmRadioEthernetThresholdUtilization.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetThresholdUtilization.setDescription('Ethernet utilization threshold (in percentage).')
genEquipPmRadioEthernetEtmTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3), )
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmTable.setDescription('The Ethernet PMs on the radio link')
genEquipPmRadioEthernetEtmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmRadioEthernetEtmPmType"), (0, "MWRM-PM-MIB", "genEquipPmRadioEthernetEtmPmQueueIndex"), (0, "MWRM-PM-MIB", "genEquipPmRadioEthernetEtmInterval"))
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmEntry.setDescription('The entry of Ethernet ETM PMs on the radio link')
genEquipPmRadioEthernetEtmPmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 1), PmTableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmType.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmType.setDescription('This value indicates the PM Type table to access, 15 min, current 15 min, 24 hours or current 24 hours')
genEquipPmRadioEthernetEtmPmQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmQueueIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmQueueIndex.setDescription('Queue index')
genEquipPmRadioEthernetEtmInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmInterval.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmInterval.setDescription('The interval of the PM.')
genEquipPmRadioEthernetEtmPmMaxGreenBytesPassed = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmMaxGreenBytesPassed.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmMaxGreenBytesPassed.setDescription('Maximum Green Traffic Passed Bytes.')
genEquipPmRadioEthernetEtmPmAvgGreenBytesPassed = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmAvgGreenBytesPassed.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmAvgGreenBytesPassed.setDescription('Average Green Traffic Passed Bytes.')
genEquipPmRadioEthernetEtmPmMaxGreenFramesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmMaxGreenFramesDropped.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmMaxGreenFramesDropped.setDescription('Maximum Green Traffic Frames Droped by WRED.')
genEquipPmRadioEthernetEtmPmAvgGreenFramesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmAvgGreenFramesDropped.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmAvgGreenFramesDropped.setDescription('Average Green Traffic Frames Droped by WRED.')
genEquipPmRadioEthernetEtmPmMaxYellowBytesPassed = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmMaxYellowBytesPassed.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmMaxYellowBytesPassed.setDescription('Maximum Yellow Traffic Passed Bytes.')
genEquipPmRadioEthernetEtmPmAvgYellowBytesPassed = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmAvgYellowBytesPassed.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmAvgYellowBytesPassed.setDescription('Average Yellow Traffic Passed Bytes.')
genEquipPmRadioEthernetEtmPmMaxYellowFramesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmMaxYellowFramesDropped.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmMaxYellowFramesDropped.setDescription('Maximum Yellow Traffic Frames Droped by WRED.')
genEquipPmRadioEthernetEtmPmAvgYellowFramesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmAvgYellowFramesDropped.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmAvgYellowFramesDropped.setDescription('Average Yellow Traffic Frames Droped by WRED.')
genEquipPmRadioEthernetEtmPmMaxRedFramesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmMaxRedFramesDropped.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmMaxRedFramesDropped.setDescription('Maximum Red Traffic Frames Dropped.')
genEquipPmRadioEthernetEtmPmAvgRedFramesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmAvgRedFramesDropped.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmAvgRedFramesDropped.setDescription('Average Red Traffic Frames Dropped.')
genEquipPmRadioEthernetEtmPmIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 14), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmIDF.setDescription('This value indicates if the IDF (Invalid Data Flag), was set.')
genEquipPmRadioEthernetEtmPmMaxGreenFramesPassed = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmMaxGreenFramesPassed.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmMaxGreenFramesPassed.setDescription('Maximum Green Traffic Frames Passed.')
genEquipPmRadioEthernetEtmPmAvgGreenFramesPassed = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmAvgGreenFramesPassed.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmAvgGreenFramesPassed.setDescription('Average Green Traffic Frames Passed.')
genEquipPmRadioEthernetEtmPmMaxYellowFramesPassed = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmMaxYellowFramesPassed.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmMaxYellowFramesPassed.setDescription('Maximum Yellow Traffic Frames Passed.')
genEquipPmRadioEthernetEtmPmAvgYellowFramesPassed = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmAvgYellowFramesPassed.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmAvgYellowFramesPassed.setDescription('Average Yellow Traffic Frames Passed.')
genEquipPmRadioEthernetEtmPmMaxRedBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmMaxRedBytesDropped.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmMaxRedBytesDropped.setDescription('Maximum Red Traffic Bytes Dropped.')
genEquipPmRadioEthernetEtmPmAvgRedBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 3, 3, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmAvgRedBytesDropped.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioEthernetEtmPmAvgRedBytesDropped.setDescription('Average Red Traffic Bytes Dropped.')
genEquipPmRadioMSETable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 4), )
if mibBuilder.loadTexts: genEquipPmRadioMSETable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMSETable.setDescription('Radio MSE PM')
genEquipPmRadioMSEEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 4, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmRadioMSEPmType"), (0, "IF-MIB", "ifIndex"), (0, "MWRM-PM-MIB", "genEquipPmRadioMSEInterval"))
if mibBuilder.loadTexts: genEquipPmRadioMSEEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMSEEntry.setDescription('Radio MSE PM')
genEquipPmRadioMSEPmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 4, 1, 1), PmTableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioMSEPmType.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMSEPmType.setDescription('This value indicates the PM Type table to access, 15 min, current 15 min, 24 hours or current 24 hours')
genEquipPmRadioMSEInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioMSEInterval.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMSEInterval.setDescription('The interval of the PM')
genEquipPmRadioMSEMinMse = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioMSEMinMse.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMSEMinMse.setDescription('This parameter holds the minimum MSE value detected in the interval.')
genEquipPmRadioMSEMaxMse = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioMSEMaxMse.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMSEMaxMse.setDescription('This parameter holds the maximum MSE value detected in the interval.')
genEquipPmRadioMSEexceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioMSEexceeded.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMSEexceeded.setDescription('This parameter holds the number of seconds that the MSE exceeded the configured threshold.')
genEquipPmRadioMSEIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 4, 1, 6), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioMSEIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioMSEIDF.setDescription('This value indicates if the IDF (Invalid Data Flag), was set.')
genEquipPmRadioThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 5), )
if mibBuilder.loadTexts: genEquipPmRadioThresholdTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioThresholdTable.setDescription('Radio MSE PM')
genEquipPmRadioThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 5, 1), ).setIndexNames((0, "MWRM-RADIO-MIB", "genEquipRadioCfgRadioId"))
if mibBuilder.loadTexts: genEquipPmRadioThresholdEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioThresholdEntry.setDescription('Radio MSE PM')
genEquipPmRadioThresholdMSE = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-99, -1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmRadioThresholdMSE.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioThresholdMSE.setDescription('The threshold above which MSE (Mean Square Error) exceeded seconds will be counted')
genEquipPmRadioThresholdRSL1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-75, -15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmRadioThresholdRSL1.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioThresholdRSL1.setDescription('The threshold below which RSL 1 exceeded seconds will be counted')
genEquipPmRadioThresholdRSL2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-75, -15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmRadioThresholdRSL2.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioThresholdRSL2.setDescription('The threshold below which RSL 2 exceeded seconds will be counted')
genEquipPmRadioThresholdTSL = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 5, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmRadioThresholdTSL.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioThresholdTSL.setDescription('The threshold above which TSL exceeded seconds will be counted')
genEquipPmRadioThresholdXPI = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmRadioThresholdXPI.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioThresholdXPI.setDescription('The threshold above which XPI (Cross Polar Interference) exceeded seconds will be counted')
genEquipPmRadioXPITable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 6), )
if mibBuilder.loadTexts: genEquipPmRadioXPITable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioXPITable.setDescription('Radio XPIC PM')
genEquipPmRadioXPIEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 6, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmRadioXPIPmType"), (0, "IF-MIB", "ifIndex"), (0, "MWRM-PM-MIB", "genEquipPmRadioXPIPmInterval"))
if mibBuilder.loadTexts: genEquipPmRadioXPIEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioXPIEntry.setDescription('Radio XPIC PM')
genEquipPmRadioXPIPmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 6, 1, 1), PmTableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioXPIPmType.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioXPIPmType.setDescription('The interval of the PM')
genEquipPmRadioXPIPmInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioXPIPmInterval.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioXPIPmInterval.setDescription('The number of the interval: 1-30 in case the interval is 24 hours or 1-900 in case the interval is 15 minutes')
genEquipPmRadioXPIPmMinXPI = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioXPIPmMinXPI.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioXPIPmMinXPI.setDescription('This parameter holds the minimum XPI value detected in the interval')
genEquipPmRadioXPIPmMaxXPI = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioXPIPmMaxXPI.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioXPIPmMaxXPI.setDescription('This parameter holds the maximum XPI value detected in the interval')
genEquipPmRadioXPIBelowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioXPIBelowThreshold.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioXPIBelowThreshold.setDescription('This parameter holds the number of seconds in the interval that the XPI value was below the configured threshold.')
genEquipPmRadioXPIIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 6, 1, 6), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmRadioXPIIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioXPIIDF.setDescription('This value indicates if the IDF (Invalid Data Flag), was set.')
genEquipPmRadioClear = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 4, 7), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmRadioClear.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmRadioClear.setDescription('Clear all radio PMs (Performance Monitoring).')
genEquipPmTDM = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 5))
genEquipPmTdmTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 5, 1), )
if mibBuilder.loadTexts: genEquipPmTdmTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTdmTable.setDescription('The line TDM PM table')
genEquipPmTdmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 5, 1, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmTdmPmType"), (0, "IF-MIB", "ifIndex"), (0, "MWRM-PM-MIB", "genEquipPmTdmInterval"))
if mibBuilder.loadTexts: genEquipPmTdmEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTdmEntry.setDescription('The line TDM PM table')
genEquipPmTdmPmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 5, 1, 1, 1), PmTableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTdmPmType.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTdmPmType.setDescription('This value indicates the PM Type table to access, 15 min, current 15 min, 24 hours or current 24 hours')
genEquipPmTdmInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTdmInterval.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTdmInterval.setDescription('The interval of the PM')
genEquipPmTdmES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTdmES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTdmES.setDescription('ES PM (Errored second)')
genEquipPmTdmSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 5, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTdmSES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTdmSES.setDescription('SES PM (Severe Errored Seconds)')
genEquipPmTdmUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTdmUAS.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTdmUAS.setDescription('UAS PM (Unavailable Seconds).')
genEquipPmTdmBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 5, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTdmBBE.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTdmBBE.setDescription('BBE PM (Background Block Errors)')
genEquipPmTdmIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 5, 1, 1, 7), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTdmIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTdmIDF.setDescription('This value indicates if the IDF (Invalid Data Flag), was set.')
genEquipPmSDH = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6))
genEquipPmSdhTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 1), )
if mibBuilder.loadTexts: genEquipPmSdhTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhTable.setDescription('The line SDH PM table.')
genEquipPmSdhEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 1, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmSdhPmType"), (0, "IF-MIB", "ifIndex"), (0, "MWRM-PM-MIB", "genEquipPmSdhInterval"))
if mibBuilder.loadTexts: genEquipPmSdhEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhEntry.setDescription('The line SDH PM table.')
genEquipPmSdhPmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 1, 1, 1), PmTableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhPmType.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhPmType.setDescription('This value indicates the PM Type table to access, 15 min, current 15 min, 24 hours or current 24 hours.')
genEquipPmSdhInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhInterval.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhInterval.setDescription('The interval of the PM.')
genEquipPmSdhES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhES.setDescription('ES STM-1/OC-3 PM.')
genEquipPmSdhSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhSES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhSES.setDescription('SES STM-1/OC-3 PM.')
genEquipPmSdhEB = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhEB.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhEB.setDescription('EB STM-1/OC-3 PM (Errored block).')
genEquipPmSdhBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhBBE.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhBBE.setDescription('BBE PM (background errored block STM-1/OC-3 PM or CVL PM (code violation line) when using OC-3.')
genEquipPmSdhIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 1, 1, 7), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhIDF.setDescription('This value indicates if the IDF (Invalid Data Flag), was set.')
genEquipPmSdhIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhIfIndex.setDescription('Port Number.')
genEquipPmSdhTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhTimeStamp.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhTimeStamp.setDescription('This value indicates the time stamp of the interval.')
genEquipPmSdhUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhUAS.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhUAS.setDescription('Un-Available Seconds STM-1/OC-3 PM.')
genEquipPmSdhRstLRTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 2), )
if mibBuilder.loadTexts: genEquipPmSdhRstLRTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstLRTable.setDescription('SONET/STM-1 interface-level PMs for line to radio direction.')
genEquipPmSdhRstLREntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 2, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmSdhRstLRPmType"), (0, "MWRM-PM-MIB", "genEquipPmSdhRstLRIfIndex"), (0, "MWRM-PM-MIB", "genEquipPmSdhRstLRInterval"))
if mibBuilder.loadTexts: genEquipPmSdhRstLREntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstLREntry.setDescription('SONET/STM-1 interface-level PMs for line to radio direction entry.')
genEquipPmSdhRstLRPmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 2, 1, 1), PmTableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstLRPmType.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstLRPmType.setDescription('This value indicates the PM Type table to access, 15 min, current 15 min, 24 hours or current 24 hours.')
genEquipPmSdhRstLRIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstLRIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstLRIfIndex.setDescription('Port number.')
genEquipPmSdhRstLRInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstLRInterval.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstLRInterval.setDescription('The interval of the PM.')
genEquipPmSdhRstLRTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstLRTimeStamp.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstLRTimeStamp.setDescription('This value indicates the time stamp of the interval.')
genEquipPmSdhRstLRES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstLRES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstLRES.setDescription('Errored Seconds PM for STM-1/OC-3 on line to radio direction.')
genEquipPmSdhRstLRSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstLRSES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstLRSES.setDescription('Severely Errored Seconds PM for STM-1/OC-3 on line to radio direction.')
genEquipPmSdhRstLRUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstLRUAS.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstLRUAS.setDescription('Unavailable Seconds PM for STM-1/OC-3.')
genEquipPmSdhRstLREB = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstLREB.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstLREB.setDescription('Errored Blocks PM for STM-1/OC-3 on line to radio direction.')
genEquipPmSdhRstLRCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstLRCV.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstLRCV.setDescription('Code Viloations PM for STM-1/OC-3 on line to radio direction.')
genEquipPmSdhRstLRBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstLRBBE.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstLRBBE.setDescription('Background Block Error PM for STM-1/OC-3 on line to radio direction.')
genEquipPmSdhRstLRIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 2, 1, 11), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstLRIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstLRIDF.setDescription('This value indicates if the IDF (Invalid Data Flag), was set.')
genEquipPmSdhRstRLTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 3), )
if mibBuilder.loadTexts: genEquipPmSdhRstRLTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstRLTable.setDescription('SONET/STM-1 interface-level PMs for radio to line direction.')
genEquipPmSdhRstRLEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 3, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmSdhRstRLPmType"), (0, "MWRM-PM-MIB", "genEquipPmSdhRstRLIfIndex"), (0, "MWRM-PM-MIB", "genEquipPmSdhRstRLInterval"))
if mibBuilder.loadTexts: genEquipPmSdhRstRLEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstRLEntry.setDescription('SONET/STM-1 interface-level PMs for radio to line direction entry.')
genEquipPmSdhRstRLPmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 3, 1, 1), PmTableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstRLPmType.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstRLPmType.setDescription('This value indicates the PM Type table to access, 15 min, current 15 min, 24 hours or current 24 hours.')
genEquipPmSdhRstRLIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstRLIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstRLIfIndex.setDescription('Port number.')
genEquipPmSdhRstRLInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstRLInterval.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstRLInterval.setDescription('The interval of the PM.')
genEquipPmSdhRstRLTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstRLTimeStamp.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstRLTimeStamp.setDescription('This value indicates the time stamp of the interval.')
genEquipPmSdhRstRLES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstRLES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstRLES.setDescription('Errored Seconds PM for STM-1/OC-3 on radio to line direction.')
genEquipPmSdhRstRLSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstRLSES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstRLSES.setDescription('Severely Errored Seconds PM for STM-1/OC-3 on radio to line direction.')
genEquipPmSdhRstRLUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstRLUAS.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstRLUAS.setDescription('Unavailable Seconds PM for STM-1/OC-3.')
genEquipPmSdhRstRLEB = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstRLEB.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstRLEB.setDescription('Errored Blocks PM for STM-1/OC-3 on radio to line direction.')
genEquipPmSdhRstRLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstRLCV.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstRLCV.setDescription('Code Viloations PM for STM-1/OC-3 on radio to line direction.')
genEquipPmSdhRstRLBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstRLBBE.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstRLBBE.setDescription('Background Block Error PM for STM-1/OC-3 on radio to line direction.')
genEquipPmSdhRstRLIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 6, 3, 1, 11), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmSdhRstRLIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmSdhRstRLIDF.setDescription('This value indicates if the IDF (Invalid Data Flag), was set.')
genEquipPmTrails = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 7))
genEquipPmTrailsEndPointTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 7, 1), )
if mibBuilder.loadTexts: genEquipPmTrailsEndPointTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrailsEndPointTable.setDescription('PM table of the E1/T1 trails.')
genEquipPmTrailsEndPointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 7, 1, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmTrailsEndPointPmType"), (0, "MWRM-PM-MIB", "genEquipPmTrailsEndPointId"), (0, "MWRM-PM-MIB", "genEquipPmTrailsEndPointEPId"), (0, "MWRM-PM-MIB", "genEquipPmTrailsEndPointInterval"))
if mibBuilder.loadTexts: genEquipPmTrailsEndPointEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrailsEndPointEntry.setDescription('PM table of the E1/T1 trails.')
genEquipPmTrailsEndPointPmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 7, 1, 1, 1), PmTableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrailsEndPointPmType.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrailsEndPointPmType.setDescription('This value indicates the PM Type table to access, 15 min, current 15 min, 24 hours or current 24 hours.')
genEquipPmTrailsEndPointId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrailsEndPointId.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrailsEndPointId.setDescription('This value indicates the trail id.')
genEquipPmTrailsEndPointEPId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 7, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrailsEndPointEPId.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrailsEndPointEPId.setDescription('This value indicates the end point number for this trail. If the trail is protected, there will be two end points for the trail (primary path and the secondary path).')
genEquipPmTrailsEndPointInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 7, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrailsEndPointInterval.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrailsEndPointInterval.setDescription('The interval of the PM.')
genEquipPmTrailsEndPointES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 7, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrailsEndPointES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrailsEndPointES.setDescription('ES PM (Errored Seconds).')
genEquipPmTrailsEndPointSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 7, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrailsEndPointSES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrailsEndPointSES.setDescription('SES PM (Severe Errored Seconds).')
genEquipPmTrailsEndPointUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 7, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrailsEndPointUAS.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrailsEndPointUAS.setDescription('UAS PM (Unavailable Seconds).')
genEquipPmTrailsEndPointBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 7, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrailsEndPointBBE.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrailsEndPointBBE.setDescription('BBE PM (Background Block Errors).')
genEquipPmTrailsEndPointNoOfSwitches = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 7, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrailsEndPointNoOfSwitches.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrailsEndPointNoOfSwitches.setDescription('A counter of the number of SNCP switches (between primary and secondary paths) that trail had in the relevant interval.')
genEquipPmTrailsEndPointActivePathCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 7, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrailsEndPointActivePathCounts.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrailsEndPointActivePathCounts.setDescription('Active path seconds. ')
genEquipPmTrailsEndPointIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 7, 1, 1, 11), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmTrailsEndPointIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmTrailsEndPointIDF.setDescription('This value indicates if the IDF (Invalid Data Flag), was set.')
genEquipPmPW = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8))
genEquipPmPWTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 1), )
if mibBuilder.loadTexts: genEquipPmPWTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmPWTable.setDescription('This table shows standard pseudowire-level PM measurements. Notice that PMs at the TDM port level are maintained separately.')
genEquipPmPWEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 1, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmPWPmType"), (0, "MWRM-PM-MIB", "genEquipPmPWId"), (0, "MWRM-PM-MIB", "genEquipPmPWInterval"))
if mibBuilder.loadTexts: genEquipPmPWEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmPWEntry.setDescription('This table shows standard pseudowire-level PM measurements. Notice that PMs at the TDM port level are maintained separately.')
genEquipPmPWPmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 1, 1, 1), PmTableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmPWPmType.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmPWPmType.setDescription('This value indicates the PM Type table to access, 15 min, current 15 min, 24 hours or current 24 hours.')
genEquipPmPWId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmPWId.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmPWId.setDescription('This value indicates the trail id.')
genEquipPmPWInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmPWInterval.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmPWInterval.setDescription('The interval of the PM.')
genEquipPmPWMissingPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmPWMissingPkts.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmPWMissingPkts.setDescription('Number of missing packets (as detected via control word sequence number gaps).')
genEquipPmPWPktsReOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmPWPktsReOrder.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmPWPktsReOrder.setDescription('Number of packets detected out of sequence (via control word sequence number) but successfully re-ordered.')
genEquipPmPWtrBfrUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmPWtrBfrUnderruns.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmPWtrBfrUnderruns.setDescription('Number of times a packet needed to be played out and the jitter buffer was empty.')
genEquipPmPWMisOrderDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmPWMisOrderDropped.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmPWMisOrderDropped.setDescription('Number of packets detected out of order (via control word sequence numbers) that could not be re-ordered or could not fit in the jitter buffer.')
genEquipPmPWMalformedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmPWMalformedPkt.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmPWMalformedPkt.setDescription("Number of packets detected with unexpected size, or bad headers' stack.")
genEquipPmPWES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmPWES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmPWES.setDescription('ES PM (Errored Seconds).')
genEquipPmPWSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmPWSES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmPWSES.setDescription('SES PM (Severe Errored Seconds).')
genEquipPmPWUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmPWUAS.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmPWUAS.setDescription('UAS PM (Unavailable Seconds).')
genEquipPmPWFC = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmPWFC.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmPWFC.setDescription('FC (Failure Counts) PM. A failure is a LOPS event.')
genEquipPmPWIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 1, 1, 13), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmPWIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmPWIDF.setDescription('This value indicates if the IDF (Invalid Data Flag), was set.')
genEquipPmNGPWTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 2), )
if mibBuilder.loadTexts: genEquipPmNGPWTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmNGPWTable.setDescription('This table contains PW Performance Monitoring counters.')
genEquipPmNGPWEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 2, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmNGPWPmType"), (0, "MWRM-PM-MIB", "genEquipPmNGPWIfIndex"), (0, "MWRM-PM-MIB", "genEquipPmNGPWInterval"))
if mibBuilder.loadTexts: genEquipPmNGPWEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmNGPWEntry.setDescription('This table entry contains PW Performance Monitoring counters.')
genEquipPmNGPWPmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 2, 1, 1), PmTableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmNGPWPmType.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmNGPWPmType.setDescription('This value indicates the PM Type table to access, 15 min, current 15 min, 24 hours or current 24 hours.')
genEquipPmNGPWIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmNGPWIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmNGPWIfIndex.setDescription('This value indicates the interface Index.')
genEquipPmNGPWInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmNGPWInterval.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmNGPWInterval.setDescription('The interval of the PM.')
genEquipPmNGPWES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmNGPWES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmNGPWES.setDescription('ES (Errored Seconds) PM.')
genEquipPmNGPWSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmNGPWSES.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmNGPWSES.setDescription('SES (Severe Errored Seconds) PM.')
genEquipPmNGPWUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmNGPWUAS.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmNGPWUAS.setDescription('UAS (Unavailable Seconds) PM.')
genEquipPmNGPWFC = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmNGPWFC.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmNGPWFC.setDescription('FC (Failure Counts) PM. A failure is a LOPS event.')
genEquipPmNGPWFER = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmNGPWFER.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmNGPWFER.setDescription('Frame Error Ratio.')
genEquipPmNGPWMissingPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmNGPWMissingPkts.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmNGPWMissingPkts.setDescription('Number of missing packets (as detected via control word sequence number gaps).')
genEquipPmNGPWPktsReOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmNGPWPktsReOrder.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmNGPWPktsReOrder.setDescription('Number of packets detected out of sequence (via control word sequence number) but successfully re-ordered.')
genEquipPmNGPWMisOrderDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmNGPWMisOrderDropped.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmNGPWMisOrderDropped.setDescription('Number of packets detected out of order (via control word sequence numbers) that could not be re-ordered or could not fit in the jitter buffer.')
genEquipPmNGPWMalformedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmNGPWMalformedPkt.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmNGPWMalformedPkt.setDescription("Number of packets detected with unexpected size, or bad headers' stack.")
genEquipPmNGPWIdf = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 8, 2, 1, 13), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmNGPWIdf.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmNGPWIdf.setDescription('This value indicates if the IDF (Invalid Data Flag), was set.')
genEquipPmEthUtilization = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 9))
genEquipPmEthUtilizationAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 9, 1), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmEthUtilizationAdmin.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthUtilizationAdmin.setDescription('Ethernet port utilization PM admin')
genEquipPmEthUtilizationThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 9, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmEthUtilizationThreshold.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthUtilizationThreshold.setDescription('User defined threshold for Ethernet port utilization PM.')
genEquipPmEthUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 9, 3), )
if mibBuilder.loadTexts: genEquipPmEthUtilizationTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthUtilizationTable.setDescription('The Ethernet ports Utilization PMs')
genEquipPmEthUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 9, 3, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmEthUtilizationPmType"), (0, "IF-MIB", "ifIndex"), (0, "MWRM-PM-MIB", "genEquipPmEthUtilizationInterval"))
if mibBuilder.loadTexts: genEquipPmEthUtilizationEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthUtilizationEntry.setDescription('The Ethernet ports Utilization PMs')
genEquipPmEthUtilizationPmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 9, 3, 1, 1), PmTableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthUtilizationPmType.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthUtilizationPmType.setDescription('This value indicates the PM Type table to access, 15 min, current 15 min, 24 hours or current 24 hours')
genEquipPmEthUtilizationInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 9, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthUtilizationInterval.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthUtilizationInterval.setDescription('The interval of the PM')
genEquipPmEthUtilizationPeakUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 9, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthUtilizationPeakUtilization.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthUtilizationPeakUtilization.setDescription('Peak Ethernet port utilization of the current interval.')
genEquipPmEthUtilizationAverageUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 9, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthUtilizationAverageUtilization.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthUtilizationAverageUtilization.setDescription('Average Ethernet port utilization of the current interval.')
genEquipPmEthUtilizationExceedUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 9, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthUtilizationExceedUtilization.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthUtilizationExceedUtilization.setDescription('Number of seconds in current interval when Ethernet port utilization exceeded the user defined threshold.')
genEquipPmEthUtilizationIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 9, 3, 1, 6), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthUtilizationIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthUtilizationIDF.setDescription('This value indicates if the IDF (Invalid Data Flag), was set.')
genEquipPmEthernetIngressPolicer = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10))
genEquipPmEthernetIngressPolicerUnicastStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 1), )
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsTable.setDescription('logical Interface unicast policer statistics.')
genEquipPmEthernetIngressPolicerUnicastStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 1, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmEthernetIngressPolicerUnicastStatisticsIfIndex"))
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsEntry.setDescription('logical Interface unicast policer statistics.')
genEquipPmEthernetIngressPolicerUnicastStatisticsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsIfIndex.setDescription('Ethernet Logical port if-index table key')
genEquipPmEthernetIngressPolicerUnicastStatisticsClearOnRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 1, 1, 2), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsClearOnRead.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsClearOnRead.setDescription('Clear counter statistics after reading.')
genEquipPmEthernetIngressPolicerUnicastStatisticsGreenPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsGreenPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsGreenPacket.setDescription('The number of packets that were counted as green.')
genEquipPmEthernetIngressPolicerUnicastStatisticsGreenBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsGreenBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsGreenBytes.setDescription('The number of bytes that were counted as green.')
genEquipPmEthernetIngressPolicerUnicastStatisticsYellowPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsYellowPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsYellowPacket.setDescription('The number of packets that were counted as yellow.')
genEquipPmEthernetIngressPolicerUnicastStatisticsYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsYellowBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsYellowBytes.setDescription('The number of bytes that were counted as yellow.')
genEquipPmEthernetIngressPolicerUnicastStatisticsRedPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsRedPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsRedPacket.setDescription('The number of packets that were counted as red.')
genEquipPmEthernetIngressPolicerUnicastStatisticsRedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsRedBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerUnicastStatisticsRedBytes.setDescription('The number of bytes that were counted as red.')
genEquipPmEthernetIngressPolicerMulticastStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 2), )
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsTable.setDescription('Logical Port multicast policer statistics.')
genEquipPmEthernetIngressPolicerMulticastStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 2, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmEthernetIngressPolicerMulticastStatisticsIfIndex"))
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsEntry.setDescription('Logical Port multicast policer statistics.')
genEquipPmEthernetIngressPolicerMulticastStatisticsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsIfIndex.setDescription('Ethernet Logical port if-index table key')
genEquipPmEthernetIngressPolicerMulticastStatisticsClearOnRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 2, 1, 2), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsClearOnRead.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsClearOnRead.setDescription('Clear counter statistics after reading.')
genEquipPmEthernetIngressPolicerMulticastStatisticsGreenPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsGreenPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsGreenPacket.setDescription('The number of packets that were counted as green.')
genEquipPmEthernetIngressPolicerMulticastStatisticsGreenBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsGreenBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsGreenBytes.setDescription('The number of bytes that were counted as green.')
genEquipPmEthernetIngressPolicerMulticastStatisticsYellowPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsYellowPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsYellowPacket.setDescription('The number of packets that were counted as yellow.')
genEquipPmEthernetIngressPolicerMulticastStatisticsYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsYellowBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsYellowBytes.setDescription('The number of bytes that were counted as yellow.')
genEquipPmEthernetIngressPolicerMulticastStatisticsRedPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsRedPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsRedPacket.setDescription('The number of packets that were counted as red.')
genEquipPmEthernetIngressPolicerMulticastStatisticsRedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsRedBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerMulticastStatisticsRedBytes.setDescription('The number of bytes that were counted as red.')
genEquipPmEthernetIngressPolicerBroadcastStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 3), )
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsTable.setDescription('Interface Logical Port broadcast policer statistics.')
genEquipPmEthernetIngressPolicerBroadcastStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 3, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmEthernetIngressPolicerBroadcastStatisticsIfIndex"))
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsEntry.setDescription('Interface Logical Port broadcast policer statistics.')
genEquipPmEthernetIngressPolicerBroadcastStatisticsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsIfIndex.setDescription('Ethernet Logical port if-index table key')
genEquipPmEthernetIngressPolicerBroadcastStatisticsClearOnRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 3, 1, 2), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsClearOnRead.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsClearOnRead.setDescription('Clear counter statistics after reading.')
genEquipPmEthernetIngressPolicerBroadcastStatisticsGreenPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsGreenPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsGreenPacket.setDescription('The number of packets that were counted as green.')
genEquipPmEthernetIngressPolicerBroadcastStatisticsGreenBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsGreenBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsGreenBytes.setDescription('The number of bytes that were counted as green.')
genEquipPmEthernetIngressPolicerBroadcastStatisticsYellowPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsYellowPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsYellowPacket.setDescription('The number of packets that were counted as yellow.')
genEquipPmEthernetIngressPolicerBroadcastStatisticsYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsYellowBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsYellowBytes.setDescription('The number of bytes that were counted as yellow.')
genEquipPmEthernetIngressPolicerBroadcastStatisticsRedPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsRedPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsRedPacket.setDescription('The number of packets that were counted as red.')
genEquipPmEthernetIngressPolicerBroadcastStatisticsRedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsRedBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerBroadcastStatisticsRedBytes.setDescription('The number of bytes that were counted as red.')
genEquipPmEthernetIngressPolicerEtherType1StatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 4), )
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsTable.setDescription('Interface Logical Port ether Type 1 policer statistics.')
genEquipPmEthernetIngressPolicerEtherType1StatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 4, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmEthernetIngressPolicerEtherType1StatisticsIfIndex"))
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsEntry.setDescription('Interface Logical Port ether Type 1 policer statistics.')
genEquipPmEthernetIngressPolicerEtherType1StatisticsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsIfIndex.setDescription('Ethernet Logical port if-index table key')
genEquipPmEthernetIngressPolicerEtherType1StatisticsClearOnRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 4, 1, 2), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsClearOnRead.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsClearOnRead.setDescription('Clear counter statistics after reading.')
genEquipPmEthernetIngressPolicerEtherType1StatisticsGreenPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsGreenPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsGreenPacket.setDescription('The number of packets that were counted as green.')
genEquipPmEthernetIngressPolicerEtherType1StatisticsGreenBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsGreenBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsGreenBytes.setDescription('The number of bytes that were counted as green.')
genEquipPmEthernetIngressPolicerEtherType1StatisticsYellowPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsYellowPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsYellowPacket.setDescription('The number of packets that were counted as yellow.')
genEquipPmEthernetIngressPolicerEtherType1StatisticsYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsYellowBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsYellowBytes.setDescription('The number of bytes that were counted as yellow.')
genEquipPmEthernetIngressPolicerEtherType1StatisticsRedPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsRedPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsRedPacket.setDescription('The number of packets that were counted as red.')
genEquipPmEthernetIngressPolicerEtherType1StatisticsRedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsRedBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType1StatisticsRedBytes.setDescription('The number of bytes that were counted as red.')
genEquipPmEthernetIngressPolicerEtherType2StatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 5), )
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsTable.setDescription('Interface Logical Port ether Type 2 policer statistics.')
genEquipPmEthernetIngressPolicerEtherType2StatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 5, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmEthernetIngressPolicerEtherType2StatisticsIfIndex"))
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsEntry.setDescription('Interface Logical Port ether Type 2 policer statistics.')
genEquipPmEthernetIngressPolicerEtherType2StatisticsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsIfIndex.setDescription('Ethernet Logical port if-index table key')
genEquipPmEthernetIngressPolicerEtherType2StatisticsClearOnRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 5, 1, 2), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsClearOnRead.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsClearOnRead.setDescription('Clear counter statistics after reading.')
genEquipPmEthernetIngressPolicerEtherType2StatisticsGreenPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsGreenPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsGreenPacket.setDescription('The number of packets that were counted as green.')
genEquipPmEthernetIngressPolicerEtherType2StatisticsGreenBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsGreenBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsGreenBytes.setDescription('The number of bytes that were counted as green.')
genEquipPmEthernetIngressPolicerEtherType2StatisticsYellowPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsYellowPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsYellowPacket.setDescription('The number of packets that were counted as yellow.')
genEquipPmEthernetIngressPolicerEtherType2StatisticsYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsYellowBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsYellowBytes.setDescription('The number of bytes that were counted as yellow.')
genEquipPmEthernetIngressPolicerEtherType2StatisticsRedPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsRedPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsRedPacket.setDescription('The number of packets that were counted as red.')
genEquipPmEthernetIngressPolicerEtherType2StatisticsRedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsRedBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType2StatisticsRedBytes.setDescription('The number of bytes that were counted as red.')
genEquipPmEthernetIngressPolicerEtherType3StatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 6), )
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsTable.setDescription('Interface Logical Port ether Type 3 policer statistics.')
genEquipPmEthernetIngressPolicerEtherType3StatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 6, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmEthernetIngressPolicerEtherType3StatisticsIfIndex"))
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsEntry.setDescription('Interface Logical Port ether Type 3 policer statistics.')
genEquipPmEthernetIngressPolicerEtherType3StatisticsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsIfIndex.setDescription('Ethernet Logical port if-index table key')
genEquipPmEthernetIngressPolicerEtherType3StatisticsClearOnRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 6, 1, 2), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsClearOnRead.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsClearOnRead.setDescription('Clear counter statistics after reading.')
genEquipPmEthernetIngressPolicerEtherType3StatisticsGreenPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsGreenPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsGreenPacket.setDescription('The number of packets that were counted as green.')
genEquipPmEthernetIngressPolicerEtherType3StatisticsGreenBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsGreenBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsGreenBytes.setDescription('The number of bytes that were counted as green.')
genEquipPmEthernetIngressPolicerEtherType3StatisticsYellowPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsYellowPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsYellowPacket.setDescription('The number of packets that were counted as yellow.')
genEquipPmEthernetIngressPolicerEtherType3StatisticsYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsYellowBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsYellowBytes.setDescription('The number of bytes that were counted as yellow.')
genEquipPmEthernetIngressPolicerEtherType3StatisticsRedPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsRedPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsRedPacket.setDescription('The number of packets that were counted as red.')
genEquipPmEthernetIngressPolicerEtherType3StatisticsRedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 10, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsRedBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetIngressPolicerEtherType3StatisticsRedBytes.setDescription('The number of bytes that were counted as red.')
genEquipPmEthernetRmonStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11), )
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTable.setDescription('Interface physical Port RMON statistics.')
genEquipPmEthernetRmonStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmEthernetRmonStatisticsIfIndex"))
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsEntry.setDescription('Interface physical Port RMON statistics.')
genEquipPmEthernetRmonStatisticsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsIfIndex.setDescription('Ethernet Physical port if-index table key')
genEquipPmEthernetRmonStatisticsClearOnRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 2), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsClearOnRead.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsClearOnRead.setDescription('Clear on read')
genEquipPmEthernetRmonStatisticsTxByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxByteCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxByteCount.setDescription('TX byte count')
genEquipPmEthernetRmonStatisticsTxFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxFrameCount.setDescription('TX frame count')
genEquipPmEthernetRmonStatisticsTxMulticastFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxMulticastFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxMulticastFrameCount.setDescription('TX multicast frame count')
genEquipPmEthernetRmonStatisticsTxBroadcastFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxBroadcastFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxBroadcastFrameCount.setDescription('TX broadcast frame count')
genEquipPmEthernetRmonStatisticsTxControlFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxControlFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxControlFrameCount.setDescription('TX control frame count')
genEquipPmEthernetRmonStatisticsTxPauseFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxPauseFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxPauseFrameCount.setDescription('TX pause frame count')
genEquipPmEthernetRmonStatisticsTxFcsErrorFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxFcsErrorFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxFcsErrorFrameCount.setDescription('TX fcs error frame count')
genEquipPmEthernetRmonStatisticsTxLengthErrorFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxLengthErrorFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxLengthErrorFrameCount.setDescription('TX length error frame count')
genEquipPmEthernetRmonStatisticsTxOversizeFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxOversizeFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxOversizeFrameCount.setDescription('TX oversize frame count')
genEquipPmEthernetRmonStatisticsTxUndersizeFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxUndersizeFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxUndersizeFrameCount.setDescription('TX undersize frame count')
genEquipPmEthernetRmonStatisticsTxFragmentFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxFragmentFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxFragmentFrameCount.setDescription('TX fragment frame count')
genEquipPmEthernetRmonStatisticsTxJabberFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxJabberFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTxJabberFrameCount.setDescription('TX jabber frame count')
genEquipPmEthernetRmonStatisticsTx64FrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTx64FrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTx64FrameCount.setDescription('TX 64 frame count')
genEquipPmEthernetRmonStatisticsTx65_127FrameCount = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 16), Counter32()).setLabel("genEquipPmEthernetRmonStatisticsTx65-127FrameCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTx65_127FrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTx65_127FrameCount.setDescription('TX 65-127 frame count')
genEquipPmEthernetRmonStatisticsTx128_255FrameCount = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 17), Counter32()).setLabel("genEquipPmEthernetRmonStatisticsTx128-255FrameCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTx128_255FrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTx128_255FrameCount.setDescription('TX 128-255 frame count')
genEquipPmEthernetRmonStatisticsTx256_511FrameCount = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 18), Counter32()).setLabel("genEquipPmEthernetRmonStatisticsTx256-511FrameCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTx256_511FrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTx256_511FrameCount.setDescription('TX 256-511 frame count')
genEquipPmEthernetRmonStatisticsTx512_1023FrameCount = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 19), Counter32()).setLabel("genEquipPmEthernetRmonStatisticsTx512-1023FrameCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTx512_1023FrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTx512_1023FrameCount.setDescription('TX 512-1023 frame count')
genEquipPmEthernetRmonStatisticsTx1024_1518FrameCount = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 20), Counter32()).setLabel("genEquipPmEthernetRmonStatisticsTx1024-1518FrameCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTx1024_1518FrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTx1024_1518FrameCount.setDescription('TX 1024-1518 frame count')
genEquipPmEthernetRmonStatisticsTx1519_1522FrameCount = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 21), Counter32()).setLabel("genEquipPmEthernetRmonStatisticsTx1519-1522FrameCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTx1519_1522FrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsTx1519_1522FrameCount.setDescription('TX 1519-1522 frame count')
genEquipPmEthernetRmonStatisticsRxByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxByteCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxByteCount.setDescription('RX byte count')
genEquipPmEthernetRmonStatisticsRxFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxFrameCount.setDescription('RX frame count')
genEquipPmEthernetRmonStatisticsRxMulticastFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxMulticastFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxMulticastFrameCount.setDescription('RX multicast frame count')
genEquipPmEthernetRmonStatisticsRxBroadcastFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxBroadcastFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxBroadcastFrameCount.setDescription('RX broadcast frame count')
genEquipPmEthernetRmonStatisticsRxControlFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxControlFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxControlFrameCount.setDescription('RX control frame count')
genEquipPmEthernetRmonStatisticsRxPauseFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxPauseFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxPauseFrameCount.setDescription('RX pause frame count')
genEquipPmEthernetRmonStatisticsRxFcsErrorFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxFcsErrorFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxFcsErrorFrameCount.setDescription('RX fcs error frame count')
genEquipPmEthernetRmonStatisticsRxLengthErrorFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxLengthErrorFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxLengthErrorFrameCount.setDescription('RX length error frame count')
genEquipPmEthernetRmonStatisticsRxcode_ErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 30), Counter32()).setLabel("genEquipPmEthernetRmonStatisticsRxcode-ErrorCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxcode_ErrorCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxcode_ErrorCount.setDescription('RX code error count')
genEquipPmEthernetRmonStatisticsRxoversizeFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxoversizeFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxoversizeFrameCount.setDescription('RX oversize frame count')
genEquipPmEthernetRmonStatisticsRxundersize_ErrorFrameCount = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 32), Counter32()).setLabel("genEquipPmEthernetRmonStatisticsRxundersize-ErrorFrameCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxundersize_ErrorFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxundersize_ErrorFrameCount.setDescription('RX undersize error frame count')
genEquipPmEthernetRmonStatisticsRxFragmentFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxFragmentFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxFragmentFrameCount.setDescription('RX fragment frame count')
genEquipPmEthernetRmonStatisticsRx64FrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRx64FrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRx64FrameCount.setDescription('RX 64 frame count')
genEquipPmEthernetRmonStatisticsRx65_127FrameCount = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 36), Counter32()).setLabel("genEquipPmEthernetRmonStatisticsRx65-127FrameCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRx65_127FrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRx65_127FrameCount.setDescription('RX 65-127 frame count')
genEquipPmEthernetRmonStatisticsRx128_255FrameCount = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 37), Counter32()).setLabel("genEquipPmEthernetRmonStatisticsRx128-255FrameCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRx128_255FrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRx128_255FrameCount.setDescription('RX 128-255 frame count')
genEquipPmEthernetRmonStatisticsRx256_511FrameCount = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 38), Counter32()).setLabel("genEquipPmEthernetRmonStatisticsRx256-511FrameCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRx256_511FrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRx256_511FrameCount.setDescription('RX 256-511 frame count')
genEquipPmEthernetRmonStatisticsRx512_1023FrameCount = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 39), Counter32()).setLabel("genEquipPmEthernetRmonStatisticsRx512-1023FrameCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRx512_1023FrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRx512_1023FrameCount.setDescription('RX 512-1023 frame count')
genEquipPmEthernetRmonStatisticsRx1024_1518FrameCount = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 40), Counter32()).setLabel("genEquipPmEthernetRmonStatisticsRx1024-1518FrameCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRx1024_1518FrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRx1024_1518FrameCount.setDescription('RX 1024-1518 frame count')
genEquipPmEthernetRmonStatisticsRx1519_1522FrameCount = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 41), Counter32()).setLabel("genEquipPmEthernetRmonStatisticsRx1519-1522FrameCount").setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRx1519_1522FrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRx1519_1522FrameCount.setDescription('RX 1519-1522 frame count')
genEquipPmEthernetRmonStatisticsRxExceedmaxFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxExceedmaxFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxExceedmaxFrameCount.setDescription('RX exceed max frame count')
genEquipPmEthernetRmonStatisticsRxExceedMaxWithErrorFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxExceedMaxWithErrorFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxExceedMaxWithErrorFrameCount.setDescription('RX exceed max with error frame count')
genEquipPmEthernetRmonStatisticsRxJabberFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 11, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxJabberFrameCount.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetRmonStatisticsRxJabberFrameCount.setDescription('RX jabber frame count - frames with length &gt; 1518 bytes (1522 bytes for VLAN tagged frames) with errors')
genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 12), )
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTable.setDescription('Service queues aggragation statistics.')
genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 12, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsIfIndex"), (0, "MWRM-PM-MIB", "genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsServiceIndex"))
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsEntry.setDescription('Service queues aggragation statistics.')
genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsIfIndex.setDescription('ifIndex')
genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsServiceIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsServiceIndex.setDescription('Egress service bundle ID')
genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsClearOnRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 12, 1, 3), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsClearOnRead.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsClearOnRead.setDescription('clear on read')
genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedGreenPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 12, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedGreenPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedGreenPacket.setDescription('transmitted green packet')
genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedGreenBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 12, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedGreenBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedGreenBytes.setDescription('transmitted green bytes')
genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedGreenBitsPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 12, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedGreenBitsPerSecond.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedGreenBitsPerSecond.setDescription('transmitted green bits per second')
genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedGreenPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 12, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedGreenPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedGreenPacket.setDescription('dropped green packet')
genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedGreenBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 12, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedGreenBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedGreenBytes.setDescription('dropped green bytes')
genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedYellowPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 12, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedYellowPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedYellowPacket.setDescription('transmitted yellow packet')
genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 12, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedYellowBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedYellowBytes.setDescription('transmitted yellow bytes')
genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedYellowBitsPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 12, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedYellowBitsPerSecond.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedYellowBitsPerSecond.setDescription('transmitted yellow bits per second')
genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedYellowPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 12, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedYellowPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedYellowPacket.setDescription('Tdropped yellow packet')
genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 12, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedYellowBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedYellowBytes.setDescription('dropped yellow bytes')
genEquipServicesCetSpPmCosIngressPolicerStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 13), )
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatisticsTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatisticsTable.setDescription('Cos Service Point ingress Policer statistics.')
genEquipServicesCetSpPmCosIngressPolicerStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 13, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipServicesCetSpPmCosIngressPolicerStatiServiceIndex"), (0, "MWRM-PM-MIB", "genEquipServicesCetSpPmCosIngressPolicerStatiSpIndex"), (0, "MWRM-PM-MIB", "genEquipServicesCetSpPmCosIngressPolicerStatiCos"))
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatisticsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatisticsEntry.setDescription('Cos Service Point ingress Policer statistics.')
genEquipServicesCetSpPmCosIngressPolicerStatiServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiServiceIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiServiceIndex.setDescription('service-index')
genEquipServicesCetSpPmCosIngressPolicerStatiSpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 13, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiSpIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiSpIndex.setDescription('sp-index')
genEquipServicesCetSpPmCosIngressPolicerStatiCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 13, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiCos.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiCos.setDescription('cos index')
genEquipServicesCetSpPmCosIngressPolicerStatiClearOnRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 13, 1, 4), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiClearOnRead.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiClearOnRead.setDescription('Clear on read')
genEquipServicesCetSpPmCosIngressPolicerStatiGreenPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 13, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiGreenPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiGreenPacket.setDescription('green-packet')
genEquipServicesCetSpPmCosIngressPolicerStatiGreenBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 13, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiGreenBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiGreenBytes.setDescription('green-bytes')
genEquipServicesCetSpPmCosIngressPolicerStatiYellowPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 13, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiYellowPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiYellowPacket.setDescription('yellow-packet')
genEquipServicesCetSpPmCosIngressPolicerStatiYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 13, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiYellowBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiYellowBytes.setDescription('yellow-bytes')
genEquipServicesCetSpPmCosIngressPolicerStatiRedPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 13, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiRedPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiRedPacket.setDescription('red-packet')
genEquipServicesCetSpPmCosIngressPolicerStatiRedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 13, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiRedBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmCosIngressPolicerStatiRedBytes.setDescription('red-bytes')
genEquipServicesCetSpPmIngressPolicerStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 14), )
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatisticsTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatisticsTable.setDescription('Service Point ingress Policer statistics.')
genEquipServicesCetSpPmIngressPolicerStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 14, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipServicesCetSpPmIngressPolicerStatiServiceIndex"), (0, "MWRM-PM-MIB", "genEquipServicesCetSpPmIngressPolicerStatiSpIndex"))
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatisticsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatisticsEntry.setDescription('Service Point ingress Policer statistics.')
genEquipServicesCetSpPmIngressPolicerStatiServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatiServiceIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatiServiceIndex.setDescription('service-index')
genEquipServicesCetSpPmIngressPolicerStatiSpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 14, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatiSpIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatiSpIndex.setDescription('sp-index')
genEquipServicesCetSpPmIngressPolicerStatiClearOnRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 14, 1, 3), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatiClearOnRead.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatiClearOnRead.setDescription('Clear on read')
genEquipServicesCetSpPmIngressPolicerStatiGreenPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 14, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatiGreenPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatiGreenPacket.setDescription('green-packet')
genEquipServicesCetSpPmIngressPolicerStatiGreenBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 14, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatiGreenBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatiGreenBytes.setDescription('green-bytes')
genEquipServicesCetSpPmIngressPolicerStatiYellowPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 14, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatiYellowPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatiYellowPacket.setDescription('yellow-packet')
genEquipServicesCetSpPmIngressPolicerStatiYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 14, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatiYellowBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatiYellowBytes.setDescription('yellow-bytes')
genEquipServicesCetSpPmIngressPolicerStatiRedPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 14, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatiRedPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatiRedPacket.setDescription('red-packet')
genEquipServicesCetSpPmIngressPolicerStatiRedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 14, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatiRedBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCetSpPmIngressPolicerStatiRedBytes.setDescription('red-bytes')
genEquipServicesCETTmPmSpEgressQueueStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 15), )
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsTable.setDescription('Service Point egress queue statistics.')
genEquipServicesCETTmPmSpEgressQueueStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 15, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipServicesCETTmPmSpEgressQueueStatisticsIfIndex"), (0, "MWRM-PM-MIB", "genEquipServicesCETTmPmSpEgressQueueStatisticsServiceIndex"), (0, "MWRM-PM-MIB", "genEquipServicesCETTmPmSpEgressQueueStatisticsCosQueueIndex"))
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsEntry.setDescription('Service Point egress queue statistics.')
genEquipServicesCETTmPmSpEgressQueueStatisticsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsIfIndex.setDescription('ifindex')
genEquipServicesCETTmPmSpEgressQueueStatisticsServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsServiceIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsServiceIndex.setDescription('Servic class ID')
genEquipServicesCETTmPmSpEgressQueueStatisticsCosQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 15, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsCosQueueIndex.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsCosQueueIndex.setDescription('cos-queue-index')
genEquipServicesCETTmPmSpEgressQueueStatisticsClearOnRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 15, 1, 4), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsClearOnRead.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsClearOnRead.setDescription('Clear on read')
genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedGreenPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 15, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedGreenPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedGreenPacket.setDescription('transmitted-green-packet')
genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedGreenBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 15, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedGreenBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedGreenBytes.setDescription('transmitted-green-bytes')
genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedGreenBitsPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 15, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedGreenBitsPerSecond.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedGreenBitsPerSecond.setDescription('transmitted-green-bits-per-second')
genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedGreenPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 15, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedGreenPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedGreenPacket.setDescription('dropped-green-packet')
genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedGreenBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 15, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedGreenBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedGreenBytes.setDescription('dropped-green-bytes')
genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedYellowPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 15, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedYellowPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedYellowPacket.setDescription('transmitted-yellow-packet')
genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 15, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedYellowBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedYellowBytes.setDescription('transmitted-yellow-bytes')
genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedYellowBitsPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 15, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedYellowBitsPerSecond.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedYellowBitsPerSecond.setDescription('transmitted-yellow-bits-per-second')
genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedYellowPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 15, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedYellowPacket.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedYellowPacket.setDescription('dropped-yellow-packet')
genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 15, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedYellowBytes.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedYellowBytes.setDescription('dropped-yellow-bytes')
genEquipPmUtilization = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16))
genEquipPmUtilizationCPU = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 1))
genEquipPmUtilizationCPUAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 1, 1), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmUtilizationCPUAdmin.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationCPUAdmin.setDescription('CPU utilization PM admin')
genEquipPmUtilizationCPUThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmUtilizationCPUThreshold.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationCPUThreshold.setDescription('User defined threshold for CPU utilization PM.')
genEquipPmUtilizationCPUTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 1, 3), )
if mibBuilder.loadTexts: genEquipPmUtilizationCPUTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationCPUTable.setDescription('The CPU Utilization PMs')
genEquipPmUtilizationCPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 1, 3, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmUtilizationCPUPmType"), (0, "MWRM-PM-MIB", "genEquipPmUtilizationCPUInterval"))
if mibBuilder.loadTexts: genEquipPmUtilizationCPUEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationCPUEntry.setDescription('The CPU Utilization PMs')
genEquipPmUtilizationCPUPmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 1, 3, 1, 1), PmTableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmUtilizationCPUPmType.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationCPUPmType.setDescription('This value indicates the PM Type table to access, 15 min, current 15 min, 24 hours or current 24 hours')
genEquipPmUtilizationCPUInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmUtilizationCPUInterval.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationCPUInterval.setDescription('The interval of the PM')
genEquipPmUtilizationCPUPeakUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmUtilizationCPUPeakUtilization.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationCPUPeakUtilization.setDescription('Peak CPU utilization of the current interval.')
genEquipPmUtilizationCPUAverageUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmUtilizationCPUAverageUtilization.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationCPUAverageUtilization.setDescription('Average CPU utilization of the current interval.')
genEquipPmUtilizationCPUMinimumUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmUtilizationCPUMinimumUtilization.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationCPUMinimumUtilization.setDescription('Minimal CPU utilization of the current interval.')
genEquipPmUtilizationCPUExceedUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 1, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmUtilizationCPUExceedUtilization.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationCPUExceedUtilization.setDescription('Number of seconds in the current interval when CPU utilization exceeded user defined threshold.')
genEquipPmUtilizationCPUIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 1, 3, 1, 7), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmUtilizationCPUIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationCPUIDF.setDescription('This value indicates if the IDF (Invalid Data Flag), was set.')
genEquipPmUtilizationMem = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 2))
genEquipPmUtilizationMemAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 2, 1), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmUtilizationMemAdmin.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationMemAdmin.setDescription('Memory utilization PM admin')
genEquipPmUtilizationMemThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPmUtilizationMemThreshold.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationMemThreshold.setDescription('Memory threshold for Ethernet port utilization PM.')
genEquipPmUtilizationMemTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 2, 3), )
if mibBuilder.loadTexts: genEquipPmUtilizationMemTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationMemTable.setDescription('The Memory Utilization PMs')
genEquipPmUtilizationMemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 2, 3, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmUtilizationMemPmType"), (0, "MWRM-PM-MIB", "genEquipPmUtilizationMemInterval"))
if mibBuilder.loadTexts: genEquipPmUtilizationMemEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationMemEntry.setDescription('The Memory Utilization PMs')
genEquipPmUtilizationMemPmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 2, 3, 1, 1), PmTableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmUtilizationMemPmType.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationMemPmType.setDescription('This value indicates the PM Type table to access, 15 min, current 15 min, 24 hours or current 24 hours')
genEquipPmUtilizationMemInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmUtilizationMemInterval.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationMemInterval.setDescription('The interval of the PM')
genEquipPmUtilizationMemPeakUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmUtilizationMemPeakUtilization.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationMemPeakUtilization.setDescription('Peak Memory utilization of the current interval.')
genEquipPmUtilizationMemAverageUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 2, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmUtilizationMemAverageUtilization.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationMemAverageUtilization.setDescription('Average Memory utilization of the current interval.')
genEquipPmUtilizationMemMinimumUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 2, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmUtilizationMemMinimumUtilization.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationMemMinimumUtilization.setDescription('Number of seconds in current interval when Memory utilization exceeded the user defined threshold.')
genEquipPmUtilizationMemExceedUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 2, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmUtilizationMemExceedUtilization.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationMemExceedUtilization.setDescription('Number of seconds in current interval when Memory utilization exceeded the user defined threshold.')
genEquipPmUtilizationMemIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 16, 2, 3, 1, 7), Integrity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmUtilizationMemIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmUtilizationMemIDF.setDescription('This value indicates if the IDF (Invalid Data Flag), was set.')
genEquipPmEthernet = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17))
genEquipPmEthernetPortTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1), )
if mibBuilder.loadTexts: genEquipPmEthernetPortTable.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortTable.setDescription('PM on Ethernet port counters.')
genEquipPmEthernetPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1), ).setIndexNames((0, "MWRM-PM-MIB", "genEquipPmEthernetPortPmType"), (0, "IF-MIB", "ifIndex"), (0, "MWRM-PM-MIB", "genEquipPmEthernetPortPmInterval"))
if mibBuilder.loadTexts: genEquipPmEthernetPortEntry.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortEntry.setDescription('PM on Ethernet port counters entry.')
genEquipPmEthernetPortPmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortPmType.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortPmType.setDescription('This value indicates the PM Type table to access, 15 min, current 15 min, 24 hours or current 24 hours')
genEquipPmEthernetPortPmInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortPmInterval.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortPmInterval.setDescription('The number of the interval: 1-30 in case the interval is 24 hours or 1-96 in case the interval is 15 minutes')
genEquipPmEthernetPortRxAvgBcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortRxAvgBcastPackets.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortRxAvgBcastPackets.setDescription('Average received broadcast packets')
genEquipPmEthernetPortRxPeakBcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortRxPeakBcastPackets.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortRxPeakBcastPackets.setDescription('Peak received broadcast packets')
genEquipPmEthernetPortRxBytesLayer1ExcedThSecCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortRxBytesLayer1ExcedThSecCnt.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortRxBytesLayer1ExcedThSecCnt.setDescription('Counter of seconds in interval when received bytes in Layer1 exceeded threshold')
genEquipPmEthernetPortRxAvgBytesLayer1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortRxAvgBytesLayer1.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortRxAvgBytesLayer1.setDescription('Average received bytes in Layer1')
genEquipPmEthernetPortRxPeakBytesLayer1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortRxPeakBytesLayer1.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortRxPeakBytesLayer1.setDescription('Peak received bytes in Layer1')
genEquipPmEthernetPortRxAvgBytesLayer2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortRxAvgBytesLayer2.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortRxAvgBytesLayer2.setDescription('Average received bytes in Layer2')
genEquipPmEthernetPortRxPeakBytesLayer2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortRxPeakBytesLayer2.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortRxPeakBytesLayer2.setDescription('Peak received bytes in Layer2')
genEquipPmEthernetPortRxAvgMcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortRxAvgMcastPackets.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortRxAvgMcastPackets.setDescription('Average received multicast packets')
genEquipPmEthernetPortRxPeakMcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortRxPeakMcastPackets.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortRxPeakMcastPackets.setDescription('Peak received multicast packets')
genEquipPmEthernetPortRxAvgPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortRxAvgPackets.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortRxAvgPackets.setDescription('Average received packets')
genEquipPmEthernetPortRxPeakPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortRxPeakPackets.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortRxPeakPackets.setDescription('Peak received packets')
genEquipPmEthernetPortTxAvgBcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortTxAvgBcastPackets.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortTxAvgBcastPackets.setDescription('Average transmitted broadcast packets')
genEquipPmEthernetPortTxPeakBcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortTxPeakBcastPackets.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortTxPeakBcastPackets.setDescription('Peak transmitted broadcast packets')
genEquipPmEthernetPortTxBytesLayer1ExcedThSecCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortTxBytesLayer1ExcedThSecCnt.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortTxBytesLayer1ExcedThSecCnt.setDescription('Counter of seconds in interval when transmitted bytes in Layer1 exceeded threshold')
genEquipPmEthernetPortTxAvgBytesLayer1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortTxAvgBytesLayer1.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortTxAvgBytesLayer1.setDescription('Average transmitted bytes in Layer1')
genEquipPmEthernetPortTxPeakBytesLayer1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortTxPeakBytesLayer1.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortTxPeakBytesLayer1.setDescription('Peak transmitted bytes in Layer1')
genEquipPmEthernetPortTxAvgBytesLayer2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortTxAvgBytesLayer2.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortTxAvgBytesLayer2.setDescription('Average transmitted bytes in Layer2')
genEquipPmEthernetPortTxPeakBytesLayer2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortTxPeakBytesLayer2.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortTxPeakBytesLayer2.setDescription('Peak transmitted bytes in Layer2')
genEquipPmEthernetPortTxAvgMcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortTxAvgMcastPackets.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortTxAvgMcastPackets.setDescription('Average transmitted multicast packets')
genEquipPmEthernetPortTxPeakMcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortTxPeakMcastPackets.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortTxPeakMcastPackets.setDescription('Peak transmitted multicast packets')
genEquipPmEthernetPortTxAvgPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortTxAvgPackets.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortTxAvgPackets.setDescription('Average transmitted packets')
genEquipPmEthernetPortTxPeakPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortTxPeakPackets.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortTxPeakPackets.setDescription('Peak transmitted packets')
genEquipPmEthernetPortPmIDF = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 6, 3, 17, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPmEthernetPortPmIDF.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPmEthernetPortPmIDF.setDescription('Indicates if the performance values of the interval can be trusted')
genEquipPMStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 6, 4))
genEquipRMONResetCounters = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 4, 1), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipRMONResetCounters.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipRMONResetCounters.setDescription('Clear all Ethernet RMON counters.')
genEquipPMStatisticsResetAllL2PortPm = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 6, 4, 2), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipPMStatisticsResetAllL2PortPm.setStatus('mandatory')
if mibBuilder.loadTexts: genEquipPMStatisticsResetAllL2PortPm.setDescription('Clear all L2 port PMs.')
mibBuilder.exportSymbols("MWRM-PM-MIB", genEquipPmTrafficSLRslExceed1=genEquipPmTrafficSLRslExceed1, genEquipPmEthernetRmonStatisticsRx64FrameCount=genEquipPmEthernetRmonStatisticsRx64FrameCount, genEquipPmRadioXPIPmInterval=genEquipPmRadioXPIPmInterval, genEquipPmEthernetPortTxPeakMcastPackets=genEquipPmEthernetPortTxPeakMcastPackets, genEquipPmRadioEthernetThresholdTable=genEquipPmRadioEthernetThresholdTable, genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedGreenPacket=genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedGreenPacket, genEquipPmSdhRstLRTable=genEquipPmSdhRstLRTable, genEquipPmNGPWES=genEquipPmNGPWES, genEquipPmEthernetRmonStatisticsRx512_1023FrameCount=genEquipPmEthernetRmonStatisticsRx512_1023FrameCount, genEquipPmRfuCommonSL15minCurrRslExceed1=genEquipPmRfuCommonSL15minCurrRslExceed1, genEquipPmEthernetIngressPolicerEtherType1StatisticsEntry=genEquipPmEthernetIngressPolicerEtherType1StatisticsEntry, genEquipPmSdhEB=genEquipPmSdhEB, genEquipPmTrafficAggSES=genEquipPmTrafficAggSES, genEquipPmRadioEthernetEtmPmMaxYellowFramesPassed=genEquipPmRadioEthernetEtmPmMaxYellowFramesPassed, genEquipPmNGPWMisOrderDropped=genEquipPmNGPWMisOrderDropped, genEquipPmTrafficRadioAgg24hrTable=genEquipPmTrafficRadioAgg24hrTable, genEquipPmTrafficAggBBE=genEquipPmTrafficAggBBE, genEquipPmSdhTable=genEquipPmSdhTable, genEquipPmUtilizationMemEntry=genEquipPmUtilizationMemEntry, genEquipPmUtilizationCPUAverageUtilization=genEquipPmUtilizationCPUAverageUtilization, genEquipPmEthernetRmonStatisticsTx1519_1522FrameCount=genEquipPmEthernetRmonStatisticsTx1519_1522FrameCount, genEquipPmRfuCommonSL24hrTable=genEquipPmRfuCommonSL24hrTable, genEquipPmSdhRstLRPmType=genEquipPmSdhRstLRPmType, genEquipPmUtilizationCPUEntry=genEquipPmUtilizationCPUEntry, genEquipPmRadioTDMEntry=genEquipPmRadioTDMEntry, genEquipPmTrafficRadioAgg24hrES=genEquipPmTrafficRadioAgg24hrES, genEquipPmRadioEthernetThresholdUtilization=genEquipPmRadioEthernetThresholdUtilization, genEquipPmRadioMSEIDF=genEquipPmRadioMSEIDF, genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedGreenBytes=genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedGreenBytes, genEquipPmRfuCommonSL24hrMaxTsl=genEquipPmRfuCommonSL24hrMaxTsl, genEquipPmSdhRstRLTable=genEquipPmSdhRstRLTable, genEquipPmRfuCommonSL15minCurrEntry=genEquipPmRfuCommonSL15minCurrEntry, genEquipPmEthUtilizationInterval=genEquipPmEthUtilizationInterval, genEquipPmRadioXPIBelowThreshold=genEquipPmRadioXPIBelowThreshold, genEquipPmEthernetRmonStatisticsRxLengthErrorFrameCount=genEquipPmEthernetRmonStatisticsRxLengthErrorFrameCount, genEquipPmSdhRstRLBBE=genEquipPmSdhRstRLBBE, genEquipPmRfuCommonSL15minCurrMinRsl=genEquipPmRfuCommonSL15minCurrMinRsl, genEquipPmEthernetPortRxAvgBytesLayer1=genEquipPmEthernetPortRxAvgBytesLayer1, genEquipPmRfuCommonSL15minCurrTslExceed=genEquipPmRfuCommonSL15minCurrTslExceed, genEquipPmRfuCommonSL15minCurrRslExceed2=genEquipPmRfuCommonSL15minCurrRslExceed2, genEquipPmTrafficSLTable=genEquipPmTrafficSLTable, genEquipPmRfuCommonSL15minId=genEquipPmRfuCommonSL15minId, genEquipServicesCETTmPmSpEgressQueueStatisticsServiceIndex=genEquipServicesCETTmPmSpEgressQueueStatisticsServiceIndex, genEquipPmNGPWTable=genEquipPmNGPWTable, genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedYellowBytes=genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedYellowBytes, genEquipPmEthernetIngressPolicerEtherType2StatisticsGreenBytes=genEquipPmEthernetIngressPolicerEtherType2StatisticsGreenBytes, genEquipPmEthernetIngressPolicerUnicastStatisticsEntry=genEquipPmEthernetIngressPolicerUnicastStatisticsEntry, genEquipPmEthernetIngressPolicerBroadcastStatisticsEntry=genEquipPmEthernetIngressPolicerBroadcastStatisticsEntry, genEquipPmTrafficSLInterval=genEquipPmTrafficSLInterval, genEquipPmRfuCommonSL24hrRslExceed1=genEquipPmRfuCommonSL24hrRslExceed1, genEquipPmEthernetIngressPolicerBroadcastStatisticsClearOnRead=genEquipPmEthernetIngressPolicerBroadcastStatisticsClearOnRead, genEquipPmEthernetRmonStatisticsClearOnRead=genEquipPmEthernetRmonStatisticsClearOnRead, genEquipPmRadioEthernetEtmEntry=genEquipPmRadioEthernetEtmEntry, genEquipPmEthernetIngressPolicerEtherType1StatisticsIfIndex=genEquipPmEthernetIngressPolicerEtherType1StatisticsIfIndex, genEquipPmEthernetIngressPolicerEtherType1StatisticsYellowBytes=genEquipPmEthernetIngressPolicerEtherType1StatisticsYellowBytes, genEquipPmTrafficRadioAgg24hrCurrUAS=genEquipPmTrafficRadioAgg24hrCurrUAS, genEquipPmRfuCommonSL24hrId=genEquipPmRfuCommonSL24hrId, genEquipPmEthernetIngressPolicerEtherType1StatisticsTable=genEquipPmEthernetIngressPolicerEtherType1StatisticsTable, genEquipRMONResetCounters=genEquipRMONResetCounters, genEquipPmRadioMRMCInterval=genEquipPmRadioMRMCInterval, genEquipPmRadioEthernetEtmPmMaxGreenFramesDropped=genEquipPmRadioEthernetEtmPmMaxGreenFramesDropped, genEquipPmEthernetIngressPolicerMulticastStatisticsRedPacket=genEquipPmEthernetIngressPolicerMulticastStatisticsRedPacket, genEquipPmEthernetPortTxAvgMcastPackets=genEquipPmEthernetPortTxAvgMcastPackets, genEquipPmEthernetPortTxAvgPackets=genEquipPmEthernetPortTxAvgPackets, genEquipPmTDM=genEquipPmTDM, genEquipPmEthernetIngressPolicerEtherType3StatisticsRedPacket=genEquipPmEthernetIngressPolicerEtherType3StatisticsRedPacket, genEquipPmSdhRstRLTimeStamp=genEquipPmSdhRstRLTimeStamp, genEquipPmPWPmType=genEquipPmPWPmType, genEquipPmEthernetPortRxAvgMcastPackets=genEquipPmEthernetPortRxAvgMcastPackets, genEquipPmPW=genEquipPmPW, genEquipPmSdhRstLRIfIndex=genEquipPmSdhRstLRIfIndex, genEquipPmEthernetIngressPolicerBroadcastStatisticsTable=genEquipPmEthernetIngressPolicerBroadcastStatisticsTable, genEquipPmEthernetIngressPolicerEtherType2StatisticsYellowPacket=genEquipPmEthernetIngressPolicerEtherType2StatisticsYellowPacket, genEquipPmTrailsEndPointEPId=genEquipPmTrailsEndPointEPId, genEquipPmSdhUAS=genEquipPmSdhUAS, genEquipPmEthernetRmonStatisticsTxBroadcastFrameCount=genEquipPmEthernetRmonStatisticsTxBroadcastFrameCount, genEquipPmRfuCommonSL15minTslExceed=genEquipPmRfuCommonSL15minTslExceed, genEquipPmEthUtilizationTable=genEquipPmEthUtilizationTable, genEquipPmEthernetIngressPolicerEtherType1StatisticsRedBytes=genEquipPmEthernetIngressPolicerEtherType1StatisticsRedBytes, genEquipPmRadioThresholdRSL1=genEquipPmRadioThresholdRSL1, genEquipPmTrafficSLIDF=genEquipPmTrafficSLIDF, genEquipPmEthernetIngressPolicerEtherType1StatisticsGreenBytes=genEquipPmEthernetIngressPolicerEtherType1StatisticsGreenBytes, genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedGreenPacket=genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedGreenPacket, genEquipPmRadioMSEInterval=genEquipPmRadioMSEInterval, genEquipPmRadioThresholdEntry=genEquipPmRadioThresholdEntry, genEquipPmSdhRstRLCV=genEquipPmSdhRstRLCV, genEquipPmTrafficAggTable=genEquipPmTrafficAggTable, genEquipPmRfuCommonSL24hrRslExceed2=genEquipPmRfuCommonSL24hrRslExceed2, genEquipPmTrafficRadioAgg24hrCurrES=genEquipPmTrafficRadioAgg24hrCurrES, genEquipPmEthernetIngressPolicerEtherType3StatisticsClearOnRead=genEquipPmEthernetIngressPolicerEtherType3StatisticsClearOnRead, genEquipPmTrailsEndPointSES=genEquipPmTrailsEndPointSES, genEquipPmNGPWEntry=genEquipPmNGPWEntry, genEquipPmNGPWPmType=genEquipPmNGPWPmType, genEquipPmRadioXPITable=genEquipPmRadioXPITable, genEquipPmPWtrBfrUnderruns=genEquipPmPWtrBfrUnderruns, genEquipPmRadioEthernetThresholdEntry=genEquipPmRadioEthernetThresholdEntry, genEquipPmRadioTDMTable=genEquipPmRadioTDMTable, genEquipPmRfuCommonSL24hrTimeAndDate=genEquipPmRfuCommonSL24hrTimeAndDate, genEquipPmEthernetIngressPolicer=genEquipPmEthernetIngressPolicer, genEquipPmUtilizationMemExceedUtilization=genEquipPmUtilizationMemExceedUtilization, genEquipServicesCetSpPmCosIngressPolicerStatiServiceIndex=genEquipServicesCetSpPmCosIngressPolicerStatiServiceIndex, genEquipPmEthernetRmonStatisticsTx1024_1518FrameCount=genEquipPmEthernetRmonStatisticsTx1024_1518FrameCount, genEquipPmSdhPmType=genEquipPmSdhPmType, genEquipPmRfuCommonSL24hrCurrMaxRsl=genEquipPmRfuCommonSL24hrCurrMaxRsl, genEquipServicesCETTmPmSpEgressQueueStatisticsEntry=genEquipServicesCETTmPmSpEgressQueueStatisticsEntry, genEquipPmEthernetRmonStatisticsTx65_127FrameCount=genEquipPmEthernetRmonStatisticsTx65_127FrameCount, genEquipPmUtilizationMemAdmin=genEquipPmUtilizationMemAdmin, genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedYellowBitsPerSecond=genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedYellowBitsPerSecond, genEquipServicesCetSpPmIngressPolicerStatiRedPacket=genEquipServicesCetSpPmIngressPolicerStatiRedPacket, genEquipPmRfuCommonSL15minCurrIfIndex=genEquipPmRfuCommonSL15minCurrIfIndex, genEquipPmTrafficRadioAgg15minCurrTimeAndDate=genEquipPmTrafficRadioAgg15minCurrTimeAndDate, genEquipPmRadioMRMCIfIndex=genEquipPmRadioMRMCIfIndex, genEquipPmRadioEthernetEtmPmAvgYellowFramesPassed=genEquipPmRadioEthernetEtmPmAvgYellowFramesPassed, genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsServiceIndex=genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsServiceIndex, genEquipPmTrafficRadioAgg15minCurrEntry=genEquipPmTrafficRadioAgg15minCurrEntry, genEquipPmEthernetIngressPolicerUnicastStatisticsRedBytes=genEquipPmEthernetIngressPolicerUnicastStatisticsRedBytes, genEquipPmRfu=genEquipPmRfu, genEquipPmPWEntry=genEquipPmPWEntry, genEquipPmTrafficRadioAgg24hrCurrEntry=genEquipPmTrafficRadioAgg24hrCurrEntry, genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedYellowPacket=genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedYellowPacket, genEquipPmSdhRstLREB=genEquipPmSdhRstLREB, genEquipPmTrailsEndPointIDF=genEquipPmTrailsEndPointIDF, genEquipPmTrafficAggIDF=genEquipPmTrafficAggIDF, genEquipPmEthernetRmonStatisticsRxFrameCount=genEquipPmEthernetRmonStatisticsRxFrameCount, genEquipPmEthernetRmonStatisticsRxControlFrameCount=genEquipPmEthernetRmonStatisticsRxControlFrameCount, genEquipPmTrafficAggEntry=genEquipPmTrafficAggEntry, genEquipPmRadioEthernetIDF=genEquipPmRadioEthernetIDF, genEquipPmTrafficRadioAgg24hrIDF=genEquipPmTrafficRadioAgg24hrIDF, genEquipPmUtilizationMemTable=genEquipPmUtilizationMemTable, genEquipPmEthernetIngressPolicerUnicastStatisticsGreenPacket=genEquipPmEthernetIngressPolicerUnicastStatisticsGreenPacket, genEquipPmTrafficAggUAS=genEquipPmTrafficAggUAS, genEquipPmSdhRstLRIDF=genEquipPmSdhRstLRIDF, genEquipPmTdmBBE=genEquipPmTdmBBE, genEquipPmPWSES=genEquipPmPWSES, genEquipPmRadioThresholdRSL2=genEquipPmRadioThresholdRSL2, genEquipPmEthUtilizationAverageUtilization=genEquipPmEthUtilizationAverageUtilization, genEquipPmTrafficRadioAgg15minTable=genEquipPmTrafficRadioAgg15minTable, genEquipPmEthernetRmonStatisticsTable=genEquipPmEthernetRmonStatisticsTable, genEquipPmRadioEthernetEtmPmMaxGreenBytesPassed=genEquipPmRadioEthernetEtmPmMaxGreenBytesPassed, genEquipPmEthernetIngressPolicerEtherType2StatisticsEntry=genEquipPmEthernetIngressPolicerEtherType2StatisticsEntry, genEquipPmNGPWMalformedPkt=genEquipPmNGPWMalformedPkt, genEquipPmRadioEthernetEtmPmAvgGreenFramesPassed=genEquipPmRadioEthernetEtmPmAvgGreenFramesPassed, genEquipPmRadioXPIPmMaxXPI=genEquipPmRadioXPIPmMaxXPI, genEquipPmTrafficAggregate=genEquipPmTrafficAggregate, genEquipPmPWFC=genEquipPmPWFC, genEquipPmRadioEthernetAverageCapacity=genEquipPmRadioEthernetAverageCapacity, genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedGreenPacket=genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedGreenPacket, genEquipPmTrafficRadioAgg24hrSES=genEquipPmTrafficRadioAgg24hrSES, genEquipPmClear=genEquipPmClear, genEquipPmRadioMRMCEntry=genEquipPmRadioMRMCEntry, genEquipPmRadioMRMC=genEquipPmRadioMRMC, genEquipPmEthernetRmonStatisticsRxExceedMaxWithErrorFrameCount=genEquipPmEthernetRmonStatisticsRxExceedMaxWithErrorFrameCount, genEquipPmRadioMRMCMaxProfile=genEquipPmRadioMRMCMaxProfile, genEquipPmEthernetIngressPolicerBroadcastStatisticsIfIndex=genEquipPmEthernetIngressPolicerBroadcastStatisticsIfIndex, genEquipPmEthernetRmonStatisticsRxoversizeFrameCount=genEquipPmEthernetRmonStatisticsRxoversizeFrameCount, genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTable=genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTable, genEquipPmRadioMSEEntry=genEquipPmRadioMSEEntry, genEquipPmSdhRstRLUAS=genEquipPmSdhRstRLUAS, genEquipPmPWId=genEquipPmPWId, genEquipPmRadioEthernetPeakThroughput=genEquipPmRadioEthernetPeakThroughput, genEquipPmUtilizationMemPeakUtilization=genEquipPmUtilizationMemPeakUtilization, genEquipPmRadioEthernetThresholdCapacity=genEquipPmRadioEthernetThresholdCapacity, genEquipPmEthernetRmonStatisticsTxFcsErrorFrameCount=genEquipPmEthernetRmonStatisticsTxFcsErrorFrameCount, genEquipPmAll=genEquipPmAll, genEquipPmRadioClear=genEquipPmRadioClear, genEquipPmRadioTDMInterval=genEquipPmRadioTDMInterval, genEquipPmTrafficRadioAgg24hrEntry=genEquipPmTrafficRadioAgg24hrEntry, genEquipPmTrafficRadioAgg15minBBE=genEquipPmTrafficRadioAgg15minBBE, genEquipPmRadioTDMRadioUAS=genEquipPmRadioTDMRadioUAS, genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedYellowBytes=genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedYellowBytes, genEquipPmSdhRstRLInterval=genEquipPmSdhRstRLInterval, genEquipPmTrailsEndPointNoOfSwitches=genEquipPmTrailsEndPointNoOfSwitches, genEquipPmPWIDF=genEquipPmPWIDF, genEquipPmEthernetIngressPolicerUnicastStatisticsGreenBytes=genEquipPmEthernetIngressPolicerUnicastStatisticsGreenBytes, genEquipPmEthernetIngressPolicerMulticastStatisticsIfIndex=genEquipPmEthernetIngressPolicerMulticastStatisticsIfIndex, genEquipPmTrafficSLMinRsl=genEquipPmTrafficSLMinRsl, genEquipPmRadioEthernetExceedThroughput=genEquipPmRadioEthernetExceedThroughput, genEquipPmEthernetIngressPolicerBroadcastStatisticsRedBytes=genEquipPmEthernetIngressPolicerBroadcastStatisticsRedBytes, genEquipPmTrailsEndPointES=genEquipPmTrailsEndPointES, genEquipPmRfuCommonSL15minIfIndex=genEquipPmRfuCommonSL15minIfIndex, genEquipServicesCetSpPmCosIngressPolicerStatiRedPacket=genEquipServicesCetSpPmCosIngressPolicerStatiRedPacket, genEquipServicesCetSpPmIngressPolicerStatiClearOnRead=genEquipServicesCetSpPmIngressPolicerStatiClearOnRead, genEquipPmRfuCommonSL24hrCurrEntry=genEquipPmRfuCommonSL24hrCurrEntry, genEquipPmTrafficSL=genEquipPmTrafficSL, genEquipPmTrafficSLTslExceed=genEquipPmTrafficSLTslExceed, genEquipPmRadioMSEMinMse=genEquipPmRadioMSEMinMse, genEquipPmSdhEntry=genEquipPmSdhEntry, genEquipPmEthernetRmonStatisticsRxExceedmaxFrameCount=genEquipPmEthernetRmonStatisticsRxExceedmaxFrameCount, genEquipPmEthernetIngressPolicerMulticastStatisticsYellowPacket=genEquipPmEthernetIngressPolicerMulticastStatisticsYellowPacket, genEquipPmEthernetIngressPolicerEtherType2StatisticsGreenPacket=genEquipPmEthernetIngressPolicerEtherType2StatisticsGreenPacket, genEquipPmSdhRstRLSES=genEquipPmSdhRstRLSES, genEquipPmEthernetIngressPolicerEtherType3StatisticsGreenBytes=genEquipPmEthernetIngressPolicerEtherType3StatisticsGreenBytes, genEquipPmRfuCommonSL15minCurrTable=genEquipPmRfuCommonSL15minCurrTable, genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedYellowBitsPerSecond=genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedYellowBitsPerSecond, genEquipPmRadioTDM=genEquipPmRadioTDM, genEquipPmTrafficRadioAgg15minCurrIDF=genEquipPmTrafficRadioAgg15minCurrIDF, genEquipPmRadioEthernetPmType=genEquipPmRadioEthernetPmType, genEquipPmPWUAS=genEquipPmPWUAS, genEquipPmRadioTDMPmType=genEquipPmRadioTDMPmType, genEquipPmEthernetIngressPolicerUnicastStatisticsYellowBytes=genEquipPmEthernetIngressPolicerUnicastStatisticsYellowBytes, genEquipPmRfuCommonSL15minRslExceed2=genEquipPmRfuCommonSL15minRslExceed2, genEquipPmSdhRstRLEB=genEquipPmSdhRstRLEB, genEquipPmSdhRstLREntry=genEquipPmSdhRstLREntry, genEquipPmRfuCommonSL24hrTslExceed=genEquipPmRfuCommonSL24hrTslExceed, genEquipPmEthernetRmonStatisticsTxJabberFrameCount=genEquipPmEthernetRmonStatisticsTxJabberFrameCount, genEquipPmEthernetPortTxPeakPackets=genEquipPmEthernetPortTxPeakPackets, genEquipPmEthernetIngressPolicerBroadcastStatisticsYellowBytes=genEquipPmEthernetIngressPolicerBroadcastStatisticsYellowBytes, genEquipServicesCetSpPmIngressPolicerStatiYellowPacket=genEquipServicesCetSpPmIngressPolicerStatiYellowPacket, genEquipPmUtilizationMemPmType=genEquipPmUtilizationMemPmType, genEquipPmEthernetPortPmType=genEquipPmEthernetPortPmType, genEquipPmEthernetRmonStatisticsRxByteCount=genEquipPmEthernetRmonStatisticsRxByteCount, genEquipPmEthernetIngressPolicerEtherType3StatisticsRedBytes=genEquipPmEthernetIngressPolicerEtherType3StatisticsRedBytes, genEquipPmRfuCommonSL24hrCurrTslExceed=genEquipPmRfuCommonSL24hrCurrTslExceed, genEquipPmRfuCommonSL24hrMinRsl=genEquipPmRfuCommonSL24hrMinRsl, genEquipPmEthernetIngressPolicerMulticastStatisticsYellowBytes=genEquipPmEthernetIngressPolicerMulticastStatisticsYellowBytes, genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedYellowBytes=genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedYellowBytes, genEquipPmRadioEthernetEtmTable=genEquipPmRadioEthernetEtmTable, genEquipPmNGPWFC=genEquipPmNGPWFC, genEquipServicesCetSpPmIngressPolicerStatisticsTable=genEquipServicesCetSpPmIngressPolicerStatisticsTable, genEquipPmSDH=genEquipPmSDH, genEquipPmTrafficRadioAgg24hrCurrSES=genEquipPmTrafficRadioAgg24hrCurrSES, genEquipPmEthernetRmonStatisticsTxLengthErrorFrameCount=genEquipPmEthernetRmonStatisticsTxLengthErrorFrameCount, genEquipPmEthernetRmonStatisticsRxFcsErrorFrameCount=genEquipPmEthernetRmonStatisticsRxFcsErrorFrameCount, genEquipPmPWMisOrderDropped=genEquipPmPWMisOrderDropped, genEquipPmEthernetIngressPolicerBroadcastStatisticsYellowPacket=genEquipPmEthernetIngressPolicerBroadcastStatisticsYellowPacket, genEquipPmEthernetRmonStatisticsRx128_255FrameCount=genEquipPmEthernetRmonStatisticsRx128_255FrameCount, genEquipServicesCetSpPmCosIngressPolicerStatiYellowBytes=genEquipServicesCetSpPmCosIngressPolicerStatiYellowBytes, genEquipPmUtilizationMemInterval=genEquipPmUtilizationMemInterval, genEquipPmSdhInterval=genEquipPmSdhInterval, genEquipPmEthernetIngressPolicerMulticastStatisticsEntry=genEquipPmEthernetIngressPolicerMulticastStatisticsEntry, genEquipPmRfuCommonSL24hrEntry=genEquipPmRfuCommonSL24hrEntry, genEquipPmUtilizationCPUPmType=genEquipPmUtilizationCPUPmType, genEquipPmEthernetRmonStatisticsRx256_511FrameCount=genEquipPmEthernetRmonStatisticsRx256_511FrameCount, genEquipPmUtilizationMemMinimumUtilization=genEquipPmUtilizationMemMinimumUtilization, genEquipPmEthernetIngressPolicerUnicastStatisticsClearOnRead=genEquipPmEthernetIngressPolicerUnicastStatisticsClearOnRead, genEquipPmUtilizationMem=genEquipPmUtilizationMem, genEquipPmTrailsEndPointEntry=genEquipPmTrailsEndPointEntry, genEquipPmRfuCommonSL15minCurrIDF=genEquipPmRfuCommonSL15minCurrIDF, genEquipPmRadioMSEPmType=genEquipPmRadioMSEPmType, genEquipPmTrafficRadioAgg24hrCurrBBE=genEquipPmTrafficRadioAgg24hrCurrBBE, genEquipPmNGPWSES=genEquipPmNGPWSES, genEquipPmEthUtilizationPmType=genEquipPmEthUtilizationPmType, genEquipPmEthernetRmonStatisticsTx64FrameCount=genEquipPmEthernetRmonStatisticsTx64FrameCount, genEquipPmEthernetRmonStatisticsTxControlFrameCount=genEquipPmEthernetRmonStatisticsTxControlFrameCount, genEquipPmEthernetPortTxBytesLayer1ExcedThSecCnt=genEquipPmEthernetPortTxBytesLayer1ExcedThSecCnt, genEquipPmTrailsEndPointId=genEquipPmTrailsEndPointId, genEquipPmRadioEthernetEtmPmAvgRedFramesDropped=genEquipPmRadioEthernetEtmPmAvgRedFramesDropped, genEquipPmRfuCommonSL24hrCurrIDF=genEquipPmRfuCommonSL24hrCurrIDF, genEquipPmRadio=genEquipPmRadio, genEquipPmRadioEthernetEtmPmAvgYellowBytesPassed=genEquipPmRadioEthernetEtmPmAvgYellowBytesPassed, genEquipPmSdhTimeStamp=genEquipPmSdhTimeStamp, genEquipServicesCetSpPmCosIngressPolicerStatiSpIndex=genEquipServicesCetSpPmCosIngressPolicerStatiSpIndex, genEquipPmSdhRstRLPmType=genEquipPmSdhRstRLPmType, genEquipPmEthUtilizationExceedUtilization=genEquipPmEthUtilizationExceedUtilization)
mibBuilder.exportSymbols("MWRM-PM-MIB", genEquipPmRfuCommonSL24hrCurrId=genEquipPmRfuCommonSL24hrCurrId, genEquipPmTrailsEndPointActivePathCounts=genEquipPmTrailsEndPointActivePathCounts, genEquipPmSdhIDF=genEquipPmSdhIDF, genEquipPmTrafficRadioAgg24hrUAS=genEquipPmTrafficRadioAgg24hrUAS, genEquipPmRadioEthernetEtmPmMaxGreenFramesPassed=genEquipPmRadioEthernetEtmPmMaxGreenFramesPassed, genEquipPmRadioMRMCMinTDMIf=genEquipPmRadioMRMCMinTDMIf, genEquipPmEthernetPortRxPeakBytesLayer1=genEquipPmEthernetPortRxPeakBytesLayer1, genEquipPmEthernetIngressPolicerBroadcastStatisticsGreenPacket=genEquipPmEthernetIngressPolicerBroadcastStatisticsGreenPacket, genEquipPmEthernetRmonStatisticsIfIndex=genEquipPmEthernetRmonStatisticsIfIndex, genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedGreenBytes=genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedGreenBytes, genEquipPmSdhRstRLEntry=genEquipPmSdhRstRLEntry, genEquipPmEthernetIngressPolicerBroadcastStatisticsGreenBytes=genEquipPmEthernetIngressPolicerBroadcastStatisticsGreenBytes, genEquipPmEthernetRmonStatisticsTx256_511FrameCount=genEquipPmEthernetRmonStatisticsTx256_511FrameCount, genEquipPmTrafficRadioAgg15minCurrSES=genEquipPmTrafficRadioAgg15minCurrSES, genEquipPmEthernetRmonStatisticsTxOversizeFrameCount=genEquipPmEthernetRmonStatisticsTxOversizeFrameCount, genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedGreenBitsPerSecond=genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedGreenBitsPerSecond, genEquipPmEthernetIngressPolicerEtherType2StatisticsIfIndex=genEquipPmEthernetIngressPolicerEtherType2StatisticsIfIndex, genEquipPmTdmIDF=genEquipPmTdmIDF, genEquipPmTrafficSLPmType=genEquipPmTrafficSLPmType, genEquipPmRadioThresholdMSE=genEquipPmRadioThresholdMSE, genEquipPmEthernetIngressPolicerUnicastStatisticsTable=genEquipPmEthernetIngressPolicerUnicastStatisticsTable, genEquipPmEthernetIngressPolicerMulticastStatisticsTable=genEquipPmEthernetIngressPolicerMulticastStatisticsTable, genEquipServicesCetSpPmCosIngressPolicerStatisticsTable=genEquipServicesCetSpPmCosIngressPolicerStatisticsTable, genEquipPmEthernetRmonStatisticsRxcode_ErrorCount=genEquipPmEthernetRmonStatisticsRxcode_ErrorCount, genEquipPmNGPWInterval=genEquipPmNGPWInterval, genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsIfIndex=genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsIfIndex, genEquipPmRadioEthernetEtmPmQueueIndex=genEquipPmRadioEthernetEtmPmQueueIndex, genEquipPmUtilizationCPUMinimumUtilization=genEquipPmUtilizationCPUMinimumUtilization, genEquipPmRfuCommonSL15minTimeAndDate=genEquipPmRfuCommonSL15minTimeAndDate, genEquipPmRadioXPIPmType=genEquipPmRadioXPIPmType, genEquipPmTraffic=genEquipPmTraffic, genEquipPmTrafficRadioAgg24hrCurrTimeAndDate=genEquipPmTrafficRadioAgg24hrCurrTimeAndDate, genEquipPmEthUtilizationAdmin=genEquipPmEthUtilizationAdmin, genEquipPmEthernetRmonStatisticsRxundersize_ErrorFrameCount=genEquipPmEthernetRmonStatisticsRxundersize_ErrorFrameCount, genEquipPMStatisticsResetAllL2PortPm=genEquipPMStatisticsResetAllL2PortPm, genEquipPmSdhBBE=genEquipPmSdhBBE, genEquipPmRadioMRMCPmType=genEquipPmRadioMRMCPmType, genEquipPmTrafficRadioAgg15minES=genEquipPmTrafficRadioAgg15minES, genEquipPmRadioXPIEntry=genEquipPmRadioXPIEntry, genEquipPmRadioXPIPmMinXPI=genEquipPmRadioXPIPmMinXPI, genEquipPmUtilizationCPUTable=genEquipPmUtilizationCPUTable, genEquipPmTrafficRadioAgg15minEntry=genEquipPmTrafficRadioAgg15minEntry, genEquipPmEthernetIngressPolicerUnicastStatisticsYellowPacket=genEquipPmEthernetIngressPolicerUnicastStatisticsYellowPacket, genEquipPmTrafficAggPmType=genEquipPmTrafficAggPmType, genEquipPmRadioMRMCIDF=genEquipPmRadioMRMCIDF, genEquipPmSdhRstLRInterval=genEquipPmSdhRstLRInterval, genEquipPmNGPWIfIndex=genEquipPmNGPWIfIndex, genEquipPmTrafficRadioAgg15minId=genEquipPmTrafficRadioAgg15minId, genEquipPmEthernetRmonStatisticsRxMulticastFrameCount=genEquipPmEthernetRmonStatisticsRxMulticastFrameCount, genEquipPmEthernetPortRxPeakMcastPackets=genEquipPmEthernetPortRxPeakMcastPackets, genEquipPmRfuCommonSL15minMinRsl=genEquipPmRfuCommonSL15minMinRsl, genEquipPmRadioMRMCMaxTDMIf=genEquipPmRadioMRMCMaxTDMIf, genEquipPmSdhRstLRUAS=genEquipPmSdhRstLRUAS, genEquipPmNGPWFER=genEquipPmNGPWFER, genEquipPmUtilizationCPUExceedUtilization=genEquipPmUtilizationCPUExceedUtilization, genEquipPmEthernet=genEquipPmEthernet, genEquipPmEthernetPortTxAvgBytesLayer1=genEquipPmEthernetPortTxAvgBytesLayer1, genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsEntry=genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsEntry, genEquipPmEthernetIngressPolicerEtherType1StatisticsRedPacket=genEquipPmEthernetIngressPolicerEtherType1StatisticsRedPacket, genEquipPmRfuCommonSL24hrCurrRslExceed1=genEquipPmRfuCommonSL24hrCurrRslExceed1, genEquipPmTrafficRadioAgg15minUAS=genEquipPmTrafficRadioAgg15minUAS, genEquipPmUtilizationCPUInterval=genEquipPmUtilizationCPUInterval, genEquipPmEthUtilizationPeakUtilization=genEquipPmEthUtilizationPeakUtilization, genEquipPmEthernetIngressPolicerEtherType2StatisticsYellowBytes=genEquipPmEthernetIngressPolicerEtherType2StatisticsYellowBytes, genEquipPmRadioEthernet=genEquipPmRadioEthernet, genEquipPmPWInterval=genEquipPmPWInterval, genEquipServicesCetSpPmIngressPolicerStatiGreenBytes=genEquipServicesCetSpPmIngressPolicerStatiGreenBytes, genEquipUnit=genEquipUnit, genEquipServicesCetSpPmCosIngressPolicerStatiYellowPacket=genEquipServicesCetSpPmCosIngressPolicerStatiYellowPacket, genEquipPmEthernetPortRxBytesLayer1ExcedThSecCnt=genEquipPmEthernetPortRxBytesLayer1ExcedThSecCnt, genEquipPmEthernetIngressPolicerEtherType3StatisticsGreenPacket=genEquipPmEthernetIngressPolicerEtherType3StatisticsGreenPacket, genEquipPmRfuCommonSL15minCurrTimeAndDate=genEquipPmRfuCommonSL15minCurrTimeAndDate, genEquipServicesCetSpPmIngressPolicerStatiRedBytes=genEquipServicesCetSpPmIngressPolicerStatiRedBytes, genEquipPmRadioTDMIDF=genEquipPmRadioTDMIDF, genEquipPmRfuCommonSL15minEntry=genEquipPmRfuCommonSL15minEntry, genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedGreenBytes=genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedGreenBytes, genEquipPmEthernetRmonStatisticsRx1519_1522FrameCount=genEquipPmEthernetRmonStatisticsRx1519_1522FrameCount, genEquipPmSdhRstRLIDF=genEquipPmSdhRstRLIDF, genEquipPmEthernetIngressPolicerMulticastStatisticsGreenBytes=genEquipPmEthernetIngressPolicerMulticastStatisticsGreenBytes, genEquipPmRadioEthernetAverageThroughput=genEquipPmRadioEthernetAverageThroughput, genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsClearOnRead=genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsClearOnRead, genEquipPmRfuCommonSL24hrMaxRsl=genEquipPmRfuCommonSL24hrMaxRsl, genEquipServicesCetSpPmCosIngressPolicerStatiCos=genEquipServicesCetSpPmCosIngressPolicerStatiCos, genEquipPmUtilizationMemIDF=genEquipPmUtilizationMemIDF, genEquipPmEthernetIngressPolicerEtherType1StatisticsYellowPacket=genEquipPmEthernetIngressPolicerEtherType1StatisticsYellowPacket, genEquipPmTrafficRadioAgg24hrTimeAndDate=genEquipPmTrafficRadioAgg24hrTimeAndDate, genEquipPmRfuCommonSL15minCurrMinTsl=genEquipPmRfuCommonSL15minCurrMinTsl, genEquipPmTrafficSLMaxRsl=genEquipPmTrafficSLMaxRsl, genEquipPmSdhRstRLIfIndex=genEquipPmSdhRstRLIfIndex, genEquipPmRadioEthernetEtmPmAvgYellowFramesDropped=genEquipPmRadioEthernetEtmPmAvgYellowFramesDropped, genEquipPmTrafficRadioAgg15minCurrIfIndex=genEquipPmTrafficRadioAgg15minCurrIfIndex, genEquipServicesCETTmPmSpEgressQueueStatisticsCosQueueIndex=genEquipServicesCETTmPmSpEgressQueueStatisticsCosQueueIndex, genEquipPmTdmPmType=genEquipPmTdmPmType, genEquipPmTrafficRadioAgg15minSES=genEquipPmTrafficRadioAgg15minSES, genEquipPmSdhRstLRES=genEquipPmSdhRstLRES, genEquipPmTrailsEndPointTable=genEquipPmTrailsEndPointTable, genEquipPmTrailsEndPointPmType=genEquipPmTrailsEndPointPmType, genEquipPmEthernetRmonStatisticsTxFragmentFrameCount=genEquipPmEthernetRmonStatisticsTxFragmentFrameCount, genEquipPmEthernetPortTxPeakBcastPackets=genEquipPmEthernetPortTxPeakBcastPackets, genEquipPmEthernetPortRxPeakBytesLayer2=genEquipPmEthernetPortRxPeakBytesLayer2, genEquipServicesCetSpPmCosIngressPolicerStatiGreenBytes=genEquipServicesCetSpPmCosIngressPolicerStatiGreenBytes, genEquipPmRfuCommon=genEquipPmRfuCommon, genEquipPmSdhRstLRTimeStamp=genEquipPmSdhRstLRTimeStamp, genEquipPmPWMissingPkts=genEquipPmPWMissingPkts, genEquipPmEthernetPortRxAvgPackets=genEquipPmEthernetPortRxAvgPackets, genEquipPmTrailsEndPointUAS=genEquipPmTrailsEndPointUAS, genEquipPmRadioMSEMaxMse=genEquipPmRadioMSEMaxMse, genEquipServicesCetSpPmIngressPolicerStatiYellowBytes=genEquipServicesCetSpPmIngressPolicerStatiYellowBytes, genEquipServicesCetSpPmCosIngressPolicerStatiRedBytes=genEquipServicesCetSpPmCosIngressPolicerStatiRedBytes, genEquipPmEthernetIngressPolicerUnicastStatisticsRedPacket=genEquipPmEthernetIngressPolicerUnicastStatisticsRedPacket, genEquipPmPWES=genEquipPmPWES, genEquipPmEthernetIngressPolicerEtherType1StatisticsClearOnRead=genEquipPmEthernetIngressPolicerEtherType1StatisticsClearOnRead, genEquipPmEthernetIngressPolicerEtherType3StatisticsEntry=genEquipPmEthernetIngressPolicerEtherType3StatisticsEntry, genEquipPmEthernetIngressPolicerMulticastStatisticsRedBytes=genEquipPmEthernetIngressPolicerMulticastStatisticsRedBytes, genEquipServicesCetSpPmIngressPolicerStatiGreenPacket=genEquipServicesCetSpPmIngressPolicerStatiGreenPacket, genEquipPmRadioMRMCTable=genEquipPmRadioMRMCTable, genEquipPmTrafficRadioAgg24hrCurrId=genEquipPmTrafficRadioAgg24hrCurrId, microwave_radio=microwave_radio, genEquipPmRadioThresholdTSL=genEquipPmRadioThresholdTSL, genEquipPmEthernetPortEntry=genEquipPmEthernetPortEntry, genEquipPmTrafficSLMinTsl=genEquipPmTrafficSLMinTsl, genEquipPmEthernetRmonStatisticsRx1024_1518FrameCount=genEquipPmEthernetRmonStatisticsRx1024_1518FrameCount, genEquipPmSdhRstLRSES=genEquipPmSdhRstLRSES, genEquipPmTrafficRadioAgg15minCurrES=genEquipPmTrafficRadioAgg15minCurrES, genEquipPmEthernetRmonStatisticsRx65_127FrameCount=genEquipPmEthernetRmonStatisticsRx65_127FrameCount, genEquipPmEthernetPortPmInterval=genEquipPmEthernetPortPmInterval, genEquipPmEthernetIngressPolicerEtherType3StatisticsYellowBytes=genEquipPmEthernetIngressPolicerEtherType3StatisticsYellowBytes, genEquipPmTrafficAggES=genEquipPmTrafficAggES, genEquipPmEthernetRmonStatisticsTxByteCount=genEquipPmEthernetRmonStatisticsTxByteCount, genEquipPmNGPWPktsReOrder=genEquipPmNGPWPktsReOrder, genEquipPmTrafficRadioAgg15minCurrTable=genEquipPmTrafficRadioAgg15minCurrTable, genEquipPmEthernetPortTxPeakBytesLayer1=genEquipPmEthernetPortTxPeakBytesLayer1, genEquipPmRadioEthernetEtmPmMaxYellowFramesDropped=genEquipPmRadioEthernetEtmPmMaxYellowFramesDropped, genEquipPmRadioMSETable=genEquipPmRadioMSETable, genEquipPmRadioEthernetExceedCapacity=genEquipPmRadioEthernetExceedCapacity, genEquipPmEthernetPortRxPeakBcastPackets=genEquipPmEthernetPortRxPeakBcastPackets, genEquipPmEthernetRmonStatisticsTxMulticastFrameCount=genEquipPmEthernetRmonStatisticsTxMulticastFrameCount, genEquipPmPWPktsReOrder=genEquipPmPWPktsReOrder, genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedGreenPacket=genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedGreenPacket, genEquipPmEthernetRmonStatisticsTxPauseFrameCount=genEquipPmEthernetRmonStatisticsTxPauseFrameCount, genEquipPmRfuCommonSL15minRslExceed1=genEquipPmRfuCommonSL15minRslExceed1, genEquipPmSdhRstLRBBE=genEquipPmSdhRstLRBBE, genEquipPmRadioMRMCMinBitrate=genEquipPmRadioMRMCMinBitrate, genEquipServicesCetSpPmCosIngressPolicerStatisticsEntry=genEquipServicesCetSpPmCosIngressPolicerStatisticsEntry, genEquipPmTrafficRadioAgg24hrIfIndex=genEquipPmTrafficRadioAgg24hrIfIndex, genEquipPmNGPWIdf=genEquipPmNGPWIdf, genEquipPM=genEquipPM, genEquipPmRfuCommonSL24hrCurrTable=genEquipPmRfuCommonSL24hrCurrTable, genEquipPmTrailsEndPointBBE=genEquipPmTrailsEndPointBBE, genEquipPmEthUtilizationIDF=genEquipPmEthUtilizationIDF, genEquipPmEthernetPortRxAvgBcastPackets=genEquipPmEthernetPortRxAvgBcastPackets, genEquipPmRfuCommonSL24hrCurrMinTsl=genEquipPmRfuCommonSL24hrCurrMinTsl, genEquipPMStatistics=genEquipPMStatistics, genEquipPmEthernetRmonStatisticsTx512_1023FrameCount=genEquipPmEthernetRmonStatisticsTx512_1023FrameCount, genEquipPmTdmES=genEquipPmTdmES, genEquipPmEthUtilization=genEquipPmEthUtilization, genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedGreenBytes=genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedGreenBytes, genEquipPmTrafficRadioAgg15minTimeAndDate=genEquipPmTrafficRadioAgg15minTimeAndDate, genEquipPmTrafficRadioAgg24hrBBE=genEquipPmTrafficRadioAgg24hrBBE, genEquipPmNGPWUAS=genEquipPmNGPWUAS, genEquipPmRadioEthernetEtmPmMaxRedBytesDropped=genEquipPmRadioEthernetEtmPmMaxRedBytesDropped, genEquipPmNGPWMissingPkts=genEquipPmNGPWMissingPkts, genEquipPmTrafficSLId=genEquipPmTrafficSLId, genEquipPmSdhRstLRCV=genEquipPmSdhRstLRCV, genEquipPmRfuCommonSL24hrMinTsl=genEquipPmRfuCommonSL24hrMinTsl, genEquipPmRadioEthernetEtmPmAvgGreenBytesPassed=genEquipPmRadioEthernetEtmPmAvgGreenBytesPassed, genEquipPmRadioThresholdTable=genEquipPmRadioThresholdTable, genEquipPmTrafficRadioAgg15minCurrUAS=genEquipPmTrafficRadioAgg15minCurrUAS, genEquipPmRfuCommonSL15minCurrMaxRsl=genEquipPmRfuCommonSL15minCurrMaxRsl, genEquipPmEthernetIngressPolicerEtherType2StatisticsTable=genEquipPmEthernetIngressPolicerEtherType2StatisticsTable, genEquipPmEthernetPortTxAvgBcastPackets=genEquipPmEthernetPortTxAvgBcastPackets, genEquipPmEthernetRmonStatisticsRxFragmentFrameCount=genEquipPmEthernetRmonStatisticsRxFragmentFrameCount, genEquipPmRfuCommonSL15minCurrId=genEquipPmRfuCommonSL15minCurrId, genEquipPmEthernetPortTxAvgBytesLayer2=genEquipPmEthernetPortTxAvgBytesLayer2, genEquipServicesCetSpPmIngressPolicerStatiServiceIndex=genEquipServicesCetSpPmIngressPolicerStatiServiceIndex, genEquipPmPWMalformedPkt=genEquipPmPWMalformedPkt, genEquipPmEthernetRmonStatisticsRxJabberFrameCount=genEquipPmEthernetRmonStatisticsRxJabberFrameCount, genEquipPmRadioEthernetThresholdThroughput=genEquipPmRadioEthernetThresholdThroughput, genEquipPmTrafficSLEntry=genEquipPmTrafficSLEntry, genEquipPmUtilizationMemThreshold=genEquipPmUtilizationMemThreshold, genEquipPmEthernetIngressPolicerEtherType2StatisticsRedPacket=genEquipPmEthernetIngressPolicerEtherType2StatisticsRedPacket, genEquipPmSdhSES=genEquipPmSdhSES, genEquipPmRadioXPIIDF=genEquipPmRadioXPIIDF, genEquipPmSdhES=genEquipPmSdhES, genEquipPmRadioMSEexceeded=genEquipPmRadioMSEexceeded, genEquipPmSdhRstRLES=genEquipPmSdhRstRLES, genEquipPmEthernetIngressPolicerBroadcastStatisticsRedPacket=genEquipPmEthernetIngressPolicerBroadcastStatisticsRedPacket, genEquipPmUtilizationCPUIDF=genEquipPmUtilizationCPUIDF, genEquipPmEthernetRmonStatisticsTxUndersizeFrameCount=genEquipPmEthernetRmonStatisticsTxUndersizeFrameCount, genEquipPmUtilizationCPUPeakUtilization=genEquipPmUtilizationCPUPeakUtilization, genEquipPmTrafficSLRslExceed2=genEquipPmTrafficSLRslExceed2, genEquipPmEthernetRmonStatisticsRxBroadcastFrameCount=genEquipPmEthernetRmonStatisticsRxBroadcastFrameCount, genEquipPmTrafficRadioAgg15minCurrId=genEquipPmTrafficRadioAgg15minCurrId, genEquipPmTrafficAggInterval=genEquipPmTrafficAggInterval, genEquipPmEthernetRmonStatisticsEntry=genEquipPmEthernetRmonStatisticsEntry, genEquipPmEthernetIngressPolicerEtherType2StatisticsClearOnRead=genEquipPmEthernetIngressPolicerEtherType2StatisticsClearOnRead, genEquipPmRfuCommonSL24hrCurrIfIndex=genEquipPmRfuCommonSL24hrCurrIfIndex, genEquipPmUtilizationCPU=genEquipPmUtilizationCPU, genEquipPmRfuCommonSL15minCurrMaxTsl=genEquipPmRfuCommonSL15minCurrMaxTsl, genEquipPmEthernetIngressPolicerEtherType1StatisticsGreenPacket=genEquipPmEthernetIngressPolicerEtherType1StatisticsGreenPacket, genEquipPmRfuCommonSL24hrCurrTimeAndDate=genEquipPmRfuCommonSL24hrCurrTimeAndDate, genEquipPmRadioEthernetEtmPmType=genEquipPmRadioEthernetEtmPmType, genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedYellowBytes=genEquipServicesCETTmPmSpEgressQueueStatisticsTransmittedYellowBytes, genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedYellowPacket=genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedYellowPacket, genEquipPmRadioEthernetEntry=genEquipPmRadioEthernetEntry, genEquipPmTrailsEndPointInterval=genEquipPmTrailsEndPointInterval, genEquipPmRadioEthernetTable=genEquipPmRadioEthernetTable, genEquipPmTdmTable=genEquipPmTdmTable, genEquipPmSdhIfIndex=genEquipPmSdhIfIndex, genEquipPmRadioMRMCMaxBitrate=genEquipPmRadioMRMCMaxBitrate, genEquipPmEthernetIngressPolicerEtherType3StatisticsYellowPacket=genEquipPmEthernetIngressPolicerEtherType3StatisticsYellowPacket, genEquipPmEthernetPortRxAvgBytesLayer2=genEquipPmEthernetPortRxAvgBytesLayer2, genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedYellowPacket=genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsDroppedYellowPacket, genEquipPmTrafficRadioAgg24hrId=genEquipPmTrafficRadioAgg24hrId, genEquipPmRadioThresholdXPI=genEquipPmRadioThresholdXPI, genEquipPmTrails=genEquipPmTrails, genEquipPmEthernetIngressPolicerMulticastStatisticsClearOnRead=genEquipPmEthernetIngressPolicerMulticastStatisticsClearOnRead, genEquipPmEthernetRmonStatisticsRxPauseFrameCount=genEquipPmEthernetRmonStatisticsRxPauseFrameCount, genEquipPmEthUtilizationEntry=genEquipPmEthUtilizationEntry, genEquipPmRadioEthernetEtmPmMaxRedFramesDropped=genEquipPmRadioEthernetEtmPmMaxRedFramesDropped, genEquipServicesCetSpPmCosIngressPolicerStatiGreenPacket=genEquipServicesCetSpPmCosIngressPolicerStatiGreenPacket, genEquipPmEthernetRmonStatisticsTxFrameCount=genEquipPmEthernetRmonStatisticsTxFrameCount, genEquipServicesCETTmPmSpEgressQueueStatisticsIfIndex=genEquipServicesCETTmPmSpEgressQueueStatisticsIfIndex, genEquipServicesCETTmPmSpEgressQueueStatisticsTable=genEquipServicesCETTmPmSpEgressQueueStatisticsTable, genEquipPmTrafficRadioAgg15minCurrBBE=genEquipPmTrafficRadioAgg15minCurrBBE, genEquipPmTdmSES=genEquipPmTdmSES, genEquipPmRfuCommonSL15minMaxTsl=genEquipPmRfuCommonSL15minMaxTsl, genEquipPmRadioEthernetEtmPmAvgRedBytesDropped=genEquipPmRadioEthernetEtmPmAvgRedBytesDropped, genEquipPmRfuCommonSL24hrCurrMinRsl=genEquipPmRfuCommonSL24hrCurrMinRsl, genEquipPmRadioEthernetPeakUtilization=genEquipPmRadioEthernetPeakUtilization, genEquipPmEthernetPortRxPeakPackets=genEquipPmEthernetPortRxPeakPackets, genEquipPmUtilizationCPUAdmin=genEquipPmUtilizationCPUAdmin, genEquipPmTdmInterval=genEquipPmTdmInterval, genEquipPmRadioEthernetInterval=genEquipPmRadioEthernetInterval, genEquipPmRadioEthernetEtmPmIDF=genEquipPmRadioEthernetEtmPmIDF, genEquipPmRfuCommonSL24hrIfIndex=genEquipPmRfuCommonSL24hrIfIndex, genEquipPmEthernetIngressPolicerEtherType2StatisticsRedBytes=genEquipPmEthernetIngressPolicerEtherType2StatisticsRedBytes, genEquipServicesCETTmPmSpEgressQueueStatisticsClearOnRead=genEquipServicesCETTmPmSpEgressQueueStatisticsClearOnRead, genEquipPmEthernetIngressPolicerEtherType3StatisticsIfIndex=genEquipPmEthernetIngressPolicerEtherType3StatisticsIfIndex, genEquipPmUtilizationMemAverageUtilization=genEquipPmUtilizationMemAverageUtilization, genEquipServicesCetSpPmCosIngressPolicerStatiClearOnRead=genEquipServicesCetSpPmCosIngressPolicerStatiClearOnRead, genEquipPmRfuCommonSL24hrCurrMaxTsl=genEquipPmRfuCommonSL24hrCurrMaxTsl, genEquipPmTrafficSLMaxTsl=genEquipPmTrafficSLMaxTsl, genEquipPmTrafficRadioAgg24hrCurrTable=genEquipPmTrafficRadioAgg24hrCurrTable, genEquipPmRadioEthernetPeakCapacity=genEquipPmRadioEthernetPeakCapacity, genEquipPmRfuCommonSL15minIDF=genEquipPmRfuCommonSL15minIDF, genEquipPmRadioEthernetEtmInterval=genEquipPmRadioEthernetEtmInterval, genEquipPmTrafficRadioAgg15minIDF=genEquipPmTrafficRadioAgg15minIDF, genEquipPmUtilizationCPUThreshold=genEquipPmUtilizationCPUThreshold, genEquipPmRadioEthernetEtmPmAvgGreenFramesDropped=genEquipPmRadioEthernetEtmPmAvgGreenFramesDropped, genEquipServicesCetSpPmIngressPolicerStatiSpIndex=genEquipServicesCetSpPmIngressPolicerStatiSpIndex, genEquipPmEthernetRmonStatisticsTx128_255FrameCount=genEquipPmEthernetRmonStatisticsTx128_255FrameCount, genEquipPmTrafficRadioAgg24hrCurrIDF=genEquipPmTrafficRadioAgg24hrCurrIDF, genEquipPmEthernetPortTxPeakBytesLayer2=genEquipPmEthernetPortTxPeakBytesLayer2)
mibBuilder.exportSymbols("MWRM-PM-MIB", genEquipPmTdmUAS=genEquipPmTdmUAS, genEquipPmRadioEthernetEtmPmMaxYellowBytesPassed=genEquipPmRadioEthernetEtmPmMaxYellowBytesPassed, genEquipPmEthernetIngressPolicerUnicastStatisticsIfIndex=genEquipPmEthernetIngressPolicerUnicastStatisticsIfIndex, genEquipPmRfuCommonSL15minMaxRsl=genEquipPmRfuCommonSL15minMaxRsl, genEquipPmRadioEthernetFrameErrorRate=genEquipPmRadioEthernetFrameErrorRate, genEquipPmRadioMRMCId=genEquipPmRadioMRMCId, genEquipPmRfuCommonSL15minTable=genEquipPmRfuCommonSL15minTable, genEquipPmEthernetIngressPolicerMulticastStatisticsGreenPacket=genEquipPmEthernetIngressPolicerMulticastStatisticsGreenPacket, genEquipPmUtilization=genEquipPmUtilization, genEquipPmEthernetPortTable=genEquipPmEthernetPortTable, genEquipPmEthernetPortPmIDF=genEquipPmEthernetPortPmIDF, genEquipPmRadioEthernetExceedUtilization=genEquipPmRadioEthernetExceedUtilization, genEquipPmRadioEthernetAverageUtilization=genEquipPmRadioEthernetAverageUtilization, genEquipPmRfuCommonSL24hrIDF=genEquipPmRfuCommonSL24hrIDF, genEquipPmRadioMRMCMinProfile=genEquipPmRadioMRMCMinProfile, genEquipPmEthernetIngressPolicerEtherType3StatisticsTable=genEquipPmEthernetIngressPolicerEtherType3StatisticsTable, genEquipServicesCetSpPmIngressPolicerStatisticsEntry=genEquipServicesCetSpPmIngressPolicerStatisticsEntry, genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedYellowPacket=genEquipServicesCETTmPmSpEgressQueueStatisticsDroppedYellowPacket, genEquip=genEquip, genEquipPmEthUtilizationThreshold=genEquipPmEthUtilizationThreshold, genEquipPmTrafficRadioAgg24hrCurrIfIndex=genEquipPmTrafficRadioAgg24hrCurrIfIndex, genEquipPmTdmEntry=genEquipPmTdmEntry, genEquipPmPWTable=genEquipPmPWTable, genEquipPmRfuCommonSL15minMinTsl=genEquipPmRfuCommonSL15minMinTsl, genEquipPmRfuCommonSL24hrCurrRslExceed2=genEquipPmRfuCommonSL24hrCurrRslExceed2, genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedGreenBitsPerSecond=genEquipServicesCETTmPmSpEgressQueuesAggragateStatisticsTransmittedGreenBitsPerSecond, genEquipPmTrafficRadioAgg15minIfIndex=genEquipPmTrafficRadioAgg15minIfIndex)
