#
# PySNMP MIB module NCD-MIB-1 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NCD-MIB-1
# Produced by pysmi-0.3.4 at Wed May  1 14:17:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
private, Unsigned32, Bits, Integer32, Gauge32, enterprises, IpAddress, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, NotificationType, MibIdentifier, ModuleIdentity, ObjectIdentity, iso, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "private", "Unsigned32", "Bits", "Integer32", "Gauge32", "enterprises", "IpAddress", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "NotificationType", "MibIdentifier", "ModuleIdentity", "ObjectIdentity", "iso", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ncd = MibIdentifier((1, 3, 6, 1, 4, 1, 82))
ncd_products = MibIdentifier((1, 3, 6, 1, 4, 1, 82, 1)).setLabel("ncd-products")
ncd16 = MibIdentifier((1, 3, 6, 1, 4, 1, 82, 1, 1))
ncd19 = MibIdentifier((1, 3, 6, 1, 4, 1, 82, 1, 2))
ncd17c = MibIdentifier((1, 3, 6, 1, 4, 1, 82, 1, 3))
ncd16e = MibIdentifier((1, 3, 6, 1, 4, 1, 82, 1, 4))
ncd_mibs = MibIdentifier((1, 3, 6, 1, 4, 1, 82, 2)).setLabel("ncd-mibs")
ncd_mibs_mib1 = MibIdentifier((1, 3, 6, 1, 4, 1, 82, 2, 1)).setLabel("ncd-mibs-mib1")
ncdSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 82, 2, 1, 1))
ncdMbuf = MibIdentifier((1, 3, 6, 1, 4, 1, 82, 2, 1, 2))
ncdEther = MibIdentifier((1, 3, 6, 1, 4, 1, 82, 2, 1, 3))
ncdSerial = MibIdentifier((1, 3, 6, 1, 4, 1, 82, 2, 1, 4))
ncdTcp = MibIdentifier((1, 3, 6, 1, 4, 1, 82, 2, 1, 5))
ncdTftp = MibIdentifier((1, 3, 6, 1, 4, 1, 82, 2, 1, 7))
ncdNfs = MibIdentifier((1, 3, 6, 1, 4, 1, 82, 2, 1, 8))
ncdSysMemTotal = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdSysMemTotal.setStatus('optional')
ncdSysMemAvail = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdSysMemAvail.setStatus('optional')
ncdSysMemFrags = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdSysMemFrags.setStatus('optional')
ncdSysIdleTime = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdSysIdleTime.setStatus('optional')
ncdMbufTotal = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdMbufTotal.setStatus('optional')
ncdMbufFree = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 2, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdMbufFree.setStatus('optional')
ncdMbufClusterTotal = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdMbufClusterTotal.setStatus('optional')
ncdMbufClusterFree = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 2, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdMbufClusterFree.setStatus('optional')
ncdMbufReserved = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 2, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdMbufReserved.setStatus('optional')
ncdMbufDrops = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdMbufDrops.setStatus('optional')
ncdMbufWaits = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdMbufWaits.setStatus('optional')
ncdMbufData = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 2, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdMbufData.setStatus('optional')
ncdMbufHeader = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 2, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdMbufHeader.setStatus('optional')
ncdMbufSocket = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 2, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdMbufSocket.setStatus('optional')
ncdMbufProtoCtrlBlock = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 2, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdMbufProtoCtrlBlock.setStatus('optional')
ncdMbufRouteTable = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 2, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdMbufRouteTable.setStatus('optional')
ncdMbufAtTable = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 2, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdMbufAtTable.setStatus('optional')
ncdMbufSocketName = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 2, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdMbufSocketName.setStatus('optional')
ncdMbufSocketOptions = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 2, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdMbufSocketOptions.setStatus('optional')
ncdMbufFrags = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 2, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdMbufFrags.setStatus('optional')
ncdMbufInterfaceAddr = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 2, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdMbufInterfaceAddr.setStatus('optional')
ncdEtherTable = MibTable((1, 3, 6, 1, 4, 1, 82, 2, 1, 3, 1), ).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncdEtherTable.setStatus('optional')
ncdEtherEntry = MibTableRow((1, 3, 6, 1, 4, 1, 82, 2, 1, 3, 1, 1), ).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncdEtherEntry.setStatus('optional')
ncdEtherInCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 3, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdEtherInCrcErrors.setStatus('optional')
ncdEtherInMissed = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdEtherInMissed.setStatus('optional')
ncdEtherInFrameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdEtherInFrameErrors.setStatus('optional')
ncdEtherSingleCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdEtherSingleCollisions.setStatus('optional')
ncdEtherMultipleCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdEtherMultipleCollisions.setStatus('optional')
ncdEtherLateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdEtherLateCollisions.setStatus('optional')
ncdEtherOutDeferred = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdEtherOutDeferred.setStatus('optional')
ncdEtherOutRetryErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdEtherOutRetryErrors.setStatus('optional')
ncdEtherLostCarrier = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdEtherLostCarrier.setStatus('optional')
ncdEtherRestarts = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdEtherRestarts.setStatus('optional')
ncdSerialTable = MibTable((1, 3, 6, 1, 4, 1, 82, 2, 1, 4, 1), ).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncdSerialTable.setStatus('optional')
ncdSerialEntry = MibTableRow((1, 3, 6, 1, 4, 1, 82, 2, 1, 4, 1, 1), ).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncdSerialEntry.setStatus('optional')
ncdSerialInOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 4, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdSerialInOverruns.setStatus('optional')
ncdSerialInFrameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 4, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdSerialInFrameErrors.setStatus('optional')
ncdSerialInParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdSerialInParityErrors.setStatus('optional')
ncdSerialInBreakErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdSerialInBreakErrors.setStatus('optional')
ncdTcpRetransDrops = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 5, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdTcpRetransDrops.setStatus('optional')
ncdTcpOutKeepAlives = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 5, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdTcpOutKeepAlives.setStatus('optional')
ncdTcpKeepAliveDrops = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 5, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdTcpKeepAliveDrops.setStatus('optional')
ncdTcpInAcks = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 5, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdTcpInAcks.setStatus('optional')
ncdTcpOutBareAcks = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 5, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdTcpOutBareAcks.setStatus('optional')
ncdTftpClientReadReqs = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 7, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdTftpClientReadReqs.setStatus('optional')
ncdTftpClientWriteReqs = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 7, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdTftpClientWriteReqs.setStatus('optional')
ncdTftpClientInDataPkts = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 7, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdTftpClientInDataPkts.setStatus('optional')
ncdTftpClientInAcks = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 7, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdTftpClientInAcks.setStatus('optional')
ncdTftpClientInNoFileErrors = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 7, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdTftpClientInNoFileErrors.setStatus('optional')
ncdTftpClientInAccessErrors = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 7, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdTftpClientInAccessErrors.setStatus('optional')
ncdTftpClientInDiskFullErrors = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 7, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdTftpClientInDiskFullErrors.setStatus('optional')
ncdTftpClientNoBufs = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 7, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdTftpClientNoBufs.setStatus('optional')
ncdTftpClientOutDataPkts = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 7, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdTftpClientOutDataPkts.setStatus('optional')
ncdTftpClientOutAcks = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 7, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdTftpClientOutAcks.setStatus('optional')
ncdTftpClientRetrans = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 7, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdTftpClientRetrans.setStatus('optional')
ncdTftpClientRetries = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 7, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncdTftpClientRetries.setStatus('optional')
ncdTftpClientTimeout = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 7, 13), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncdTftpClientTimeout.setStatus('optional')
ncdNfsClientNulls = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsClientNulls.setStatus('optional')
ncdNfsClientGetAttributes = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsClientGetAttributes.setStatus('optional')
ncdNfsClientSetAttributes = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsClientSetAttributes.setStatus('optional')
ncdNfsClientGetRoots = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsClientGetRoots.setStatus('optional')
ncdNfsClientLookups = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsClientLookups.setStatus('optional')
ncdNfsClientReadLinks = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsClientReadLinks.setStatus('optional')
ncdNfsClientReads = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsClientReads.setStatus('optional')
ncdNfsClientWriteCaches = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsClientWriteCaches.setStatus('optional')
ncdNfsClientWrites = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsClientWrites.setStatus('optional')
ncdNfsClientCreates = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsClientCreates.setStatus('optional')
ncdNfsClientRemoves = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsClientRemoves.setStatus('optional')
ncdNfsClientRenames = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsClientRenames.setStatus('optional')
ncdNfsClientCreateLinks = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsClientCreateLinks.setStatus('optional')
ncdNfsClientCreateSymlinks = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsClientCreateSymlinks.setStatus('optional')
ncdNfsClientMakeDir = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsClientMakeDir.setStatus('optional')
ncdNfsClientRemoveDir = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsClientRemoveDir.setStatus('optional')
ncdNfsClientReadDir = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsClientReadDir.setStatus('optional')
ncdNfsClientStatFileSys = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsClientStatFileSys.setStatus('optional')
ncdNfsMountTable = MibTable((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 19), ).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncdNfsMountTable.setStatus('optional')
ncdNfsMountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 19, 1), ).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncdNfsMountEntry.setStatus('optional')
ncdNfsMountEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 19, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsMountEntryIndex.setStatus('optional')
ncdNfsMountEntryLocalDir = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 19, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsMountEntryLocalDir.setStatus('optional')
ncdNfsMountEntryServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 19, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsMountEntryServerAddr.setStatus('optional')
ncdNfsMountEntryServerDir = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 19, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdNfsMountEntryServerDir.setStatus('optional')
ncdNfsMountEntryReadSize = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 19, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncdNfsMountEntryReadSize.setStatus('optional')
ncdNfsMountEntryWriteSize = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 19, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncdNfsMountEntryWriteSize.setStatus('optional')
ncdNfsMountEntryRetrans = MibScalar((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 19, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncdNfsMountEntryRetrans.setStatus('optional')
ncdNfsMountEntryTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 82, 2, 1, 8, 19, 1, 8), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncdNfsMountEntryTimeout.setStatus('optional')
mibBuilder.exportSymbols("NCD-MIB-1", ncdNfsClientCreateSymlinks=ncdNfsClientCreateSymlinks, ncdEtherTable=ncdEtherTable, ncdNfsClientMakeDir=ncdNfsClientMakeDir, ncdMbufReserved=ncdMbufReserved, ncdNfsMountTable=ncdNfsMountTable, ncdMbufHeader=ncdMbufHeader, ncdMbufSocketOptions=ncdMbufSocketOptions, ncdSysIdleTime=ncdSysIdleTime, ncdEtherMultipleCollisions=ncdEtherMultipleCollisions, ncdNfsMountEntryServerDir=ncdNfsMountEntryServerDir, ncdNfsClientWriteCaches=ncdNfsClientWriteCaches, ncdTcp=ncdTcp, ncdNfsClientReadDir=ncdNfsClientReadDir, ncdMbufClusterFree=ncdMbufClusterFree, ncdNfsClientGetAttributes=ncdNfsClientGetAttributes, ncdTftpClientOutDataPkts=ncdTftpClientOutDataPkts, ncdMbufRouteTable=ncdMbufRouteTable, ncd16=ncd16, ncdTftpClientRetrans=ncdTftpClientRetrans, ncdNfsClientWrites=ncdNfsClientWrites, ncdTftpClientTimeout=ncdTftpClientTimeout, ncdSerialInParityErrors=ncdSerialInParityErrors, ncdNfsClientGetRoots=ncdNfsClientGetRoots, ncdMbufDrops=ncdMbufDrops, ncdTftpClientInDiskFullErrors=ncdTftpClientInDiskFullErrors, ncdMbufInterfaceAddr=ncdMbufInterfaceAddr, ncdSerialInFrameErrors=ncdSerialInFrameErrors, ncdTcpInAcks=ncdTcpInAcks, ncdMbufAtTable=ncdMbufAtTable, ncdNfs=ncdNfs, ncd_mibs_mib1=ncd_mibs_mib1, ncdMbufFrags=ncdMbufFrags, ncdTcpRetransDrops=ncdTcpRetransDrops, ncdSystem=ncdSystem, ncdTftpClientReadReqs=ncdTftpClientReadReqs, ncdSerialEntry=ncdSerialEntry, ncd17c=ncd17c, ncd=ncd, ncdMbufFree=ncdMbufFree, ncdTcpOutKeepAlives=ncdTcpOutKeepAlives, ncdNfsClientLookups=ncdNfsClientLookups, ncdEtherSingleCollisions=ncdEtherSingleCollisions, ncdNfsClientCreateLinks=ncdNfsClientCreateLinks, ncdTftpClientOutAcks=ncdTftpClientOutAcks, ncdTftpClientInAccessErrors=ncdTftpClientInAccessErrors, ncdNfsMountEntryLocalDir=ncdNfsMountEntryLocalDir, ncd16e=ncd16e, ncdNfsClientNulls=ncdNfsClientNulls, ncdNfsMountEntryWriteSize=ncdNfsMountEntryWriteSize, ncdNfsClientReadLinks=ncdNfsClientReadLinks, ncdEtherRestarts=ncdEtherRestarts, ncdTftpClientRetries=ncdTftpClientRetries, ncdTcpKeepAliveDrops=ncdTcpKeepAliveDrops, ncdEtherEntry=ncdEtherEntry, ncdMbufClusterTotal=ncdMbufClusterTotal, ncdSerialTable=ncdSerialTable, ncd_products=ncd_products, ncdEtherLostCarrier=ncdEtherLostCarrier, ncdSerialInOverruns=ncdSerialInOverruns, ncdEtherOutRetryErrors=ncdEtherOutRetryErrors, ncdNfsMountEntryTimeout=ncdNfsMountEntryTimeout, ncdTftpClientWriteReqs=ncdTftpClientWriteReqs, ncdNfsMountEntry=ncdNfsMountEntry, ncdNfsMountEntryRetrans=ncdNfsMountEntryRetrans, ncdMbufData=ncdMbufData, ncdEtherLateCollisions=ncdEtherLateCollisions, ncdMbuf=ncdMbuf, ncdEtherOutDeferred=ncdEtherOutDeferred, ncdTftpClientInNoFileErrors=ncdTftpClientInNoFileErrors, ncdMbufWaits=ncdMbufWaits, ncdEtherInMissed=ncdEtherInMissed, ncdNfsClientSetAttributes=ncdNfsClientSetAttributes, ncdNfsMountEntryIndex=ncdNfsMountEntryIndex, ncdMbufTotal=ncdMbufTotal, ncdMbufSocketName=ncdMbufSocketName, ncdSysMemFrags=ncdSysMemFrags, ncdMbufSocket=ncdMbufSocket, ncdSerial=ncdSerial, ncdTftp=ncdTftp, ncdTftpClientInAcks=ncdTftpClientInAcks, ncdNfsMountEntryServerAddr=ncdNfsMountEntryServerAddr, ncdTcpOutBareAcks=ncdTcpOutBareAcks, ncdNfsClientCreates=ncdNfsClientCreates, ncdTftpClientNoBufs=ncdTftpClientNoBufs, ncdNfsClientRemoveDir=ncdNfsClientRemoveDir, ncdNfsClientStatFileSys=ncdNfsClientStatFileSys, ncd_mibs=ncd_mibs, ncdNfsClientReads=ncdNfsClientReads, ncdNfsClientRenames=ncdNfsClientRenames, ncdEtherInCrcErrors=ncdEtherInCrcErrors, ncdSysMemTotal=ncdSysMemTotal, ncdEther=ncdEther, ncdTftpClientInDataPkts=ncdTftpClientInDataPkts, ncdNfsMountEntryReadSize=ncdNfsMountEntryReadSize, ncdSerialInBreakErrors=ncdSerialInBreakErrors, ncdEtherInFrameErrors=ncdEtherInFrameErrors, ncdSysMemAvail=ncdSysMemAvail, ncdNfsClientRemoves=ncdNfsClientRemoves, ncdMbufProtoCtrlBlock=ncdMbufProtoCtrlBlock, ncd19=ncd19)
