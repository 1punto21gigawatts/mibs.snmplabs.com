#
# PySNMP MIB module Bull-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Bull-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:42:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, NotificationType, IpAddress, MibIdentifier, Counter64, Gauge32, enterprises, iso, Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Unsigned32, TimeTicks, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "NotificationType", "IpAddress", "MibIdentifier", "Counter64", "Gauge32", "enterprises", "iso", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Unsigned32", "TimeTicks", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
bull = MibIdentifier((1, 3, 6, 1, 4, 1, 107))
bull_products = MibIdentifier((1, 3, 6, 1, 4, 1, 107, 1)).setLabel("bull-products")
bull_DPX2 = MibIdentifier((1, 3, 6, 1, 4, 1, 107, 1, 1)).setLabel("bull-DPX2")
bull_mibs = MibIdentifier((1, 3, 6, 1, 4, 1, 107, 2)).setLabel("bull-mibs")
bull_mibs_mib1 = MibIdentifier((1, 3, 6, 1, 4, 1, 107, 2, 1)).setLabel("bull-mibs-mib1")
bull_System = MibIdentifier((1, 3, 6, 1, 4, 1, 107, 2, 1, 1)).setLabel("bull-System")
bull_Streams = MibIdentifier((1, 3, 6, 1, 4, 1, 107, 2, 1, 2)).setLabel("bull-Streams")
bull_Ether = MibIdentifier((1, 3, 6, 1, 4, 1, 107, 2, 1, 3)).setLabel("bull-Ether")
bull_Serial = MibIdentifier((1, 3, 6, 1, 4, 1, 107, 2, 1, 4)).setLabel("bull-Serial")
bull_X25 = MibIdentifier((1, 3, 6, 1, 4, 1, 107, 2, 1, 5)).setLabel("bull-X25")
bull_NMFX = MibIdentifier((1, 3, 6, 1, 4, 1, 107, 2, 1, 6)).setLabel("bull-NMFX")
bull_DPX2_100 = MibScalar((1, 3, 6, 1, 4, 1, 107, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setLabel("bull-DPX2-100").setMaxAccess("readonly")
if mibBuilder.loadTexts: bull_DPX2_100.setStatus('optional')
if mibBuilder.loadTexts: bull_DPX2_100.setDescription('')
bull_DPX2_200 = MibScalar((1, 3, 6, 1, 4, 1, 107, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setLabel("bull-DPX2-200").setMaxAccess("readonly")
if mibBuilder.loadTexts: bull_DPX2_200.setStatus('optional')
if mibBuilder.loadTexts: bull_DPX2_200.setDescription('')
bull_DPX2_300 = MibScalar((1, 3, 6, 1, 4, 1, 107, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setLabel("bull-DPX2-300").setMaxAccess("readonly")
if mibBuilder.loadTexts: bull_DPX2_300.setStatus('optional')
if mibBuilder.loadTexts: bull_DPX2_300.setDescription('')
bullStrTable = MibTable((1, 3, 6, 1, 4, 1, 107, 2, 1, 2, 1), )
if mibBuilder.loadTexts: bullStrTable.setStatus('mandatory')
if mibBuilder.loadTexts: bullStrTable.setDescription('Status information of Streams usage.')
bullStrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 107, 2, 1, 2, 1, 1), ).setIndexNames((0, "Bull-MIB", "bullStrType"))
if mibBuilder.loadTexts: bullStrEntry.setStatus('mandatory')
if mibBuilder.loadTexts: bullStrEntry.setDescription('Status information of Streams usage for a specific type of buffer.')
bullStrType = MibTableColumn((1, 3, 6, 1, 4, 1, 107, 2, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("streams", 1), ("queues", 2), ("messages", 3), ("blocks", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bullStrType.setStatus('mandatory')
if mibBuilder.loadTexts: bullStrType.setDescription('An index value that uniquely identifies a type of buffer.')
bullStrAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 107, 2, 1, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bullStrAlloc.setStatus('mandatory')
if mibBuilder.loadTexts: bullStrAlloc.setDescription('')
bullStrInuse = MibTableColumn((1, 3, 6, 1, 4, 1, 107, 2, 1, 2, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bullStrInuse.setStatus('mandatory')
if mibBuilder.loadTexts: bullStrInuse.setDescription('')
bullStrMaxs = MibTableColumn((1, 3, 6, 1, 4, 1, 107, 2, 1, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bullStrMaxs.setStatus('mandatory')
if mibBuilder.loadTexts: bullStrMaxs.setDescription('')
bullStrTotals = MibTableColumn((1, 3, 6, 1, 4, 1, 107, 2, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bullStrTotals.setStatus('mandatory')
if mibBuilder.loadTexts: bullStrTotals.setDescription('')
bullStrFails = MibTableColumn((1, 3, 6, 1, 4, 1, 107, 2, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bullStrFails.setStatus('mandatory')
if mibBuilder.loadTexts: bullStrFails.setDescription('')
bullBlkTable = MibTable((1, 3, 6, 1, 4, 1, 107, 2, 1, 2, 2), )
if mibBuilder.loadTexts: bullBlkTable.setStatus('mandatory')
if mibBuilder.loadTexts: bullBlkTable.setDescription('Status information of data Blocks usage.')
bullBlkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 107, 2, 1, 2, 2, 1), ).setIndexNames((0, "Bull-MIB", "bullBlkclass"))
if mibBuilder.loadTexts: bullBlkEntry.setStatus('mandatory')
if mibBuilder.loadTexts: bullBlkEntry.setDescription('Status information of data Blocks usage for a specific type of block.')
bullBlkClass = MibTableColumn((1, 3, 6, 1, 4, 1, 107, 2, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bullBlkClass.setStatus('mandatory')
if mibBuilder.loadTexts: bullBlkClass.setDescription('An index value that uniquely identifies a type of block.')
bullBlkAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 107, 2, 1, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bullBlkAlloc.setStatus('mandatory')
if mibBuilder.loadTexts: bullBlkAlloc.setDescription('')
bullBlkInuse = MibTableColumn((1, 3, 6, 1, 4, 1, 107, 2, 1, 2, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bullBlkInuse.setStatus('mandatory')
if mibBuilder.loadTexts: bullBlkInuse.setDescription('')
bullBlkLowpris = MibTableColumn((1, 3, 6, 1, 4, 1, 107, 2, 1, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bullBlkLowpris.setStatus('mandatory')
if mibBuilder.loadTexts: bullBlkLowpris.setDescription('')
bullBlkMedpris = MibTableColumn((1, 3, 6, 1, 4, 1, 107, 2, 1, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bullBlkMedpris.setStatus('mandatory')
if mibBuilder.loadTexts: bullBlkMedpris.setDescription('')
bullBlkMaxs = MibTableColumn((1, 3, 6, 1, 4, 1, 107, 2, 1, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bullBlkMaxs.setStatus('mandatory')
if mibBuilder.loadTexts: bullBlkMaxs.setDescription('')
bullBlkTotals = MibTableColumn((1, 3, 6, 1, 4, 1, 107, 2, 1, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bullBlkTotals.setStatus('mandatory')
if mibBuilder.loadTexts: bullBlkTotals.setDescription('')
bullBlkFails = MibTableColumn((1, 3, 6, 1, 4, 1, 107, 2, 1, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bullBlkFails.setStatus('mandatory')
if mibBuilder.loadTexts: bullBlkFails.setDescription('')
mibBuilder.exportSymbols("Bull-MIB", bull_mibs_mib1=bull_mibs_mib1, bull_NMFX=bull_NMFX, bull_products=bull_products, bullBlkFails=bullBlkFails, bull_Serial=bull_Serial, bull_Streams=bull_Streams, bullBlkClass=bullBlkClass, bullStrMaxs=bullStrMaxs, bullBlkEntry=bullBlkEntry, bullBlkMedpris=bullBlkMedpris, bullBlkTotals=bullBlkTotals, bullBlkAlloc=bullBlkAlloc, bullBlkMaxs=bullBlkMaxs, bullStrType=bullStrType, bullStrTotals=bullStrTotals, bull_DPX2_100=bull_DPX2_100, bull_X25=bull_X25, bull_mibs=bull_mibs, bull=bull, bull_DPX2_200=bull_DPX2_200, bullStrEntry=bullStrEntry, bullBlkTable=bullBlkTable, bullStrFails=bullStrFails, bull_Ether=bull_Ether, bullBlkInuse=bullBlkInuse, bullStrAlloc=bullStrAlloc, bullStrTable=bullStrTable, bullBlkLowpris=bullBlkLowpris, bull_DPX2=bull_DPX2, bullStrInuse=bullStrInuse, bull_DPX2_300=bull_DPX2_300, bull_System=bull_System)
