#
# PySNMP MIB module TPLINK-PROTOCOL-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-PROTOCOL-VLAN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:25:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, iso, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Unsigned32, ModuleIdentity, IpAddress, NotificationType, TimeTicks, MibIdentifier, ObjectIdentity, Gauge32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "iso", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Unsigned32", "ModuleIdentity", "IpAddress", "NotificationType", "TimeTicks", "MibIdentifier", "ObjectIdentity", "Gauge32", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
TPRowStatus, = mibBuilder.importSymbols("TPLINK-TC-MIB", "TPRowStatus")
tplinkProtocolVlanMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 16))
tplinkProtocolVlanMIB.setRevisions(('2009-08-03 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: tplinkProtocolVlanMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: tplinkProtocolVlanMIB.setLastUpdated('200812160000Z')
if mibBuilder.loadTexts: tplinkProtocolVlanMIB.setOrganization('TPLINK')
if mibBuilder.loadTexts: tplinkProtocolVlanMIB.setContactInfo('www.tplink.com.cn')
if mibBuilder.loadTexts: tplinkProtocolVlanMIB.setDescription('Protocol VLAN (Virtual Local Area Network) is the way to classify VLANs based on Protocols. A Protocol is relative to a single VLAN ID. The untagged packets and the priority-tagged packets matching the protocol template will be tagged with this VLAN ID.')
tplinkProtocolVlanMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 16, 1))
tplinkProtocolVlanNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 16, 2))
protocolTemplate = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 16, 1, 1))
protocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 16, 1, 2))
protocolTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 16, 1, 1, 1), )
if mibBuilder.loadTexts: protocolTemplateTable.setStatus('current')
if mibBuilder.loadTexts: protocolTemplateTable.setDescription('The Protocol Template should be created before configuring the Protocol VLAN. By default, the switch has defined the IP Template, ARP Template, RARP Template, etc. You can add more Protocol Template.')
templateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 16, 1, 1, 1, 1), ).setIndexNames((0, "TPLINK-PROTOCOL-VLAN-MIB", "templateProtocolName"))
if mibBuilder.loadTexts: templateEntry.setStatus('current')
if mibBuilder.loadTexts: templateEntry.setDescription('An entry contains of the information of a protocol template.')
templateProtocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 16, 1, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: templateProtocolName.setStatus('current')
if mibBuilder.loadTexts: templateProtocolName.setDescription('Give a name for the Protocol Template,1-8 characters')
templateEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 16, 1, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: templateEtherType.setStatus('current')
if mibBuilder.loadTexts: templateEtherType.setDescription('Enter the Ethernet protocol type field in the protocol template, for example 0800,0ff0. The value is [dsap ssap] when frame type is llc. ')
templateFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 16, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ethernet8023", 0), ("ethernetII", 1), ("snap", 2), ("llc", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: templateFrameType.setStatus('current')
if mibBuilder.loadTexts: templateFrameType.setDescription('')
templateStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 16, 1, 1, 1, 1, 4), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: templateStatus.setStatus('current')
if mibBuilder.loadTexts: templateStatus.setDescription('the following two values are states: these values may be read or written active(1), the following three values are actions: these values may be written, but are never read createAndGo(4), destroy(6)')
protocolGroupTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 16, 1, 2, 1), )
if mibBuilder.loadTexts: protocolGroupTable.setStatus('current')
if mibBuilder.loadTexts: protocolGroupTable.setDescription('Here you can configure the Protocol VLAN.')
protocolVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 16, 1, 2, 1, 1), ).setIndexNames((0, "TPLINK-PROTOCOL-VLAN-MIB", "protocolName"))
if mibBuilder.loadTexts: protocolVlanEntry.setStatus('current')
if mibBuilder.loadTexts: protocolVlanEntry.setDescription('An entry contains of the information of a protocol vlan.')
protocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 16, 1, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolName.setStatus('current')
if mibBuilder.loadTexts: protocolName.setDescription('Displays the protocol template name of the VLAN.')
protocolVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 16, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolVlanId.setStatus('current')
if mibBuilder.loadTexts: protocolVlanId.setDescription('Enter the ID number of the Protocol VLAN. This VLAN should be one of the 802.1Q VLANs the ingress port belongs to,1-4094.')
protocolPortMember = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 16, 1, 2, 1, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolPortMember.setStatus('current')
if mibBuilder.loadTexts: protocolPortMember.setDescription('Protocol Vlan port member.')
protocolVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 16, 1, 2, 1, 1, 4), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolVlanStatus.setStatus('current')
if mibBuilder.loadTexts: protocolVlanStatus.setDescription('the following two values are states: these values may be read or written active(1), the following three values are actions: these values may be written, but are never read createAndGo(4), destroy(6)')
mibBuilder.exportSymbols("TPLINK-PROTOCOL-VLAN-MIB", tplinkProtocolVlanMIB=tplinkProtocolVlanMIB, protocolTemplateTable=protocolTemplateTable, protocolPortMember=protocolPortMember, PYSNMP_MODULE_ID=tplinkProtocolVlanMIB, protocolVlanId=protocolVlanId, tplinkProtocolVlanMIBObjects=tplinkProtocolVlanMIBObjects, protocolVlanEntry=protocolVlanEntry, protocolVlanStatus=protocolVlanStatus, templateEtherType=templateEtherType, templateProtocolName=templateProtocolName, templateEntry=templateEntry, templateStatus=templateStatus, templateFrameType=templateFrameType, protocolName=protocolName, tplinkProtocolVlanNotifications=tplinkProtocolVlanNotifications, protocolTemplate=protocolTemplate, protocolGroupTable=protocolGroupTable, protocolGroup=protocolGroup)
