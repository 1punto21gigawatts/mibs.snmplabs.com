#
# PySNMP MIB module ALVARION-PUBLIC-ACCESS-RETENTION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALVARION-PUBLIC-ACCESS-RETENTION-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:22:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
alvarionMgmtV2, = mibBuilder.importSymbols("ALVARION-SMI", "alvarionMgmtV2")
AlvarionSSIDOrNone, = mibBuilder.importSymbols("ALVARION-TC", "AlvarionSSIDOrNone")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
IpAddress, iso, NotificationType, Bits, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter64, TimeTicks, Integer32, ModuleIdentity, MibIdentifier, Counter32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "NotificationType", "Bits", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter64", "TimeTicks", "Integer32", "ModuleIdentity", "MibIdentifier", "Counter32", "ObjectIdentity")
TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "DateAndTime")
alvarionPublicAccessRetentionMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15))
if mibBuilder.loadTexts: alvarionPublicAccessRetentionMIB.setLastUpdated('200710310000Z')
if mibBuilder.loadTexts: alvarionPublicAccessRetentionMIB.setOrganization('Alvarion Ltd.')
if mibBuilder.loadTexts: alvarionPublicAccessRetentionMIB.setContactInfo('Alvarion Ltd. Postal: 21a HaBarzel St. P.O. Box 13139 Tel-Aviv 69710 Israel Phone: +972 3 645 6262')
if mibBuilder.loadTexts: alvarionPublicAccessRetentionMIB.setDescription('Alvarion Public Access MIB.')
alvarionPublicAccessRetentionMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1))
publicAccessRetentionSessionsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 1))
publicAccessRetentionPeriodicStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 2))
publicAccessRetentionSessionsMaxCount = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: publicAccessRetentionSessionsMaxCount.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionSessionsMaxCount.setDescription('The maximum number of entries inside the publicAccessRetentionSessionTable. The maximum value for this is 250% the maximum number of users configured inside the product.')
publicAccessRetentionSessionsMaxTime = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 1200)).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: publicAccessRetentionSessionsMaxTime.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionSessionsMaxTime.setDescription("The maximum number of seconds for an entry to remain in the table. When expired the session's state changes to Unassigned.")
publicAccessRetentionSessionTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 1, 3), )
if mibBuilder.loadTexts: publicAccessRetentionSessionTable.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionSessionTable.setDescription('A table containing information about existing or past authenticated user sessions.')
publicAccessRetentionSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 1, 3, 1), ).setIndexNames((0, "ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionSessionIndex"))
if mibBuilder.loadTexts: publicAccessRetentionSessionEntry.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionSessionEntry.setDescription('Information about a particular authenticated user session. publicAccessRetentionSessionIndex - Uniquely identifies a session in the table.')
publicAccessRetentionSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: publicAccessRetentionSessionIndex.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionSessionIndex.setDescription('Index of a session in the publicAccessRetentionSessionTable.')
publicAccessRetentionSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unassigned", 0), ("connected", 2), ("reconnecting", 3), ("disconnecting", 4), ("disconnected", 5), ("disconnectingAdministrative", 6), ("disconnectedAdministrative", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: publicAccessRetentionSessionState.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionSessionState.setDescription("Indicates the current state of the user's session.")
publicAccessRetentionSessionUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 253))).setMaxAccess("readonly")
if mibBuilder.loadTexts: publicAccessRetentionSessionUserName.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionSessionUserName.setDescription("Indicates the last user's name used for RADIUS authentication.")
publicAccessRetentionSessionStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 1, 3, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: publicAccessRetentionSessionStartTime.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionSessionStartTime.setDescription('Indicates when this user session was started.')
publicAccessRetentionSessionDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 1, 3, 1, 5), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: publicAccessRetentionSessionDuration.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionSessionDuration.setDescription("Indicates how long the user's session has been active. When this counter reaches its maximum value, it wraps around and starts increasing again from zero.")
publicAccessRetentionSessionStationIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 1, 3, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: publicAccessRetentionSessionStationIpAddress.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionSessionStationIpAddress.setDescription("Indicates the user's IP address.")
publicAccessRetentionSessionPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: publicAccessRetentionSessionPacketsSent.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionSessionPacketsSent.setDescription('Indicates the total number of IP packets sent by the user. When this counter reaches its maximum value, it wraps around and starts increasing again from zero.')
publicAccessRetentionSessionPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: publicAccessRetentionSessionPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionSessionPacketsReceived.setDescription('Indicates the total number of IP packets received by the user. When this counter reaches its maximum value, it wraps around and starts increasing again from zero.')
publicAccessRetentionSessionBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: publicAccessRetentionSessionBytesSent.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionSessionBytesSent.setDescription('Indicates the total number of bytes sent by the user. When this counter reaches its maximum value, it wraps around and starts increasing again from zero.')
publicAccessRetentionSessionBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 1, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: publicAccessRetentionSessionBytesReceived.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionSessionBytesReceived.setDescription('Indicates the total number of bytes received by the user. When this counter reaches its maximum value, it wraps around and starts increasing again from zero.')
publicAccessRetentionSessionSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 1, 3, 1, 11), AlvarionSSIDOrNone()).setMaxAccess("readonly")
if mibBuilder.loadTexts: publicAccessRetentionSessionSSID.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionSessionSSID.setDescription("Indicates the user's Access Point SSID (ONLY when Location-aware is enabled and properly configured). If this information is not available, a zero-length string will be returned.")
publicAccessRetentionPeriodicStatsMaxCount = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: publicAccessRetentionPeriodicStatsMaxCount.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionPeriodicStatsMaxCount.setDescription('Specifies the maximum number of periods to keep inside the table.')
publicAccessRetentionPeriodicStatsDuration = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 1200)).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: publicAccessRetentionPeriodicStatsDuration.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionPeriodicStatsDuration.setDescription('Specifies the amount of time for a period of an entry inside the table. Changing the value will erase the table contents.')
publicAccessRetentionPeriodTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 2, 3), )
if mibBuilder.loadTexts: publicAccessRetentionPeriodTable.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionPeriodTable.setDescription("A table containing statistics information about number of authentication user's sessions pending and terminated.")
publicAccessRetentionPeriodEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 2, 3, 1), ).setIndexNames((0, "ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionPeriodIndex"))
if mibBuilder.loadTexts: publicAccessRetentionPeriodEntry.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionPeriodEntry.setDescription('Statistics information about the number of authenticated user sessions in a given period of time.')
publicAccessRetentionPeriodIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9999)))
if mibBuilder.loadTexts: publicAccessRetentionPeriodIndex.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionPeriodIndex.setDescription('Index of a statistics period.')
publicAccessRetentionPeriodStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 2, 3, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: publicAccessRetentionPeriodStartTime.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionPeriodStartTime.setDescription("Indicates the start time for the statistical period. If zero, then the period doesn't contains valid information.")
publicAccessRetentionPeriodStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 2, 3, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: publicAccessRetentionPeriodStopTime.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionPeriodStopTime.setDescription('Indicates the stop time for the statistical period. If zero, the period is not terminated yet.')
publicAccessRetentionPeriodHighestSessionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: publicAccessRetentionPeriodHighestSessionCount.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionPeriodHighestSessionCount.setDescription('Indicates the highest number of simultaneous authenticated user sessions within this time period.')
publicAccessRetentionPeriodTotalSessionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 1, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: publicAccessRetentionPeriodTotalSessionCount.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionPeriodTotalSessionCount.setDescription("Indicates the total number of authenticated user's session within this time period.")
publicAccessRetentionMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 2))
publicAccessRetentionMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 2, 0))
publicAccessRetentionSessionMaxCountReachedTrap = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 2, 0, 1)).setObjects(("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionSessionsMaxCount"), ("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionSessionsMaxTime"))
if mibBuilder.loadTexts: publicAccessRetentionSessionMaxCountReachedTrap.setStatus('current')
if mibBuilder.loadTexts: publicAccessRetentionSessionMaxCountReachedTrap.setDescription('This notification is sent whenever the number of session exceed the value of publicAccessRetentionSessionsMaxCount.')
alvarionPublicAccessRetentionMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 3))
alvarionPublicAccessRetentionMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 3, 1))
alvarionPublicAccessRetentionMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 3, 2))
alvarionPublicAccessRetentionMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 3, 1, 1)).setObjects(("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "alvarionPublicAccessRetentionSessionsMIBGroup"), ("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "alvarionPublicAccessRetentionPeriodicStatsMIBGroup"), ("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "alvarionPublicAccessRetentionNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionPublicAccessRetentionMIBCompliance = alvarionPublicAccessRetentionMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: alvarionPublicAccessRetentionMIBCompliance.setDescription('The compliance statement for entities which implement the Alvarion Public Access Retention MIB.')
alvarionPublicAccessRetentionSessionsMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 3, 2, 1)).setObjects(("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionSessionsMaxCount"), ("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionSessionsMaxTime"), ("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionSessionState"), ("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionSessionUserName"), ("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionSessionStartTime"), ("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionSessionDuration"), ("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionSessionStationIpAddress"), ("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionSessionPacketsSent"), ("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionSessionPacketsReceived"), ("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionSessionBytesSent"), ("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionSessionBytesReceived"), ("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionSessionSSID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionPublicAccessRetentionSessionsMIBGroup = alvarionPublicAccessRetentionSessionsMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionPublicAccessRetentionSessionsMIBGroup.setDescription('A collection of objects providing the Public Access Retention Sessions MIB capability.')
alvarionPublicAccessRetentionPeriodicStatsMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 3, 2, 2)).setObjects(("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionPeriodicStatsDuration"), ("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionPeriodicStatsMaxCount"), ("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionPeriodStartTime"), ("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionPeriodStopTime"), ("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionPeriodHighestSessionCount"), ("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionPeriodTotalSessionCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionPublicAccessRetentionPeriodicStatsMIBGroup = alvarionPublicAccessRetentionPeriodicStatsMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionPublicAccessRetentionPeriodicStatsMIBGroup.setDescription('A collection of objects providing the Public Access Retention PeriodicStats MIB capability.')
alvarionPublicAccessRetentionNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 15, 3, 2, 3)).setObjects(("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", "publicAccessRetentionSessionMaxCountReachedTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionPublicAccessRetentionNotificationGroup = alvarionPublicAccessRetentionNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionPublicAccessRetentionNotificationGroup.setDescription('A collection of supported notifications.')
mibBuilder.exportSymbols("ALVARION-PUBLIC-ACCESS-RETENTION-MIB", publicAccessRetentionSessionSSID=publicAccessRetentionSessionSSID, publicAccessRetentionSessionIndex=publicAccessRetentionSessionIndex, publicAccessRetentionSessionTable=publicAccessRetentionSessionTable, publicAccessRetentionSessionsMaxTime=publicAccessRetentionSessionsMaxTime, publicAccessRetentionPeriodHighestSessionCount=publicAccessRetentionPeriodHighestSessionCount, publicAccessRetentionSessionBytesReceived=publicAccessRetentionSessionBytesReceived, alvarionPublicAccessRetentionMIBCompliance=alvarionPublicAccessRetentionMIBCompliance, publicAccessRetentionPeriodicStatsMaxCount=publicAccessRetentionPeriodicStatsMaxCount, publicAccessRetentionSessionState=publicAccessRetentionSessionState, publicAccessRetentionPeriodEntry=publicAccessRetentionPeriodEntry, publicAccessRetentionSessionEntry=publicAccessRetentionSessionEntry, publicAccessRetentionPeriodicStatsGroup=publicAccessRetentionPeriodicStatsGroup, publicAccessRetentionSessionPacketsReceived=publicAccessRetentionSessionPacketsReceived, alvarionPublicAccessRetentionMIBGroups=alvarionPublicAccessRetentionMIBGroups, PYSNMP_MODULE_ID=alvarionPublicAccessRetentionMIB, publicAccessRetentionPeriodStartTime=publicAccessRetentionPeriodStartTime, alvarionPublicAccessRetentionMIBConformance=alvarionPublicAccessRetentionMIBConformance, publicAccessRetentionSessionDuration=publicAccessRetentionSessionDuration, alvarionPublicAccessRetentionMIBObjects=alvarionPublicAccessRetentionMIBObjects, publicAccessRetentionSessionsMaxCount=publicAccessRetentionSessionsMaxCount, publicAccessRetentionMIBNotificationPrefix=publicAccessRetentionMIBNotificationPrefix, publicAccessRetentionPeriodStopTime=publicAccessRetentionPeriodStopTime, publicAccessRetentionSessionStartTime=publicAccessRetentionSessionStartTime, publicAccessRetentionPeriodTotalSessionCount=publicAccessRetentionPeriodTotalSessionCount, publicAccessRetentionSessionBytesSent=publicAccessRetentionSessionBytesSent, publicAccessRetentionSessionUserName=publicAccessRetentionSessionUserName, publicAccessRetentionPeriodIndex=publicAccessRetentionPeriodIndex, alvarionPublicAccessRetentionPeriodicStatsMIBGroup=alvarionPublicAccessRetentionPeriodicStatsMIBGroup, publicAccessRetentionMIBNotifications=publicAccessRetentionMIBNotifications, publicAccessRetentionSessionPacketsSent=publicAccessRetentionSessionPacketsSent, alvarionPublicAccessRetentionMIBCompliances=alvarionPublicAccessRetentionMIBCompliances, publicAccessRetentionSessionMaxCountReachedTrap=publicAccessRetentionSessionMaxCountReachedTrap, publicAccessRetentionSessionsGroup=publicAccessRetentionSessionsGroup, alvarionPublicAccessRetentionMIB=alvarionPublicAccessRetentionMIB, publicAccessRetentionPeriodTable=publicAccessRetentionPeriodTable, publicAccessRetentionPeriodicStatsDuration=publicAccessRetentionPeriodicStatsDuration, alvarionPublicAccessRetentionSessionsMIBGroup=alvarionPublicAccessRetentionSessionsMIBGroup, alvarionPublicAccessRetentionNotificationGroup=alvarionPublicAccessRetentionNotificationGroup, publicAccessRetentionSessionStationIpAddress=publicAccessRetentionSessionStationIpAddress)
