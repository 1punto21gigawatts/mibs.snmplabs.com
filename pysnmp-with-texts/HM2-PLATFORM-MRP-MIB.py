#
# PySNMP MIB module HM2-PLATFORM-MRP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HM2-PLATFORM-MRP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:31:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
hm2PlatformMibs, = mibBuilder.importSymbols("HM2-TC-MIB", "hm2PlatformMibs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, iso, NotificationType, MibIdentifier, Gauge32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Integer32, ModuleIdentity, Bits, Counter64, ObjectIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "iso", "NotificationType", "MibIdentifier", "Gauge32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Integer32", "ModuleIdentity", "Bits", "Counter64", "ObjectIdentity", "IpAddress")
TextualConvention, TimeInterval, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeInterval", "DisplayString")
hm2PlatformMRP = ModuleIdentity((1, 3, 6, 1, 4, 1, 248, 12, 60))
hm2PlatformMRP.setRevisions(('2013-04-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hm2PlatformMRP.setRevisionsDescriptions(('Initial version.',))
if mibBuilder.loadTexts: hm2PlatformMRP.setLastUpdated('201304100000Z')
if mibBuilder.loadTexts: hm2PlatformMRP.setOrganization('Hirschmann Automation and Control GmbH')
if mibBuilder.loadTexts: hm2PlatformMRP.setContactInfo('Postal: Stuttgarter Str. 45-51 72654 Neckartenzlingen Germany Phone: +49 7127 140 E-mail: hac.support@belden.com')
if mibBuilder.loadTexts: hm2PlatformMRP.setDescription('The Hirschmann Private Platform2 MIB for 802.1Q MRP Configuration. Copyright (C) 2013. All Rights Reserved.')
hm2AgentDot1qMrp = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 12, 60, 1))
hm2AgentDot1qMrpMxrp = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 12, 60, 2))
hm2AgentDot1qPortMrpTable = MibTable((1, 3, 6, 1, 4, 1, 248, 12, 60, 1, 1), )
if mibBuilder.loadTexts: hm2AgentDot1qPortMrpTable.setStatus('current')
if mibBuilder.loadTexts: hm2AgentDot1qPortMrpTable.setDescription('A table of MRP control information about every bridge port. This is indexed by hm2AgentDot1qMrpPort.')
hm2AgentDot1qPortMrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 12, 60, 1, 1, 1), ).setIndexNames((0, "HM2-PLATFORM-MRP-MIB", "hm2AgentDot1qMrpPort"))
if mibBuilder.loadTexts: hm2AgentDot1qPortMrpEntry.setStatus('current')
if mibBuilder.loadTexts: hm2AgentDot1qPortMrpEntry.setDescription('MRP control information for a bridge port.')
hm2AgentDot1qMrpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 60, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hm2AgentDot1qMrpPort.setStatus('current')
if mibBuilder.loadTexts: hm2AgentDot1qMrpPort.setDescription('The MRP port number.')
hm2AgentDot1qPortMrpJoinTime = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 60, 1, 1, 1, 2), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(10, 100)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2AgentDot1qPortMrpJoinTime.setStatus('current')
if mibBuilder.loadTexts: hm2AgentDot1qPortMrpJoinTime.setDescription('The MRP Join time(10..100), in centiseconds.')
hm2AgentDot1qPortMrpLeaveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 60, 1, 1, 1, 3), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(20, 600)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2AgentDot1qPortMrpLeaveTime.setStatus('current')
if mibBuilder.loadTexts: hm2AgentDot1qPortMrpLeaveTime.setDescription('The MRP Leave time(20..600), in centiseconds.')
hm2AgentDot1qPortMrpLeaveAllTime = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 60, 1, 1, 1, 4), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(200, 6000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2AgentDot1qPortMrpLeaveAllTime.setStatus('current')
if mibBuilder.loadTexts: hm2AgentDot1qPortMrpLeaveAllTime.setDescription('The MRP LeaveAll time(200..6000), in centiseconds.')
mibBuilder.exportSymbols("HM2-PLATFORM-MRP-MIB", hm2AgentDot1qPortMrpEntry=hm2AgentDot1qPortMrpEntry, PYSNMP_MODULE_ID=hm2PlatformMRP, hm2AgentDot1qPortMrpLeaveTime=hm2AgentDot1qPortMrpLeaveTime, hm2AgentDot1qPortMrpTable=hm2AgentDot1qPortMrpTable, hm2AgentDot1qMrpMxrp=hm2AgentDot1qMrpMxrp, hm2AgentDot1qMrp=hm2AgentDot1qMrp, hm2AgentDot1qPortMrpLeaveAllTime=hm2AgentDot1qPortMrpLeaveAllTime, hm2AgentDot1qMrpPort=hm2AgentDot1qMrpPort, hm2AgentDot1qPortMrpJoinTime=hm2AgentDot1qPortMrpJoinTime, hm2PlatformMRP=hm2PlatformMRP)
