#
# PySNMP MIB module NNCEXTE3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NNCEXTE3-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:22:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
nncExtensions, = mibBuilder.importSymbols("NNCGNI0001-SMI", "nncExtensions")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter64, Unsigned32, Bits, TimeTicks, IpAddress, iso, Gauge32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter32, ObjectIdentity, ModuleIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Unsigned32", "Bits", "TimeTicks", "IpAddress", "iso", "Gauge32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter32", "ObjectIdentity", "ModuleIdentity", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nncExtE3 = ModuleIdentity((1, 3, 6, 1, 4, 1, 123, 3, 40))
if mibBuilder.loadTexts: nncExtE3.setLastUpdated('9611251500Z')
if mibBuilder.loadTexts: nncExtE3.setOrganization('Newbridge Networks Corporation')
if mibBuilder.loadTexts: nncExtE3.setContactInfo('Newbridge Networks Corporation Postal: 600 March Road Kanata, Ontario Canada K2K 2E6 Phone: +1 613 591 3600 Fax: +1 613 591 3680')
if mibBuilder.loadTexts: nncExtE3.setDescription('This module contains definitions for Newbridge extensions to E3 objects. It is used as a supplement to rfc1407.')
nncExtE3Objects = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 40, 1))
nncExtE3Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 40, 2))
nncExtE3Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 40, 3))
nncExtE3Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 40, 4))
nncExtE3Current15MinTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 1), )
if mibBuilder.loadTexts: nncExtE3Current15MinTable.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Current15MinTable.setDescription('NNC Extension to dsx3CurrentTable.')
nncExtE3Current15MinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: nncExtE3Current15MinEntry.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Current15MinEntry.setDescription('An entry in nncExtE3Current15MinTable.')
nncExtE3Current15MinESs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 1, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtE3Current15MinESs.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Current15MinESs.setDescription('The counter associated with the number of Path Errored Seconds encountered by a E3 interface in the current 15 minute interval. This counts the seconds containing one or more BIP errors, one or more LOF defects, one or more LOS defects, or a detected incoming AIS. This counter is valid when an interface is configured for Direct cell mapping. When an interface is configured for PLCP cell mapping, the counter returns the last valid count when the port is in the Direct mode.')
nncExtE3Current15MinSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtE3Current15MinSESs.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Current15MinSESs.setDescription('The counter associated with the number of Path Severely Errored Seconds encountered by a E3 interface in the current 15 minute interval. This counts the seconds containing 34 or more BIP errors, one or more LOF defects, one or more LOS defects, or a detected incoming AIS. This counter is valid when an interface is configured for Direct cell mapping. When an interface is configured for PLCP cell mapping, the counter returns the last valid count when the port is in the Direct mode.')
nncExtE3Current15MinSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtE3Current15MinSEFs.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Current15MinSEFs.setDescription('The counter associated with the number of Path Severely Errored Frames encountered by a E3 interface in the current 15 minute interval. This counts framing pattern errors. In Direct cell mapping mode, this is the count of frames with errored FA1/FA2 bytes in the G.832 overhead. In PLCP mode, this is the count of frames with an errored G.751 Frame Alignment byte.')
nncExtE3Interval15MinTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 2), )
if mibBuilder.loadTexts: nncExtE3Interval15MinTable.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Interval15MinTable.setDescription('NNC Extension to dsx3IntervalTable.')
nncExtE3Interval15MinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "NNCEXTE3-MIB", "nncExtE3Interval15MinNumber"))
if mibBuilder.loadTexts: nncExtE3Interval15MinEntry.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Interval15MinEntry.setDescription('An entry in nncExtE3Interval15MinTable.')
nncExtE3Interval15MinNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: nncExtE3Interval15MinNumber.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Interval15MinNumber.setDescription('A number between 1 and 96, where 1 is the most recently completed 15 minute interval and 96 is the least recently completed 15 minutes interval (assuming that all 96 intervals are valid).')
nncExtE3Interval15MinESs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtE3Interval15MinESs.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Interval15MinESs.setDescription('The counter associated with the number of Path Errored Seconds encountered by a E3 interface in one of the previous 15 minute intervals. This counts the seconds containing one or more BIP errors, one or more LOF defects, one or more LOS defects, or a detected incoming AIS. This counter is valid when an interface is configured for Direct cell mapping. When an interface is configured for PLCP cell mapping, the counter returns the last valid count when the port is in the Direct mode.')
nncExtE3Interval15MinSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtE3Interval15MinSESs.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Interval15MinSESs.setDescription('The counter associated with the number of Path Severely Errored Seconds encountered by a E3 interface in one of the previous 15 minute intervals. This counts the seconds containing 34 or more BIP errors, one or more LOF defects, one or more LOS defects, or a detected incoming AIS. This counter is valid when an interface is configured for Direct cell mapping. When an interface is configured for PLCP cell mapping, the counter returns the last valid count when the port is in the Direct mode.')
nncExtE3Interval15MinSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtE3Interval15MinSEFs.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Interval15MinSEFs.setDescription('The counter associated with the number of Path Severely Errored Frames encountered by a E3 interface in one of the previous 15 minute intervals. This counts framing pattern errors. In Direct cell mapping mode, this is the count of frames with errored FA1/FA2 bytes in the G.832 overhead. In PLCP mode, this is the count of frames with an errored G.751 Frame Alignment byte.')
nncExtE3Total24HrTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 3), )
if mibBuilder.loadTexts: nncExtE3Total24HrTable.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Total24HrTable.setDescription('NNC Extension to dsx3TotalTable.')
nncExtE3Total24HrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: nncExtE3Total24HrEntry.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Total24HrEntry.setDescription('An entry in nncExtE3Total24HrTable.')
nncExtE3Total24HrESs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 3, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtE3Total24HrESs.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Total24HrESs.setDescription('The counter associated with the number of Path Errored Seconds encountered by a E3 interface in the previous 24 hours interval. This counts the seconds containing one or more BIP errors, one or more LOF defects, one or more LOS defects, or a detected incoming AIS. This counter is valid when an interface is configured for Direct cell mapping. When an interface is configured for PLCP cell mapping, the counter returns the last valid count when the port is in the Direct mode.')
nncExtE3Total24HrSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtE3Total24HrSESs.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Total24HrSESs.setDescription('The counter associated with the number of Path Severely Errored Seconds encountered by a E3 interface in the previous 24 hours interval. This counts the seconds containing 34 or more BIP errors, one or more LOF defects, one or more LOS defects, or a detected incoming AIS. This counter is valid when an interface is configured for Direct cell mapping. When an interface is configured for PLCP cell mapping, the counter returns the last valid count when the port is in the Direct mode.')
nncExtE3Total24HrSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtE3Total24HrSEFs.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Total24HrSEFs.setDescription('The counter associated with the number of Path Severely Errored Frames encountered by a E3 interface in the previous 24 hours interval. This counts framing pattern errors. In Direct cell mapping mode, this is the count of frames with errored FA1/FA2 bytes in the G.832 overhead. In PLCP mode, this is the count of frames with an errored G.751 Frame Alignment byte.')
nncExtE3FarEndCurrent15MinTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 4), )
if mibBuilder.loadTexts: nncExtE3FarEndCurrent15MinTable.setStatus('current')
if mibBuilder.loadTexts: nncExtE3FarEndCurrent15MinTable.setDescription('NNC Extension to dsx3FarEndCurrentTable.')
nncExtE3FarEndCurrent15MinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: nncExtE3FarEndCurrent15MinEntry.setStatus('current')
if mibBuilder.loadTexts: nncExtE3FarEndCurrent15MinEntry.setDescription('An entry in nncExtE3FarEndCurrent15MinTable.')
nncExtE3FarEndCurrent15MinFEBEs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 4, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtE3FarEndCurrent15MinFEBEs.setStatus('current')
if mibBuilder.loadTexts: nncExtE3FarEndCurrent15MinFEBEs.setDescription('The counter associated with the number of Far End Block Errors encountered by a E3 interface in the current 15 minute interval. This is the count of received FEBEs. This counter will not increment while failure defects are present. This counter is valid when an interface is configured for Direct cell mapping. When an interface is configured for PLCP cell mapping, the counter returns the last valid count when the port is in the Direct mode.')
nncExtE3FarEndCurrent15MinESs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 4, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtE3FarEndCurrent15MinESs.setStatus('current')
if mibBuilder.loadTexts: nncExtE3FarEndCurrent15MinESs.setDescription('The counter associated with the number of Far End Path Errored Seconds encountered by a E3 interface in the current 15 minute interval. This counts the seconds containing one or more FEBEs. This counter is valid when an interface is configured for Direct cell mapping. When an interface is configured for PLCP cell mapping, the counter returns the last valid count when the port is in the Direct mode.')
nncExtE3FarEndCurrent15MinSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtE3FarEndCurrent15MinSESs.setStatus('current')
if mibBuilder.loadTexts: nncExtE3FarEndCurrent15MinSESs.setDescription('The counter associated with the number of Far End Path Severely Errored Seconds encountered by a E3 interface in the current 15 minute interval. This counts the seconds containing 34 or more FEBEs. This counter is valid when an interface is configured for Direct cell mapping. When an interface is configured for PLCP cell mapping, the counter returns the last valid count when the port is in the Direct mode.')
nncExtE3FarEndInterval15MinTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 5), )
if mibBuilder.loadTexts: nncExtE3FarEndInterval15MinTable.setStatus('current')
if mibBuilder.loadTexts: nncExtE3FarEndInterval15MinTable.setDescription('NNC Extension to dsx3FarEndIntervalTable.')
nncExtE3FarEndInterval15MinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "NNCEXTE3-MIB", "nncExtE3FarEndInterval15MinNumber"))
if mibBuilder.loadTexts: nncExtE3FarEndInterval15MinEntry.setStatus('current')
if mibBuilder.loadTexts: nncExtE3FarEndInterval15MinEntry.setDescription('An entry in nncExtE3FarEndInterval15MinTable.')
nncExtE3FarEndInterval15MinNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: nncExtE3FarEndInterval15MinNumber.setStatus('current')
if mibBuilder.loadTexts: nncExtE3FarEndInterval15MinNumber.setDescription('A number between 1 and 96, where 1 is the most recently completed 15 minute interval and 96 is the least recently completed 15 minutes interval (assuming that all 96 intervals are valid).')
nncExtE3FarEndInterval15MinFEBEs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 5, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtE3FarEndInterval15MinFEBEs.setStatus('current')
if mibBuilder.loadTexts: nncExtE3FarEndInterval15MinFEBEs.setDescription('The counter associated with the number of Far End Block Errors encountered by a E3 interface in one of the previous 15 minute intervals. This is the count of received FEBEs. This counter will not increment while failure defects are present. This counter is valid when an interface is configured for Direct cell mapping. When an interface is configured for PLCP cell mapping, the counter returns the last valid count when the port is in the Direct mode.')
nncExtE3FarEndInterval15MinESs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 5, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtE3FarEndInterval15MinESs.setStatus('current')
if mibBuilder.loadTexts: nncExtE3FarEndInterval15MinESs.setDescription('The counter associated with the number of Far End Path Errored Seconds encountered by a E3 interface in one of the previous 15 minute intervals. This counts the seconds containing one or more FEBEs. This counter is valid when an interface is configured for Direct cell mapping. When an interface is configured for PLCP cell mapping, the counter returns the last valid count when the port is in the Direct mode.')
nncExtE3FarEndInterval15MinSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 5, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtE3FarEndInterval15MinSESs.setStatus('current')
if mibBuilder.loadTexts: nncExtE3FarEndInterval15MinSESs.setDescription('The counter associated with the number of Far End Path Severely Errored Seconds encountered by a E3 interface in one of the previous 15 minute intervals. This counts the seconds containing 34 or more FEBEs. This counter is valid when an interface is configured for Direct cell mapping. When an interface is configured for PLCP cell mapping, the counter returns the last valid count when the port is in the Direct mode.')
nncExtE3FarEndTotal24HrTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 6), )
if mibBuilder.loadTexts: nncExtE3FarEndTotal24HrTable.setStatus('current')
if mibBuilder.loadTexts: nncExtE3FarEndTotal24HrTable.setDescription('NNC Extension to dsx3FarEndTotalTable.')
nncExtE3FarEndTotal24HrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: nncExtE3FarEndTotal24HrEntry.setStatus('current')
if mibBuilder.loadTexts: nncExtE3FarEndTotal24HrEntry.setDescription('An entry in nncExtE3FarEndTotal24HrTable.')
nncExtE3FarEndTotal24HrFEBEs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 6, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtE3FarEndTotal24HrFEBEs.setStatus('current')
if mibBuilder.loadTexts: nncExtE3FarEndTotal24HrFEBEs.setDescription('The counter associated with the number of Far End Block Errors encountered by a E3 interface in the previous 24 hours interval. This is the count of received FEBEs. This counter will not increment while failure defects are present. This counter is valid when an interface is configured for Direct cell mapping. When an interface is configured for PLCP cell mapping, the counter returns the last valid count when the port is in the Direct mode.')
nncExtE3FarEndTotal24HrESs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 6, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtE3FarEndTotal24HrESs.setStatus('current')
if mibBuilder.loadTexts: nncExtE3FarEndTotal24HrESs.setDescription('The counter associated with the number of Far End Path Errored Seconds encountered by a E3 interface in the previous 24 hours interval. This counts the seconds containing one or more FEBEs. This counter is valid when an interface is configured for Direct cell mapping. When an interface is configured for PLCP cell mapping, the counter returns the last valid count when the port is in the Direct mode.')
nncExtE3FarEndTotal24HrSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 40, 1, 6, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtE3FarEndTotal24HrSESs.setStatus('current')
if mibBuilder.loadTexts: nncExtE3FarEndTotal24HrSESs.setDescription('The counter associated with the number of Far End Path Severely Errored Seconds encountered by a E3 interface in the previous 24 hours interval. This counts the seconds containing 34 or more FEBEs. This counter is valid when an interface is configured for Direct cell mapping. When an interface is configured for PLCP cell mapping, the counter returns the last valid count when the port is in the Direct mode.')
nncExtE3Current15MinGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 40, 3, 1)).setObjects(("NNCEXTE3-MIB", "nncExtE3Current15MinESs"), ("NNCEXTE3-MIB", "nncExtE3Current15MinSESs"), ("NNCEXTE3-MIB", "nncExtE3Current15MinSEFs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncExtE3Current15MinGroup = nncExtE3Current15MinGroup.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Current15MinGroup.setDescription('Collection of objects providing 15 minute current statistics for E3 interface.')
nncExtE3Interval15MinGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 40, 3, 2)).setObjects(("NNCEXTE3-MIB", "nncExtE3Interval15MinNumber"), ("NNCEXTE3-MIB", "nncExtE3Interval15MinESs"), ("NNCEXTE3-MIB", "nncExtE3Interval15MinSESs"), ("NNCEXTE3-MIB", "nncExtE3Interval15MinSEFs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncExtE3Interval15MinGroup = nncExtE3Interval15MinGroup.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Interval15MinGroup.setDescription('Collection of objects providing 15 minute interval statistics for E3 interface.')
nncExtE3Total24HrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 40, 3, 3)).setObjects(("NNCEXTE3-MIB", "nncExtE3Total24HrESs"), ("NNCEXTE3-MIB", "nncExtE3Total24HrSESs"), ("NNCEXTE3-MIB", "nncExtE3Total24HrSEFs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncExtE3Total24HrGroup = nncExtE3Total24HrGroup.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Total24HrGroup.setDescription('Collection of objects providing previous 24 hours statistics for E3 interface.')
nncExtE3FarEndCurrent15MinGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 40, 3, 4)).setObjects(("NNCEXTE3-MIB", "nncExtE3FarEndCurrent15MinFEBEs"), ("NNCEXTE3-MIB", "nncExtE3FarEndCurrent15MinESs"), ("NNCEXTE3-MIB", "nncExtE3FarEndCurrent15MinSESs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncExtE3FarEndCurrent15MinGroup = nncExtE3FarEndCurrent15MinGroup.setStatus('current')
if mibBuilder.loadTexts: nncExtE3FarEndCurrent15MinGroup.setDescription('Collection of objects providing 15 minute current statistics for E3 interface.')
nncExtE3FarEndInterval15MinGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 40, 3, 5)).setObjects(("NNCEXTE3-MIB", "nncExtE3FarEndInterval15MinNumber"), ("NNCEXTE3-MIB", "nncExtE3FarEndInterval15MinFEBEs"), ("NNCEXTE3-MIB", "nncExtE3FarEndInterval15MinESs"), ("NNCEXTE3-MIB", "nncExtE3FarEndInterval15MinSESs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncExtE3FarEndInterval15MinGroup = nncExtE3FarEndInterval15MinGroup.setStatus('current')
if mibBuilder.loadTexts: nncExtE3FarEndInterval15MinGroup.setDescription('Collection of objects providing 15 minute interval statistics for E3 interface.')
nncExtE3FarEndTotal24HrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 40, 3, 6)).setObjects(("NNCEXTE3-MIB", "nncExtE3FarEndTotal24HrFEBEs"), ("NNCEXTE3-MIB", "nncExtE3FarEndTotal24HrESs"), ("NNCEXTE3-MIB", "nncExtE3FarEndTotal24HrSESs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncExtE3FarEndTotal24HrGroup = nncExtE3FarEndTotal24HrGroup.setStatus('current')
if mibBuilder.loadTexts: nncExtE3FarEndTotal24HrGroup.setDescription('Collection of objects providing previous 24 hours statistics for E3 interface.')
nncExtE3Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 123, 3, 40, 4, 1)).setObjects(("NNCEXTE3-MIB", "nncExtE3Current15MinGroup"), ("NNCEXTE3-MIB", "nncExtE3Interval15MinGroup"), ("NNCEXTE3-MIB", "nncExtE3Total24HrGroup"), ("NNCEXTE3-MIB", "nncExtE3FarEndCurrent15MinGroup"), ("NNCEXTE3-MIB", "nncExtE3FarEndInterval15MinGroup"), ("NNCEXTE3-MIB", "nncExtE3FarEndTotal24HrGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncExtE3Compliance = nncExtE3Compliance.setStatus('current')
if mibBuilder.loadTexts: nncExtE3Compliance.setDescription('The compliance statement for Newbridge E3 interfaces.')
mibBuilder.exportSymbols("NNCEXTE3-MIB", nncExtE3Total24HrGroup=nncExtE3Total24HrGroup, nncExtE3Total24HrESs=nncExtE3Total24HrESs, nncExtE3FarEndTotal24HrEntry=nncExtE3FarEndTotal24HrEntry, nncExtE3Compliance=nncExtE3Compliance, nncExtE3FarEndCurrent15MinTable=nncExtE3FarEndCurrent15MinTable, nncExtE3Current15MinGroup=nncExtE3Current15MinGroup, nncExtE3FarEndInterval15MinNumber=nncExtE3FarEndInterval15MinNumber, nncExtE3Interval15MinSESs=nncExtE3Interval15MinSESs, nncExtE3FarEndInterval15MinFEBEs=nncExtE3FarEndInterval15MinFEBEs, nncExtE3FarEndInterval15MinSESs=nncExtE3FarEndInterval15MinSESs, nncExtE3FarEndCurrent15MinGroup=nncExtE3FarEndCurrent15MinGroup, nncExtE3Interval15MinESs=nncExtE3Interval15MinESs, nncExtE3FarEndCurrent15MinEntry=nncExtE3FarEndCurrent15MinEntry, nncExtE3Current15MinEntry=nncExtE3Current15MinEntry, nncExtE3FarEndCurrent15MinFEBEs=nncExtE3FarEndCurrent15MinFEBEs, nncExtE3Objects=nncExtE3Objects, nncExtE3Compliances=nncExtE3Compliances, nncExtE3FarEndTotal24HrESs=nncExtE3FarEndTotal24HrESs, nncExtE3Interval15MinGroup=nncExtE3Interval15MinGroup, nncExtE3FarEndTotal24HrTable=nncExtE3FarEndTotal24HrTable, nncExtE3Total24HrTable=nncExtE3Total24HrTable, nncExtE3Interval15MinEntry=nncExtE3Interval15MinEntry, nncExtE3Current15MinSESs=nncExtE3Current15MinSESs, nncExtE3Total24HrSESs=nncExtE3Total24HrSESs, PYSNMP_MODULE_ID=nncExtE3, nncExtE3Interval15MinSEFs=nncExtE3Interval15MinSEFs, nncExtE3FarEndInterval15MinEntry=nncExtE3FarEndInterval15MinEntry, nncExtE3FarEndInterval15MinGroup=nncExtE3FarEndInterval15MinGroup, nncExtE3Interval15MinTable=nncExtE3Interval15MinTable, nncExtE3=nncExtE3, nncExtE3Current15MinSEFs=nncExtE3Current15MinSEFs, nncExtE3FarEndInterval15MinESs=nncExtE3FarEndInterval15MinESs, nncExtE3FarEndTotal24HrGroup=nncExtE3FarEndTotal24HrGroup, nncExtE3Current15MinESs=nncExtE3Current15MinESs, nncExtE3Total24HrEntry=nncExtE3Total24HrEntry, nncExtE3Total24HrSEFs=nncExtE3Total24HrSEFs, nncExtE3FarEndCurrent15MinESs=nncExtE3FarEndCurrent15MinESs, nncExtE3Interval15MinNumber=nncExtE3Interval15MinNumber, nncExtE3FarEndCurrent15MinSESs=nncExtE3FarEndCurrent15MinSESs, nncExtE3FarEndTotal24HrFEBEs=nncExtE3FarEndTotal24HrFEBEs, nncExtE3FarEndTotal24HrSESs=nncExtE3FarEndTotal24HrSESs, nncExtE3Groups=nncExtE3Groups, nncExtE3FarEndInterval15MinTable=nncExtE3FarEndInterval15MinTable, nncExtE3Current15MinTable=nncExtE3Current15MinTable, nncExtE3Traps=nncExtE3Traps)
