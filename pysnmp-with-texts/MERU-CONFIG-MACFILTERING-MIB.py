#
# PySNMP MIB module MERU-CONFIG-MACFILTERING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MERU-CONFIG-MACFILTERING-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:11:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
Ipv6Address, = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address")
mwConfiguration, = mibBuilder.importSymbols("MERU-SMI", "mwConfiguration")
MwlAclEnvState, = mibBuilder.importSymbols("MERU-TC", "MwlAclEnvState")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
enterprises, MibIdentifier, NotificationType, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, TimeTicks, Integer32, IpAddress, Unsigned32, ObjectIdentity, ModuleIdentity, Gauge32, iso, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "MibIdentifier", "NotificationType", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "TimeTicks", "Integer32", "IpAddress", "Unsigned32", "ObjectIdentity", "ModuleIdentity", "Gauge32", "iso", "Bits")
MacAddress, TimeInterval, DateAndTime, TextualConvention, TruthValue, RowStatus, DisplayString, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TimeInterval", "DateAndTime", "TextualConvention", "TruthValue", "RowStatus", "DisplayString", "TimeStamp")
mwConfigMacFiltering = ModuleIdentity((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 6))
if mibBuilder.loadTexts: mwConfigMacFiltering.setLastUpdated('200506050000Z')
if mibBuilder.loadTexts: mwConfigMacFiltering.setOrganization('Meru Networks')
if mibBuilder.loadTexts: mwConfigMacFiltering.setContactInfo('support@merunetworks.com')
if mibBuilder.loadTexts: mwConfigMacFiltering.setDescription('This MIB defines all the managed objects used to manage the Meru WLAN MAC Filtering Configuration infrastructure')
mwAcl = MibIdentifier((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 6, 1))
mwAclEnvState = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 6, 1, 1), MwlAclEnvState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwAclEnvState.setStatus('current')
if mibBuilder.loadTexts: mwAclEnvState.setDescription('This object describes ACL Environment State')
mwAclRadiusProfileName = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 6, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwAclRadiusProfileName.setStatus('current')
if mibBuilder.loadTexts: mwAclRadiusProfileName.setDescription('This object describes RADIUS Profile Name')
mwAclSecondaryRadiusProfileName = MibScalar((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 6, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mwAclSecondaryRadiusProfileName.setStatus('current')
if mibBuilder.loadTexts: mwAclSecondaryRadiusProfileName.setDescription('This object describes Secondary RADIUS Profile Name')
mwAclAccessAllowTable = MibTable((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 6, 2), )
if mibBuilder.loadTexts: mwAclAccessAllowTable.setStatus('current')
if mibBuilder.loadTexts: mwAclAccessAllowTable.setDescription('This object describes ACL Allow Access Configuration ')
mwAclAccessAllowEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 6, 2, 1), ).setIndexNames((0, "MERU-CONFIG-MACFILTERING-MIB", "mwAclAccessAllowTableIndex"))
if mibBuilder.loadTexts: mwAclAccessAllowEntry.setStatus('current')
if mibBuilder.loadTexts: mwAclAccessAllowEntry.setDescription('This object describes ACL Allow Access Configuration ')
mwAclAccessAllowTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 6, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: mwAclAccessAllowTableIndex.setStatus('current')
if mibBuilder.loadTexts: mwAclAccessAllowTableIndex.setDescription('The index value of the table ')
mwAclAccessAllowMac = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 6, 2, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwAclAccessAllowMac.setStatus('current')
if mibBuilder.loadTexts: mwAclAccessAllowMac.setDescription('This object describes MAC Address. The value must not be 00:00:00:00:00:00')
mwAclAccessAllowDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 6, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwAclAccessAllowDescr.setStatus('current')
if mibBuilder.loadTexts: mwAclAccessAllowDescr.setDescription('This object describes Description')
mwAclAccessAllowRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 6, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwAclAccessAllowRowStatus.setStatus('current')
if mibBuilder.loadTexts: mwAclAccessAllowRowStatus.setDescription('This object is used to create and delete rows in the table')
mwAclAccessDenyTable = MibTable((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 6, 3), )
if mibBuilder.loadTexts: mwAclAccessDenyTable.setStatus('current')
if mibBuilder.loadTexts: mwAclAccessDenyTable.setDescription('This object describes ACL Deny Access Configuration ')
mwAclAccessDenyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 6, 3, 1), ).setIndexNames((0, "MERU-CONFIG-MACFILTERING-MIB", "mwAclAccessDenyTableIndex"))
if mibBuilder.loadTexts: mwAclAccessDenyEntry.setStatus('current')
if mibBuilder.loadTexts: mwAclAccessDenyEntry.setDescription('This object describes ACL Deny Access Configuration ')
mwAclAccessDenyTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 6, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: mwAclAccessDenyTableIndex.setStatus('current')
if mibBuilder.loadTexts: mwAclAccessDenyTableIndex.setDescription('The index value of the table ')
mwAclAccessDenyMac = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 6, 3, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwAclAccessDenyMac.setStatus('current')
if mibBuilder.loadTexts: mwAclAccessDenyMac.setDescription('This object describes MAC Address. The value must not be 00:00:00:00:00:00')
mwAclAccessDenyDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 6, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwAclAccessDenyDescr.setStatus('current')
if mibBuilder.loadTexts: mwAclAccessDenyDescr.setDescription('This object describes Description')
mwAclAccessDenyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 6, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwAclAccessDenyRowStatus.setStatus('current')
if mibBuilder.loadTexts: mwAclAccessDenyRowStatus.setDescription('This object is used to create and delete rows in the table')
mibBuilder.exportSymbols("MERU-CONFIG-MACFILTERING-MIB", mwAclSecondaryRadiusProfileName=mwAclSecondaryRadiusProfileName, mwAclAccessDenyRowStatus=mwAclAccessDenyRowStatus, mwAclAccessAllowDescr=mwAclAccessAllowDescr, mwAclAccessDenyMac=mwAclAccessDenyMac, mwAcl=mwAcl, mwAclAccessAllowTable=mwAclAccessAllowTable, mwAclAccessAllowEntry=mwAclAccessAllowEntry, mwAclAccessDenyDescr=mwAclAccessDenyDescr, mwAclRadiusProfileName=mwAclRadiusProfileName, mwAclAccessAllowMac=mwAclAccessAllowMac, mwConfigMacFiltering=mwConfigMacFiltering, mwAclAccessDenyTable=mwAclAccessDenyTable, mwAclAccessDenyEntry=mwAclAccessDenyEntry, mwAclAccessDenyTableIndex=mwAclAccessDenyTableIndex, mwAclAccessAllowRowStatus=mwAclAccessAllowRowStatus, mwAclAccessAllowTableIndex=mwAclAccessAllowTableIndex, PYSNMP_MODULE_ID=mwConfigMacFiltering, mwAclEnvState=mwAclEnvState)
