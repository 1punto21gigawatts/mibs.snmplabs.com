#
# PySNMP MIB module WS-INFRA-SYSMSG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WS-INFRA-SYSMSG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:37:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
NotificationType, Counter32, IpAddress, iso, MibIdentifier, Bits, Unsigned32, ObjectIdentity, Integer32, TimeTicks, Gauge32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter32", "IpAddress", "iso", "MibIdentifier", "Bits", "Unsigned32", "ObjectIdentity", "Integer32", "TimeTicks", "Gauge32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
wsInfraSysMsg, = mibBuilder.importSymbols("WS-INFRA-SMI-MIB", "wsInfraSysMsg")
DoActionNow, = mibBuilder.importSymbols("WS-TYPE-MIB", "DoActionNow")
wsInfraSysMsgModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1))
wsInfraSysMsgModule.setRevisions(('2006-05-24 15:51', '2005-11-03 15:13', '2005-07-28 16:59', '2005-05-11 14:21', '2005-05-09 11:11', '2005-05-05 17:46', '2005-05-04 17:36', '2005-05-04 12:02',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: wsInfraSysMsgModule.setRevisionsDescriptions(('01a08', '01a07', '01a06', '01a05', '01a04', '01a03', '01a02', 'v01a01',))
if mibBuilder.loadTexts: wsInfraSysMsgModule.setLastUpdated('200504191023Z')
if mibBuilder.loadTexts: wsInfraSysMsgModule.setOrganization('Symbol Technologies')
if mibBuilder.loadTexts: wsInfraSysMsgModule.setContactInfo('Symbol Technologies, Inc. Customer Service Postal: One Symbol Plaza Holtsville, NY 11742-1300 USA Tel: +1. 631.738.6213 E-mail: support@symbol.com Web: http://www.symbol.com/support')
if mibBuilder.loadTexts: wsInfraSysMsgModule.setDescription('Description.')
class SysMsgSeverity(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("emergency", 0), ("alert", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("info", 6), ("debug", 7))

wsInfraSysMsgEnable = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsInfraSysMsgEnable.setStatus('current')
if mibBuilder.loadTexts: wsInfraSysMsgEnable.setDescription('Enable/Disables logging module.')
wsInfraSysMsgAggTime = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsInfraSysMsgAggTime.setStatus('current')
if mibBuilder.loadTexts: wsInfraSysMsgAggTime.setDescription('If multiple messages of the same type are received in sysMsgAggTime second, only the first message will be sent followed by another message saying how many times it was repeated. The follow-up message mechanism will not be implemented in case of Snmp traps. 0 means this feature is disabled.')
wsInfraSysMsgBuffer = MibIdentifier((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 3))
wsInfraSysMsgBufferEnable = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 3, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsInfraSysMsgBufferEnable.setStatus('current')
if mibBuilder.loadTexts: wsInfraSysMsgBufferEnable.setDescription('Enable system message output to buffer (local log file)')
wsInfraSysMsgBufferSeverity = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 3, 2), SysMsgSeverity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsInfraSysMsgBufferSeverity.setStatus('current')
if mibBuilder.loadTexts: wsInfraSysMsgBufferSeverity.setDescription('If enabled, the system message of severity level of and below wsInfraSysMsgBufferSeverity will be sent.')
wsInfraSysMsgBufferClear = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 3, 3), DoActionNow()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsInfraSysMsgBufferClear.setStatus('current')
if mibBuilder.loadTexts: wsInfraSysMsgBufferClear.setDescription('Clear buffer (local log file)')
wsInfraSysMsgRemoteSvr = MibIdentifier((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 4))
wsInfraSysMsgRemoteSvrEnable = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 4, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsInfraSysMsgRemoteSvrEnable.setStatus('current')
if mibBuilder.loadTexts: wsInfraSysMsgRemoteSvrEnable.setDescription('Enable system message output to remote system log server')
wsInfraSysMsgRemoteSvrSeverity = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 4, 2), SysMsgSeverity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsInfraSysMsgRemoteSvrSeverity.setStatus('current')
if mibBuilder.loadTexts: wsInfraSysMsgRemoteSvrSeverity.setDescription('If enabled, the system message of severity level of and below wsInfraSysMsgRemoteSvrSeverity will be sent.')
wsInfraSysMsgRemoteSvrFacility = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("logLocal0", 0), ("logLocal1", 1), ("logLocal2", 2), ("logLocal3", 3), ("logLocal4", 4), ("logLocal5", 5), ("logLocal6", 6), ("logLocal7", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsInfraSysMsgRemoteSvrFacility.setStatus('current')
if mibBuilder.loadTexts: wsInfraSysMsgRemoteSvrFacility.setDescription('Used to specify which switch is logging the message.')
wsInfraSysMsgRemoteSvrTable = MibTable((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 4, 4), )
if mibBuilder.loadTexts: wsInfraSysMsgRemoteSvrTable.setStatus('current')
if mibBuilder.loadTexts: wsInfraSysMsgRemoteSvrTable.setDescription('Table of remote log servers')
wsInfraSysMsgRemoteSvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 4, 4, 1), ).setIndexNames((0, "WS-INFRA-SYSMSG-MIB", "wsInfraSysMsgRemoteSvrIndex"))
if mibBuilder.loadTexts: wsInfraSysMsgRemoteSvrEntry.setStatus('current')
if mibBuilder.loadTexts: wsInfraSysMsgRemoteSvrEntry.setDescription(' ')
wsInfraSysMsgRemoteSvrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wsInfraSysMsgRemoteSvrIndex.setStatus('current')
if mibBuilder.loadTexts: wsInfraSysMsgRemoteSvrIndex.setDescription('Simple index')
wsInfraSysMsgRemoteSvrIp = MibTableColumn((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 4, 4, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsInfraSysMsgRemoteSvrIp.setStatus('current')
if mibBuilder.loadTexts: wsInfraSysMsgRemoteSvrIp.setDescription('Ip of the syslog server. Row inactive when Ip = 0.0.0.0')
wsInfraSysMsgConsole = MibIdentifier((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 5))
wsInfraSysMsgConsoleEnable = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 5, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsInfraSysMsgConsoleEnable.setStatus('current')
if mibBuilder.loadTexts: wsInfraSysMsgConsoleEnable.setDescription('Enable system message output to console')
wsInfraSysMsgConsoleSeverity = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 5, 2), SysMsgSeverity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsInfraSysMsgConsoleSeverity.setStatus('current')
if mibBuilder.loadTexts: wsInfraSysMsgConsoleSeverity.setDescription('If enabled, the system message of severity level of and below wsInfraSysMsgConsoleSeverity will be sent.')
wsInfraSysMsgMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 6))
wsInfraSysMsgMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 6, 1))
wsInfraSysMsgMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 6, 1, 1)).setObjects(("WS-INFRA-SYSMSG-MIB", "wsInfraSysMsgMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    wsInfraSysMsgMIBCompliance = wsInfraSysMsgMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: wsInfraSysMsgMIBCompliance.setDescription('Description.')
wsInfraSysMsgMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 6, 2))
wsInfraSysMsgMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 388, 14, 1, 3, 1, 6, 2, 1)).setObjects(("WS-INFRA-SYSMSG-MIB", "wsInfraSysMsgEnable"), ("WS-INFRA-SYSMSG-MIB", "wsInfraSysMsgBufferEnable"), ("WS-INFRA-SYSMSG-MIB", "wsInfraSysMsgBufferSeverity"), ("WS-INFRA-SYSMSG-MIB", "wsInfraSysMsgBufferClear"), ("WS-INFRA-SYSMSG-MIB", "wsInfraSysMsgRemoteSvrEnable"), ("WS-INFRA-SYSMSG-MIB", "wsInfraSysMsgRemoteSvrSeverity"), ("WS-INFRA-SYSMSG-MIB", "wsInfraSysMsgRemoteSvrFacility"), ("WS-INFRA-SYSMSG-MIB", "wsInfraSysMsgConsoleEnable"), ("WS-INFRA-SYSMSG-MIB", "wsInfraSysMsgConsoleSeverity"), ("WS-INFRA-SYSMSG-MIB", "wsInfraSysMsgRemoteSvrIndex"), ("WS-INFRA-SYSMSG-MIB", "wsInfraSysMsgRemoteSvrIp"), ("WS-INFRA-SYSMSG-MIB", "wsInfraSysMsgAggTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    wsInfraSysMsgMIBGroup = wsInfraSysMsgMIBGroup.setStatus('current')
if mibBuilder.loadTexts: wsInfraSysMsgMIBGroup.setDescription('Description.')
mibBuilder.exportSymbols("WS-INFRA-SYSMSG-MIB", wsInfraSysMsgMIBConformance=wsInfraSysMsgMIBConformance, wsInfraSysMsgRemoteSvrTable=wsInfraSysMsgRemoteSvrTable, wsInfraSysMsgRemoteSvr=wsInfraSysMsgRemoteSvr, wsInfraSysMsgMIBGroups=wsInfraSysMsgMIBGroups, wsInfraSysMsgBufferEnable=wsInfraSysMsgBufferEnable, wsInfraSysMsgMIBCompliance=wsInfraSysMsgMIBCompliance, PYSNMP_MODULE_ID=wsInfraSysMsgModule, SysMsgSeverity=SysMsgSeverity, wsInfraSysMsgConsole=wsInfraSysMsgConsole, wsInfraSysMsgBufferClear=wsInfraSysMsgBufferClear, wsInfraSysMsgBuffer=wsInfraSysMsgBuffer, wsInfraSysMsgRemoteSvrEntry=wsInfraSysMsgRemoteSvrEntry, wsInfraSysMsgMIBCompliances=wsInfraSysMsgMIBCompliances, wsInfraSysMsgRemoteSvrFacility=wsInfraSysMsgRemoteSvrFacility, wsInfraSysMsgConsoleEnable=wsInfraSysMsgConsoleEnable, wsInfraSysMsgModule=wsInfraSysMsgModule, wsInfraSysMsgRemoteSvrIp=wsInfraSysMsgRemoteSvrIp, wsInfraSysMsgConsoleSeverity=wsInfraSysMsgConsoleSeverity, wsInfraSysMsgMIBGroup=wsInfraSysMsgMIBGroup, wsInfraSysMsgRemoteSvrIndex=wsInfraSysMsgRemoteSvrIndex, wsInfraSysMsgRemoteSvrSeverity=wsInfraSysMsgRemoteSvrSeverity, wsInfraSysMsgEnable=wsInfraSysMsgEnable, wsInfraSysMsgAggTime=wsInfraSysMsgAggTime, wsInfraSysMsgBufferSeverity=wsInfraSysMsgBufferSeverity, wsInfraSysMsgRemoteSvrEnable=wsInfraSysMsgRemoteSvrEnable)
