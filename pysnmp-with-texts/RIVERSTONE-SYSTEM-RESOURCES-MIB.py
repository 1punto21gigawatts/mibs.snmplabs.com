#
# PySNMP MIB module RIVERSTONE-SYSTEM-RESOURCES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RIVERSTONE-SYSTEM-RESOURCES-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:57:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
riverstoneMibs, = mibBuilder.importSymbols("RIVERSTONE-SMI-MIB", "riverstoneMibs")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, NotificationType, Counter64, Counter32, Integer32, Gauge32, MibIdentifier, iso, ObjectIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "NotificationType", "Counter64", "Counter32", "Integer32", "Gauge32", "MibIdentifier", "iso", "ObjectIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
rsSystemResourcesMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5567, 2, 281))
rsSystemResourcesMIB.setRevisions(('2004-09-14 13:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: rsSystemResourcesMIB.setRevisionsDescriptions(('First Version which has objects for CPU and Memory utilization.',))
if mibBuilder.loadTexts: rsSystemResourcesMIB.setLastUpdated('200409141300Z')
if mibBuilder.loadTexts: rsSystemResourcesMIB.setOrganization('Riverstone Networks, Inc')
if mibBuilder.loadTexts: rsSystemResourcesMIB.setContactInfo('Riverstone Networks, Inc 5200 Great America Parkway Santa Clara CA USA 95054 PHONE:+1 408.878.6500 EMAIL: nms-eng@riverstonenet.com WEB: http://www.riverstonenet.com')
if mibBuilder.loadTexts: rsSystemResourcesMIB.setDescription('This module defines a schema to access management information pertaining to system resources on Riverstone Device ')
rsSystemUtilization = ObjectIdentity((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5))
if mibBuilder.loadTexts: rsSystemUtilization.setStatus('current')
if mibBuilder.loadTexts: rsSystemUtilization.setDescription('System utilization related objects')
rsCpuUtl = ObjectIdentity((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 5))
if mibBuilder.loadTexts: rsCpuUtl.setStatus('current')
if mibBuilder.loadTexts: rsCpuUtl.setDescription('cpu group')
rsMemory = ObjectIdentity((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 10))
if mibBuilder.loadTexts: rsMemory.setStatus('current')
if mibBuilder.loadTexts: rsMemory.setDescription('memory group')
rsUtlSamplingRate = MibScalar((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsUtlSamplingRate.setStatus('current')
if mibBuilder.loadTexts: rsUtlSamplingRate.setDescription('Stats are polled at these number of micro seconds interval')
rsUtlConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 35))
if mibBuilder.loadTexts: rsUtlConformance.setStatus('current')
if mibBuilder.loadTexts: rsUtlConformance.setDescription('capacity conformance group ')
rsUtlCPUTable = MibTable((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 5, 1), )
if mibBuilder.loadTexts: rsUtlCPUTable.setStatus('current')
if mibBuilder.loadTexts: rsUtlCPUTable.setDescription('Summary of CPU statistics. It is assumed that there is only one CPU per line card.')
rsUtlCPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 5, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: rsUtlCPUEntry.setStatus('current')
if mibBuilder.loadTexts: rsUtlCPUEntry.setDescription('An entry containing CPU utilization information. ')
rsUtlCPUSystemUtilization5Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 5, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUtlCPUSystemUtilization5Sec.setStatus('current')
if mibBuilder.loadTexts: rsUtlCPUSystemUtilization5Sec.setDescription("The CPU utilization expressed as an integer percentage. This is calculated over the last 5 seconds at rsUtlSamplingRate interval as a simple average. This is 'system time'. ")
rsUtlCPUUserUtilization5Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 5, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUtlCPUUserUtilization5Sec.setStatus('current')
if mibBuilder.loadTexts: rsUtlCPUUserUtilization5Sec.setDescription("The CPU utilization expressed as an integer percentage. This is calculated over the last 5 seconds at rsUtlSamplingRate interval as a simple average. This is 'user time'. ")
rsUtlCPUSystemUtilization60Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 5, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUtlCPUSystemUtilization60Sec.setStatus('current')
if mibBuilder.loadTexts: rsUtlCPUSystemUtilization60Sec.setDescription("The CPU utilization expressed as an integer percentage. This is calculated over the last 60 seconds at rsUtlSamplingRate interval as a simple average. This is 'system time'. ")
rsUtlCPUUserUtilization60Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 5, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUtlCPUUserUtilization60Sec.setStatus('current')
if mibBuilder.loadTexts: rsUtlCPUUserUtilization60Sec.setDescription("The CPU utilization expressed as an integer percentage. This is calculated over the last 60 seconds at rsUtlSamplingRate interval as a simple average. This is 'user time'. ")
rsUtlCPUSystemUtilization5Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 5, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUtlCPUSystemUtilization5Min.setStatus('current')
if mibBuilder.loadTexts: rsUtlCPUSystemUtilization5Min.setDescription("The CPU utilization expressed as an integer percentage. This is calculated over the last 5 Min at rsUtlSamplingRate interval as a simple average. This is 'system time'. ")
rsUtlCPUUserUtilization5Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 5, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUtlCPUUserUtilization5Min.setStatus('current')
if mibBuilder.loadTexts: rsUtlCPUUserUtilization5Min.setDescription("The CPU utilization expressed as an integer percentage. This is calculated over the last 5 Min. at rsUtlSamplingRate interval as a simple average. This is 'user time'. ")
rsUtlMemoryTable = MibTable((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 10, 1), )
if mibBuilder.loadTexts: rsUtlMemoryTable.setStatus('current')
if mibBuilder.loadTexts: rsUtlMemoryTable.setDescription('Summary of Memory statistics.')
rsUtlMemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 10, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: rsUtlMemoryEntry.setStatus('current')
if mibBuilder.loadTexts: rsUtlMemoryEntry.setDescription('An entry containing Memory utilization information.')
rsUtlMemoryActivePages5Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 10, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUtlMemoryActivePages5Sec.setStatus('current')
if mibBuilder.loadTexts: rsUtlMemoryActivePages5Sec.setDescription('The Memory utilization in terms of active pages of size 1024 bytes.This is calculated over the last 5 seconds, sampled average at every rsUtlSamplingRate ')
rsUtlMemoryFreePages5Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 10, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUtlMemoryFreePages5Sec.setStatus('current')
if mibBuilder.loadTexts: rsUtlMemoryFreePages5Sec.setDescription('The Memory utilization in terms free pages of size 1024 bytes.This is calculated over the last 5 seconds, sampled average at every rsUtlSamplingRate ')
rsUtlMemoryActivePages60Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 10, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUtlMemoryActivePages60Sec.setStatus('current')
if mibBuilder.loadTexts: rsUtlMemoryActivePages60Sec.setDescription('The Memory utilization in terms of active pages of size 1024 bytes.This is calculated over the last 60 seconds, sampled average at every rsUtlSamplingRate ')
rsUtlMemoryFreePages60Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 10, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUtlMemoryFreePages60Sec.setStatus('current')
if mibBuilder.loadTexts: rsUtlMemoryFreePages60Sec.setDescription('The Memory utilization in terms of free pages of size 1024 bytes.This is calculated over the last 60 seconds, sampled average at every rsUtlSamplingRate ')
rsUtlMemoryActivePages5Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 10, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUtlMemoryActivePages5Min.setStatus('current')
if mibBuilder.loadTexts: rsUtlMemoryActivePages5Min.setDescription('The Memory utilization in terms of active pages of size 1024 bytes.This is calculated over the last 5 Min, sampled average at every rsUtlSamplingRate ')
rsUtlMemoryFreePages5Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 10, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUtlMemoryFreePages5Min.setStatus('current')
if mibBuilder.loadTexts: rsUtlMemoryFreePages5Min.setDescription('The Memory utilization in terms free pages of size 1024 bytes.This is calculated over the last 5 Min, sampled average at every rsUtlSamplingRate ')
rsUtlCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 35, 1))
rsUtlGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 35, 2))
rsUtlComplianceV1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 35, 1, 1)).setObjects(("RIVERSTONE-SYSTEM-RESOURCES-MIB", "rsUtlConfGroupV1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsUtlComplianceV1 = rsUtlComplianceV1.setStatus('current')
if mibBuilder.loadTexts: rsUtlComplianceV1.setDescription('The compliance statement for the RIVERSTONE-SYSTEM-RESOURCES-MIB.')
rsUtlConfGroupV1 = ObjectGroup((1, 3, 6, 1, 4, 1, 5567, 2, 281, 5, 35, 2, 1)).setObjects(("RIVERSTONE-SYSTEM-RESOURCES-MIB", "rsUtlMemoryActivePages5Sec"), ("RIVERSTONE-SYSTEM-RESOURCES-MIB", "rsUtlMemoryFreePages5Sec"), ("RIVERSTONE-SYSTEM-RESOURCES-MIB", "rsUtlCPUSystemUtilization5Sec"), ("RIVERSTONE-SYSTEM-RESOURCES-MIB", "rsUtlCPUUserUtilization5Sec"), ("RIVERSTONE-SYSTEM-RESOURCES-MIB", "rsUtlCPUSystemUtilization60Sec"), ("RIVERSTONE-SYSTEM-RESOURCES-MIB", "rsUtlCPUUserUtilization60Sec"), ("RIVERSTONE-SYSTEM-RESOURCES-MIB", "rsUtlCPUSystemUtilization5Min"), ("RIVERSTONE-SYSTEM-RESOURCES-MIB", "rsUtlCPUUserUtilization5Min"), ("RIVERSTONE-SYSTEM-RESOURCES-MIB", "rsUtlMemoryActivePages60Sec"), ("RIVERSTONE-SYSTEM-RESOURCES-MIB", "rsUtlMemoryFreePages60Sec"), ("RIVERSTONE-SYSTEM-RESOURCES-MIB", "rsUtlMemoryActivePages5Min"), ("RIVERSTONE-SYSTEM-RESOURCES-MIB", "rsUtlMemoryFreePages5Min"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsUtlConfGroupV1 = rsUtlConfGroupV1.setStatus('current')
if mibBuilder.loadTexts: rsUtlConfGroupV1.setDescription('A set of managed objects that make up version 1.0 of the Riverstone Utilization mib.')
mibBuilder.exportSymbols("RIVERSTONE-SYSTEM-RESOURCES-MIB", rsUtlMemoryFreePages5Sec=rsUtlMemoryFreePages5Sec, rsCpuUtl=rsCpuUtl, rsUtlGroups=rsUtlGroups, rsUtlCPUEntry=rsUtlCPUEntry, rsUtlComplianceV1=rsUtlComplianceV1, rsUtlConfGroupV1=rsUtlConfGroupV1, rsUtlSamplingRate=rsUtlSamplingRate, rsSystemUtilization=rsSystemUtilization, rsUtlCPUUserUtilization60Sec=rsUtlCPUUserUtilization60Sec, rsUtlCPUTable=rsUtlCPUTable, rsUtlMemoryTable=rsUtlMemoryTable, rsUtlMemoryEntry=rsUtlMemoryEntry, rsUtlCPUUserUtilization5Sec=rsUtlCPUUserUtilization5Sec, PYSNMP_MODULE_ID=rsSystemResourcesMIB, rsUtlMemoryActivePages5Min=rsUtlMemoryActivePages5Min, rsMemory=rsMemory, rsUtlCPUSystemUtilization5Min=rsUtlCPUSystemUtilization5Min, rsUtlMemoryFreePages5Min=rsUtlMemoryFreePages5Min, rsUtlCPUSystemUtilization5Sec=rsUtlCPUSystemUtilization5Sec, rsUtlMemoryActivePages60Sec=rsUtlMemoryActivePages60Sec, rsUtlCPUSystemUtilization60Sec=rsUtlCPUSystemUtilization60Sec, rsUtlCompliances=rsUtlCompliances, rsUtlConformance=rsUtlConformance, rsUtlMemoryFreePages60Sec=rsUtlMemoryFreePages60Sec, rsUtlCPUUserUtilization5Min=rsUtlCPUUserUtilization5Min, rsUtlMemoryActivePages5Sec=rsUtlMemoryActivePages5Sec, rsSystemResourcesMIB=rsSystemResourcesMIB)
