#
# PySNMP MIB module BAY-STACK-UNICAST-STORM-CONTROL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BAY-STACK-UNICAST-STORM-CONTROL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:36:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32, Counter64, TimeTicks, IpAddress, ModuleIdentity, ObjectIdentity, Counter32, MibIdentifier, iso, NotificationType, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32", "Counter64", "TimeTicks", "IpAddress", "ModuleIdentity", "ObjectIdentity", "Counter32", "MibIdentifier", "iso", "NotificationType", "Unsigned32")
DisplayString, TruthValue, TimeInterval, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TimeInterval", "TextualConvention")
bayStackMibs, = mibBuilder.importSymbols("SYNOPTICS-ROOT-MIB", "bayStackMibs")
bayStackUnicastStormControlMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 5, 22))
bayStackUnicastStormControlMib.setRevisions(('2007-06-07 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: bayStackUnicastStormControlMib.setRevisionsDescriptions(('Ver 1: Initial version.',))
if mibBuilder.loadTexts: bayStackUnicastStormControlMib.setLastUpdated('200706070000Z')
if mibBuilder.loadTexts: bayStackUnicastStormControlMib.setOrganization('Nortel Ltd.')
if mibBuilder.loadTexts: bayStackUnicastStormControlMib.setContactInfo('nortel.com')
if mibBuilder.loadTexts: bayStackUnicastStormControlMib.setDescription("This MIB module is used for ARP inspection configuration settings in Nortel's software and products.")
bsUnicastStormControlNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 22, 0))
bsUnicastStormControlObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 22, 1))
bsUnicastStormControlScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 1))
bsUnicastStormControlEnabled = MibScalar((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsUnicastStormControlEnabled.setStatus('current')
if mibBuilder.loadTexts: bsUnicastStormControlEnabled.setDescription('Indicates whether unicast storm control is enabled.')
bsUnicastStormControlLowWatermark = MibScalar((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000000)).clone(200)).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsUnicastStormControlLowWatermark.setStatus('current')
if mibBuilder.loadTexts: bsUnicastStormControlLowWatermark.setDescription('Low watermark for unicast storm control. If the rate drops below this value after having risen above the high watermark, a single notification will be generated.')
bsUnicastStormControlHighWatermark = MibScalar((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000000)).clone(500)).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsUnicastStormControlHighWatermark.setStatus('current')
if mibBuilder.loadTexts: bsUnicastStormControlHighWatermark.setDescription('High watermark for unicast storm control. If the rate rises above this value, notifications will be generated at the rate give by the bsUnicastStormControlTrapInterval object.')
bsUnicastStormControlPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 1, 4), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(500, 30000)).clone(3000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsUnicastStormControlPollInterval.setStatus('current')
if mibBuilder.loadTexts: bsUnicastStormControlPollInterval.setDescription('The polling interval for checking the packet rate for unicast storm control.')
bsUnicastStormControlTrapInterval = MibScalar((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsUnicastStormControlTrapInterval.setStatus('current')
if mibBuilder.loadTexts: bsUnicastStormControlTrapInterval.setDescription('The rate for sending unicast storm control notifications.')
bsUnicastStormControlPollValue = MibScalar((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 1, 6), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bsUnicastStormControlPollValue.setStatus('current')
if mibBuilder.loadTexts: bsUnicastStormControlPollValue.setDescription('The polled value when a notification is generated.')
bsUnicastStormControlIfTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 2), )
if mibBuilder.loadTexts: bsUnicastStormControlIfTable.setStatus('current')
if mibBuilder.loadTexts: bsUnicastStormControlIfTable.setDescription('This table is used to control unicast storm control settings per-interface.')
bsUnicastStormControlIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 2, 1), ).setIndexNames((0, "BAY-STACK-UNICAST-STORM-CONTROL-MIB", "bsUnicastStormControlIfIndex"))
if mibBuilder.loadTexts: bsUnicastStormControlIfEntry.setStatus('current')
if mibBuilder.loadTexts: bsUnicastStormControlIfEntry.setDescription('An entry containing objects for controlling unicast storm control settings for an interface.')
bsUnicastStormControlIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: bsUnicastStormControlIfIndex.setStatus('current')
if mibBuilder.loadTexts: bsUnicastStormControlIfIndex.setDescription('The ifIndex value of the interface.')
bsUnicastStormControlIfEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 2, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsUnicastStormControlIfEnabled.setStatus('current')
if mibBuilder.loadTexts: bsUnicastStormControlIfEnabled.setDescription('Indicates whether unicast storm control is enabled for this interface.')
bsUnicastStormControlBelowLowWatermark = NotificationType((1, 3, 6, 1, 4, 1, 45, 5, 22, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("BAY-STACK-UNICAST-STORM-CONTROL-MIB", "bsUnicastStormControlPollValue"), ("BAY-STACK-UNICAST-STORM-CONTROL-MIB", "bsUnicastStormControlLowWatermark"))
if mibBuilder.loadTexts: bsUnicastStormControlBelowLowWatermark.setStatus('current')
if mibBuilder.loadTexts: bsUnicastStormControlBelowLowWatermark.setDescription('This notification is generated when the unicast storm control packet rate falls below the low watermark after having risen above the high watermark. It is generated only once when this occurs.')
bsUnicastStormControlAboveHighWatermark = NotificationType((1, 3, 6, 1, 4, 1, 45, 5, 22, 0, 2)).setObjects(("IF-MIB", "ifIndex"), ("BAY-STACK-UNICAST-STORM-CONTROL-MIB", "bsUnicastStormControlPollValue"), ("BAY-STACK-UNICAST-STORM-CONTROL-MIB", "bsUnicastStormControlHighWatermark"))
if mibBuilder.loadTexts: bsUnicastStormControlAboveHighWatermark.setStatus('current')
if mibBuilder.loadTexts: bsUnicastStormControlAboveHighWatermark.setDescription('This notification is generated periodically as long as the unicast storm control packet rate remains above the high watermark.')
mibBuilder.exportSymbols("BAY-STACK-UNICAST-STORM-CONTROL-MIB", bsUnicastStormControlNotifications=bsUnicastStormControlNotifications, bsUnicastStormControlIfIndex=bsUnicastStormControlIfIndex, bsUnicastStormControlBelowLowWatermark=bsUnicastStormControlBelowLowWatermark, bsUnicastStormControlIfEntry=bsUnicastStormControlIfEntry, bsUnicastStormControlPollInterval=bsUnicastStormControlPollInterval, bsUnicastStormControlIfTable=bsUnicastStormControlIfTable, bsUnicastStormControlTrapInterval=bsUnicastStormControlTrapInterval, bsUnicastStormControlAboveHighWatermark=bsUnicastStormControlAboveHighWatermark, bayStackUnicastStormControlMib=bayStackUnicastStormControlMib, bsUnicastStormControlHighWatermark=bsUnicastStormControlHighWatermark, bsUnicastStormControlObjects=bsUnicastStormControlObjects, bsUnicastStormControlScalars=bsUnicastStormControlScalars, PYSNMP_MODULE_ID=bayStackUnicastStormControlMib, bsUnicastStormControlIfEnabled=bsUnicastStormControlIfEnabled, bsUnicastStormControlLowWatermark=bsUnicastStormControlLowWatermark, bsUnicastStormControlEnabled=bsUnicastStormControlEnabled, bsUnicastStormControlPollValue=bsUnicastStormControlPollValue)
