#
# PySNMP MIB module HH3C-TRNG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-TRNG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:30:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
hh3cRhw, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cRhw")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Bits, Gauge32, IpAddress, ModuleIdentity, Counter32, iso, ObjectIdentity, TimeTicks, Unsigned32, NotificationType, Counter64, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Bits", "Gauge32", "IpAddress", "ModuleIdentity", "Counter32", "iso", "ObjectIdentity", "TimeTicks", "Unsigned32", "NotificationType", "Counter64", "Integer32")
DisplayString, RowStatus, TextualConvention, TruthValue, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TruthValue", "DateAndTime")
hh3cTRNG = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 8, 13))
hh3cTRNG.setRevisions(('2003-04-11 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hh3cTRNG.setRevisionsDescriptions(('200304110000Z, --The initial revision of this MIB module.',))
if mibBuilder.loadTexts: hh3cTRNG.setLastUpdated('200304110000Z')
if mibBuilder.loadTexts: hh3cTRNG.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
if mibBuilder.loadTexts: hh3cTRNG.setContactInfo('Platform Team Hangzhou H3C Tech. Co., Ltd. Hai-Dian District Beijing P.R. China http://www.h3c.com Zip:100085 ')
if mibBuilder.loadTexts: hh3cTRNG.setDescription('The HH3C-TRNG-MIB contains objects to Configure the system absolute and periodic time-range.')
hh3cTRNGMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1))
hh3cTrngCreateTimerangeTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 1), )
if mibBuilder.loadTexts: hh3cTrngCreateTimerangeTable.setStatus('current')
if mibBuilder.loadTexts: hh3cTrngCreateTimerangeTable.setDescription('Creat TimeRange.')
hh3cTrngCreateTimerangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 1, 1), ).setIndexNames((0, "HH3C-TRNG-MIB", "hh3cTrngIndex"))
if mibBuilder.loadTexts: hh3cTrngCreateTimerangeEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cTrngCreateTimerangeEntry.setDescription('Define the entry of hh3cTrngCreateTimerangeTable')
hh3cTrngIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: hh3cTrngIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cTrngIndex.setDescription("TimeRange's index")
hh3cTrngName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTrngName.setStatus('current')
if mibBuilder.loadTexts: hh3cTrngName.setDescription("TimeRange's name")
hh3cTrngValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTrngValidFlag.setStatus('current')
if mibBuilder.loadTexts: hh3cTrngValidFlag.setDescription('Valid or Invalid flag')
hh3cTrngCreateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTrngCreateRowStatus.setStatus('current')
if mibBuilder.loadTexts: hh3cTrngCreateRowStatus.setDescription('The status of this conceptual row.Now only realize CreateAndGo and Destroy and Active.')
hh3cTrngAbsoluteTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 2), )
if mibBuilder.loadTexts: hh3cTrngAbsoluteTable.setStatus('current')
if mibBuilder.loadTexts: hh3cTrngAbsoluteTable.setDescription('Creat absoluteness time item of the TimeRange')
hh3cTrngAbsoluteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 2, 1), ).setIndexNames((0, "HH3C-TRNG-MIB", "hh3cTrngAbsoluteNameIndex"), (0, "HH3C-TRNG-MIB", "hh3cTrngAbsoluteSubIndex"))
if mibBuilder.loadTexts: hh3cTrngAbsoluteEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cTrngAbsoluteEntry.setDescription('Define the entry of hh3cTrngAbsoluteTable')
hh3cTrngAbsoluteNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: hh3cTrngAbsoluteNameIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cTrngAbsoluteNameIndex.setDescription("TimeRange's index")
hh3cTrngAbsoluteSubIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12)))
if mibBuilder.loadTexts: hh3cTrngAbsoluteSubIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cTrngAbsoluteSubIndex.setDescription("SubItem's index")
hh3cTimerangeAbsoluteStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 2, 1, 3), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTimerangeAbsoluteStartTime.setStatus('current')
if mibBuilder.loadTexts: hh3cTimerangeAbsoluteStartTime.setDescription("Start point of the timerange.The format defined like 'YYYY-MM-DD,hh:mm:0.0'.")
hh3cTimerangeAbsoluteEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 2, 1, 4), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTimerangeAbsoluteEndTime.setStatus('current')
if mibBuilder.loadTexts: hh3cTimerangeAbsoluteEndTime.setDescription("End point of the timerange.The format defined like 'YYYY-MM-DD,hh:mm:0.0'.")
hh3cTimerangeAbsolueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTimerangeAbsolueRowStatus.setStatus('current')
if mibBuilder.loadTexts: hh3cTimerangeAbsolueRowStatus.setDescription('The status of this conceptual row. Now only realize CreateAndGo and Destroy and Active.')
hh3cTrngPeriodicTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 3), )
if mibBuilder.loadTexts: hh3cTrngPeriodicTable.setStatus('current')
if mibBuilder.loadTexts: hh3cTrngPeriodicTable.setDescription('Creat periodic time item of the TimeRange')
hh3cTrngPeriodicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 3, 1), ).setIndexNames((0, "HH3C-TRNG-MIB", "hh3cTrngPeriodicNameIndex"), (0, "HH3C-TRNG-MIB", "hh3cTrngPeriodicSubIndex"))
if mibBuilder.loadTexts: hh3cTrngPeriodicEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cTrngPeriodicEntry.setDescription('Define the index of hh3cTrngPeriodicTable')
hh3cTrngPeriodicNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: hh3cTrngPeriodicNameIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cTrngPeriodicNameIndex.setDescription("TimeRange's index")
hh3cTrngPeriodicSubIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: hh3cTrngPeriodicSubIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cTrngPeriodicSubIndex.setDescription("SubItem's index")
hh3cTrngPeriodicDayOfWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 3, 1, 3), Bits().clone(namedValues=NamedValues(("sunday", 0), ("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTrngPeriodicDayOfWeek.setStatus('current')
if mibBuilder.loadTexts: hh3cTrngPeriodicDayOfWeek.setDescription('The day of week. This is a bit-map of possible conditions. The various bit positions are: |0 |sunday | |1 |monday | |2 |tuesday | |3 |wednesday | |4 |thursday | |5 |friday | |6 |saturday | ')
hh3cTimerangePeriodicStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 3, 1, 4), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTimerangePeriodicStartTime.setStatus('current')
if mibBuilder.loadTexts: hh3cTimerangePeriodicStartTime.setDescription("Start point of this timerange,The format defined like 'hh:mm:0,0'.")
hh3cTimerangePeriodicEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 3, 1, 5), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTimerangePeriodicEndTime.setStatus('current')
if mibBuilder.loadTexts: hh3cTimerangePeriodicEndTime.setDescription("End point of this timerange. The format definedlike 'hh:mm:0,0'.")
hh3cTimerangePeriodicRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 13, 1, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTimerangePeriodicRowStatus.setStatus('current')
if mibBuilder.loadTexts: hh3cTimerangePeriodicRowStatus.setDescription('The status of this conceptual row, Now only realize CreateAndGo and Destroy and Active.')
hh3cTRNGMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 13, 3))
hh3cTRNGMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 13, 3, 1))
hh3cTRNGMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 25506, 8, 13, 3, 1, 1)).setObjects(("HH3C-TRNG-MIB", "hh3cTRNGGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cTRNGMibCompliance = hh3cTRNGMibCompliance.setStatus('current')
if mibBuilder.loadTexts: hh3cTRNGMibCompliance.setDescription('The compliance statement for entities which implement the H3C Time-range MIB.')
hh3cTRNGMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 13, 3, 2))
hh3cTRNGGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 8, 13, 3, 2, 1)).setObjects(("HH3C-TRNG-MIB", "hh3cTrngName"), ("HH3C-TRNG-MIB", "hh3cTrngValidFlag"), ("HH3C-TRNG-MIB", "hh3cTrngCreateRowStatus"), ("HH3C-TRNG-MIB", "hh3cTimerangeAbsoluteStartTime"), ("HH3C-TRNG-MIB", "hh3cTimerangeAbsoluteEndTime"), ("HH3C-TRNG-MIB", "hh3cTimerangeAbsolueRowStatus"), ("HH3C-TRNG-MIB", "hh3cTrngPeriodicDayOfWeek"), ("HH3C-TRNG-MIB", "hh3cTimerangePeriodicStartTime"), ("HH3C-TRNG-MIB", "hh3cTimerangePeriodicEndTime"), ("HH3C-TRNG-MIB", "hh3cTimerangePeriodicRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cTRNGGroup = hh3cTRNGGroup.setStatus('current')
if mibBuilder.loadTexts: hh3cTRNGGroup.setDescription('A collection of objects providing mandatory time-range information.')
mibBuilder.exportSymbols("HH3C-TRNG-MIB", hh3cTimerangeAbsoluteEndTime=hh3cTimerangeAbsoluteEndTime, hh3cTrngValidFlag=hh3cTrngValidFlag, hh3cTRNGMibCompliances=hh3cTRNGMibCompliances, hh3cTrngPeriodicSubIndex=hh3cTrngPeriodicSubIndex, hh3cTrngCreateRowStatus=hh3cTrngCreateRowStatus, hh3cTrngAbsoluteTable=hh3cTrngAbsoluteTable, hh3cTrngAbsoluteEntry=hh3cTrngAbsoluteEntry, hh3cTimerangePeriodicStartTime=hh3cTimerangePeriodicStartTime, hh3cTRNGMibConformance=hh3cTRNGMibConformance, hh3cTrngCreateTimerangeEntry=hh3cTrngCreateTimerangeEntry, hh3cTrngPeriodicEntry=hh3cTrngPeriodicEntry, hh3cTimerangePeriodicEndTime=hh3cTimerangePeriodicEndTime, hh3cTRNGMibObjects=hh3cTRNGMibObjects, hh3cTRNG=hh3cTRNG, hh3cTimerangeAbsoluteStartTime=hh3cTimerangeAbsoluteStartTime, PYSNMP_MODULE_ID=hh3cTRNG, hh3cTrngCreateTimerangeTable=hh3cTrngCreateTimerangeTable, hh3cTrngAbsoluteNameIndex=hh3cTrngAbsoluteNameIndex, hh3cTimerangeAbsolueRowStatus=hh3cTimerangeAbsolueRowStatus, hh3cTrngAbsoluteSubIndex=hh3cTrngAbsoluteSubIndex, hh3cTrngPeriodicTable=hh3cTrngPeriodicTable, hh3cTrngPeriodicNameIndex=hh3cTrngPeriodicNameIndex, hh3cTRNGMibCompliance=hh3cTRNGMibCompliance, hh3cTRNGMibGroups=hh3cTRNGMibGroups, hh3cTRNGGroup=hh3cTRNGGroup, hh3cTimerangePeriodicRowStatus=hh3cTimerangePeriodicRowStatus, hh3cTrngName=hh3cTrngName, hh3cTrngPeriodicDayOfWeek=hh3cTrngPeriodicDayOfWeek, hh3cTrngIndex=hh3cTrngIndex)
