#
# PySNMP MIB module AC-PM-Media-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AC-PM-Media-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:09:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
acProducts, acBoardMibs, acGeneric, audioCodes, acPerformance, acRegistrations = mibBuilder.importSymbols("AUDIOCODES-TYPES-MIB", "acProducts", "acBoardMibs", "acGeneric", "audioCodes", "acPerformance", "acRegistrations")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
enterprises, Bits, iso, MibIdentifier, Counter32, NotificationType, Gauge32, TimeTicks, IpAddress, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, ObjectIdentity, Counter64, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "Bits", "iso", "MibIdentifier", "Counter32", "NotificationType", "Gauge32", "TimeTicks", "IpAddress", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "ObjectIdentity", "Counter64", "Unsigned32")
TextualConvention, DateAndTime, TAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "TAddress", "DisplayString")
acPMMedia = ModuleIdentity((1, 3, 6, 1, 4, 1, 5003, 10, 7))
if mibBuilder.loadTexts: acPMMedia.setLastUpdated('200902110435Z')
if mibBuilder.loadTexts: acPMMedia.setOrganization('AudioCodes Ltd')
if mibBuilder.loadTexts: acPMMedia.setContactInfo('Postal: Support AudioCodes LTD 1 Hayarden Street Airport City Lod, ISRAEL 70151 Tel: 972-3-9764000 Fax: 972-3-9764040 Email: support@audiocodes.com Web: www.audiocodes.com')
if mibBuilder.loadTexts: acPMMedia.setDescription("The AC-PM-Media MIB offers performance monitoring For the Media related elements in Audiocodes' devices. The Configuration sub-tree is for configuring the interval Period length for the entire AC-PM-Media MIB, and the different tables' thresholds. The Data sub-tree presents the tables of monitored elements. Note - for the entire MIB the value (-1) means the value Asked for is either not supported or currently not relevant (this is for when values asked for are for intervals not yet recorded.")
acPMMediaConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1))
acPMMediaConfigurationPeriodLength = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 894780))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaConfigurationPeriodLength.setStatus('current')
if mibBuilder.loadTexts: acPMMediaConfigurationPeriodLength.setDescription('Length of monitoring intervals for entire MIB. Time is in minutes. Access: Instant.')
acPMMediaConfigurationResetTotalCounters = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("resetCountersDone", 1), ("resetTotalCounters", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaConfigurationResetTotalCounters.setStatus('current')
if mibBuilder.loadTexts: acPMMediaConfigurationResetTotalCounters.setDescription('Total-Counters Reset. To reset the total counters, set the value of this object to resetTotalCounters(2). Access: Instant.')
acPMDSPAttributes = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 31))
acPMDSPAttributesDSPUtilHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 31, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMDSPAttributesDSPUtilHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMDSPAttributesDSPUtilHighThreshold.setDescription('High threshold. Access: Instant.')
acPMDSPAttributesDSPUtilLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 31, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMDSPAttributesDSPUtilLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMDSPAttributesDSPUtilLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMCodersAttributes = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 32))
acPMCodersAttributesChannelsPerCoderHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 32, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMCodersAttributesChannelsPerCoderHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMCodersAttributesChannelsPerCoderHighThreshold.setDescription('High threshold. Access: Instant.')
acPMCodersAttributesChannelsPerCoderLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 32, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMCodersAttributesChannelsPerCoderLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMCodersAttributesChannelsPerCoderLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMNetworkingAttributes = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33))
acPMNetworkingAttributesPacketDelayHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesPacketDelayHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesPacketDelayHighThreshold.setDescription('High threshold. Access: Instant.')
acPMNetworkingAttributesPacketDelayLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesPacketDelayLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesPacketDelayLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMNetworkingAttributesPacketJitterHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesPacketJitterHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesPacketJitterHighThreshold.setDescription('High threshold. Access: Instant.')
acPMNetworkingAttributesPacketJitterLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesPacketJitterLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesPacketJitterLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMNetworkingAttributesRTPBytesTxHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPBytesTxHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPBytesTxHighThreshold.setDescription('High threshold. Access: Instant.')
acPMNetworkingAttributesRTPBytesTxLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPBytesTxLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPBytesTxLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMNetworkingAttributesRTPBytesRxHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPBytesRxHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPBytesRxHighThreshold.setDescription('High threshold. Access: Instant.')
acPMNetworkingAttributesRTPBytesRxLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPBytesRxLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPBytesRxLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMNetworkingAttributesRTPPacketsTxHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPPacketsTxHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPPacketsTxHighThreshold.setDescription('High threshold. Access: Instant.')
acPMNetworkingAttributesRTPPacketsTxLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPPacketsTxLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPPacketsTxLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMNetworkingAttributesRTPPacketsRxHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPPacketsRxHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPPacketsRxHighThreshold.setDescription('High threshold. Access: Instant.')
acPMNetworkingAttributesRTPPacketsRxLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPPacketsRxLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPPacketsRxLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMNetworkingAttributesRTPPacketLossRxHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPPacketLossRxHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPPacketLossRxHighThreshold.setDescription('High threshold. Access: Instant.')
acPMNetworkingAttributesRTPPacketLossRxLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPPacketLossRxLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPPacketLossRxLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMNetworkingAttributesRTPPacketLossTxHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPPacketLossTxHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPPacketLossTxHighThreshold.setDescription('High threshold. Access: Instant.')
acPMNetworkingAttributesRTPPacketLossTxLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPPacketLossTxLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesRTPPacketLossTxLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMNetworkingAttributesModuleRTPPacketLossRxHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesModuleRTPPacketLossRxHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesModuleRTPPacketLossRxHighThreshold.setDescription('High threshold. Access: Instant.')
acPMNetworkingAttributesModuleRTPPacketLossRxLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesModuleRTPPacketLossRxLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesModuleRTPPacketLossRxLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMNetworkingAttributesModuleRTPPacketLossTxHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesModuleRTPPacketLossTxHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesModuleRTPPacketLossTxHighThreshold.setDescription('High threshold. Access: Instant.')
acPMNetworkingAttributesModuleRTPPacketLossTxLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMNetworkingAttributesModuleRTPPacketLossTxLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMNetworkingAttributesModuleRTPPacketLossTxLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMMediaNetworkingAggregatedAttributes = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 21))
acPMMediaNetworkingAggregatedAttributesPacketDelayHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 21, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesPacketDelayHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesPacketDelayHighThreshold.setDescription('High threshold. Access: Instant.')
acPMMediaNetworkingAggregatedAttributesPacketDelayLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 21, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesPacketDelayLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesPacketDelayLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMMediaNetworkingAggregatedAttributesPacketJitterHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 21, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesPacketJitterHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesPacketJitterHighThreshold.setDescription('High threshold. Access: Instant.')
acPMMediaNetworkingAggregatedAttributesPacketJitterLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 21, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesPacketJitterLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesPacketJitterLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMMediaNetworkingAggregatedAttributesRTPBytesTxHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 21, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesRTPBytesTxHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesRTPBytesTxHighThreshold.setDescription('High threshold. Access: Instant.')
acPMMediaNetworkingAggregatedAttributesRTPBytesTxLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 21, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesRTPBytesTxLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesRTPBytesTxLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMMediaNetworkingAggregatedAttributesRTPBytesRxHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 21, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesRTPBytesRxHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesRTPBytesRxHighThreshold.setDescription('High threshold. Access: Instant.')
acPMMediaNetworkingAggregatedAttributesRTPBytesRxLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 21, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesRTPBytesRxLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesRTPBytesRxLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMMediaNetworkingAggregatedAttributesRTPPacketsTxHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 21, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesRTPPacketsTxHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesRTPPacketsTxHighThreshold.setDescription('High threshold. Access: Instant.')
acPMMediaNetworkingAggregatedAttributesRTPPacketsTxLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 21, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesRTPPacketsTxLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesRTPPacketsTxLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMMediaNetworkingAggregatedAttributesRTPPacketsRxHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 21, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesRTPPacketsRxHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesRTPPacketsRxHighThreshold.setDescription('High threshold. Access: Instant.')
acPMMediaNetworkingAggregatedAttributesRTPPacketsRxLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 33, 21, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesRTPPacketsRxLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaNetworkingAggregatedAttributesRTPPacketsRxLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMMediaChannelUtilizationAttr = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 34))
acPMMediaChannelUtilizationAttrFaxChannelsHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 34, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrFaxChannelsHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrFaxChannelsHighThreshold.setDescription('High threshold. Access: Instant.')
acPMMediaChannelUtilizationAttrFaxChannelsLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 34, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrFaxChannelsLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrFaxChannelsLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMMediaChannelUtilizationAttrModemChannelsHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 34, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrModemChannelsHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrModemChannelsHighThreshold.setDescription('High threshold. Access: Instant.')
acPMMediaChannelUtilizationAttrModemChannelsLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 34, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrModemChannelsLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrModemChannelsLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMMediaChannelUtilizationAttrTDM2IPChannelsHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 34, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrTDM2IPChannelsHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrTDM2IPChannelsHighThreshold.setDescription('High threshold. Access: Instant.')
acPMMediaChannelUtilizationAttrTDM2IPChannelsLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 34, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrTDM2IPChannelsLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrTDM2IPChannelsLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMMediaChannelUtilizationAttrRTPStreamsHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 34, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrRTPStreamsHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrRTPStreamsHighThreshold.setDescription('High threshold. Access: Instant.')
acPMMediaChannelUtilizationAttrRTPStreamsLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 34, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrRTPStreamsLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrRTPStreamsLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMMediaChannelUtilizationAttrSRTPStreamsHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 34, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrSRTPStreamsHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrSRTPStreamsHighThreshold.setDescription('High threshold. Access: Instant.')
acPMMediaChannelUtilizationAttrSRTPStreamsLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 34, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrSRTPStreamsLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrSRTPStreamsLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMMediaChannelUtilizationAttrMulticastRegisChanHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 34, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrMulticastRegisChanHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrMulticastRegisChanHighThreshold.setDescription('High threshold. Access: Instant.')
acPMMediaChannelUtilizationAttrMulticastRegisChanLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 34, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrMulticastRegisChanLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrMulticastRegisChanLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMMediaChannelUtilizationAttrModemRelayHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 34, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrModemRelayHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrModemRelayHighThreshold.setDescription('High threshold. Access: Instant.')
acPMMediaChannelUtilizationAttrModemRelayLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 1, 34, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrModemRelayLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMediaChannelUtilizationAttrModemRelayLowThreshold.setDescription('Low threshold. Access: Instant.')
acPMMediaData = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2))
acPMMediaDataAcPMMediaTimeFromStartOfInterval = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMMediaDataAcPMMediaTimeFromStartOfInterval.setStatus('current')
if mibBuilder.loadTexts: acPMMediaDataAcPMMediaTimeFromStartOfInterval.setDescription('The time in seconds since the start of the current interval. MIB specific.')
acPMDSPUtilTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 21), )
if mibBuilder.loadTexts: acPMDSPUtilTable.setStatus('current')
if mibBuilder.loadTexts: acPMDSPUtilTable.setDescription('Number of active DSP channels.')
acPMDSPUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 21, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMDSPUtilInterval"))
if mibBuilder.loadTexts: acPMDSPUtilEntry.setStatus('current')
if mibBuilder.loadTexts: acPMDSPUtilEntry.setDescription('')
acPMDSPUtilInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMDSPUtilInterval.setStatus('current')
if mibBuilder.loadTexts: acPMDSPUtilInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMDSPUtilVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 21, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMDSPUtilVal.setStatus('current')
if mibBuilder.loadTexts: acPMDSPUtilVal.setDescription('Value of gauge or counter.')
acPMDSPUtilAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 21, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMDSPUtilAverage.setStatus('current')
if mibBuilder.loadTexts: acPMDSPUtilAverage.setDescription('Average value with in the period time.')
acPMDSPUtilMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 21, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMDSPUtilMax.setStatus('current')
if mibBuilder.loadTexts: acPMDSPUtilMax.setDescription('Maximum value with in the period time.')
acPMDSPUtilMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 21, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMDSPUtilMin.setStatus('current')
if mibBuilder.loadTexts: acPMDSPUtilMin.setDescription('Minimum value with in the period time.')
acPMDSPUtilVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 21, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMDSPUtilVolume.setStatus('current')
if mibBuilder.loadTexts: acPMDSPUtilVolume.setDescription('Activity volume.')
acPMDSPUtilTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 21, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMDSPUtilTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMDSPUtilTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMDSPUtilTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 21, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMDSPUtilTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMDSPUtilTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMDSPUtilTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 21, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMDSPUtilTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMDSPUtilTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMDSPUtilFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 21, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMDSPUtilFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMDSPUtilFullDayAverage.setDescription('The average of full 24 hours.')
acPMChannelsPerCoderTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 22), )
if mibBuilder.loadTexts: acPMChannelsPerCoderTable.setStatus('current')
if mibBuilder.loadTexts: acPMChannelsPerCoderTable.setDescription('Number of active channels per coder. Index: 0=G711, 1=G723, 2=G728, 3=G729a, 4=G729e, 5=AMR')
acPMChannelsPerCoderEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 22, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMChannelsPerCoderCoders"), (0, "AC-PM-Media-MIB", "acPMChannelsPerCoderInterval"))
if mibBuilder.loadTexts: acPMChannelsPerCoderEntry.setStatus('current')
if mibBuilder.loadTexts: acPMChannelsPerCoderEntry.setDescription('')
acPMChannelsPerCoderCoders = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 22, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("g711", 0), ("g723", 1), ("g728", 2), ("g729a", 3), ("g729e", 4), ("aMR", 5), ("g729EV", 6), ("eg711", 7), ("eVRC", 8))))
if mibBuilder.loadTexts: acPMChannelsPerCoderCoders.setStatus('current')
if mibBuilder.loadTexts: acPMChannelsPerCoderCoders.setDescription('Coder. 0=G711, 1=G723, 2=G728, 3=G729a, 4=G729e, 5=AMR, 6=G729EV, 7=EG711, 8=EVRC.')
acPMChannelsPerCoderInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 22, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMChannelsPerCoderInterval.setStatus('current')
if mibBuilder.loadTexts: acPMChannelsPerCoderInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMChannelsPerCoderVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 22, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMChannelsPerCoderVal.setStatus('current')
if mibBuilder.loadTexts: acPMChannelsPerCoderVal.setDescription('Value of gauge or counter.')
acPMChannelsPerCoderAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 22, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMChannelsPerCoderAverage.setStatus('current')
if mibBuilder.loadTexts: acPMChannelsPerCoderAverage.setDescription('Average value with in the period time.')
acPMChannelsPerCoderMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 22, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMChannelsPerCoderMax.setStatus('current')
if mibBuilder.loadTexts: acPMChannelsPerCoderMax.setDescription('Maximum value with in the period time.')
acPMChannelsPerCoderMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 22, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMChannelsPerCoderMin.setStatus('current')
if mibBuilder.loadTexts: acPMChannelsPerCoderMin.setDescription('Minimum value with in the period time.')
acPMChannelsPerCoderVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 22, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMChannelsPerCoderVolume.setStatus('current')
if mibBuilder.loadTexts: acPMChannelsPerCoderVolume.setDescription('Activity volume.')
acPMChannelsPerCoderTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 22, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMChannelsPerCoderTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMChannelsPerCoderTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMChannelsPerCoderTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 22, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMChannelsPerCoderTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMChannelsPerCoderTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMChannelsPerCoderTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 22, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMChannelsPerCoderTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMChannelsPerCoderTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMChannelsPerCoderFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 22, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMChannelsPerCoderFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMChannelsPerCoderFullDayAverage.setDescription('The average of full 24 hours.')
acPMRobustDiscardTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 23), )
if mibBuilder.loadTexts: acPMRobustDiscardTable.setStatus('current')
if mibBuilder.loadTexts: acPMRobustDiscardTable.setDescription('Number of packets discarded by the robust RTP filter.')
acPMRobustDiscardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 23, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMRobustDiscardInterval"))
if mibBuilder.loadTexts: acPMRobustDiscardEntry.setStatus('current')
if mibBuilder.loadTexts: acPMRobustDiscardEntry.setDescription('')
acPMRobustDiscardInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 23, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMRobustDiscardInterval.setStatus('current')
if mibBuilder.loadTexts: acPMRobustDiscardInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMRobustDiscardVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 23, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRobustDiscardVal.setStatus('current')
if mibBuilder.loadTexts: acPMRobustDiscardVal.setDescription('Value of gauge or counter.')
acPMMediaNetworking = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31))
acPMPacketDelayTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 1), )
if mibBuilder.loadTexts: acPMPacketDelayTable.setStatus('current')
if mibBuilder.loadTexts: acPMPacketDelayTable.setDescription('Packet delay in RTCP data, per trunk.')
acPMPacketDelayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 1, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMPacketDelayTrunkNum"), (0, "AC-PM-Media-MIB", "acPMPacketDelayInterval"))
if mibBuilder.loadTexts: acPMPacketDelayEntry.setStatus('current')
if mibBuilder.loadTexts: acPMPacketDelayEntry.setDescription('')
acPMPacketDelayTrunkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 83)))
if mibBuilder.loadTexts: acPMPacketDelayTrunkNum.setStatus('current')
if mibBuilder.loadTexts: acPMPacketDelayTrunkNum.setDescription('Trunk number. 0 is the first trunk.')
acPMPacketDelayInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMPacketDelayInterval.setStatus('current')
if mibBuilder.loadTexts: acPMPacketDelayInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMPacketDelayVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPacketDelayVal.setStatus('current')
if mibBuilder.loadTexts: acPMPacketDelayVal.setDescription('Value of gauge or counter.')
acPMPacketDelayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPacketDelayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMPacketDelayAverage.setDescription('Average value with in the period time.')
acPMPacketDelayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPacketDelayMax.setStatus('current')
if mibBuilder.loadTexts: acPMPacketDelayMax.setDescription('Maximum value with in the period time.')
acPMPacketDelayMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPacketDelayMin.setStatus('current')
if mibBuilder.loadTexts: acPMPacketDelayMin.setDescription('Minimum value with in the period time.')
acPMPacketDelayVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPacketDelayVolume.setStatus('current')
if mibBuilder.loadTexts: acPMPacketDelayVolume.setDescription('Activity volume.')
acPMPacketDelayTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPacketDelayTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMPacketDelayTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMPacketDelayTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPacketDelayTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMPacketDelayTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMPacketDelayTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPacketDelayTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMPacketDelayTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMPacketDelayFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPacketDelayFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMPacketDelayFullDayAverage.setDescription('The average of full 24 hours.')
acPMPacketJitterTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 2), )
if mibBuilder.loadTexts: acPMPacketJitterTable.setStatus('current')
if mibBuilder.loadTexts: acPMPacketJitterTable.setDescription('Packet jitter in RTCP data, per trunk.')
acPMPacketJitterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 2, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMPacketJitterTrunkNum"), (0, "AC-PM-Media-MIB", "acPMPacketJitterInterval"))
if mibBuilder.loadTexts: acPMPacketJitterEntry.setStatus('current')
if mibBuilder.loadTexts: acPMPacketJitterEntry.setDescription('')
acPMPacketJitterTrunkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 83)))
if mibBuilder.loadTexts: acPMPacketJitterTrunkNum.setStatus('current')
if mibBuilder.loadTexts: acPMPacketJitterTrunkNum.setDescription('Trunk number. 0 is the first trunk.')
acPMPacketJitterInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMPacketJitterInterval.setStatus('current')
if mibBuilder.loadTexts: acPMPacketJitterInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMPacketJitterVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPacketJitterVal.setStatus('current')
if mibBuilder.loadTexts: acPMPacketJitterVal.setDescription('Value of gauge or counter.')
acPMPacketJitterAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPacketJitterAverage.setStatus('current')
if mibBuilder.loadTexts: acPMPacketJitterAverage.setDescription('Average value with in the period time.')
acPMPacketJitterMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPacketJitterMax.setStatus('current')
if mibBuilder.loadTexts: acPMPacketJitterMax.setDescription('Maximum value with in the period time.')
acPMPacketJitterMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPacketJitterMin.setStatus('current')
if mibBuilder.loadTexts: acPMPacketJitterMin.setDescription('Minimum value with in the period time.')
acPMPacketJitterVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPacketJitterVolume.setStatus('current')
if mibBuilder.loadTexts: acPMPacketJitterVolume.setDescription('Activity volume.')
acPMPacketJitterTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPacketJitterTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMPacketJitterTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMPacketJitterTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPacketJitterTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMPacketJitterTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMPacketJitterTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPacketJitterTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMPacketJitterTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMPacketJitterFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPacketJitterFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMPacketJitterFullDayAverage.setDescription('The average of full 24 hours.')
acPMRTPBytesTxTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 3), )
if mibBuilder.loadTexts: acPMRTPBytesTxTable.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesTxTable.setDescription('RTP bytes sent in RTCP data, per trunk.')
acPMRTPBytesTxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 3, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMRTPBytesTxTrunkNum"), (0, "AC-PM-Media-MIB", "acPMRTPBytesTxInterval"))
if mibBuilder.loadTexts: acPMRTPBytesTxEntry.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesTxEntry.setDescription('')
acPMRTPBytesTxTrunkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 83)))
if mibBuilder.loadTexts: acPMRTPBytesTxTrunkNum.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesTxTrunkNum.setDescription('Trunk number. 0 is the first trunk.')
acPMRTPBytesTxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMRTPBytesTxInterval.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesTxInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMRTPBytesTxVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPBytesTxVal.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesTxVal.setDescription('Value of gauge or counter.')
acPMRTPBytesTxAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPBytesTxAverage.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesTxAverage.setDescription('Average value with in the period time.')
acPMRTPBytesTxMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPBytesTxMax.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesTxMax.setDescription('Maximum value with in the period time.')
acPMRTPBytesTxMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPBytesTxMin.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesTxMin.setDescription('Minimum value with in the period time.')
acPMRTPBytesTxVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPBytesTxVolume.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesTxVolume.setDescription('Activity volume.')
acPMRTPBytesTxTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPBytesTxTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesTxTimeBelowLowThreshold.setDescription('Percent of interval time for which counter is below what was determined as the low threshold.')
acPMRTPBytesTxTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPBytesTxTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesTxTimeBetweenThresholds.setDescription('Percent of interval time for which counter is above what was determined as the high threshold.')
acPMRTPBytesTxTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPBytesTxTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesTxTimeAboveHighThreshold.setDescription('Percent of interval time for which counter is between what were determined as the low and high thresholds.')
acPMRTPBytesTxFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPBytesTxFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesTxFullDayAverage.setDescription('The average of full 24 hours.')
acPMRTPBytesRxTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 4), )
if mibBuilder.loadTexts: acPMRTPBytesRxTable.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesRxTable.setDescription('RTP bytes received in RTCP data, per trunk.')
acPMRTPBytesRxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 4, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMRTPBytesRxTrunkNum"), (0, "AC-PM-Media-MIB", "acPMRTPBytesRxInterval"))
if mibBuilder.loadTexts: acPMRTPBytesRxEntry.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesRxEntry.setDescription('')
acPMRTPBytesRxTrunkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 83)))
if mibBuilder.loadTexts: acPMRTPBytesRxTrunkNum.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesRxTrunkNum.setDescription('Trunk number. 0 is the first trunk.')
acPMRTPBytesRxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMRTPBytesRxInterval.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesRxInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMRTPBytesRxVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPBytesRxVal.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesRxVal.setDescription('Value of gauge or counter.')
acPMRTPBytesRxAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPBytesRxAverage.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesRxAverage.setDescription('Average value with in the period time.')
acPMRTPBytesRxMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPBytesRxMax.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesRxMax.setDescription('Maximum value with in the period time.')
acPMRTPBytesRxMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPBytesRxMin.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesRxMin.setDescription('Minimum value with in the period time.')
acPMRTPBytesRxVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPBytesRxVolume.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesRxVolume.setDescription('Activity volume.')
acPMRTPBytesRxTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPBytesRxTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesRxTimeBelowLowThreshold.setDescription('Percent of interval time for which counter is below what was determined as the low threshold.')
acPMRTPBytesRxTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPBytesRxTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesRxTimeBetweenThresholds.setDescription('Percent of interval time for which counter is above what was determined as the high threshold.')
acPMRTPBytesRxTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPBytesRxTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesRxTimeAboveHighThreshold.setDescription('Percent of interval time for which counter is between what were determined as the low and high thresholds.')
acPMRTPBytesRxFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPBytesRxFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMRTPBytesRxFullDayAverage.setDescription('The average of full 24 hours.')
acPMRTPPacketsTxTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 5), )
if mibBuilder.loadTexts: acPMRTPPacketsTxTable.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsTxTable.setDescription('RTP packets sent in RTCP data, per trunk.')
acPMRTPPacketsTxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 5, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMRTPPacketsTxTrunkNum"), (0, "AC-PM-Media-MIB", "acPMRTPPacketsTxInterval"))
if mibBuilder.loadTexts: acPMRTPPacketsTxEntry.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsTxEntry.setDescription('')
acPMRTPPacketsTxTrunkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 83)))
if mibBuilder.loadTexts: acPMRTPPacketsTxTrunkNum.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsTxTrunkNum.setDescription('Trunk number. 0 is the first trunk.')
acPMRTPPacketsTxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMRTPPacketsTxInterval.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsTxInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMRTPPacketsTxVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 5, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsTxVal.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsTxVal.setDescription('Value of gauge or counter.')
acPMRTPPacketsTxAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsTxAverage.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsTxAverage.setDescription('Average value with in the period time.')
acPMRTPPacketsTxMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsTxMax.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsTxMax.setDescription('Maximum value with in the period time.')
acPMRTPPacketsTxMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsTxMin.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsTxMin.setDescription('Minimum value with in the period time.')
acPMRTPPacketsTxVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsTxVolume.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsTxVolume.setDescription('Activity volume.')
acPMRTPPacketsTxTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsTxTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsTxTimeBelowLowThreshold.setDescription('Percent of interval time for which counter is below what was determined as the low threshold.')
acPMRTPPacketsTxTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsTxTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsTxTimeBetweenThresholds.setDescription('Percent of interval time for which counter is above what was determined as the high threshold.')
acPMRTPPacketsTxTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsTxTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsTxTimeAboveHighThreshold.setDescription('Percent of interval time for which counter is between what were determined as the low and high thresholds.')
acPMRTPPacketsTxFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 5, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsTxFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsTxFullDayAverage.setDescription('The average of full 24 hours.')
acPMRTPPacketsTxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 5, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsTxTotal.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsTxTotal.setDescription('Total since last reset.')
acPMRTPPacketsRxTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 6), )
if mibBuilder.loadTexts: acPMRTPPacketsRxTable.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsRxTable.setDescription('RTP packets received in RTCP data, per trunk.')
acPMRTPPacketsRxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 6, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMRTPPacketsRxTrunkNum"), (0, "AC-PM-Media-MIB", "acPMRTPPacketsRxInterval"))
if mibBuilder.loadTexts: acPMRTPPacketsRxEntry.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsRxEntry.setDescription('')
acPMRTPPacketsRxTrunkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 83)))
if mibBuilder.loadTexts: acPMRTPPacketsRxTrunkNum.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsRxTrunkNum.setDescription('Trunk number. 0 is the first trunk.')
acPMRTPPacketsRxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMRTPPacketsRxInterval.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsRxInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMRTPPacketsRxVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 6, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsRxVal.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsRxVal.setDescription('Value of gauge or counter.')
acPMRTPPacketsRxAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsRxAverage.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsRxAverage.setDescription('Average value with in the period time.')
acPMRTPPacketsRxMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsRxMax.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsRxMax.setDescription('Maximum value with in the period time.')
acPMRTPPacketsRxMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsRxMin.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsRxMin.setDescription('Minimum value with in the period time.')
acPMRTPPacketsRxVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsRxVolume.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsRxVolume.setDescription('Activity volume.')
acPMRTPPacketsRxTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsRxTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsRxTimeBelowLowThreshold.setDescription('Percent of interval time for which counter is below what was determined as the low threshold.')
acPMRTPPacketsRxTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsRxTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsRxTimeBetweenThresholds.setDescription('Percent of interval time for which counter is above what was determined as the high threshold.')
acPMRTPPacketsRxTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsRxTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsRxTimeAboveHighThreshold.setDescription('Percent of interval time for which counter is between what were determined as the low and high thresholds.')
acPMRTPPacketsRxFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 6, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsRxFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsRxFullDayAverage.setDescription('The average of full 24 hours.')
acPMRTPPacketsRxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 6, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketsRxTotal.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketsRxTotal.setDescription('Total since last reset.')
acPMRTPPacketLossRxTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 7), )
if mibBuilder.loadTexts: acPMRTPPacketLossRxTable.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossRxTable.setDescription('RTP packet loss reported in outgoing RTCP data, per trunk.')
acPMRTPPacketLossRxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 7, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMRTPPacketLossRxTrunkNum"), (0, "AC-PM-Media-MIB", "acPMRTPPacketLossRxInterval"))
if mibBuilder.loadTexts: acPMRTPPacketLossRxEntry.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossRxEntry.setDescription('')
acPMRTPPacketLossRxTrunkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 83)))
if mibBuilder.loadTexts: acPMRTPPacketLossRxTrunkNum.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossRxTrunkNum.setDescription('Trunk number. 0 is the first trunk.')
acPMRTPPacketLossRxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMRTPPacketLossRxInterval.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossRxInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMRTPPacketLossRxVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 7, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketLossRxVal.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossRxVal.setDescription('Value of gauge or counter.')
acPMRTPPacketLossRxAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketLossRxAverage.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossRxAverage.setDescription('Average value with in the period time.')
acPMRTPPacketLossRxMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketLossRxMax.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossRxMax.setDescription('Maximum value with in the period time.')
acPMRTPPacketLossRxMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketLossRxMin.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossRxMin.setDescription('Minimum value with in the period time.')
acPMRTPPacketLossRxVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketLossRxVolume.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossRxVolume.setDescription('Activity volume.')
acPMRTPPacketLossRxTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 7, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketLossRxTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossRxTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMRTPPacketLossRxTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 7, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketLossRxTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossRxTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMRTPPacketLossRxTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 7, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketLossRxTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossRxTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMRTPPacketLossRxFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 7, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketLossRxFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossRxFullDayAverage.setDescription('The average of full 24 hours.')
acPMRTPPacketLossTxTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 8), )
if mibBuilder.loadTexts: acPMRTPPacketLossTxTable.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossTxTable.setDescription('RTP packet loss reported in incoming RTCP data, per trunk.')
acPMRTPPacketLossTxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 8, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMRTPPacketLossTxTrunkNum"), (0, "AC-PM-Media-MIB", "acPMRTPPacketLossTxInterval"))
if mibBuilder.loadTexts: acPMRTPPacketLossTxEntry.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossTxEntry.setDescription('')
acPMRTPPacketLossTxTrunkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 83)))
if mibBuilder.loadTexts: acPMRTPPacketLossTxTrunkNum.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossTxTrunkNum.setDescription('Trunk number. 0 is the first trunk.')
acPMRTPPacketLossTxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 8, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMRTPPacketLossTxInterval.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossTxInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMRTPPacketLossTxVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 8, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketLossTxVal.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossTxVal.setDescription('Value of gauge or counter.')
acPMRTPPacketLossTxAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketLossTxAverage.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossTxAverage.setDescription('Average value with in the period time.')
acPMRTPPacketLossTxMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 8, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketLossTxMax.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossTxMax.setDescription('Maximum value with in the period time.')
acPMRTPPacketLossTxMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketLossTxMin.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossTxMin.setDescription('Minimum value with in the period time.')
acPMRTPPacketLossTxVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 8, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketLossTxVolume.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossTxVolume.setDescription('Activity volume.')
acPMRTPPacketLossTxTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketLossTxTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossTxTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMRTPPacketLossTxTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 8, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketLossTxTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossTxTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMRTPPacketLossTxTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 8, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketLossTxTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossTxTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMRTPPacketLossTxFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 8, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPPacketLossTxFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMRTPPacketLossTxFullDayAverage.setDescription('The average of full 24 hours.')
acPMModuleRTPPacketLossRxTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 9), )
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxTable.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxTable.setDescription('RTP packet loss reported in incoming RTCP data, per entire module.')
acPMModuleRTPPacketLossRxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 9, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMModuleRTPPacketLossRxInterval"))
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxEntry.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxEntry.setDescription('')
acPMModuleRTPPacketLossRxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxInterval.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMModuleRTPPacketLossRxAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxAverage.setDescription('Average value with in the period time.')
acPMModuleRTPPacketLossRxMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxMax.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxMax.setDescription('Maximum value with in the period time.')
acPMModuleRTPPacketLossRxMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxMin.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxMin.setDescription('Minimum value with in the period time.')
acPMModuleRTPPacketLossRxVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 9, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxVolume.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxVolume.setDescription('Activity volume.')
acPMModuleRTPPacketLossRxTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMModuleRTPPacketLossRxTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMModuleRTPPacketLossRxTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 9, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMModuleRTPPacketLossRxFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 9, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxFullDayAverage.setDescription('The average of full 24 hours.')
acPMModuleRTPPacketLossRxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 9, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxTotal.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossRxTotal.setDescription('Total since last reset.')
acPMModuleRTPPacketLossTxTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 10), )
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxTable.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxTable.setDescription('RTP packet loss reported in outging RTCP data, per entire module.')
acPMModuleRTPPacketLossTxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 10, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMModuleRTPPacketLossTxInterval"))
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxEntry.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxEntry.setDescription('')
acPMModuleRTPPacketLossTxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxInterval.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMModuleRTPPacketLossTxAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxAverage.setDescription('Average value with in the period time.')
acPMModuleRTPPacketLossTxMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxMax.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxMax.setDescription('Maximum value with in the period time.')
acPMModuleRTPPacketLossTxMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxMin.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxMin.setDescription('Minimum value with in the period time.')
acPMModuleRTPPacketLossTxVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxVolume.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxVolume.setDescription('Activity volume.')
acPMModuleRTPPacketLossTxTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 10, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMModuleRTPPacketLossTxTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 10, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMModuleRTPPacketLossTxTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 10, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMModuleRTPPacketLossTxFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 10, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxFullDayAverage.setDescription('The average of full 24 hours.')
acPMModuleRTPPacketLossTxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 10, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxTotal.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketLossTxTotal.setDescription('Total since last reset.')
acPMMediaNetworkingAggregated = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21))
acPMModulePacketDelayTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 1), )
if mibBuilder.loadTexts: acPMModulePacketDelayTable.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketDelayTable.setDescription('Packet delay in RTCP data. This counter is collected for the entire TPM module, and includes TDM-IP and IP-IP calls.')
acPMModulePacketDelayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 1, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMModulePacketDelayInterval"))
if mibBuilder.loadTexts: acPMModulePacketDelayEntry.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketDelayEntry.setDescription('')
acPMModulePacketDelayInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMModulePacketDelayInterval.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketDelayInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMModulePacketDelayVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModulePacketDelayVal.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketDelayVal.setDescription('Value of gauge or counter.')
acPMModulePacketDelayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModulePacketDelayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketDelayAverage.setDescription('Average value with in the period time.')
acPMModulePacketDelayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModulePacketDelayMax.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketDelayMax.setDescription('Maximum value with in the period time.')
acPMModulePacketDelayMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModulePacketDelayMin.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketDelayMin.setDescription('Minimum value with in the period time.')
acPMModulePacketDelayTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModulePacketDelayTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketDelayTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMModulePacketDelayTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModulePacketDelayTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketDelayTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMModulePacketDelayTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModulePacketDelayTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketDelayTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMModulePacketDelayFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModulePacketDelayFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketDelayFullDayAverage.setDescription('The average of full 24 hours.')
acPMModulePacketDelayVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModulePacketDelayVolume.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketDelayVolume.setDescription('Activity volume.')
acPMModulePacketJitterTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 2), )
if mibBuilder.loadTexts: acPMModulePacketJitterTable.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketJitterTable.setDescription('Packet jitter in RTCP data. This counter is collected for the entire TPM module, and includes TDM-IP and IP-IP calls.')
acPMModulePacketJitterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 2, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMModulePacketJitterInterval"))
if mibBuilder.loadTexts: acPMModulePacketJitterEntry.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketJitterEntry.setDescription('')
acPMModulePacketJitterInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMModulePacketJitterInterval.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketJitterInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMModulePacketJitterVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModulePacketJitterVal.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketJitterVal.setDescription('Value of gauge or counter.')
acPMModulePacketJitterAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModulePacketJitterAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketJitterAverage.setDescription('Average value with in the period time.')
acPMModulePacketJitterMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModulePacketJitterMax.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketJitterMax.setDescription('Maximum value with in the period time.')
acPMModulePacketJitterMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModulePacketJitterMin.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketJitterMin.setDescription('Minimum value with in the period time.')
acPMModulePacketJitterTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModulePacketJitterTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketJitterTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMModulePacketJitterTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModulePacketJitterTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketJitterTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMModulePacketJitterTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModulePacketJitterTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketJitterTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMModulePacketJitterFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModulePacketJitterFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketJitterFullDayAverage.setDescription('The average of full 24 hours.')
acPMModulePacketJitterVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModulePacketJitterVolume.setStatus('current')
if mibBuilder.loadTexts: acPMModulePacketJitterVolume.setDescription('Activity volume.')
acPMModuleRTPBytesTxTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 3), )
if mibBuilder.loadTexts: acPMModuleRTPBytesTxTable.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesTxTable.setDescription('RTP bytes sent in RTCP data, per entire module.')
acPMModuleRTPBytesTxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 3, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMModuleRTPBytesTxInterval"))
if mibBuilder.loadTexts: acPMModuleRTPBytesTxEntry.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesTxEntry.setDescription('')
acPMModuleRTPBytesTxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMModuleRTPBytesTxInterval.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesTxInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMModuleRTPBytesTxAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPBytesTxAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesTxAverage.setDescription('Average value with in the period time.')
acPMModuleRTPBytesTxMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPBytesTxMax.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesTxMax.setDescription('Maximum value with in the period time.')
acPMModuleRTPBytesTxMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPBytesTxMin.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesTxMin.setDescription('Minimum value with in the period time.')
acPMModuleRTPBytesTxTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPBytesTxTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesTxTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMModuleRTPBytesTxTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPBytesTxTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesTxTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMModuleRTPBytesTxTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPBytesTxTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesTxTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMModuleRTPBytesTxFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPBytesTxFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesTxFullDayAverage.setDescription('The average of full 24 hours.')
acPMModuleRTPBytesTxVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPBytesTxVolume.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesTxVolume.setDescription('Activity volume.')
acPMModuleRTPBytesRxTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 4), )
if mibBuilder.loadTexts: acPMModuleRTPBytesRxTable.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesRxTable.setDescription('RTP bytes received in RTCP data, per entire module.')
acPMModuleRTPBytesRxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 4, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMModuleRTPBytesRxInterval"))
if mibBuilder.loadTexts: acPMModuleRTPBytesRxEntry.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesRxEntry.setDescription('')
acPMModuleRTPBytesRxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMModuleRTPBytesRxInterval.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesRxInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMModuleRTPBytesRxAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPBytesRxAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesRxAverage.setDescription('Average value with in the period time.')
acPMModuleRTPBytesRxMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPBytesRxMax.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesRxMax.setDescription('Maximum value with in the period time.')
acPMModuleRTPBytesRxMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPBytesRxMin.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesRxMin.setDescription('Minimum value with in the period time.')
acPMModuleRTPBytesRxTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPBytesRxTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesRxTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMModuleRTPBytesRxTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPBytesRxTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesRxTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMModuleRTPBytesRxTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPBytesRxTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesRxTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMModuleRTPBytesRxFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPBytesRxFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesRxFullDayAverage.setDescription('The average of full 24 hours.')
acPMModuleRTPBytesRxVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPBytesRxVolume.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPBytesRxVolume.setDescription('Activity volume.')
acPMModuleRTPPacketsTxTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 5), )
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxTable.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxTable.setDescription('RTP packets sent in RTCP data, per entire module.')
acPMModuleRTPPacketsTxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 5, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMModuleRTPPacketsTxInterval"))
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxEntry.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxEntry.setDescription('')
acPMModuleRTPPacketsTxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxInterval.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMModuleRTPPacketsTxAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxAverage.setDescription('Average value with in the period time.')
acPMModuleRTPPacketsTxMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxMax.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxMax.setDescription('Maximum value with in the period time.')
acPMModuleRTPPacketsTxMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxMin.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxMin.setDescription('Minimum value with in the period time.')
acPMModuleRTPPacketsTxTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMModuleRTPPacketsTxTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMModuleRTPPacketsTxTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMModuleRTPPacketsTxFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxFullDayAverage.setDescription('The average of full 24 hours.')
acPMModuleRTPPacketsTxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxTotal.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxTotal.setDescription('Total since last reset.')
acPMModuleRTPPacketsTxVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxVolume.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsTxVolume.setDescription('Activity volume.')
acPMModuleRTPPacketsRxTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 6), )
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxTable.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxTable.setDescription('RTP packets received in RTCP data, per entire module.')
acPMModuleRTPPacketsRxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 6, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMModuleRTPPacketsRxInterval"))
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxEntry.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxEntry.setDescription('')
acPMModuleRTPPacketsRxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxInterval.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMModuleRTPPacketsRxAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxAverage.setDescription('Average value with in the period time.')
acPMModuleRTPPacketsRxMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxMax.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxMax.setDescription('Maximum value with in the period time.')
acPMModuleRTPPacketsRxMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxMin.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxMin.setDescription('Minimum value with in the period time.')
acPMModuleRTPPacketsRxTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMModuleRTPPacketsRxTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMModuleRTPPacketsRxTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMModuleRTPPacketsRxFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxFullDayAverage.setDescription('The average of full 24 hours.')
acPMModuleRTPPacketsRxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxTotal.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxTotal.setDescription('Total since last reset.')
acPMModuleRTPPacketsRxVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 31, 21, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxVolume.setStatus('current')
if mibBuilder.loadTexts: acPMModuleRTPPacketsRxVolume.setDescription('Activity volume.')
acPMChannelUtilization = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41))
acPMFaxChannelsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 1), )
if mibBuilder.loadTexts: acPMFaxChannelsTable.setStatus('current')
if mibBuilder.loadTexts: acPMFaxChannelsTable.setDescription('Total number of active fax channels.')
acPMFaxChannelsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 1, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMFaxChannelsInterval"))
if mibBuilder.loadTexts: acPMFaxChannelsEntry.setStatus('current')
if mibBuilder.loadTexts: acPMFaxChannelsEntry.setDescription('')
acPMFaxChannelsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMFaxChannelsInterval.setStatus('current')
if mibBuilder.loadTexts: acPMFaxChannelsInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMFaxChannelsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMFaxChannelsVal.setStatus('current')
if mibBuilder.loadTexts: acPMFaxChannelsVal.setDescription('Value of gauge or counter.')
acPMFaxChannelsAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMFaxChannelsAverage.setStatus('current')
if mibBuilder.loadTexts: acPMFaxChannelsAverage.setDescription('Average value with in the period time.')
acPMFaxChannelsMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMFaxChannelsMax.setStatus('current')
if mibBuilder.loadTexts: acPMFaxChannelsMax.setDescription('Maximum value with in the period time.')
acPMFaxChannelsMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMFaxChannelsMin.setStatus('current')
if mibBuilder.loadTexts: acPMFaxChannelsMin.setDescription('Minimum value with in the period time.')
acPMFaxChannelsTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMFaxChannelsTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMFaxChannelsTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMFaxChannelsTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMFaxChannelsTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMFaxChannelsTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMFaxChannelsTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMFaxChannelsTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMFaxChannelsTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMFaxChannelsFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMFaxChannelsFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMFaxChannelsFullDayAverage.setDescription('The average of full 24 hours.')
acPMFaxChannelsVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMFaxChannelsVolume.setStatus('current')
if mibBuilder.loadTexts: acPMFaxChannelsVolume.setDescription('Activity volume.')
acPMModemChannelsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 2), )
if mibBuilder.loadTexts: acPMModemChannelsTable.setStatus('current')
if mibBuilder.loadTexts: acPMModemChannelsTable.setDescription('Total number of active modem channels.')
acPMModemChannelsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 2, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMModemChannelsInterval"))
if mibBuilder.loadTexts: acPMModemChannelsEntry.setStatus('current')
if mibBuilder.loadTexts: acPMModemChannelsEntry.setDescription('')
acPMModemChannelsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMModemChannelsInterval.setStatus('current')
if mibBuilder.loadTexts: acPMModemChannelsInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMModemChannelsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModemChannelsVal.setStatus('current')
if mibBuilder.loadTexts: acPMModemChannelsVal.setDescription('Value of gauge or counter.')
acPMModemChannelsAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModemChannelsAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModemChannelsAverage.setDescription('Average value within the period time.')
acPMModemChannelsMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModemChannelsMax.setStatus('current')
if mibBuilder.loadTexts: acPMModemChannelsMax.setDescription('Maximum value within the period time.')
acPMModemChannelsMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModemChannelsMin.setStatus('current')
if mibBuilder.loadTexts: acPMModemChannelsMin.setDescription('Minimum value within the period time.')
acPMModemChannelsTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModemChannelsTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModemChannelsTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMModemChannelsTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModemChannelsTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMModemChannelsTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMModemChannelsTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModemChannelsTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModemChannelsTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMModemChannelsFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModemChannelsFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModemChannelsFullDayAverage.setDescription('The average of full 24 hours.')
acPMTdm2IpChannelsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 3), )
if mibBuilder.loadTexts: acPMTdm2IpChannelsTable.setStatus('current')
if mibBuilder.loadTexts: acPMTdm2IpChannelsTable.setDescription('Total number of active TDM-to-IP channels.')
acPMTdm2IpChannelsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 3, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMTdm2IpChannelsInterval"))
if mibBuilder.loadTexts: acPMTdm2IpChannelsEntry.setStatus('current')
if mibBuilder.loadTexts: acPMTdm2IpChannelsEntry.setDescription('')
acPMTdm2IpChannelsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMTdm2IpChannelsInterval.setStatus('current')
if mibBuilder.loadTexts: acPMTdm2IpChannelsInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMTdm2IpChannelsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMTdm2IpChannelsVal.setStatus('current')
if mibBuilder.loadTexts: acPMTdm2IpChannelsVal.setDescription('Value of gauge or counter.')
acPMTdm2IpChannelsAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMTdm2IpChannelsAverage.setStatus('current')
if mibBuilder.loadTexts: acPMTdm2IpChannelsAverage.setDescription('Average value within the period time.')
acPMTdm2IpChannelsMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMTdm2IpChannelsMax.setStatus('current')
if mibBuilder.loadTexts: acPMTdm2IpChannelsMax.setDescription('Maximum value within the period time.')
acPMTdm2IpChannelsMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMTdm2IpChannelsMin.setStatus('current')
if mibBuilder.loadTexts: acPMTdm2IpChannelsMin.setDescription('Minimum value within the period time.')
acPMTdm2IpChannelsVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMTdm2IpChannelsVolume.setStatus('current')
if mibBuilder.loadTexts: acPMTdm2IpChannelsVolume.setDescription('Activity volume.')
acPMTdm2IpChannelsTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMTdm2IpChannelsTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMTdm2IpChannelsTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMTdm2IpChannelsTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMTdm2IpChannelsTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMTdm2IpChannelsTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMTdm2IpChannelsTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMTdm2IpChannelsTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMTdm2IpChannelsTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMTdm2IpChannelsFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMTdm2IpChannelsFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMTdm2IpChannelsFullDayAverage.setDescription('The average of full 24 hours.')
acPMRTPStreamsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 4), )
if mibBuilder.loadTexts: acPMRTPStreamsTable.setStatus('current')
if mibBuilder.loadTexts: acPMRTPStreamsTable.setDescription('Total number of active RTP streams.')
acPMRTPStreamsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 4, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMRTPStreamsInterval"))
if mibBuilder.loadTexts: acPMRTPStreamsEntry.setStatus('current')
if mibBuilder.loadTexts: acPMRTPStreamsEntry.setDescription('')
acPMRTPStreamsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMRTPStreamsInterval.setStatus('current')
if mibBuilder.loadTexts: acPMRTPStreamsInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMRTPStreamsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 4, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPStreamsVal.setStatus('current')
if mibBuilder.loadTexts: acPMRTPStreamsVal.setDescription('Value of gauge or counter.')
acPMRTPStreamsAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPStreamsAverage.setStatus('current')
if mibBuilder.loadTexts: acPMRTPStreamsAverage.setDescription('Average value within the period time.')
acPMRTPStreamsMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPStreamsMax.setStatus('current')
if mibBuilder.loadTexts: acPMRTPStreamsMax.setDescription('Maximum value within the period time.')
acPMRTPStreamsMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPStreamsMin.setStatus('current')
if mibBuilder.loadTexts: acPMRTPStreamsMin.setDescription('Minimum value within the period time.')
acPMRTPStreamsVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPStreamsVolume.setStatus('current')
if mibBuilder.loadTexts: acPMRTPStreamsVolume.setDescription('Activity volume.')
acPMRTPStreamsTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPStreamsTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMRTPStreamsTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMRTPStreamsTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPStreamsTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMRTPStreamsTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMRTPStreamsTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPStreamsTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMRTPStreamsTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMRTPStreamsFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMRTPStreamsFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMRTPStreamsFullDayAverage.setDescription('The average of full 24 hours.')
acPMSRTPStreamsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 5), )
if mibBuilder.loadTexts: acPMSRTPStreamsTable.setStatus('current')
if mibBuilder.loadTexts: acPMSRTPStreamsTable.setDescription('Total number of active SRTP streams.')
acPMSRTPStreamsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 5, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMSRTPStreamsInterval"))
if mibBuilder.loadTexts: acPMSRTPStreamsEntry.setStatus('current')
if mibBuilder.loadTexts: acPMSRTPStreamsEntry.setDescription('')
acPMSRTPStreamsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSRTPStreamsInterval.setStatus('current')
if mibBuilder.loadTexts: acPMSRTPStreamsInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMSRTPStreamsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 5, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSRTPStreamsVal.setStatus('current')
if mibBuilder.loadTexts: acPMSRTPStreamsVal.setDescription('Value of gauge or counter.')
acPMSRTPStreamsAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSRTPStreamsAverage.setStatus('current')
if mibBuilder.loadTexts: acPMSRTPStreamsAverage.setDescription('Average value within the period time.')
acPMSRTPStreamsMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSRTPStreamsMax.setStatus('current')
if mibBuilder.loadTexts: acPMSRTPStreamsMax.setDescription('Maximum value within the period time.')
acPMSRTPStreamsMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSRTPStreamsMin.setStatus('current')
if mibBuilder.loadTexts: acPMSRTPStreamsMin.setDescription('Minimum value within the period time.')
acPMSRTPStreamsVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSRTPStreamsVolume.setStatus('current')
if mibBuilder.loadTexts: acPMSRTPStreamsVolume.setDescription('Activity volume.')
acPMSRTPStreamsTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSRTPStreamsTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMSRTPStreamsTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMSRTPStreamsTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSRTPStreamsTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMSRTPStreamsTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMSRTPStreamsTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSRTPStreamsTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMSRTPStreamsTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMSRTPStreamsFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSRTPStreamsFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMSRTPStreamsFullDayAverage.setDescription('The average of full 24 hours.')
acPMMulticastRegisteredChannelsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 6), )
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsTable.setStatus('current')
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsTable.setDescription('Total number of active channels connected to a multicast source.')
acPMMulticastRegisteredChannelsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 6, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMMulticastRegisteredChannelsInterval"))
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsEntry.setStatus('current')
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsEntry.setDescription('')
acPMMulticastRegisteredChannelsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsInterval.setStatus('current')
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMMulticastRegisteredChannelsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 6, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsVal.setStatus('current')
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsVal.setDescription('Value of gauge or counter.')
acPMMulticastRegisteredChannelsAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsAverage.setStatus('current')
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsAverage.setDescription('Average value within the period time.')
acPMMulticastRegisteredChannelsMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsMax.setStatus('current')
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsMax.setDescription('Maximum value within the period time.')
acPMMulticastRegisteredChannelsMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsMin.setStatus('current')
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsMin.setDescription('Minimum value within the period time.')
acPMMulticastRegisteredChannelsVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsVolume.setStatus('current')
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsVolume.setDescription('Activity volume.')
acPMMulticastRegisteredChannelsTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMMulticastRegisteredChannelsTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMMulticastRegisteredChannelsTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMMulticastRegisteredChannelsFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMMulticastRegisteredChannelsFullDayAverage.setDescription('The average of full 24 hours.')
acPMModemRelayActiveChannelsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 7), )
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsTable.setStatus('current')
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsTable.setDescription('Number of active modem relay (V150.1) channels.')
acPMModemRelayActiveChannelsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 7, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMModemRelayActiveChannelsInterval"))
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsEntry.setStatus('current')
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsEntry.setDescription('')
acPMModemRelayActiveChannelsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsInterval.setStatus('current')
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMModemRelayActiveChannelsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 7, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsVal.setStatus('current')
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsVal.setDescription('Value of gauge or counter.')
acPMModemRelayActiveChannelsAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsAverage.setDescription('Average value within the period time.')
acPMModemRelayActiveChannelsMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsMax.setStatus('current')
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsMax.setDescription('Maximum value within the period time.')
acPMModemRelayActiveChannelsMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsMin.setStatus('current')
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsMin.setDescription('Minimum value within the period time.')
acPMModemRelayActiveChannelsVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsVolume.setStatus('current')
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsVolume.setDescription('Activity volume.')
acPMModemRelayActiveChannelsTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMModemRelayActiveChannelsTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 7, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMModemRelayActiveChannelsTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 7, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMModemRelayActiveChannelsFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 41, 7, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMModemRelayActiveChannelsFullDayAverage.setDescription('The average of full 24 hours.')
acPMStreamingCache = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42))
acPMStreamingCacheHitRateTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 1), )
if mibBuilder.loadTexts: acPMStreamingCacheHitRateTable.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheHitRateTable.setDescription('Hit count rate of streaming cache')
acPMStreamingCacheHitRateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 1, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMStreamingCacheHitRateInterval"))
if mibBuilder.loadTexts: acPMStreamingCacheHitRateEntry.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheHitRateEntry.setDescription('')
acPMStreamingCacheHitRateInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMStreamingCacheHitRateInterval.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheHitRateInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMStreamingCacheHitRateAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheHitRateAverage.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheHitRateAverage.setDescription('Average value within the period time.')
acPMStreamingCacheHitRateMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheHitRateMax.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheHitRateMax.setDescription('Maximum value within the period time.')
acPMStreamingCacheHitRateMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheHitRateMin.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheHitRateMin.setDescription('Minimum value within the period time.')
acPMStreamingCacheHitRateVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheHitRateVolume.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheHitRateVolume.setDescription('Activity volume.')
acPMStreamingCacheHitRateTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheHitRateTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheHitRateTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMStreamingCacheHitRateTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheHitRateTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheHitRateTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMStreamingCacheHitRateTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheHitRateTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheHitRateTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMStreamingCacheHitRateFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheHitRateFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheHitRateFullDayAverage.setDescription('The average of full 24 hours.')
acPMStreamingCacheMissRateTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 2), )
if mibBuilder.loadTexts: acPMStreamingCacheMissRateTable.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheMissRateTable.setDescription('Miss count rate of streaming cache')
acPMStreamingCacheMissRateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 2, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMStreamingCacheMissRateInterval"))
if mibBuilder.loadTexts: acPMStreamingCacheMissRateEntry.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheMissRateEntry.setDescription('')
acPMStreamingCacheMissRateInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMStreamingCacheMissRateInterval.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheMissRateInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMStreamingCacheMissRateAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheMissRateAverage.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheMissRateAverage.setDescription('Average value within the period time.')
acPMStreamingCacheMissRateMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheMissRateMax.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheMissRateMax.setDescription('Maximum value within the period time.')
acPMStreamingCacheMissRateMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheMissRateMin.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheMissRateMin.setDescription('Minimum value within the period time.')
acPMStreamingCacheMissRateVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheMissRateVolume.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheMissRateVolume.setDescription('Activity volume.')
acPMStreamingCacheMissRateTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheMissRateTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheMissRateTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMStreamingCacheMissRateTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheMissRateTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheMissRateTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMStreamingCacheMissRateTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheMissRateTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheMissRateTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMStreamingCacheMissRateFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheMissRateFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheMissRateFullDayAverage.setDescription('The average of full 24 hours.')
acPMStreamingCacheServerRequestsRateTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 3), )
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateTable.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateTable.setDescription('Server requests count rate of streaming cache')
acPMStreamingCacheServerRequestsRateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 3, 1), ).setIndexNames((0, "AC-PM-Media-MIB", "acPMStreamingCacheServerRequestsRateInterval"))
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateEntry.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateEntry.setDescription('')
acPMStreamingCacheServerRequestsRateInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateInterval.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateInterval.setDescription('Interval index. 0 - current period (incomplete monitoring - mid period). 1 - Last full period. 2 - One before last.')
acPMStreamingCacheServerRequestsRateAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateAverage.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateAverage.setDescription('Average value within the period time.')
acPMStreamingCacheServerRequestsRateMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateMax.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateMax.setDescription('Maximum value within the period time.')
acPMStreamingCacheServerRequestsRateMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateMin.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateMin.setDescription('Minimum value within the period time.')
acPMStreamingCacheServerRequestsRateVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateVolume.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateVolume.setDescription('Activity volume.')
acPMStreamingCacheServerRequestsRateTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateTimeBelowLowThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateTimeBelowLowThreshold.setDescription('Percent of interval time for which gauge is below what was determined as the low threshold.')
acPMStreamingCacheServerRequestsRateTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateTimeBetweenThresholds.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateTimeBetweenThresholds.setDescription('Percent of interval time for which gauge is above what was determined as the high threshold.')
acPMStreamingCacheServerRequestsRateTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateTimeAboveHighThreshold.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateTimeAboveHighThreshold.setDescription('Percent of interval time for which gauge is between what were determined as the low and high thresholds.')
acPMStreamingCacheServerRequestsRateFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 7, 2, 42, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateFullDayAverage.setStatus('current')
if mibBuilder.loadTexts: acPMStreamingCacheServerRequestsRateFullDayAverage.setDescription('The average of full 24 hours.')
mibBuilder.exportSymbols("AC-PM-Media-MIB", acPMModuleRTPPacketLossTxTimeBetweenThresholds=acPMModuleRTPPacketLossTxTimeBetweenThresholds, acPMModulePacketJitterVal=acPMModulePacketJitterVal, acPMModulePacketDelayTimeBetweenThresholds=acPMModulePacketDelayTimeBetweenThresholds, acPMRTPPacketLossTxTrunkNum=acPMRTPPacketLossTxTrunkNum, acPMNetworkingAttributesModuleRTPPacketLossRxLowThreshold=acPMNetworkingAttributesModuleRTPPacketLossRxLowThreshold, acPMPacketDelayTimeBelowLowThreshold=acPMPacketDelayTimeBelowLowThreshold, acPMModulePacketDelayTable=acPMModulePacketDelayTable, acPMRTPPacketLossRxVolume=acPMRTPPacketLossRxVolume, acPMMediaNetworkingAggregatedAttributesPacketJitterHighThreshold=acPMMediaNetworkingAggregatedAttributesPacketJitterHighThreshold, acPMModulePacketDelayMin=acPMModulePacketDelayMin, acPMModuleRTPBytesTxEntry=acPMModuleRTPBytesTxEntry, acPMRTPPacketLossRxTable=acPMRTPPacketLossRxTable, acPMModuleRTPPacketLossTxMin=acPMModuleRTPPacketLossTxMin, acPMRTPStreamsEntry=acPMRTPStreamsEntry, acPMModemChannelsTimeBelowLowThreshold=acPMModemChannelsTimeBelowLowThreshold, acPMMediaChannelUtilizationAttrRTPStreamsHighThreshold=acPMMediaChannelUtilizationAttrRTPStreamsHighThreshold, acPMStreamingCacheHitRateTimeBetweenThresholds=acPMStreamingCacheHitRateTimeBetweenThresholds, acPMMediaChannelUtilizationAttrTDM2IPChannelsLowThreshold=acPMMediaChannelUtilizationAttrTDM2IPChannelsLowThreshold, acPMMulticastRegisteredChannelsTimeBetweenThresholds=acPMMulticastRegisteredChannelsTimeBetweenThresholds, acPMModuleRTPPacketsRxFullDayAverage=acPMModuleRTPPacketsRxFullDayAverage, acPMModuleRTPPacketsRxEntry=acPMModuleRTPPacketsRxEntry, acPMModuleRTPPacketsRxTimeBetweenThresholds=acPMModuleRTPPacketsRxTimeBetweenThresholds, acPMNetworkingAttributesRTPPacketsRxLowThreshold=acPMNetworkingAttributesRTPPacketsRxLowThreshold, acPMRTPBytesRxFullDayAverage=acPMRTPBytesRxFullDayAverage, acPMStreamingCacheHitRateAverage=acPMStreamingCacheHitRateAverage, acPMMediaChannelUtilizationAttrModemRelayLowThreshold=acPMMediaChannelUtilizationAttrModemRelayLowThreshold, acPMRTPPacketsTxTotal=acPMRTPPacketsTxTotal, acPMStreamingCacheHitRateEntry=acPMStreamingCacheHitRateEntry, acPMPacketJitterEntry=acPMPacketJitterEntry, acPMRTPBytesRxVolume=acPMRTPBytesRxVolume, acPMStreamingCacheMissRateMax=acPMStreamingCacheMissRateMax, acPMRTPPacketsRxTable=acPMRTPPacketsRxTable, acPMModulePacketJitterInterval=acPMModulePacketJitterInterval, acPMNetworkingAttributesRTPPacketLossRxHighThreshold=acPMNetworkingAttributesRTPPacketLossRxHighThreshold, acPMSRTPStreamsAverage=acPMSRTPStreamsAverage, acPMSRTPStreamsMin=acPMSRTPStreamsMin, acPMRTPStreamsInterval=acPMRTPStreamsInterval, acPMModuleRTPPacketLossRxInterval=acPMModuleRTPPacketLossRxInterval, acPMStreamingCacheServerRequestsRateMin=acPMStreamingCacheServerRequestsRateMin, acPMStreamingCacheMissRateVolume=acPMStreamingCacheMissRateVolume, acPMModulePacketDelayVal=acPMModulePacketDelayVal, acPMPacketJitterMin=acPMPacketJitterMin, acPMModulePacketDelayMax=acPMModulePacketDelayMax, acPMModuleRTPBytesTxAverage=acPMModuleRTPBytesTxAverage, acPMRTPPacketsRxVal=acPMRTPPacketsRxVal, acPMModuleRTPPacketsTxMin=acPMModuleRTPPacketsTxMin, acPMModuleRTPPacketLossRxFullDayAverage=acPMModuleRTPPacketLossRxFullDayAverage, acPMMulticastRegisteredChannelsTimeBelowLowThreshold=acPMMulticastRegisteredChannelsTimeBelowLowThreshold, acPMModulePacketJitterEntry=acPMModulePacketJitterEntry, acPMModuleRTPBytesRxTimeBetweenThresholds=acPMModuleRTPBytesRxTimeBetweenThresholds, acPMTdm2IpChannelsTable=acPMTdm2IpChannelsTable, acPMNetworkingAttributes=acPMNetworkingAttributes, acPMFaxChannelsFullDayAverage=acPMFaxChannelsFullDayAverage, acPMStreamingCacheServerRequestsRateFullDayAverage=acPMStreamingCacheServerRequestsRateFullDayAverage, acPMFaxChannelsTable=acPMFaxChannelsTable, acPMFaxChannelsVal=acPMFaxChannelsVal, acPMChannelsPerCoderMin=acPMChannelsPerCoderMin, acPMMedia=acPMMedia, acPMNetworkingAttributesModuleRTPPacketLossRxHighThreshold=acPMNetworkingAttributesModuleRTPPacketLossRxHighThreshold, acPMRTPBytesRxInterval=acPMRTPBytesRxInterval, acPMModuleRTPPacketLossRxVolume=acPMModuleRTPPacketLossRxVolume, acPMSRTPStreamsEntry=acPMSRTPStreamsEntry, acPMRTPPacketLossRxFullDayAverage=acPMRTPPacketLossRxFullDayAverage, acPMFaxChannelsInterval=acPMFaxChannelsInterval, acPMModulePacketDelayVolume=acPMModulePacketDelayVolume, acPMModemRelayActiveChannelsAverage=acPMModemRelayActiveChannelsAverage, acPMRTPBytesTxVal=acPMRTPBytesTxVal, acPMRTPBytesTxTimeAboveHighThreshold=acPMRTPBytesTxTimeAboveHighThreshold, acPMMulticastRegisteredChannelsVolume=acPMMulticastRegisteredChannelsVolume, acPMRTPPacketsTxTrunkNum=acPMRTPPacketsTxTrunkNum, acPMDSPUtilMin=acPMDSPUtilMin, acPMMulticastRegisteredChannelsMin=acPMMulticastRegisteredChannelsMin, acPMMediaChannelUtilizationAttrMulticastRegisChanLowThreshold=acPMMediaChannelUtilizationAttrMulticastRegisChanLowThreshold, acPMMediaNetworkingAggregatedAttributesPacketDelayHighThreshold=acPMMediaNetworkingAggregatedAttributesPacketDelayHighThreshold, acPMModuleRTPPacketLossTxTotal=acPMModuleRTPPacketLossTxTotal, acPMModulePacketDelayFullDayAverage=acPMModulePacketDelayFullDayAverage, acPMModuleRTPBytesRxTable=acPMModuleRTPBytesRxTable, acPMStreamingCacheServerRequestsRateInterval=acPMStreamingCacheServerRequestsRateInterval, acPMRTPStreamsVolume=acPMRTPStreamsVolume, acPMMediaNetworkingAggregatedAttributesRTPBytesRxLowThreshold=acPMMediaNetworkingAggregatedAttributesRTPBytesRxLowThreshold, acPMNetworkingAttributesPacketJitterHighThreshold=acPMNetworkingAttributesPacketJitterHighThreshold, acPMRTPStreamsFullDayAverage=acPMRTPStreamsFullDayAverage, acPMModulePacketJitterMax=acPMModulePacketJitterMax, acPMDSPAttributes=acPMDSPAttributes, acPMChannelsPerCoderCoders=acPMChannelsPerCoderCoders, acPMStreamingCacheServerRequestsRateMax=acPMStreamingCacheServerRequestsRateMax, acPMSRTPStreamsTimeBetweenThresholds=acPMSRTPStreamsTimeBetweenThresholds, acPMChannelsPerCoderFullDayAverage=acPMChannelsPerCoderFullDayAverage, acPMDSPAttributesDSPUtilHighThreshold=acPMDSPAttributesDSPUtilHighThreshold, acPMRobustDiscardVal=acPMRobustDiscardVal, acPMPacketDelayMin=acPMPacketDelayMin, acPMStreamingCacheHitRateVolume=acPMStreamingCacheHitRateVolume, acPMRTPStreamsVal=acPMRTPStreamsVal, acPMModulePacketJitterTable=acPMModulePacketJitterTable, acPMModulePacketJitterTimeBetweenThresholds=acPMModulePacketJitterTimeBetweenThresholds, acPMModuleRTPPacketLossTxFullDayAverage=acPMModuleRTPPacketLossTxFullDayAverage, acPMRTPBytesRxTimeAboveHighThreshold=acPMRTPBytesRxTimeAboveHighThreshold, acPMModuleRTPPacketsRxTable=acPMModuleRTPPacketsRxTable, acPMPacketDelayVolume=acPMPacketDelayVolume, acPMRTPBytesTxMin=acPMRTPBytesTxMin, acPMPacketDelayFullDayAverage=acPMPacketDelayFullDayAverage, acPMRTPPacketLossRxTrunkNum=acPMRTPPacketLossRxTrunkNum, acPMStreamingCacheServerRequestsRateTimeBetweenThresholds=acPMStreamingCacheServerRequestsRateTimeBetweenThresholds, acPMRobustDiscardTable=acPMRobustDiscardTable, acPMChannelsPerCoderVal=acPMChannelsPerCoderVal, acPMMediaNetworkingAggregatedAttributesPacketDelayLowThreshold=acPMMediaNetworkingAggregatedAttributesPacketDelayLowThreshold, acPMModuleRTPPacketLossRxEntry=acPMModuleRTPPacketLossRxEntry, acPMModuleRTPBytesTxFullDayAverage=acPMModuleRTPBytesTxFullDayAverage, acPMPacketJitterTimeAboveHighThreshold=acPMPacketJitterTimeAboveHighThreshold, acPMRTPPacketLossTxAverage=acPMRTPPacketLossTxAverage, acPMModuleRTPBytesRxInterval=acPMModuleRTPBytesRxInterval, acPMSRTPStreamsMax=acPMSRTPStreamsMax, acPMModemRelayActiveChannelsTimeBelowLowThreshold=acPMModemRelayActiveChannelsTimeBelowLowThreshold, acPMPacketJitterTable=acPMPacketJitterTable, acPMRTPPacketsTxAverage=acPMRTPPacketsTxAverage, acPMChannelsPerCoderInterval=acPMChannelsPerCoderInterval, acPMStreamingCacheMissRateTimeAboveHighThreshold=acPMStreamingCacheMissRateTimeAboveHighThreshold, acPMTdm2IpChannelsVal=acPMTdm2IpChannelsVal, acPMFaxChannelsMax=acPMFaxChannelsMax, acPMRTPBytesRxMax=acPMRTPBytesRxMax, acPMMediaData=acPMMediaData, acPMMediaDataAcPMMediaTimeFromStartOfInterval=acPMMediaDataAcPMMediaTimeFromStartOfInterval, acPMRTPBytesRxAverage=acPMRTPBytesRxAverage, acPMRTPPacketsTxFullDayAverage=acPMRTPPacketsTxFullDayAverage, acPMRTPPacketsRxMin=acPMRTPPacketsRxMin, acPMModulePacketJitterTimeBelowLowThreshold=acPMModulePacketJitterTimeBelowLowThreshold, acPMStreamingCacheServerRequestsRateTable=acPMStreamingCacheServerRequestsRateTable, acPMMulticastRegisteredChannelsTable=acPMMulticastRegisteredChannelsTable, acPMRTPPacketsRxTotal=acPMRTPPacketsRxTotal, acPMPacketDelayTimeBetweenThresholds=acPMPacketDelayTimeBetweenThresholds, acPMPacketJitterFullDayAverage=acPMPacketJitterFullDayAverage, acPMModuleRTPPacketsTxMax=acPMModuleRTPPacketsTxMax, acPMMediaChannelUtilizationAttrFaxChannelsHighThreshold=acPMMediaChannelUtilizationAttrFaxChannelsHighThreshold, acPMModemChannelsInterval=acPMModemChannelsInterval, acPMModuleRTPPacketLossRxTotal=acPMModuleRTPPacketLossRxTotal, acPMSRTPStreamsTimeAboveHighThreshold=acPMSRTPStreamsTimeAboveHighThreshold, acPMModuleRTPPacketLossTxTimeBelowLowThreshold=acPMModuleRTPPacketLossTxTimeBelowLowThreshold, acPMModulePacketDelayTimeAboveHighThreshold=acPMModulePacketDelayTimeAboveHighThreshold, acPMRTPPacketLossTxEntry=acPMRTPPacketLossTxEntry, acPMRTPPacketLossRxTimeBetweenThresholds=acPMRTPPacketLossRxTimeBetweenThresholds, acPMModuleRTPBytesRxEntry=acPMModuleRTPBytesRxEntry, acPMMediaChannelUtilizationAttrModemChannelsLowThreshold=acPMMediaChannelUtilizationAttrModemChannelsLowThreshold, acPMRTPPacketsTxTimeBetweenThresholds=acPMRTPPacketsTxTimeBetweenThresholds, acPMPacketJitterMax=acPMPacketJitterMax, acPMPacketJitterVolume=acPMPacketJitterVolume, acPMRTPPacketLossRxMin=acPMRTPPacketLossRxMin, acPMRTPBytesTxTrunkNum=acPMRTPBytesTxTrunkNum, acPMModuleRTPPacketsTxAverage=acPMModuleRTPPacketsTxAverage, acPMModuleRTPPacketLossTxTable=acPMModuleRTPPacketLossTxTable, acPMRTPStreamsTimeBelowLowThreshold=acPMRTPStreamsTimeBelowLowThreshold, acPMDSPUtilTimeBelowLowThreshold=acPMDSPUtilTimeBelowLowThreshold, acPMModemChannelsFullDayAverage=acPMModemChannelsFullDayAverage, acPMFaxChannelsMin=acPMFaxChannelsMin, acPMRTPPacketsRxFullDayAverage=acPMRTPPacketsRxFullDayAverage, acPMModemRelayActiveChannelsMin=acPMModemRelayActiveChannelsMin, acPMDSPUtilInterval=acPMDSPUtilInterval, acPMDSPUtilAverage=acPMDSPUtilAverage, acPMModuleRTPPacketsTxEntry=acPMModuleRTPPacketsTxEntry, acPMMulticastRegisteredChannelsInterval=acPMMulticastRegisteredChannelsInterval, acPMModuleRTPBytesTxTimeBetweenThresholds=acPMModuleRTPBytesTxTimeBetweenThresholds, acPMModemChannelsMin=acPMModemChannelsMin, acPMModuleRTPPacketsTxTimeAboveHighThreshold=acPMModuleRTPPacketsTxTimeAboveHighThreshold, acPMPacketJitterTrunkNum=acPMPacketJitterTrunkNum, acPMNetworkingAttributesPacketDelayLowThreshold=acPMNetworkingAttributesPacketDelayLowThreshold, acPMMulticastRegisteredChannelsTimeAboveHighThreshold=acPMMulticastRegisteredChannelsTimeAboveHighThreshold, acPMTdm2IpChannelsTimeBelowLowThreshold=acPMTdm2IpChannelsTimeBelowLowThreshold, acPMDSPUtilEntry=acPMDSPUtilEntry, acPMRTPPacketsRxMax=acPMRTPPacketsRxMax, acPMRTPBytesRxEntry=acPMRTPBytesRxEntry, acPMModuleRTPBytesTxTimeAboveHighThreshold=acPMModuleRTPBytesTxTimeAboveHighThreshold, acPMStreamingCacheHitRateMax=acPMStreamingCacheHitRateMax, acPMRTPPacketLossRxMax=acPMRTPPacketLossRxMax, PYSNMP_MODULE_ID=acPMMedia, acPMSRTPStreamsFullDayAverage=acPMSRTPStreamsFullDayAverage, acPMStreamingCacheHitRateMin=acPMStreamingCacheHitRateMin, acPMModuleRTPBytesRxFullDayAverage=acPMModuleRTPBytesRxFullDayAverage, acPMModuleRTPBytesRxTimeAboveHighThreshold=acPMModuleRTPBytesRxTimeAboveHighThreshold, acPMMediaNetworkingAggregatedAttributesRTPPacketsTxLowThreshold=acPMMediaNetworkingAggregatedAttributesRTPPacketsTxLowThreshold, acPMDSPUtilTimeBetweenThresholds=acPMDSPUtilTimeBetweenThresholds, acPMRTPPacketLossRxVal=acPMRTPPacketLossRxVal, acPMModemRelayActiveChannelsEntry=acPMModemRelayActiveChannelsEntry, acPMRTPBytesTxTimeBelowLowThreshold=acPMRTPBytesTxTimeBelowLowThreshold, acPMChannelsPerCoderMax=acPMChannelsPerCoderMax, acPMStreamingCacheMissRateFullDayAverage=acPMStreamingCacheMissRateFullDayAverage, acPMMediaChannelUtilizationAttrModemRelayHighThreshold=acPMMediaChannelUtilizationAttrModemRelayHighThreshold, acPMNetworkingAttributesRTPBytesTxLowThreshold=acPMNetworkingAttributesRTPBytesTxLowThreshold, acPMRTPBytesRxTrunkNum=acPMRTPBytesRxTrunkNum, acPMRTPPacketsTxInterval=acPMRTPPacketsTxInterval, acPMRTPPacketLossTxMin=acPMRTPPacketLossTxMin, acPMModemRelayActiveChannelsFullDayAverage=acPMModemRelayActiveChannelsFullDayAverage, acPMModemChannelsAverage=acPMModemChannelsAverage, acPMDSPUtilFullDayAverage=acPMDSPUtilFullDayAverage, acPMNetworkingAttributesRTPPacketsRxHighThreshold=acPMNetworkingAttributesRTPPacketsRxHighThreshold, acPMModemRelayActiveChannelsTable=acPMModemRelayActiveChannelsTable, acPMRTPStreamsTimeBetweenThresholds=acPMRTPStreamsTimeBetweenThresholds, acPMFaxChannelsVolume=acPMFaxChannelsVolume, acPMRTPBytesTxFullDayAverage=acPMRTPBytesTxFullDayAverage, acPMRobustDiscardEntry=acPMRobustDiscardEntry, acPMModuleRTPPacketsRxVolume=acPMModuleRTPPacketsRxVolume, acPMRobustDiscardInterval=acPMRobustDiscardInterval, acPMStreamingCacheMissRateAverage=acPMStreamingCacheMissRateAverage, acPMChannelsPerCoderAverage=acPMChannelsPerCoderAverage, acPMFaxChannelsTimeAboveHighThreshold=acPMFaxChannelsTimeAboveHighThreshold, acPMPacketJitterAverage=acPMPacketJitterAverage, acPMModuleRTPBytesRxMax=acPMModuleRTPBytesRxMax, acPMMediaChannelUtilizationAttrSRTPStreamsHighThreshold=acPMMediaChannelUtilizationAttrSRTPStreamsHighThreshold, acPMRTPPacketLossTxMax=acPMRTPPacketLossTxMax, acPMPacketDelayTable=acPMPacketDelayTable, acPMDSPUtilVal=acPMDSPUtilVal, acPMCodersAttributesChannelsPerCoderLowThreshold=acPMCodersAttributesChannelsPerCoderLowThreshold, acPMMulticastRegisteredChannelsMax=acPMMulticastRegisteredChannelsMax, acPMNetworkingAttributesModuleRTPPacketLossTxHighThreshold=acPMNetworkingAttributesModuleRTPPacketLossTxHighThreshold, acPMModemRelayActiveChannelsVolume=acPMModemRelayActiveChannelsVolume, acPMRTPBytesTxEntry=acPMRTPBytesTxEntry, acPMRTPPacketsTxEntry=acPMRTPPacketsTxEntry, acPMStreamingCacheServerRequestsRateTimeBelowLowThreshold=acPMStreamingCacheServerRequestsRateTimeBelowLowThreshold, acPMModuleRTPPacketLossRxTimeBelowLowThreshold=acPMModuleRTPPacketLossRxTimeBelowLowThreshold, acPMModemRelayActiveChannelsTimeAboveHighThreshold=acPMModemRelayActiveChannelsTimeAboveHighThreshold, acPMSRTPStreamsVal=acPMSRTPStreamsVal, acPMModulePacketJitterAverage=acPMModulePacketJitterAverage, acPMChannelsPerCoderTimeBelowLowThreshold=acPMChannelsPerCoderTimeBelowLowThreshold, acPMStreamingCacheMissRateInterval=acPMStreamingCacheMissRateInterval, acPMModuleRTPPacketLossTxMax=acPMModuleRTPPacketLossTxMax, acPMRTPPacketLossTxTable=acPMRTPPacketLossTxTable, acPMChannelUtilization=acPMChannelUtilization, acPMStreamingCacheMissRateEntry=acPMStreamingCacheMissRateEntry, acPMModuleRTPPacketsTxTimeBelowLowThreshold=acPMModuleRTPPacketsTxTimeBelowLowThreshold, acPMRTPPacketLossTxVolume=acPMRTPPacketLossTxVolume, acPMRTPBytesRxMin=acPMRTPBytesRxMin, acPMDSPUtilMax=acPMDSPUtilMax, acPMModuleRTPPacketLossRxAverage=acPMModuleRTPPacketLossRxAverage, acPMRTPStreamsTimeAboveHighThreshold=acPMRTPStreamsTimeAboveHighThreshold, acPMTdm2IpChannelsEntry=acPMTdm2IpChannelsEntry, acPMRTPBytesTxTable=acPMRTPBytesTxTable, acPMModuleRTPPacketLossRxTimeAboveHighThreshold=acPMModuleRTPPacketLossRxTimeAboveHighThreshold, acPMModuleRTPBytesRxMin=acPMModuleRTPBytesRxMin, acPMRTPBytesRxVal=acPMRTPBytesRxVal, acPMModuleRTPPacketsTxInterval=acPMModuleRTPPacketsTxInterval, acPMPacketDelayInterval=acPMPacketDelayInterval, acPMStreamingCacheMissRateTable=acPMStreamingCacheMissRateTable, acPMTdm2IpChannelsVolume=acPMTdm2IpChannelsVolume, acPMCodersAttributes=acPMCodersAttributes, acPMTdm2IpChannelsMin=acPMTdm2IpChannelsMin, acPMStreamingCacheHitRateTimeBelowLowThreshold=acPMStreamingCacheHitRateTimeBelowLowThreshold, acPMModuleRTPPacketsRxMax=acPMModuleRTPPacketsRxMax, acPMRTPPacketsTxVolume=acPMRTPPacketsTxVolume, acPMDSPUtilVolume=acPMDSPUtilVolume, acPMRTPStreamsTable=acPMRTPStreamsTable, acPMNetworkingAttributesRTPBytesRxHighThreshold=acPMNetworkingAttributesRTPBytesRxHighThreshold, acPMModuleRTPPacketLossRxTable=acPMModuleRTPPacketLossRxTable, acPMModuleRTPPacketLossTxEntry=acPMModuleRTPPacketLossTxEntry, acPMModulePacketDelayTimeBelowLowThreshold=acPMModulePacketDelayTimeBelowLowThreshold, acPMMediaChannelUtilizationAttr=acPMMediaChannelUtilizationAttr, acPMRTPPacketLossTxTimeAboveHighThreshold=acPMRTPPacketLossTxTimeAboveHighThreshold)
mibBuilder.exportSymbols("AC-PM-Media-MIB", acPMModuleRTPBytesTxTimeBelowLowThreshold=acPMModuleRTPBytesTxTimeBelowLowThreshold, acPMModemChannelsTimeAboveHighThreshold=acPMModemChannelsTimeAboveHighThreshold, acPMRTPStreamsMin=acPMRTPStreamsMin, acPMModuleRTPPacketLossRxMin=acPMModuleRTPPacketLossRxMin, acPMPacketDelayTrunkNum=acPMPacketDelayTrunkNum, acPMRTPBytesTxTimeBetweenThresholds=acPMRTPBytesTxTimeBetweenThresholds, acPMRTPPacketsTxVal=acPMRTPPacketsTxVal, acPMRTPPacketLossRxInterval=acPMRTPPacketLossRxInterval, acPMMediaChannelUtilizationAttrFaxChannelsLowThreshold=acPMMediaChannelUtilizationAttrFaxChannelsLowThreshold, acPMChannelsPerCoderVolume=acPMChannelsPerCoderVolume, acPMStreamingCacheHitRateInterval=acPMStreamingCacheHitRateInterval, acPMModulePacketJitterFullDayAverage=acPMModulePacketJitterFullDayAverage, acPMNetworkingAttributesRTPPacketLossTxLowThreshold=acPMNetworkingAttributesRTPPacketLossTxLowThreshold, acPMModuleRTPPacketsTxFullDayAverage=acPMModuleRTPPacketsTxFullDayAverage, acPMNetworkingAttributesRTPBytesRxLowThreshold=acPMNetworkingAttributesRTPBytesRxLowThreshold, acPMModuleRTPBytesRxVolume=acPMModuleRTPBytesRxVolume, acPMModuleRTPPacketsTxTimeBetweenThresholds=acPMModuleRTPPacketsTxTimeBetweenThresholds, acPMModemChannelsVal=acPMModemChannelsVal, acPMPacketDelayEntry=acPMPacketDelayEntry, acPMModulePacketDelayAverage=acPMModulePacketDelayAverage, acPMModuleRTPPacketsTxTotal=acPMModuleRTPPacketsTxTotal, acPMStreamingCacheMissRateTimeBetweenThresholds=acPMStreamingCacheMissRateTimeBetweenThresholds, acPMModemRelayActiveChannelsVal=acPMModemRelayActiveChannelsVal, acPMNetworkingAttributesModuleRTPPacketLossTxLowThreshold=acPMNetworkingAttributesModuleRTPPacketLossTxLowThreshold, acPMMediaConfigurationPeriodLength=acPMMediaConfigurationPeriodLength, acPMChannelsPerCoderTimeBetweenThresholds=acPMChannelsPerCoderTimeBetweenThresholds, acPMRTPPacketLossRxAverage=acPMRTPPacketLossRxAverage, acPMMediaConfiguration=acPMMediaConfiguration, acPMStreamingCacheServerRequestsRateEntry=acPMStreamingCacheServerRequestsRateEntry, acPMMediaChannelUtilizationAttrRTPStreamsLowThreshold=acPMMediaChannelUtilizationAttrRTPStreamsLowThreshold, acPMTdm2IpChannelsTimeBetweenThresholds=acPMTdm2IpChannelsTimeBetweenThresholds, acPMMediaNetworkingAggregatedAttributesRTPPacketsTxHighThreshold=acPMMediaNetworkingAggregatedAttributesRTPPacketsTxHighThreshold, acPMModuleRTPBytesTxVolume=acPMModuleRTPBytesTxVolume, acPMModemRelayActiveChannelsTimeBetweenThresholds=acPMModemRelayActiveChannelsTimeBetweenThresholds, acPMStreamingCacheServerRequestsRateVolume=acPMStreamingCacheServerRequestsRateVolume, acPMModuleRTPPacketLossTxTimeAboveHighThreshold=acPMModuleRTPPacketLossTxTimeAboveHighThreshold, acPMTdm2IpChannelsInterval=acPMTdm2IpChannelsInterval, acPMRTPPacketsRxTimeBelowLowThreshold=acPMRTPPacketsRxTimeBelowLowThreshold, acPMModuleRTPPacketsRxMin=acPMModuleRTPPacketsRxMin, acPMModuleRTPPacketsRxTimeBelowLowThreshold=acPMModuleRTPPacketsRxTimeBelowLowThreshold, acPMMediaNetworking=acPMMediaNetworking, acPMModemChannelsMax=acPMModemChannelsMax, acPMRTPBytesTxVolume=acPMRTPBytesTxVolume, acPMModuleRTPPacketsRxTotal=acPMModuleRTPPacketsRxTotal, acPMMulticastRegisteredChannelsFullDayAverage=acPMMulticastRegisteredChannelsFullDayAverage, acPMRTPPacketsTxTable=acPMRTPPacketsTxTable, acPMNetworkingAttributesPacketJitterLowThreshold=acPMNetworkingAttributesPacketJitterLowThreshold, acPMModuleRTPPacketsRxInterval=acPMModuleRTPPacketsRxInterval, acPMMediaChannelUtilizationAttrMulticastRegisChanHighThreshold=acPMMediaChannelUtilizationAttrMulticastRegisChanHighThreshold, acPMRTPPacketsRxAverage=acPMRTPPacketsRxAverage, acPMFaxChannelsEntry=acPMFaxChannelsEntry, acPMFaxChannelsAverage=acPMFaxChannelsAverage, acPMRTPStreamsMax=acPMRTPStreamsMax, acPMModulePacketDelayInterval=acPMModulePacketDelayInterval, acPMTdm2IpChannelsMax=acPMTdm2IpChannelsMax, acPMStreamingCacheHitRateFullDayAverage=acPMStreamingCacheHitRateFullDayAverage, acPMTdm2IpChannelsFullDayAverage=acPMTdm2IpChannelsFullDayAverage, acPMChannelsPerCoderEntry=acPMChannelsPerCoderEntry, acPMSRTPStreamsVolume=acPMSRTPStreamsVolume, acPMRTPBytesRxTimeBelowLowThreshold=acPMRTPBytesRxTimeBelowLowThreshold, acPMRTPPacketsRxInterval=acPMRTPPacketsRxInterval, acPMModemChannelsTable=acPMModemChannelsTable, acPMStreamingCacheHitRateTimeAboveHighThreshold=acPMStreamingCacheHitRateTimeAboveHighThreshold, acPMModuleRTPPacketsTxTable=acPMModuleRTPPacketsTxTable, acPMRTPPacketsRxTimeAboveHighThreshold=acPMRTPPacketsRxTimeAboveHighThreshold, acPMRTPPacketLossTxTimeBelowLowThreshold=acPMRTPPacketLossTxTimeBelowLowThreshold, acPMPacketDelayAverage=acPMPacketDelayAverage, acPMMediaNetworkingAggregatedAttributesRTPPacketsRxLowThreshold=acPMMediaNetworkingAggregatedAttributesRTPPacketsRxLowThreshold, acPMModuleRTPPacketsRxTimeAboveHighThreshold=acPMModuleRTPPacketsRxTimeAboveHighThreshold, acPMRTPBytesTxInterval=acPMRTPBytesTxInterval, acPMModemChannelsTimeBetweenThresholds=acPMModemChannelsTimeBetweenThresholds, acPMNetworkingAttributesRTPPacketLossTxHighThreshold=acPMNetworkingAttributesRTPPacketLossTxHighThreshold, acPMChannelsPerCoderTable=acPMChannelsPerCoderTable, acPMModuleRTPBytesRxTimeBelowLowThreshold=acPMModuleRTPBytesRxTimeBelowLowThreshold, acPMRTPBytesTxMax=acPMRTPBytesTxMax, acPMRTPPacketsTxTimeBelowLowThreshold=acPMRTPPacketsTxTimeBelowLowThreshold, acPMMediaChannelUtilizationAttrModemChannelsHighThreshold=acPMMediaChannelUtilizationAttrModemChannelsHighThreshold, acPMTdm2IpChannelsAverage=acPMTdm2IpChannelsAverage, acPMStreamingCacheMissRateMin=acPMStreamingCacheMissRateMin, acPMNetworkingAttributesRTPPacketsTxHighThreshold=acPMNetworkingAttributesRTPPacketsTxHighThreshold, acPMMulticastRegisteredChannelsEntry=acPMMulticastRegisteredChannelsEntry, acPMModemChannelsEntry=acPMModemChannelsEntry, acPMSRTPStreamsTable=acPMSRTPStreamsTable, acPMModuleRTPPacketsRxAverage=acPMModuleRTPPacketsRxAverage, acPMMediaNetworkingAggregatedAttributesRTPBytesTxLowThreshold=acPMMediaNetworkingAggregatedAttributesRTPBytesTxLowThreshold, acPMRTPPacketLossTxFullDayAverage=acPMRTPPacketLossTxFullDayAverage, acPMModemRelayActiveChannelsInterval=acPMModemRelayActiveChannelsInterval, acPMMediaChannelUtilizationAttrSRTPStreamsLowThreshold=acPMMediaChannelUtilizationAttrSRTPStreamsLowThreshold, acPMModuleRTPPacketLossRxMax=acPMModuleRTPPacketLossRxMax, acPMRTPPacketsRxTrunkNum=acPMRTPPacketsRxTrunkNum, acPMDSPUtilTable=acPMDSPUtilTable, acPMNetworkingAttributesPacketDelayHighThreshold=acPMNetworkingAttributesPacketDelayHighThreshold, acPMMulticastRegisteredChannelsVal=acPMMulticastRegisteredChannelsVal, acPMRTPPacketsRxEntry=acPMRTPPacketsRxEntry, acPMModulePacketJitterMin=acPMModulePacketJitterMin, acPMMediaNetworkingAggregatedAttributesPacketJitterLowThreshold=acPMMediaNetworkingAggregatedAttributesPacketJitterLowThreshold, acPMTdm2IpChannelsTimeAboveHighThreshold=acPMTdm2IpChannelsTimeAboveHighThreshold, acPMDSPAttributesDSPUtilLowThreshold=acPMDSPAttributesDSPUtilLowThreshold, acPMModulePacketDelayEntry=acPMModulePacketDelayEntry, acPMPacketDelayTimeAboveHighThreshold=acPMPacketDelayTimeAboveHighThreshold, acPMModuleRTPBytesTxMax=acPMModuleRTPBytesTxMax, acPMSRTPStreamsTimeBelowLowThreshold=acPMSRTPStreamsTimeBelowLowThreshold, acPMModuleRTPPacketLossRxTimeBetweenThresholds=acPMModuleRTPPacketLossRxTimeBetweenThresholds, acPMModuleRTPBytesRxAverage=acPMModuleRTPBytesRxAverage, acPMFaxChannelsTimeBelowLowThreshold=acPMFaxChannelsTimeBelowLowThreshold, acPMChannelsPerCoderTimeAboveHighThreshold=acPMChannelsPerCoderTimeAboveHighThreshold, acPMModulePacketJitterTimeAboveHighThreshold=acPMModulePacketJitterTimeAboveHighThreshold, acPMPacketJitterInterval=acPMPacketJitterInterval, acPMRTPPacketsTxMax=acPMRTPPacketsTxMax, acPMMediaNetworkingAggregated=acPMMediaNetworkingAggregated, acPMPacketJitterTimeBelowLowThreshold=acPMPacketJitterTimeBelowLowThreshold, acPMRTPPacketLossTxInterval=acPMRTPPacketLossTxInterval, acPMRTPPacketsTxTimeAboveHighThreshold=acPMRTPPacketsTxTimeAboveHighThreshold, acPMRTPPacketLossTxTimeBetweenThresholds=acPMRTPPacketLossTxTimeBetweenThresholds, acPMPacketJitterVal=acPMPacketJitterVal, acPMMediaNetworkingAggregatedAttributesRTPPacketsRxHighThreshold=acPMMediaNetworkingAggregatedAttributesRTPPacketsRxHighThreshold, acPMStreamingCacheHitRateTable=acPMStreamingCacheHitRateTable, acPMModuleRTPPacketsTxVolume=acPMModuleRTPPacketsTxVolume, acPMNetworkingAttributesRTPPacketsTxLowThreshold=acPMNetworkingAttributesRTPPacketsTxLowThreshold, acPMRTPPacketsRxTimeBetweenThresholds=acPMRTPPacketsRxTimeBetweenThresholds, acPMRTPPacketLossRxTimeBelowLowThreshold=acPMRTPPacketLossRxTimeBelowLowThreshold, acPMRTPPacketsTxMin=acPMRTPPacketsTxMin, acPMStreamingCacheServerRequestsRateAverage=acPMStreamingCacheServerRequestsRateAverage, acPMModuleRTPBytesTxMin=acPMModuleRTPBytesTxMin, acPMRTPBytesRxTable=acPMRTPBytesRxTable, acPMRTPPacketsRxVolume=acPMRTPPacketsRxVolume, acPMNetworkingAttributesRTPBytesTxHighThreshold=acPMNetworkingAttributesRTPBytesTxHighThreshold, acPMStreamingCache=acPMStreamingCache, acPMPacketDelayMax=acPMPacketDelayMax, acPMMediaNetworkingAggregatedAttributesRTPBytesRxHighThreshold=acPMMediaNetworkingAggregatedAttributesRTPBytesRxHighThreshold, acPMPacketDelayVal=acPMPacketDelayVal, acPMRTPBytesRxTimeBetweenThresholds=acPMRTPBytesRxTimeBetweenThresholds, acPMMediaChannelUtilizationAttrTDM2IPChannelsHighThreshold=acPMMediaChannelUtilizationAttrTDM2IPChannelsHighThreshold, acPMRTPPacketLossRxEntry=acPMRTPPacketLossRxEntry, acPMRTPStreamsAverage=acPMRTPStreamsAverage, acPMModemRelayActiveChannelsMax=acPMModemRelayActiveChannelsMax, acPMFaxChannelsTimeBetweenThresholds=acPMFaxChannelsTimeBetweenThresholds, acPMModuleRTPPacketLossTxInterval=acPMModuleRTPPacketLossTxInterval, acPMMediaConfigurationResetTotalCounters=acPMMediaConfigurationResetTotalCounters, acPMModuleRTPPacketLossTxAverage=acPMModuleRTPPacketLossTxAverage, acPMPacketJitterTimeBetweenThresholds=acPMPacketJitterTimeBetweenThresholds, acPMStreamingCacheServerRequestsRateTimeAboveHighThreshold=acPMStreamingCacheServerRequestsRateTimeAboveHighThreshold, acPMDSPUtilTimeAboveHighThreshold=acPMDSPUtilTimeAboveHighThreshold, acPMModuleRTPBytesTxInterval=acPMModuleRTPBytesTxInterval, acPMMediaNetworkingAggregatedAttributesRTPBytesTxHighThreshold=acPMMediaNetworkingAggregatedAttributesRTPBytesTxHighThreshold, acPMRTPBytesTxAverage=acPMRTPBytesTxAverage, acPMRTPPacketLossRxTimeAboveHighThreshold=acPMRTPPacketLossRxTimeAboveHighThreshold, acPMRTPPacketLossTxVal=acPMRTPPacketLossTxVal, acPMMulticastRegisteredChannelsAverage=acPMMulticastRegisteredChannelsAverage, acPMStreamingCacheMissRateTimeBelowLowThreshold=acPMStreamingCacheMissRateTimeBelowLowThreshold, acPMMediaNetworkingAggregatedAttributes=acPMMediaNetworkingAggregatedAttributes, acPMModuleRTPPacketLossTxVolume=acPMModuleRTPPacketLossTxVolume, acPMModulePacketJitterVolume=acPMModulePacketJitterVolume, acPMModuleRTPBytesTxTable=acPMModuleRTPBytesTxTable, acPMSRTPStreamsInterval=acPMSRTPStreamsInterval, acPMNetworkingAttributesRTPPacketLossRxLowThreshold=acPMNetworkingAttributesRTPPacketLossRxLowThreshold, acPMCodersAttributesChannelsPerCoderHighThreshold=acPMCodersAttributesChannelsPerCoderHighThreshold)
