#
# PySNMP MIB module BAY-STACK-PIM-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BAY-STACK-PIM-EXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:36:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter64, ObjectIdentity, TimeTicks, Gauge32, IpAddress, Integer32, Counter32, Unsigned32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter64", "ObjectIdentity", "TimeTicks", "Gauge32", "IpAddress", "Integer32", "Counter32", "Unsigned32", "NotificationType")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
bayStackMibs, = mibBuilder.importSymbols("SYNOPTICS-ROOT-MIB", "bayStackMibs")
bayStackPimExtMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 5, 27))
bayStackPimExtMib.setRevisions(('2009-02-27 00:00', '2009-02-10 00:00', '2007-11-28 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: bayStackPimExtMib.setRevisionsDescriptions(('v3: Changed bspimNeighborLoss to bspimeNeighborStateChanged.', 'v2: Added bspimNeighborLoss.', 'v1: Initial version.',))
if mibBuilder.loadTexts: bayStackPimExtMib.setLastUpdated('200902270000Z')
if mibBuilder.loadTexts: bayStackPimExtMib.setOrganization('Nortel Networks')
if mibBuilder.loadTexts: bayStackPimExtMib.setContactInfo('Nortel Networks')
if mibBuilder.loadTexts: bayStackPimExtMib.setDescription("Nortel Networks PIM Extension MIB Copyright 2007 Nortel Networks, Inc. All rights reserved. This Nortel Networks SNMP Management Information Base Specification embodies Nortel Networks' confidential and proprietary intellectual property. Nortel Networks retains all title and ownership in the Specification, including any revisions. This Specification is supplied 'AS IS,' and Nortel Networks makes no warranty, either express or implied, as to the use, operation, condition, or performance of the Specification.")
bspimeNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 27, 0))
bspimeObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 27, 1))
bspimeNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 27, 2))
bspimeScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 27, 1, 1))
bspimePimVirtualNeighborTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 27, 1, 2), )
if mibBuilder.loadTexts: bspimePimVirtualNeighborTable.setStatus('current')
if mibBuilder.loadTexts: bspimePimVirtualNeighborTable.setDescription('PIM Virtual Neighbor table.')
bspimePimVirtualNeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 27, 1, 2, 1), ).setIndexNames((0, "BAY-STACK-PIM-EXT-MIB", "bspimePimVirtualNeighborIfIndex"), (0, "BAY-STACK-PIM-EXT-MIB", "bspimePimVirtualNeighborAddress"))
if mibBuilder.loadTexts: bspimePimVirtualNeighborEntry.setStatus('current')
if mibBuilder.loadTexts: bspimePimVirtualNeighborEntry.setDescription('A PIM virtual neighbor.')
bspimePimVirtualNeighborIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 27, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: bspimePimVirtualNeighborIfIndex.setStatus('current')
if mibBuilder.loadTexts: bspimePimVirtualNeighborIfIndex.setDescription('IP address of the interface of the virtual neighbor.')
bspimePimVirtualNeighborAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 27, 1, 2, 1, 2), IpAddress())
if mibBuilder.loadTexts: bspimePimVirtualNeighborAddress.setStatus('current')
if mibBuilder.loadTexts: bspimePimVirtualNeighborAddress.setDescription('IP address of the virtual neighbor.')
bspimePimVirtualNeighborRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 27, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bspimePimVirtualNeighborRowStatus.setStatus('current')
if mibBuilder.loadTexts: bspimePimVirtualNeighborRowStatus.setDescription('Used to create/delete virtual neighbors.')
bspimePimGroupActiveRPMappingTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 27, 1, 3), )
if mibBuilder.loadTexts: bspimePimGroupActiveRPMappingTable.setStatus('current')
if mibBuilder.loadTexts: bspimePimGroupActiveRPMappingTable.setDescription('PIM Group -> Active RP Mapping table.')
bspimePimGroupActiveRPMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 27, 1, 3, 1), ).setIndexNames((0, "BAY-STACK-PIM-EXT-MIB", "bspimePimGroupActiveRPMappingGroupAddress"), (0, "BAY-STACK-PIM-EXT-MIB", "bspimePimGroupActiveRPMappingGroupMask"), (0, "BAY-STACK-PIM-EXT-MIB", "bspimePimGroupActiveRPMappingActiveRP"))
if mibBuilder.loadTexts: bspimePimGroupActiveRPMappingEntry.setStatus('current')
if mibBuilder.loadTexts: bspimePimGroupActiveRPMappingEntry.setDescription('A mapping of a group to its active RP.')
bspimePimGroupActiveRPMappingGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 27, 1, 3, 1, 1), IpAddress())
if mibBuilder.loadTexts: bspimePimGroupActiveRPMappingGroupAddress.setStatus('current')
if mibBuilder.loadTexts: bspimePimGroupActiveRPMappingGroupAddress.setDescription('Group address.')
bspimePimGroupActiveRPMappingGroupMask = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 27, 1, 3, 1, 2), IpAddress())
if mibBuilder.loadTexts: bspimePimGroupActiveRPMappingGroupMask.setStatus('current')
if mibBuilder.loadTexts: bspimePimGroupActiveRPMappingGroupMask.setDescription('Group mask.')
bspimePimGroupActiveRPMappingActiveRP = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 27, 1, 3, 1, 3), IpAddress())
if mibBuilder.loadTexts: bspimePimGroupActiveRPMappingActiveRP.setStatus('current')
if mibBuilder.loadTexts: bspimePimGroupActiveRPMappingActiveRP.setDescription('IP address of the active RP.')
bspimePimGroupActiveRPMappingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 27, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bspimePimGroupActiveRPMappingPriority.setStatus('current')
if mibBuilder.loadTexts: bspimePimGroupActiveRPMappingPriority.setDescription('Priority of the active RP.')
bspimeNotifNeighborStatus = MibScalar((1, 3, 6, 1, 4, 1, 45, 5, 27, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bspimeNotifNeighborStatus.setStatus('current')
if mibBuilder.loadTexts: bspimeNotifNeighborStatus.setDescription('When a neighbor PIM interface changes state, this indicates whether the new state is up or down.')
bspimeNeighborStateChanged = NotificationType((1, 3, 6, 1, 4, 1, 45, 5, 27, 0, 1)).setObjects(("BAY-STACK-PIM-EXT-MIB", "rcPimNeighborIfIndex"), ("BAY-STACK-PIM-EXT-MIB", "bspimeNotifNeighborStatus"))
if mibBuilder.loadTexts: bspimeNeighborStateChanged.setStatus('current')
if mibBuilder.loadTexts: bspimeNeighborStateChanged.setDescription("A bspimeNeighborChange notification signifies a change of state of an adjacency with a neighbor. This notification should be generated when the router's PIM interface is disabled or enabled, or when a router's PIM neighbor adjacency expires or is established.")
mibBuilder.exportSymbols("BAY-STACK-PIM-EXT-MIB", bspimePimVirtualNeighborAddress=bspimePimVirtualNeighborAddress, bspimeScalars=bspimeScalars, bspimePimGroupActiveRPMappingPriority=bspimePimGroupActiveRPMappingPriority, bspimeNotificationObjects=bspimeNotificationObjects, bspimePimGroupActiveRPMappingActiveRP=bspimePimGroupActiveRPMappingActiveRP, bspimeNotifNeighborStatus=bspimeNotifNeighborStatus, bspimeNotifications=bspimeNotifications, bspimeNeighborStateChanged=bspimeNeighborStateChanged, bspimePimGroupActiveRPMappingTable=bspimePimGroupActiveRPMappingTable, bayStackPimExtMib=bayStackPimExtMib, bspimePimGroupActiveRPMappingGroupAddress=bspimePimGroupActiveRPMappingGroupAddress, bspimePimVirtualNeighborTable=bspimePimVirtualNeighborTable, bspimePimVirtualNeighborIfIndex=bspimePimVirtualNeighborIfIndex, bspimePimGroupActiveRPMappingEntry=bspimePimGroupActiveRPMappingEntry, PYSNMP_MODULE_ID=bayStackPimExtMib, bspimePimGroupActiveRPMappingGroupMask=bspimePimGroupActiveRPMappingGroupMask, bspimePimVirtualNeighborEntry=bspimePimVirtualNeighborEntry, bspimePimVirtualNeighborRowStatus=bspimePimVirtualNeighborRowStatus, bspimeObjects=bspimeObjects)
