#
# PySNMP MIB module TPLINK-DOT1Q-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-DOT1Q-VLAN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:24:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, Unsigned32, NotificationType, Integer32, ModuleIdentity, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, iso, IpAddress, TimeTicks, Counter32, Bits, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Unsigned32", "NotificationType", "Integer32", "ModuleIdentity", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "iso", "IpAddress", "TimeTicks", "Counter32", "Bits", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
TPRowStatus, = mibBuilder.importSymbols("TPLINK-TC-MIB", "TPRowStatus")
tplinkDot1qVlanMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 14))
tplinkDot1qVlanMIB.setRevisions(('2009-08-03 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: tplinkDot1qVlanMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: tplinkDot1qVlanMIB.setLastUpdated('200812160000Z')
if mibBuilder.loadTexts: tplinkDot1qVlanMIB.setOrganization('Shenzhen TP-LINK Technologies Co.Ltd.')
if mibBuilder.loadTexts: tplinkDot1qVlanMIB.setContactInfo('www.tplink.com.cn')
if mibBuilder.loadTexts: tplinkDot1qVlanMIB.setDescription('VLAN (Virtual Local Area Network) technology is developed for the switch to divide the LAN into multiple logical LANs flexibly. Hosts in the same VLAN can communicate with each other, regardless of their physical locations. VLAN can enhance performance by conserving bandwidth, and improve security by limiting traffic to specific domains.')
tplinkDot1qVlanMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 14, 1))
tplinkDot1qVlanNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 14, 2))
vlanTableCreate = NotificationType((1, 3, 6, 1, 4, 1, 11863, 6, 14, 2, 1)).setObjects(("TPLINK-DOT1Q-VLAN-MIB", "dot1qVlanId"))
if mibBuilder.loadTexts: vlanTableCreate.setStatus('current')
if mibBuilder.loadTexts: vlanTableCreate.setDescription('')
vlanPortConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 14, 1, 1))
vlanConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 14, 1, 2))
vlanPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 14, 1, 1, 1), )
if mibBuilder.loadTexts: vlanPortConfigTable.setStatus('current')
if mibBuilder.loadTexts: vlanPortConfigTable.setDescription('The switch provides three Link Types for the ports. Usually, the ACCESS port is to connect to the terminal hosts, such as PC and Server; the TRUNK port is to connect to the switch; the GENERAL port can connect to the terminal hosts or the switch also.')
vlanPortConifgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 14, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: vlanPortConifgEntry.setStatus('current')
if mibBuilder.loadTexts: vlanPortConifgEntry.setDescription('An entry contains of the information of a port parameter.')
vlanPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 14, 1, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanPortNumber.setStatus('current')
if mibBuilder.loadTexts: vlanPortNumber.setDescription('The port id.')
vlanPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 14, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("access", 0), ("trunk", 1), ("general", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanPortType.setStatus('current')
if mibBuilder.loadTexts: vlanPortType.setDescription('0.ACCESS:The ACCESS port can be added in a single VLAN,and the egress rule of the port is UNTAG. The PVID is same as the current VLAN ID. If the current VLAN is deleted,the PVID will be set to 1 by default. 1.TRUNK:The TRUNK port can be added in multiple VLANs, and the egress rule of the port is TAG. The PVID can be set as the VID number of any VLAN the port belongs to. 2.GENERAL:The GENERAL port can be added in multiple VLANs and set various egress rules according to the different VLANs. The default egress rule is UNTAG. The PVID can be set as the VID number of any VLAN the port belongs to.')
vlanPortPvid = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 14, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanPortPvid.setStatus('current')
if mibBuilder.loadTexts: vlanPortPvid.setDescription('Enter the PVID number of the port, 1-4094')
vlanPortLag = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 14, 1, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanPortLag.setStatus('current')
if mibBuilder.loadTexts: vlanPortLag.setDescription('Displays the LAG to which the port belongs.')
vlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 14, 1, 2, 1), )
if mibBuilder.loadTexts: vlanConfigTable.setStatus('current')
if mibBuilder.loadTexts: vlanConfigTable.setDescription('Here you can view and modify the VLAN Table.')
vlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 14, 1, 2, 1, 1), ).setIndexNames((0, "TPLINK-DOT1Q-VLAN-MIB", "dot1qVlanId"))
if mibBuilder.loadTexts: vlanConfigEntry.setStatus('current')
if mibBuilder.loadTexts: vlanConfigEntry.setDescription('An entry contains of the information of a vlan.')
dot1qVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 14, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dot1qVlanId.setStatus('current')
if mibBuilder.loadTexts: dot1qVlanId.setDescription('Enter the ID number of VLAN,2-4094.')
dot1qVlanDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 14, 1, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dot1qVlanDescription.setStatus('current')
if mibBuilder.loadTexts: dot1qVlanDescription.setDescription('Give a description to the VLAN for identification,1-16 characters')
vlanTagPortMemberAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 14, 1, 2, 1, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanTagPortMemberAdd.setStatus('current')
if mibBuilder.loadTexts: vlanTagPortMemberAdd.setDescription("Enter the desired port to be a tag member of VLAN,The format of input port number shoud be like '1, 3, 4-7, 11'. tag:All packets forwarded by the port are tagged. The packets contain VLAN information.")
vlanUntagPortMemberAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 14, 1, 2, 1, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanUntagPortMemberAdd.setStatus('current')
if mibBuilder.loadTexts: vlanUntagPortMemberAdd.setDescription("Enter the desired port to be a untag member of VLAN,The format of input port number shoud be like '1, 3, 4-7, 11'. untag:Packets forwarded by the port are untagged.")
vlanPortMemberRemove = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 14, 1, 2, 1, 1, 5), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanPortMemberRemove.setStatus('current')
if mibBuilder.loadTexts: vlanPortMemberRemove.setDescription("Remove port member of vlan,The format of input port number shoud be like '1, 3, 4-7, 11'.")
dot1qVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 14, 1, 2, 1, 1, 6), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dot1qVlanStatus.setStatus('current')
if mibBuilder.loadTexts: dot1qVlanStatus.setDescription('the following two values are states: these values may be read or written active(1), the following three values are actions: these values may be written, but are never read createAndGo(4), destroy(6)')
mibBuilder.exportSymbols("TPLINK-DOT1Q-VLAN-MIB", tplinkDot1qVlanMIBObjects=tplinkDot1qVlanMIBObjects, vlanPortConifgEntry=vlanPortConifgEntry, dot1qVlanStatus=dot1qVlanStatus, vlanTagPortMemberAdd=vlanTagPortMemberAdd, vlanUntagPortMemberAdd=vlanUntagPortMemberAdd, dot1qVlanId=dot1qVlanId, vlanConfigEntry=vlanConfigEntry, dot1qVlanDescription=dot1qVlanDescription, tplinkDot1qVlanNotifications=tplinkDot1qVlanNotifications, vlanPortType=vlanPortType, vlanPortLag=vlanPortLag, tplinkDot1qVlanMIB=tplinkDot1qVlanMIB, vlanConfigTable=vlanConfigTable, vlanTableCreate=vlanTableCreate, vlanPortNumber=vlanPortNumber, vlanConfig=vlanConfig, vlanPortMemberRemove=vlanPortMemberRemove, PYSNMP_MODULE_ID=tplinkDot1qVlanMIB, vlanPortPvid=vlanPortPvid, vlanPortConfig=vlanPortConfig, vlanPortConfigTable=vlanPortConfigTable)
