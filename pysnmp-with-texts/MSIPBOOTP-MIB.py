#
# PySNMP MIB module MSIPBOOTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MSIPBOOTP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:15:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
software, microsoft = mibBuilder.importSymbols("MSFT-MIB", "software", "microsoft")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, TimeTicks, Bits, ObjectIdentity, MibIdentifier, enterprises, IpAddress, Gauge32, iso, Integer32, ModuleIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "TimeTicks", "Bits", "ObjectIdentity", "MibIdentifier", "enterprises", "IpAddress", "Gauge32", "iso", "Integer32", "ModuleIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
msipbootp = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 12))
pysmi_global = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 12, 1)).setLabel("global")
interface = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 12, 2))
globalLoggingLevel = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("error", 2), ("warning", 3), ("information", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalLoggingLevel.setStatus('mandatory')
if mibBuilder.loadTexts: globalLoggingLevel.setDescription('Information logged can be None, Error only, Error + Warning, Error + Warn + Logging. This variable controls the amount of information logged')
globalMaxRecQueueSize = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 12, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalMaxRecQueueSize.setStatus('mandatory')
if mibBuilder.loadTexts: globalMaxRecQueueSize.setDescription('Maximum size to use for queueing incoming packets.')
globalServerCount = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: globalServerCount.setStatus('mandatory')
if mibBuilder.loadTexts: globalServerCount.setDescription('Number of entries BOOTP server table')
globalBOOTPServerTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 12, 1, 4), )
if mibBuilder.loadTexts: globalBOOTPServerTable.setStatus('mandatory')
if mibBuilder.loadTexts: globalBOOTPServerTable.setDescription('Table of BOOTP servers to which packets are sent by this router')
globalBOOTPServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 12, 1, 4, 1), ).setIndexNames((0, "MSIPBOOTP-MIB", "globalBOOTPServerAddr"))
if mibBuilder.loadTexts: globalBOOTPServerEntry.setStatus('mandatory')
if mibBuilder.loadTexts: globalBOOTPServerEntry.setDescription('BOOTP server entry. Contains the IP address of a BOOTP server')
globalBOOTPServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 1, 4, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalBOOTPServerAddr.setStatus('mandatory')
if mibBuilder.loadTexts: globalBOOTPServerAddr.setDescription('IP Address of DHCP/BOOTP router')
globalBOOTPServerTag = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalBOOTPServerTag.setStatus('mandatory')
if mibBuilder.loadTexts: globalBOOTPServerTag.setDescription('create : Creates an entry in the BOOTP Server table delete : Deletes an entry in the BOOTP Server table ')
ifStatsTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 1), )
if mibBuilder.loadTexts: ifStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: ifStatsTable.setDescription('Table of BOOTP statistics for interfaces')
ifStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 1, 1), ).setIndexNames((0, "MSIPBOOTP-MIB", "ifSEIndex"))
if mibBuilder.loadTexts: ifStatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: ifStatsEntry.setDescription('BOOTP interface statistics entry. Each entry contains counts of send/receive failures, requests/relies received/discarded, and ARP Update failures')
ifSEIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSEIndex.setStatus('mandatory')
if mibBuilder.loadTexts: ifSEIndex.setDescription('Index for the BOOTP interface Statistics table')
ifSEState = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("bound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSEState.setStatus('mandatory')
if mibBuilder.loadTexts: ifSEState.setDescription('Current state of BOOTP on this interface.')
ifSESendFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSESendFailures.setStatus('mandatory')
if mibBuilder.loadTexts: ifSESendFailures.setDescription('Number of times a failure occurred while attempting to send a packet on this interface.')
ifSEReceiveFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSEReceiveFailures.setStatus('mandatory')
if mibBuilder.loadTexts: ifSEReceiveFailures.setDescription('Number of times a failure occurred while attempting to receive a packet on this interface.')
ifSEArpUpdateFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSEArpUpdateFailures.setStatus('mandatory')
if mibBuilder.loadTexts: ifSEArpUpdateFailures.setDescription('Number of times a failure occurred while attempting to update the ARP cache on this interface.')
ifSERequestReceiveds = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSERequestReceiveds.setStatus('mandatory')
if mibBuilder.loadTexts: ifSERequestReceiveds.setDescription('Number of BOOTP REQUEST packets received on this interface.')
ifSERequestDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSERequestDiscards.setStatus('mandatory')
if mibBuilder.loadTexts: ifSERequestDiscards.setDescription('Number of BOOTP REQUEST packets discarded on this interface.')
ifSEReplyReceiveds = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSEReplyReceiveds.setStatus('mandatory')
if mibBuilder.loadTexts: ifSEReplyReceiveds.setDescription('Number of BOOTP REPLY packets received on this interface.')
ifSEReplyDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSEReplyDiscards.setStatus('mandatory')
if mibBuilder.loadTexts: ifSEReplyDiscards.setDescription('Number of BOOTP REPLY packets discarded due to errors in the header.')
ifConfigTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 2), )
if mibBuilder.loadTexts: ifConfigTable.setStatus('mandatory')
if mibBuilder.loadTexts: ifConfigTable.setDescription('BOOTP Interface configuration table. List of subnets that require separate configuration in BOOTP.')
ifConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 2, 1), ).setIndexNames((0, "MSIPBOOTP-MIB", "ifCEIndex"))
if mibBuilder.loadTexts: ifConfigEntry.setStatus('mandatory')
if mibBuilder.loadTexts: ifConfigEntry.setDescription('BOOTP configuration entry for an interface. A single routing domain in a single subnet.')
ifCEIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifCEIndex.setStatus('mandatory')
if mibBuilder.loadTexts: ifCEIndex.setDescription('Index for BOOTP interface config. table.')
ifCEState = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("bound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifCEState.setStatus('mandatory')
if mibBuilder.loadTexts: ifCEState.setDescription('Current state of BOOTP on this interface.')
ifCERelayMode = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifCERelayMode.setStatus('mandatory')
if mibBuilder.loadTexts: ifCERelayMode.setDescription('Relay Mode for BOOTP request/reply packets ')
ifCEMaxHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifCEMaxHopCount.setStatus('mandatory')
if mibBuilder.loadTexts: ifCEMaxHopCount.setDescription("Each time a BOOTP request is forwarded by the BOOTP relay agent the request packet's hop count is incremented. If the number of hops traversed by the packet exceeds the max hop count configured on a relay agent the request packet is discarded by that relay agent.")
ifCEMinSecondsSinceBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 2, 1, 5), Integer32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifCEMinSecondsSinceBoot.setStatus('mandatory')
if mibBuilder.loadTexts: ifCEMinSecondsSinceBoot.setDescription('Each BOOTP request sent by a client contains the time since the client has booted. If the time since boot for the client exceeds the configured value of ifCEMinSecondsSinceBoot on a relay agent, the relay agent will forward the request. Otherwise it will discard the request.')
ifBindingTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 3), )
if mibBuilder.loadTexts: ifBindingTable.setStatus('mandatory')
if mibBuilder.loadTexts: ifBindingTable.setDescription('Table containing binding information for each interface.')
ifBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 3, 1), ).setIndexNames((0, "MSIPBOOTP-MIB", "ifBindingIndex"))
if mibBuilder.loadTexts: ifBindingEntry.setStatus('mandatory')
if mibBuilder.loadTexts: ifBindingEntry.setDescription('Binding information entry for an interface')
ifBindingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifBindingIndex.setStatus('mandatory')
if mibBuilder.loadTexts: ifBindingIndex.setDescription('Index for an interface entry in the binding table')
ifBindingState = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("bound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifBindingState.setStatus('mandatory')
if mibBuilder.loadTexts: ifBindingState.setDescription('State of the interface binding')
ifBindingAddrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifBindingAddrCount.setStatus('mandatory')
if mibBuilder.loadTexts: ifBindingAddrCount.setDescription('Number of IP address bound to this interface. This is also the number of entries in the Interface Address Table corresponding to this interface.')
ifAddressTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 4), )
if mibBuilder.loadTexts: ifAddressTable.setStatus('mandatory')
if mibBuilder.loadTexts: ifAddressTable.setDescription('Table of IP addresses bound to interfaces')
ifAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 4, 1), ).setIndexNames((0, "MSIPBOOTP-MIB", "ifAEIfIndex"), (0, "MSIPBOOTP-MIB", "ifAEAddress"), (0, "MSIPBOOTP-MIB", "ifAEMask"))
if mibBuilder.loadTexts: ifAddressEntry.setStatus('mandatory')
if mibBuilder.loadTexts: ifAddressEntry.setDescription('Entry for an IP address for an interface')
ifAEIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifAEIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: ifAEIfIndex.setDescription('Index corresponding to the Interface with which this entry is associated.')
ifAEAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifAEAddress.setStatus('mandatory')
if mibBuilder.loadTexts: ifAEAddress.setDescription('Ip address bound to the associated interface.')
ifAEMask = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 12, 2, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifAEMask.setStatus('mandatory')
if mibBuilder.loadTexts: ifAEMask.setDescription('Address Mask associated with the IP address contained in the corresponding ifAEAddress field.')
mibBuilder.exportSymbols("MSIPBOOTP-MIB", ifBindingTable=ifBindingTable, ifSEIndex=ifSEIndex, ifCEMaxHopCount=ifCEMaxHopCount, globalBOOTPServerEntry=globalBOOTPServerEntry, ifSERequestReceiveds=ifSERequestReceiveds, ifCEIndex=ifCEIndex, ifStatsTable=ifStatsTable, ifBindingEntry=ifBindingEntry, ifSERequestDiscards=ifSERequestDiscards, ifSEReplyReceiveds=ifSEReplyReceiveds, ifBindingState=ifBindingState, ifSEReceiveFailures=ifSEReceiveFailures, ifConfigTable=ifConfigTable, ifAddressTable=ifAddressTable, msipbootp=msipbootp, globalServerCount=globalServerCount, ifCEState=ifCEState, globalBOOTPServerAddr=globalBOOTPServerAddr, ifStatsEntry=ifStatsEntry, ifAEAddress=ifAEAddress, ifAEMask=ifAEMask, ifSEState=ifSEState, ifCERelayMode=ifCERelayMode, pysmi_global=pysmi_global, ifBindingIndex=ifBindingIndex, globalBOOTPServerTable=globalBOOTPServerTable, ifCEMinSecondsSinceBoot=ifCEMinSecondsSinceBoot, ifAddressEntry=ifAddressEntry, ifSEArpUpdateFailures=ifSEArpUpdateFailures, globalLoggingLevel=globalLoggingLevel, ifBindingAddrCount=ifBindingAddrCount, ifAEIfIndex=ifAEIfIndex, globalMaxRecQueueSize=globalMaxRecQueueSize, interface=interface, ifSESendFailures=ifSESendFailures, ifSEReplyDiscards=ifSEReplyDiscards, ifConfigEntry=ifConfigEntry, globalBOOTPServerTag=globalBOOTPServerTag)
