#
# PySNMP MIB module Wellfleet-PROTOPRI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-PROTOPRI-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:41:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
enterprises, mib_2, mgmt, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, IpAddress, Counter64, Integer32, ObjectIdentity, Opaque, NotificationType, Gauge32, ModuleIdentity, Counter32, NotificationType, MibIdentifier, Bits, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "mib-2", "mgmt", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "IpAddress", "Counter64", "Integer32", "ObjectIdentity", "Opaque", "NotificationType", "Gauge32", "ModuleIdentity", "Counter32", "NotificationType", "MibIdentifier", "Bits", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfProtocolPriorityGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfProtocolPriorityGroup")
wfProtoPriQTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 1), )
if mibBuilder.loadTexts: wfProtoPriQTable.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriQTable.setDescription('Protocol Priority Queue Mib')
wfProtoPriQEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 1, 1), ).setIndexNames((0, "Wellfleet-PROTOPRI-MIB", "wfProtoPriPeerAddr"), (0, "Wellfleet-PROTOPRI-MIB", "wfProtoPriClientId"), (0, "Wellfleet-PROTOPRI-MIB", "wfProtoPriQueueNumber"))
if mibBuilder.loadTexts: wfProtoPriQEntry.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriQEntry.setDescription('entry for each queue the Protocol Priority supports')
wfProtoPriQueueDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfProtoPriQueueDelete.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriQueueDelete.setDescription('Create/Delete this Mib entry')
wfProtoPriClientId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriClientId.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriClientId.setDescription("Client's number provided by the Client to identify the user")
wfProtoPriQueueNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriQueueNumber.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriQueueNumber.setDescription('Queue number')
wfProtoPriQueueBandwidthPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(10))).clone(namedValues=NamedValues(("default", 10))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfProtoPriQueueBandwidthPercent.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriQueueBandwidthPercent.setDescription('Bandwidth percent alloted for this queue; Sum of the bandwidth for all the queues for this peer should equal to 100%')
wfProtoPriQueueHighWaterPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriQueueHighWaterPkts.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriQueueHighWaterPkts.setDescription('Max number of packets held by this Queue since the Queue creation or reset')
wfProtoPriQueueTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriQueueTxPkts.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriQueueTxPkts.setDescription('Max number number of packets sent out of this Queue(statistics) since creation or last reset')
wfProtoPriQueueTotalTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriQueueTotalTxOctets.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriQueueTotalTxOctets.setDescription('Max number of bytes sent out of this Queue(statistics) since creation or last reset')
wfProtoPriQueueLargePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriQueueLargePkts.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriQueueLargePkts.setDescription('Number of packets that exceeded the latency by itself but still got sent out; N/A for DLS')
wfProtoPriQueueClippedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriQueueClippedPkts.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriQueueClippedPkts.setDescription('Number of packets clipped when Congestion control is disabled')
wfProtoPriPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 1, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriPeerAddr.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriPeerAddr.setDescription('IP addr for DLS, part of the instance id')
wfProtoPriQueueHighWaterBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriQueueHighWaterBytes.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriQueueHighWaterBytes.setDescription('Max number of bytes held by this Queue since the Queue creation or reset')
wfProtoPriCCPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriCCPkts.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriCCPkts.setDescription('Max number of packets sent by Congestion Control Queue in memory(statistics) since creation or last reset')
wfProtoPriCCOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriCCOctets.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriCCOctets.setDescription('Max number of bytes sent by Congestion Control Queue in memory(statistics) since creation or last reset')
wfProtoPriCCHighWaterPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriCCHighWaterPkts.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriCCHighWaterPkts.setDescription('Max number of packets held by Congestion Control Queue in memory(statistics) since creation or last reset')
wfProtoPriCCHighWaterBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriCCHighWaterBytes.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriCCHighWaterBytes.setDescription('Max number of bytes held by Congestion Control Queue in memory(statistics) since creation or last reset')
wfProtoPriFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 2), )
if mibBuilder.loadTexts: wfProtoPriFilterTable.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriFilterTable.setDescription('Protocol Prioritiy Filter Definitions')
wfProtoPriFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 2, 1), ).setIndexNames((0, "Wellfleet-PROTOPRI-MIB", "wfProtoPriFilterPeerAddr"), (0, "Wellfleet-PROTOPRI-MIB", "wfProtoPriFilterClientId"), (0, "Wellfleet-PROTOPRI-MIB", "wfProtoPriFilterRuleNumber"), (0, "Wellfleet-PROTOPRI-MIB", "wfProtoPriFilterFragment"))
if mibBuilder.loadTexts: wfProtoPriFilterEntry.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriFilterEntry.setDescription('Filter table entry for Protocol Priority')
wfProtoPriFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfProtoPriFilterCreate.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriFilterCreate.setDescription('create/delete the filter table')
wfProtoPriFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfProtoPriFilterEnable.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriFilterEnable.setDescription('Defines whether or not the traffic filter rule should be used: enabled - activate the rule. disabled - inactivate the rule. ')
wfProtoPriFilterState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriFilterState.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriFilterState.setDescription('Defines the current State of the traffic filter: inactive - the rule is not in use. active - the rule is being used. error - the application detected an error in the rule. ')
wfProtoPriFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriFilterCounter.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriFilterCounter.setDescription('counter to keep track how many times this rule got hit')
wfProtoPriFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 2, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfProtoPriFilterDefinition.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriFilterDefinition.setDescription('octect string defining the filter rule')
wfProtoPriFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriFilterReserved.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriFilterReserved.setDescription('reserved')
wfProtoPriFilterPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 2, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriFilterPeerAddr.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriFilterPeerAddr.setDescription('for DLS part of instance id')
wfProtoPriFilterClientId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriFilterClientId.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriFilterClientId.setDescription('unique id for each Client provided by the Client')
wfProtoPriFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriFilterRuleNumber.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriFilterRuleNumber.setDescription('rule number')
wfProtoPriFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfProtoPriFilterFragment.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriFilterFragment.setDescription('fragment number')
wfProtoPriFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 9, 2, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfProtoPriFilterName.setStatus('mandatory')
if mibBuilder.loadTexts: wfProtoPriFilterName.setDescription('name of this rule, provided by the user')
mibBuilder.exportSymbols("Wellfleet-PROTOPRI-MIB", wfProtoPriFilterClientId=wfProtoPriFilterClientId, wfProtoPriQEntry=wfProtoPriQEntry, wfProtoPriFilterCreate=wfProtoPriFilterCreate, wfProtoPriCCHighWaterBytes=wfProtoPriCCHighWaterBytes, wfProtoPriFilterPeerAddr=wfProtoPriFilterPeerAddr, wfProtoPriFilterTable=wfProtoPriFilterTable, wfProtoPriCCHighWaterPkts=wfProtoPriCCHighWaterPkts, wfProtoPriQueueLargePkts=wfProtoPriQueueLargePkts, wfProtoPriClientId=wfProtoPriClientId, wfProtoPriQTable=wfProtoPriQTable, wfProtoPriPeerAddr=wfProtoPriPeerAddr, wfProtoPriFilterDefinition=wfProtoPriFilterDefinition, wfProtoPriFilterState=wfProtoPriFilterState, wfProtoPriCCPkts=wfProtoPriCCPkts, wfProtoPriFilterRuleNumber=wfProtoPriFilterRuleNumber, wfProtoPriQueueDelete=wfProtoPriQueueDelete, wfProtoPriQueueNumber=wfProtoPriQueueNumber, wfProtoPriFilterName=wfProtoPriFilterName, wfProtoPriFilterEntry=wfProtoPriFilterEntry, wfProtoPriQueueBandwidthPercent=wfProtoPriQueueBandwidthPercent, wfProtoPriQueueHighWaterBytes=wfProtoPriQueueHighWaterBytes, wfProtoPriCCOctets=wfProtoPriCCOctets, wfProtoPriQueueHighWaterPkts=wfProtoPriQueueHighWaterPkts, wfProtoPriFilterCounter=wfProtoPriFilterCounter, wfProtoPriQueueTotalTxOctets=wfProtoPriQueueTotalTxOctets, wfProtoPriQueueClippedPkts=wfProtoPriQueueClippedPkts, wfProtoPriQueueTxPkts=wfProtoPriQueueTxPkts, wfProtoPriFilterEnable=wfProtoPriFilterEnable, wfProtoPriFilterFragment=wfProtoPriFilterFragment, wfProtoPriFilterReserved=wfProtoPriFilterReserved)
