#
# PySNMP MIB module PAIRGAIN-ETHERPHONE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PAIRGAIN-ETHERPHONE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:36:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
pgEPhoneLocUnit, pgEPhoneRemUnit = mibBuilder.importSymbols("PAIRGAIN-COMMON-HD-MIB", "pgEPhoneLocUnit", "pgEPhoneRemUnit")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, iso, MibIdentifier, NotificationType, ObjectIdentity, ModuleIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, TimeTicks, Bits, IpAddress, Gauge32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "iso", "MibIdentifier", "NotificationType", "ObjectIdentity", "ModuleIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "TimeTicks", "Bits", "IpAddress", "Gauge32", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class TempPgUnitType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45))
    namedValues = NamedValues(("empty", 1), ("other", 2), ("cmu", 3), ("clu", 4), ("clu-T1-V35", 5), ("clu-384-V35", 6), ("clu-DSX", 7), ("clu-T1-449", 8), ("clu-Flex", 9), ("clu-E1-V35", 10), ("clu-E1-449", 11), ("clu-G703", 12), ("clu-G120", 13), ("clu-X21", 14), ("cu-T1-V35", 15), ("cu-384-V35", 16), ("cu-DSX", 17), ("cu-T1-449", 18), ("cu-Flex", 19), ("cu-E1-V35", 20), ("cu-E1-449", 21), ("cu-G703", 22), ("cu-G120", 23), ("cu-X21", 24), ("cu-DBL", 25), ("hmu", 26), ("hlu", 27), ("ps-AC", 28), ("ps-DC", 29), ("clu-384-449", 30), ("cu-384-449", 31), ("clu-REX-T1", 32), ("cu-REX-T1", 33), ("clu-REX-E1", 34), ("cu-REX-E1", 35), ("clu-REX-384", 36), ("cu-REX-384", 37), ("clu-MM768", 38), ("cu-MM768", 39), ("mm-220", 40), ("mm-768", 41), ("eph-220", 42), ("epw-220", 43), ("eph-remote", 44), ("eph-RT", 45))

pgLocUnitEpTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1), )
if mibBuilder.loadTexts: pgLocUnitEpTable.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpTable.setDescription('The Local Unit EtherPhone table. This table contains an entry for each EtherPhone/MegabitModem 220 line unit in the chassis. The attributes in this table decribe parameters associated with each Local Line Unit.')
pgLocUnitEpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1), ).setIndexNames((0, "PAIRGAIN-ETHERPHONE-MIB", "pgLocUnitEpIndex"))
if mibBuilder.loadTexts: pgLocUnitEpEntry.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpEntry.setDescription('Entries in the Local Unit Port Table.')
pgLocUnitEpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLocUnitEpIndex.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpIndex.setDescription('Index of the EtherPhone Local Unit.')
pgLocUnitEpUnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 2), TempPgUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLocUnitEpUnitType.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpUnitType.setDescription('The type of Unit this entry represents.')
pgLocUnitEpHwConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLocUnitEpHwConfig.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpHwConfig.setDescription('Major hardware configuration of the unit.')
pgLocUnitEpXcvrType = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("hybrid768", 1), ("hybrid384", 2), ("hybrid256", 3), ("afe", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLocUnitEpXcvrType.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpXcvrType.setDescription('The transceiver type of the unit.')
pgLocUnitEpAFE = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgLocUnitEpAFE.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpAFE.setDescription('For variable rate(AFE) transceiver type, this object is used to set the rate.')
pgLocUnitEpDS0IdleCode = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgLocUnitEpDS0IdleCode.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpDS0IdleCode.setDescription('Code inserts into all DS0 Channels that are not assigned to either POTS line or the Ethernet port.')
pgLocUnitEpPOTSDS0Alloc = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgLocUnitEpPOTSDS0Alloc.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpPOTSDS0Alloc.setDescription('Number of DS0 channels allocated to POTS line.')
pgLocUnitEpEthernetDS0Alloc = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgLocUnitEpEthernetDS0Alloc.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpEthernetDS0Alloc.setDescription('Number of DS0 channels allocated to Ethernet port.')
pgLocUnitEpPOTSType = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noPOT", 1), ("fxO1", 2), ("fxS1", 3), ("fxO2", 4), ("fxS2", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLocUnitEpPOTSType.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpPOTSType.setDescription('This object indicates what kind of POTS card is installed, and how many POTS lines are available.')
pgLocUnitEpPOTSEnable1 = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgLocUnitEpPOTSEnable1.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpPOTSEnable1.setDescription('This object enables or disables POTS 1 line.')
pgLocUnitEpPOTSEnable2 = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgLocUnitEpPOTSEnable2.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpPOTSEnable2.setDescription('This object enables or disables POTS 2 line.')
pgLocUnitEpPOTSStatus1 = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("undefined", 1), ("ring", 2), ("on-hook", 3), ("lcfo", 4), ("off-hook", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLocUnitEpPOTSStatus1.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpPOTSStatus1.setDescription('This object represents the status of POTS 1 line.')
pgLocUnitEpPOTSStatus2 = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("undefined", 1), ("ring", 2), ("on-hook", 3), ("lcfo", 4), ("off-hook", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLocUnitEpPOTSStatus2.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpPOTSStatus2.setDescription('This object represents the status of POTS 2 line.')
pgLocUnitEpBridgeSWVer = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLocUnitEpBridgeSWVer.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpBridgeSWVer.setDescription("This object represents the bridge's software version.")
pgLocUnitEpERateMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("r56", 1), ("r64", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgLocUnitEpERateMultiplier.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpERateMultiplier.setDescription('This object sets the DS0 channels allocated to the Ethernet port operate as 56Kbps or 64Kbps.')
pgLocUnitEpMACAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLocUnitEpMACAddr.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpMACAddr.setDescription('This object represents the Ethernet MAC address of the Ethernet port.')
pgLocUnitEpSpanTreeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgLocUnitEpSpanTreeMode.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpSpanTreeMode.setDescription('This object enables/disables the spanning tree mode of the bridge.')
pgLocUnitEpEncapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("hdlc", 1), ("ppp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgLocUnitEpEncapMode.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpEncapMode.setDescription('This object sets the encapsulation mode to HDLS or PPP.')
pgLocUnitEp10BaseTLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("link-down", 1), ("link-up", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLocUnitEp10BaseTLinkStatus.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEp10BaseTLinkStatus.setDescription('This object represents the Ethernet 10BaseT link status.')
pgLocUnitEp10BaseTLinkAlarmMode = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgLocUnitEp10BaseTLinkAlarmMode.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEp10BaseTLinkAlarmMode.setDescription('This object is used to enable/disable 10BaseT link alarm.')
pgLocUnitEpEPortInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLocUnitEpEPortInFrames.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpEPortInFrames.setDescription('This object represents the count of received frames of the Ethernet port.')
pgLocUnitEpEPortOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLocUnitEpEPortOutFrames.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpEPortOutFrames.setDescription('This object represents the count of transmitted frames of the Ethernet port.')
pgLocUnitEpEPortInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLocUnitEpEPortInDiscards.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpEPortInDiscards.setDescription('This object represents the count of discarded frames of the Ethernet port.')
pgLocUnitEpEPortInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLocUnitEpEPortInErrors.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpEPortInErrors.setDescription('This object represents the count of frames with errors of the Ethernet port.')
pgLocUnitEpDSLPortInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLocUnitEpDSLPortInFrames.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpDSLPortInFrames.setDescription('This object represents the count of received frames of the DSL port.')
pgLocUnitEpDSLPortOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLocUnitEpDSLPortOutFrames.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpDSLPortOutFrames.setDescription('This object represents the count of transmitted frames of the DSL port.')
pgLocUnitEpDSLPortInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLocUnitEpDSLPortInDiscards.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpDSLPortInDiscards.setDescription('This object represents the count of discarded frames of the DSL port.')
pgLocUnitEpDSLPortInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 2, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLocUnitEpDSLPortInErrors.setStatus('mandatory')
if mibBuilder.loadTexts: pgLocUnitEpDSLPortInErrors.setDescription('This object represents the count of frames with errors of the DSL port.')
pgRemUnitEpTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1), )
if mibBuilder.loadTexts: pgRemUnitEpTable.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpTable.setDescription('The Remote Unit EtherPhone table. This table contains an entry for each EtherPhone/MegabitModem 220 line unit in the chassis. The attributes in this table decribe parameters associated with each Remote Line Unit.')
pgRemUnitEpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1), ).setIndexNames((0, "PAIRGAIN-ETHERPHONE-MIB", "pgRemUnitEpIndex"))
if mibBuilder.loadTexts: pgRemUnitEpEntry.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpEntry.setDescription('Entries in the Remote Unit Port Table.')
pgRemUnitEpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgRemUnitEpIndex.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpIndex.setDescription('Index of the EtherPhone Remote Unit.')
pgRemUnitEpUnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 2), TempPgUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgRemUnitEpUnitType.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpUnitType.setDescription('The type of Unit this entry represents.')
pgRemUnitEpHwConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgRemUnitEpHwConfig.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpHwConfig.setDescription('Major hardware configuration of the unit.')
pgRemUnitEpXcvrType = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("hybrid768", 1), ("hybrid384", 2), ("hybrid256", 3), ("afe", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgRemUnitEpXcvrType.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpXcvrType.setDescription('The transceiver type of the unit.')
pgRemUnitEpAFE = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgRemUnitEpAFE.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpAFE.setDescription('For variable rate(AFE) transceiver type, this object is used to set the rate.')
pgRemUnitEpDS0IdleCode = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgRemUnitEpDS0IdleCode.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpDS0IdleCode.setDescription('Code inserts into all DS0 Channels that are not assigned to either POTS line or the Ethernet port.')
pgRemUnitEpPOTSDS0Alloc = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgRemUnitEpPOTSDS0Alloc.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpPOTSDS0Alloc.setDescription('Number of DS0 channels allocated to POTS line.')
pgRemUnitEpEthernetDS0Alloc = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgRemUnitEpEthernetDS0Alloc.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpEthernetDS0Alloc.setDescription('Number of DS0 channels allocated to Ethernet port.')
pgRemUnitEpPOTSType = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noPOT", 1), ("fxO1", 2), ("fxS1", 3), ("fxO2", 4), ("fxS2", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgRemUnitEpPOTSType.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpPOTSType.setDescription('This object indicates what kind of POTS card is installed, and how many POTS lines are available.')
pgRemUnitEpPOTSEnable1 = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgRemUnitEpPOTSEnable1.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpPOTSEnable1.setDescription('This object enables or disables POTS 1 line.')
pgRemUnitEpPOTSEnable2 = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgRemUnitEpPOTSEnable2.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpPOTSEnable2.setDescription('This object enables or disables POTS 2 line.')
pgRemUnitEpPOTSStatus1 = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("undefined", 1), ("ring", 2), ("on-hook", 3), ("lcfo", 4), ("off-hook", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgRemUnitEpPOTSStatus1.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpPOTSStatus1.setDescription('This object represents the status of POTS 1 line.')
pgRemUnitEpPOTSStatus2 = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("undefined", 1), ("ring", 2), ("on-hook", 3), ("lcfo", 4), ("off-hook", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgRemUnitEpPOTSStatus2.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpPOTSStatus2.setDescription('This object represents the status of POTS 2 line.')
pgRemUnitEpBridgeSWVer = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgRemUnitEpBridgeSWVer.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpBridgeSWVer.setDescription("This object represents the bridge's software version.")
pgRemUnitEpERateMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("r56", 1), ("r64", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgRemUnitEpERateMultiplier.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpERateMultiplier.setDescription('This object sets the DS0 channels allocated to the Ethernet port operate as 56Kbps or 64Kbps.')
pgRemUnitEpMACAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgRemUnitEpMACAddr.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpMACAddr.setDescription('This object represents the Ethernet MAC address of the Ethernet port.')
pgRemUnitEpSpanTreeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgRemUnitEpSpanTreeMode.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpSpanTreeMode.setDescription('This object enables/disables the spanning tree mode of the bridge.')
pgRemUnitEpEncapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("hdlc", 1), ("ppp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgRemUnitEpEncapMode.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpEncapMode.setDescription('This object sets the encapsulation mode to HDLS or PPP.')
pgRemUnitEp10BaseTLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("link-down", 1), ("link-up", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgRemUnitEp10BaseTLinkStatus.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEp10BaseTLinkStatus.setDescription('This object represents the Ethernet 10BaseT link status.')
pgRemUnitEp10BaseTLinkAlarmMode = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgRemUnitEp10BaseTLinkAlarmMode.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEp10BaseTLinkAlarmMode.setDescription('This object is used to enable/disable the 10BaseT link alarm.')
pgRemUnitEpEPortInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgRemUnitEpEPortInFrames.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpEPortInFrames.setDescription('This object represents the count of received frames of the Ethernet port.')
pgRemUnitEpEPortOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgRemUnitEpEPortOutFrames.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpEPortOutFrames.setDescription('This object represents the count of transmitted frames of the Ethernet port.')
pgRemUnitEpEPortInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgRemUnitEpEPortInDiscards.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpEPortInDiscards.setDescription('This object represents the count of discarded frames of the Ethernet port.')
pgRemUnitEpEPortInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgRemUnitEpEPortInErrors.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpEPortInErrors.setDescription('This object represents the count of frames with errors of the Ethernet port.')
pgRemUnitEpDSLPortInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgRemUnitEpDSLPortInFrames.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpDSLPortInFrames.setDescription('This object represents the count of received frames of the DSL port.')
pgRemUnitEpDSLPortOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgRemUnitEpDSLPortOutFrames.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpDSLPortOutFrames.setDescription('This object represents the count of transmitted frames of the DSL port.')
pgRemUnitEpDSLPortInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgRemUnitEpDSLPortInDiscards.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpDSLPortInDiscards.setDescription('This object represents the count of discarded frames of the DSL port.')
pgRemUnitEpDSLPortInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 8, 3, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgRemUnitEpDSLPortInErrors.setStatus('mandatory')
if mibBuilder.loadTexts: pgRemUnitEpDSLPortInErrors.setDescription('This object represents the count of frames with errors of the DSL port.')
mibBuilder.exportSymbols("PAIRGAIN-ETHERPHONE-MIB", pgLocUnitEpERateMultiplier=pgLocUnitEpERateMultiplier, pgLocUnitEpHwConfig=pgLocUnitEpHwConfig, pgRemUnitEpHwConfig=pgRemUnitEpHwConfig, pgRemUnitEpEPortInDiscards=pgRemUnitEpEPortInDiscards, pgLocUnitEpEthernetDS0Alloc=pgLocUnitEpEthernetDS0Alloc, pgLocUnitEp10BaseTLinkAlarmMode=pgLocUnitEp10BaseTLinkAlarmMode, pgRemUnitEpTable=pgRemUnitEpTable, pgRemUnitEp10BaseTLinkAlarmMode=pgRemUnitEp10BaseTLinkAlarmMode, pgLocUnitEpDS0IdleCode=pgLocUnitEpDS0IdleCode, pgLocUnitEpBridgeSWVer=pgLocUnitEpBridgeSWVer, pgLocUnitEpUnitType=pgLocUnitEpUnitType, pgLocUnitEp10BaseTLinkStatus=pgLocUnitEp10BaseTLinkStatus, pgRemUnitEpAFE=pgRemUnitEpAFE, pgRemUnitEpSpanTreeMode=pgRemUnitEpSpanTreeMode, pgLocUnitEpPOTSStatus2=pgLocUnitEpPOTSStatus2, pgRemUnitEpDS0IdleCode=pgRemUnitEpDS0IdleCode, pgRemUnitEpPOTSStatus1=pgRemUnitEpPOTSStatus1, pgRemUnitEpBridgeSWVer=pgRemUnitEpBridgeSWVer, pgLocUnitEpEntry=pgLocUnitEpEntry, pgLocUnitEpEPortInFrames=pgLocUnitEpEPortInFrames, pgLocUnitEpPOTSEnable1=pgLocUnitEpPOTSEnable1, pgLocUnitEpDSLPortInDiscards=pgLocUnitEpDSLPortInDiscards, pgRemUnitEpDSLPortInFrames=pgRemUnitEpDSLPortInFrames, pgRemUnitEpDSLPortInErrors=pgRemUnitEpDSLPortInErrors, pgRemUnitEpPOTSDS0Alloc=pgRemUnitEpPOTSDS0Alloc, pgRemUnitEpPOTSEnable1=pgRemUnitEpPOTSEnable1, pgLocUnitEpEPortOutFrames=pgLocUnitEpEPortOutFrames, pgLocUnitEpSpanTreeMode=pgLocUnitEpSpanTreeMode, pgRemUnitEpERateMultiplier=pgRemUnitEpERateMultiplier, pgRemUnitEpMACAddr=pgRemUnitEpMACAddr, pgLocUnitEpPOTSStatus1=pgLocUnitEpPOTSStatus1, pgRemUnitEpIndex=pgRemUnitEpIndex, pgRemUnitEpXcvrType=pgRemUnitEpXcvrType, pgRemUnitEp10BaseTLinkStatus=pgRemUnitEp10BaseTLinkStatus, pgLocUnitEpDSLPortInErrors=pgLocUnitEpDSLPortInErrors, pgRemUnitEpPOTSType=pgRemUnitEpPOTSType, pgLocUnitEpEPortInDiscards=pgLocUnitEpEPortInDiscards, pgRemUnitEpEPortInFrames=pgRemUnitEpEPortInFrames, pgRemUnitEpEPortInErrors=pgRemUnitEpEPortInErrors, pgRemUnitEpEthernetDS0Alloc=pgRemUnitEpEthernetDS0Alloc, pgLocUnitEpTable=pgLocUnitEpTable, pgLocUnitEpPOTSEnable2=pgLocUnitEpPOTSEnable2, pgLocUnitEpPOTSDS0Alloc=pgLocUnitEpPOTSDS0Alloc, pgLocUnitEpEncapMode=pgLocUnitEpEncapMode, pgRemUnitEpPOTSStatus2=pgRemUnitEpPOTSStatus2, pgRemUnitEpDSLPortInDiscards=pgRemUnitEpDSLPortInDiscards, pgLocUnitEpDSLPortOutFrames=pgLocUnitEpDSLPortOutFrames, pgRemUnitEpUnitType=pgRemUnitEpUnitType, TempPgUnitType=TempPgUnitType, pgRemUnitEpPOTSEnable2=pgRemUnitEpPOTSEnable2, pgLocUnitEpIndex=pgLocUnitEpIndex, pgRemUnitEpEPortOutFrames=pgRemUnitEpEPortOutFrames, pgLocUnitEpAFE=pgLocUnitEpAFE, pgRemUnitEpDSLPortOutFrames=pgRemUnitEpDSLPortOutFrames, pgRemUnitEpEncapMode=pgRemUnitEpEncapMode, pgLocUnitEpXcvrType=pgLocUnitEpXcvrType, pgLocUnitEpPOTSType=pgLocUnitEpPOTSType, pgLocUnitEpDSLPortInFrames=pgLocUnitEpDSLPortInFrames, pgLocUnitEpMACAddr=pgLocUnitEpMACAddr, pgRemUnitEpEntry=pgRemUnitEpEntry, pgLocUnitEpEPortInErrors=pgLocUnitEpEPortInErrors)
