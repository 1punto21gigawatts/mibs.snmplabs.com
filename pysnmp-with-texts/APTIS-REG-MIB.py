#
# PySNMP MIB module APTIS-REG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/APTIS-REG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:24:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
aptis_reg, = mibBuilder.importSymbols("APTIS-MIB", "aptis-reg")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ModuleIdentity, Unsigned32, TimeTicks, enterprises, iso, IpAddress, MibIdentifier, Gauge32, Counter64, Counter32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ModuleIdentity", "Unsigned32", "TimeTicks", "enterprises", "iso", "IpAddress", "MibIdentifier", "Gauge32", "Counter64", "Counter32", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
aptisRegModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2637, 1, 1, 2))
if mibBuilder.loadTexts: aptisRegModule.setLastUpdated('0004140000Z')
if mibBuilder.loadTexts: aptisRegModule.setOrganization('Nortel Networks')
if mibBuilder.loadTexts: aptisRegModule.setContactInfo(' Technical Support/Customer Service Nortel Networks Postal: 11 Elizabeth Drive Chelmsford, MA 01824 Tel: In the USA: Dial 1-800-758-4827 to contact a Technical Support engineer. Outside the USA: Contact your Regional Nortel Networks Support Prime. For information about the Nortel Networks Network Access Division, go to the World Wide Web (WWW) site at http://www.nortelnetworks.com.')
if mibBuilder.loadTexts: aptisRegModule.setDescription('Registration subtree of Nortel Networks Aptis Enterprise MIB')
aptis_modules = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 1, 1)).setLabel("aptis-modules")
if mibBuilder.loadTexts: aptis_modules.setStatus('current')
if mibBuilder.loadTexts: aptis_modules.setDescription('Subtree to register the values assigned to modules with the MODULE-IDENTITY construct.')
aptis_systems = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 1, 2)).setLabel("aptis-systems")
if mibBuilder.loadTexts: aptis_systems.setStatus('current')
if mibBuilder.loadTexts: aptis_systems.setDescription('Subtree to register the values assigned to complete systems. These are registered in the MIB-II systemGroup.sysObjectID.')
aptis_cards = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 1, 3)).setLabel("aptis-cards")
if mibBuilder.loadTexts: aptis_cards.setStatus('deprecated')
if mibBuilder.loadTexts: aptis_cards.setDescription('Subtree to register the values assigned to slot cards inside systems. These part numbers are no longer being used.')
aptis_components = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 1, 4)).setLabel("aptis-components")
if mibBuilder.loadTexts: aptis_components.setStatus('current')
if mibBuilder.loadTexts: aptis_components.setDescription('Subtree to register the values assigned to managed objects for the system components inside the software. These are referenced in componenentTableEntry.componentType.')
cvx = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 1, 2, 1))
if mibBuilder.loadTexts: cvx.setStatus('current')
if mibBuilder.loadTexts: cvx.setDescription('The CVX product line.')
cvx_1800 = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 1, 2, 1, 1)).setLabel("cvx-1800")
if mibBuilder.loadTexts: cvx_1800.setStatus('current')
if mibBuilder.loadTexts: cvx_1800.setDescription('The 18-slot CVX system.')
cvx_600 = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 1, 2, 1, 2)).setLabel("cvx-600")
if mibBuilder.loadTexts: cvx_600.setStatus('current')
if mibBuilder.loadTexts: cvx_600.setDescription('The 6-slot CVX system.')
assy_725 = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 1, 3, 725)).setLabel("assy-725")
if mibBuilder.loadTexts: assy_725.setStatus('deprecated')
if mibBuilder.loadTexts: assy_725.setDescription('725 Board-level assemblies.')
assy_750 = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 1, 3, 750)).setLabel("assy-750")
if mibBuilder.loadTexts: assy_750.setStatus('deprecated')
if mibBuilder.loadTexts: assy_750.setDescription('750 Top-level assemblies.')
mam_main_board = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 1, 3, 725, 3)).setLabel("mam-main-board")
if mibBuilder.loadTexts: mam_main_board.setStatus('deprecated')
if mibBuilder.loadTexts: mam_main_board.setDescription('725-0003 Modem Access Module main board')
dmm_board = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 1, 3, 725, 4)).setLabel("dmm-board")
if mibBuilder.loadTexts: dmm_board.setStatus('deprecated')
if mibBuilder.loadTexts: dmm_board.setDescription('725-0004 Digital Modem Module')
tsc_main_board = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 1, 3, 725, 5)).setLabel("tsc-main-board")
if mibBuilder.loadTexts: tsc_main_board.setStatus('deprecated')
if mibBuilder.loadTexts: tsc_main_board.setDescription('725-0005 TSC main board')
mibBuilder.exportSymbols("APTIS-REG-MIB", PYSNMP_MODULE_ID=aptisRegModule, aptis_modules=aptis_modules, assy_750=assy_750, aptisRegModule=aptisRegModule, aptis_cards=aptis_cards, tsc_main_board=tsc_main_board, cvx_1800=cvx_1800, cvx_600=cvx_600, aptis_components=aptis_components, mam_main_board=mam_main_board, dmm_board=dmm_board, aptis_systems=aptis_systems, assy_725=assy_725, cvx=cvx)
