#
# PySNMP MIB module REDSTONE-ATM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/REDSTONE-ATM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:55:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
rsMgmt, = mibBuilder.importSymbols("REDSTONE-SMI", "rsMgmt")
RsNextIfIndex, = mibBuilder.importSymbols("REDSTONE-TC", "RsNextIfIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
NotificationType, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter64, iso, ObjectIdentity, Gauge32, MibIdentifier, ModuleIdentity, TimeTicks, Counter32, Unsigned32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter64", "iso", "ObjectIdentity", "Gauge32", "MibIdentifier", "ModuleIdentity", "TimeTicks", "Counter32", "Unsigned32", "Bits")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
rsAtmMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2773, 2, 8))
rsAtmMIB.setRevisions(('1999-08-04 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: rsAtmMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: rsAtmMIB.setLastUpdated('9908040000Z')
if mibBuilder.loadTexts: rsAtmMIB.setOrganization('Redstone Communications, Inc.')
if mibBuilder.loadTexts: rsAtmMIB.setContactInfo(' Redstone Communications, Inc. 5 Carlisle Road Westford MA 01886 USA Tel: +1-978-692-1999 Email: mib@redstonecom.com ')
if mibBuilder.loadTexts: rsAtmMIB.setDescription('The ATM MIB for the Redstone Communications Inc. enterprise.')
rsAtmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1))
rsAtmIfLayer = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 1))
rsAtmAal5IfLayer = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 2))
rsAtmSubIfLayer = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 3))
rsAtmNextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 1, 1), RsNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsAtmNextIfIndex.setStatus('current')
if mibBuilder.loadTexts: rsAtmNextIfIndex.setDescription('Coordinate ifIndex value allocation for entries in rsAtmIfTable. A GET of this object returns the next available ifIndex value to be used to create an entry in the associated interface table; or zero, if no valid ifIndex value is available. This object also returns a value of zero when it is the lexicographic successor of a varbind presented in an SNMP GETNEXT or GETBULK request, for which circumstance it is assumed that ifIndex allocation is unintended. Successive GETs will typically return different values, thus avoiding collisions among cooperating management clients seeking to create table entries simultaneously. ')
rsAtmIfTable = MibTable((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 1, 2), )
if mibBuilder.loadTexts: rsAtmIfTable.setStatus('current')
if mibBuilder.loadTexts: rsAtmIfTable.setDescription('This table contains entries for ATM interfaces present in the system.')
rsAtmIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 1, 2, 1), ).setIndexNames((0, "REDSTONE-ATM-MIB", "rsAtmIfIndex"))
if mibBuilder.loadTexts: rsAtmIfEntry.setStatus('current')
if mibBuilder.loadTexts: rsAtmIfEntry.setDescription('Each entry describes the characteristics of an ATM interface. Creating/deleting entries in this table causes corresponding entries for be created /deleted in ifTable/ifXTable/rsIfTable.')
rsAtmIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rsAtmIfIndex.setStatus('current')
if mibBuilder.loadTexts: rsAtmIfIndex.setDescription('The ifIndex of the ATM interface. When creating entries in this table, suitable values for this object are determined by reading rsAtmNextIfIndex.')
rsAtmIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsAtmIfRowStatus.setStatus('current')
if mibBuilder.loadTexts: rsAtmIfRowStatus.setDescription('Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: rsAtmIfRowStatus rsAtmIfLowerIfIndex In addition, when creating an entry the following conditions must hold: A value for rsAtmIfIndex must have been determined previously, by reading rsAtmNextIfIndex. A corresponding entry in ifTable/ifXTable/rsIfTable is created/destroyed as a result of creating/destroying an entry in this table. ')
rsAtmIfLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 1, 2, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsAtmIfLowerIfIndex.setStatus('current')
if mibBuilder.loadTexts: rsAtmIfLowerIfIndex.setDescription('The ifIndex of an interface over which this ATM interface is to be layered. A value of zero indicates no layering. An implementation may choose to require that a nonzero value be configured at entry creation.')
rsAtmIfIlmiVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsAtmIfIlmiVpi.setStatus('current')
if mibBuilder.loadTexts: rsAtmIfIlmiVpi.setDescription('The VPI of the Ilmi of a major ATM interface.')
rsAtmIfIlmiVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsAtmIfIlmiVci.setStatus('current')
if mibBuilder.loadTexts: rsAtmIfIlmiVci.setDescription('The VCI of the Ilmi of a major ATM interface.')
rsAtmIfIlmiVcd = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsAtmIfIlmiVcd.setStatus('current')
if mibBuilder.loadTexts: rsAtmIfIlmiVcd.setDescription('An integer identifier for the Ilmi, used in conjunction with the command-line interface. The value must be unique among VCs configured on the same ATM interface. ')
rsAtmIfIlmiPollFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsAtmIfIlmiPollFrequency.setStatus('current')
if mibBuilder.loadTexts: rsAtmIfIlmiPollFrequency.setDescription('Use to set the Interim Local Management Interface (ILMI) keepalive timer. This value sets the allowable time between POLL PDU transmissions if there are no pending sequence data PDUs. Use the value 0 to disable ILMI keepalives.')
rsAtmIfIlmiAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsAtmIfIlmiAdminState.setStatus('current')
if mibBuilder.loadTexts: rsAtmIfIlmiAdminState.setDescription('The administrative status of ILMI in the ATM interface.')
rsAtmIfUniVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("version3Dot0", 0), ("version3Dot1", 1), ("version4Dot0", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsAtmIfUniVersion.setStatus('current')
if mibBuilder.loadTexts: rsAtmIfUniVersion.setDescription('Use to specify the User Network Interface (UNI) the router should use when ILMI link auto determination is unsuccesful or ILMI is disabled.')
rsAtmAal5NextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 2, 1), RsNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsAtmAal5NextIfIndex.setStatus('current')
if mibBuilder.loadTexts: rsAtmAal5NextIfIndex.setDescription('Coordinate ifIndex value allocation for entries in rsAtmAal5IfTable. A GET of this object returns the next available ifIndex value to be used to create an entry in the associated interface table; or zero, if no valid ifIndex value is available. This object also returns a value of zero when it is the lexicographic successor of a varbind presented in an SNMP GETNEXT or GETBULK request, for which circumstance it is assumed that ifIndex allocation is unintended. Successive GETs will typically return different values, thus avoiding collisions among cooperating management clients seeking to create table entries simultaneously. ')
rsAtmAal5IfTable = MibTable((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 2, 2), )
if mibBuilder.loadTexts: rsAtmAal5IfTable.setStatus('current')
if mibBuilder.loadTexts: rsAtmAal5IfTable.setDescription('This table contains entries for ATM AAL5 interfaces present in the system.')
rsAtmAal5IfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 2, 2, 1), ).setIndexNames((0, "REDSTONE-ATM-MIB", "rsAtmAal5IfIndex"))
if mibBuilder.loadTexts: rsAtmAal5IfEntry.setStatus('current')
if mibBuilder.loadTexts: rsAtmAal5IfEntry.setDescription('Each entry describes the characteristics of an ATM AAL5 interface. Creating/deleting entries in this table causes corresponding entries for be created /deleted in ifTable/ifXTable/rsIfTable.')
rsAtmAal5IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 2, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rsAtmAal5IfIndex.setStatus('current')
if mibBuilder.loadTexts: rsAtmAal5IfIndex.setDescription('The ifIndex of the ATM AAL5 interface. When creating entries in this table, suitable values for this object are determined by reading rsAtmAal5NextIfIndex.')
rsAtmAal5IfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 2, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsAtmAal5IfRowStatus.setStatus('current')
if mibBuilder.loadTexts: rsAtmAal5IfRowStatus.setDescription('Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: rsAtmAal5IfRowStatus rsAtmAal5IfLowerIfIndex In addition, when creating an entry the following conditions must hold: A value for rsAtmAal5IfIndex must have been determined previously, by reading rsAtmAal5NextIfIndex. A corresponding entry in ifTable/ifXTable/rsIfTable is created/destroyed as a result of creating/destroying an entry in this table. ')
rsAtmAal5IfLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 2, 2, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsAtmAal5IfLowerIfIndex.setStatus('current')
if mibBuilder.loadTexts: rsAtmAal5IfLowerIfIndex.setDescription('The ifIndex of an ATM interface over which this ATM AAL5 interface is to be layered. A value of zero indicates no layering. An implementation may choose to require that a nonzero value be configured at entry creation.')
rsAtmSubIfNextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 3, 1), RsNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsAtmSubIfNextIfIndex.setStatus('current')
if mibBuilder.loadTexts: rsAtmSubIfNextIfIndex.setDescription('Coordinate ifIndex value allocation for entries in rsAtmSubIfTable. A GET of this object returns the next available ifIndex value to be used to create an entry in the associated interface table; or zero, if no valid ifIndex value is available. This object also returns a value of zero when it is the lexicographic successor of a varbind presented in an SNMP GETNEXT or GETBULK request, for which circumstance it is assumed that ifIndex allocation is unintended. Successive GETs will typically return different values, thus avoiding collisions among cooperating management clients seeking to create table entries simultaneously. ')
rsAtmSubIfTable = MibTable((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 3, 2), )
if mibBuilder.loadTexts: rsAtmSubIfTable.setStatus('current')
if mibBuilder.loadTexts: rsAtmSubIfTable.setDescription('This table contains entries for ATM Subinterfaces present in the system.')
rsAtmSubIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 3, 2, 1), ).setIndexNames((0, "REDSTONE-ATM-MIB", "rsAtmSubIfIndex"))
if mibBuilder.loadTexts: rsAtmSubIfEntry.setStatus('current')
if mibBuilder.loadTexts: rsAtmSubIfEntry.setDescription('Each entry describes the characteristics of an ATM Subinterface. Creating/deleting entries in this table causes corresponding entries for be created /deleted in ifTable/ifXTable/rsIfTable.')
rsAtmSubIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 3, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rsAtmSubIfIndex.setStatus('current')
if mibBuilder.loadTexts: rsAtmSubIfIndex.setDescription('The ifIndex of the ATM Subinterface. When creating entries in this table, suitable values for this object are determined by reading rsAtmSubNextIfIndex.')
rsAtmSubIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 3, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsAtmSubIfRowStatus.setStatus('current')
if mibBuilder.loadTexts: rsAtmSubIfRowStatus.setDescription('Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: rsAtmSubIfRowStatus rsAtmSubIfLowerIndex In addition, when creating an entry the following conditions must hold: A value for rsAtmSubIfIndex must have been determined previously, by reading rsAtmSubIfNextIfIndex. A corresponding entry in ifTable/ifXTable/rsIfTable is created/destroyed as a result of creating/destroying an entry in this table. ')
rsAtmSubIfDistinguisher = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 3, 2, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsAtmSubIfDistinguisher.setStatus('current')
if mibBuilder.loadTexts: rsAtmSubIfDistinguisher.setDescription('An integer identifier for the sub interface, used in conjunction with the command-line interface. It is provided here for cross-reference purposes only. The value must be unique among sub interfaces configured on the same underlying ATM adaptation layer. The upper bound for the value is further constrained to be identical with the maximum number of sub interfaces supported by the lower interface. If this object is not configured, a value will be allocated internally and can be queried after table entry creation has succeeded. ')
rsAtmSubIfLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 3, 2, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsAtmSubIfLowerIfIndex.setStatus('current')
if mibBuilder.loadTexts: rsAtmSubIfLowerIfIndex.setDescription('The ifIndex of an ATM AAL5 interface over which this ATM Subinterface is to be layered. A value of zero indicates no layering. An implementation may choose to require that a nonzero value be configured at entry creation.')
rsAtmSubIfVccTable = MibTable((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 3, 3), )
if mibBuilder.loadTexts: rsAtmSubIfVccTable.setStatus('current')
if mibBuilder.loadTexts: rsAtmSubIfVccTable.setDescription('This table contains entries for ATM VCCs configured on ATM Subinterfaces present in the system. An implementation may constrain the number of VCCs permitted to be configured per ATM Subinterface; in particular, an implementation may restrict each ATM Subinterface to have a single VCC. Attributes in this entry can only be configured at entry creation, and remain fixed for the lifetime of the entry. ')
rsAtmSubIfVccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 3, 3, 1), ).setIndexNames((0, "REDSTONE-ATM-MIB", "rsAtmSubIfIndex"), (0, "REDSTONE-ATM-MIB", "rsAtmSubIfVccVpi"), (0, "REDSTONE-ATM-MIB", "rsAtmSubIfVccVci"))
if mibBuilder.loadTexts: rsAtmSubIfVccEntry.setStatus('current')
if mibBuilder.loadTexts: rsAtmSubIfVccEntry.setDescription('Each entry describes the characteristics of an ATM Subinterface VCC.')
rsAtmSubIfVccVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: rsAtmSubIfVccVpi.setStatus('current')
if mibBuilder.loadTexts: rsAtmSubIfVccVpi.setDescription('The VPI of the ATM VCC used by this subinterface.')
rsAtmSubIfVccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: rsAtmSubIfVccVci.setStatus('current')
if mibBuilder.loadTexts: rsAtmSubIfVccVci.setDescription('The VCI of the ATM VCC used by this subinterface.')
rsAtmSubIfVccRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 3, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsAtmSubIfVccRowStatus.setStatus('current')
if mibBuilder.loadTexts: rsAtmSubIfVccRowStatus.setDescription('Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: rsAtmSubIfVccRowStatus In addition, when creating an entry the following conditions must hold: The ATM Subinterface identified by rsAtmSubIfIndex must exist. A positive value configured for rsAtmSubIfVccVcd must not already be assigned to an existing VCC. For each value of rsAtmSubIfVccServiceCategory, additional dependent objects in the entry require configuration as identified here: rsAtmSubIfVccServiceCategory Requires configuration of: ------------------------------------------------------------ ubr <none> ubrPcr rsAtmSubIfVccPcr nrtVbr rsAtmSubIfVccPcr rsAtmSubIfVccScr rsAtmSubIfVccMbs ------------------------------------------------------------ Attributes in this entry can only be configured at entry creation, and remain fixed for the lifetime of the entry. ')
rsAtmSubIfVccVcd = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsAtmSubIfVccVcd.setStatus('current')
if mibBuilder.loadTexts: rsAtmSubIfVccVcd.setDescription('An integer identifier for the circuit, used in conjunction with the command-line interface. It is provided here for cross-reference purposes only. The value must be unique among VCCs configured on the same underlying ATM interface. The upper bound for the value is further constrained to be identical with the maximum number of VCCs supported by the underlying ATM interface. If this object is not configured, or is configured with a value of zero, a value will be allocated internally and can be queried after table entry creation has succeeded. ')
rsAtmSubIfVccType = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("rfc1483VcMux", 0), ("rfc1483Llc", 1))).clone('rfc1483VcMux')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsAtmSubIfVccType.setStatus('current')
if mibBuilder.loadTexts: rsAtmSubIfVccType.setDescription('Specifies the encapsulation used by the circuit to carry IP datagrams. Encapsulations are as specified in RFC1483 Multiprotocol Interconnect over ATM.')
rsAtmSubIfVccServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ubr", 0), ("ubrPcr", 1), ("nrtVbr", 2))).clone('ubr')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsAtmSubIfVccServiceCategory.setStatus('current')
if mibBuilder.loadTexts: rsAtmSubIfVccServiceCategory.setDescription('Service category for this circuit: ubr Unspecified bit rate (best effort). ubrPcr Unspecified Bit Rate with Peak Cell Rate limit. nrtVbr Non-realtime Variable Bit Rate. ')
rsAtmSubIfVccPcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 3, 3, 1, 7), Integer32()).setUnits('cells per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsAtmSubIfVccPcr.setStatus('current')
if mibBuilder.loadTexts: rsAtmSubIfVccPcr.setDescription('Peak Cell Rate, in cells per second, of this circuit. This parameter is only required when rsAtmSubIfVccServiceCategory is configured to have one of the following values: ubrPcr nrtVbr ')
rsAtmSubIfVccScr = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 3, 3, 1, 8), Integer32()).setUnits('cells per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsAtmSubIfVccScr.setStatus('current')
if mibBuilder.loadTexts: rsAtmSubIfVccScr.setDescription('Sustained Cell Rate, in cells per second, of this circuit. This parameter is only required when rsAtmSubIfVccServiceCategory is configured to have one of the following values: nrtVbr ')
rsAtmSubIfVccMbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 8, 1, 3, 3, 1, 9), Integer32()).setUnits('cells').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsAtmSubIfVccMbs.setStatus('current')
if mibBuilder.loadTexts: rsAtmSubIfVccMbs.setDescription('Maximum Burst Size, in cells, of this circuit. This parameter is only required when rsAtmSubIfVccServiceCategory is configured to have one of the following values: nrtVbr ')
rsAtmConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 8, 4))
rsAtmCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 8, 4, 1))
rsAtmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 8, 4, 2))
rsAtmCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2773, 2, 8, 4, 1, 1)).setObjects(("REDSTONE-ATM-MIB", "rsAtmGroup"), ("REDSTONE-ATM-MIB", "rsAtmAal5Group"), ("REDSTONE-ATM-MIB", "rsAtmSubIfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsAtmCompliance = rsAtmCompliance.setStatus('current')
if mibBuilder.loadTexts: rsAtmCompliance.setDescription('The compliance statement for entities which implement the Redstone ATM MIB.')
rsAtmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2773, 2, 8, 4, 2, 1)).setObjects(("REDSTONE-ATM-MIB", "rsAtmNextIfIndex"), ("REDSTONE-ATM-MIB", "rsAtmIfRowStatus"), ("REDSTONE-ATM-MIB", "rsAtmIfLowerIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsAtmGroup = rsAtmGroup.setStatus('current')
if mibBuilder.loadTexts: rsAtmGroup.setDescription('A collection of objects providing management of ATM interfaces in a Redstone product.')
rsAtmAal5Group = ObjectGroup((1, 3, 6, 1, 4, 1, 2773, 2, 8, 4, 2, 2)).setObjects(("REDSTONE-ATM-MIB", "rsAtmAal5NextIfIndex"), ("REDSTONE-ATM-MIB", "rsAtmAal5IfRowStatus"), ("REDSTONE-ATM-MIB", "rsAtmAal5IfLowerIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsAtmAal5Group = rsAtmAal5Group.setStatus('current')
if mibBuilder.loadTexts: rsAtmAal5Group.setDescription('A collection of objects providing management of AAL5 interfaces in a Redstone product.')
rsAtmSubIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2773, 2, 8, 4, 2, 3)).setObjects(("REDSTONE-ATM-MIB", "rsAtmSubIfNextIfIndex"), ("REDSTONE-ATM-MIB", "rsAtmSubIfRowStatus"), ("REDSTONE-ATM-MIB", "rsAtmSubIfLowerIfIndex"), ("REDSTONE-ATM-MIB", "rsAtmSubIfVccRowStatus"), ("REDSTONE-ATM-MIB", "rsAtmSubIfVccVcd"), ("REDSTONE-ATM-MIB", "rsAtmSubIfVccType"), ("REDSTONE-ATM-MIB", "rsAtmSubIfVccServiceCategory"), ("REDSTONE-ATM-MIB", "rsAtmSubIfVccPcr"), ("REDSTONE-ATM-MIB", "rsAtmSubIfVccScr"), ("REDSTONE-ATM-MIB", "rsAtmSubIfVccMbs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsAtmSubIfGroup = rsAtmSubIfGroup.setStatus('current')
if mibBuilder.loadTexts: rsAtmSubIfGroup.setDescription('A collection of objects providing management of ATM subinterfaces in a Redstone product.')
mibBuilder.exportSymbols("REDSTONE-ATM-MIB", rsAtmSubIfVccMbs=rsAtmSubIfVccMbs, rsAtmAal5IfRowStatus=rsAtmAal5IfRowStatus, rsAtmSubIfVccTable=rsAtmSubIfVccTable, rsAtmAal5IfLayer=rsAtmAal5IfLayer, rsAtmAal5IfIndex=rsAtmAal5IfIndex, rsAtmIfLayer=rsAtmIfLayer, rsAtmSubIfNextIfIndex=rsAtmSubIfNextIfIndex, rsAtmAal5IfTable=rsAtmAal5IfTable, rsAtmGroups=rsAtmGroups, rsAtmGroup=rsAtmGroup, rsAtmIfUniVersion=rsAtmIfUniVersion, rsAtmSubIfLowerIfIndex=rsAtmSubIfLowerIfIndex, rsAtmIfTable=rsAtmIfTable, rsAtmAal5NextIfIndex=rsAtmAal5NextIfIndex, rsAtmMIB=rsAtmMIB, rsAtmSubIfVccVcd=rsAtmSubIfVccVcd, rsAtmSubIfVccServiceCategory=rsAtmSubIfVccServiceCategory, rsAtmSubIfGroup=rsAtmSubIfGroup, rsAtmIfEntry=rsAtmIfEntry, rsAtmNextIfIndex=rsAtmNextIfIndex, PYSNMP_MODULE_ID=rsAtmMIB, rsAtmSubIfEntry=rsAtmSubIfEntry, rsAtmSubIfVccVci=rsAtmSubIfVccVci, rsAtmIfLowerIfIndex=rsAtmIfLowerIfIndex, rsAtmAal5IfEntry=rsAtmAal5IfEntry, rsAtmCompliances=rsAtmCompliances, rsAtmIfIlmiVcd=rsAtmIfIlmiVcd, rsAtmSubIfRowStatus=rsAtmSubIfRowStatus, rsAtmSubIfVccScr=rsAtmSubIfVccScr, rsAtmIfIlmiVci=rsAtmIfIlmiVci, rsAtmSubIfTable=rsAtmSubIfTable, rsAtmAal5Group=rsAtmAal5Group, rsAtmIfIlmiVpi=rsAtmIfIlmiVpi, rsAtmIfRowStatus=rsAtmIfRowStatus, rsAtmIfIndex=rsAtmIfIndex, rsAtmSubIfLayer=rsAtmSubIfLayer, rsAtmSubIfVccEntry=rsAtmSubIfVccEntry, rsAtmIfIlmiAdminState=rsAtmIfIlmiAdminState, rsAtmSubIfVccType=rsAtmSubIfVccType, rsAtmSubIfIndex=rsAtmSubIfIndex, rsAtmSubIfDistinguisher=rsAtmSubIfDistinguisher, rsAtmIfIlmiPollFrequency=rsAtmIfIlmiPollFrequency, rsAtmSubIfVccRowStatus=rsAtmSubIfVccRowStatus, rsAtmObjects=rsAtmObjects, rsAtmConformance=rsAtmConformance, rsAtmCompliance=rsAtmCompliance, rsAtmSubIfVccVpi=rsAtmSubIfVccVpi, rsAtmAal5IfLowerIfIndex=rsAtmAal5IfLowerIfIndex, rsAtmSubIfVccPcr=rsAtmSubIfVccPcr)
