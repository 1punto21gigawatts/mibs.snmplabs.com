#
# PySNMP MIB module TIARA-IP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIARA-IP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:16:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, TimeTicks, Unsigned32, ModuleIdentity, Counter32, Gauge32, iso, ObjectIdentity, Bits, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "TimeTicks", "Unsigned32", "ModuleIdentity", "Counter32", "Gauge32", "iso", "ObjectIdentity", "Bits", "IpAddress", "Counter64")
TruthValue, TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "RowStatus", "DisplayString")
tiaraMgmt, = mibBuilder.importSymbols("TIARA-NETWORKS-SMI", "tiaraMgmt")
tiaraIpMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 3174, 2, 23))
if mibBuilder.loadTexts: tiaraIpMib.setLastUpdated('0001270000Z')
if mibBuilder.loadTexts: tiaraIpMib.setOrganization('Tiara Networks Inc.')
if mibBuilder.loadTexts: tiaraIpMib.setContactInfo(' Tiara Networks Customer Support 525 Race Street, Suite 100, San Jose, CA 95126 USA Tel: +1 408-216-4700 Fax: +1 408-216-4701 E-mail: support@tiaranetworks.com')
if mibBuilder.loadTexts: tiaraIpMib.setDescription('This MIB defines objects for IP addressable interfaces and the static routing table.')
tiaraIpRoutingEnable = MibScalar((1, 3, 6, 1, 4, 1, 3174, 2, 23, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tiaraIpRoutingEnable.setStatus('current')
if mibBuilder.loadTexts: tiaraIpRoutingEnable.setDescription('This object toggles between the IP routing and the IP muxing modes. If the IP routing mode is disabled, the IP muxing mode is enabled. If the IP routing mode is enabled, the IP muxing mode is disabled.')
tiaraIpIfTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 23, 2), )
if mibBuilder.loadTexts: tiaraIpIfTable.setStatus('current')
if mibBuilder.loadTexts: tiaraIpIfTable.setDescription('The TiaraIpIfTable defines objects for IP addressable interfaces that are currently configured on the Tiara system. It maps a unique index value to each interface.')
tiaraIpIfTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 23, 2, 1), ).setIndexNames((0, "TIARA-IP-MIB", "tiaraIpIfIndex"))
if mibBuilder.loadTexts: tiaraIpIfTableEntry.setStatus('current')
if mibBuilder.loadTexts: tiaraIpIfTableEntry.setDescription('An entry in the TiaraIpIfTable that defines objects for a particular IP interface.')
tiaraIpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 23, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tiaraIpIfIndex.setStatus('current')
if mibBuilder.loadTexts: tiaraIpIfIndex.setDescription('This value identifies a particular IP interface and serves as an index for the tiarIpIfTable.')
tiaraIpIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 23, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tiaraIpIfName.setStatus('current')
if mibBuilder.loadTexts: tiaraIpIfName.setDescription('A unique name associated with an IP interface.')
tiaraIpIfAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 23, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tiaraIpIfAddr.setStatus('current')
if mibBuilder.loadTexts: tiaraIpIfAddr.setDescription('The unique IP address of an IP interface.')
tiaraIpIfMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 23, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tiaraIpIfMask.setStatus('current')
if mibBuilder.loadTexts: tiaraIpIfMask.setDescription('The network mask associated with an IP interface.')
tiaraIpIfPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 23, 2, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tiaraIpIfPeerAddr.setStatus('current')
if mibBuilder.loadTexts: tiaraIpIfPeerAddr.setDescription('The IP address of the peer which is the other end of a point-to-point link. The peer IP address object is only valid for a WAN or point-to-point interface.')
tiaraIpIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 23, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ethernet", 1), ("wan", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tiaraIpIfType.setStatus('current')
if mibBuilder.loadTexts: tiaraIpIfType.setDescription('This object identifies the type of interface as either Ethernet or WAN.')
tiaraStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 23, 3), )
if mibBuilder.loadTexts: tiaraStaticRouteTable.setStatus('current')
if mibBuilder.loadTexts: tiaraStaticRouteTable.setDescription('A list of static route table entries for this entity. The following variables are required for row creation: tiaraStaticRouteIndex = 65535 tiaraStaticRouteNetworkAddr = Destination IP address tiaraStaticRouteNetworkMask = Subnet mask tiaraStaticRouteGatewayAddr = Next hop IP address tiaraStaticRouteNoOfHops = Number of hops or metric tiaraStaticRouteRowStatus = createAndGo')
tiaraStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 23, 3, 1), ).setIndexNames((0, "TIARA-IP-MIB", "tiaraStaticRouteIndex"))
if mibBuilder.loadTexts: tiaraStaticRouteEntry.setStatus('current')
if mibBuilder.loadTexts: tiaraStaticRouteEntry.setDescription('A single static route entry in the static route table.')
tiaraStaticRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 23, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: tiaraStaticRouteIndex.setStatus('current')
if mibBuilder.loadTexts: tiaraStaticRouteIndex.setDescription('A numeric index for static route table entries. This index is internally generated by the SNMP agent, and it uniquely identifies a single entry in the table. To create a row in the table, use the invalid value 65535 for this variable. To query any variable in this table, use this variable, which can be found for a given (network address-network mask-gateway address) tuple using the snmp-walk operation.')
tiaraStaticRouteNetworkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 23, 3, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tiaraStaticRouteNetworkAddr.setStatus('current')
if mibBuilder.loadTexts: tiaraStaticRouteNetworkAddr.setDescription('The destination IP address of this route. This can be either a complete host address for one particular host or or a network address for all the hosts on that network. An entry with a value of 0.0.0.0 for the network address is considered a default route.')
tiaraStaticRouteNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 23, 3, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tiaraStaticRouteNetworkMask.setStatus('current')
if mibBuilder.loadTexts: tiaraStaticRouteNetworkMask.setDescription('The network mask associated with the network address')
tiaraStaticRouteGatewayAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 23, 3, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tiaraStaticRouteGatewayAddr.setStatus('current')
if mibBuilder.loadTexts: tiaraStaticRouteGatewayAddr.setDescription('This can either be the IP address of a next hop router or the IP address of a directly connected network. The next hop router receives datagrams from the Tiara system and forwards them to the final destination. This can also be an interface name.')
tiaraStaticRouteNoOfHops = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 23, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tiaraStaticRouteNoOfHops.setStatus('current')
if mibBuilder.loadTexts: tiaraStaticRouteNoOfHops.setDescription('The number of hops for this route.')
tiaraStaticRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 23, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tiaraStaticRouteRowStatus.setStatus('current')
if mibBuilder.loadTexts: tiaraStaticRouteRowStatus.setDescription('Used to configure or delete a static route. To configure a route, set the value of this object to createAndGo. To delete a route, set the value of this object to destroy.')
mibBuilder.exportSymbols("TIARA-IP-MIB", tiaraIpRoutingEnable=tiaraIpRoutingEnable, tiaraStaticRouteRowStatus=tiaraStaticRouteRowStatus, tiaraIpIfAddr=tiaraIpIfAddr, tiaraIpIfPeerAddr=tiaraIpIfPeerAddr, tiaraStaticRouteTable=tiaraStaticRouteTable, tiaraStaticRouteEntry=tiaraStaticRouteEntry, tiaraStaticRouteGatewayAddr=tiaraStaticRouteGatewayAddr, tiaraIpIfTable=tiaraIpIfTable, tiaraIpIfName=tiaraIpIfName, tiaraStaticRouteNoOfHops=tiaraStaticRouteNoOfHops, tiaraIpIfMask=tiaraIpIfMask, tiaraIpIfType=tiaraIpIfType, PYSNMP_MODULE_ID=tiaraIpMib, tiaraIpIfTableEntry=tiaraIpIfTableEntry, tiaraStaticRouteIndex=tiaraStaticRouteIndex, tiaraStaticRouteNetworkAddr=tiaraStaticRouteNetworkAddr, tiaraIpIfIndex=tiaraIpIfIndex, tiaraIpMib=tiaraIpMib, tiaraStaticRouteNetworkMask=tiaraStaticRouteNetworkMask)
