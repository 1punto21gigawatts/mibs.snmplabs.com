#
# PySNMP MIB module WWP-LEOS-INFORM-STATUS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-INFORM-STATUS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:37:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
InetAddressType, InetAddress, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetAddressPrefixLength")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
IpAddress, Gauge32, ModuleIdentity, Bits, TimeTicks, MibIdentifier, Counter32, NotificationType, iso, Integer32, Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Gauge32", "ModuleIdentity", "Bits", "TimeTicks", "MibIdentifier", "Counter32", "NotificationType", "iso", "Integer32", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wwpModulesLeos, = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos")
wwpLeosInformStatusMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42))
wwpLeosInformStatusMIB.setRevisions(('2012-03-19 00:00', '2010-09-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: wwpLeosInformStatusMIB.setRevisionsDescriptions(('This MIB module defines managed objects for Reliable Trap Feature on WWP devices.', 'Initial creation.',))
if mibBuilder.loadTexts: wwpLeosInformStatusMIB.setLastUpdated('201203190000Z')
if mibBuilder.loadTexts: wwpLeosInformStatusMIB.setOrganization('Ciena, Inc')
if mibBuilder.loadTexts: wwpLeosInformStatusMIB.setContactInfo(' Mib Meister 115 North Sullivan Road Spokane Valley, WA 99037 USA Phone: +1 509 242 9000 Email: support@ciena.com')
if mibBuilder.loadTexts: wwpLeosInformStatusMIB.setDescription('New table wwpLeosInetTargetInformStatusTable has been added to support INET addressing.')
wwpLeosInformStatusMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1))
wwpLeosInformStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1))
wwpLeosInformStatusMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 2))
wwpLeosInformStatusMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 2, 0))
wwpLeosInformStatusMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 3))
wwpLeosInformStatusMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 3, 1))
wwpLeosInformStatusMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 3, 2))
wwpLeosInformStatusGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 1))
wwpLeosInformStatusReliableTrapState = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosInformStatusReliableTrapState.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusReliableTrapState.setDescription('Reliable Trap State.')
wwpLeosInformStatusReliableTrapStatsClear = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosInformStatusReliableTrapStatsClear.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusReliableTrapStatsClear.setDescription('Get on this object will always return none. Setting this object to clear(1) will clear Reliable Trap Statistics.')
wwpLeosInformStatusTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 2), )
if mibBuilder.loadTexts: wwpLeosInformStatusTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusTable.setDescription('Table of UserAuth Providers.')
wwpLeosInformStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 2, 1), ).setIndexNames((0, "WWP-LEOS-INFORM-STATUS-MIB", "wwpLeosInformStatusTargetIp"), (0, "WWP-LEOS-INFORM-STATUS-MIB", "wwpLeosInformStatusTargetPort"))
if mibBuilder.loadTexts: wwpLeosInformStatusEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusEntry.setDescription('An entry for each User Authorization Provider.')
wwpLeosInformStatusTargetIp = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 2, 1, 1), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wwpLeosInformStatusTargetIp.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusTargetIp.setDescription('Ip Address of Manager.')
wwpLeosInformStatusTargetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: wwpLeosInformStatusTargetPort.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusTargetPort.setDescription('Udp Port of Manager.')
wwpLeosInformStatusPendingInforms = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInformStatusPendingInforms.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusPendingInforms.setDescription("Count of pending informs in manager's inform Queue.")
wwpLeosInformStatusLostInforms = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInformStatusLostInforms.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusLostInforms.setDescription("Count of lost informs in manager's inform queue since system restart.")
wwpLeosInformStatusDroppedInforms = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInformStatusDroppedInforms.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusDroppedInforms.setDescription("Count of dropped informs in manager's inform queue since last successful transmission.")
wwpLeosInformStatusTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 2, 1, 6), Unsigned32()).setUnits('centi-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInformStatusTimeout.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusTimeout.setDescription('Timeout value configured for this manager in 1/100 secs units.')
wwpLeosInformStatusRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInformStatusRetries.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusRetries.setDescription('Retries value configured for this manager.')
wwpLeosInformStatusCurrentTimeoutValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 2, 1, 8), Unsigned32()).setUnits('centi-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInformStatusCurrentTimeoutValue.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusCurrentTimeoutValue.setDescription('Current timeout value in 1/100 secs units.')
wwpLeosInformStatusCurrentRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInformStatusCurrentRetries.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusCurrentRetries.setDescription('Current retry value.')
wwpLeosInformStatusTotalTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInformStatusTotalTimeouts.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusTotalTimeouts.setDescription('Total timeouts for this manager.')
wwpLeosInformStatusTotalAcknowledgedInforms = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInformStatusTotalAcknowledgedInforms.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusTotalAcknowledgedInforms.setDescription('Total acknowledged informs for this manager.')
wwpLeosInformStatusMaxTransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInformStatusMaxTransmissions.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusMaxTransmissions.setDescription('Max transmissions of an inform for this manager.')
wwpLeosInformStatusMaxDelayToAcknowledgeInform = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 2, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInformStatusMaxDelayToAcknowledgeInform.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusMaxDelayToAcknowledgeInform.setDescription('Max delay to acknowledge an informs for this manager.')
wwpLeosInformStatusLastDiscardedInformTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 2, 1, 14), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInformStatusLastDiscardedInformTimeStamp.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusLastDiscardedInformTimeStamp.setDescription('Time Stamp of last dropped notification')
wwpLeosInformStatusResend = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("send", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosInformStatusResend.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusResend.setDescription("Setting this object to send(1) will cause it to send any pending informs from the manager's inform queue ")
wwpLeosInformStatusClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosInformStatusClearStats.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformStatusClearStats.setDescription('Setting this object to clear(1) will clear reliable trap statistics for this manager')
wwpLeosInetTargetInformStatusTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 3), )
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusTable.setDescription('Table of UserAuth Providers.')
wwpLeosInetTargetInformStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 3, 1), ).setIndexNames((0, "WWP-LEOS-INFORM-STATUS-MIB", "wwpLeosInetTargetInformStatusInetAddrType"), (0, "WWP-LEOS-INFORM-STATUS-MIB", "wwpLeosInetTargetInformStatusInetAddr"), (0, "WWP-LEOS-INFORM-STATUS-MIB", "wwpLeosInetTargetInformStatusTargetPort"))
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusEntry.setDescription('An entry for each User Authorization Provider.')
wwpLeosInetTargetInformStatusInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 3, 1, 1), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusInetAddrType.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusInetAddrType.setDescription('Inet Address type of Manager. Used in conjunction with wwpLeosInetTargetInformStatusInetAddr When representing : ipv4 : wwpLeosInetTargetInformStatusInetAddr should be compliant with InetAddressIPv4 from RFC 4001 ipv6 : wwpLeosInetTargetInformStatusInetAddr should be compliant with InetAddressIPv6 from RFC 4001')
wwpLeosInetTargetInformStatusInetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 3, 1, 2), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusInetAddr.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusInetAddr.setDescription('Inet Address of Manager. This OID should be used in conjuction with wwpLeosInetTargetInformStatusInetAddrType. The InetAddress specified here will be compliant with RFC 4001.')
wwpLeosInetTargetInformStatusTargetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 3, 1, 3), Unsigned32())
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusTargetPort.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusTargetPort.setDescription('Udp Port of Manager.')
wwpLeosInetTargetInformStatusPendingInforms = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusPendingInforms.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusPendingInforms.setDescription("Count of pending informs in manager's inform Queue.")
wwpLeosInetTargetInformStatusLostInforms = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusLostInforms.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusLostInforms.setDescription("Count of lost informs in manager's inform queue since system restart.")
wwpLeosInetTargetInformStatusDroppedInforms = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusDroppedInforms.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusDroppedInforms.setDescription("Count of dropped informs in manager's inform queue since last successful transmission.")
wwpLeosInetTargetInformStatusTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 3, 1, 7), Unsigned32()).setUnits('centi-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusTimeout.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusTimeout.setDescription('Timeout value configured for this manager in 1/100 secs units.')
wwpLeosInetTargetInformStatusRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusRetries.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusRetries.setDescription('Retries value configured for this manager.')
wwpLeosInetTargetInformStatusCurrentTimeoutValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 3, 1, 9), Unsigned32()).setUnits('centi-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusCurrentTimeoutValue.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusCurrentTimeoutValue.setDescription('Current timeout value in 1/100 secs units.')
wwpLeosInetTargetInformStatusCurrentRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusCurrentRetries.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusCurrentRetries.setDescription('Current retry value.')
wwpLeosInetTargetInformStatusTotalTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusTotalTimeouts.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusTotalTimeouts.setDescription('Total timeouts for this manager.')
wwpLeosInetTargetInformStatusTotalAcknowledgedInforms = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 3, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusTotalAcknowledgedInforms.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusTotalAcknowledgedInforms.setDescription('Total acknowledged informs for this manager.')
wwpLeosInetTargetInformStatusMaxTransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 3, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusMaxTransmissions.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusMaxTransmissions.setDescription('Max transmissions of an inform for this manager.')
wwpLeosInetTargetInformStatusMaxDelayToAcknowledgeInform = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 3, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusMaxDelayToAcknowledgeInform.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusMaxDelayToAcknowledgeInform.setDescription('Max delay to acknowledge an informs for this manager.')
wwpLeosInetTargetInformStatusLastDiscardedInformTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 3, 1, 15), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusLastDiscardedInformTimeStamp.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusLastDiscardedInformTimeStamp.setDescription('Time Stamp of last dropped notification')
wwpLeosInetTargetInformStatusResend = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("send", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusResend.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusResend.setDescription("Setting this object to send(1) will cause it to send any pending informs from the manager's inform queue ")
wwpLeosInetTargetInformStatusClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 1, 1, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusClearStats.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusClearStats.setDescription('Setting this object to clear(1) will clear reliable trap statistics for this manager')
wwpLeosInformDiscardNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 2, 0, 1)).setObjects(("WWP-LEOS-INFORM-STATUS-MIB", "wwpLeosInformStatusTargetIp"), ("WWP-LEOS-INFORM-STATUS-MIB", "wwpLeosInformStatusLostInforms"), ("WWP-LEOS-INFORM-STATUS-MIB", "wwpLeosInformStatusLastDiscardedInformTimeStamp"))
if mibBuilder.loadTexts: wwpLeosInformDiscardNotification.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInformDiscardNotification.setDescription("A wwpLeosInformDiscardNotification notification is sent whenever a notification is overwritten in manager's inform queue and previously generated inform request times out.")
wwpLeosInetTargetInformDiscardNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 2, 0, 2)).setObjects(("WWP-LEOS-INFORM-STATUS-MIB", "wwpLeosInetTargetInformStatusInetAddr"), ("WWP-LEOS-INFORM-STATUS-MIB", "wwpLeosInetTargetInformStatusInetAddrType"), ("WWP-LEOS-INFORM-STATUS-MIB", "wwpLeosInetTargetInformStatusLostInforms"), ("WWP-LEOS-INFORM-STATUS-MIB", "wwpLeosInetTargetInformStatusLastDiscardedInformTimeStamp"))
if mibBuilder.loadTexts: wwpLeosInetTargetInformDiscardNotification.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformDiscardNotification.setDescription("This notification is sent whenever a notification is overwritten in manager's inform queue and previously generated inform request times out. This notification supports inet addressing.")
wwpLeosInetTargetInformStatusCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 3, 1, 1)).setObjects(("WWP-LEOS-INFORM-STATUS-MIB", "wwpLeosInetTargetInformStatusIPv6Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    wwpLeosInetTargetInformStatusCompliance = wwpLeosInetTargetInformStatusCompliance.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusCompliance.setDescription('The compliance statement of the wwpLeosInform MIB.')
wwpLeosInetTargetInformStatusIPv6Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6141, 2, 60, 42, 3, 2, 1)).setObjects(("WWP-LEOS-INFORM-STATUS-MIB", "wwpLeosInetTargetInformStatusInetAddrType"), ("WWP-LEOS-INFORM-STATUS-MIB", "wwpLeosInetTargetInformStatusInetAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    wwpLeosInetTargetInformStatusIPv6Group = wwpLeosInetTargetInformStatusIPv6Group.setStatus('current')
if mibBuilder.loadTexts: wwpLeosInetTargetInformStatusIPv6Group.setDescription('Inform status objects for IPv6 address.')
mibBuilder.exportSymbols("WWP-LEOS-INFORM-STATUS-MIB", wwpLeosInformStatusDroppedInforms=wwpLeosInformStatusDroppedInforms, wwpLeosInetTargetInformStatusCurrentRetries=wwpLeosInetTargetInformStatusCurrentRetries, wwpLeosInformStatusMIB=wwpLeosInformStatusMIB, wwpLeosInformStatus=wwpLeosInformStatus, wwpLeosInetTargetInformStatusMaxDelayToAcknowledgeInform=wwpLeosInetTargetInformStatusMaxDelayToAcknowledgeInform, wwpLeosInetTargetInformStatusCompliance=wwpLeosInetTargetInformStatusCompliance, wwpLeosInetTargetInformStatusTotalAcknowledgedInforms=wwpLeosInetTargetInformStatusTotalAcknowledgedInforms, wwpLeosInformStatusTable=wwpLeosInformStatusTable, wwpLeosInetTargetInformStatusLastDiscardedInformTimeStamp=wwpLeosInetTargetInformStatusLastDiscardedInformTimeStamp, wwpLeosInetTargetInformStatusClearStats=wwpLeosInetTargetInformStatusClearStats, wwpLeosInformStatusTotalTimeouts=wwpLeosInformStatusTotalTimeouts, PYSNMP_MODULE_ID=wwpLeosInformStatusMIB, wwpLeosInformStatusReliableTrapStatsClear=wwpLeosInformStatusReliableTrapStatsClear, wwpLeosInetTargetInformStatusResend=wwpLeosInetTargetInformStatusResend, wwpLeosInetTargetInformStatusTotalTimeouts=wwpLeosInetTargetInformStatusTotalTimeouts, wwpLeosInformStatusReliableTrapState=wwpLeosInformStatusReliableTrapState, wwpLeosInformStatusClearStats=wwpLeosInformStatusClearStats, wwpLeosInetTargetInformStatusTable=wwpLeosInetTargetInformStatusTable, wwpLeosInformStatusTotalAcknowledgedInforms=wwpLeosInformStatusTotalAcknowledgedInforms, wwpLeosInformStatusMIBNotifications=wwpLeosInformStatusMIBNotifications, wwpLeosInformStatusResend=wwpLeosInformStatusResend, wwpLeosInformStatusPendingInforms=wwpLeosInformStatusPendingInforms, wwpLeosInformStatusLostInforms=wwpLeosInformStatusLostInforms, wwpLeosInformStatusTimeout=wwpLeosInformStatusTimeout, wwpLeosInformStatusRetries=wwpLeosInformStatusRetries, wwpLeosInetTargetInformStatusPendingInforms=wwpLeosInetTargetInformStatusPendingInforms, wwpLeosInetTargetInformStatusCurrentTimeoutValue=wwpLeosInetTargetInformStatusCurrentTimeoutValue, wwpLeosInformStatusTargetPort=wwpLeosInformStatusTargetPort, wwpLeosInetTargetInformStatusLostInforms=wwpLeosInetTargetInformStatusLostInforms, wwpLeosInetTargetInformStatusInetAddrType=wwpLeosInetTargetInformStatusInetAddrType, wwpLeosInformStatusEntry=wwpLeosInformStatusEntry, wwpLeosInformStatusCurrentRetries=wwpLeosInformStatusCurrentRetries, wwpLeosInetTargetInformStatusInetAddr=wwpLeosInetTargetInformStatusInetAddr, wwpLeosInformStatusMIBGroups=wwpLeosInformStatusMIBGroups, wwpLeosInformStatusMaxTransmissions=wwpLeosInformStatusMaxTransmissions, wwpLeosInformStatusLastDiscardedInformTimeStamp=wwpLeosInformStatusLastDiscardedInformTimeStamp, wwpLeosInetTargetInformStatusRetries=wwpLeosInetTargetInformStatusRetries, wwpLeosInformStatusMIBObjects=wwpLeosInformStatusMIBObjects, wwpLeosInetTargetInformStatusEntry=wwpLeosInetTargetInformStatusEntry, wwpLeosInformStatusMaxDelayToAcknowledgeInform=wwpLeosInformStatusMaxDelayToAcknowledgeInform, wwpLeosInetTargetInformDiscardNotification=wwpLeosInetTargetInformDiscardNotification, wwpLeosInformDiscardNotification=wwpLeosInformDiscardNotification, wwpLeosInformStatusTargetIp=wwpLeosInformStatusTargetIp, wwpLeosInetTargetInformStatusTimeout=wwpLeosInetTargetInformStatusTimeout, wwpLeosInetTargetInformStatusTargetPort=wwpLeosInetTargetInformStatusTargetPort, wwpLeosInformStatusMIBCompliances=wwpLeosInformStatusMIBCompliances, wwpLeosInformStatusMIBNotificationPrefix=wwpLeosInformStatusMIBNotificationPrefix, wwpLeosInformStatusMIBConformance=wwpLeosInformStatusMIBConformance, wwpLeosInetTargetInformStatusIPv6Group=wwpLeosInetTargetInformStatusIPv6Group, wwpLeosInetTargetInformStatusMaxTransmissions=wwpLeosInetTargetInformStatusMaxTransmissions, wwpLeosInformStatusCurrentTimeoutValue=wwpLeosInformStatusCurrentTimeoutValue, wwpLeosInetTargetInformStatusDroppedInforms=wwpLeosInetTargetInformStatusDroppedInforms, wwpLeosInformStatusGlobal=wwpLeosInformStatusGlobal)
