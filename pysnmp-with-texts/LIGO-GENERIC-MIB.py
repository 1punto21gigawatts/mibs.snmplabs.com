#
# PySNMP MIB module LIGO-GENERIC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LIGO-GENERIC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:07:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ligoMgmt, = mibBuilder.importSymbols("LIGOWAVE-MIB", "ligoMgmt")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
sysLocation, = mibBuilder.importSymbols("SNMPv2-MIB", "sysLocation")
TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter32, Unsigned32, ModuleIdentity, Integer32, Gauge32, Counter64, NotificationType, ObjectIdentity, MibIdentifier, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter32", "Unsigned32", "ModuleIdentity", "Integer32", "Gauge32", "Counter64", "NotificationType", "ObjectIdentity", "MibIdentifier", "IpAddress", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ligoGenericMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 32750, 3, 1))
ligoGenericMIB.setRevisions(('2016-01-15 00:00', '2009-02-13 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ligoGenericMIB.setRevisionsDescriptions(('Added ligoPingHostsTable table and ligoHeartbeat, ligoHighPing notifications.', 'First revision.',))
if mibBuilder.loadTexts: ligoGenericMIB.setLastUpdated('201601150000Z')
if mibBuilder.loadTexts: ligoGenericMIB.setOrganization('LigoWave')
if mibBuilder.loadTexts: ligoGenericMIB.setContactInfo(' LigoWave Customer Support E-mail: support@ligowave.com')
if mibBuilder.loadTexts: ligoGenericMIB.setDescription('The LigoWave Generic MIB.')
ligoGenericMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1))
ligoGenericNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 0))
ligoGenericInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 1))
ligoPingHostsTable = MibTable((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 1, 2), )
if mibBuilder.loadTexts: ligoPingHostsTable.setStatus('current')
if mibBuilder.loadTexts: ligoPingHostsTable.setDescription('If ligoHighPing notification is enabled, this table contains information with IP addresses and moving average value of their ping time.')
ligoPingHostsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 1, 2, 1), ).setIndexNames((0, "LIGO-GENERIC-MIB", "ligoPingAddrType"), (0, "LIGO-GENERIC-MIB", "ligoPingAddr"))
if mibBuilder.loadTexts: ligoPingHostsEntry.setStatus('current')
if mibBuilder.loadTexts: ligoPingHostsEntry.setDescription('Ping time data for particular IP address.')
ligoPingAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 1, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: ligoPingAddrType.setStatus('current')
if mibBuilder.loadTexts: ligoPingAddrType.setDescription('The address type of ligoPingAddr.')
ligoPingAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 1, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: ligoPingAddr.setStatus('current')
if mibBuilder.loadTexts: ligoPingAddr.setDescription('The IP address. The address type of this object is specified in ligoPingAddrType.')
ligoPingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 1, 2, 1, 3), Integer32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoPingTime.setStatus('current')
if mibBuilder.loadTexts: ligoPingTime.setDescription('The latest moving average value of ping time in milliseconds. Value -1 indicates unknown or unreachable host.')
ligoPingHost = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoPingHost.setStatus('current')
if mibBuilder.loadTexts: ligoPingHost.setDescription("The hostname/domain name of a ping target if it was specified instead of an IP address in this service's configuration.")
ligoPowerLoss = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 0, 1)).setObjects(("SNMPv2-MIB", "sysLocation"))
if mibBuilder.loadTexts: ligoPowerLoss.setStatus('current')
if mibBuilder.loadTexts: ligoPowerLoss.setDescription('This notification is sent on device boot after power loss or device crash.')
ligoAdministrativeReboot = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 0, 2)).setObjects(("SNMPv2-MIB", "sysLocation"))
if mibBuilder.loadTexts: ligoAdministrativeReboot.setStatus('current')
if mibBuilder.loadTexts: ligoAdministrativeReboot.setDescription('This notification is sent on device boot after administrator rebooted device.')
ligoHeartbeat = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 0, 3)).setObjects(("SNMPv2-MIB", "sysLocation"))
if mibBuilder.loadTexts: ligoHeartbeat.setStatus('current')
if mibBuilder.loadTexts: ligoHeartbeat.setDescription('This is a periodic heartbeat notification.')
ligoHighPing = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 0, 4)).setObjects(("SNMPv2-MIB", "sysLocation"), ("LIGO-GENERIC-MIB", "ligoPingTime"))
if mibBuilder.loadTexts: ligoHighPing.setStatus('current')
if mibBuilder.loadTexts: ligoHighPing.setDescription('This notification is send when ping time is over a specified value.')
mibBuilder.exportSymbols("LIGO-GENERIC-MIB", ligoPowerLoss=ligoPowerLoss, ligoPingAddrType=ligoPingAddrType, ligoAdministrativeReboot=ligoAdministrativeReboot, ligoPingHostsTable=ligoPingHostsTable, ligoHighPing=ligoHighPing, ligoGenericMIBObjects=ligoGenericMIBObjects, ligoGenericNotifs=ligoGenericNotifs, ligoPingHost=ligoPingHost, ligoPingTime=ligoPingTime, ligoPingAddr=ligoPingAddr, PYSNMP_MODULE_ID=ligoGenericMIB, ligoHeartbeat=ligoHeartbeat, ligoPingHostsEntry=ligoPingHostsEntry, ligoGenericInfo=ligoGenericInfo, ligoGenericMIB=ligoGenericMIB)
