#
# PySNMP MIB module Juniper-PROFILE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Juniper-PROFILE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:01:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
juniMibs, = mibBuilder.importSymbols("Juniper-MIBs", "juniMibs")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Integer32, Bits, IpAddress, Counter64, NotificationType, Gauge32, iso, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, MibIdentifier, ModuleIdentity, ObjectIdentity, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Bits", "IpAddress", "Counter64", "NotificationType", "Gauge32", "iso", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "MibIdentifier", "ModuleIdentity", "ObjectIdentity", "Unsigned32")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
juniProfileMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25))
juniProfileMIB.setRevisions(('2003-01-31 21:18', '2003-01-31 21:03', '2002-11-19 20:47', '2001-04-04 12:50', '2000-04-20 00:00', '1999-06-01 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: juniProfileMIB.setRevisionsDescriptions(('Added atm1483(11) to JuniProfileIfEncaps TEXTUAL-CONVENTION. Added support for range indexing of profile assignments.', 'Replaced Unisphere names with Juniper names.', 'Added bridgedEthernet(19) to JuniProfileIfEncaps TEXTUAL-CONVENTION.', 'Added ppp(1), pppoe(17) and any(127) to JuniProfileIfEncaps TEXTUAL-CONVENTION.', 'Added juniProfAssignIfTable, juniProfToIfMapTable to configure and report assignments of profiles to interface/encapsulation pairs.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: juniProfileMIB.setLastUpdated('200301312118Z')
if mibBuilder.loadTexts: juniProfileMIB.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: juniProfileMIB.setContactInfo(' Juniper Networks, Inc. Postal: 10 Technology Park Drive Westford, MA 01886-3146 USA Tel: +1 978 589 5800 Email: mib@Juniper.net')
if mibBuilder.loadTexts: juniProfileMIB.setDescription('The Profile MIB for the Juniper Networks enterprise.')
class JuniProfileIfEncaps(TextualConvention, Integer32):
    description = "Encapsulated protocol type. The 'any' value is a wildcard value. The DESCRIPTION clause for an object having this syntax must describe how the 'any' value applies, if at all."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 11, 17, 19, 127))
    namedValues = NamedValues(("ip", 0), ("ppp", 1), ("atm1483", 11), ("pppoe", 17), ("bridgedEthernet", 19), ("any", 127))

class JuniProfileRangeId(TextualConvention, Unsigned32):
    description = 'An application-specific identifier used to distinguish multiple profile assignments on a given interface/encapsulation pair. Not all interface applications support this capability. The semantics of the identifier are governed by the interface application on which a profile is assigned. For example, the ATM AAL5 application defines the semantics for range identifiers used in profile assignments on ATM AAL5 interfaces; and might choose to associate range identifiers with distinct VPI/VCI ranges. The value zero is reserved for use as the range identifier value for profile assignments on interfaces that do not support more than one assignment per encapsulation.'
    status = 'current'

juniProfileObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1))
juniProfileName = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 1))
juniProfileAssign = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2))
juniProfileNameTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 1, 1), )
if mibBuilder.loadTexts: juniProfileNameTable.setStatus('current')
if mibBuilder.loadTexts: juniProfileNameTable.setDescription('The entries in this table provide mappings of configuration profile names to local integer identifiers for those profiles. These integers are used as indexes into other MIB tables containing profile configuration parameters associated with the same profile name.')
juniProfileNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 1, 1, 1), ).setIndexNames((1, "Juniper-PROFILE-MIB", "juniProfileNameName"))
if mibBuilder.loadTexts: juniProfileNameEntry.setStatus('current')
if mibBuilder.loadTexts: juniProfileNameEntry.setDescription('A mapping of a profile name to an integer identifier for that name.')
juniProfileNameName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniProfileNameName.setStatus('current')
if mibBuilder.loadTexts: juniProfileNameName.setDescription('The profile name uniquely identifying this entry.')
juniProfileNameRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniProfileNameRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniProfileNameRowStatus.setDescription("Controls creation/deletion of entries in this table. Only the values 'createAndGo' and 'destroy' may be SET.")
juniProfileNameId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniProfileNameId.setStatus('current')
if mibBuilder.loadTexts: juniProfileNameId.setDescription('The integer identifier associated with this profile name. This value of this identifier is assigned by the device when an entry in this table is created.')
juniProfileIdTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 1, 2), )
if mibBuilder.loadTexts: juniProfileIdTable.setStatus('current')
if mibBuilder.loadTexts: juniProfileIdTable.setDescription('Provides inverse mapping of profile IDs to profile names.')
juniProfileIdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 1, 2, 1), ).setIndexNames((0, "Juniper-PROFILE-MIB", "juniProfileIdId"))
if mibBuilder.loadTexts: juniProfileIdEntry.setStatus('current')
if mibBuilder.loadTexts: juniProfileIdEntry.setDescription('A mapping of an integer identifier to a profile name.')
juniProfileIdId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: juniProfileIdId.setStatus('current')
if mibBuilder.loadTexts: juniProfileIdId.setDescription('The integer identifier associated with this profile name.')
juniProfileIdName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniProfileIdName.setStatus('current')
if mibBuilder.loadTexts: juniProfileIdName.setDescription('The profile name having the associated identifier.')
juniProfAssignIf = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 1))
juniProfAssignIfRange = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 2))
juniProfAssignIfTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 1, 1), )
if mibBuilder.loadTexts: juniProfAssignIfTable.setStatus('current')
if mibBuilder.loadTexts: juniProfAssignIfTable.setDescription('Table providing profile assignment to interface/encapsulation pair. The entries in this table specify which profile to use when creating and configuring a dynamic interface (whose type is identified by the encapsulation) above a specified interface. Each entry in this table is reflected in a juniProfAssignIfTable entry having a zero-valued range identifier.')
juniProfAssignIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 1, 1, 1), ).setIndexNames((0, "Juniper-PROFILE-MIB", "juniProfAssignIfIndex"), (0, "Juniper-PROFILE-MIB", "juniProfAssignIfEncaps"))
if mibBuilder.loadTexts: juniProfAssignIfEntry.setStatus('current')
if mibBuilder.loadTexts: juniProfAssignIfEntry.setDescription('An assignment of a profile to an interface/encapsulation pair.')
juniProfAssignIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: juniProfAssignIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniProfAssignIfIndex.setDescription('The ifIndex of the interface to which the profile is assigned.')
juniProfAssignIfEncaps = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 1, 1, 1, 2), JuniProfileIfEncaps())
if mibBuilder.loadTexts: juniProfAssignIfEncaps.setStatus('current')
if mibBuilder.loadTexts: juniProfAssignIfEncaps.setDescription("The encapsulated protocol type to which the assigned profile pertains. An interface may have a different profile assigned for each encapsulation it supports. If an entry for a specific encapsulation is absent, the profile assigned for the 'any' encapsulation will be used (if that assignment is present in this table).")
juniProfAssignIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniProfAssignIfRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniProfAssignIfRowStatus.setDescription('For SET, supports only createAndGo(4) and destroy(6). Returns active(1) when read.')
juniProfAssignIfProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniProfAssignIfProfileId.setStatus('current')
if mibBuilder.loadTexts: juniProfAssignIfProfileId.setDescription('The ID of the profile assigned to this interface/encapsulation pair.')
juniProfToIfMapTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 1, 2), )
if mibBuilder.loadTexts: juniProfToIfMapTable.setStatus('current')
if mibBuilder.loadTexts: juniProfToIfMapTable.setDescription('Table to report the set of interface/encapsulation pairs assigned to each profile.')
juniProfToIfMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 1, 2, 1), ).setIndexNames((0, "Juniper-PROFILE-MIB", "juniProfToIfMapProfileId"), (0, "Juniper-PROFILE-MIB", "juniProfToIfMapIndex"), (0, "Juniper-PROFILE-MIB", "juniProfToIfMapEncaps"))
if mibBuilder.loadTexts: juniProfToIfMapEntry.setStatus('current')
if mibBuilder.loadTexts: juniProfToIfMapEntry.setDescription('Reports an interface/encapsulation pair assigned to a profile.')
juniProfToIfMapProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: juniProfToIfMapProfileId.setStatus('current')
if mibBuilder.loadTexts: juniProfToIfMapProfileId.setDescription('The ID of the profile assigned to this interface/encapsulation pair.')
juniProfToIfMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 1, 2, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: juniProfToIfMapIndex.setStatus('current')
if mibBuilder.loadTexts: juniProfToIfMapIndex.setDescription('The ifIndex of the interface to which the profile is assigned.')
juniProfToIfMapEncaps = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 1, 2, 1, 3), JuniProfileIfEncaps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniProfToIfMapEncaps.setStatus('current')
if mibBuilder.loadTexts: juniProfToIfMapEncaps.setDescription('The encapsulation type to which the assigned profile pertains. An interface may have a different profile assigned for each encapsulation type it supports.')
juniProfAssignIfRangeTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 2, 1), )
if mibBuilder.loadTexts: juniProfAssignIfRangeTable.setStatus('current')
if mibBuilder.loadTexts: juniProfAssignIfRangeTable.setDescription('Table providing profile assignment to interface/encapsulation/range 3-tuple. The entries in this table specify which profile to use when creating and configuring a dynamic interface (whose type is identified by the encapsulation) above a specified interface, with profile selection being further discriminated by the range identifier. Each entry in juniProfAssignIfTable is reflected by an entry in this table having a zero-valued range identifier.')
juniProfAssignIfRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 2, 1, 1), ).setIndexNames((0, "Juniper-PROFILE-MIB", "juniProfAssignIfRangeIndex"), (0, "Juniper-PROFILE-MIB", "juniProfAssignIfRangeEncaps"), (0, "Juniper-PROFILE-MIB", "juniProfAssignIfRangeRangeId"))
if mibBuilder.loadTexts: juniProfAssignIfRangeEntry.setStatus('current')
if mibBuilder.loadTexts: juniProfAssignIfRangeEntry.setDescription('An assignment of a profile to an interface/encapsulation/range 3-tuple.')
juniProfAssignIfRangeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 2, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: juniProfAssignIfRangeIndex.setStatus('current')
if mibBuilder.loadTexts: juniProfAssignIfRangeIndex.setDescription('The ifIndex of the interface to which the profile is assigned.')
juniProfAssignIfRangeEncaps = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 2, 1, 1, 2), JuniProfileIfEncaps())
if mibBuilder.loadTexts: juniProfAssignIfRangeEncaps.setStatus('current')
if mibBuilder.loadTexts: juniProfAssignIfRangeEncaps.setDescription("The encapsulated protocol type to which the assigned profile pertains. An interface may have zero, one or more profiles assigned for each encapsulation it supports. If an entry for a specific encapsulation is absent, the profile assigned for the 'any' encapsulation will be used (if that assignment is present in this table).")
juniProfAssignIfRangeRangeId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 2, 1, 1, 3), JuniProfileRangeId())
if mibBuilder.loadTexts: juniProfAssignIfRangeRangeId.setStatus('current')
if mibBuilder.loadTexts: juniProfAssignIfRangeRangeId.setDescription('An application-specific range identifier to which the assigned profile pertains. An interface may have zero, one or more profiles assigned for each encapsulation it supports, distinguished by range identifier. A value of zero should be used for an interface that does not support multiple profile assignments per encapsulation.')
juniProfAssignIfRangeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniProfAssignIfRangeRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniProfAssignIfRangeRowStatus.setDescription('For SET, supports only createAndGo(4) and destroy(6). Returns active(1) when read.')
juniProfAssignIfRangeProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniProfAssignIfRangeProfileId.setStatus('current')
if mibBuilder.loadTexts: juniProfAssignIfRangeProfileId.setDescription('The ID of the profile assigned to this interface/encapsulation/range 3-tuple.')
juniProfToIfRangeMapTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 2, 2), )
if mibBuilder.loadTexts: juniProfToIfRangeMapTable.setStatus('current')
if mibBuilder.loadTexts: juniProfToIfRangeMapTable.setDescription('Table to report the set of interface/encapsulation/range 3-tuples assigned to each profile.')
juniProfToIfRangeMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 2, 2, 1), ).setIndexNames((0, "Juniper-PROFILE-MIB", "juniProfToIfRangeMapProfileId"), (0, "Juniper-PROFILE-MIB", "juniProfToIfRangeMapIndex"), (0, "Juniper-PROFILE-MIB", "juniProfToIfRangeMapEncaps"), (0, "Juniper-PROFILE-MIB", "juniProfToIfRangeMapRangeId"))
if mibBuilder.loadTexts: juniProfToIfRangeMapEntry.setStatus('current')
if mibBuilder.loadTexts: juniProfToIfRangeMapEntry.setDescription('Reports an interface/encapsulation/range 3-tuple assigned to a profile.')
juniProfToIfRangeMapProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 2, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: juniProfToIfRangeMapProfileId.setStatus('current')
if mibBuilder.loadTexts: juniProfToIfRangeMapProfileId.setDescription('The ID of the profile assigned to this interface/encapsulation pair.')
juniProfToIfRangeMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 2, 2, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: juniProfToIfRangeMapIndex.setStatus('current')
if mibBuilder.loadTexts: juniProfToIfRangeMapIndex.setDescription('The ifIndex of the interface to which the profile is assigned.')
juniProfToIfRangeMapEncaps = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 2, 2, 1, 3), JuniProfileIfEncaps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniProfToIfRangeMapEncaps.setStatus('current')
if mibBuilder.loadTexts: juniProfToIfRangeMapEncaps.setDescription('The encapsulation type to which the assigned profile pertains. An interface may have zero, one or more profiles assigned for each encapsulation type it supports.')
juniProfToIfRangeMapRangeId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 1, 2, 2, 2, 1, 4), JuniProfileRangeId())
if mibBuilder.loadTexts: juniProfToIfRangeMapRangeId.setStatus('current')
if mibBuilder.loadTexts: juniProfToIfRangeMapRangeId.setDescription('An application-specific range identifier to which the assigned profile pertains. An interface may have zero, one or more profiles assigned for each encapsulation it supports, distinguished by range identifier.')
juniProfileMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 4))
juniProfileMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 4, 1))
juniProfileMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 4, 2))
juniProfileCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 4, 1, 1)).setObjects(("Juniper-PROFILE-MIB", "juniProfileGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniProfileCompliance = juniProfileCompliance.setStatus('obsolete')
if mibBuilder.loadTexts: juniProfileCompliance.setDescription('Obsolete compliance statement for systems supporting naming of configuration profiles. This statement became obsolete when the interface profile assignment group was added.')
juniProfileCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 4, 1, 2)).setObjects(("Juniper-PROFILE-MIB", "juniProfileGroup"), ("Juniper-PROFILE-MIB", "juniProfileIfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniProfileCompliance2 = juniProfileCompliance2.setStatus('obsolete')
if mibBuilder.loadTexts: juniProfileCompliance2.setDescription('Obsolete compliance statement for systems supporting naming of configuration profiles and profile assignment to interfaces. This statement became obsolete when support for range indexing of profile assignments was added.')
juniProfileCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 4, 1, 3)).setObjects(("Juniper-PROFILE-MIB", "juniProfileGroup"), ("Juniper-PROFILE-MIB", "juniProfileIfGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniProfileCompliance3 = juniProfileCompliance3.setStatus('current')
if mibBuilder.loadTexts: juniProfileCompliance3.setDescription('The compliance statement for systems supporting naming of configuration profiles and profile assignment to interfaces.')
juniProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 4, 2, 1)).setObjects(("Juniper-PROFILE-MIB", "juniProfileNameName"), ("Juniper-PROFILE-MIB", "juniProfileNameRowStatus"), ("Juniper-PROFILE-MIB", "juniProfileNameId"), ("Juniper-PROFILE-MIB", "juniProfileIdName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniProfileGroup = juniProfileGroup.setStatus('current')
if mibBuilder.loadTexts: juniProfileGroup.setDescription('The basic collection of objects providing management of Profile naming functionality in a Juniper product.')
juniProfileIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 4, 2, 2)).setObjects(("Juniper-PROFILE-MIB", "juniProfAssignIfRowStatus"), ("Juniper-PROFILE-MIB", "juniProfAssignIfProfileId"), ("Juniper-PROFILE-MIB", "juniProfToIfMapEncaps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniProfileIfGroup = juniProfileIfGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniProfileIfGroup.setDescription('Obsolete collection of objects providing management of Profile assignment to interfaces in a Juniper product. This group became obsolete when support for range indexing of profile assignments was added.')
juniProfileIfGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 25, 4, 2, 3)).setObjects(("Juniper-PROFILE-MIB", "juniProfAssignIfRowStatus"), ("Juniper-PROFILE-MIB", "juniProfAssignIfProfileId"), ("Juniper-PROFILE-MIB", "juniProfToIfMapEncaps"), ("Juniper-PROFILE-MIB", "juniProfAssignIfRangeRowStatus"), ("Juniper-PROFILE-MIB", "juniProfAssignIfRangeProfileId"), ("Juniper-PROFILE-MIB", "juniProfToIfRangeMapEncaps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniProfileIfGroup2 = juniProfileIfGroup2.setStatus('current')
if mibBuilder.loadTexts: juniProfileIfGroup2.setDescription('The basic collection of objects providing management of Profile assignment to interfaces in a Juniper product.')
mibBuilder.exportSymbols("Juniper-PROFILE-MIB", juniProfAssignIfEntry=juniProfAssignIfEntry, juniProfAssignIfRangeEntry=juniProfAssignIfRangeEntry, juniProfToIfRangeMapProfileId=juniProfToIfRangeMapProfileId, juniProfileCompliance=juniProfileCompliance, juniProfileIfGroup=juniProfileIfGroup, juniProfAssignIfProfileId=juniProfAssignIfProfileId, juniProfileMIB=juniProfileMIB, JuniProfileIfEncaps=JuniProfileIfEncaps, juniProfAssignIfIndex=juniProfAssignIfIndex, juniProfAssignIfRange=juniProfAssignIfRange, juniProfAssignIfRangeEncaps=juniProfAssignIfRangeEncaps, juniProfToIfRangeMapTable=juniProfToIfRangeMapTable, juniProfileNameTable=juniProfileNameTable, juniProfileIfGroup2=juniProfileIfGroup2, juniProfToIfRangeMapRangeId=juniProfToIfRangeMapRangeId, juniProfAssignIfTable=juniProfAssignIfTable, juniProfToIfRangeMapEncaps=juniProfToIfRangeMapEncaps, juniProfToIfMapIndex=juniProfToIfMapIndex, juniProfileNameId=juniProfileNameId, juniProfAssignIfEncaps=juniProfAssignIfEncaps, juniProfileMIBConformance=juniProfileMIBConformance, juniProfileCompliance2=juniProfileCompliance2, juniProfileIdEntry=juniProfileIdEntry, juniProfileName=juniProfileName, juniProfileAssign=juniProfileAssign, juniProfileIdId=juniProfileIdId, juniProfileIdTable=juniProfileIdTable, juniProfToIfRangeMapEntry=juniProfToIfRangeMapEntry, juniProfileMIBGroups=juniProfileMIBGroups, juniProfileNameName=juniProfileNameName, juniProfileIdName=juniProfileIdName, juniProfAssignIfRangeTable=juniProfAssignIfRangeTable, juniProfAssignIfRangeRangeId=juniProfAssignIfRangeRangeId, juniProfAssignIfRangeProfileId=juniProfAssignIfRangeProfileId, juniProfileMIBCompliances=juniProfileMIBCompliances, juniProfileNameRowStatus=juniProfileNameRowStatus, juniProfileNameEntry=juniProfileNameEntry, juniProfToIfMapProfileId=juniProfToIfMapProfileId, juniProfToIfMapEncaps=juniProfToIfMapEncaps, PYSNMP_MODULE_ID=juniProfileMIB, juniProfToIfMapTable=juniProfToIfMapTable, juniProfileCompliance3=juniProfileCompliance3, juniProfAssignIfRangeIndex=juniProfAssignIfRangeIndex, juniProfAssignIfRangeRowStatus=juniProfAssignIfRangeRowStatus, JuniProfileRangeId=JuniProfileRangeId, juniProfileObjects=juniProfileObjects, juniProfAssignIfRowStatus=juniProfAssignIfRowStatus, juniProfToIfMapEntry=juniProfToIfMapEntry, juniProfAssignIf=juniProfAssignIf, juniProfToIfRangeMapIndex=juniProfToIfRangeMapIndex, juniProfileGroup=juniProfileGroup)
