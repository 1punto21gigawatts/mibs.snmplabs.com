#
# PySNMP MIB module CISCOSB-LOCALIZATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCOSB-LOCALIZATION-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:22:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
switch001, = mibBuilder.importSymbols("CISCOSB-MIB", "switch001")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, NotificationType, TimeTicks, ModuleIdentity, Counter32, MibIdentifier, Unsigned32, IpAddress, Counter64, Gauge32, iso, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "NotificationType", "TimeTicks", "ModuleIdentity", "Counter32", "MibIdentifier", "Unsigned32", "IpAddress", "Counter64", "Gauge32", "iso", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity")
RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
rlLocalization = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 103))
rlLocalization.setRevisions(('2005-03-15 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: rlLocalization.setRevisionsDescriptions(('Initial revision.',))
if mibBuilder.loadTexts: rlLocalization.setLastUpdated('200503150000Z')
if mibBuilder.loadTexts: rlLocalization.setOrganization('Cisco Small Business')
if mibBuilder.loadTexts: rlLocalization.setContactInfo('Postal: 170 West Tasman Drive San Jose , CA 95134-1706 USA Website: Cisco Small Business Home http://www.cisco.com/smb>;, Cisco Small Business Support Community <http://www.cisco.com/go/smallbizsupport>')
if mibBuilder.loadTexts: rlLocalization.setDescription('The private MIB module definition for product localization.')
rlLocalizationActivelanguage = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 103, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlLocalizationActivelanguage.setStatus('current')
if mibBuilder.loadTexts: rlLocalizationActivelanguage.setDescription(' Points out to field rlLocalizationLanguagesName -- RG of the languages table. This value affects also translations performed on server side. -- RG not true If length is 0 this value is undefined; this means -- RG default language is applied.')
rlLocalizationLoginlanguage = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 103, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlLocalizationLoginlanguage.setStatus('current')
if mibBuilder.loadTexts: rlLocalizationLoginlanguage.setDescription('The accepted languages of the WEB GUI, comma delimited. This value is taken from the Accept-Language HTTP header. ')
rlLocalizationLanguagesTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 103, 10), )
if mibBuilder.loadTexts: rlLocalizationLanguagesTable.setStatus('current')
if mibBuilder.loadTexts: rlLocalizationLanguagesTable.setDescription('Table for localization information this table shows the list of available languages.')
rlLocalizationLanguagesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 103, 10, 1), ).setIndexNames((1, "CISCOSB-LOCALIZATION-MIB", "rlLocalizationLanguagesName"))
if mibBuilder.loadTexts: rlLocalizationLanguagesEntry.setStatus('current')
if mibBuilder.loadTexts: rlLocalizationLanguagesEntry.setDescription('Table for localization information this table shows the list of available languages.')
rlLocalizationLanguagesName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 103, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 50)))
if mibBuilder.loadTexts: rlLocalizationLanguagesName.setStatus('current')
if mibBuilder.loadTexts: rlLocalizationLanguagesName.setDescription('Unique name of the language in English.')
rlLocalizationLanguagesUnicodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 103, 10, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlLocalizationLanguagesUnicodeName.setStatus('current')
if mibBuilder.loadTexts: rlLocalizationLanguagesUnicodeName.setDescription('String in UTF-8. Unique name of language for user-friendly presentation in GUI ')
rlLocalizationLanguagesUrlDir = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 103, 10, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlLocalizationLanguagesUrlDir.setStatus('current')
if mibBuilder.loadTexts: rlLocalizationLanguagesUrlDir.setDescription('Unique URL-path of GUI dictionary file for all pages and messages.')
rlLocalizationLanguagesUrlHelpDir = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 103, 10, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlLocalizationLanguagesUrlHelpDir.setStatus('current')
if mibBuilder.loadTexts: rlLocalizationLanguagesUrlHelpDir.setDescription('Unique URL-path of help files directory.')
rlLocalizationLanguageCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 103, 10, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlLocalizationLanguageCode.setStatus('current')
if mibBuilder.loadTexts: rlLocalizationLanguageCode.setDescription('Language code from (RFC 4646) ')
rlLocalizationNumOfSections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 103, 10, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlLocalizationNumOfSections.setStatus('current')
if mibBuilder.loadTexts: rlLocalizationNumOfSections.setDescription('Number of sections of the dictionary.xml file which is technically split.')
rlLocalizationNumOfEmbSections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 103, 10, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlLocalizationNumOfEmbSections.setStatus('current')
if mibBuilder.loadTexts: rlLocalizationNumOfEmbSections.setDescription('Number of sections of the diagnostics file which is technically split.')
rlLocalizationVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 103, 10, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlLocalizationVersion.setStatus('current')
if mibBuilder.loadTexts: rlLocalizationVersion.setDescription('The version of the language file (x.y.z.w)')
rlLocalizationMd5ChksumFile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 103, 10, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlLocalizationMd5ChksumFile.setStatus('current')
if mibBuilder.loadTexts: rlLocalizationMd5ChksumFile.setDescription('The MD5 of the language file (as string)')
mibBuilder.exportSymbols("CISCOSB-LOCALIZATION-MIB", rlLocalizationVersion=rlLocalizationVersion, rlLocalizationLanguagesTable=rlLocalizationLanguagesTable, rlLocalizationNumOfSections=rlLocalizationNumOfSections, rlLocalization=rlLocalization, rlLocalizationMd5ChksumFile=rlLocalizationMd5ChksumFile, rlLocalizationLanguagesEntry=rlLocalizationLanguagesEntry, rlLocalizationLoginlanguage=rlLocalizationLoginlanguage, rlLocalizationLanguagesUrlDir=rlLocalizationLanguagesUrlDir, rlLocalizationLanguagesUrlHelpDir=rlLocalizationLanguagesUrlHelpDir, rlLocalizationLanguagesName=rlLocalizationLanguagesName, rlLocalizationActivelanguage=rlLocalizationActivelanguage, PYSNMP_MODULE_ID=rlLocalization, rlLocalizationLanguagesUnicodeName=rlLocalizationLanguagesUnicodeName, rlLocalizationLanguageCode=rlLocalizationLanguageCode, rlLocalizationNumOfEmbSections=rlLocalizationNumOfEmbSections)
