#
# PySNMP MIB module DOCS-IFEXT2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DOCS-IFEXT2-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:53:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
clabProjDocsis, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabProjDocsis")
docsIfCmtsCmStatusIndex, TenthdB, TenthdBmV = mibBuilder.importSymbols("DOCS-IF-MIB", "docsIfCmtsCmStatusIndex", "TenthdB", "TenthdBmV")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Unsigned32, Integer32, TimeTicks, IpAddress, ObjectIdentity, MibIdentifier, Counter32, Gauge32, iso, Bits, Counter64, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Integer32", "TimeTicks", "IpAddress", "ObjectIdentity", "MibIdentifier", "Counter32", "Gauge32", "iso", "Bits", "Counter64", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
docsIfExt2Mib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5))
docsIfExt2Mib.setRevisions(('2010-10-08 17:00', '2004-11-10 17:00', '2004-06-23 17:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: docsIfExt2Mib.setRevisionsDescriptions(('Revised version includes ECN OSSIv3.0-N-10.0934-1 and published as I13.', 'Re-rooted to clabProjDocsis.5', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: docsIfExt2Mib.setLastUpdated('201010081700Z')
if mibBuilder.loadTexts: docsIfExt2Mib.setOrganization('Cable Television Laboratories, Inc')
if mibBuilder.loadTexts: docsIfExt2Mib.setContactInfo(' Postal: Cable Television Laboratories, Inc. 400 Centennial Parkway Louisville, Colorado 80027-1266 U.S.A. Phone: +1 303-661-9100 Fax: +1 303-661-9199 E-mail: mibs@cablelabs.com')
if mibBuilder.loadTexts: docsIfExt2Mib.setDescription('This MIB module contains the management objects that enhance DOCSIS 2.0 feature set. It includes SCDMA capability of limiting the number of codes assigned to a CM over the total active codes, referred as Maximum Scheduled Codes (MSC).')
docsIfExt2Notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 0))
docsIfExt2MibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1))
docsIfExt2BaseObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 1))
docsIfExt2CmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2))
docsIfExt2CmtsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3))
docsIfExt2CmMscStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2, 1), )
if mibBuilder.loadTexts: docsIfExt2CmMscStatusTable.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmMscStatusTable.setDescription('This table extends the docsIfUpstreamChannelTable to report the CM MSC status.')
docsIfExt2CmMscStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIfExt2CmMscStatusEntry.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmMscStatusEntry.setDescription('As an extension of docsIfUpstreamChannelTable this table has entries for each ifEntry with an ifType of docsCableUpstream(129) This entry is instantiated by the CM only if the CM is currently in SCDMA mode.')
docsIfExt2CmMscStatusState = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("channelEnabled", 1), ("channelDisabled", 2), ("active", 3), ("inactive", 4), ("unknown", 5))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmMscStatusState.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmMscStatusState.setDescription('Indicates the current state of the Maximum Scheduled Codes feature on the CM. channelEnabled(1) S-CDMA Maximum Scheduled Codes is enabled in the UCD TLV-17. channelDisabled(2) S-CDMA Maximum Scheduled Codes is disabled in the UCD TLV-17 or a UCD has been received that does not contain that TLV. Active(3) The CM has received a Ranging Response that contains a non-zero TLV-10 and therefore has MSC activated. This state overrides the channelEnabled(1) state. Inactive(4) The CM has received a Ranging Response that does not contain TLV-10 or has it set to 0. This state overrides the channelEnabled(1) state. Unknown(5) CM has not yet received a UCD to determine if MSC is enabled or disabled on that channel.')
docsIfExt2CmMscStatusPowerShortfall = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2, 1, 1, 2), TenthdB()).setUnits('TenthdB').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmMscStatusPowerShortfall.setReference('Data-Over-Cable Service Interface Specifications: Radio Frequency Interface Specification Section 8.3.5')
if mibBuilder.loadTexts: docsIfExt2CmMscStatusPowerShortfall.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmMscStatusPowerShortfall.setDescription('Indicates the Power Shortfall at the CM, in units of tenth dB. The value is provided by the CM and is sent in the RNG-REQ message. It is internally calculated in units of quarter dB and is rounded upward for this MIB object to the nearest tenth dB. A value of zero indicates that the CM has no power shortfall.')
docsIfExt2CmMscStatusCodeRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(2, 2), ValueRangeConstraint(8, 8), ValueRangeConstraint(16, 16), ValueRangeConstraint(32, 32), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmMscStatusCodeRatio.setReference('Data-Over-Cable Service Interface Specifications: Radio Frequency Interface Specification Section 8.3.5')
if mibBuilder.loadTexts: docsIfExt2CmMscStatusCodeRatio.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmMscStatusCodeRatio.setDescription('Indicates the maximum ratio of number of active codes to Maximum Scheduled Codes that the CM can support, as reported in the Ranging Request.')
docsIfExt2CmMscStatusMaximumScheduledCodes = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4, 128), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmMscStatusMaximumScheduledCodes.setReference('Data-Over-Cable Service Interface Specifications: Radio Frequency Interface Specification Section 8.3.6')
if mibBuilder.loadTexts: docsIfExt2CmMscStatusMaximumScheduledCodes.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmMscStatusMaximumScheduledCodes.setDescription('Indicates the Maximum Scheduled Codes in use by the CM. The value is provided by the CMTS through a TLV value in the RNG-RSP message. Note that not all values from 4..128 are valid. A value of zero when docsIfExt2CmMscStatusSate is active(3) indicates there is no maximum scheduled codes value. This object should remain at zero when docsIfExt2CmMscStatusState is not active(3).')
docsIfExt2CmMscStatusPowerHeadroom = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2, 1, 1, 5), TenthdB()).setUnits('TenthdB').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmMscStatusPowerHeadroom.setReference('Data-Over-Cable Service Interface Specifications: Radio Frequency Interface Specification Section 8.3.6')
if mibBuilder.loadTexts: docsIfExt2CmMscStatusPowerHeadroom.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmMscStatusPowerHeadroom.setDescription('Indicates the Maximum Scheduled Codes Power Headroom in use by the CM, in units of tenth dB. The value is provided by the CMTS in units of quarter dB through TLV-11 in the RNG-RSP message and is rounded upward for this MIB object to the nearest tenth dB. A value of zero indicates the CMTS provided no Power Headroom. This object should remain at zero when docsIfExt2CmMscStatusState is not active(3).')
docsIfExt2CmMscStatusEffectivePower = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2, 1, 1, 6), TenthdBmV()).setUnits('TenthdBmV').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmMscStatusEffectivePower.setReference('Data-Over-Cable Service Interface Specifications: Radio Frequency Interface Specification Section 6.2.18.2.2')
if mibBuilder.loadTexts: docsIfExt2CmMscStatusEffectivePower.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmMscStatusEffectivePower.setDescription('Indicates the Effective Transmit Power of the CM. This is the power that would result hypothetically if, in a spreader-on frame, the CM were to transmit on all active codes with 64QAM modulation. This object should be equal to docsIfCmStatusTxPower when docsIfExt2CmMscStatusState is not active(3).')
docsIfExt2CmMscStatusIUC2Control = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noIUC2", 1), ("limitedIUC2", 2), ("freeIUC2", 3))).clone('noIUC2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfExt2CmMscStatusIUC2Control.setReference('Data-Over-Cable Service Interface Specifications: Radio Frequency Interface Specification Section 6.2.11.6')
if mibBuilder.loadTexts: docsIfExt2CmMscStatusIUC2Control.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmMscStatusIUC2Control.setDescription('The CM usage of IUC2 when MSC is enabled: noIUC2(1): CM usage of IUC2 is prohibited limitedIUC2(2): CM is allowed to use IUC2 as long as the CM does not exceed MSC freeIUC2(3): CM is allowed to use IUC2 without regard for MSC. With limitedIUC2(2), there may be cases where a CM cannot ensure that the use of IUC2 would not exceed MSC. In these cases, the CM MUST NOT use IUC2. ')
docsIfExt2CmClearLearnedMacAddresses = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfExt2CmClearLearnedMacAddresses.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmClearLearnedMacAddresses.setDescription("If set to 'true', the CM clears all entries in the CM forwarding database for all learned MAC addresses that are not eSAFE or provisioned MAC addresses. Reading this object always returns 'false'.")
docsIfExt2CmtsMscGlobalEnable = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfExt2CmtsMscGlobalEnable.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmtsMscGlobalEnable.setDescription('Indicates the global state of the Maximum Scheduled Code feature on the CMTS. The value true(1) indicates that this feature can be enabled on individual logical channels on the CMTS. The value false(2) indicates that the feature is not in operations on the CMTS. Note that the MIB object docsIfExt2CmtsUpChannelMscState exists to enable or disable Maximum Scheduled Codes on a per logical channel basis.')
docsIfExt2CmtsCmMscStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 2), )
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusTable.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusTable.setDescription('This table extends the docsIfCmtsCmStatusTable to report CM MSC status.')
docsIfExt2CmtsCmMscStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 2, 1), ).setIndexNames((0, "DOCS-IF-MIB", "docsIfCmtsCmStatusIndex"))
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusEntry.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusEntry.setDescription('An entry for MSC CM status report. Only CMs allocated to SCDMA upstream channels are included in this table.')
docsIfExt2CmtsCmMscStatusPowerShortfall = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 2, 1, 1), TenthdB()).setUnits('TenthdB').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusPowerShortfall.setReference('Data-Over-Cable Service Interface Specifications: Radio Frequency Interface Specification Section 8.3.5')
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusPowerShortfall.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusPowerShortfall.setDescription('Indicates the Power Shortfall at the CM, in units of tenth dB. The value is provided by the CM and is sent in the RNG-REQ message. It is internally calculated in units of quarter dB and is rounded upward for this MIB object to the nearest tenth dB. A value of zero indicates that the CM has no power shortfall.')
docsIfExt2CmtsCmMscStatusCodeRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(2, 2), ValueRangeConstraint(8, 8), ValueRangeConstraint(16, 16), ValueRangeConstraint(32, 32), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusCodeRatio.setReference('Data-Over-Cable Service Interface Specifications: Radio Frequency Interface Specification Section 8.3.5')
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusCodeRatio.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusCodeRatio.setDescription('Indicates the maximum ratio of number of active codes to Maximum Scheduled Codes that the CM reported in the Ranging Request.')
docsIfExt2CmtsCmMscStatusMaximumScheduledCodes = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4, 128), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusMaximumScheduledCodes.setReference('Data-Over-Cable Service Interface Specifications: Radio Frequency Interface Specification Section 8.3.6')
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusMaximumScheduledCodes.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusMaximumScheduledCodes.setDescription('Indicates the Maximum Scheduled Codes value in use by the CM. The value is provided by the CMTS through a TLV in the RNG-RSP message. Note that not all values from 4..128 are valid. A value of zero indicates there is no Maximum Scheduled Codes, or that the CM does not support the Maximum Scheduled Codes feature.')
docsIfExt2CmtsCmMscStatusPowerHeadroom = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 2, 1, 4), TenthdB()).setUnits('TenthdB').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusPowerHeadroom.setReference('Data-Over-Cable Service Interface Specifications: Radio Frequency Interface Specification Section 8.3.6')
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusPowerHeadroom.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusPowerHeadroom.setDescription('Indicates the Maximum Scheduled Codes Power Headroom in use by the CM, in units of tenth dB. The value is provided by the CMTS in units of quarter dB through a TLV value in the RNG-RSP message and is rounded upward for this MIB object to the nearest tenth dB. A value of zero indicates the CMTS provided no Power Headroom.')
docsIfExt2CmtsCmMscStatusMeasuredSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 2, 1, 5), TenthdB()).setUnits('TenthdB').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusMeasuredSNR.setReference('Data-Over-Cable Service Interface Specifications: Radio Frequency Interface Specification Section 6.2.18.2.2')
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusMeasuredSNR.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusMeasuredSNR.setDescription('The signal to noise ratio perceived for this cable modem on the upstream logical channel as of the last station maintenance.')
docsIfExt2CmtsCmMscStatusEffectiveSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 2, 1, 6), TenthdB()).setUnits('TenthdB').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusEffectiveSNR.setReference('Data-Over-Cable Service Interface Specifications: Radio Frequency Interface Specification Section 6.2.18.2.2')
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusEffectiveSNR.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusEffectiveSNR.setDescription('The signal to noise ratio estimated for this cable modem on the upstream logical channel, referenced to 64QAM modulation. It is defined as the measured SNR at the last station maintenance, minus the CM power shortfall, plus the Power Headroom, minus the constellation gain of the station maintenance burst. Note that the value of the object docsIfCmtsCmStatusSignalNoise will be identical to the value of this object when Maximum Scheduled Codes is enabled.')
docsIfExt2CmtsUpChannelMscTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 3), )
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelMscTable.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelMscTable.setDescription('This table extends the docsIfUpstreamChannelTable to report CM MSC status.')
docsIfExt2CmtsUpChannelMscEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelMscEntry.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelMscEntry.setDescription('An entry for MSC upstream status report. Only SCDMA logical upstream channels (i.e., ifType=docsCableUpstreamChannel(205) and docsIfUpChannelType=scdma(3)) are included in this table.')
docsIfExt2CmtsUpChannelMscState = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("channelEnabled", 1), ("channelDisabled", 2), ("dormant", 3))).clone('channelDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelMscState.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelMscState.setDescription('Indicates the state of the Maximum Scheduled Codes feature for an individual logical channel on the CMTS. The state will transition automatically from dormant(5) to ChannelEnabled(1) and vice-versa when the feature is globally enabled by the object docsIfExt2CmtsMscGlobalEnable. channelEnabled(1) S-CDMA Maximum Scheduled Codes is enabled in the UCD TLV-17. channelDisabled(2) S-CDMA Maximum Scheduled Codes is disabled in the UCD TLV-17 or a UCD has been sent that does not contain that TLV. Dormant(3) The CMTS channel is being set to channelEnabled(2) but MSC is globally disabled (docsIfExt2CmtsMscGlobalEnable is false(2) ). This value is explicitly read-only.')
docsIfExt2CmtsUpChannelMSCTotalCMs = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelMSCTotalCMs.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelMSCTotalCMs.setDescription('Total number of CMs with docsIfCmtsCmStatusValue of registrationComplete with MSC active.')
docsIfExt2CmtsUpChannelMSCLimitIUC1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setUnits('codes').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelMSCLimitIUC1.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelMSCLimitIUC1.setDescription('Indicates that, in order to prevent CMs from exceeding MSC, the CMTS will limit the scheduling of broadcast IUC1 to at most this many SCDMA codes per SCMDA frame.')
docsIfExt2CmtsUpChannelMSCMinimumValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 128)).clone(4)).setUnits('codes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelMSCMinimumValue.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelMSCMinimumValue.setDescription('When Maximum Scheduled Codes is enabled, instructs the CMTS to assign cable modems MSC values no less than this value.')
docsIfExt2CmtsUpChannelTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 4), )
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelTable.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelTable.setDescription('This table extends the docsIfUpstreamChannelTable to report additional upstream status information.')
docsIfExt2CmtsUpChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelEntry.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelEntry.setDescription('An entry for upstream status information.')
docsIfExt2CmtsUpChannelTotalCMs = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 4, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelTotalCMs.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelTotalCMs.setDescription('Total number of CMs with docsIfCmtsCmStatusValue of registrationComplete.')
docsIfExt2Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 2))
docsIfExt2Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 2, 1))
docsIfExt2Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 2, 2))
docsIfExt2Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 2, 1, 1)).setObjects(("DOCS-IFEXT2-MIB", "docsIfExt2CmGroup"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIfExt2Compliance = docsIfExt2Compliance.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2Compliance.setDescription('The compliance statement for DOCSIS 20 enhanced features.')
docsIfExt2CmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 2, 2, 1)).setObjects(("DOCS-IFEXT2-MIB", "docsIfExt2CmMscStatusState"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmMscStatusPowerShortfall"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmMscStatusCodeRatio"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmMscStatusMaximumScheduledCodes"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmMscStatusPowerHeadroom"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmMscStatusEffectivePower"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmMscStatusIUC2Control"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmClearLearnedMacAddresses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIfExt2CmGroup = docsIfExt2CmGroup.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmGroup.setDescription('Group of objects implemented in Cable Modems.')
docsIfExt2CmtsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 2, 2, 2)).setObjects(("DOCS-IFEXT2-MIB", "docsIfExt2CmtsMscGlobalEnable"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsCmMscStatusPowerShortfall"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsCmMscStatusCodeRatio"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsCmMscStatusMaximumScheduledCodes"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsCmMscStatusPowerHeadroom"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsCmMscStatusMeasuredSNR"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsCmMscStatusEffectiveSNR"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsUpChannelMscState"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsUpChannelMSCTotalCMs"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsUpChannelMSCLimitIUC1"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsUpChannelMSCMinimumValue"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsUpChannelTotalCMs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIfExt2CmtsGroup = docsIfExt2CmtsGroup.setStatus('current')
if mibBuilder.loadTexts: docsIfExt2CmtsGroup.setDescription('Group of objects implemented in Cable Modem Termination Systems.')
mibBuilder.exportSymbols("DOCS-IFEXT2-MIB", docsIfExt2CmtsUpChannelMscState=docsIfExt2CmtsUpChannelMscState, docsIfExt2CmtsCmMscStatusEffectiveSNR=docsIfExt2CmtsCmMscStatusEffectiveSNR, docsIfExt2Conformance=docsIfExt2Conformance, docsIfExt2CmtsObjects=docsIfExt2CmtsObjects, docsIfExt2CmtsCmMscStatusPowerShortfall=docsIfExt2CmtsCmMscStatusPowerShortfall, docsIfExt2CmtsUpChannelEntry=docsIfExt2CmtsUpChannelEntry, docsIfExt2CmMscStatusCodeRatio=docsIfExt2CmMscStatusCodeRatio, docsIfExt2CmtsUpChannelTotalCMs=docsIfExt2CmtsUpChannelTotalCMs, docsIfExt2Notifications=docsIfExt2Notifications, docsIfExt2CmMscStatusTable=docsIfExt2CmMscStatusTable, docsIfExt2CmtsCmMscStatusMeasuredSNR=docsIfExt2CmtsCmMscStatusMeasuredSNR, docsIfExt2CmMscStatusIUC2Control=docsIfExt2CmMscStatusIUC2Control, docsIfExt2CmtsUpChannelMSCMinimumValue=docsIfExt2CmtsUpChannelMSCMinimumValue, docsIfExt2CmtsUpChannelTable=docsIfExt2CmtsUpChannelTable, docsIfExt2CmtsGroup=docsIfExt2CmtsGroup, docsIfExt2CmtsCmMscStatusMaximumScheduledCodes=docsIfExt2CmtsCmMscStatusMaximumScheduledCodes, docsIfExt2CmMscStatusPowerShortfall=docsIfExt2CmMscStatusPowerShortfall, PYSNMP_MODULE_ID=docsIfExt2Mib, docsIfExt2CmtsUpChannelMSCLimitIUC1=docsIfExt2CmtsUpChannelMSCLimitIUC1, docsIfExt2CmMscStatusState=docsIfExt2CmMscStatusState, docsIfExt2CmMscStatusPowerHeadroom=docsIfExt2CmMscStatusPowerHeadroom, docsIfExt2CmtsCmMscStatusEntry=docsIfExt2CmtsCmMscStatusEntry, docsIfExt2CmtsUpChannelMSCTotalCMs=docsIfExt2CmtsUpChannelMSCTotalCMs, docsIfExt2BaseObjects=docsIfExt2BaseObjects, docsIfExt2CmtsCmMscStatusPowerHeadroom=docsIfExt2CmtsCmMscStatusPowerHeadroom, docsIfExt2CmtsUpChannelMscTable=docsIfExt2CmtsUpChannelMscTable, docsIfExt2CmClearLearnedMacAddresses=docsIfExt2CmClearLearnedMacAddresses, docsIfExt2Compliance=docsIfExt2Compliance, docsIfExt2Groups=docsIfExt2Groups, docsIfExt2CmMscStatusEntry=docsIfExt2CmMscStatusEntry, docsIfExt2CmObjects=docsIfExt2CmObjects, docsIfExt2MibObjects=docsIfExt2MibObjects, docsIfExt2CmtsCmMscStatusCodeRatio=docsIfExt2CmtsCmMscStatusCodeRatio, docsIfExt2CmtsMscGlobalEnable=docsIfExt2CmtsMscGlobalEnable, docsIfExt2CmGroup=docsIfExt2CmGroup, docsIfExt2CmMscStatusEffectivePower=docsIfExt2CmMscStatusEffectivePower, docsIfExt2Mib=docsIfExt2Mib, docsIfExt2CmMscStatusMaximumScheduledCodes=docsIfExt2CmMscStatusMaximumScheduledCodes, docsIfExt2CmtsCmMscStatusTable=docsIfExt2CmtsCmMscStatusTable, docsIfExt2Compliances=docsIfExt2Compliances, docsIfExt2CmtsUpChannelMscEntry=docsIfExt2CmtsUpChannelMscEntry)
