#
# PySNMP MIB module TMESNMP2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TMESNMP2-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:23:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
tme, = mibBuilder.importSymbols("Papouch-SMI", "tme")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, IpAddress, Counter64, iso, Gauge32, Counter32, Unsigned32, ModuleIdentity, MibIdentifier, Integer32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "IpAddress", "Counter64", "iso", "Gauge32", "Counter32", "Unsigned32", "ModuleIdentity", "MibIdentifier", "Integer32", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
vars = MibIdentifier((1, 3, 6, 1, 4, 1, 18248, 1, 1))
traps = MibIdentifier((1, 3, 6, 1, 4, 1, 18248, 1, 2))
int_temperature = MibScalar((1, 3, 6, 1, 4, 1, 18248, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: int_temperature.setStatus('current')
if mibBuilder.loadTexts: int_temperature.setDescription('temperature integer value/10')
string_temperature = MibScalar((1, 3, 6, 1, 4, 1, 18248, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: string_temperature.setStatus('current')
if mibBuilder.loadTexts: string_temperature.setDescription('temperature as string')
device_name = MibScalar((1, 3, 6, 1, 4, 1, 18248, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: device_name.setStatus('current')
if mibBuilder.loadTexts: device_name.setDescription('device name the SNMP Agent')
int_temperature_t = MibScalar((1, 3, 6, 1, 4, 1, 18248, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: int_temperature_t.setStatus('current')
if mibBuilder.loadTexts: int_temperature_t.setDescription('trap object the temperature at integer value/10 ')
string_temperature_t = MibScalar((1, 3, 6, 1, 4, 1, 18248, 1, 2, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: string_temperature_t.setStatus('current')
if mibBuilder.loadTexts: string_temperature_t.setDescription('trap object the temperature at string')
device_name_t = MibScalar((1, 3, 6, 1, 4, 1, 18248, 1, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: device_name_t.setStatus('current')
if mibBuilder.loadTexts: device_name_t.setDescription('trap object device name the SNMP Agent')
warning_t = MibScalar((1, 3, 6, 1, 4, 1, 18248, 1, 2, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: warning_t.setStatus('current')
if mibBuilder.loadTexts: warning_t.setDescription('trap object temperature exceeded lower or upper limit ')
mibBuilder.exportSymbols("TMESNMP2-MIB", warning_t=warning_t, int_temperature_t=int_temperature_t, string_temperature_t=string_temperature_t, string_temperature=string_temperature, device_name=device_name, device_name_t=device_name_t, int_temperature=int_temperature, vars=vars, traps=traps)
