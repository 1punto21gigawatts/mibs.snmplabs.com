#
# PySNMP MIB module HUAWEI-HWTACACS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-HWTACACS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:44:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter64, iso, Counter32, Bits, enterprises, ObjectIdentity, Unsigned32, MibIdentifier, Integer32, IpAddress, Gauge32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter64", "iso", "Counter32", "Bits", "enterprises", "ObjectIdentity", "Unsigned32", "MibIdentifier", "Integer32", "IpAddress", "Gauge32", "NotificationType")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
hwTACACS = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20))
hwTACACS.setRevisions(('2015-07-29 19:15', '2015-05-06 16:00', '2013-08-24 11:00', '2013-07-05 11:00', '2013-03-08 16:00', '2014-02-25 16:00', '2015-04-01 16:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hwTACACS.setRevisionsDescriptions(('hwTACACSServerGroupKey range is changed from 0-255 to 0-392', 'Modify hwTACACSServerGroupTimer value range.', 'Add hwTacacsSetting table.', 'Add hwTacacsSetting table.', 'The MIB contains objects of module HWTACACS.', 'Shared-key range is changed from 0-255 to 0-392', 'Added common server mib table',))
if mibBuilder.loadTexts: hwTACACS.setLastUpdated('201507291915Z')
if mibBuilder.loadTexts: hwTACACS.setOrganization('Huawei Technologies Co.,Ltd.')
if mibBuilder.loadTexts: hwTACACS.setContactInfo("Huawei Industrial Base Bantian, Longgang Shenzhen 518129 People's Republic of China Website: http://www.huawei.com Email: support@huawei.com ")
if mibBuilder.loadTexts: hwTACACS.setDescription('Update descriptions of hwtacacsClientAuthenServerType, hwtacacsClientAuthorServerType, hwtacacsClientAccountServerType, hwtacacsClientCommonServerType nodes')
hwTACACSServerConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1))
hwTACACSServerGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1), )
if mibBuilder.loadTexts: hwTACACSServerGroupTable.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupTable.setDescription('Group table.')
hwTACACSServerGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1), ).setIndexNames((0, "HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupIndex"))
if mibBuilder.loadTexts: hwTACACSServerGroupEntry.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupEntry.setDescription('Group table entry.')
hwTACACSServerGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSServerGroupIndex.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupIndex.setDescription('Hwtacacs server template index.')
hwTACACSServerGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupName.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupName.setDescription('Hwtacacs server template name.')
hwTACACSServerGroupSourceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupSourceIP.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupSourceIP.setDescription('Specify hwtacacs source-ip.')
hwTACACSServerGroupKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 392))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupKey.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupKey.setDescription('Specify group encryption shared-key.')
hwTACACSServerGroupTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupTimer.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupTimer.setDescription('Set time interval before retry the down-server.')
hwTACACSServerGroupDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("open", 1), ("close", 2), ("original", 3))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupDomain.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupDomain.setDescription('Domain switch:1,open;2,close;3,original.')
hwTACACSServerGroupOctFmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("byte", 1), ("kbyte", 2), ("mbyte", 3), ("gbyte", 4))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupOctFmt.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupOctFmt.setDescription('Set octet format,The value must be byte(1), kbyte(2), mbyte(3), gbyte(4).')
hwTACACSServerGroupTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupTimeout.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupTimeout.setDescription('Specify server response timeout.')
hwTACACSServerGroupPriAuthenAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 9), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupPriAuthenAddr.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupPriAuthenAddr.setDescription('Primary authentication server address.')
hwTACACSServerGroupPriAuthenPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(49)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupPriAuthenPort.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupPriAuthenPort.setDescription('Primary authentication server port.')
hwTACACSServerGroupPriAuthorAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 11), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupPriAuthorAddr.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupPriAuthorAddr.setDescription('Primary authorization server address.')
hwTACACSServerGroupPriAuthorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(49)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupPriAuthorPort.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupPriAuthorPort.setDescription('Primary authorization server port.')
hwTACACSServerGroupPriAccoutAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 13), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupPriAccoutAddr.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupPriAccoutAddr.setDescription('Primary accounting server address.')
hwTACACSServerGroupPriAccoutPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(49)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupPriAccoutPort.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupPriAccoutPort.setDescription('Primary accounting server port.')
hwTACACSServerGroupSecAuthenAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 15), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupSecAuthenAddr.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupSecAuthenAddr.setDescription('Secondary authentication server address.')
hwTACACSServerGroupSecAuthenPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(49)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupSecAuthenPort.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupSecAuthenPort.setDescription('Secondary authentication server port.')
hwTACACSServerGroupSecAuthorAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 17), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupSecAuthorAddr.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupSecAuthorAddr.setDescription('Secondary authorization server address.')
hwTACACSServerGroupSecAuthorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(49)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupSecAuthorPort.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupSecAuthorPort.setDescription('Secondary authorization server port.')
hwTACACSServerGroupSecAccoutAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 19), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupSecAccoutAddr.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupSecAccoutAddr.setDescription('Secondary accounting server address.')
hwTACACSServerGroupSecAccoutPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(49)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupSecAccoutPort.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupSecAccoutPort.setDescription('Secondary accounting server port.')
hwTACACSServerGroupCurAuthenAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 21), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSServerGroupCurAuthenAddr.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupCurAuthenAddr.setDescription('Current authentication server address.')
hwTACACSServerGroupCurAuthorAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 22), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSServerGroupCurAuthorAddr.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupCurAuthorAddr.setDescription('Current authorization server address.')
hwTACACSServerGroupCurAccoutAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 23), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSServerGroupCurAccoutAddr.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupCurAccoutAddr.setDescription('Current accounting server address.')
hwTACACSPriAuthenClientRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientRoundTripTime.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientRoundTripTime.setDescription('Round trip time of an Authentication packet with primary authentication server.')
hwTACACSPriAuthenClientAccessReqPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessReqPacket.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessReqPacket.setDescription('Number of Request packets sent to primary authentication server.')
hwTACACSPriAuthenClientAccessReqLogin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessReqLogin.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessReqLogin.setDescription('Number of Login Request packets sent to primary authentication server.')
hwTACACSPriAuthenClientAccessReqChaPass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessReqChaPass.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessReqChaPass.setDescription('Number of Password Change Request packets sent to primary authentication server.')
hwTACACSPriAuthenClientAccessReqSendPass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessReqSendPass.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessReqSendPass.setDescription('Number of Password Sending Request packets sent to primary authentication server.')
hwTACACSPriAuthenClientAccessReqSendAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessReqSendAuth.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessReqSendAuth.setDescription('Number of Authentication Request packets sent to primary authentication server.')
hwTACACSPriAuthenClientAccessResPack = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessResPack.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessResPack.setDescription('Number of Response packets sent by primary authentication server.')
hwTACACSPriAuthenClientAccessResPass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessResPass.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessResPass.setDescription('Number of Authentication Success Response packets sent by primary authentication server.')
hwTACACSPriAuthenClientAccessResFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessResFail.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessResFail.setDescription('Number of Authentication Failure Response packets sent by primary authentication server.')
hwTACACSPriAuthenClientAccessResGetData = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessResGetData.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessResGetData.setDescription('Number of packets for obtaining data sent by primary authentication server.')
hwTACACSPriAuthenClientAccessResGetUser = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessResGetUser.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessResGetUser.setDescription('Number of packets for obtaining user name sent by primary authentication server.')
hwTACACSPriAuthenClientAccessResGetPass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessResGetPass.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessResGetPass.setDescription('Number of packets for obtaining password sent by primary authentication server.')
hwTACACSPriAuthenClientAccessResRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessResRestart.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessResRestart.setDescription('Number of Re-authentication packets sent by primary authentication server.')
hwTACACSPriAuthenClientAccessResError = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessResError.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessResError.setDescription('Number of Response error packets sent by primary authentication server.')
hwTACACSPriAuthenClientAccessResFollow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessResFollow.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessResFollow.setDescription('Number of Follow packets sent by primary authentication server.')
hwTACACSPriAuthenClientMalformedAccessResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientMalformedAccessResponses.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientMalformedAccessResponses.setDescription('Number of Unknown packets sent by primary authentication server.')
hwTACACSPriAuthenClientAccessConPack = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessConPack.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessConPack.setDescription('Number of Connection Request packets sent to primary authentication server.')
hwTACACSPriAuthenClientAccessConAbort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessConAbort.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientAccessConAbort.setDescription('Number of Connection aborting packets sent to primary authentication server.')
hwTACACSPriAuthenClientPendingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientPendingRequests.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientPendingRequests.setDescription('Number of Pending packets sent to primary authentication server.')
hwTACACSPriAuthenClientTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientTimeouts.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientTimeouts.setDescription('Number of Timeout packets sent to primary authentication server.')
hwTACACSPriAuthenClientUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientUnknownTypes.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientUnknownTypes.setDescription('Number of Unknown type packets sent to primary authentication server.')
hwTACACSPriAuthenClientPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthenClientPacketsDropped.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthenClientPacketsDropped.setDescription('Number of Dropped packets when being sent to primary authentication server.')
hwTACACSPriAuthorClientRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthorClientRoundTripTime.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthorClientRoundTripTime.setDescription('Round trip time of an Authorization packet with primary authorization server.')
hwTACACSPriAuthorClientReqPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthorClientReqPacket.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthorClientReqPacket.setDescription('Number of Request packets sent to primary authorization server.')
hwTACACSPriAuthorClientReqEXEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthorClientReqEXEC.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthorClientReqEXEC.setDescription('Number of EXEC packets sent to primary authorization server.')
hwTACACSPriAuthorClientReqVPDN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthorClientReqVPDN.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthorClientReqVPDN.setDescription('Number of VPDN packets sent to primary authorization server.')
hwTACACSPriAuthorClientResPack = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthorClientResPack.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthorClientResPack.setDescription('Number of Response packets sent by primary authorization server.')
hwTACACSPriAuthorClientResEXEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthorClientResEXEC.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthorClientResEXEC.setDescription('Number of EXEC Response packet sent by primary authorization server.')
hwTACACSPriAuthorClientResVPDN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthorClientResVPDN.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthorClientResVPDN.setDescription('Number of VPDN Response packets sent by primary authorization server.')
hwTACACSPriAuthorClientResError = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthorClientResError.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthorClientResError.setDescription('Number of Error packets sent by primary authorization server.')
hwTACACSPriAuthorClientReqPending = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthorClientReqPending.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthorClientReqPending.setDescription('Number of Pending packets sent to primary authorization server.')
hwTACACSPriAuthorClientTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthorClientTimeouts.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthorClientTimeouts.setDescription('Number of Timeout packets sent to primary authorization server.')
hwTACACSPriAuthorClientUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthorClientUnknownTypes.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthorClientUnknownTypes.setDescription('Number of Unknown type packets sent to primary authorization server.')
hwTACACSPriAuthorClientPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAuthorClientPacketsDropped.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAuthorClientPacketsDropped.setDescription('Number of Drop packets sent to primary authorization server.')
hwTACACSPriAccClientRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAccClientRoundTripTime.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAccClientRoundTripTime.setDescription('Round trip time of an Accounting packet with primary accounting server.')
hwTACACSPriAccClientReqPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAccClientReqPacket.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAccClientReqPacket.setDescription('Number of Request packets sent to primary accounting server.')
hwTACACSPriAccClientReqNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAccClientReqNetwork.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAccClientReqNetwork.setDescription('Number of Network Request packets sent to primary accounting server.')
hwTACACSPriAccClientReqConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAccClientReqConnection.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAccClientReqConnection.setDescription('Number of Connection Request packets sent to primary accounting server.')
hwTACACSPriAccClientReqEXEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAccClientReqEXEC.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAccClientReqEXEC.setDescription('Number of EXEC packets sent to primary accounting server.')
hwTACACSPriAccClientReqSysEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAccClientReqSysEvent.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAccClientReqSysEvent.setDescription('Number of System Event Request packets sent to primary accounting server.')
hwTACACSPriAccClientReqCommandLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 64), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAccClientReqCommandLevel.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAccClientReqCommandLevel.setDescription('Number of Command Level Request packets sent to primary accounting server.')
hwTACACSPriAccClientReqUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAccClientReqUpdate.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAccClientReqUpdate.setDescription('Number of Update Request packets sent to primary accounting server.')
hwTACACSPriAccClientResPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAccClientResPacket.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAccClientResPacket.setDescription('Number of Response packets sent by primary accounting server.')
hwTACACSPriAccClientResError = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 67), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAccClientResError.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAccClientResError.setDescription('Number of Error packets sent by primary accounting server.')
hwTACACSPriAccClientReqPending = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 68), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAccClientReqPending.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAccClientReqPending.setDescription('Number of Pending packets sent to primary accounting server.')
hwTACACSPriAccClientTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 69), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAccClientTimeouts.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAccClientTimeouts.setDescription('Number of Timeout packets sent to primary accounting server.')
hwTACACSPriAccClientUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 70), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAccClientUnknownTypes.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAccClientUnknownTypes.setDescription('Number of Unknown types packets sent to primary accounting server.')
hwTACACSPriAccClientPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 71), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSPriAccClientPacketsDropped.setStatus('current')
if mibBuilder.loadTexts: hwTACACSPriAccClientPacketsDropped.setDescription('Number of Dropped packets when being sent to primary accounting server.')
hwTACACSSecAuthenClientRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientRoundTripTime.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientRoundTripTime.setDescription('Round trip time of an Authentication packet with secondary authentication server.')
hwTACACSSecAuthenClientAccessReqPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 73), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessReqPacket.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessReqPacket.setDescription('Number of Request packets sent to secondary authentication server.')
hwTACACSSecAuthenClientAccessReqLogin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 74), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessReqLogin.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessReqLogin.setDescription('Number of Login Request packets sent to secondary authentication server.')
hwTACACSSecAuthenClientAccessReqChaPass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 75), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessReqChaPass.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessReqChaPass.setDescription('Number of Password Change Request packets sent to secondary authentication server.')
hwTACACSSecAuthenClientAccessReqSendPass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 76), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessReqSendPass.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessReqSendPass.setDescription('Number of Password Sending Request packets sent to secondary authentication server.')
hwTACACSSecAuthenClientAccessReqSendAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 77), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessReqSendAuth.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessReqSendAuth.setDescription('Number of Authentication Request packets sent to secondary authentication server.')
hwTACACSSecAuthenClientAccessResPack = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 78), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessResPack.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessResPack.setDescription('Number of Response packets sent by secondary authentication server.')
hwTACACSSecAuthenClientAccessResPass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 79), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessResPass.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessResPass.setDescription('Number of Authentication Success Response packets sent by secondary authentication server.')
hwTACACSSecAuthenClientAccessResFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 80), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessResFail.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessResFail.setDescription('Number of Authentication Failure Response packets sent by secondary authentication server.')
hwTACACSSecAuthenClientAccessResGetData = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 81), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessResGetData.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessResGetData.setDescription('Number of packets for obtaining data sent by secondary authentication server.')
hwTACACSSecAuthenClientAccessResGetUser = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 82), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessResGetUser.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessResGetUser.setDescription('Number of packets for obtaining user name sent by secondary authentication server.')
hwTACACSSecAuthenClientAccessResGetPass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 83), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessResGetPass.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessResGetPass.setDescription('Number of packets for obtaining password sent by secondary authentication server.')
hwTACACSSecAuthenClientAccessResRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 84), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessResRestart.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessResRestart.setDescription('Number of Re-authentication packets sent by secondary authentication server.')
hwTACACSSecAuthenClientAccessResError = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 85), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessResError.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessResError.setDescription('Number of Response error packets sent by secondary authentication server.')
hwTACACSSecAuthenClientAccessResFollow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 86), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessResFollow.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessResFollow.setDescription('Number of Follow packets sent by secondary authentication server.')
hwTACACSSecAuthenClientMalformedAccessResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 87), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientMalformedAccessResponses.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientMalformedAccessResponses.setDescription('Number of Unknown packets sent by secondary authentication server.')
hwTACACSSecAuthenClientAccessConPack = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 88), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessConPack.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessConPack.setDescription('Number of Connection Request packets sent to secondary authentication server.')
hwTACACSSecAuthenClientAccessConAbort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 89), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessConAbort.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientAccessConAbort.setDescription('Number of Connection aborting packets sent to secondary authentication server.')
hwTACACSSecAuthenClientPendingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 90), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientPendingRequests.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientPendingRequests.setDescription('Number of Pending packets sent to secondary authentication server.')
hwTACACSSecAuthenClientTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 91), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientTimeouts.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientTimeouts.setDescription('Number of Timeout packets sent to secondary authentication server.')
hwTACACSSecAuthenClientUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 92), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientUnknownTypes.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientUnknownTypes.setDescription('Number of Unknown type packets sent to secondary authentication server.')
hwTACACSSecAuthenClientPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 93), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthenClientPacketsDropped.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthenClientPacketsDropped.setDescription('Number of Dropped packets when being sent to secondary authentication server.')
hwTACACSSecAuthorClientRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 94), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthorClientRoundTripTime.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthorClientRoundTripTime.setDescription('Round trip time of an Authorization packet with secondary authorization server.')
hwTACACSSecAuthorClientReqPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 95), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthorClientReqPacket.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthorClientReqPacket.setDescription('Number of Request packets sent to secondary authorization server.')
hwTACACSSecAuthorClientReqEXEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 96), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthorClientReqEXEC.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthorClientReqEXEC.setDescription('Number of EXEC packets sent to secondary authorization server.')
hwTACACSSecAuthorClientReqVPDN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 97), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthorClientReqVPDN.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthorClientReqVPDN.setDescription('Number of VPDN packets sent to secondary authorization server.')
hwTACACSSecAuthorClientResPack = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 98), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthorClientResPack.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthorClientResPack.setDescription('Number of Response packets sent by secondary authorization server.')
hwTACACSSecAuthorClientResEXEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 99), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthorClientResEXEC.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthorClientResEXEC.setDescription('Number of EXEC Response packet sent by secondary authorization server.')
hwTACACSSecAuthorClientResVPDN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 100), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthorClientResVPDN.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthorClientResVPDN.setDescription('Number of VPDN Response packets sent by secondary authorization server.')
hwTACACSSecAuthorClientResError = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 101), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthorClientResError.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthorClientResError.setDescription('Number of Error packets sent by secondary authorization server.')
hwTACACSSecAuthorClientReqPending = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 102), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthorClientReqPending.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthorClientReqPending.setDescription('Number of Pending packets sent to secondary authorization server.')
hwTACACSSecAuthorClientTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 103), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthorClientTimeouts.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthorClientTimeouts.setDescription('Number of Timeout packets sent to secondary authorization server.')
hwTACACSSecAuthorClientUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 104), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthorClientUnknownTypes.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthorClientUnknownTypes.setDescription('Number of Unknown type packets sent to secondary authorization server.')
hwTACACSSecAuthorClientPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 105), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAuthorClientPacketsDropped.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAuthorClientPacketsDropped.setDescription('Number of Drop packets sent to secondary authorization server.')
hwTACACSSecAccClientRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 106), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAccClientRoundTripTime.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAccClientRoundTripTime.setDescription('Round trip time of an Accounting packet with secondary accounting server.')
hwTACACSSecAccClientReqPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 107), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAccClientReqPacket.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAccClientReqPacket.setDescription('Number of Request packets sent to secondary accounting server.')
hwTACACSSecAccClientReqNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 108), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAccClientReqNetwork.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAccClientReqNetwork.setDescription('Number of Network Request packets sent to secondary accounting server.')
hwTACACSSecAccClientReqConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 109), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAccClientReqConnection.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAccClientReqConnection.setDescription('Number of Connection Request packets sent to secondary accounting server.')
hwTACACSSecAccClientReqEXEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 110), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAccClientReqEXEC.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAccClientReqEXEC.setDescription('Number of EXEC packets sent to secondary accounting server.')
hwTACACSSecAccClientReqSysEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 111), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAccClientReqSysEvent.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAccClientReqSysEvent.setDescription('Number of System Event Request packets sent to secondary accounting server.')
hwTACACSSecAccClientReqCommandLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 112), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAccClientReqCommandLevel.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAccClientReqCommandLevel.setDescription('Request command level packets about second accounting server.')
hwTACACSSecAccClientReqUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 113), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAccClientReqUpdate.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAccClientReqUpdate.setDescription('Number of Update Request packets sent to secondary accounting server.')
hwTACACSSecAccClientResPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 114), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAccClientResPacket.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAccClientResPacket.setDescription('Number of Response packets sent by secondary accounting server.')
hwTACACSSecAccClientResError = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 115), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAccClientResError.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAccClientResError.setDescription('Number of Error packets sent by secondary accounting server.')
hwTACACSSecAccClientReqPending = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 116), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAccClientReqPending.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAccClientReqPending.setDescription('Number of Pending packets sent to secondary accounting server.')
hwTACACSSecAccClientTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 117), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAccClientTimeouts.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAccClientTimeouts.setDescription('Number of Timeout packets sent to secondary accounting server.')
hwTACACSSecAccClientUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 118), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAccClientUnknownTypes.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAccClientUnknownTypes.setDescription('Number of Unknown types packets sent to secondary accounting server.')
hwTACACSSecAccClientPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 119), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSSecAccClientPacketsDropped.setStatus('current')
if mibBuilder.loadTexts: hwTACACSSecAccClientPacketsDropped.setDescription('Number of Dropped packets when being sent to secondary accounting server.')
hwTACACSServerGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 120), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwTACACSServerGroupRowStatus.setDescription('RowStatus.')
hwTacacsConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 2))
hwTacacsCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 2, 1))
hwTacacsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 2, 1, 1)).setObjects(("HUAWEI-HWTACACS-MIB", "hwTacacsTableGroup"), ("HUAWEI-HWTACACS-MIB", "hwTacacsSettingGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTacacsCompliance = hwTacacsCompliance.setStatus('current')
if mibBuilder.loadTexts: hwTacacsCompliance.setDescription('The compliance statement for systems supporting the this module.')
hwTacacsObjectGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 2, 2))
hwTacacsTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 2, 2, 1)).setObjects(("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupIndex"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupName"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupSourceIP"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupKey"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupTimer"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupDomain"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupOctFmt"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupTimeout"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupPriAuthenAddr"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupPriAuthenPort"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupPriAuthorAddr"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupPriAuthorPort"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupPriAccoutAddr"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupPriAccoutPort"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupSecAuthenAddr"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupSecAuthenPort"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupSecAuthorAddr"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupSecAuthorPort"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupSecAccoutAddr"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupSecAccoutPort"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupCurAuthenAddr"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupCurAuthorAddr"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupCurAccoutAddr"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientRoundTripTime"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientAccessReqPacket"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientAccessReqLogin"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientAccessReqChaPass"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientAccessReqSendPass"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientAccessReqSendAuth"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientAccessResPack"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientAccessResPass"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientAccessResFail"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientAccessResGetData"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientAccessResGetUser"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientAccessResGetPass"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientAccessResRestart"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientAccessResError"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientAccessResFollow"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientMalformedAccessResponses"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientAccessConPack"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientAccessConAbort"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientPendingRequests"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientTimeouts"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientUnknownTypes"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthenClientPacketsDropped"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthorClientRoundTripTime"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthorClientReqPacket"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthorClientReqEXEC"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthorClientReqVPDN"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthorClientResPack"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthorClientResEXEC"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthorClientResVPDN"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthorClientResError"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthorClientReqPending"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthorClientTimeouts"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthorClientUnknownTypes"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAuthorClientPacketsDropped"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAccClientRoundTripTime"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAccClientReqPacket"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAccClientReqNetwork"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAccClientReqConnection"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAccClientReqEXEC"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAccClientReqSysEvent"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAccClientReqCommandLevel"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAccClientReqUpdate"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAccClientResPacket"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAccClientResError"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAccClientReqPending"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAccClientTimeouts"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAccClientUnknownTypes"), ("HUAWEI-HWTACACS-MIB", "hwTACACSPriAccClientPacketsDropped"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientRoundTripTime"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientAccessReqPacket"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientAccessReqLogin"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientAccessReqChaPass"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientAccessReqSendPass"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientAccessReqSendAuth"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientAccessResPack"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientAccessResPass"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientAccessResFail"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientAccessResGetData"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientAccessResGetUser"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientAccessResGetPass"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientAccessResRestart"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientAccessResError"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientAccessResFollow"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientMalformedAccessResponses"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientAccessConPack"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientAccessConAbort"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientPendingRequests"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientTimeouts"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientUnknownTypes"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthenClientPacketsDropped"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthorClientRoundTripTime"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthorClientReqPacket"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthorClientReqEXEC"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthorClientReqVPDN"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthorClientResPack"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthorClientResEXEC"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthorClientResVPDN"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthorClientResError"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthorClientReqPending"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthorClientTimeouts"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthorClientUnknownTypes"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAuthorClientPacketsDropped"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAccClientRoundTripTime"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAccClientReqPacket"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAccClientReqNetwork"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAccClientReqConnection"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAccClientReqEXEC"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAccClientReqSysEvent"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAccClientReqCommandLevel"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAccClientReqUpdate"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAccClientResPacket"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAccClientResError"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAccClientReqPending"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAccClientTimeouts"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAccClientUnknownTypes"), ("HUAWEI-HWTACACS-MIB", "hwTACACSSecAccClientPacketsDropped"), ("HUAWEI-HWTACACS-MIB", "hwTACACSServerGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTacacsTableGroup = hwTacacsTableGroup.setStatus('current')
if mibBuilder.loadTexts: hwTacacsTableGroup.setDescription('The HWTACACS configuration table.')
hwTacacsSettingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 2, 2, 2)).setObjects(("HUAWEI-HWTACACS-MIB", "hwTACACSEnable"), ("HUAWEI-HWTACACS-MIB", "hwTACACSAcctStopResendDisable"), ("HUAWEI-HWTACACS-MIB", "hwTACACSAcctStopResendNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTacacsSettingGroup = hwTacacsSettingGroup.setStatus('current')
if mibBuilder.loadTexts: hwTacacsSettingGroup.setDescription('The HWTACACS Setting table.')
hwtacacsClientMng = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3))
hwtacacsClient = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1))
hwtacacsClientAuthenRequestPackets = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenRequestPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenRequestPackets.setDescription('The object specifies total number of authentication request packets sent by this router.')
hwtacacsClientAuthenAcceptPackets = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenAcceptPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenAcceptPackets.setDescription('The object specifies total number of authentication accept responses received by this router.')
hwtacacsClientAuthenRejectPackets = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenRejectPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenRejectPackets.setDescription('The object specifies total number of authentication reject responses received by this router.')
hwtacacsClientAuthenPendRequests = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenPendRequests.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenPendRequests.setDescription('The object specifies total number of pending authentication requests for this router.')
hwtacacsClientAuthorReqPackets = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthorReqPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorReqPackets.setDescription('The object specifies total number of authorization request packets sent by this router.')
hwtacacsClientAuthorAcceptPackets = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthorAcceptPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorAcceptPackets.setDescription('The object specifies total number of authorization accept responses received by this router.')
hwtacacsClientAuthorRejectPackets = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthorRejectPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorRejectPackets.setDescription('The object specifies total number of authorization reject responses received by this router.')
hwtacacsClientAuthorPendRequests = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthorPendRequests.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorPendRequests.setDescription('The object specifies total number of pending authorization requests for this router.')
hwtacacsClientDroppedPackets = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientDroppedPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientDroppedPackets.setDescription('The object specifies total number of packets dropped for this router.')
hwtacacsClientAcctRequestPackets = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAcctRequestPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAcctRequestPackets.setDescription('The object specifies total number of accounting request packets sent by this router.')
hwtacacsClientAcctResponsePackets = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAcctResponsePackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAcctResponsePackets.setDescription('The object specifies total number of accounting response packets received by this router.')
hwtacacsClientAcctErrorPackets = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAcctErrorPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAcctErrorPackets.setDescription('The object specifies total number of accounting error packets received by this router.')
hwtacacsClientAcctPendingPackets = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAcctPendingPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAcctPendingPackets.setDescription('The object specifies total number of pending accounting requests for this router.')
hwtacacsTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 14), )
if mibBuilder.loadTexts: hwtacacsTemplateTable.setStatus('current')
if mibBuilder.loadTexts: hwtacacsTemplateTable.setDescription('HwTACACS Template table.')
hwtacacsTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 14, 1), ).setIndexNames((0, "HUAWEI-HWTACACS-MIB", "hwtacacsClientTemplateIndex"))
if mibBuilder.loadTexts: hwtacacsTemplateEntry.setStatus('current')
if mibBuilder.loadTexts: hwtacacsTemplateEntry.setDescription('HwTACACS Template table entry.')
hwtacacsClientTemplateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: hwtacacsClientTemplateIndex.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientTemplateIndex.setDescription('A number uniquely identifying each HwTACACS Template.')
hwtacacsClientTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 14, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientTemplateName.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientTemplateName.setDescription('The object specifies the name of the server template')
hwtacacsClientSharedKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 14, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 392))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientSharedKey.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientSharedKey.setDescription('The object specifies the shared key of the template')
hwtacacsClientSourceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 14, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientSourceIP.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientSourceIP.setDescription('The object specifies the source address to be used while communicating with the servers')
hwtacacsClientQuietTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 14, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientQuietTimer.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientQuietTimer.setDescription('The object specifies the quiet timeout value. Default value is 5(in minute)')
hwtacacsClientResponseTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 14, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientResponseTimeout.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientResponseTimeout.setDescription('The object specifies the server response timeout value. Default value is 5')
hwtacacsClientDomainNameIncluded = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 14, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientDomainNameIncluded.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientDomainNameIncluded.setDescription('The object specifies if the domain name is included or not in the username 1 - Domain Included 0 - Undo Domain ')
hwtacacsClientRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 14, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientRowStatus.setDescription('The object specifies the status of this table entry. When the status is active, all the hwtacacsTemplateEntry table field values in the entry are allowed to be modified. The following objects may not be modified while the value of this object is active(1): - hwtacacsClientTemplateName.')
hwtacacsClientAuthenServerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15), )
if mibBuilder.loadTexts: hwtacacsClientAuthenServerTable.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenServerTable.setDescription('HwTACACS Authentication Server table.')
hwtacacsClientAuthenServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1), ).setIndexNames((0, "HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenTemplateIndex"), (0, "HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenServerIndex"))
if mibBuilder.loadTexts: hwtacacsClientAuthenServerEntry.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenServerEntry.setDescription('HwTACACS Authentication Server table entry.')
hwtacacsClientAuthenTemplateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: hwtacacsClientAuthenTemplateIndex.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenTemplateIndex.setDescription('A number uniquely identifying the HwTACACS Template for which this server belongs to.')
hwtacacsClientAuthenServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: hwtacacsClientAuthenServerIndex.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenServerIndex.setDescription('A number uniquely identifying each HwTACACS authentication server with which this client communicates.')
hwtacacsClientAuthenServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientAuthenServerAddress.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenServerAddress.setDescription('The object specifies the IP address of the server')
hwtacacsClientAuthenServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(49)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientAuthenServerPort.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenServerPort.setDescription('The TCP port the client is using to send authentication requests to this server.Default value is 49.')
hwtacacsClientAuthenServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientAuthenServerType.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenServerType.setDescription('The Server Type indicates the type of server. 0 - Primary 1 - Secondary.')
hwtacacsClientAuthenServerState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenServerState.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenServerState.setDescription('The current server state identified by client based on the server responses. (0 - UP or 1 - DOWN)')
hwtacacsClientAuthenServerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientAuthenServerMode.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenServerMode.setDescription('The mode of operation of authentication server for this client. (1 - MUX, 0 - NonMux)')
hwtacacsClientAuthenRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenRoundTripTime.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenRoundTripTime.setDescription('The time interval (in hundredths of a second) between the most recent authentication response and the authentication request that matched it from this server.')
hwtacacsClientAuthenAccessReqPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenAccessReqPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenAccessReqPackets.setDescription('The number of access request packets received.')
hwtacacsClientAuthenAccessChngPassRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenAccessChngPassRequests.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenAccessChngPassRequests.setDescription('The number of change password requests received')
hwtacacsClientAuthenAccessSendPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenAccessSendPassPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenAccessSendPassPackets.setDescription('The number of send password packets.')
hwtacacsClientAuthenAccessSendAuthenPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenAccessSendAuthenPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenAccessSendAuthenPackets.setDescription('The number of send authentication packets.')
hwtacacsClientAuthenStartPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenStartPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenStartPackets.setDescription('The total number of authentication packets sent to this server.')
hwtacacsClientAuthenContinuePackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenContinuePackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenContinuePackets.setDescription('The total number of authentication continue packets sent to this server.')
hwtacacsClientAuthenContinueAbortPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenContinueAbortPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenContinueAbortPackets.setDescription('The total number of authentication client continue abort packets sent to this server.')
hwtacacsClientAuthenReplyPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenReplyPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenReplyPackets.setDescription('The total number of authentication replies from this server.')
hwtacacsClientAuthenReplyPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenReplyPassPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenReplyPassPackets.setDescription('The total number of authentication pass reply from this server.')
hwtacacsClientAuthenReplyFailPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenReplyFailPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenReplyFailPackets.setDescription('The total number of authentication which are failed by the authentication processes. This also includes follow packets from this server.')
hwtacacsClientAuthenReplyGetDataPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenReplyGetDataPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenReplyGetDataPackets.setDescription("The total number of 'get data' authentication reply packets from this server.")
hwtacacsClientAuthenReplyGetUserPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenReplyGetUserPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenReplyGetUserPackets.setDescription("The total number of 'get user' authentication reply packets from this server.")
hwtacacsClientAuthenReplyGetPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenReplyGetPassPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenReplyGetPassPackets.setDescription("The total number of 'get pass' authentication reply packets from this server.")
hwtacacsClientAuthenReplyErrorPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenReplyErrorPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenReplyErrorPackets.setDescription('The total number of erroneous authentication reply packets from this server.')
hwtacacsClientAuthenReplyRestartPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenReplyRestartPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenReplyRestartPackets.setDescription('The total number of authentication restart reply packets from this server.')
hwtacacsClientAuthenReplyFollowPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenReplyFollowPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenReplyFollowPackets.setDescription('The total number of authentication follow reply packets from this server.')
hwtacacsClientAuthenPendingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenPendingRequests.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenPendingRequests.setDescription('The number of HwTACACS authentication packets destined for this server that have not yet timed out or received a response. This variable is incremented when a Request is sent and decremented due to receipt of a response or a timeout. ')
hwtacacsClientAuthenTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenTimeouts.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenTimeouts.setDescription('The number of authentication timeouts to this server.')
hwtacacsClientAuthenUnknownTypePackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenUnknownTypePackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenUnknownTypePackets.setDescription('The number of HwTACACS authentication packets of unknown type which were received from this server on the port.')
hwtacacsClientAuthenDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenDroppedPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenDroppedPackets.setDescription('The number of HwTACACS authentication packets of which were received from this server on the port and dropped for some other reason.')
hwtacacsClientAuthenVPNName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 29), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthenVPNName.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenVPNName.setDescription('The object specifies the VPN instance name of the server. Default value is _public_')
hwtacacsClientAuthenRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 15, 1, 30), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientAuthenRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenRowStatus.setDescription('The object specifies the status of this table entry. When the status is active, hwtacacsClientAuthenServerEntry table fields value in the entry are allowed to be modified. The following objects may not be modified while the value of this object is active(1): - hwtacacsClientAuthenServerAddress. - hwtacacsClientAuthenServerType.')
hwtacacsClientAuthorServerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16), )
if mibBuilder.loadTexts: hwtacacsClientAuthorServerTable.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorServerTable.setDescription('HwTACACS Authorization Server table.')
hwtacacsClientAuthorServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16, 1), ).setIndexNames((0, "HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorTemplateIndex"), (0, "HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorServerIndex"))
if mibBuilder.loadTexts: hwtacacsClientAuthorServerEntry.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorServerEntry.setDescription('HwTACACS Authorization Server table entry.')
hwtacacsClientAuthorTemplateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: hwtacacsClientAuthorTemplateIndex.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorTemplateIndex.setDescription('A number uniquely identifying the HwTACACS Template for which this server belongs to.')
hwtacacsClientAuthorServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)))
if mibBuilder.loadTexts: hwtacacsClientAuthorServerIndex.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorServerIndex.setDescription('A number uniquely identifying each HwTACACS authorization server with which this client communicates.')
hwtacacsClientAuthorServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientAuthorServerAddress.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorServerAddress.setDescription('The object specifies the IP address of the server')
hwtacacsClientAuthorServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(49)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientAuthorServerPort.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorServerPort.setDescription('The TCP port the client is using to send authorization requests to this server.Default value is 49.')
hwtacacsClientAuthorServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientAuthorServerType.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorServerType.setDescription('The Server Type indicates the type of server. 0 - Primary 1 - Secondary.')
hwtacacsClientAuthorServerState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthorServerState.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorServerState.setDescription('The current server state identified by client based on the server responses. (0 - UP or 1 - DOWN)')
hwtacacsClientAuthorServerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientAuthorServerMode.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorServerMode.setDescription('The mode of operation of authorization server for this client. (1 - MUX, 0 - NonMux)')
hwtacacsClientAuthorRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthorRoundTripTime.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorRoundTripTime.setDescription('The time interval (in hundredths of a second) between the most recent authorization response and the authorization request that matched it from this server.')
hwtacacsClientAuthorRequestPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthorRequestPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorRequestPackets.setDescription('The total number of authorization request packets sent to this server.')
hwtacacsClientAuthorResponseAcceptPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthorResponseAcceptPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorResponseAcceptPackets.setDescription('The total number of authorization successful response packets received from this server.')
hwtacacsClientAuthorResponseRejectPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthorResponseRejectPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorResponseRejectPackets.setDescription('The total number of authorization failure response packets received from this server.')
hwtacacsClientAuthorResponseErrorPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthorResponseErrorPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorResponseErrorPackets.setDescription('The total number of erroneous authorization response packets from server.')
hwtacacsClientAuthorPendingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthorPendingRequests.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorPendingRequests.setDescription('The number of authorization packets destined for this server that have not yet timed out or received a response. This variable is incremented when a Request is sent and decremented due to receipt of a response or a timeout.')
hwtacacsClientAuthorTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthorTimeouts.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorTimeouts.setDescription('The number of authorization timeouts to this server.')
hwtacacsClientAuthorUnknownTypePackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthorUnknownTypePackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorUnknownTypePackets.setDescription('The number of authorization packets of unknown type which were received from this server on the port.')
hwtacacsClientAuthorDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthorDroppedPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorDroppedPackets.setDescription('The number of authorization packets of which were received from this server on the port and dropped for some other reason.')
hwtacacsClientAuthorVPNName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAuthorVPNName.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorVPNName.setDescription('The object specifies the VPN instance name of the server. Default value is _public_')
hwtacacsClientAuthorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 16, 1, 18), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientAuthorRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorRowStatus.setDescription("The object specifies the status of this table entry. When the status is active, hwtacacsClientAuthorServerEntry table fields's value in the entry are allowed to be modified. The following objects may not be modified while the value of this object is active(1): - hwtacacsClientAuthorServerAddress. - hwtacacsClientAuthorServerType.")
hwtacacsClientAccountServerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17), )
if mibBuilder.loadTexts: hwtacacsClientAccountServerTable.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountServerTable.setDescription('HwTACACS Account Server table.')
hwtacacsClientAccountServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1), ).setIndexNames((0, "HUAWEI-HWTACACS-MIB", "hwtacacsClientAccountTemplateIndex"), (0, "HUAWEI-HWTACACS-MIB", "hwtacacsClientAccountServerIndex"))
if mibBuilder.loadTexts: hwtacacsClientAccountServerEntry.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountServerEntry.setDescription('HwTACACS Account Server table entry.')
hwtacacsClientAccountTemplateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: hwtacacsClientAccountTemplateIndex.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountTemplateIndex.setDescription('A number uniquely identifying the HwTACACS Template for which this server belongs to.')
hwtacacsClientAccountServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: hwtacacsClientAccountServerIndex.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountServerIndex.setDescription('A number uniquely identifying each HwTACACS accounting server with which this client communicates.')
hwtacacsClientAccountServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientAccountServerAddress.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountServerAddress.setDescription('The object specifies the IP address of the server')
hwtacacsClientAccountServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(49)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientAccountServerPort.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountServerPort.setDescription('The TCP port the client is using to send accounting requests to this server.Default value is 49.')
hwtacacsClientAccountServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientAccountServerType.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountServerType.setDescription('The Server Type indicates the type of server. 0 - Primary 1 - Secondary.')
hwtacacsClientAccountServerState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAccountServerState.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountServerState.setDescription('The current server state identified by client based on the server responses.(0 - UP or 1 - DOWN)')
hwtacacsClientAccountServerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientAccountServerMode.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountServerMode.setDescription('The mode of operation of accounting server for this client.(1 - MUX, 0 - NonMux)')
hwtacacsClientAccountRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAccountRoundTripTime.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountRoundTripTime.setDescription('The time interval (in hundredths of a second) between the most recent accounting response and the accounting request that matched it from this server.')
hwtacacsClientAccountRequestPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAccountRequestPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountRequestPackets.setDescription('The total number of accounting request packets sent to this server.')
hwtacacsClientAccountReqNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAccountReqNetwork.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountReqNetwork.setDescription('The total number of Network request packets sent to this server.')
hwtacacsClientAccountReqConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAccountReqConnection.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountReqConnection.setDescription('The total number of Connection request packets sent to this server.')
hwtacacsClientAccountReqEXEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAccountReqEXEC.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountReqEXEC.setDescription('The total number of EXEC accounting request packets sent to this server.')
hwtacacsClientAccountReqSysEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAccountReqSysEvent.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountReqSysEvent.setDescription('The total number of System Event accounting request packets sent to this server.')
hwtacacsClientAccountReqCommandLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAccountReqCommandLevel.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountReqCommandLevel.setDescription('The total number of Command record accounting request packets sent to this server.')
hwtacacsClientAccountReqUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAccountReqUpdate.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountReqUpdate.setDescription('The total number of Command record accounting request packets sent to this server.')
hwtacacsClientAccountResponsePackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAccountResponsePackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountResponsePackets.setDescription('The total number of accounting successful response packets received from this server.')
hwtacacsClientAccountResponseErrorPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAccountResponseErrorPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountResponseErrorPackets.setDescription('The total number of erroneous accounting response packets from server.')
hwtacacsClientAccountReqPending = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAccountReqPending.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountReqPending.setDescription('The number of accounting packets destined for this server that have not yet timed out or received a response. This variable is incremented when a Request is sent and decremented due to receipt of a response or a timeout.')
hwtacacsClientAccountTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAccountTimeouts.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountTimeouts.setDescription('The number of accounting timeout packets to this server.')
hwtacacsClientAccountUnKnownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAccountUnKnownTypes.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountUnKnownTypes.setDescription('The number of accounting packets of unknown type which were received from this server on the port.')
hwtacacsClientAccountPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAccountPacketsDropped.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountPacketsDropped.setDescription('The number of accounting packets of which were received from this server on the port and dropped for some other reason.')
hwtacacsClientAccountVPNName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 22), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientAccountVPNName.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountVPNName.setDescription('The object specifies the VPN instance name of the server.Default value is _public_')
hwtacacsClientAccountRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 17, 1, 23), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientAccountRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountRowStatus.setDescription("The object specifies the status of this table entry. When the status is active, hwtacacsClientAccountServerEntry table fields's value in the entry are allowed to be modified. The following objects may not be modified while the value of this object is active(1): - hwtacacsClientAccountServerAddress. - hwtacacsClientAccountServerType.")
hwtacacsClientCommonServerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18), )
if mibBuilder.loadTexts: hwtacacsClientCommonServerTable.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonServerTable.setDescription('HwTACACS Common Server table.')
hwtacacsClientCommonServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1), ).setIndexNames((0, "HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonTemplateIndex"), (0, "HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonServerIndex"))
if mibBuilder.loadTexts: hwtacacsClientCommonServerEntry.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonServerEntry.setDescription('HwTACACS Common Server table entry.')
hwtacacsClientCommonTemplateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: hwtacacsClientCommonTemplateIndex.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonTemplateIndex.setDescription('A number uniquely identifying the HwTACACS Template for which this server belongs to.')
hwtacacsClientCommonServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: hwtacacsClientCommonServerIndex.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonServerIndex.setDescription('A number uniquely identifying each HwTACACS common server with which this client communicates.')
hwtacacsClientCommonServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientCommonServerAddress.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonServerAddress.setDescription('The object specifies the IP address of the server')
hwtacacsClientCommonServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(49)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientCommonServerPort.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonServerPort.setDescription('The TCP port the client is using to send common requests to this server.Default value is 49.')
hwtacacsClientCommonServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientCommonServerType.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonServerType.setDescription('The Server Type indicates the type of server. 0 - Primary 1 - Secondary.')
hwtacacsClientCommonServerState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonServerState.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonServerState.setDescription('The current server state identified by client based on the server responses.(0 - UP or 1 - DOWN)')
hwtacacsClientCommonServerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientCommonServerMode.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonServerMode.setDescription('The mode of operation of common server for this client. (1 - MUX, 0 - NonMux)')
hwtacacsClientCommonRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonRoundTripTime.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonRoundTripTime.setDescription('The time interval (in hundredths of a second) between the most recent response and the request that matched it from this server.')
hwtacacsClientCommonRequestPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonRequestPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonRequestPackets.setDescription('The total number of common request packets sent to this server.')
hwtacacsClientCommonAccessChngPassRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonAccessChngPassRequests.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonAccessChngPassRequests.setDescription('The number of change password requests received')
hwtacacsClientCommonAccessSendPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonAccessSendPassPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonAccessSendPassPackets.setDescription('The number of send password packets.')
hwtacacsClientCommonAccessSendAuthenPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonAccessSendAuthenPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonAccessSendAuthenPackets.setDescription('The number of send authentication packets.')
hwtacacsClientCommonStartPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonStartPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonStartPackets.setDescription('The total number of authentication packets sent to this server.')
hwtacacsClientCommonContinuePackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonContinuePackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonContinuePackets.setDescription('The total number of authentication continue packets sent to this server.')
hwtacacsClientCommomContinueAbortPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommomContinueAbortPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommomContinueAbortPackets.setDescription('The total number of authentication client continue abort packets sent to this server.')
hwtacacsClientCommonReplyPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonReplyPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonReplyPackets.setDescription('The total number of authentication, authorization and accounting replies from this server.')
hwtacacsClientCommonReplyPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonReplyPassPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonReplyPassPackets.setDescription('The total number of authentication, authorization and accounting pass replies from this server.')
hwtacacsClientCommonReplyFailPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonReplyFailPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonReplyFailPackets.setDescription('The total number of authentication, authorization and accounting pass fail from this server.')
hwtacacsClientCommonReplyGetDataPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonReplyGetDataPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonReplyGetDataPackets.setDescription('The total number of authentication get data packets from this server.')
hwtacacsClientCommonReplyGetUserPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonReplyGetUserPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonReplyGetUserPackets.setDescription('The total number of authentication get user packets from this server.')
hwtacacsClientCommonReplyGetPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonReplyGetPassPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonReplyGetPassPackets.setDescription('The total number of authentication get pass packets from this server.')
hwtacacsClientCommonReplyErrorPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonReplyErrorPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonReplyErrorPackets.setDescription('The total number of authentication, authorization and accounting error packets from this server.')
hwtacacsClientCommonReplyRestartPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonReplyRestartPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonReplyRestartPackets.setDescription('The total number of restart reply packets from this server.')
hwtacacsClientCommonReplyFollowPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonReplyFollowPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonReplyFollowPackets.setDescription('The total number of follow reply packets from this server.')
hwtacacsClientCommonReqNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonReqNetwork.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonReqNetwork.setDescription('The total number of Network request packets sent to this server.')
hwtacacsClientCommonReqConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonReqConnection.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonReqConnection.setDescription('The total number of Connection request packets sent to this server.')
hwtacacsClientCommonReqEXEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonReqEXEC.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonReqEXEC.setDescription('The total number of EXEC accounting request packets sent to this server.')
hwtacacsClientCommonReqSysEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonReqSysEvent.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonReqSysEvent.setDescription('The total number of System Event accounting request packets sent to this server.')
hwtacacsClientCommonReqCommandLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonReqCommandLevel.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonReqCommandLevel.setDescription('The total number of Command record accounting request packets sent to this server.')
hwtacacsClientCommonReqUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonReqUpdate.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonReqUpdate.setDescription('The total number of Command record accounting request packets sent to this server.')
hwtacacsClientCommonPendingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonPendingRequests.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonPendingRequests.setDescription('The number of HwTACACS authentication, authorization and accouting packets destined for this server that have not yet timed out or received a response. This variable is incremented when a Request is sent and decremented due to receipt of a response or a timeout. ')
hwtacacsClientCommonTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonTimeouts.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonTimeouts.setDescription('The number of request timeouts to this server.')
hwtacacsClientCommonUnknownTypePackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonUnknownTypePackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonUnknownTypePackets.setDescription('The number of HwTACACS packets of unknown type which were received from this server on the port.')
hwtacacsClientCommonDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonDroppedPackets.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonDroppedPackets.setDescription('The number of HwTACACS packets of which were received from this server on the port and dropped for some other reason.')
hwtacacsClientCommonVPNName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 35), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwtacacsClientCommonVPNName.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonVPNName.setDescription('The object specifies the VPN instance name of the server. Default value is _public_')
hwtacacsClientCommonRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 1, 18, 1, 36), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwtacacsClientCommonRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonRowStatus.setDescription('The object specifies the status of this table entry. When the status is active, hwtacacsClientCommonServerEntry table fields value in the entry are allowed to be modified. The following objects may not be modified while the value of this object is active(1): - hwtacacsClientCommonServerAddress. - hwtacacsClientCommonServerType.')
hwtacacsClientConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 2))
hwtacacsClientCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 2, 1))
hwtacacsClientCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 2, 1, 1)).setObjects(("HUAWEI-HWTACACS-MIB", "hwtacacsClientTemplateGroup"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientGroup"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorServerGroup"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenServerGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwtacacsClientCompliance = hwtacacsClientCompliance.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCompliance.setDescription('The compliance statement for systems supporting the HwTACACS Client MIB.')
hwtacacsClientObjectGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 2, 2))
hwtacacsClientGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 2, 2, 1)).setObjects(("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenRequestPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenAcceptPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenRejectPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenPendRequests"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorReqPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorAcceptPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorRejectPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorPendRequests"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientDroppedPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAcctRequestPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAcctResponsePackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAcctErrorPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAcctPendingPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwtacacsClientGroup = hwtacacsClientGroup.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientGroup.setDescription('The basic collection of objects providing management of HwTACACS Clients. ')
hwtacacsClientTemplateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 2, 2, 2)).setObjects(("HUAWEI-HWTACACS-MIB", "hwtacacsClientTemplateName"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientSharedKey"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientSourceIP"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientResponseTimeout"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientDomainNameIncluded"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientQuietTimer"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwtacacsClientTemplateGroup = hwtacacsClientTemplateGroup.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientTemplateGroup.setDescription('The basic collection of objects providing management of HwTACACS Templates.')
hwtacacsClientAuthenServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 2, 2, 3)).setObjects(("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenServerAddress"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenServerPort"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenServerType"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenServerState"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenServerMode"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenRoundTripTime"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenAccessReqPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenAccessChngPassRequests"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenAccessSendPassPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenAccessSendAuthenPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenStartPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenContinuePackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenContinueAbortPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenReplyPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenReplyPassPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenReplyFailPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenReplyGetDataPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenReplyGetUserPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenReplyGetPassPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenReplyErrorPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenReplyRestartPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenReplyFollowPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenPendingRequests"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenTimeouts"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenUnknownTypePackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenDroppedPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenVPNName"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthenRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwtacacsClientAuthenServerGroup = hwtacacsClientAuthenServerGroup.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthenServerGroup.setDescription('The basic collection of objects providing management of HwTACACS Authentication servers.')
hwtacacsClientAuthorServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 2, 2, 4)).setObjects(("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorServerAddress"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorServerPort"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorServerType"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorServerState"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorServerMode"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorRoundTripTime"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorRequestPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorResponseAcceptPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorResponseRejectPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorResponseErrorPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorPendingRequests"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorTimeouts"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorUnknownTypePackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorDroppedPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorVPNName"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwtacacsClientAuthorServerGroup = hwtacacsClientAuthorServerGroup.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAuthorServerGroup.setDescription('The basic collection of objects providing management of HwTACACS Authorization servers.')
hwtacacsClientAccountServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 2, 2, 5)).setObjects(("HUAWEI-HWTACACS-MIB", "hwtacacsClientAccountServerAddress"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAccountServerPort"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAccountServerType"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAccountServerState"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAccountServerMode"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAccountRoundTripTime"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAccountRequestPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAccountResponsePackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAccountResponseErrorPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAccountVPNName"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientAuthorRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwtacacsClientAccountServerGroup = hwtacacsClientAccountServerGroup.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientAccountServerGroup.setDescription('The basic collection of objects providing management of HwTACACS Authorization servers.')
hwtacacsClientCommonServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 3, 2, 2, 6)).setObjects(("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonServerAddress"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonServerPort"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonServerType"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonServerState"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonServerMode"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonRoundTripTime"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonRequestPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonAccessChngPassRequests"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonAccessSendPassPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonAccessSendAuthenPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonStartPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonContinuePackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommomContinueAbortPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonReplyPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonReplyPassPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonReplyFailPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonReplyGetDataPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonReplyGetUserPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonReplyGetPassPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonReplyErrorPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonReplyRestartPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonReplyFollowPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonReqNetwork"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonReqConnection"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonReqEXEC"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonReqSysEvent"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonReqCommandLevel"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonReqUpdate"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonPendingRequests"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonTimeouts"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonUnknownTypePackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonDroppedPackets"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonVPNName"), ("HUAWEI-HWTACACS-MIB", "hwtacacsClientCommonRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwtacacsClientCommonServerGroup = hwtacacsClientCommonServerGroup.setStatus('current')
if mibBuilder.loadTexts: hwtacacsClientCommonServerGroup.setDescription('The basic collection of objects providing management of HwTACACS common servers.')
hwTacacsSetting = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 4))
hwTacacsSettingEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 4, 1))
hwTACACSEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSEnable.setStatus('current')
if mibBuilder.loadTexts: hwTACACSEnable.setDescription('TACACS service state.')
hwTACACSAcctStopResendDisable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSAcctStopResendDisable.setStatus('current')
if mibBuilder.loadTexts: hwTACACSAcctStopResendDisable.setDescription('Disables the retransmission of accounting-stop packets.')
hwTACACSAcctStopResendNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSAcctStopResendNumber.setStatus('current')
if mibBuilder.loadTexts: hwTACACSAcctStopResendNumber.setDescription('The number of retransmitted accounting-stop packets.')
mibBuilder.exportSymbols("HUAWEI-HWTACACS-MIB", hwtacacsClientCompliances=hwtacacsClientCompliances, hwTACACSSecAccClientReqConnection=hwTACACSSecAccClientReqConnection, hwTACACSPriAccClientUnknownTypes=hwTACACSPriAccClientUnknownTypes, hwTACACSSecAuthenClientAccessResPass=hwTACACSSecAuthenClientAccessResPass, hwtacacsClientAuthenAcceptPackets=hwtacacsClientAuthenAcceptPackets, hwtacacsClientTemplateName=hwtacacsClientTemplateName, hwtacacsClientSourceIP=hwtacacsClientSourceIP, hwTACACSPriAuthorClientReqPending=hwTACACSPriAuthorClientReqPending, hwTACACSSecAccClientReqNetwork=hwTACACSSecAccClientReqNetwork, hwtacacsClientCommonTimeouts=hwtacacsClientCommonTimeouts, hwtacacsClientCompliance=hwtacacsClientCompliance, hwtacacsClientCommonAccessSendPassPackets=hwtacacsClientCommonAccessSendPassPackets, hwtacacsClientQuietTimer=hwtacacsClientQuietTimer, hwTACACSSecAuthenClientAccessReqSendAuth=hwTACACSSecAuthenClientAccessReqSendAuth, hwtacacsClientAcctErrorPackets=hwtacacsClientAcctErrorPackets, hwTACACSSecAuthenClientAccessResGetData=hwTACACSSecAuthenClientAccessResGetData, hwTacacsCompliances=hwTacacsCompliances, hwtacacsClientCommonRequestPackets=hwtacacsClientCommonRequestPackets, hwtacacsClientCommonReqConnection=hwtacacsClientCommonReqConnection, hwtacacsClientCommonAccessSendAuthenPackets=hwtacacsClientCommonAccessSendAuthenPackets, hwTACACSSecAuthenClientPendingRequests=hwTACACSSecAuthenClientPendingRequests, hwTACACSEnable=hwTACACSEnable, hwTACACSSecAuthorClientRoundTripTime=hwTACACSSecAuthorClientRoundTripTime, hwTACACSSecAccClientReqPending=hwTACACSSecAccClientReqPending, hwTACACSSecAuthenClientAccessResFail=hwTACACSSecAuthenClientAccessResFail, hwtacacsClientAuthenAccessReqPackets=hwtacacsClientAuthenAccessReqPackets, hwTACACSServerGroupSecAccoutPort=hwTACACSServerGroupSecAccoutPort, hwTACACSPriAuthorClientRoundTripTime=hwTACACSPriAuthorClientRoundTripTime, hwtacacsClientAuthenStartPackets=hwtacacsClientAuthenStartPackets, hwtacacsClientAuthenServerGroup=hwtacacsClientAuthenServerGroup, hwTACACSSecAccClientReqCommandLevel=hwTACACSSecAccClientReqCommandLevel, hwTACACSPriAccClientReqPacket=hwTACACSPriAccClientReqPacket, hwtacacsClientAuthorAcceptPackets=hwtacacsClientAuthorAcceptPackets, hwTACACSPriAuthenClientUnknownTypes=hwTACACSPriAuthenClientUnknownTypes, hwtacacsClientAccountResponsePackets=hwtacacsClientAccountResponsePackets, hwTACACSSecAccClientPacketsDropped=hwTACACSSecAccClientPacketsDropped, hwtacacsClientAccountReqPending=hwtacacsClientAccountReqPending, hwtacacsClientCommonReplyGetPassPackets=hwtacacsClientCommonReplyGetPassPackets, hwtacacsClientObjectGroups=hwtacacsClientObjectGroups, hwTACACSServerGroupPriAuthenAddr=hwTACACSServerGroupPriAuthenAddr, hwTACACSPriAuthenClientAccessReqChaPass=hwTACACSPriAuthenClientAccessReqChaPass, hwtacacsClientAuthenReplyGetUserPackets=hwtacacsClientAuthenReplyGetUserPackets, hwtacacsClientAuthenReplyPassPackets=hwtacacsClientAuthenReplyPassPackets, hwTACACSPriAccClientPacketsDropped=hwTACACSPriAccClientPacketsDropped, hwtacacsClientResponseTimeout=hwtacacsClientResponseTimeout, hwTACACSPriAuthenClientAccessConAbort=hwTACACSPriAuthenClientAccessConAbort, hwtacacsClientConformance=hwtacacsClientConformance, hwtacacsClientAuthorPendRequests=hwtacacsClientAuthorPendRequests, hwtacacsClientCommonServerTable=hwtacacsClientCommonServerTable, hwTACACSServerGroupSecAuthorAddr=hwTACACSServerGroupSecAuthorAddr, hwTACACSSecAccClientResError=hwTACACSSecAccClientResError, hwTacacsConformance=hwTacacsConformance, hwTACACSPriAuthorClientTimeouts=hwTACACSPriAuthorClientTimeouts, hwTACACSPriAuthenClientAccessResError=hwTACACSPriAuthenClientAccessResError, hwTACACSPriAuthorClientResEXEC=hwTACACSPriAuthorClientResEXEC, hwTACACSPriAccClientReqSysEvent=hwTACACSPriAccClientReqSysEvent, hwTACACSServerGroupName=hwTACACSServerGroupName, hwTACACSServerGroupSecAccoutAddr=hwTACACSServerGroupSecAccoutAddr, hwTACACSSecAuthenClientAccessReqPacket=hwTACACSSecAuthenClientAccessReqPacket, hwTACACSSecAuthenClientAccessReqLogin=hwTACACSSecAuthenClientAccessReqLogin, hwTACACSSecAccClientRoundTripTime=hwTACACSSecAccClientRoundTripTime, hwTACACSPriAuthenClientMalformedAccessResponses=hwTACACSPriAuthenClientMalformedAccessResponses, hwTACACSSecAccClientReqEXEC=hwTACACSSecAccClientReqEXEC, hwtacacsClientAuthenServerMode=hwtacacsClientAuthenServerMode, hwtacacsClientAuthorServerGroup=hwtacacsClientAuthorServerGroup, hwtacacsClientCommonReplyErrorPackets=hwtacacsClientCommonReplyErrorPackets, hwtacacsClientAccountUnKnownTypes=hwtacacsClientAccountUnKnownTypes, hwtacacsClientCommonReplyGetUserPackets=hwtacacsClientCommonReplyGetUserPackets, hwTACACSServerGroupTimer=hwTACACSServerGroupTimer, hwTACACSSecAuthorClientUnknownTypes=hwTACACSSecAuthorClientUnknownTypes, hwtacacsClientAuthenServerTable=hwtacacsClientAuthenServerTable, hwtacacsClientAccountServerTable=hwtacacsClientAccountServerTable, hwtacacsClientAccountReqEXEC=hwtacacsClientAccountReqEXEC, hwtacacsClientCommonPendingRequests=hwtacacsClientCommonPendingRequests, hwtacacsClientAuthorTimeouts=hwtacacsClientAuthorTimeouts, hwtacacsClientAuthorRejectPackets=hwtacacsClientAuthorRejectPackets, hwtacacsClientCommomContinueAbortPackets=hwtacacsClientCommomContinueAbortPackets, hwTACACSServerGroupRowStatus=hwTACACSServerGroupRowStatus, hwtacacsClientAuthenAccessSendAuthenPackets=hwtacacsClientAuthenAccessSendAuthenPackets, hwtacacsClientAuthenRequestPackets=hwtacacsClientAuthenRequestPackets, hwtacacsClientCommonReplyRestartPackets=hwtacacsClientCommonReplyRestartPackets, hwtacacsClientAuthorServerTable=hwtacacsClientAuthorServerTable, hwtacacsClientAccountTemplateIndex=hwtacacsClientAccountTemplateIndex, hwtacacsClientCommonContinuePackets=hwtacacsClientCommonContinuePackets, hwtacacsClientCommonReplyGetDataPackets=hwtacacsClientCommonReplyGetDataPackets, hwtacacsClientAccountReqConnection=hwtacacsClientAccountReqConnection, hwTACACSSecAccClientResPacket=hwTACACSSecAccClientResPacket, hwTACACSPriAccClientReqEXEC=hwTACACSPriAccClientReqEXEC, hwTACACSAcctStopResendNumber=hwTACACSAcctStopResendNumber, hwtacacsClientAuthenReplyFailPackets=hwtacacsClientAuthenReplyFailPackets, hwtacacsClientAuthorDroppedPackets=hwtacacsClientAuthorDroppedPackets, hwTACACSSecAuthenClientPacketsDropped=hwTACACSSecAuthenClientPacketsDropped, hwtacacsClientAuthenRoundTripTime=hwtacacsClientAuthenRoundTripTime, hwtacacsClientAuthenReplyPackets=hwtacacsClientAuthenReplyPackets, hwtacacsClientAcctRequestPackets=hwtacacsClientAcctRequestPackets, hwTACACSPriAuthenClientRoundTripTime=hwTACACSPriAuthenClientRoundTripTime, hwTACACSPriAuthenClientAccessResPass=hwTACACSPriAuthenClientAccessResPass, hwTACACSPriAccClientRoundTripTime=hwTACACSPriAccClientRoundTripTime, hwTACACSPriAccClientReqUpdate=hwTACACSPriAccClientReqUpdate, hwTACACSServerConfig=hwTACACSServerConfig, hwtacacsClientSharedKey=hwtacacsClientSharedKey, hwtacacsClientAuthorServerPort=hwtacacsClientAuthorServerPort, hwtacacsClientCommonServerIndex=hwtacacsClientCommonServerIndex, hwTacacsTableGroup=hwTacacsTableGroup, hwTACACSSecAuthorClientResPack=hwTACACSSecAuthorClientResPack, hwTACACSServerGroupSecAuthenPort=hwTACACSServerGroupSecAuthenPort, hwtacacsClientAuthorResponseRejectPackets=hwtacacsClientAuthorResponseRejectPackets, hwtacacsClientAccountServerIndex=hwtacacsClientAccountServerIndex, hwtacacsClientCommonServerState=hwtacacsClientCommonServerState, hwtacacsClientCommonRoundTripTime=hwtacacsClientCommonRoundTripTime, hwtacacsClientCommonVPNName=hwtacacsClientCommonVPNName, hwTACACSPriAuthorClientResError=hwTACACSPriAuthorClientResError, hwtacacsClientCommonServerPort=hwtacacsClientCommonServerPort, hwtacacsClientAuthenServerIndex=hwtacacsClientAuthenServerIndex, hwtacacsClientAccountServerState=hwtacacsClientAccountServerState, hwtacacsClientAuthenReplyGetPassPackets=hwtacacsClientAuthenReplyGetPassPackets, hwTACACSPriAuthenClientAccessReqLogin=hwTACACSPriAuthenClientAccessReqLogin, hwtacacsClientAuthenReplyGetDataPackets=hwtacacsClientAuthenReplyGetDataPackets, hwTACACSPriAuthenClientAccessResGetData=hwTACACSPriAuthenClientAccessResGetData, hwtacacsClientAccountTimeouts=hwtacacsClientAccountTimeouts, hwtacacsClientAccountServerPort=hwtacacsClientAccountServerPort, hwTACACSSecAuthenClientAccessResPack=hwTACACSSecAuthenClientAccessResPack, hwtacacsClientAccountVPNName=hwtacacsClientAccountVPNName, hwTACACSPriAuthorClientUnknownTypes=hwTACACSPriAuthorClientUnknownTypes, hwTACACSServerGroupKey=hwTACACSServerGroupKey, hwtacacsClientCommonServerAddress=hwtacacsClientCommonServerAddress, hwTACACSPriAuthorClientReqPacket=hwTACACSPriAuthorClientReqPacket, hwTACACSSecAuthorClientTimeouts=hwTACACSSecAuthorClientTimeouts, hwTACACSServerGroupOctFmt=hwTACACSServerGroupOctFmt, hwTACACSSecAccClientReqUpdate=hwTACACSSecAccClientReqUpdate, hwTACACSSecAuthorClientResEXEC=hwTACACSSecAuthorClientResEXEC, hwtacacsClientDroppedPackets=hwtacacsClientDroppedPackets, hwTACACSPriAuthenClientAccessReqSendAuth=hwTACACSPriAuthenClientAccessReqSendAuth, hwTACACSSecAuthenClientAccessResGetPass=hwTACACSSecAuthenClientAccessResGetPass, hwTACACSSecAuthenClientMalformedAccessResponses=hwTACACSSecAuthenClientMalformedAccessResponses, PYSNMP_MODULE_ID=hwTACACS, hwTACACSSecAuthorClientReqVPDN=hwTACACSSecAuthorClientReqVPDN, hwTacacsSettingGroup=hwTacacsSettingGroup, hwtacacsClientAuthorServerIndex=hwtacacsClientAuthorServerIndex, hwTACACSServerGroupPriAuthorPort=hwTACACSServerGroupPriAuthorPort, hwtacacsClientAuthorResponseErrorPackets=hwtacacsClientAuthorResponseErrorPackets, hwTACACSSecAccClientReqSysEvent=hwTACACSSecAccClientReqSysEvent, hwtacacsClientAcctPendingPackets=hwtacacsClientAcctPendingPackets, hwTACACSPriAccClientReqCommandLevel=hwTACACSPriAccClientReqCommandLevel, hwTACACSSecAuthenClientAccessReqChaPass=hwTACACSSecAuthenClientAccessReqChaPass, hwtacacsClientAccountResponseErrorPackets=hwtacacsClientAccountResponseErrorPackets, hwTACACSPriAuthorClientReqVPDN=hwTACACSPriAuthorClientReqVPDN, hwTacacsCompliance=hwTacacsCompliance, hwtacacsClientAuthenPendRequests=hwtacacsClientAuthenPendRequests, hwtacacsClientAuthorRequestPackets=hwtacacsClientAuthorRequestPackets, hwtacacsClientAuthenAccessChngPassRequests=hwtacacsClientAuthenAccessChngPassRequests, hwtacacsClientAuthenReplyFollowPackets=hwtacacsClientAuthenReplyFollowPackets, hwtacacsClientCommonServerGroup=hwtacacsClientCommonServerGroup, hwtacacsClientAuthenReplyRestartPackets=hwtacacsClientAuthenReplyRestartPackets, hwtacacsClientAccountRequestPackets=hwtacacsClientAccountRequestPackets, hwTACACSServerGroupCurAuthenAddr=hwTACACSServerGroupCurAuthenAddr, hwTACACSSecAuthenClientAccessResFollow=hwTACACSSecAuthenClientAccessResFollow, hwTACACSSecAuthenClientAccessResGetUser=hwTACACSSecAuthenClientAccessResGetUser, hwTACACSSecAccClientReqPacket=hwTACACSSecAccClientReqPacket, hwTACACSServerGroupPriAuthenPort=hwTACACSServerGroupPriAuthenPort, hwtacacsClientAuthenContinuePackets=hwtacacsClientAuthenContinuePackets, hwTACACSPriAuthenClientPendingRequests=hwTACACSPriAuthenClientPendingRequests, hwtacacsClientAuthenServerEntry=hwtacacsClientAuthenServerEntry, hwtacacsClientGroup=hwtacacsClientGroup, hwTACACSSecAuthenClientAccessResError=hwTACACSSecAuthenClientAccessResError, hwtacacsClientAccountServerAddress=hwtacacsClientAccountServerAddress, hwtacacsClientCommonRowStatus=hwtacacsClientCommonRowStatus, hwtacacsClientAuthenAccessSendPassPackets=hwtacacsClientAuthenAccessSendPassPackets, hwtacacsClientAuthenRowStatus=hwtacacsClientAuthenRowStatus, hwtacacsClientCommonServerEntry=hwtacacsClientCommonServerEntry, hwtacacsClientAuthenTemplateIndex=hwtacacsClientAuthenTemplateIndex, hwtacacsClientAuthorVPNName=hwtacacsClientAuthorVPNName, hwtacacsClientDomainNameIncluded=hwtacacsClientDomainNameIncluded, hwtacacsClientAccountReqUpdate=hwtacacsClientAccountReqUpdate, hwTACACS=hwTACACS, hwtacacsClientAuthenRejectPackets=hwtacacsClientAuthenRejectPackets, hwtacacsClientAuthenServerAddress=hwtacacsClientAuthenServerAddress, hwtacacsClientAuthenServerState=hwtacacsClientAuthenServerState, hwtacacsClientAccountRowStatus=hwtacacsClientAccountRowStatus, hwtacacsClientTemplateIndex=hwtacacsClientTemplateIndex, hwtacacsClientCommonServerType=hwtacacsClientCommonServerType, hwtacacsClientCommonReplyPassPackets=hwtacacsClientCommonReplyPassPackets, hwTACACSSecAccClientTimeouts=hwTACACSSecAccClientTimeouts, hwTACACSSecAuthorClientReqPacket=hwTACACSSecAuthorClientReqPacket, hwTACACSSecAuthenClientTimeouts=hwTACACSSecAuthenClientTimeouts, hwTACACSServerGroupPriAuthorAddr=hwTACACSServerGroupPriAuthorAddr, hwtacacsClientCommonReplyFailPackets=hwtacacsClientCommonReplyFailPackets, hwTACACSAcctStopResendDisable=hwTACACSAcctStopResendDisable, hwtacacsClientAuthenContinueAbortPackets=hwtacacsClientAuthenContinueAbortPackets, hwTACACSPriAuthenClientPacketsDropped=hwTACACSPriAuthenClientPacketsDropped, hwTACACSSecAccClientUnknownTypes=hwTACACSSecAccClientUnknownTypes, hwTACACSSecAuthorClientPacketsDropped=hwTACACSSecAuthorClientPacketsDropped, hwTACACSPriAuthenClientAccessConPack=hwTACACSPriAuthenClientAccessConPack, hwTACACSPriAuthenClientTimeouts=hwTACACSPriAuthenClientTimeouts, hwTACACSPriAuthenClientAccessResFollow=hwTACACSPriAuthenClientAccessResFollow, hwTacacsObjectGroups=hwTacacsObjectGroups, hwtacacsClientAuthenDroppedPackets=hwtacacsClientAuthenDroppedPackets, hwtacacsClientMng=hwtacacsClientMng, hwtacacsClientAccountReqNetwork=hwtacacsClientAccountReqNetwork, hwtacacsClientAuthorRowStatus=hwtacacsClientAuthorRowStatus, hwtacacsClientCommonStartPackets=hwtacacsClientCommonStartPackets, hwtacacsClientCommonReqSysEvent=hwtacacsClientCommonReqSysEvent, hwTACACSServerGroupTable=hwTACACSServerGroupTable, hwtacacsClientAccountPacketsDropped=hwtacacsClientAccountPacketsDropped, hwTACACSPriAuthenClientAccessResGetPass=hwTACACSPriAuthenClientAccessResGetPass, hwtacacsClientCommonReplyPackets=hwtacacsClientCommonReplyPackets, hwTACACSPriAuthorClientResVPDN=hwTACACSPriAuthorClientResVPDN, hwtacacsClientAuthenUnknownTypePackets=hwtacacsClientAuthenUnknownTypePackets, hwTACACSPriAccClientResPacket=hwTACACSPriAccClientResPacket, hwTacacsSetting=hwTacacsSetting, hwTACACSPriAuthorClientPacketsDropped=hwTACACSPriAuthorClientPacketsDropped, hwTACACSPriAuthenClientAccessReqSendPass=hwTACACSPriAuthenClientAccessReqSendPass, hwTACACSPriAccClientTimeouts=hwTACACSPriAccClientTimeouts, hwtacacsClientCommonReqEXEC=hwtacacsClientCommonReqEXEC, hwTACACSPriAccClientReqPending=hwTACACSPriAccClientReqPending, hwTACACSServerGroupSecAuthenAddr=hwTACACSServerGroupSecAuthenAddr, hwTACACSServerGroupSecAuthorPort=hwTACACSServerGroupSecAuthorPort, hwtacacsClientAuthorServerMode=hwtacacsClientAuthorServerMode, hwtacacsClientCommonReqUpdate=hwtacacsClientCommonReqUpdate, hwTACACSSecAuthorClientReqPending=hwTACACSSecAuthorClientReqPending, hwtacacsClientCommonTemplateIndex=hwtacacsClientCommonTemplateIndex, hwtacacsClientAuthorRoundTripTime=hwtacacsClientAuthorRoundTripTime, hwtacacsTemplateTable=hwtacacsTemplateTable, hwtacacsClientAuthorServerEntry=hwtacacsClientAuthorServerEntry, hwtacacsClientCommonUnknownTypePackets=hwtacacsClientCommonUnknownTypePackets, hwtacacsClientAuthorServerType=hwtacacsClientAuthorServerType, hwTACACSSecAuthorClientReqEXEC=hwTACACSSecAuthorClientReqEXEC, hwtacacsClientAuthorReqPackets=hwtacacsClientAuthorReqPackets, hwTACACSServerGroupSourceIP=hwTACACSServerGroupSourceIP, hwtacacsClientAuthorResponseAcceptPackets=hwtacacsClientAuthorResponseAcceptPackets, hwtacacsClientAuthenServerPort=hwtacacsClientAuthenServerPort, hwTACACSServerGroupPriAccoutPort=hwTACACSServerGroupPriAccoutPort, hwtacacsClientCommonDroppedPackets=hwtacacsClientCommonDroppedPackets, hwtacacsClientAuthenVPNName=hwtacacsClientAuthenVPNName, hwtacacsClientAuthenPendingRequests=hwtacacsClientAuthenPendingRequests, hwtacacsClientAuthorTemplateIndex=hwtacacsClientAuthorTemplateIndex, hwtacacsClientAuthorServerState=hwtacacsClientAuthorServerState, hwTACACSPriAccClientReqNetwork=hwTACACSPriAccClientReqNetwork, hwTACACSSecAuthenClientAccessResRestart=hwTACACSSecAuthenClientAccessResRestart, hwtacacsClientAuthorPendingRequests=hwtacacsClientAuthorPendingRequests, hwtacacsClientAccountServerEntry=hwtacacsClientAccountServerEntry, hwTacacsSettingEntry=hwTacacsSettingEntry, hwtacacsClientAuthorServerAddress=hwtacacsClientAuthorServerAddress, hwTACACSPriAuthenClientAccessReqPacket=hwTACACSPriAuthenClientAccessReqPacket, hwtacacsClientAuthenTimeouts=hwtacacsClientAuthenTimeouts, hwtacacsClient=hwtacacsClient, hwtacacsClientAccountReqSysEvent=hwtacacsClientAccountReqSysEvent, hwTACACSSecAuthenClientAccessReqSendPass=hwTACACSSecAuthenClientAccessReqSendPass, hwTACACSSecAuthenClientRoundTripTime=hwTACACSSecAuthenClientRoundTripTime, hwtacacsClientCommonReplyFollowPackets=hwtacacsClientCommonReplyFollowPackets, hwTACACSPriAuthenClientAccessResGetUser=hwTACACSPriAuthenClientAccessResGetUser, hwTACACSPriAuthorClientResPack=hwTACACSPriAuthorClientResPack, hwtacacsClientAccountRoundTripTime=hwtacacsClientAccountRoundTripTime, hwtacacsClientAccountServerMode=hwtacacsClientAccountServerMode)
mibBuilder.exportSymbols("HUAWEI-HWTACACS-MIB", hwTACACSServerGroupTimeout=hwTACACSServerGroupTimeout, hwTACACSSecAuthorClientResError=hwTACACSSecAuthorClientResError, hwTACACSPriAuthenClientAccessResFail=hwTACACSPriAuthenClientAccessResFail, hwtacacsClientCommonServerMode=hwtacacsClientCommonServerMode, hwTACACSServerGroupDomain=hwTACACSServerGroupDomain, hwtacacsTemplateEntry=hwtacacsTemplateEntry, hwtacacsClientAccountReqCommandLevel=hwtacacsClientAccountReqCommandLevel, hwTACACSPriAuthenClientAccessResPack=hwTACACSPriAuthenClientAccessResPack, hwtacacsClientAuthenServerType=hwtacacsClientAuthenServerType, hwTACACSSecAuthenClientUnknownTypes=hwTACACSSecAuthenClientUnknownTypes, hwTACACSPriAccClientResError=hwTACACSPriAccClientResError, hwTACACSServerGroupCurAuthorAddr=hwTACACSServerGroupCurAuthorAddr, hwTACACSServerGroupPriAccoutAddr=hwTACACSServerGroupPriAccoutAddr, hwtacacsClientAccountServerGroup=hwtacacsClientAccountServerGroup, hwtacacsClientCommonReqNetwork=hwtacacsClientCommonReqNetwork, hwTACACSServerGroupEntry=hwTACACSServerGroupEntry, hwtacacsClientAuthorUnknownTypePackets=hwtacacsClientAuthorUnknownTypePackets, hwtacacsClientCommonReqCommandLevel=hwtacacsClientCommonReqCommandLevel, hwTACACSPriAccClientReqConnection=hwTACACSPriAccClientReqConnection, hwtacacsClientTemplateGroup=hwtacacsClientTemplateGroup, hwTACACSSecAuthenClientAccessConPack=hwTACACSSecAuthenClientAccessConPack, hwtacacsClientRowStatus=hwtacacsClientRowStatus, hwtacacsClientAcctResponsePackets=hwtacacsClientAcctResponsePackets, hwTACACSServerGroupCurAccoutAddr=hwTACACSServerGroupCurAccoutAddr, hwtacacsClientAuthenReplyErrorPackets=hwtacacsClientAuthenReplyErrorPackets, hwtacacsClientAccountServerType=hwtacacsClientAccountServerType, hwTACACSServerGroupIndex=hwTACACSServerGroupIndex, hwTACACSPriAuthenClientAccessResRestart=hwTACACSPriAuthenClientAccessResRestart, hwTACACSSecAuthenClientAccessConAbort=hwTACACSSecAuthenClientAccessConAbort, hwTACACSPriAuthorClientReqEXEC=hwTACACSPriAuthorClientReqEXEC, hwtacacsClientCommonAccessChngPassRequests=hwtacacsClientCommonAccessChngPassRequests, hwTACACSSecAuthorClientResVPDN=hwTACACSSecAuthorClientResVPDN)
