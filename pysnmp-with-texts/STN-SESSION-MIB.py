#
# PySNMP MIB module STN-SESSION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/STN-SESSION-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:11:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, iso, Gauge32, MibIdentifier, TimeTicks, Integer32, Counter64, IpAddress, Unsigned32, ObjectIdentity, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "iso", "Gauge32", "MibIdentifier", "TimeTicks", "Integer32", "Counter64", "IpAddress", "Unsigned32", "ObjectIdentity", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
stnSystems, stnNotification = mibBuilder.importSymbols("SPRING-TIDE-NETWORKS-SMI", "stnSystems", "stnNotification")
StnUserFailureType, StnConfigFailureType = mibBuilder.importSymbols("SPRING-TIDE-NETWORKS-TC", "StnUserFailureType", "StnConfigFailureType")
stnEngineCpu, stnEngineIndex, stnEngineSlot = mibBuilder.importSymbols("STN-CHASSIS-MIB", "stnEngineCpu", "stnEngineIndex", "stnEngineSlot")
stnRouterIndex, = mibBuilder.importSymbols("STN-ROUTER-MIB", "stnRouterIndex")
stnSessions = ModuleIdentity((1, 3, 6, 1, 4, 1, 3551, 2, 5))
if mibBuilder.loadTexts: stnSessions.setLastUpdated('0002160000Z')
if mibBuilder.loadTexts: stnSessions.setOrganization('Spring Tide Networks, Inc.')
if mibBuilder.loadTexts: stnSessions.setContactInfo(' Spring Tide Networks, Inc. Customer Service Postal: 3 Clock Tower Place Maynard, MA 01754 Tel: 1 888-786-4357 Email: stncs@springtidenet.com ')
if mibBuilder.loadTexts: stnSessions.setDescription('This MIB module describes Spring Tide Networks session objects.')
stnSessionObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1))
stnSessionMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 5, 2))
stnSessionTrapVars = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 5, 3))
stnSession = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1))
stnGlobalSession = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 2))
stnSessionsPpp = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 2))
stnSessionsL2tp = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 3))
stnSessionsPptp = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 4))
stnSessionsIpsec = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 5))
stnSessionsIke = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 6))
stnSessionsTelnet = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 7))
stnSessionsFtp = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 8))
stnSessionsFtpAlg = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 9))
stnSessionsConsole = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 10))
stnSessionsAggregate = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 11))
stnSessionsEncaps = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 12))
stnSessionsSecureUser = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 13))
stnSessionsRemoteConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 14))
class SessionOperStatus(TextualConvention, Integer32):
    description = 'Operational status of a session.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("unknown", 1), ("inactive", 2), ("pend-active", 3), ("active", 4), ("pend-inactive", 5))

stnSessionTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 1), )
if mibBuilder.loadTexts: stnSessionTable.setStatus('current')
if mibBuilder.loadTexts: stnSessionTable.setDescription('A list of session entries.')
stnSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 1, 1), ).setIndexNames((0, "STN-SESSION-MIB", "stnSessionIndex"))
if mibBuilder.loadTexts: stnSessionEntry.setStatus('current')
if mibBuilder.loadTexts: stnSessionEntry.setDescription('Entry contains information about a particular session.')
stnSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionIndex.setStatus('current')
if mibBuilder.loadTexts: stnSessionIndex.setDescription('A sequence number that identifies a session entry in the table.')
stnSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("unknown", 1), ("ppp", 2), ("l2tp-tunnel", 3), ("pptp-tunnel", 4), ("ipsec", 5), ("ike", 6), ("telnet", 7), ("ftp", 8), ("ftp-alg", 9), ("console", 10), ("encaps", 11), ("secure-user", 12), ("remote-config", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionType.setStatus('current')
if mibBuilder.loadTexts: stnSessionType.setDescription('Indicates the session type.')
stnSessionContext = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionContext.setStatus('current')
if mibBuilder.loadTexts: stnSessionContext.setDescription('A unique context identifier associated with the session.')
stnSessionOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 1, 1, 4), SessionOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionOperStatus.setStatus('current')
if mibBuilder.loadTexts: stnSessionOperStatus.setDescription('The operational status of the session.')
stnSessionLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionLastChange.setStatus('current')
if mibBuilder.loadTexts: stnSessionLastChange.setDescription('The value of sysUpTime at the time the session entered its current operational state.')
stnSessionPppTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionPppTotalCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionPppTotalCount.setDescription('The total number of PPP sessions since system start.')
stnSessionPppFailedCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionPppFailedCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionPppFailedCount.setDescription('The total number of failed sessions since system start.')
stnSessionPppCurrentCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 2, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionPppCurrentCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionPppCurrentCount.setDescription('The total number of current PPP sessions.')
stnSessionPppCurrentActiveCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionPppCurrentActiveCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionPppCurrentActiveCount.setDescription('The total number of current active PPP sessions.')
stnSessionL2tpTunnelTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 3, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionL2tpTunnelTotalCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionL2tpTunnelTotalCount.setDescription('The total number of L2TP tunnel sessions since system start.')
stnSessionL2tpTunnelFailedCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 3, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionL2tpTunnelFailedCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionL2tpTunnelFailedCount.setDescription('The total number of failed L2TP tunnel sessions since system start.')
stnSessionL2tpTunnelCurrentCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 3, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionL2tpTunnelCurrentCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionL2tpTunnelCurrentCount.setDescription('The total number of current L2TP tunnel sessions.')
stnSessionL2tpTunnelCurrentActiveCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 3, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionL2tpTunnelCurrentActiveCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionL2tpTunnelCurrentActiveCount.setDescription('The total number of current active L2TP tunnel sessions.')
stnSessionPptpTunnelTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 4, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionPptpTunnelTotalCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionPptpTunnelTotalCount.setDescription('The total number of PPTP tunnel sessions since system start.')
stnSessionPptpTunnelFailedCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 4, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionPptpTunnelFailedCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionPptpTunnelFailedCount.setDescription('The total number of failed PPTP tunnel sessions since system start.')
stnSessionPptpTunnelCurrentCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 4, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionPptpTunnelCurrentCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionPptpTunnelCurrentCount.setDescription('The total number of current PPTP tunnel sessions.')
stnSessionPptpTunnelCurrentActiveCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 4, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionPptpTunnelCurrentActiveCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionPptpTunnelCurrentActiveCount.setDescription('The total number of current active PPTP tunnel sessions.')
stnSessionIpsecTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 5, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionIpsecTotalCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionIpsecTotalCount.setDescription('The total number of IPSEC sessions since system start.')
stnSessionIpsecFailedCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 5, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionIpsecFailedCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionIpsecFailedCount.setDescription('The total number of failed IPSEC sessions since system start.')
stnSessionIpsecCurrentCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 5, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionIpsecCurrentCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionIpsecCurrentCount.setDescription('The total number of current IPSEC sessions.')
stnSessionIpsecCurrentActiveCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 5, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionIpsecCurrentActiveCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionIpsecCurrentActiveCount.setDescription('The total number of current active IPSEC sessions.')
stnSessionIkeTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 6, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionIkeTotalCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionIkeTotalCount.setDescription('The total number of IKE sessions since system start.')
stnSessionIkeFailedCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 6, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionIkeFailedCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionIkeFailedCount.setDescription('The total number of failed IKE sessions since system start.')
stnSessionIkeCurrentCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 6, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionIkeCurrentCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionIkeCurrentCount.setDescription('The total number of current IKE sessions.')
stnSessionIkeCurrentActiveCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 6, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionIkeCurrentActiveCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionIkeCurrentActiveCount.setDescription('The total number of current active IKE sessions.')
stnSessionTelnetTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 7, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionTelnetTotalCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionTelnetTotalCount.setDescription('The total number of Telnet sessions since system start.')
stnSessionTelnetFailedCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 7, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionTelnetFailedCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionTelnetFailedCount.setDescription('The total number of failed Telnet sessions since system start.')
stnSessionTelnetCurrentCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 7, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionTelnetCurrentCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionTelnetCurrentCount.setDescription('The total number of current Telnet sessions.')
stnSessionTelnetCurrentActiveCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 7, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionTelnetCurrentActiveCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionTelnetCurrentActiveCount.setDescription('The total number of current active Telnet sessions.')
stnSessionFtpTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 8, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionFtpTotalCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionFtpTotalCount.setDescription('The total number of FTP sessions since system start.')
stnSessionFtpFailedCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 8, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionFtpFailedCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionFtpFailedCount.setDescription('The total number of failed FTP sessions since system start.')
stnSessionFtpCurrentCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 8, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionFtpCurrentCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionFtpCurrentCount.setDescription('The total number of current FTP sessions.')
stnSessionFtpCurrentActiveCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 8, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionFtpCurrentActiveCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionFtpCurrentActiveCount.setDescription('The total number of current active FTP sessions.')
stnSessionFtpAlgTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 9, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionFtpAlgTotalCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionFtpAlgTotalCount.setDescription('The total number of FTP-ALG sessions since system start.')
stnSessionFtpAlgFailedCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 9, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionFtpAlgFailedCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionFtpAlgFailedCount.setDescription('The total number of failed FTP-ALG sessions since system start.')
stnSessionFtpAlgCurrentCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 9, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionFtpAlgCurrentCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionFtpAlgCurrentCount.setDescription('The total number of current FTP-ALG sessions.')
stnSessionFtpAlgCurrentActiveCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 9, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionFtpAlgCurrentActiveCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionFtpAlgCurrentActiveCount.setDescription('The total number of current active FTP-ALG sessions.')
stnSessionConsoleTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 10, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionConsoleTotalCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionConsoleTotalCount.setDescription('The total number of console sessions since system start.')
stnSessionConsoleFailedCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 10, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionConsoleFailedCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionConsoleFailedCount.setDescription('The total number of failed console sessions since system start.')
stnSessionConsoleCurrentCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 10, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionConsoleCurrentCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionConsoleCurrentCount.setDescription('The total number of current console sessions.')
stnSessionConsoleCurrentActiveCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 10, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionConsoleCurrentActiveCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionConsoleCurrentActiveCount.setDescription('The total number of current active console sessions.')
stnSessionAggregateTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 11, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionAggregateTotalCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionAggregateTotalCount.setDescription('The total number of sessions since system start.')
stnSessionAggregateFailedCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 11, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionAggregateFailedCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionAggregateFailedCount.setDescription('The total number of failed sessions since system start.')
stnSessionAggregateCurrentCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 11, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionAggregateCurrentCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionAggregateCurrentCount.setDescription('The total number of current sessions.')
stnSessionAggregateCurrentActiveCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 11, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionAggregateCurrentActiveCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionAggregateCurrentActiveCount.setDescription('The total number of current active sessions.')
stnSessionEncapsTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 12, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionEncapsTotalCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionEncapsTotalCount.setDescription('The total number of encaps sessions since system start.')
stnSessionEncapsFailedCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 12, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionEncapsFailedCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionEncapsFailedCount.setDescription('The total number of failed encaps sessions since system start.')
stnSessionEncapsCurrentCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 12, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionEncapsCurrentCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionEncapsCurrentCount.setDescription('The total number of current encaps sessions.')
stnSessionEncapsCurrentActiveCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 12, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionEncapsCurrentActiveCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionEncapsCurrentActiveCount.setDescription('The total number of current active encaps sessions.')
stnSessionSecureUserTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 13, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionSecureUserTotalCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionSecureUserTotalCount.setDescription('The total number of secure user sessions since system start.')
stnSessionSecureUserFailedCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 13, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionSecureUserFailedCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionSecureUserFailedCount.setDescription('The total number of failed secure user sessions since system start.')
stnSessionSecureUserCurrentCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 13, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionSecureUserCurrentCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionSecureUserCurrentCount.setDescription('The total number of current secure user sessions.')
stnSessionSecureUserCurrentActiveCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 13, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionSecureUserCurrentActiveCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionSecureUserCurrentActiveCount.setDescription('The total number of current active secure user sessions.')
stnSessionRemoteConfigTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 14, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionRemoteConfigTotalCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionRemoteConfigTotalCount.setDescription('The total number of remote config sessions since system start.')
stnSessionRemoteConfigFailedCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 14, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionRemoteConfigFailedCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionRemoteConfigFailedCount.setDescription('The total number of failed remote config sessions since system start.')
stnSessionRemoteConfigCurrentCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 14, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionRemoteConfigCurrentCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionRemoteConfigCurrentCount.setDescription('The total number of current remote config sessions.')
stnSessionRemoteConfigCurrentActiveCount = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 1, 14, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnSessionRemoteConfigCurrentActiveCount.setStatus('current')
if mibBuilder.loadTexts: stnSessionRemoteConfigCurrentActiveCount.setDescription('The total number of current active remote config sessions.')
stnGlobalSessionTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 2, 1), )
if mibBuilder.loadTexts: stnGlobalSessionTable.setStatus('current')
if mibBuilder.loadTexts: stnGlobalSessionTable.setDescription('A list of session entries with the box.')
stnGlobalSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 2, 1, 1), ).setIndexNames((0, "STN-SESSION-MIB", "stnGlobalSessionIndex"))
if mibBuilder.loadTexts: stnGlobalSessionEntry.setStatus('current')
if mibBuilder.loadTexts: stnGlobalSessionEntry.setDescription('Entry contains information about a particular session.')
stnGlobalSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: stnGlobalSessionIndex.setStatus('current')
if mibBuilder.loadTexts: stnGlobalSessionIndex.setDescription('A sequence number that identifies a session entry in the table.')
stnGlobalSessionOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 5, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stnGlobalSessionOperStatus.setStatus('current')
if mibBuilder.loadTexts: stnGlobalSessionOperStatus.setDescription('The operational status of the session.')
stnNotificationUsername = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNotificationUsername.setStatus('current')
if mibBuilder.loadTexts: stnNotificationUsername.setDescription("The user's name associated with the trap.")
stnNotificationUserFailureType = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 3, 2), StnUserFailureType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNotificationUserFailureType.setStatus('current')
if mibBuilder.loadTexts: stnNotificationUserFailureType.setDescription('The type of user failure.')
stnNotificationConfigType = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 5, 3, 3), StnConfigFailureType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnNotificationConfigType.setStatus('current')
if mibBuilder.loadTexts: stnNotificationConfigType.setDescription('The type of configuration failure.')
stnUserFailure = NotificationType((1, 3, 6, 1, 4, 1, 3551, 2, 100, 0, 17)).setObjects(("STN-ROUTER-MIB", "stnRouterIndex"), ("STN-SESSION-MIB", "stnNotificationUsername"), ("STN-SESSION-MIB", "stnNotificationUserFailureType"), ("STN-SESSION-MIB", "stnSessionType"))
if mibBuilder.loadTexts: stnUserFailure.setStatus('current')
if mibBuilder.loadTexts: stnUserFailure.setDescription('A stnUserFailure trap signifies that the agent entity has detected that a configuration failure has occurred. The generation of this trap can be controlled by the CommandLineIfaceTraps configuration object.')
stnConfigFailure = NotificationType((1, 3, 6, 1, 4, 1, 3551, 2, 100, 0, 18)).setObjects(("STN-ROUTER-MIB", "stnRouterIndex"), ("STN-SESSION-MIB", "stnNotificationUsername"), ("STN-SESSION-MIB", "stnNotificationConfigType"))
if mibBuilder.loadTexts: stnConfigFailure.setStatus('current')
if mibBuilder.loadTexts: stnConfigFailure.setDescription('A stnConfigFailure trap signifies that the agent entity has detected that a configuration failure has occurred. The generation of this trap can be controlled by the CommandLineIfaceTraps configuration object.')
stnNoFlowEntriesAvailable = NotificationType((1, 3, 6, 1, 4, 1, 3551, 2, 100, 0, 57)).setObjects(("STN-CHASSIS-MIB", "stnEngineIndex"), ("STN-CHASSIS-MIB", "stnEngineSlot"), ("STN-CHASSIS-MIB", "stnEngineCpu"))
if mibBuilder.loadTexts: stnNoFlowEntriesAvailable.setStatus('current')
if mibBuilder.loadTexts: stnNoFlowEntriesAvailable.setDescription('A stnNoFlowEntriesAvailable trap signifies that the agent entity has detected that the there are no more flow entries available on the indicated slot/cpu. This can occur if too many interfaces are assigned to an engine. The generation of this trap can be controlled by the SessionTraps configuration object.')
stnNoLayerIfsAvailable = NotificationType((1, 3, 6, 1, 4, 1, 3551, 2, 100, 0, 58)).setObjects(("STN-CHASSIS-MIB", "stnEngineIndex"), ("STN-CHASSIS-MIB", "stnEngineSlot"), ("STN-CHASSIS-MIB", "stnEngineCpu"))
if mibBuilder.loadTexts: stnNoLayerIfsAvailable.setStatus('current')
if mibBuilder.loadTexts: stnNoLayerIfsAvailable.setDescription('A stnNoLayerIfsAvailable trap signifies that the agent entity has detected that the there are no more layer interfaces available on the indicated slot/cpu. This can occur if too many VCs are assigned to an engine. The generation of this trap can be controlled by the SessionTraps configuration object.')
stnMaxSessionLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 3551, 2, 100, 0, 59)).setObjects(("STN-CHASSIS-MIB", "stnEngineIndex"), ("STN-CHASSIS-MIB", "stnEngineSlot"), ("STN-CHASSIS-MIB", "stnEngineCpu"))
if mibBuilder.loadTexts: stnMaxSessionLimitExceeded.setStatus('current')
if mibBuilder.loadTexts: stnMaxSessionLimitExceeded.setDescription('A stnMaxSessionLimitExceeded trap signifies that the agent entity has detected that the maximum session limit has occurred on the indicated slot/cpu. The generation of this trap can be controlled by the SessionTraps configuration object.')
stnTunnelEngineLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 3551, 2, 100, 0, 60)).setObjects(("STN-CHASSIS-MIB", "stnEngineIndex"), ("STN-CHASSIS-MIB", "stnEngineSlot"), ("STN-CHASSIS-MIB", "stnEngineCpu"))
if mibBuilder.loadTexts: stnTunnelEngineLimitExceeded.setStatus('current')
if mibBuilder.loadTexts: stnTunnelEngineLimitExceeded.setDescription('A stnTunnelEngineLimitExceeded trap signifies that the agent entity has detected that the maximum tunnel limit has occurred on the indicated slot/cpu. The generation of this trap can be controlled by the SessionTraps configuration object.')
stnCallEngineLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 3551, 2, 100, 0, 61)).setObjects(("STN-CHASSIS-MIB", "stnEngineIndex"), ("STN-CHASSIS-MIB", "stnEngineSlot"), ("STN-CHASSIS-MIB", "stnEngineCpu"))
if mibBuilder.loadTexts: stnCallEngineLimitExceeded.setStatus('current')
if mibBuilder.loadTexts: stnCallEngineLimitExceeded.setDescription('A stnCallEngineLimitExceeded trap signifies that the agent entity has detected that the maximum call limit has occurred on the indicated slot/cpu. The generation of this trap can be controlled by the SessionTraps configuration object.')
mibBuilder.exportSymbols("STN-SESSION-MIB", stnSessionOperStatus=stnSessionOperStatus, stnSessionPppCurrentCount=stnSessionPppCurrentCount, stnGlobalSessionEntry=stnGlobalSessionEntry, stnSessionsEncaps=stnSessionsEncaps, stnSessionIpsecCurrentActiveCount=stnSessionIpsecCurrentActiveCount, stnSessionTable=stnSessionTable, stnNotificationUserFailureType=stnNotificationUserFailureType, stnSessionAggregateFailedCount=stnSessionAggregateFailedCount, stnMaxSessionLimitExceeded=stnMaxSessionLimitExceeded, stnSessionType=stnSessionType, stnSessionLastChange=stnSessionLastChange, stnSessionTelnetTotalCount=stnSessionTelnetTotalCount, stnSessionPppTotalCount=stnSessionPppTotalCount, stnSessionIkeCurrentActiveCount=stnSessionIkeCurrentActiveCount, stnUserFailure=stnUserFailure, stnSessionsAggregate=stnSessionsAggregate, stnSessionsTelnet=stnSessionsTelnet, stnSessionRemoteConfigTotalCount=stnSessionRemoteConfigTotalCount, stnSessionTrapVars=stnSessionTrapVars, stnSessionsPpp=stnSessionsPpp, stnSessionEncapsCurrentCount=stnSessionEncapsCurrentCount, SessionOperStatus=SessionOperStatus, stnSessionIpsecTotalCount=stnSessionIpsecTotalCount, stnNoFlowEntriesAvailable=stnNoFlowEntriesAvailable, stnSessionFtpAlgFailedCount=stnSessionFtpAlgFailedCount, stnSessionFtpAlgCurrentActiveCount=stnSessionFtpAlgCurrentActiveCount, stnSessionEncapsFailedCount=stnSessionEncapsFailedCount, stnSessionTelnetFailedCount=stnSessionTelnetFailedCount, stnSessionRemoteConfigCurrentActiveCount=stnSessionRemoteConfigCurrentActiveCount, stnSessionPppCurrentActiveCount=stnSessionPppCurrentActiveCount, stnSessionFtpAlgCurrentCount=stnSessionFtpAlgCurrentCount, stnSessionSecureUserCurrentCount=stnSessionSecureUserCurrentCount, stnSessionTelnetCurrentActiveCount=stnSessionTelnetCurrentActiveCount, stnSessionIndex=stnSessionIndex, stnSessionIkeCurrentCount=stnSessionIkeCurrentCount, stnSessionL2tpTunnelTotalCount=stnSessionL2tpTunnelTotalCount, stnSessionFtpAlgTotalCount=stnSessionFtpAlgTotalCount, stnSessionsSecureUser=stnSessionsSecureUser, stnSessionContext=stnSessionContext, stnSession=stnSession, stnConfigFailure=stnConfigFailure, stnSessionL2tpTunnelFailedCount=stnSessionL2tpTunnelFailedCount, stnSessionPptpTunnelCurrentCount=stnSessionPptpTunnelCurrentCount, stnSessionSecureUserCurrentActiveCount=stnSessionSecureUserCurrentActiveCount, stnSessions=stnSessions, stnSessionIkeFailedCount=stnSessionIkeFailedCount, stnSessionIkeTotalCount=stnSessionIkeTotalCount, stnCallEngineLimitExceeded=stnCallEngineLimitExceeded, stnSessionSecureUserTotalCount=stnSessionSecureUserTotalCount, stnSessionEncapsTotalCount=stnSessionEncapsTotalCount, PYSNMP_MODULE_ID=stnSessions, stnSessionConsoleFailedCount=stnSessionConsoleFailedCount, stnSessionRemoteConfigCurrentCount=stnSessionRemoteConfigCurrentCount, stnSessionTelnetCurrentCount=stnSessionTelnetCurrentCount, stnSessionPptpTunnelCurrentActiveCount=stnSessionPptpTunnelCurrentActiveCount, stnSessionRemoteConfigFailedCount=stnSessionRemoteConfigFailedCount, stnSessionAggregateCurrentActiveCount=stnSessionAggregateCurrentActiveCount, stnSessionsPptp=stnSessionsPptp, stnSessionFtpTotalCount=stnSessionFtpTotalCount, stnSessionFtpCurrentCount=stnSessionFtpCurrentCount, stnSessionPptpTunnelFailedCount=stnSessionPptpTunnelFailedCount, stnSessionIpsecFailedCount=stnSessionIpsecFailedCount, stnSessionMibConformance=stnSessionMibConformance, stnSessionIpsecCurrentCount=stnSessionIpsecCurrentCount, stnSessionsL2tp=stnSessionsL2tp, stnSessionPptpTunnelTotalCount=stnSessionPptpTunnelTotalCount, stnSessionsIke=stnSessionsIke, stnSessionConsoleCurrentActiveCount=stnSessionConsoleCurrentActiveCount, stnNoLayerIfsAvailable=stnNoLayerIfsAvailable, stnSessionsIpsec=stnSessionsIpsec, stnSessionFtpFailedCount=stnSessionFtpFailedCount, stnSessionsFtp=stnSessionsFtp, stnSessionsConsole=stnSessionsConsole, stnGlobalSession=stnGlobalSession, stnSessionFtpCurrentActiveCount=stnSessionFtpCurrentActiveCount, stnGlobalSessionOperStatus=stnGlobalSessionOperStatus, stnTunnelEngineLimitExceeded=stnTunnelEngineLimitExceeded, stnSessionsFtpAlg=stnSessionsFtpAlg, stnSessionL2tpTunnelCurrentCount=stnSessionL2tpTunnelCurrentCount, stnSessionAggregateCurrentCount=stnSessionAggregateCurrentCount, stnNotificationConfigType=stnNotificationConfigType, stnSessionConsoleTotalCount=stnSessionConsoleTotalCount, stnNotificationUsername=stnNotificationUsername, stnSessionsRemoteConfig=stnSessionsRemoteConfig, stnSessionObjects=stnSessionObjects, stnSessionEntry=stnSessionEntry, stnSessionL2tpTunnelCurrentActiveCount=stnSessionL2tpTunnelCurrentActiveCount, stnGlobalSessionIndex=stnGlobalSessionIndex, stnSessionAggregateTotalCount=stnSessionAggregateTotalCount, stnSessionPppFailedCount=stnSessionPppFailedCount, stnSessionSecureUserFailedCount=stnSessionSecureUserFailedCount, stnSessionEncapsCurrentActiveCount=stnSessionEncapsCurrentActiveCount, stnGlobalSessionTable=stnGlobalSessionTable, stnSessionConsoleCurrentCount=stnSessionConsoleCurrentCount)
