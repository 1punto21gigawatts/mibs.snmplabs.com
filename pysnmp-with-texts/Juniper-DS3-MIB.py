#
# PySNMP MIB module Juniper-DS3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Juniper-DS3-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:02:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
dsx3FarEndIntervalEntry, dsx3FarEndCurrentEntry, dsx3FarEndConfigEntry, dsx3FarEndTotalEntry = mibBuilder.importSymbols("DS3-MIB", "dsx3FarEndIntervalEntry", "dsx3FarEndCurrentEntry", "dsx3FarEndConfigEntry", "dsx3FarEndTotalEntry")
InterfaceIndexOrZero, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "ifIndex")
juniMibs, = mibBuilder.importSymbols("Juniper-MIBs", "juniMibs")
JuniNextIfIndex, = mibBuilder.importSymbols("Juniper-TC", "JuniNextIfIndex")
PerfTotalCount, PerfIntervalCount, PerfCurrentCount = mibBuilder.importSymbols("PerfHist-TC-MIB", "PerfTotalCount", "PerfIntervalCount", "PerfCurrentCount")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Bits, Integer32, NotificationType, Gauge32, TimeTicks, ObjectIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, IpAddress, MibIdentifier, Unsigned32, iso, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "NotificationType", "Gauge32", "TimeTicks", "ObjectIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "IpAddress", "MibIdentifier", "Unsigned32", "iso", "Counter32")
RowStatus, DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TruthValue", "TextualConvention")
juniDs3MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4))
juniDs3MIB.setRevisions(('2004-10-12 06:51', '2003-09-30 12:11', '2002-09-16 21:44', '2002-09-12 16:59', '2002-04-04 14:07', '2002-02-22 21:21', '2001-04-27 19:49', '2001-02-05 00:00', '1999-07-27 00:00', '1998-11-13 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: juniDs3MIB.setRevisionsDescriptions(('Changed the upper bound value of juniDsx3LineLength from 64000 to 137 meters.', 'Changed the standard MIB support from the RFC1407-MIB (SMIv1) to the DS3-MIB (SMIv2).', 'Replaced Unisphere names with Juniper names.', 'Added support for far end MDL generator number and port number. Added support for far end MDL carrier.', 'Added invalid seconds objects to the far end statistics tables and more configuration objects.', 'Modified the valid range for juniDsx3Ds3Channel', 'Added dynamic DS3 interface support.', 'Added following objects: juniDsx3Ds3DsuMode juniDsx3Ds3BandwidthLimit juniDsx3Ds3DsuScrambleMode', 'Added juniDsx3LineType and juniDsx3CellScramblerConfig.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: juniDs3MIB.setLastUpdated('200309301211Z')
if mibBuilder.loadTexts: juniDs3MIB.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: juniDs3MIB.setContactInfo(' Juniper Networks, Inc. Postal: 10 Technology Park Drive Westford, MA 01886-3146 USA Tel: +1 978 589 5800 E-mail: mib@Juniper.net')
if mibBuilder.loadTexts: juniDs3MIB.setDescription('The DS3 MIB for the Juniper Networks enterprise. This MIB contains managed objects for DS3/E3 interfaces. Management objects are provided to supplement those found in the standard DS3-MIB (RFC 2496).')
juniDs3Objects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1))
juniDsx3ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1), )
if mibBuilder.loadTexts: juniDsx3ConfigTable.setStatus('current')
if mibBuilder.loadTexts: juniDsx3ConfigTable.setDescription('This table contains entries for DS3/E3 interfaces present in the system.')
juniDsx3ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: juniDsx3ConfigEntry.setStatus('current')
if mibBuilder.loadTexts: juniDsx3ConfigEntry.setDescription('Each entry describes the characteristics of an DS3/E3 interface.')
juniDsx3LineLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 137))).setUnits('meters').setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3LineLength.setStatus('current')
if mibBuilder.loadTexts: juniDsx3LineLength.setDescription('The length of the DS3/E3 line in meters. This objects provides information for line build out circuitry. This object is only useful if the interface has configurable line build out circuitry.')
juniDsx3LineType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 18, 20))).clone(namedValues=NamedValues(("juniDsx3other", 1), ("juniDsx3M23", 2), ("juniDsx3SYNTRAN", 3), ("juniDsx3CbitParity", 4), ("juniDsx3ClearChannel", 5), ("juniE3G832", 6), ("juniE3Framed", 7), ("juniE3Plcp", 8), ("juniDsx3M23Plcp", 18), ("juniDsx3CbitParityPlcp", 20)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3LineType.setStatus('current')
if mibBuilder.loadTexts: juniDsx3LineType.setDescription('This variable indicates the variety of DS3 C-bit or E3 application implementing this interface. The type of interface affects the interpretation of the usage and error statistics. The rate of DS3 is 44.736 Mbps and E3 is 34.368 Mbps. The dsx3ClearChannel value means that the C-bits are not used except for sending/receiving AIS. Note that this object represents the actual line type when the corresponding value of dsx3LineType is dsx3other(1). The values, in sequence, describe: TITLE: SPECIFICATION: dsx3M23 ANSI T1.107-1988 dsx3SYNTRAN ANSI T1.107-1988 dsx3CbitParity ANSI T1.107a-1989 dsx3ClearChannel ANSI T1.102-1987 e3G832 ITU-T G.832 e3Framed ITU-T G.751 e3Plcp ETSI T/NA(91)18. dsx3M23Plcp ATM Forum af-phy-0054.000 dsx3CbitParityPlcp ATM Forum af-phy-0054.000 ')
juniDsx3CellScramblerConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("scramblerOn", 1), ("scramblerOff", 2), ("notSupported", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3CellScramblerConfig.setStatus('current')
if mibBuilder.loadTexts: juniDsx3CellScramblerConfig.setDescription('This variable indicates the state of the ATM cell scrambler for interfaces which support ATM over DS3 or E3. For interfaces which do not support ATM, this object returns the value notSupported(3).')
juniDsx3Channelization = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3Channelization.setStatus('current')
if mibBuilder.loadTexts: juniDsx3Channelization.setDescription('The channelization setting for this DS3 interface; true(1) indicates channelization, false(2) indicates no channelization.')
juniDsx3InterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ds3T3", 0), ("ds3E3", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3InterfaceType.setStatus('current')
if mibBuilder.loadTexts: juniDsx3InterfaceType.setDescription('The DS3 interface type setting.')
juniDsx3Application = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ds3FrameOverDs3", 0), ("ds3AtmOverDs3", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3Application.setStatus('current')
if mibBuilder.loadTexts: juniDsx3Application.setDescription('The interface application setting.')
juniDsx3Ds3Channel = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 28))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3Ds3Channel.setStatus('current')
if mibBuilder.loadTexts: juniDsx3Ds3Channel.setDescription('The DS3 channel setting. The range of channel settings depends on the line rate of the underlying interface.')
juniDsx3LowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 8), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3LowerIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniDsx3LowerIfIndex.setDescription('The ifIndex of the interface over which this DS3 interface is to be layered. A value of zero indicates no layering. An implementation may choose to require that a nonzero value be configured at entry creation.')
juniDsx3RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3RowStatus.setStatus('current')
if mibBuilder.loadTexts: juniDsx3RowStatus.setDescription('Controls creation/deletion of entries in this table according to the RowStatus textual convention, constrained to support setting the following values only: createAndGo destroy To create an entry in this table, the following entry objects MUST be explicitly configured: juniDsx3RowStatus juniDsx3LowerIfIndex In addition, when creating an entry the following conditions must hold: A value for ifIndex must have been determined previously, by reading juniDsx3NextIfIndex. The interface identified by juniDsx3LowerIfIndex must exist. A corresponding entry in ifTable/ifXTable/juniIfTable is created/ destroyed as a result of creating/destroying an entry in this table.')
juniDsx3Ds3DsuMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 4))).clone(namedValues=NamedValues(("ds3DsuModeNone", 0), ("ds3DsuLarsCom", 2), ("ds3DsuDigitalLink", 4))).clone('ds3DsuModeNone')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3Ds3DsuMode.setStatus('current')
if mibBuilder.loadTexts: juniDsx3Ds3DsuMode.setDescription('The DSU configuration setting for this entry.')
juniDsx3Ds3BandwidthLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 44210))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3Ds3BandwidthLimit.setStatus('current')
if mibBuilder.loadTexts: juniDsx3Ds3BandwidthLimit.setDescription('The DSU bandwidth configuration for this entry.')
juniDsx3Ds3DsuScrambleMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ds3DsuScrambleDisabled", 0), ("ds3DsuScrambleEnable", 1))).clone('ds3DsuScrambleDisabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3Ds3DsuScrambleMode.setStatus('current')
if mibBuilder.loadTexts: juniDsx3Ds3DsuScrambleMode.setDescription('The DSU scramble mode setting for this entry.')
juniDsx3MdlCarrier = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3MdlCarrier.setStatus('current')
if mibBuilder.loadTexts: juniDsx3MdlCarrier.setDescription('Specifies the interface is used in carrier environment.')
juniDsx3MdlTransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("path", 1), ("idlesignal", 2), ("pathIdlesignal", 3), ("testsignal", 4), ("pathTestsignal", 5), ("idlesignalTestsignal", 6), ("pathIdlesignalTestsignal", 7), ("none", 8))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3MdlTransmit.setStatus('current')
if mibBuilder.loadTexts: juniDsx3MdlTransmit.setDescription('Specifies transmission enabling.')
juniDsx3MdlEic = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3MdlEic.setStatus('current')
if mibBuilder.loadTexts: juniDsx3MdlEic.setDescription('This is the equipment identification code.')
juniDsx3MdlLic = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3MdlLic.setStatus('current')
if mibBuilder.loadTexts: juniDsx3MdlLic.setDescription('This is the location identification code.')
juniDsx3MdlFic = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3MdlFic.setStatus('current')
if mibBuilder.loadTexts: juniDsx3MdlFic.setDescription('This is the frame identification code.')
juniDsx3MdlUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3MdlUnit.setStatus('current')
if mibBuilder.loadTexts: juniDsx3MdlUnit.setDescription('This is the unit identification code.')
juniDsx3MdlPfi = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 38))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3MdlPfi.setStatus('current')
if mibBuilder.loadTexts: juniDsx3MdlPfi.setDescription('This is the facility identification code to send in the MDL path message.')
juniDsx3MdlPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 38))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3MdlPort.setStatus('current')
if mibBuilder.loadTexts: juniDsx3MdlPort.setDescription('This is the equipment port number to send in the MDL idle signal message.')
juniDsx3MdlGenerator = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 38))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3MdlGenerator.setStatus('current')
if mibBuilder.loadTexts: juniDsx3MdlGenerator.setDescription('This is the generator number to send in the MDL test signal message.')
juniDs3NextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 2), JuniNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDs3NextIfIndex.setStatus('current')
if mibBuilder.loadTexts: juniDs3NextIfIndex.setDescription('Coordinate ifIndex value allocation for entries in juniDsx3ConfigTable. A GET of this object returns the next available ifIndex value to be used to create an entry in the associated interface table; or zero, if no valid ifIndex value is available. This object also returns a value of zero when it is the lexicographic successor of a varbind presented in an SNMP GETNEXT or GETBULK request, for which circumstance it is assumed that ifIndex allocation is unintended. Successive GETs will typically return different values, thus avoiding collisions among cooperating management clients seeking to create table entries simultaneously.')
juniDsx3FarEndCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 3), )
if mibBuilder.loadTexts: juniDsx3FarEndCurrentTable.setStatus('current')
if mibBuilder.loadTexts: juniDsx3FarEndCurrentTable.setDescription('This table contains entries for DS3/E3 interfaces present in the system.')
juniDsx3FarEndCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 3, 1), )
dsx3FarEndCurrentEntry.registerAugmentions(("Juniper-DS3-MIB", "juniDsx3FarEndCurrentEntry"))
juniDsx3FarEndCurrentEntry.setIndexNames(*dsx3FarEndCurrentEntry.getIndexNames())
if mibBuilder.loadTexts: juniDsx3FarEndCurrentEntry.setStatus('current')
if mibBuilder.loadTexts: juniDsx3FarEndCurrentEntry.setDescription('Each entry describes the characteristics of an DS3/E3 interface.')
juniDsx3FarEndCurrentInvalidSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 3, 1, 1), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDsx3FarEndCurrentInvalidSeconds.setStatus('current')
if mibBuilder.loadTexts: juniDsx3FarEndCurrentInvalidSeconds.setDescription('The counter associated with the number of Invalid Seconds encountered by a DS3/E3 interface in the current 15 minute interval.')
juniDsx3FarEndIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 4), )
if mibBuilder.loadTexts: juniDsx3FarEndIntervalTable.setStatus('current')
if mibBuilder.loadTexts: juniDsx3FarEndIntervalTable.setDescription('This table contains entries for DS3/E3 interfaces present in the system.')
juniDsx3FarEndIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 4, 1), )
dsx3FarEndIntervalEntry.registerAugmentions(("Juniper-DS3-MIB", "juniDsx3FarEndIntervalEntry"))
juniDsx3FarEndIntervalEntry.setIndexNames(*dsx3FarEndIntervalEntry.getIndexNames())
if mibBuilder.loadTexts: juniDsx3FarEndIntervalEntry.setStatus('current')
if mibBuilder.loadTexts: juniDsx3FarEndIntervalEntry.setDescription('Each entry describes the characteristics of an DS3/E3 interface.')
juniDsx3FarEndIntervalInvalidSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 4, 1, 1), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDsx3FarEndIntervalInvalidSeconds.setStatus('current')
if mibBuilder.loadTexts: juniDsx3FarEndIntervalInvalidSeconds.setDescription('The counter associated with the number of Invalid Seconds encountered by a DS3/E3 interface in one of the previous 96 individual 15 minute intervals.')
juniDsx3FarEndTotalTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 5), )
if mibBuilder.loadTexts: juniDsx3FarEndTotalTable.setStatus('current')
if mibBuilder.loadTexts: juniDsx3FarEndTotalTable.setDescription('This table contains entries for DS3/E3 interfaces present in the system.')
juniDsx3FarEndTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 5, 1), )
dsx3FarEndTotalEntry.registerAugmentions(("Juniper-DS3-MIB", "juniDsx3FarEndTotalEntry"))
juniDsx3FarEndTotalEntry.setIndexNames(*dsx3FarEndTotalEntry.getIndexNames())
if mibBuilder.loadTexts: juniDsx3FarEndTotalEntry.setStatus('current')
if mibBuilder.loadTexts: juniDsx3FarEndTotalEntry.setDescription('Each entry describes the characteristics of an DS3/E3 interface.')
juniDsx3FarEndTotalInvalidSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 5, 1, 1), PerfTotalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDsx3FarEndTotalInvalidSeconds.setStatus('current')
if mibBuilder.loadTexts: juniDsx3FarEndTotalInvalidSeconds.setDescription('The counter associated with the number of Invalid Seconds encountered by a DS3/E3 interface in the previous 24 hour interval.')
juniDsx3FarEndConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 6), )
if mibBuilder.loadTexts: juniDsx3FarEndConfigTable.setStatus('current')
if mibBuilder.loadTexts: juniDsx3FarEndConfigTable.setDescription('This table contains entries for DS3/E3 interfaces present in the system.')
juniDsx3FarEndConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 6, 1), )
dsx3FarEndConfigEntry.registerAugmentions(("Juniper-DS3-MIB", "juniDsx3FarEndConfigEntry"))
juniDsx3FarEndConfigEntry.setIndexNames(*dsx3FarEndConfigEntry.getIndexNames())
if mibBuilder.loadTexts: juniDsx3FarEndConfigEntry.setStatus('current')
if mibBuilder.loadTexts: juniDsx3FarEndConfigEntry.setDescription('Each entry describes the far end configuration characteristics of an DS3/E3 interface.')
juniDsx3FarEndPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 38))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDsx3FarEndPortNumber.setStatus('current')
if mibBuilder.loadTexts: juniDsx3FarEndPortNumber.setDescription('This code identifies the port number of the Far End DS3. It is sent within the Idle Signal Message.')
juniDsx3FarEndGeneratorNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 38))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDsx3FarEndGeneratorNumber.setStatus('current')
if mibBuilder.loadTexts: juniDsx3FarEndGeneratorNumber.setDescription('This code identifies the Far End DS3 Generator Number. It is sent within the Test Signal Message.')
juniDsx3FarEndCarrier = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDsx3FarEndCarrier.setStatus('current')
if mibBuilder.loadTexts: juniDsx3FarEndCarrier.setDescription('Specifies the interface is used in carrier environment. It is sent with MDL messages.')
juniDs3Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4))
juniDs3Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 1))
juniDs3Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 2))
juniDs3Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 1, 1)).setObjects(("Juniper-DS3-MIB", "juniDs3Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Compliance = juniDs3Compliance.setStatus('obsolete')
if mibBuilder.loadTexts: juniDs3Compliance.setDescription('Obsolete compliance statement for entities which implement the Juniper DS3/E3 MIB. This statement became obsolete when support was added for line type and cell scrambler objects.')
juniDs3Compliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 1, 2)).setObjects(("Juniper-DS3-MIB", "juniDs3Group2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Compliance2 = juniDs3Compliance2.setStatus('obsolete')
if mibBuilder.loadTexts: juniDs3Compliance2.setDescription('Obsolete compliance statement for entities which implement the Juniper DS3/E3 MIB. This statement became obsolete when support was added for DSU objects.')
juniDs3Compliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 1, 3)).setObjects(("Juniper-DS3-MIB", "juniDs3Group3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Compliance3 = juniDs3Compliance3.setStatus('obsolete')
if mibBuilder.loadTexts: juniDs3Compliance3.setDescription('Obsolete compliance statement for entities which implement the Juniper DS3/E3 MIB. This statement became obsolete when support was added for dynamic DS3 interface objects.')
juniDs3Compliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 1, 4)).setObjects(("Juniper-DS3-MIB", "juniDs3Group4"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Compliance4 = juniDs3Compliance4.setStatus('obsolete')
if mibBuilder.loadTexts: juniDs3Compliance4.setDescription('Obsolete compliance statement for entities which implement the Juniper DS3/E3 MIB. This statement became obsolete when far end invalid seconds objects and more configuration objects were added.')
juniDs3Compliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 1, 5)).setObjects(("Juniper-DS3-MIB", "juniDs3Group5"), ("Juniper-DS3-MIB", "juniDs3FarEndGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Compliance5 = juniDs3Compliance5.setStatus('obsolete')
if mibBuilder.loadTexts: juniDs3Compliance5.setDescription('Obsolete compliance statement for entities which implement the Juniper DS3/E3 MIB. This statement became obsolete when support was added for far end generator number, port number and carrier.')
juniDs3Compliance6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 1, 6)).setObjects(("Juniper-DS3-MIB", "juniDs3Group5"), ("Juniper-DS3-MIB", "juniDs3FarEndGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Compliance6 = juniDs3Compliance6.setStatus('current')
if mibBuilder.loadTexts: juniDs3Compliance6.setDescription('The compliance statement for entities which implement the Juniper DS3/E3 MIB.')
juniDs3Group = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 2, 1)).setObjects(("Juniper-DS3-MIB", "juniDsx3LineLength"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Group = juniDs3Group.setStatus('obsolete')
if mibBuilder.loadTexts: juniDs3Group.setDescription('Obsolete collection of objects providing management of DS3/E3 interfaces in a Juniper product. This group became obsolete when support was added for line type and cell scrambler objects.')
juniDs3Group2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 2, 2)).setObjects(("Juniper-DS3-MIB", "juniDsx3LineLength"), ("Juniper-DS3-MIB", "juniDsx3LineType"), ("Juniper-DS3-MIB", "juniDsx3CellScramblerConfig"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Group2 = juniDs3Group2.setStatus('obsolete')
if mibBuilder.loadTexts: juniDs3Group2.setDescription('Obsolete collection of objects providing management of DS3/E3 interfaces in a Juniper product. This group became obsolete when support was added for DSU configuration objects.')
juniDs3Group3 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 2, 3)).setObjects(("Juniper-DS3-MIB", "juniDsx3LineLength"), ("Juniper-DS3-MIB", "juniDsx3LineType"), ("Juniper-DS3-MIB", "juniDsx3CellScramblerConfig"), ("Juniper-DS3-MIB", "juniDsx3Ds3DsuMode"), ("Juniper-DS3-MIB", "juniDsx3Ds3BandwidthLimit"), ("Juniper-DS3-MIB", "juniDsx3Ds3DsuScrambleMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Group3 = juniDs3Group3.setStatus('obsolete')
if mibBuilder.loadTexts: juniDs3Group3.setDescription('Obsolete collection of objects providing management of DS3/E3 interfaces in a Juniper product. This group became obsolete when support was added for dynamic DS3 interface objects.')
juniDs3Group4 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 2, 4)).setObjects(("Juniper-DS3-MIB", "juniDsx3LineLength"), ("Juniper-DS3-MIB", "juniDsx3LineType"), ("Juniper-DS3-MIB", "juniDsx3CellScramblerConfig"), ("Juniper-DS3-MIB", "juniDsx3Channelization"), ("Juniper-DS3-MIB", "juniDsx3InterfaceType"), ("Juniper-DS3-MIB", "juniDsx3Application"), ("Juniper-DS3-MIB", "juniDsx3Ds3Channel"), ("Juniper-DS3-MIB", "juniDsx3LowerIfIndex"), ("Juniper-DS3-MIB", "juniDsx3RowStatus"), ("Juniper-DS3-MIB", "juniDsx3Ds3DsuMode"), ("Juniper-DS3-MIB", "juniDsx3Ds3BandwidthLimit"), ("Juniper-DS3-MIB", "juniDsx3Ds3DsuScrambleMode"), ("Juniper-DS3-MIB", "juniDs3NextIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Group4 = juniDs3Group4.setStatus('obsolete')
if mibBuilder.loadTexts: juniDs3Group4.setDescription('Obsolete collection of objects providing management of DS3/E3 interfaces in a Juniper product. This group became obsolete when more configuration objects were added.')
juniDs3Group5 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 2, 5)).setObjects(("Juniper-DS3-MIB", "juniDsx3LineLength"), ("Juniper-DS3-MIB", "juniDsx3LineType"), ("Juniper-DS3-MIB", "juniDsx3CellScramblerConfig"), ("Juniper-DS3-MIB", "juniDsx3Channelization"), ("Juniper-DS3-MIB", "juniDsx3InterfaceType"), ("Juniper-DS3-MIB", "juniDsx3Application"), ("Juniper-DS3-MIB", "juniDsx3Ds3Channel"), ("Juniper-DS3-MIB", "juniDsx3LowerIfIndex"), ("Juniper-DS3-MIB", "juniDsx3RowStatus"), ("Juniper-DS3-MIB", "juniDsx3Ds3DsuMode"), ("Juniper-DS3-MIB", "juniDsx3Ds3BandwidthLimit"), ("Juniper-DS3-MIB", "juniDsx3Ds3DsuScrambleMode"), ("Juniper-DS3-MIB", "juniDsx3MdlCarrier"), ("Juniper-DS3-MIB", "juniDsx3MdlTransmit"), ("Juniper-DS3-MIB", "juniDsx3MdlEic"), ("Juniper-DS3-MIB", "juniDsx3MdlLic"), ("Juniper-DS3-MIB", "juniDsx3MdlFic"), ("Juniper-DS3-MIB", "juniDsx3MdlUnit"), ("Juniper-DS3-MIB", "juniDsx3MdlPfi"), ("Juniper-DS3-MIB", "juniDsx3MdlPort"), ("Juniper-DS3-MIB", "juniDsx3MdlGenerator"), ("Juniper-DS3-MIB", "juniDs3NextIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Group5 = juniDs3Group5.setStatus('current')
if mibBuilder.loadTexts: juniDs3Group5.setDescription('A collection of objects providing management of DS3/E3 interfaces in a Juniper product.')
juniDs3FarEndGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 2, 6)).setObjects(("Juniper-DS3-MIB", "juniDsx3FarEndCurrentInvalidSeconds"), ("Juniper-DS3-MIB", "juniDsx3FarEndIntervalInvalidSeconds"), ("Juniper-DS3-MIB", "juniDsx3FarEndTotalInvalidSeconds"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3FarEndGroup = juniDs3FarEndGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniDs3FarEndGroup.setDescription('Obsolete collection of objects providing remote statistics information applicable to DS3 interfaces in a Juniper product. This group became obsolete when remote port number, generator number and carrier objects were added.')
juniDs3FarEndGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 2, 7)).setObjects(("Juniper-DS3-MIB", "juniDsx3FarEndCurrentInvalidSeconds"), ("Juniper-DS3-MIB", "juniDsx3FarEndIntervalInvalidSeconds"), ("Juniper-DS3-MIB", "juniDsx3FarEndTotalInvalidSeconds"), ("Juniper-DS3-MIB", "juniDsx3FarEndPortNumber"), ("Juniper-DS3-MIB", "juniDsx3FarEndGeneratorNumber"), ("Juniper-DS3-MIB", "juniDsx3FarEndCarrier"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3FarEndGroup2 = juniDs3FarEndGroup2.setStatus('current')
if mibBuilder.loadTexts: juniDs3FarEndGroup2.setDescription('A collection of objects providing remote statistics information applicable to DS3 interfaces in a Juniper product.')
mibBuilder.exportSymbols("Juniper-DS3-MIB", juniDs3Group5=juniDs3Group5, juniDsx3FarEndIntervalTable=juniDsx3FarEndIntervalTable, juniDsx3InterfaceType=juniDsx3InterfaceType, juniDsx3FarEndTotalEntry=juniDsx3FarEndTotalEntry, juniDs3Compliance2=juniDs3Compliance2, juniDsx3MdlGenerator=juniDsx3MdlGenerator, juniDsx3LineType=juniDsx3LineType, juniDsx3FarEndConfigTable=juniDsx3FarEndConfigTable, juniDsx3FarEndConfigEntry=juniDsx3FarEndConfigEntry, juniDs3Group4=juniDs3Group4, juniDs3MIB=juniDs3MIB, juniDsx3FarEndTotalTable=juniDsx3FarEndTotalTable, juniDsx3MdlPfi=juniDsx3MdlPfi, juniDsx3MdlCarrier=juniDsx3MdlCarrier, juniDsx3Ds3Channel=juniDsx3Ds3Channel, juniDsx3FarEndPortNumber=juniDsx3FarEndPortNumber, juniDs3FarEndGroup2=juniDs3FarEndGroup2, juniDsx3MdlUnit=juniDsx3MdlUnit, juniDsx3FarEndCurrentEntry=juniDsx3FarEndCurrentEntry, juniDsx3Ds3DsuMode=juniDsx3Ds3DsuMode, juniDsx3FarEndGeneratorNumber=juniDsx3FarEndGeneratorNumber, juniDsx3MdlEic=juniDsx3MdlEic, juniDsx3MdlTransmit=juniDsx3MdlTransmit, juniDsx3LineLength=juniDsx3LineLength, juniDsx3FarEndIntervalInvalidSeconds=juniDsx3FarEndIntervalInvalidSeconds, juniDs3Compliances=juniDs3Compliances, juniDsx3ConfigEntry=juniDsx3ConfigEntry, juniDs3Conformance=juniDs3Conformance, juniDs3Compliance5=juniDs3Compliance5, juniDsx3CellScramblerConfig=juniDsx3CellScramblerConfig, juniDsx3ConfigTable=juniDsx3ConfigTable, juniDs3Compliance6=juniDs3Compliance6, juniDsx3MdlFic=juniDsx3MdlFic, PYSNMP_MODULE_ID=juniDs3MIB, juniDsx3FarEndCurrentTable=juniDsx3FarEndCurrentTable, juniDsx3Application=juniDsx3Application, juniDsx3FarEndCarrier=juniDsx3FarEndCarrier, juniDsx3MdlLic=juniDsx3MdlLic, juniDsx3Ds3BandwidthLimit=juniDsx3Ds3BandwidthLimit, juniDsx3Channelization=juniDsx3Channelization, juniDs3Compliance=juniDs3Compliance, juniDs3Compliance3=juniDs3Compliance3, juniDsx3FarEndCurrentInvalidSeconds=juniDsx3FarEndCurrentInvalidSeconds, juniDs3NextIfIndex=juniDs3NextIfIndex, juniDsx3FarEndIntervalEntry=juniDsx3FarEndIntervalEntry, juniDs3Groups=juniDs3Groups, juniDs3Group3=juniDs3Group3, juniDsx3MdlPort=juniDsx3MdlPort, juniDsx3LowerIfIndex=juniDsx3LowerIfIndex, juniDsx3RowStatus=juniDsx3RowStatus, juniDsx3FarEndTotalInvalidSeconds=juniDsx3FarEndTotalInvalidSeconds, juniDsx3Ds3DsuScrambleMode=juniDsx3Ds3DsuScrambleMode, juniDs3Group2=juniDs3Group2, juniDs3Objects=juniDs3Objects, juniDs3FarEndGroup=juniDs3FarEndGroup, juniDs3Compliance4=juniDs3Compliance4, juniDs3Group=juniDs3Group)
