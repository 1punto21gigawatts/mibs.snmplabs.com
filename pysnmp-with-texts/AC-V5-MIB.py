#
# PySNMP MIB module AC-V5-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AC-V5-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:09:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
acBoardMibs, acProducts, audioCodes, acRegistrations, acGeneric = mibBuilder.importSymbols("AUDIOCODES-TYPES-MIB", "acBoardMibs", "acProducts", "audioCodes", "acRegistrations", "acGeneric")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter32, iso, MibIdentifier, ObjectIdentity, enterprises, Counter64, IpAddress, NotificationType, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Gauge32, Unsigned32, ModuleIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "iso", "MibIdentifier", "ObjectIdentity", "enterprises", "Counter64", "IpAddress", "NotificationType", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Gauge32", "Unsigned32", "ModuleIdentity", "Integer32")
RowStatus, TAddress, DateAndTime, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TAddress", "DateAndTime", "DisplayString", "TextualConvention")
acV5 = ModuleIdentity((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13))
if mibBuilder.loadTexts: acV5.setLastUpdated('200911251109Z')
if mibBuilder.loadTexts: acV5.setOrganization('AudioCodes Ltd')
if mibBuilder.loadTexts: acV5.setContactInfo('Postal: Support AudioCodes LTD 1 Hayarden Street Airport City Lod, ISRAEL 70151 Tel: 972-3-9764000 Fax: 972-3-9764040 Email: support@audiocodes.com Web: www.audiocodes.com')
if mibBuilder.loadTexts: acV5.setDescription('')
acV5Configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1))
acv5Interfce = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1))
acV5InterfceTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1), )
if mibBuilder.loadTexts: acV5InterfceTable.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceTable.setDescription('')
acV5InterfceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1), ).setIndexNames((0, "AC-V5-MIB", "acV5InterfceIndex"))
if mibBuilder.loadTexts: acV5InterfceEntry.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceEntry.setDescription('')
acV5InterfceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceIndex.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceIndex.setDescription(' AC INI-Param: V5Interfaces_Index')
acV5InterfceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5InterfceRowStatus.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceRowStatus.setDescription('ROWSTATUS Field for line. Access: Online. AC INI-Param: N/A')
acV5InterfceAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("offline", 0), ("protectionSwitchOver", 1), ("inService", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5InterfceAction.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceAction.setDescription('Actions that are carried out on the interfaces. 1 - Switch protection links. To follow the result of this action see changes in value in the acV5InterfaceActiveLink object. Access: Online. AC INI-Param: N/A')
acV5InterfceActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("succeeded", 0), ("inProgress", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceActionResult.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceActionResult.setDescription('Mangement Field for ACTIONS RESULT. AC INI-Param: N/A')
acV5InterfceOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("offline", 0), ("busy", 1), ("inService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceOperationalState.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceOperationalState.setDescription("The interface's operational state. 0 - Offline 1 - Interface is being started up 2 - Operational. AC INI-Param: N/A")
acV5InterfceAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("offline", 0), ("inService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceAdminState.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceAdminState.setDescription("Administrative state of the V5 interface. Changing admin state effects the operational with in 95sec. If the acv5InterfceOperationalState value hasn't changed with in this time - the operation should be regarded as failed. AC INI-Param: V5Interfaces_V5AdminState")
acV5InterfceActiveSignalingLink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("notConfigured", -1), ("primary", 0), ("secondary", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceActiveSignalingLink.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceActiveSignalingLink.setDescription('Which link is active primary or secondary. AC INI-Param: V5Interfaces_InterfaceType')
acV5InterfceIdNotEqual = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceIdNotEqual.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceIdNotEqual.setDescription("Interface Id isn't equal on both sides. 0 - cleared - no error 1 - raised - error found 2 - unknown - not tested yet. AC INI-Param: N/A")
acV5InterfceVariantNotEqual = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceVariantNotEqual.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceVariantNotEqual.setDescription("Variant Id isn't equal on both sides. 0 - cleared - no error 1 - raised - error found 2 - unknown - not tested yet. AC INI-Param: N/A")
acV5InterfceIDCheckTimeOutError = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceIDCheckTimeOutError.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceIDCheckTimeOutError.setDescription('ID check time out error. 0 - cleared - no error 1 - raised - error found 2 - unknown - not tested yet. AC INI-Param: N/A')
acV5InterfceL2StartupFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceL2StartupFailed.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceL2StartupFailed.setDescription('Layer 2 startup failed. 0 - cleared - no error 1 - raised - error found 2 - unknown - not tested yet. AC INI-Param: N/A')
acV5InterfceRestartFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceRestartFailed.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceRestartFailed.setDescription('Restart failed. 0 - cleared - no error 1 - raised - error found 2 - unknown - not tested yet. AC INI-Param: N/A')
acV5InterfceControlProtocolDataLinkError = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceControlProtocolDataLinkError.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceControlProtocolDataLinkError.setDescription('Control protocol data link error. 0 - cleared - no error 1 - raised - error found 2 - unknown - not tested yet. AC INI-Param: N/A')
acV5InterfceLinkControlProtocolDataLinkError = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceLinkControlProtocolDataLinkError.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceLinkControlProtocolDataLinkError.setDescription('Link control protocol data link error. 0 - cleared - no error 1 - raised - error found 2 - unknown - not tested yet. AC INI-Param: N/A')
acV5InterfceBCCProtocolDataLinkError = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceBCCProtocolDataLinkError.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceBCCProtocolDataLinkError.setDescription('BCC protocol data link error. 0 - cleared - no error 1 - raised - error found 2 - unknown - not tested yet. AC INI-Param: N/A')
acV5InterfcePSTNProtocolDataLinkError = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfcePSTNProtocolDataLinkError.setStatus('current')
if mibBuilder.loadTexts: acV5InterfcePSTNProtocolDataLinkError.setDescription('PSTN protocol data link error. 0 - cleared - no error 1 - raised - error found 2 - unknown - not tested yet. AC INI-Param: N/A')
acV5InterfceProtectionDL1Error = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceProtectionDL1Error.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceProtectionDL1Error.setDescription('Protection data link 1 error. 0 - cleared - no error 1 - raised - error found 2 - unknown - not tested yet. AC INI-Param: N/A')
acV5InterfceProtectionDL2Error = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceProtectionDL2Error.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceProtectionDL2Error.setDescription('Protection data link 2 error. 0 - cleared - no error 1 - raised - error found 2 - unknown - not tested yet. AC INI-Param: N/A')
acV5InterfceType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("v52", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceType.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceType.setDescription('Type of the V5 interface: V5.1 or V5.2(only V5.2 is supported). AC INI-Param: V5Interfaces_InterfaceType')
acV5InterfceProtocolSide = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("an-Side", 0), ("le-Side", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfceProtocolSide.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceProtocolSide.setDescription('AN or LE side of the V5 protocol. AC INI-Param: V5Interfaces_ProtocolSide')
acV5InterfceId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5InterfceId.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceId.setDescription('V5 interface identifier. Access: Online. AC INI-Param: V5Interfaces_V5InterfaceId')
acV5InterfceVariantId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5InterfceVariantId.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceVariantId.setDescription('V5 variant identifier. Access: Online. AC INI-Param: V5Interfaces_VariantId')
acV5InterfceLogicalCchannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5InterfceLogicalCchannelId.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceLogicalCchannelId.setDescription('Identifies a group of C-paths. Access: Online. AC INI-Param: V5Interfaces_LogicalCchannelId')
acV5InterfceTraceLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 20, 21, 22, 23))).clone(namedValues=NamedValues(("noTrace", 0), ("full-Trace-No-Duplication", 20), ("full-Trace-With-Duplication", 21), ("layer3-Up-Trace-No-Duplication", 22), ("layer3-Up-Trace-With-Duplication", 23)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5InterfceTraceLevel.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceTraceLevel.setDescription('Trace level1: 0 - No trace 20 - Full trace no duplication 21 - Full trace with duplication 22 - Layers up trace no duplication 23 - Layers up trace with duplication. Access: Online. AC INI-Param: V5Interfaces_TraceLevel')
acV5InterfceNumberOfPortsInCard = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65533))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5InterfceNumberOfPortsInCard.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceNumberOfPortsInCard.setDescription('Define the number of the port in the interface cards. Access: Online. AC INI-Param: V5Interfaces_NumberOfV5PortsInCard ')
acV5InterfceEnableRegisterRecallConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5InterfceEnableRegisterRecallConfiguration.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceEnableRegisterRecallConfiguration.setDescription('In V5.2 Enable configuration of the register recall duration type in the AN. Access: Online. AC INI-Param: V5Interfaces_EnableRegisterRecallConfiguration')
acV5InterfceRegisterRecallDurationType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 1, 1, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5InterfceRegisterRecallDurationType.setStatus('current')
if mibBuilder.loadTexts: acV5InterfceRegisterRecallDurationType.setDescription('V5.2 Register Recall duration type value. Access: Online. AC INI-Param: V5Interfaces_RegisterRecallDurationType')
acV5Link = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2))
acV5LinkTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1), )
if mibBuilder.loadTexts: acV5LinkTable.setStatus('current')
if mibBuilder.loadTexts: acV5LinkTable.setDescription('')
acV5LinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1), ).setIndexNames((0, "AC-V5-MIB", "acV5LinkIndex"))
if mibBuilder.loadTexts: acV5LinkEntry.setStatus('current')
if mibBuilder.loadTexts: acV5LinkEntry.setDescription('')
acV5LinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 62))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5LinkIndex.setStatus('current')
if mibBuilder.loadTexts: acV5LinkIndex.setDescription('Points to the V5 interface to which the link belongs. AC INI-Param: V5Links_Index')
acV5LinkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5LinkRowStatus.setStatus('current')
if mibBuilder.loadTexts: acV5LinkRowStatus.setDescription('ROWSTATUS Field for line. Access: Online. AC INI-Param: N/A')
acV5LinkAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unBlock", 0), ("block", 1), ("linkIdCheck", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5LinkAction.setStatus('current')
if mibBuilder.loadTexts: acV5LinkAction.setDescription('V5 action on the link (Unblock, Block or LinkIdCheck) The result of block and unblock can be seen in the values of the acV5LinkActionResult or acV5LinkOperationalState object. The results for the link ID check action can be seen in the acV5LinkIdCheckStatus object. Access: Online. AC INI-Param: N/A')
acV5LinkActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("succeeded", 0), ("inProgress", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5LinkActionResult.setStatus('current')
if mibBuilder.loadTexts: acV5LinkActionResult.setDescription('Mangement Field for ACTIONS RESULT. AC INI-Param: N/A')
acV5LinkIdCheckStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("succes", 0), ("failure", 1), ("testRejected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5LinkIdCheckStatus.setStatus('current')
if mibBuilder.loadTexts: acV5LinkIdCheckStatus.setDescription('Link ID check status. AC INI-Param: N/A')
acV5LinkOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("operational", 0), ("blocked", 1), ("failed", 2), ("blockedAndFailed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5LinkOperationalState.setStatus('current')
if mibBuilder.loadTexts: acV5LinkOperationalState.setDescription("The link's operational state. 0 - Operational 1 - Link is blocked from use 2 - Link is in failed state 3 - link is in failed state but also blocked. AC INI-Param: N/A")
acV5LinkInterfaceIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5LinkInterfaceIndx.setStatus('current')
if mibBuilder.loadTexts: acV5LinkInterfaceIndx.setDescription('Points to the V5 interface to which the link belongs. Access: Online. AC INI-Param: V5Links_V5InterfaceIndex')
acV5LinkId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5LinkId.setStatus('current')
if mibBuilder.loadTexts: acV5LinkId.setDescription('Identifier of the V5 link. Access: Online. AC INI-Param: V5Links_LinkId')
acV5LinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("primary", 1), ("secondary", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acV5LinkType.setStatus('current')
if mibBuilder.loadTexts: acV5LinkType.setDescription('V5 Link type: primary, secondary or normal. Access: Online. AC INI-Param: V5Links_LinkType')
acV5Action = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 3))
acV5PortAction = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 3, 1))
acV5PortActionType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 10))).clone(namedValues=NamedValues(("none", 0), ("removeAllPorts", 1), ("removeIFPorts", 2), ("actionDone", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acV5PortActionType.setStatus('current')
if mibBuilder.loadTexts: acV5PortActionType.setDescription('The action type to be performed. Access: Online. AC INI-Param: N/A')
acV5PortActionID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acV5PortActionID.setStatus('current')
if mibBuilder.loadTexts: acV5PortActionID.setDescription('Random number used to identify an action with its result. Access: Online. AC INI-Param: N/A')
acV5PortActionParams = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 3, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acV5PortActionParams.setStatus('current')
if mibBuilder.loadTexts: acV5PortActionParams.setDescription('String defining the paprameters for the specific action. Access: Online. AC INI-Param: N/A')
acV5PortActionResult = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 13, 3, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5PortActionResult.setStatus('current')
if mibBuilder.loadTexts: acV5PortActionResult.setDescription('Action result. AC INI-Param: N/A')
mibBuilder.exportSymbols("AC-V5-MIB", acV5InterfceVariantId=acV5InterfceVariantId, acV5InterfceEnableRegisterRecallConfiguration=acV5InterfceEnableRegisterRecallConfiguration, acV5InterfceProtocolSide=acV5InterfceProtocolSide, acV5LinkAction=acV5LinkAction, acV5Action=acV5Action, acV5LinkRowStatus=acV5LinkRowStatus, acV5InterfceId=acV5InterfceId, acV5InterfcePSTNProtocolDataLinkError=acV5InterfcePSTNProtocolDataLinkError, acV5InterfceActionResult=acV5InterfceActionResult, acV5LinkIdCheckStatus=acV5LinkIdCheckStatus, acV5InterfceTraceLevel=acV5InterfceTraceLevel, acV5InterfceNumberOfPortsInCard=acV5InterfceNumberOfPortsInCard, acV5InterfceIdNotEqual=acV5InterfceIdNotEqual, acV5InterfceLogicalCchannelId=acV5InterfceLogicalCchannelId, acV5InterfceControlProtocolDataLinkError=acV5InterfceControlProtocolDataLinkError, acV5InterfceProtectionDL1Error=acV5InterfceProtectionDL1Error, acV5InterfceType=acV5InterfceType, acV5InterfceIndex=acV5InterfceIndex, acV5InterfceBCCProtocolDataLinkError=acV5InterfceBCCProtocolDataLinkError, acV5LinkType=acV5LinkType, acV5InterfceEntry=acV5InterfceEntry, acV5LinkTable=acV5LinkTable, acV5InterfceIDCheckTimeOutError=acV5InterfceIDCheckTimeOutError, acV5LinkId=acV5LinkId, acV5InterfceL2StartupFailed=acV5InterfceL2StartupFailed, acV5InterfceActiveSignalingLink=acV5InterfceActiveSignalingLink, acV5PortAction=acV5PortAction, acv5Interfce=acv5Interfce, acV5PortActionResult=acV5PortActionResult, acV5InterfceOperationalState=acV5InterfceOperationalState, acV5LinkEntry=acV5LinkEntry, acV5LinkInterfaceIndx=acV5LinkInterfaceIndx, acV5PortActionParams=acV5PortActionParams, acV5InterfceRegisterRecallDurationType=acV5InterfceRegisterRecallDurationType, acV5InterfceRowStatus=acV5InterfceRowStatus, acV5LinkOperationalState=acV5LinkOperationalState, PYSNMP_MODULE_ID=acV5, acV5LinkActionResult=acV5LinkActionResult, acV5InterfceTable=acV5InterfceTable, acV5InterfceAdminState=acV5InterfceAdminState, acV5PortActionType=acV5PortActionType, acV5=acV5, acV5InterfceRestartFailed=acV5InterfceRestartFailed, acV5LinkIndex=acV5LinkIndex, acV5Link=acV5Link, acV5InterfceLinkControlProtocolDataLinkError=acV5InterfceLinkControlProtocolDataLinkError, acV5PortActionID=acV5PortActionID, acV5InterfceVariantNotEqual=acV5InterfceVariantNotEqual, acV5InterfceProtectionDL2Error=acV5InterfceProtectionDL2Error, acV5Configuration=acV5Configuration, acV5InterfceAction=acV5InterfceAction)
