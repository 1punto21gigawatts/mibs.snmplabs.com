#
# PySNMP MIB module WWP-COMMUNITY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-COMMUNITY-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:37:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, iso, ModuleIdentity, Gauge32, Bits, NotificationType, ObjectIdentity, IpAddress, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Integer32, Counter32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "iso", "ModuleIdentity", "Gauge32", "Bits", "NotificationType", "ObjectIdentity", "IpAddress", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Integer32", "Counter32", "MibIdentifier")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
wwpModules, = mibBuilder.importSymbols("WWP-SMI", "wwpModules")
wwpCommunityMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 32))
wwpCommunityMIB.setRevisions(('2001-04-03 17:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: wwpCommunityMIB.setRevisionsDescriptions(('Initial creation.',))
if mibBuilder.loadTexts: wwpCommunityMIB.setLastUpdated('200104031700Z')
if mibBuilder.loadTexts: wwpCommunityMIB.setOrganization('World Wide Packets, Inc')
if mibBuilder.loadTexts: wwpCommunityMIB.setContactInfo(' Mib Meister Postal: World Wide Packets P.O. Box 950 Veradale, WA 99037 USA Phone: +1 509 242 9000 Email: mib.meister@worldwidepackets.com')
if mibBuilder.loadTexts: wwpCommunityMIB.setDescription('The MIB module for the WWP Community specific information.')
wwpCommunityMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1))
wwpCommunity = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1))
wwpCommunityMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 32, 2))
wwpCommunityMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 32, 2, 0))
wwpCommunityMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 32, 3))
wwpCommunityMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 32, 3, 1))
wwpCommunityMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 32, 3, 2))
wwpCommunityTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 1), )
if mibBuilder.loadTexts: wwpCommunityTable.setStatus('current')
if mibBuilder.loadTexts: wwpCommunityTable.setDescription('Table of read/write Community entries.')
wwpCommunityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 1, 1), ).setIndexNames((0, "WWP-COMMUNITY-MIB", "wwpCommunityName"), (0, "WWP-COMMUNITY-MIB", "wwpCommunityIpAddress"))
if mibBuilder.loadTexts: wwpCommunityEntry.setStatus('current')
if mibBuilder.loadTexts: wwpCommunityEntry.setDescription('An entry for each read/write community.')
wwpCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpCommunityName.setStatus('current')
if mibBuilder.loadTexts: wwpCommunityName.setDescription('The Name of Community String.')
wwpCommunityIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpCommunityIpAddress.setStatus('current')
if mibBuilder.loadTexts: wwpCommunityIpAddress.setDescription('The IP Address of the host(s) with access rights. A value of 0 means that access is allowed to any host.')
wwpCommunityRights = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("readOnly", 1), ("readWrite", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpCommunityRights.setStatus('current')
if mibBuilder.loadTexts: wwpCommunityRights.setDescription("Rights associated with the Community Strings. The community Name associated with 'readOnly' community Rights will not have any access (read\\write) to the readWrite communities.")
wwpCommunityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpCommunityStatus.setStatus('current')
if mibBuilder.loadTexts: wwpCommunityStatus.setDescription("To create a row in this table, a manager must set this object to 'createAndGo'. wwpCommunityRights must be valid prior to setting this object to 'active'. The Agent should not let all the comunities to be deleted as this will cause isolation of the device. At least one readOnly community and one readWrite community should always be present.")
wwpNotifCommunityTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 2), )
if mibBuilder.loadTexts: wwpNotifCommunityTable.setStatus('current')
if mibBuilder.loadTexts: wwpNotifCommunityTable.setDescription('Table of Notification Community entries.')
wwpNotifCommunityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 2, 1), ).setIndexNames((0, "WWP-COMMUNITY-MIB", "wwpNotifCommunityName"), (0, "WWP-COMMUNITY-MIB", "wwpNotifCommunityDestAddr"))
if mibBuilder.loadTexts: wwpNotifCommunityEntry.setStatus('current')
if mibBuilder.loadTexts: wwpNotifCommunityEntry.setDescription('An entry for each notification community.')
wwpNotifCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpNotifCommunityName.setStatus('current')
if mibBuilder.loadTexts: wwpNotifCommunityName.setDescription('The Community String to be used for the notifications.')
wwpNotifCommunityDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpNotifCommunityDestAddr.setStatus('current')
if mibBuilder.loadTexts: wwpNotifCommunityDestAddr.setDescription('The IP Address of the host to which notification is to be sent.')
wwpNotifCommunityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpNotifCommunityStatus.setStatus('current')
if mibBuilder.loadTexts: wwpNotifCommunityStatus.setDescription("To create a row in this table, a manager must set this object to 'createAndGo'.")
wwpCommunityPersist = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 32, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("persist", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpCommunityPersist.setStatus('current')
if mibBuilder.loadTexts: wwpCommunityPersist.setDescription("To persist the SNMP communities, this object should be set to 'persist'. A read on this object should return none(0).")
mibBuilder.exportSymbols("WWP-COMMUNITY-MIB", wwpCommunityMIBCompliances=wwpCommunityMIBCompliances, wwpCommunityName=wwpCommunityName, wwpNotifCommunityName=wwpNotifCommunityName, wwpCommunityIpAddress=wwpCommunityIpAddress, wwpCommunityMIBObjects=wwpCommunityMIBObjects, wwpNotifCommunityEntry=wwpNotifCommunityEntry, wwpCommunityEntry=wwpCommunityEntry, wwpNotifCommunityDestAddr=wwpNotifCommunityDestAddr, wwpCommunityMIBGroups=wwpCommunityMIBGroups, wwpCommunity=wwpCommunity, wwpCommunityTable=wwpCommunityTable, wwpCommunityMIBNotificationPrefix=wwpCommunityMIBNotificationPrefix, PYSNMP_MODULE_ID=wwpCommunityMIB, wwpCommunityMIBNotifications=wwpCommunityMIBNotifications, wwpCommunityPersist=wwpCommunityPersist, wwpNotifCommunityTable=wwpNotifCommunityTable, wwpCommunityMIBConformance=wwpCommunityMIBConformance, wwpNotifCommunityStatus=wwpNotifCommunityStatus, wwpCommunityMIB=wwpCommunityMIB, wwpCommunityRights=wwpCommunityRights, wwpCommunityStatus=wwpCommunityStatus)
