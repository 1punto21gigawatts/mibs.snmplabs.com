#
# PySNMP MIB module RUCKUS-EVENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RUCKUS-EVENT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:58:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
ruckusEvents, = mibBuilder.importSymbols("RUCKUS-ROOT-MIB", "ruckusEvents")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ModuleIdentity, Counter64, IpAddress, ObjectIdentity, iso, Bits, TimeTicks, Gauge32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, MibIdentifier, Unsigned32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter64", "IpAddress", "ObjectIdentity", "iso", "Bits", "TimeTicks", "Gauge32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "MibIdentifier", "Unsigned32", "NotificationType")
DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention")
ruckusEventMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 25053, 2, 1))
if mibBuilder.loadTexts: ruckusEventMIB.setLastUpdated('201010150000Z')
if mibBuilder.loadTexts: ruckusEventMIB.setOrganization('Ruckus Wireless, Inc.')
if mibBuilder.loadTexts: ruckusEventMIB.setContactInfo('Ruckus Wireless Inc. Postal: 880 W Maude Ave Sunnyvale, CA 94085 USA EMail: support@ruckuswireless.com Phone: +1-650-265-4200')
if mibBuilder.loadTexts: ruckusEventMIB.setDescription('Ruckus event objects, including trap OID and trap payload.')
ruckusEventTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 25053, 2, 1, 1))
ruckusEventObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25053, 2, 1, 2))
ruckusEventAssocTrap = NotificationType((1, 3, 6, 1, 4, 1, 25053, 2, 1, 1, 1)).setObjects(("RUCKUS-EVENT-MIB", "ruckusEventClientMacAddr"))
if mibBuilder.loadTexts: ruckusEventAssocTrap.setStatus('current')
if mibBuilder.loadTexts: ruckusEventAssocTrap.setDescription("Trigger when there is an client association event. The client's MAC address is enclosed.")
ruckusEventDiassocTrap = NotificationType((1, 3, 6, 1, 4, 1, 25053, 2, 1, 1, 2)).setObjects(("RUCKUS-EVENT-MIB", "ruckusEventClientMacAddr"))
if mibBuilder.loadTexts: ruckusEventDiassocTrap.setStatus('current')
if mibBuilder.loadTexts: ruckusEventDiassocTrap.setDescription("Trigger when there is an client diassociation event. The client's MAC address is enclosed.")
ruckusEventSetErrorTrap = NotificationType((1, 3, 6, 1, 4, 1, 25053, 2, 1, 1, 3)).setObjects(("RUCKUS-EVENT-MIB", "ruckusEventSetErrorOID"))
if mibBuilder.loadTexts: ruckusEventSetErrorTrap.setStatus('current')
if mibBuilder.loadTexts: ruckusEventSetErrorTrap.setDescription('Trigger when there is an snmp-set error event. The OID of the snmp-set is enclosed.')
ruckusEventConnectTrap = NotificationType((1, 3, 6, 1, 4, 1, 25053, 2, 1, 1, 25)).setObjects(("RUCKUS-EVENT-MIB", "ruckusEventClientMacAddr"))
if mibBuilder.loadTexts: ruckusEventConnectTrap.setStatus('current')
if mibBuilder.loadTexts: ruckusEventConnectTrap.setDescription("Trigger when there is an AP connect event. The AP's MAC address is enclosed.")
ruckusEventDisconnectTrap = NotificationType((1, 3, 6, 1, 4, 1, 25053, 2, 1, 1, 26)).setObjects(("RUCKUS-EVENT-MIB", "ruckusEventClientMacAddr"))
if mibBuilder.loadTexts: ruckusEventDisconnectTrap.setStatus('current')
if mibBuilder.loadTexts: ruckusEventDisconnectTrap.setDescription("Trigger when there is an AP disconnect event. The AP's MAC address is enclosed.")
ruckusEventClientMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 25053, 2, 1, 2, 15), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ruckusEventClientMacAddr.setStatus('current')
if mibBuilder.loadTexts: ruckusEventClientMacAddr.setDescription("The client's MAC address.")
ruckusEventSetErrorOID = MibScalar((1, 3, 6, 1, 4, 1, 25053, 2, 1, 2, 20), ObjectIdentifier()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ruckusEventSetErrorOID.setStatus('current')
if mibBuilder.loadTexts: ruckusEventSetErrorOID.setDescription('OID of the error snmp-set.')
mibBuilder.exportSymbols("RUCKUS-EVENT-MIB", ruckusEventTraps=ruckusEventTraps, ruckusEventDisconnectTrap=ruckusEventDisconnectTrap, ruckusEventConnectTrap=ruckusEventConnectTrap, ruckusEventAssocTrap=ruckusEventAssocTrap, ruckusEventSetErrorOID=ruckusEventSetErrorOID, ruckusEventMIB=ruckusEventMIB, ruckusEventDiassocTrap=ruckusEventDiassocTrap, ruckusEventSetErrorTrap=ruckusEventSetErrorTrap, PYSNMP_MODULE_ID=ruckusEventMIB, ruckusEventObjects=ruckusEventObjects, ruckusEventClientMacAddr=ruckusEventClientMacAddr)
