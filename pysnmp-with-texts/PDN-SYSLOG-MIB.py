#
# PySNMP MIB module PDN-SYSLOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-SYSLOG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:39:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
pdn_syslog, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdn-syslog")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, TimeTicks, Gauge32, iso, MibIdentifier, Integer32, Counter64, NotificationType, IpAddress, ObjectIdentity, Bits, Unsigned32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "TimeTicks", "Gauge32", "iso", "MibIdentifier", "Integer32", "Counter64", "NotificationType", "IpAddress", "ObjectIdentity", "Bits", "Unsigned32", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
pdnSyslog = ModuleIdentity((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1))
pdnSyslog.setRevisions(('2003-02-13 00:00', '2001-11-15 00:00', '2001-04-10 00:00', '2001-08-09 00:00', '2000-04-24 00:00', '2000-02-05 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: pdnSyslog.setRevisionsDescriptions(('4 changes: 1)Add to the description of pdnSyslogIpAddr 2)Rewording the description of pdnSyslogNumber. 3)Expanding the pdnSyslogMessage size from 255 to 1024 4)Adding a new object: pdnSyslogRateLimiting', 'Changing pdn-common 31 to pdn-syslog 1', 'Added new object pdnSyslogMsgToConsole, and changed comments to reflects the change status of a referenced ietf draft. This draft ( draft-ietf-syslog-syslog-12) is now RFC 3164.', 'This mib defines a collection of objects for managing syslog messages. The objects are used to configure both syslog functions and syslog daemons. This mib also allows one to retrieve syslog message from a device. The modifications to this mib include * making mib snmp v2 * deprecated pdnSyslogLevel * adding pdnSyslogSeverityThreshold * adding pdnSyslogRemoteDaemon * adding pdnSyslogTable * adding pdnSyslogNumOfMsgInTable * adding pdnSyslogMaxTableSize * adding pdnSyslogClearTable', 'Editor: Dragana Gough Initial Version', 'Editor: Dragana Gough Updated OBJECT IDENTIFIER to pdn-syslog',))
if mibBuilder.loadTexts: pdnSyslog.setLastUpdated('200302130000Z')
if mibBuilder.loadTexts: pdnSyslog.setOrganization('Paradyne Networks MIB Working Group')
if mibBuilder.loadTexts: pdnSyslog.setContactInfo('Paradyne Networks, Inc. 8545 126th Avenue North Largo, FL 33733 www.paradyne.com General Comments to: mibwg_team@eng.paradyne.com Editor: Dragana Gough - Original Author Editor: Mike Himelstein - Updated Mib Editor: Jesus Pinto - Updated Mib ')
if mibBuilder.loadTexts: pdnSyslog.setDescription('1)Added pdnEntitySyslogTable to be used for entities 2)Added conformance statements.')
pdnSyslogConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 14))
pdnSyslogStatus = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnSyslogStatus.setStatus('current')
if mibBuilder.loadTexts: pdnSyslogStatus.setDescription(' This value allows user to disable or enable syslog event generation. ')
pdnSyslogIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnSyslogIPAddr.setStatus('current')
if mibBuilder.loadTexts: pdnSyslogIPAddr.setDescription(' This value is the IP address of a syslog server. If the ip address is known then this can be used for the remote syslog daemon')
pdnSyslogLevel = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("emerg", 1), ("err", 2), ("norm", 3), ("info", 4))).clone('norm')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnSyslogLevel.setStatus('deprecated')
if mibBuilder.loadTexts: pdnSyslogLevel.setDescription(' This value corresponds to a minimum severity level of events that will be logged. ')
pdnSyslogPort = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1, 4), Integer32().clone(514)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnSyslogPort.setStatus('current')
if mibBuilder.loadTexts: pdnSyslogPort.setDescription('This value corresponds to a UDP port number to which system events are sent. The default is 514. ')
pdnSyslogSeverityThreshold = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("emerg", 0), ("alert", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("info", 6), ("debug", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnSyslogSeverityThreshold.setStatus('current')
if mibBuilder.loadTexts: pdnSyslogSeverityThreshold.setDescription('This value corresponds to a minimum severity level that a syslog messages can be set. All syslog message with an enum value greater than the threshold will not be sent. The values are obtain from the RFC 3164 The BSD Syslog Protocol: emerg (0) - Emergency: system is unusable alert (1) - Alert: action must be taken immediately critical (2) - Critical: critical conditions error (3) - Error: error conditions warning (4) - Warning: warning conditions notice (5) - Notice: normal but significant condition info (6) - Informational: informational messages debug (7) - Debug: debug-level messages For a more complete description of the severity levels, please reference your Operation Specification Manual for details pertaining to that product.')
pdnSyslogRemoteDaemon = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnSyslogRemoteDaemon.setStatus('current')
if mibBuilder.loadTexts: pdnSyslogRemoteDaemon.setDescription('This value allows user to disable or enable syslog messages going to a remote daemon.')
pdnSyslogTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1, 7), )
if mibBuilder.loadTexts: pdnSyslogTable.setStatus('current')
if mibBuilder.loadTexts: pdnSyslogTable.setDescription('This table supports retrieval of the syslog messages.')
pdnSyslogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1, 7, 1), ).setIndexNames((0, "PDN-SYSLOG-MIB", "pdnSyslogNumber"))
if mibBuilder.loadTexts: pdnSyslogEntry.setStatus('current')
if mibBuilder.loadTexts: pdnSyslogEntry.setDescription('An entry in the pdnSyslogTable.')
pdnSyslogNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1, 7, 1, 1), Integer32())
if mibBuilder.loadTexts: pdnSyslogNumber.setStatus('current')
if mibBuilder.loadTexts: pdnSyslogNumber.setDescription('This is a sequentially increasing index of syslog messages starting at 1. When the table reaches its maximum size (as defined by pdnSyslogMaxTableSize) then the oldest message will be dropped without renumbering any messages that remain. The index is reset to 1 on a device reset or when the table is cleared (using pdnSyslogClearTable).')
pdnSyslogMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1024, 1024)).setFixedLength(1024)).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnSyslogMessage.setStatus('current')
if mibBuilder.loadTexts: pdnSyslogMessage.setDescription('The text of the syslog message.')
pdnEntitySyslogTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1, 13), )
if mibBuilder.loadTexts: pdnEntitySyslogTable.setStatus('current')
if mibBuilder.loadTexts: pdnEntitySyslogTable.setDescription('This table supports retrieval of the syslog messages. Each entry corresponds to a message being generated by (or on behalf of) an entity (e.g. port card).')
pdnEntitySyslogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1, 13, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "PDN-SYSLOG-MIB", "pdnEntitySyslogNumber"))
if mibBuilder.loadTexts: pdnEntitySyslogEntry.setStatus('current')
if mibBuilder.loadTexts: pdnEntitySyslogEntry.setDescription('An entry in the pdnEntitySyslogTable ')
pdnEntitySyslogNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1, 13, 1, 1), Integer32())
if mibBuilder.loadTexts: pdnEntitySyslogNumber.setStatus('current')
if mibBuilder.loadTexts: pdnEntitySyslogNumber.setDescription('This is a sequentially increasing index of syslog messages starting at 1. When the table reaches its maximum size (as defined by pdnSyslogMaxTableSize) then the oldest message will be dropped without renumbering any messages that remain. The index is reset to 1 on a device reset or when the table is cleared (using pdnSyslogClearTable).')
pdnEntitySyslogMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1, 13, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1024, 1024)).setFixedLength(1024)).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnEntitySyslogMessage.setStatus('current')
if mibBuilder.loadTexts: pdnEntitySyslogMessage.setDescription('The text of the syslog message.')
pdnSyslogNumOfMsgInTable = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnSyslogNumOfMsgInTable.setStatus('current')
if mibBuilder.loadTexts: pdnSyslogNumOfMsgInTable.setDescription('This value let the users know how many syslog messages are currently in the syslog table.')
pdnSyslogMaxTableSize = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnSyslogMaxTableSize.setStatus('current')
if mibBuilder.loadTexts: pdnSyslogMaxTableSize.setDescription('The maximum number of syslog message the syslog table can hold.')
pdnSyslogClearTable = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noOp", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnSyslogClearTable.setStatus('current')
if mibBuilder.loadTexts: pdnSyslogClearTable.setDescription('Clears all the entries in the syslog message table.')
pdnSyslogMsgToConsole = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnSyslogMsgToConsole.setStatus('current')
if mibBuilder.loadTexts: pdnSyslogMsgToConsole.setDescription("This allows messages to be sent to the device's console port. Note this is intended for debug use only! It is not recommended to be used to monitor syslog message on a regular bases. If one needs to constantly monitor the syslog messages, then they should use the remote syslog daemon, or other user interfaces.")
pdnSyslogRateLimiting = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnSyslogRateLimiting.setStatus('current')
if mibBuilder.loadTexts: pdnSyslogRateLimiting.setDescription('This allows one to enable or disable rate limitiming. When rate limiting is enabled, it prevents the exact same message from being resent within a fixed amount of time. ')
pdnSyslogCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 14, 1))
pdnSyslogGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 14, 2))
pdnSyslogCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 14, 1, 1)).setObjects(("PDN-SYSLOG-MIB", "pdnSyslogGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnSyslogCompliance = pdnSyslogCompliance.setStatus('current')
if mibBuilder.loadTexts: pdnSyslogCompliance.setDescription('The compliance statement for configurable attributes for syslog manager.')
pdnSyslogGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 14, 2, 1)).setObjects(("PDN-SYSLOG-MIB", "pdnSyslogStatus"), ("PDN-SYSLOG-MIB", "pdnSyslogIPAddr"), ("PDN-SYSLOG-MIB", "pdnSyslogPort"), ("PDN-SYSLOG-MIB", "pdnSyslogSeverityThreshold"), ("PDN-SYSLOG-MIB", "pdnSyslogRemoteDaemon"), ("PDN-SYSLOG-MIB", "pdnSyslogMessage"), ("PDN-SYSLOG-MIB", "pdnSyslogNumOfMsgInTable"), ("PDN-SYSLOG-MIB", "pdnSyslogMaxTableSize"), ("PDN-SYSLOG-MIB", "pdnSyslogClearTable"), ("PDN-SYSLOG-MIB", "pdnSyslogMsgToConsole"), ("PDN-SYSLOG-MIB", "pdnSyslogRateLimiting"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnSyslogGroup = pdnSyslogGroup.setStatus('current')
if mibBuilder.loadTexts: pdnSyslogGroup.setDescription('A collection of objects that permits configuration and display of syslog messages generated.')
pdnSyslogOptionalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 14, 2, 2)).setObjects(("PDN-SYSLOG-MIB", "pdnEntitySyslogMessage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnSyslogOptionalGroup = pdnSyslogOptionalGroup.setStatus('current')
if mibBuilder.loadTexts: pdnSyslogOptionalGroup.setDescription(' A collection of syslog messages classified per entities.')
pdnSyslogDeprecatedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 31, 14, 2, 3)).setObjects(("PDN-SYSLOG-MIB", "pdnSyslogLevel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnSyslogDeprecatedGroup = pdnSyslogDeprecatedGroup.setStatus('deprecated')
if mibBuilder.loadTexts: pdnSyslogDeprecatedGroup.setDescription('Objects being deprecated should be added to this group')
mibBuilder.exportSymbols("PDN-SYSLOG-MIB", pdnSyslogCompliances=pdnSyslogCompliances, pdnEntitySyslogNumber=pdnEntitySyslogNumber, pdnSyslog=pdnSyslog, pdnSyslogConformance=pdnSyslogConformance, pdnSyslogStatus=pdnSyslogStatus, pdnSyslogNumOfMsgInTable=pdnSyslogNumOfMsgInTable, pdnSyslogGroups=pdnSyslogGroups, pdnSyslogClearTable=pdnSyslogClearTable, pdnSyslogIPAddr=pdnSyslogIPAddr, pdnSyslogMsgToConsole=pdnSyslogMsgToConsole, pdnSyslogDeprecatedGroup=pdnSyslogDeprecatedGroup, pdnSyslogCompliance=pdnSyslogCompliance, pdnSyslogNumber=pdnSyslogNumber, pdnSyslogOptionalGroup=pdnSyslogOptionalGroup, pdnSyslogGroup=pdnSyslogGroup, pdnEntitySyslogMessage=pdnEntitySyslogMessage, pdnEntitySyslogTable=pdnEntitySyslogTable, pdnSyslogLevel=pdnSyslogLevel, pdnSyslogEntry=pdnSyslogEntry, pdnEntitySyslogEntry=pdnEntitySyslogEntry, pdnSyslogMaxTableSize=pdnSyslogMaxTableSize, pdnSyslogSeverityThreshold=pdnSyslogSeverityThreshold, pdnSyslogRemoteDaemon=pdnSyslogRemoteDaemon, pdnSyslogRateLimiting=pdnSyslogRateLimiting, PYSNMP_MODULE_ID=pdnSyslog, pdnSyslogMessage=pdnSyslogMessage, pdnSyslogTable=pdnSyslogTable, pdnSyslogPort=pdnSyslogPort)
