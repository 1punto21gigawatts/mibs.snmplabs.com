#
# PySNMP MIB module NMS-IF-APP-POLICY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NMS-IF-APP-POLICY-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:22:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
nmsMgmt, = mibBuilder.importSymbols("NMS-SMI", "nmsMgmt")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, TimeTicks, NotificationType, ObjectIdentity, MibIdentifier, Gauge32, IpAddress, ModuleIdentity, Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Unsigned32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "TimeTicks", "NotificationType", "ObjectIdentity", "MibIdentifier", "Gauge32", "IpAddress", "ModuleIdentity", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Unsigned32", "Counter64")
DisplayString, PhysAddress, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "PhysAddress", "TextualConvention", "RowStatus")
nmsIfAppPolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65))
nmsIfAppPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1), )
if mibBuilder.loadTexts: nmsIfAppPolicyTable.setStatus('mandatory')
if mibBuilder.loadTexts: nmsIfAppPolicyTable.setDescription('A list of interface application policy table entries.')
nmsIfAppPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1, 1), ).setIndexNames((0, "NMS-IF-APP-POLICY-MIB", "ponIfIndex"))
if mibBuilder.loadTexts: nmsIfAppPolicyEntry.setStatus('mandatory')
if mibBuilder.loadTexts: nmsIfAppPolicyEntry.setDescription('A collection of additional objects in the interface property table.')
nmsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: nmsIfIndex.setDescription('A unique value for each interface. The same value as ifIndex of ifTable in RFC1213.')
nmsIfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsIfDescr.setStatus('mandatory')
if mibBuilder.loadTexts: nmsIfDescr.setDescription('A textual string containing information of interface. The same value as ifDesc of ifTable in RFC1213. ')
nmsIfInMacACL = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsIfInMacACL.setStatus('mandatory')
if mibBuilder.loadTexts: nmsIfInMacACL.setDescription('Interface input MAC address ACL.')
nmsIfOutMacACL = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsIfOutMacACL.setStatus('mandatory')
if mibBuilder.loadTexts: nmsIfOutMacACL.setDescription('Interface output MAC address ACL.')
nmsIfInIpACL = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsIfInIpACL.setStatus('mandatory')
if mibBuilder.loadTexts: nmsIfInIpACL.setDescription('Interface input IP address ACL.')
nmsIfOutIpACL = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsIfOutIpACL.setStatus('mandatory')
if mibBuilder.loadTexts: nmsIfOutIpACL.setDescription('Interface output IP address ACL.')
nmsIfInQosPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsIfInQosPolicyName.setStatus('mandatory')
if mibBuilder.loadTexts: nmsIfInQosPolicyName.setDescription('Interface input QoS policy name.')
nmsIfOutQosPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsIfOutQosPolicyName.setStatus('mandatory')
if mibBuilder.loadTexts: nmsIfOutQosPolicyName.setDescription('Interface output QoS policy name.')
mibBuilder.exportSymbols("NMS-IF-APP-POLICY-MIB", nmsIfAppPolicyTable=nmsIfAppPolicyTable, nmsIfOutIpACL=nmsIfOutIpACL, nmsIfAppPolicy=nmsIfAppPolicy, nmsIfOutQosPolicyName=nmsIfOutQosPolicyName, nmsIfDescr=nmsIfDescr, nmsIfOutMacACL=nmsIfOutMacACL, nmsIfInIpACL=nmsIfInIpACL, nmsIfInQosPolicyName=nmsIfInQosPolicyName, nmsIfInMacACL=nmsIfInMacACL, nmsIfIndex=nmsIfIndex, nmsIfAppPolicyEntry=nmsIfAppPolicyEntry)
