#
# PySNMP MIB module TRAPEZE-NETWORKS-CLIENT-SESSION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TRAPEZE-NETWORKS-CLIENT-SESSION-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:27:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter32, IpAddress, Bits, Gauge32, Unsigned32, ObjectIdentity, MibIdentifier, ModuleIdentity, Counter64, Integer32, TimeTicks, iso, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "IpAddress", "Bits", "Gauge32", "Unsigned32", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "Counter64", "Integer32", "TimeTicks", "iso", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention, TimeStamp, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TimeStamp", "MacAddress")
TrpzApSerialNum, TrpzAccessType, TrpzRadioRate, TrpzRadioNum, TrpzRssi, TrpzApNum = mibBuilder.importSymbols("TRAPEZE-NETWORKS-AP-TC", "TrpzApSerialNum", "TrpzAccessType", "TrpzRadioRate", "TrpzRadioNum", "TrpzRssi", "TrpzApNum")
TrpzPhysPortNumberOrZero, = mibBuilder.importSymbols("TRAPEZE-NETWORKS-BASIC-TC", "TrpzPhysPortNumberOrZero")
TrpzClientDeviceType, TrpzUserAccessType, TrpzClientDeviceGroupName, TrpzClientSessionState, TrpzClientAccessMode, TrpzClientDeviceProfileName, TrpzClientAuthenProtocolType = mibBuilder.importSymbols("TRAPEZE-NETWORKS-CLIENT-SESSION-TC", "TrpzClientDeviceType", "TrpzUserAccessType", "TrpzClientDeviceGroupName", "TrpzClientSessionState", "TrpzClientAccessMode", "TrpzClientDeviceProfileName", "TrpzClientAuthenProtocolType")
trpzMibs, = mibBuilder.importSymbols("TRAPEZE-NETWORKS-ROOT-MIB", "trpzMibs")
trpzClientSessionMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 14525, 4, 4))
trpzClientSessionMib.setRevisions(('2012-04-20 01:12', '2011-12-06 01:10', '2011-05-18 01:00', '2008-10-23 00:56', '2008-05-23 00:55', '2007-11-01 00:54', '2007-10-09 00:51', '2006-11-16 00:43', '2006-10-17 00:42', '2006-09-26 00:32', '2006-07-29 00:21', '2006-06-06 00:10', '2006-03-30 00:08',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: trpzClientSessionMib.setRevisionsDescriptions(('v3.1.2: Added three new columnar objects: trpzClSessClientSessDeviceType, trpzClSessClientSessDeviceGroup, trpzClSessClientSessDeviceProfileName. (for 8.0 release)', "v3.1.0: Added a new table: trpzClSessClientAddressTable to hold the clients' Internet addresses. (for 8.0 release)", "v3.0.0: Obsoleted a previously deprecated object: 'trpzClSessClientSessAuthMethod' and the associated Textual Convention: 'TrpzAuthMethod'. This will be published in 7.5 release.", "v2.4.1: Using the new TC TrpzPhysPortNumberOrZero instead of ''Unsigned32 (0..1024)''. This will be published in 7.1 release.", 'v2.4.0: Updated conformance section to reflect the history of changes to this MIB: added more compliance statements and groups. This will be published in 7.0 release.', 'v2.3.4: Added two new columnar objects: - trpzClSessClientSessPhysPortNum, - trpzClSessRoamHistPhysPortNum, to indicate the port used by wired-auth clients. (for 6.2 release)', 'v2.3.1: Added four new columnar objects: - trpzClSessClientSessAccessMode, obsoleting trpzClSessClientSessAccessType; - trpzClSessClientSessApNum, obsoleting trpzClSessClientSessPortOrNum; - trpzClSessRoamHistAccessMode, obsoleting trpzClSessRoamHistAccessType; - trpzClSessRoamHistApNum, obsoleting trpzClSessRoamHistApNumOrPort. Reason: in 6.0, direct- and network-attached APs were unified. (for 6.2 release)', 'v2.2.1: added one value (21) to TrpzSessState', 'v2.2.0: Described semantics of trpzClSessRoamHistTimeStamp', 'v2.1.1: Added three new columnar objects: - trpzClSessClientSessDot1xAuthMethod, to be used instead of trpzClSessClientSessAuthMethod; - trpzClSessClientSessSessionState, to be used instead of trpzClSessClientSessState; - trpzClSessClientSessLoginType, to provide context for interpreting the values of the above objects (Dot1xAuthMethod, SessionState). Changed behaviour for trpzClSessClientSessAuthServer: provides system IP when auth is done via local DB (it used to be 0.0.0.0 in such cases).', 'v2.0.2: Fixed imports and compliance group', 'v2.0.1: Adding scalar for total number of sessions.', 'v1.0: Initial version, for 4.1 release',))
if mibBuilder.loadTexts: trpzClientSessionMib.setLastUpdated('201204200112Z')
if mibBuilder.loadTexts: trpzClientSessionMib.setOrganization('Trapeze Networks')
if mibBuilder.loadTexts: trpzClientSessionMib.setContactInfo('Trapeze Networks Technical Support www.trapezenetworks.com US: 866.TRPZ.TAC International: 925.474.2400 support@trapezenetworks.com')
if mibBuilder.loadTexts: trpzClientSessionMib.setDescription("Client Session MIB. AP = Access Point; AC = Access Controller (wireless switch), the device that runs a SNMP Agent implementing this MIB. Copyright 2005-2012 Trapeze Networks, Inc. All rights reserved. This Trapeze Networks SNMP Management Information Base Specification (Specification) embodies Trapeze Networks' confidential and proprietary intellectual property. Trapeze Networks retains all title and ownership in the Specification, including any revisions. This Specification is supplied 'AS IS' and Trapeze Networks makes no warranty, either express or implied, as to the use, operation, condition, or performance of the Specification.")
class TrpzEncryptionType(TextualConvention, Integer32):
    description = 'Encryption types.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("none", 1), ("aesCcm", 2), ("aesOcb", 3), ("tkip", 4), ("wep104", 5), ("wep40", 6), ("staticWep", 7))

class TrpzAuthMethod(TextualConvention, Integer32):
    description = "Authentication methods. Obsolete, use 'TrpzClientAuthenProtocolType' instead."
    status = 'obsolete'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 14, 18, 22, 26, 27, 34, 255))
    namedValues = NamedValues(("none", 1), ("identity", 2), ("notification", 3), ("nak", 4), ("md5", 5), ("otp", 6), ("tokenCard", 7), ("tls", 14), ("leap", 18), ("ttls", 22), ("peap", 26), ("msChapv2", 27), ("eapExt", 34), ("passThru", 255))

class TrpzSessState(TextualConvention, Integer32):
    description = 'Session states.'
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))
    namedValues = NamedValues(("invalid", 1), ("initializing", 2), ("assocReqAndAuth", 3), ("assocAndAuth", 4), ("wired", 5), ("webLoginPh1", 6), ("webLoginPh1B", 7), ("webLoginPh1F", 8), ("webLoginPh2", 9), ("webPortalLogin", 10), ("authorizing", 11), ("authorized", 12), ("active", 13), ("activePortal", 14), ("deassociated", 15), ("roamingAway", 16), ("updatedToRoam", 17), ("roamedAway", 18), ("killing", 19), ("free", 20), ("enforceSoda", 21))

trpzClientSessionObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1))
trpzClientSessionDataObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1))
trpzClSessClientSessionTable = MibTable((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1), )
if mibBuilder.loadTexts: trpzClSessClientSessionTable.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessionTable.setDescription('Client Session Table.')
trpzClSessClientSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1), ).setIndexNames((0, "TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessMacAddress"))
if mibBuilder.loadTexts: trpzClSessClientSessionEntry.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessionEntry.setDescription('Information about a particular client session.')
trpzClSessClientSessMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: trpzClSessClientSessMacAddress.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessMacAddress.setDescription('Client MAC address.')
trpzClSessClientSessSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessSessionId.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessSessionId.setDescription('Session ID is a string long enough to be sure we can make it unique over a long time.')
trpzClSessClientSessUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessUsername.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessUsername.setDescription('Client user name.')
trpzClSessClientSessIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessIpAddress.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessIpAddress.setDescription('Client IP address. If the client has no IP address, the value will be 0.0.0.0.')
trpzClSessClientSessEncryptionType = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 5), TrpzEncryptionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessEncryptionType.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessEncryptionType.setDescription('Encryption type.')
trpzClSessClientSessVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessVlan.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessVlan.setDescription('The name of the client VLAN.')
trpzClSessClientSessApSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 7), TrpzApSerialNum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessApSerialNum.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessApSerialNum.setDescription('Serial Number of the AP this client is connected to. It is a zero length string when wired access is used.')
trpzClSessClientSessRadioNum = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 8), TrpzRadioNum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessRadioNum.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessRadioNum.setDescription("Number of the Radio that provides service to this client. It is 'not-applicable' when wired access is used.")
trpzClSessClientSessAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 9), TrpzAccessType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessAccessType.setStatus('obsolete')
if mibBuilder.loadTexts: trpzClSessClientSessAccessType.setDescription('Access type this client uses (via AP, DAP or wired). Obsoleted by trpzClSessClientSessAccessMode.')
trpzClSessClientSessAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 10), TrpzAuthMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessAuthMethod.setStatus('obsolete')
if mibBuilder.loadTexts: trpzClSessClientSessAuthMethod.setDescription('Authentication Method. Obsolete, use trpzClSessClientSessDot1xAuthMethod instead.')
trpzClSessClientSessAuthServer = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessAuthServer.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessAuthServer.setDescription("Authentication Server's IP Address. If the client is authenticated via the local DB, or not authenticated, its value will be the system IP.")
trpzClSessClientSessPortOrNum = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessPortOrNum.setStatus('obsolete')
if mibBuilder.loadTexts: trpzClSessClientSessPortOrNum.setDescription('Port number. Obsoleted by trpzClSessClientSessApNum.')
trpzClSessClientSessVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessVlanTag.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessVlanTag.setDescription('VLAN tag.')
trpzClSessClientSessTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 14), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessTimeStamp.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessTimeStamp.setDescription('Session start time stamp.')
trpzClSessClientSessSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessSsid.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessSsid.setDescription('SSID.')
trpzClSessClientSessState = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 16), TrpzSessState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessState.setStatus('deprecated')
if mibBuilder.loadTexts: trpzClSessClientSessState.setDescription('Session state. Deprecated, use trpzClSessClientSessSessionState instead.')
trpzClSessClientSessLoginType = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 17), TrpzUserAccessType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessLoginType.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessLoginType.setDescription('Login type (mac, web, dot1x or last-resort).')
trpzClSessClientSessDot1xAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 18), TrpzClientAuthenProtocolType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessDot1xAuthMethod.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessDot1xAuthMethod.setDescription('Dot1x Authentication Method.')
trpzClSessClientSessSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 19), TrpzClientSessionState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessSessionState.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessSessionState.setDescription('Session non-intermediate state.')
trpzClSessClientSessAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 20), TrpzClientAccessMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessAccessMode.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessAccessMode.setDescription('Access mode (type) this client uses (via AP or wired). Obsoletes trpzClSessClientSessAccessType since in 6.0 directly attached APs and DAPs were unified.')
trpzClSessClientSessApNum = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 21), TrpzApNum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessApNum.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessApNum.setDescription("The AP providing wireless service to this client is identified by its administratively assigned AP Number, unique on same AC (switch), regardless of how APs are attached to the AC. Meaningful when trpzClSessClientSessAccessMode = 'ap'. Obsoletes trpzClSessClientSessPortOrNum since in 6.0 directly attached APs and DAPs were unified.")
trpzClSessClientSessPhysPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 22), TrpzPhysPortNumberOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessPhysPortNum.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessPhysPortNum.setDescription("The physical port used by this wired-auth client is identified by its port number on the AC (switch). Zero means the port is unknown or not applicable (for example, when trpzClSessClientSessAccessMode = 'ap'). Meaningful when trpzClSessClientSessAccessMode = 'wired'.")
trpzClSessClientSessDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 23), TrpzClientDeviceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessDeviceType.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessDeviceType.setDescription('The type of the client device. Is a zero length string if unknown or the device detection feature is disabled.')
trpzClSessClientSessDeviceGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 24), TrpzClientDeviceGroupName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessDeviceGroup.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessDeviceGroup.setDescription('The group that the detected client device type belongs to. Is a zero length string if the device type is unknown or the device detection feature is disabled.')
trpzClSessClientSessDeviceProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 1, 1, 25), TrpzClientDeviceProfileName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessDeviceProfileName.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessDeviceProfileName.setDescription("The name of the device profile associated with the detected client device. A device profile is a collection of policies that apply to one or more types of client devices. Is a zero length string in 'detect-only' mode, if not set or if the device detection feature is disabled. In 'detect-only' mode policy enforcement is disabled.")
trpzClSessRoamingHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 2), )
if mibBuilder.loadTexts: trpzClSessRoamingHistoryTable.setStatus('current')
if mibBuilder.loadTexts: trpzClSessRoamingHistoryTable.setDescription('Roaming History Table. Expansion of Client Session Table.')
trpzClSessRoamingHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 2, 1), ).setIndexNames((0, "TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistMacAddress"), (0, "TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistIndex"))
if mibBuilder.loadTexts: trpzClSessRoamingHistoryEntry.setStatus('current')
if mibBuilder.loadTexts: trpzClSessRoamingHistoryEntry.setDescription('Roaming History Entry.')
trpzClSessRoamHistMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: trpzClSessRoamHistMacAddress.setStatus('current')
if mibBuilder.loadTexts: trpzClSessRoamHistMacAddress.setDescription('Client MAC address.')
trpzClSessRoamHistIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: trpzClSessRoamHistIndex.setStatus('current')
if mibBuilder.loadTexts: trpzClSessRoamHistIndex.setDescription('Entry index.')
trpzClSessRoamHistApSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 2, 1, 3), TrpzApSerialNum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessRoamHistApSerialNum.setStatus('current')
if mibBuilder.loadTexts: trpzClSessRoamHistApSerialNum.setDescription('Serial Number of the AP this client was connected to.')
trpzClSessRoamHistRadioNum = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 2, 1, 4), TrpzRadioNum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessRoamHistRadioNum.setStatus('current')
if mibBuilder.loadTexts: trpzClSessRoamHistRadioNum.setDescription('Number of the Radio that provided service to this client.')
trpzClSessRoamHistAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 2, 1, 5), TrpzAccessType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessRoamHistAccessType.setStatus('obsolete')
if mibBuilder.loadTexts: trpzClSessRoamHistAccessType.setDescription('Access type used by this client (via AP, DAP or wired). Obsoleted by trpzClSessRoamHistAccessMode.')
trpzClSessRoamHistApNumOrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessRoamHistApNumOrPort.setStatus('obsolete')
if mibBuilder.loadTexts: trpzClSessRoamHistApNumOrPort.setDescription('AP port number, DAP number, or Port number for wired access. Obsoleted by trpzClSessRoamHistApNum.')
trpzClSessRoamHistIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 2, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessRoamHistIpAddress.setStatus('current')
if mibBuilder.loadTexts: trpzClSessRoamHistIpAddress.setDescription('IP address of the AC (wireless switch) the client or AP was connected to.')
trpzClSessRoamHistTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 2, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessRoamHistTimeStamp.setStatus('current')
if mibBuilder.loadTexts: trpzClSessRoamHistTimeStamp.setDescription('The difference between the time the session was created on the roamed-to switch and the time the last switch, the one where the user is at currently, started. The timestamp unit is in hundredths of seconds.')
trpzClSessRoamHistAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 2, 1, 9), TrpzClientAccessMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessRoamHistAccessMode.setStatus('current')
if mibBuilder.loadTexts: trpzClSessRoamHistAccessMode.setDescription('Access mode (type) used by this client (via AP or wired). Obsoletes trpzClSessRoamHistAccessType since in 6.0 directly attached APs and DAPs were unified.')
trpzClSessRoamHistApNum = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 2, 1, 10), TrpzApNum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessRoamHistApNum.setStatus('current')
if mibBuilder.loadTexts: trpzClSessRoamHistApNum.setDescription('The administratively assigned AP Number, unique on same AC (switch), regardless of how APs are attached to the AC. Obsoletes trpzClSessRoamHistApNumOrPort since in 6.0 directly attached APs and DAPs were unified.')
trpzClSessRoamHistPhysPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 2, 1, 11), TrpzPhysPortNumberOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessRoamHistPhysPortNum.setStatus('current')
if mibBuilder.loadTexts: trpzClSessRoamHistPhysPortNum.setDescription("The physical port used by this wired-auth client is identified by its port number on the AC (switch). Zero means the port is unknown or not applicable (for example, when trpzClSessRoamHistAccessMode = 'ap'). Meaningful when trpzClSessRoamHistAccessMode = 'wired'.")
trpzClSessClientSessionStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 3), )
if mibBuilder.loadTexts: trpzClSessClientSessionStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessionStatisticsTable.setDescription('Client Session Statistics Table.')
trpzClSessClientSessionStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 3, 1), ).setIndexNames((0, "TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsMacAddress"))
if mibBuilder.loadTexts: trpzClSessClientSessionStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessionStatisticsEntry.setDescription('Client Session Statistics Table Entry.')
trpzClSessClientSessStatsMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: trpzClSessClientSessStatsMacAddress.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessStatsMacAddress.setDescription('Client MAC address.')
trpzClSessClientSessStatsUniPktIn = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessStatsUniPktIn.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessStatsUniPktIn.setDescription('Unicast packets in.')
trpzClSessClientSessStatsUniOctetIn = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessStatsUniOctetIn.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessStatsUniOctetIn.setDescription('Unicast octets in.')
trpzClSessClientSessStatsUniPktOut = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessStatsUniPktOut.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessStatsUniPktOut.setDescription('Unicast packets out.')
trpzClSessClientSessStatsUniOctetOut = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessStatsUniOctetOut.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessStatsUniOctetOut.setDescription('Unicast octets out.')
trpzClSessClientSessStatsMultiPktIn = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessStatsMultiPktIn.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessStatsMultiPktIn.setDescription('Multicast packets in.')
trpzClSessClientSessStatsMultiOctetIn = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessStatsMultiOctetIn.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessStatsMultiOctetIn.setDescription('Multicast octets in.')
trpzClSessClientSessStatsEncErrPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessStatsEncErrPkt.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessStatsEncErrPkt.setDescription('Number of packets with encryption errors.')
trpzClSessClientSessStatsEncErrOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessStatsEncErrOctet.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessStatsEncErrOctet.setDescription('Number of octets with encryption errors.')
trpzClSessClientSessStatsLastRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 3, 1, 10), TrpzRadioRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessStatsLastRate.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessStatsLastRate.setDescription('Last packet data rate.')
trpzClSessClientSessStatsLastRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 3, 1, 11), TrpzRssi()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessStatsLastRssi.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessStatsLastRssi.setDescription('RSSI (Received Signal Strength Indicator) for last packet, in decibels referred to 1 milliwatt (dBm). A higher value indicates a stronger signal.')
trpzClSessClientSessStatsLastSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientSessStatsLastSNR.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientSessStatsLastSNR.setDescription('Last packet data Signal to Noise Ratio.')
trpzClSessClientAddressTable = MibTable((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 5), )
if mibBuilder.loadTexts: trpzClSessClientAddressTable.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientAddressTable.setDescription("Client Address Table. This table contains the clients' Internet addresses. Each client may have one IPv4 address, one IPv6 link-local address and multiple IPv6 global addresses. Expansion of the Client Session Table.")
trpzClSessClientAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 5, 1), ).setIndexNames((0, "TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessMacAddress"), (0, "TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientAddressIndex"))
if mibBuilder.loadTexts: trpzClSessClientAddressEntry.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientAddressEntry.setDescription("An entry in the Client Address table. A client's MAC address together with an unsigned integer uniquely identify one of that client's Internet addresses.")
trpzClSessClientAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: trpzClSessClientAddressIndex.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientAddressIndex.setDescription("Last part of the composite index of the Client Address table. The client is identified by the first part of the composite index: 'trpzClSessClientSessMacAddress'. Index 1 corresponds to the IPv4 address of the client. Index 2 corresponds to the IPv6 link-local address of the client. Indexes 3-9 are reserved for future use. Indexes starting at 10 correspond to IPv6 global addresses of the client; the number of IPv6 addresses per client may vary.")
trpzClSessClientAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 5, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientAddressType.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientAddressType.setDescription("The address type of 'trpzClSessClientAddressValue'.")
trpzClSessClientAddressValue = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 5, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessClientAddressValue.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientAddressValue.setDescription("Client Internet address. The type of this address is specified in 'trpzClSessClientAddressType'.")
trpzClSessTotalSessions = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzClSessTotalSessions.setStatus('current')
if mibBuilder.loadTexts: trpzClSessTotalSessions.setDescription('Total number of sessions.')
trpzClientSessionConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 2))
trpzClientSessionCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 2, 1))
trpzClientSessionGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 2, 2))
trpzClientSessionCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 2, 1, 1)).setObjects(("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClientSessionCommonGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    trpzClientSessionCompliance = trpzClientSessionCompliance.setStatus('obsolete')
if mibBuilder.loadTexts: trpzClientSessionCompliance.setDescription('The compliance statement for devices that implement the Client Session MIB. This compliance statement was for releases 4.1 and 4.2 of AC (wireless switch) software. This compliance statement is replaced by trpzClientSessionComplianceRev2.')
trpzClientSessionComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 2, 1, 2)).setObjects(("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClientSessScalarsGroup"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClientSessClientSessionTableGroup"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClientSessRoamingHistoryTableGroup"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClientSessClientSessionStatisticsTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    trpzClientSessionComplianceRev2 = trpzClientSessionComplianceRev2.setStatus('obsolete')
if mibBuilder.loadTexts: trpzClientSessionComplianceRev2.setDescription('The compliance statement for devices that implement the Client Session MIB. This compliance statement was for releases 5.0 and 6.0 of AC (wireless switch) software. This compliance statement is replaced by trpzClientSessionComplianceRev3.')
trpzClientSessionComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 2, 1, 3)).setObjects(("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClientSessScalarsGroup"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClientSessClientSessionTableGroupRev2"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClientSessRoamingHistoryTableGroupRev2"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClientSessClientSessionStatisticsTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    trpzClientSessionComplianceRev3 = trpzClientSessionComplianceRev3.setStatus('obsolete')
if mibBuilder.loadTexts: trpzClientSessionComplianceRev3.setDescription('The compliance statement for devices that implement the Client Session MIB. This compliance statement is for releases 6.2 to 7.7 of AC (wireless switch) software. This compliance statement is replaced by trpzClientSessionComplianceRev4.')
trpzClientSessionComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 2, 1, 4)).setObjects(("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClientSessScalarsGroup"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClientSessClientSessionTableGroupRev3"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClientSessRoamingHistoryTableGroupRev2"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientAddressTableGroup"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClientSessClientSessionStatisticsTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    trpzClientSessionComplianceRev4 = trpzClientSessionComplianceRev4.setStatus('current')
if mibBuilder.loadTexts: trpzClientSessionComplianceRev4.setDescription('The compliance statement for devices that implement the Client Session MIB. This compliance statement is for releases 8.0 and greater of AC (wireless switch) software.')
trpzClientSessionCommonGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 2, 2, 1)).setObjects(("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessSessionId"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessUsername"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessIpAddress"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessEncryptionType"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessVlan"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessApSerialNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessRadioNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessAccessType"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessAuthMethod"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessAuthServer"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessPortOrNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessVlanTag"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessTimeStamp"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessSsid"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessState"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistApSerialNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistRadioNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistAccessType"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistApNumOrPort"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistIpAddress"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistTimeStamp"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsUniPktIn"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsUniOctetIn"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsUniPktOut"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsUniOctetOut"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsMultiPktIn"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsMultiOctetIn"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsEncErrPkt"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsEncErrOctet"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsLastRate"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsLastRssi"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsLastSNR"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    trpzClientSessionCommonGroup = trpzClientSessionCommonGroup.setStatus('obsolete')
if mibBuilder.loadTexts: trpzClientSessionCommonGroup.setDescription('Mandatory group of objects implemented to provide Client Session info in releases 4.1 and 4.2 of AC (wireless switch) software. Replaced by trpzClientSessClientSessionTableGroup, trpzClientSessRoamingHistoryTableGroup, trpzClientSessClientSessionStatisticsTableGroup.')
trpzClientSessScalarsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 2, 2, 2)).setObjects(("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessTotalSessions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    trpzClientSessScalarsGroup = trpzClientSessScalarsGroup.setStatus('current')
if mibBuilder.loadTexts: trpzClientSessScalarsGroup.setDescription('Group of scalar objects implemented to provide general Client info in releases 5.0 and greater.')
trpzClientSessClientSessionTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 2, 2, 3)).setObjects(("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessSessionId"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessUsername"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessIpAddress"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessEncryptionType"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessVlan"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessApSerialNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessRadioNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessAccessType"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessAuthServer"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessPortOrNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessVlanTag"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessTimeStamp"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessSsid"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessLoginType"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessDot1xAuthMethod"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessSessionState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    trpzClientSessClientSessionTableGroup = trpzClientSessClientSessionTableGroup.setStatus('obsolete')
if mibBuilder.loadTexts: trpzClientSessClientSessionTableGroup.setDescription('Group of columnar objects implemented to provide Client Session info in releases 5.0 and 6.0. Replaced by trpzClientSessClientSessionTableGroupRev2.')
trpzClientSessRoamingHistoryTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 2, 2, 4)).setObjects(("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistApSerialNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistRadioNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistAccessType"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistApNumOrPort"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistIpAddress"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistTimeStamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    trpzClientSessRoamingHistoryTableGroup = trpzClientSessRoamingHistoryTableGroup.setStatus('obsolete')
if mibBuilder.loadTexts: trpzClientSessRoamingHistoryTableGroup.setDescription('Group of columnar objects implemented to provide roaming history per Client Session in releases 5.0 and 6.0. Replaced by trpzClientSessRoamingHistoryTableGroupRev2.')
trpzClientSessClientSessionStatisticsTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 2, 2, 5)).setObjects(("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsUniPktIn"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsUniOctetIn"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsUniPktOut"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsUniOctetOut"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsMultiPktIn"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsMultiOctetIn"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsEncErrPkt"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsEncErrOctet"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsLastRate"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsLastRssi"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessStatsLastSNR"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    trpzClientSessClientSessionStatisticsTableGroup = trpzClientSessClientSessionStatisticsTableGroup.setStatus('current')
if mibBuilder.loadTexts: trpzClientSessClientSessionStatisticsTableGroup.setDescription('Group of columnar objects implemented to provide statistics per Client Session in releases 5.0 and greater.')
trpzClientSessClientSessionTableGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 2, 2, 6)).setObjects(("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessSessionId"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessUsername"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessIpAddress"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessEncryptionType"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessVlan"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessApSerialNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessRadioNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessAuthServer"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessVlanTag"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessTimeStamp"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessSsid"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessLoginType"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessDot1xAuthMethod"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessSessionState"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessAccessMode"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessApNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessPhysPortNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    trpzClientSessClientSessionTableGroupRev2 = trpzClientSessClientSessionTableGroupRev2.setStatus('obsolete')
if mibBuilder.loadTexts: trpzClientSessClientSessionTableGroupRev2.setDescription('Group of columnar objects implemented to provide Client Session info in releases 6.2 to 7.7.')
trpzClientSessRoamingHistoryTableGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 2, 2, 7)).setObjects(("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistApSerialNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistRadioNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistIpAddress"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistTimeStamp"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistAccessMode"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistApNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessRoamHistPhysPortNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    trpzClientSessRoamingHistoryTableGroupRev2 = trpzClientSessRoamingHistoryTableGroupRev2.setStatus('current')
if mibBuilder.loadTexts: trpzClientSessRoamingHistoryTableGroupRev2.setDescription('Group of columnar objects implemented to provide roaming history per Client Session in releases 6.2 and greater.')
trpzClSessClientAddressTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 2, 2, 8)).setObjects(("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientAddressType"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientAddressValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    trpzClSessClientAddressTableGroup = trpzClSessClientAddressTableGroup.setStatus('current')
if mibBuilder.loadTexts: trpzClSessClientAddressTableGroup.setDescription("Group of columnar objects implemented to provide a complete listing of the clients' Internet addresses in releases 8.0 and greater.")
trpzClientSessClientSessionTableGroupRev3 = ObjectGroup((1, 3, 6, 1, 4, 1, 14525, 4, 4, 1, 2, 2, 9)).setObjects(("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessSessionId"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessUsername"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessIpAddress"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessEncryptionType"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessVlan"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessApSerialNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessRadioNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessAuthServer"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessVlanTag"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessTimeStamp"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessSsid"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessLoginType"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessDot1xAuthMethod"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessSessionState"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessAccessMode"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessApNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessPhysPortNum"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessDeviceType"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessDeviceGroup"), ("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", "trpzClSessClientSessDeviceProfileName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    trpzClientSessClientSessionTableGroupRev3 = trpzClientSessClientSessionTableGroupRev3.setStatus('current')
if mibBuilder.loadTexts: trpzClientSessClientSessionTableGroupRev3.setDescription('Group of columnar objects implemented to provide Client Session info in releases 8.0 and greater.')
mibBuilder.exportSymbols("TRAPEZE-NETWORKS-CLIENT-SESSION-MIB", trpzClSessClientSessSessionState=trpzClSessClientSessSessionState, trpzClSessClientSessAuthServer=trpzClSessClientSessAuthServer, trpzClientSessionCommonGroup=trpzClientSessionCommonGroup, trpzClientSessionGroups=trpzClientSessionGroups, trpzClSessClientSessStatsLastSNR=trpzClSessClientSessStatsLastSNR, trpzClSessClientSessStatsMultiOctetIn=trpzClSessClientSessStatsMultiOctetIn, trpzClSessClientSessVlan=trpzClSessClientSessVlan, trpzClSessClientSessStatsUniOctetOut=trpzClSessClientSessStatsUniOctetOut, TrpzAuthMethod=TrpzAuthMethod, trpzClSessClientSessDot1xAuthMethod=trpzClSessClientSessDot1xAuthMethod, trpzClSessClientSessStatsUniOctetIn=trpzClSessClientSessStatsUniOctetIn, trpzClSessClientSessLoginType=trpzClSessClientSessLoginType, trpzClientSessionComplianceRev3=trpzClientSessionComplianceRev3, trpzClSessClientSessPhysPortNum=trpzClSessClientSessPhysPortNum, trpzClSessClientSessMacAddress=trpzClSessClientSessMacAddress, trpzClSessClientSessSessionId=trpzClSessClientSessSessionId, trpzClSessClientSessStatsEncErrPkt=trpzClSessClientSessStatsEncErrPkt, trpzClSessRoamHistMacAddress=trpzClSessRoamHistMacAddress, trpzClientSessionCompliance=trpzClientSessionCompliance, trpzClSessClientSessRadioNum=trpzClSessClientSessRadioNum, trpzClSessClientSessVlanTag=trpzClSessClientSessVlanTag, trpzClSessClientSessStatsMacAddress=trpzClSessClientSessStatsMacAddress, PYSNMP_MODULE_ID=trpzClientSessionMib, trpzClSessClientSessStatsUniPktIn=trpzClSessClientSessStatsUniPktIn, trpzClSessRoamHistTimeStamp=trpzClSessRoamHistTimeStamp, trpzClSessClientSessStatsLastRate=trpzClSessClientSessStatsLastRate, trpzClSessRoamingHistoryTable=trpzClSessRoamingHistoryTable, trpzClSessClientAddressValue=trpzClSessClientAddressValue, trpzClientSessClientSessionTableGroup=trpzClientSessClientSessionTableGroup, trpzClSessClientSessionStatisticsEntry=trpzClSessClientSessionStatisticsEntry, trpzClSessClientAddressTable=trpzClSessClientAddressTable, trpzClientSessionCompliances=trpzClientSessionCompliances, trpzClientSessionMib=trpzClientSessionMib, trpzClSessClientSessStatsEncErrOctet=trpzClSessClientSessStatsEncErrOctet, trpzClSessRoamHistRadioNum=trpzClSessRoamHistRadioNum, trpzClSessClientSessState=trpzClSessClientSessState, trpzClSessRoamHistIndex=trpzClSessRoamHistIndex, trpzClientSessionComplianceRev2=trpzClientSessionComplianceRev2, trpzClSessClientSessionEntry=trpzClSessClientSessionEntry, trpzClientSessionConformance=trpzClientSessionConformance, trpzClSessClientSessSsid=trpzClSessClientSessSsid, trpzClSessClientSessionStatisticsTable=trpzClSessClientSessionStatisticsTable, trpzClientSessClientSessionTableGroupRev3=trpzClientSessClientSessionTableGroupRev3, trpzClSessClientSessAccessType=trpzClSessClientSessAccessType, trpzClSessClientSessApNum=trpzClSessClientSessApNum, trpzClSessRoamHistIpAddress=trpzClSessRoamHistIpAddress, trpzClSessRoamingHistoryEntry=trpzClSessRoamingHistoryEntry, trpzClSessClientSessStatsLastRssi=trpzClSessClientSessStatsLastRssi, trpzClientSessClientSessionStatisticsTableGroup=trpzClientSessClientSessionStatisticsTableGroup, trpzClientSessScalarsGroup=trpzClientSessScalarsGroup, trpzClSessClientSessionTable=trpzClSessClientSessionTable, trpzClientSessionObjects=trpzClientSessionObjects, trpzClSessRoamHistApNumOrPort=trpzClSessRoamHistApNumOrPort, trpzClSessClientAddressType=trpzClSessClientAddressType, trpzClientSessionComplianceRev4=trpzClientSessionComplianceRev4, trpzClSessClientSessDeviceProfileName=trpzClSessClientSessDeviceProfileName, trpzClSessClientSessDeviceGroup=trpzClSessClientSessDeviceGroup, trpzClSessClientSessUsername=trpzClSessClientSessUsername, trpzClSessClientSessPortOrNum=trpzClSessClientSessPortOrNum, trpzClSessClientAddressIndex=trpzClSessClientAddressIndex, trpzClSessRoamHistApSerialNum=trpzClSessRoamHistApSerialNum, trpzClientSessRoamingHistoryTableGroupRev2=trpzClientSessRoamingHistoryTableGroupRev2, trpzClientSessionDataObjects=trpzClientSessionDataObjects, trpzClientSessClientSessionTableGroupRev2=trpzClientSessClientSessionTableGroupRev2, trpzClSessClientSessAccessMode=trpzClSessClientSessAccessMode, trpzClSessClientSessEncryptionType=trpzClSessClientSessEncryptionType, trpzClSessRoamHistAccessMode=trpzClSessRoamHistAccessMode, TrpzEncryptionType=TrpzEncryptionType, trpzClSessTotalSessions=trpzClSessTotalSessions, TrpzSessState=TrpzSessState, trpzClSessRoamHistApNum=trpzClSessRoamHistApNum, trpzClSessClientSessApSerialNum=trpzClSessClientSessApSerialNum, trpzClSessClientAddressTableGroup=trpzClSessClientAddressTableGroup, trpzClSessRoamHistPhysPortNum=trpzClSessRoamHistPhysPortNum, trpzClSessClientSessIpAddress=trpzClSessClientSessIpAddress, trpzClSessClientSessAuthMethod=trpzClSessClientSessAuthMethod, trpzClSessClientSessStatsMultiPktIn=trpzClSessClientSessStatsMultiPktIn, trpzClSessClientSessStatsUniPktOut=trpzClSessClientSessStatsUniPktOut, trpzClSessRoamHistAccessType=trpzClSessRoamHistAccessType, trpzClSessClientSessDeviceType=trpzClSessClientSessDeviceType, trpzClientSessRoamingHistoryTableGroup=trpzClientSessRoamingHistoryTableGroup, trpzClSessClientSessTimeStamp=trpzClSessClientSessTimeStamp, trpzClSessClientAddressEntry=trpzClSessClientAddressEntry)
