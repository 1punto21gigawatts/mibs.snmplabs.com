#
# PySNMP MIB module CISCO-DMN-DSG-CI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DMN-DSG-CI-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:54:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
ciscoDSGUtilities, = mibBuilder.importSymbols("CISCO-DMN-DSG-ROOT-MIB", "ciscoDSGUtilities")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ObjectIdentity, Unsigned32, NotificationType, iso, Bits, MibIdentifier, Counter64, Integer32, IpAddress, Counter32, TimeTicks, ModuleIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Unsigned32", "NotificationType", "iso", "Bits", "MibIdentifier", "Counter64", "Integer32", "IpAddress", "Counter32", "TimeTicks", "ModuleIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
ciscoDSGCI = ModuleIdentity((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12))
ciscoDSGCI.setRevisions(('2012-03-20 08:00', '2010-10-13 08:00', '2010-08-30 09:00', '2010-04-12 09:00', '2010-03-22 05:00', '2010-02-12 12:00', '2009-12-07 12:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoDSGCI.setRevisionsDescriptions(('V01.00.06 2012-03-20 Updated for D9854 R4 Release.', 'V01.00.05 2010-10-13 Updated for migrating D985X/D9865 to generic logic.', 'V01.00.04 2010-08-30 Updated for adherence to SNMPv2 format.', 'V01.00.03 2010-04-12 New MIB objects are added in ciCompStatusTable and ciSystemIDTable.', 'V01.00.02 2010-03-22 The Syntax of Unsigned32 MIB objects whose range is within the range of Integer32, is updated to Integer32.', 'V01.00.01 2010-02-12 The Syntax of read-only objects is updated to DisplayString.', 'V01.00.00 2009-12-07 Initial Version.',))
if mibBuilder.loadTexts: ciscoDSGCI.setLastUpdated('201203200800Z')
if mibBuilder.loadTexts: ciscoDSGCI.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoDSGCI.setContactInfo('Cisco Systems, Inc. Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553 NETS E-mail: cs-ipsla@cisco.com')
if mibBuilder.loadTexts: ciscoDSGCI.setDescription('Cisco DSG Common Interface MIB.')
ciTable = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2))
ciConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 1), )
if mibBuilder.loadTexts: ciConfigTable.setStatus('current')
if mibBuilder.loadTexts: ciConfigTable.setDescription('CI Config Table.')
ciConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 1, 1), ).setIndexNames((0, "CISCO-DMN-DSG-CI-MIB", "ciConfigInstance"))
if mibBuilder.loadTexts: ciConfigEntry.setStatus('current')
if mibBuilder.loadTexts: ciConfigEntry.setDescription('Entry for CI Config Table.')
ciConfigInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: ciConfigInstance.setStatus('current')
if mibBuilder.loadTexts: ciConfigInstance.setDescription('Instance for CiConfig Table.')
ciConfigQuery = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciConfigQuery.setStatus('current')
if mibBuilder.loadTexts: ciConfigQuery.setDescription('Control of CAM functionality.')
ciConfigAutoReset = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciConfigAutoReset.setStatus('current')
if mibBuilder.loadTexts: ciConfigAutoReset.setDescription('Permit Auto Reset of CAM.')
ciConfigListMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("addDelete", 1), ("updateAll", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciConfigListMgmt.setStatus('current')
if mibBuilder.loadTexts: ciConfigListMgmt.setDescription('CI List Management Procedure.')
ciConfigOrgNetIDUse = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciConfigOrgNetIDUse.setStatus('current')
if mibBuilder.loadTexts: ciConfigOrgNetIDUse.setDescription('Enable/Disable the TS/ONID check.')
ciConfigTransportId = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciConfigTransportId.setStatus('current')
if mibBuilder.loadTexts: ciConfigTransportId.setDescription('Transport Identifier.')
ciConfigOrgNetID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciConfigOrgNetID.setStatus('current')
if mibBuilder.loadTexts: ciConfigOrgNetID.setDescription('Original Network ID.')
ciConfigTsHandling = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("entire", 1), ("partial", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciConfigTsHandling.setStatus('current')
if mibBuilder.loadTexts: ciConfigTsHandling.setDescription('Select whether to use the CAM to decrypt the entire transport stream, or just the PIDs being used by the active services.')
ciProgramDecrTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 2), )
if mibBuilder.loadTexts: ciProgramDecrTable.setStatus('current')
if mibBuilder.loadTexts: ciProgramDecrTable.setDescription('CI program Decrypt Table.')
ciProgramDecrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 2, 1), ).setIndexNames((0, "CISCO-DMN-DSG-CI-MIB", "ciProgramDecrPEID"))
if mibBuilder.loadTexts: ciProgramDecrEntry.setStatus('current')
if mibBuilder.loadTexts: ciProgramDecrEntry.setDescription('Entry for CI program Decrypt Table.')
ciProgramDecrPEID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: ciProgramDecrPEID.setStatus('current')
if mibBuilder.loadTexts: ciProgramDecrPEID.setDescription('Decrypt key.')
ciProgramDecrDecrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("on", 2), ("comp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciProgramDecrDecrypt.setStatus('current')
if mibBuilder.loadTexts: ciProgramDecrDecrypt.setDescription('Decrypt mode.')
ciProgramDecrCISlot = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("top", 1), ("bottom", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciProgramDecrCISlot.setStatus('current')
if mibBuilder.loadTexts: ciProgramDecrCISlot.setDescription('Decrypt CI slot.')
ciCompConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 3), )
if mibBuilder.loadTexts: ciCompConfigTable.setStatus('current')
if mibBuilder.loadTexts: ciCompConfigTable.setDescription('CI Component config Table.')
ciCompConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 3, 1), ).setIndexNames((0, "CISCO-DMN-DSG-CI-MIB", "ciCompConfigID"))
if mibBuilder.loadTexts: ciCompConfigEntry.setStatus('current')
if mibBuilder.loadTexts: ciCompConfigEntry.setDescription('Entry for CI Component config Table.')
ciCompConfigID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: ciCompConfigID.setStatus('current')
if mibBuilder.loadTexts: ciCompConfigID.setDescription('CI Slot Index.')
ciCompConfigPEID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciCompConfigPEID.setStatus('current')
if mibBuilder.loadTexts: ciCompConfigPEID.setDescription('Program Entry ID.')
ciCompConfigMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pid", 1), ("stream", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciCompConfigMode.setStatus('current')
if mibBuilder.loadTexts: ciCompConfigMode.setDescription('Stream component Config Mode.')
ciCompConfigPID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciCompConfigPID.setStatus('current')
if mibBuilder.loadTexts: ciCompConfigPID.setDescription('PID value: only used if CompConfigMode is PID.')
ciCompConfigStreamCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 8, 12))).clone(namedValues=NamedValues(("vid", 2), ("aud", 3), ("subt", 4), ("ttx", 8), ("user", 12)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciCompConfigStreamCategory.setStatus('current')
if mibBuilder.loadTexts: ciCompConfigStreamCategory.setDescription('Stream Category: only used if CompConfigMode is STREAM.')
ciCompConfigStreamTypeVal = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciCompConfigStreamTypeVal.setStatus('current')
if mibBuilder.loadTexts: ciCompConfigStreamTypeVal.setDescription('Stream Type value: only used if CompConfigMode is STREAM, and StreamCategory is UNKN.')
ciCompConfigStreamInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciCompConfigStreamInstance.setStatus('current')
if mibBuilder.loadTexts: ciCompConfigStreamInstance.setDescription('Stream Instance: only used if CompConfigMode is STREAM, used to differentiate between multiple entries for the same stream type.')
ciCompConfigRowCmdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 3, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciCompConfigRowCmdStatus.setStatus('current')
if mibBuilder.loadTexts: ciCompConfigRowCmdStatus.setDescription('To be used for creating and deleting rows in this table.')
ciCompStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 4), )
if mibBuilder.loadTexts: ciCompStatusTable.setStatus('current')
if mibBuilder.loadTexts: ciCompStatusTable.setDescription('CI Component status table.')
ciCompStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 4, 1), ).setIndexNames((0, "CISCO-DMN-DSG-CI-MIB", "ciStatusSlot"))
if mibBuilder.loadTexts: ciCompStatusEntry.setStatus('current')
if mibBuilder.loadTexts: ciCompStatusEntry.setDescription('Entry for CI Component status table.')
ciStatusSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("top", 1), ("bottom", 2))))
if mibBuilder.loadTexts: ciStatusSlot.setStatus('current')
if mibBuilder.loadTexts: ciStatusSlot.setDescription('CI Status key.')
ciStatusSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciStatusSysName.setStatus('current')
if mibBuilder.loadTexts: ciStatusSysName.setDescription('System Name.')
ciStatusMFGID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciStatusMFGID.setStatus('current')
if mibBuilder.loadTexts: ciStatusMFGID.setDescription('Application Manufacture ID.The range is from 0 to 4294967295.')
ciStatusMFGCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciStatusMFGCode.setStatus('current')
if mibBuilder.loadTexts: ciStatusMFGCode.setDescription('Manufacture Code.The range is from 0 to 4294967295.')
ciStatusSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciStatusSerialNum.setStatus('current')
if mibBuilder.loadTexts: ciStatusSerialNum.setDescription('Serial Number.')
ciStatusHWVer = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciStatusHWVer.setStatus('current')
if mibBuilder.loadTexts: ciStatusHWVer.setDescription('Hardware Version.')
ciStatusAppVer = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciStatusAppVer.setStatus('current')
if mibBuilder.loadTexts: ciStatusAppVer.setDescription('Application Version.')
ciStatusCompany = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 4, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciStatusCompany.setStatus('current')
if mibBuilder.loadTexts: ciStatusCompany.setDescription('Maufacturer name.')
ciStatusProdname = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 4, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciStatusProdname.setStatus('current')
if mibBuilder.loadTexts: ciStatusProdname.setDescription('Product name.')
ciStatusCamStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notReady", 1), ("ready", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciStatusCamStatus.setStatus('current')
if mibBuilder.loadTexts: ciStatusCamStatus.setDescription('CAM Status.')
ciSystemIDTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 5), )
if mibBuilder.loadTexts: ciSystemIDTable.setStatus('current')
if mibBuilder.loadTexts: ciSystemIDTable.setDescription('CI System ID Table.')
ciSystemIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 5, 1), ).setIndexNames((0, "CISCO-DMN-DSG-CI-MIB", "ciSystemIDSlot"), (0, "CISCO-DMN-DSG-CI-MIB", "ciSystemIDIndex"))
if mibBuilder.loadTexts: ciSystemIDEntry.setStatus('current')
if mibBuilder.loadTexts: ciSystemIDEntry.setDescription('Entry for CI System ID Table.')
ciSystemIDSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("top", 1), ("bottom", 2))))
if mibBuilder.loadTexts: ciSystemIDSlot.setStatus('current')
if mibBuilder.loadTexts: ciSystemIDSlot.setDescription('CAM Slot ID.')
ciSystemIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: ciSystemIDIndex.setStatus('current')
if mibBuilder.loadTexts: ciSystemIDIndex.setDescription('System ID index.')
ciSystemIDName = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciSystemIDName.setStatus('current')
if mibBuilder.loadTexts: ciSystemIDName.setDescription('CA System Name.')
ciSystemID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciSystemID.setStatus('current')
if mibBuilder.loadTexts: ciSystemID.setDescription('CA System ID.The range is from 0 to 4294967295.')
ciSystemSysNameID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 12, 2, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 37))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciSystemSysNameID.setStatus('current')
if mibBuilder.loadTexts: ciSystemSysNameID.setDescription('CA System Name with ID.')
mibBuilder.exportSymbols("CISCO-DMN-DSG-CI-MIB", ciConfigOrgNetIDUse=ciConfigOrgNetIDUse, ciSystemID=ciSystemID, ciCompConfigTable=ciCompConfigTable, ciConfigQuery=ciConfigQuery, ciConfigInstance=ciConfigInstance, ciProgramDecrDecrypt=ciProgramDecrDecrypt, ciCompStatusEntry=ciCompStatusEntry, ciCompConfigID=ciCompConfigID, ciSystemIDSlot=ciSystemIDSlot, ciProgramDecrCISlot=ciProgramDecrCISlot, ciProgramDecrTable=ciProgramDecrTable, ciSystemIDName=ciSystemIDName, ciCompConfigStreamCategory=ciCompConfigStreamCategory, ciProgramDecrPEID=ciProgramDecrPEID, PYSNMP_MODULE_ID=ciscoDSGCI, ciCompConfigRowCmdStatus=ciCompConfigRowCmdStatus, ciCompConfigStreamTypeVal=ciCompConfigStreamTypeVal, ciConfigEntry=ciConfigEntry, ciConfigTsHandling=ciConfigTsHandling, ciConfigAutoReset=ciConfigAutoReset, ciStatusCamStatus=ciStatusCamStatus, ciConfigTable=ciConfigTable, ciStatusCompany=ciStatusCompany, ciCompConfigEntry=ciCompConfigEntry, ciSystemSysNameID=ciSystemSysNameID, ciStatusAppVer=ciStatusAppVer, ciscoDSGCI=ciscoDSGCI, ciStatusSysName=ciStatusSysName, ciStatusSlot=ciStatusSlot, ciSystemIDTable=ciSystemIDTable, ciStatusMFGCode=ciStatusMFGCode, ciTable=ciTable, ciCompConfigMode=ciCompConfigMode, ciCompConfigPID=ciCompConfigPID, ciStatusHWVer=ciStatusHWVer, ciProgramDecrEntry=ciProgramDecrEntry, ciConfigTransportId=ciConfigTransportId, ciCompConfigStreamInstance=ciCompConfigStreamInstance, ciCompStatusTable=ciCompStatusTable, ciStatusMFGID=ciStatusMFGID, ciStatusProdname=ciStatusProdname, ciCompConfigPEID=ciCompConfigPEID, ciSystemIDEntry=ciSystemIDEntry, ciSystemIDIndex=ciSystemIDIndex, ciStatusSerialNum=ciStatusSerialNum, ciConfigListMgmt=ciConfigListMgmt, ciConfigOrgNetID=ciConfigOrgNetID)
