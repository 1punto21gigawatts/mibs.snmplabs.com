#
# PySNMP MIB module IEEE8023-LAG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IEEE8023-LAG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:04:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
iso, TimeTicks, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, IpAddress, Counter32, Unsigned32, Counter64, ObjectIdentity, ModuleIdentity, MibIdentifier, NotificationType, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "TimeTicks", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "IpAddress", "Counter32", "Unsigned32", "Counter64", "ObjectIdentity", "ModuleIdentity", "MibIdentifier", "NotificationType", "Integer32")
TextualConvention, TruthValue, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString", "MacAddress")
lagMIB = ModuleIdentity((1, 2, 840, 10006, 300, 43))
lagMIB.setRevisions(('2014-12-18 00:00', '2012-01-16 00:00', '2007-06-29 00:00', '2000-06-27 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: lagMIB.setRevisionsDescriptions(('The Link Aggregation module for managing IEEE 802.1AX.', 'Updated for IEEE 802.1AXbk', 'References updated 04 Jun 2007 for IEEE 802.1AX', 'Original publication IEEE 802.3ad',))
if mibBuilder.loadTexts: lagMIB.setLastUpdated('201412180000Z')
if mibBuilder.loadTexts: lagMIB.setOrganization('IEEE 802.1 Working Group')
if mibBuilder.loadTexts: lagMIB.setContactInfo(' WG-URL: http://grouper.ieee.org/groups/802/1/index.html WG-EMail: stds-802-1@ieee.org Contact: IEEE 802.1 Working Group Chair Postal: C/O IEEE 802.1 Working Group IEEE Standards Association 445 Hoes Lane P.O. Box 1331 Piscataway NJ 08855-1331 USA E-mail: STDS-802-1-L@LISTSERV.IEEE.ORG')
if mibBuilder.loadTexts: lagMIB.setDescription('The Link Aggregation module for managing IEEE 802.1AX-REV.')
class LacpKey(TextualConvention, Integer32):
    description = 'The Actor or Partner Key value.'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

class LacpState(TextualConvention, Bits):
    reference = '7.3.2.1.20'
    description = 'The Actor and Partner State values from the LACPDU.'
    status = 'current'
    namedValues = NamedValues(("lacpActivity", 0), ("lacpTimeout", 1), ("aggregation", 2), ("synchronization", 3), ("collecting", 4), ("distributing", 5), ("defaulted", 6), ("expired", 7))

class DrcpState(TextualConvention, Bits):
    description = 'Administrative values of DRCP state.'
    status = 'current'
    namedValues = NamedValues(("homeGateway", 0), ("neighborGateway", 1), ("otherGateway", 2), ("ippActivity", 3), ("timeout", 4), ("gatewaySync", 5), ("portSync", 6), ("expired", 7))

class ChurnState(TextualConvention, Integer32):
    description = 'The state of the Churn Detection machine.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("noChurn", 1), ("churn", 2), ("churnMonitor", 3))

class AggState(TextualConvention, Integer32):
    description = 'The state of the object entry.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("up", 1), ("down", 2))

class DrniConvAdminGatewayList(TextualConvention, OctetString):
    description = 'The three elements of the octet string represent the three portal system numbers in order of priority with highest priority first.'
    status = 'current'
    displayHint = '1x,'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(3, 3)
    fixedLength = 3

class PortalLinkList(TextualConvention, OctetString):
    description = 'Each four octets of the octet string represent an ifIndex for an Intra-Port Link. The first ifIndex is to Portal System 1, the second ifIndex is to Portal System 2 and the third ifIndex is to portal System 3. The ifIndex of the current portal system is set to zero.'
    status = 'current'
    displayHint = '4d,'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(12, 12)
    fixedLength = 12

class ServiceIdList(TextualConvention, OctetString):
    description = 'A list which contains, in general, a set of Service IDs (8.2.2). If the Service IDs are representing VIDs, only a single VID is applicable, while in the case that Service IDs are representing I-SIDs, more than one I-SIDs are possible. Each four octets represent a Service ID which may either be I-SID or VID. An empty set is represented as an octet string of size zero.'
    status = 'current'
    displayHint = '4d,'

lagMIBNotifications = MibIdentifier((1, 2, 840, 10006, 300, 43, 0))
lagMIBObjects = MibIdentifier((1, 2, 840, 10006, 300, 43, 1))
dot3adAggConformance = MibIdentifier((1, 2, 840, 10006, 300, 43, 2))
dot3adAgg = MibIdentifier((1, 2, 840, 10006, 300, 43, 1, 1))
dot3adAggPort = MibIdentifier((1, 2, 840, 10006, 300, 43, 1, 2))
dot3adDrni = MibIdentifier((1, 2, 840, 10006, 300, 43, 1, 4))
dot3adIPP = MibIdentifier((1, 2, 840, 10006, 300, 43, 1, 5))
dot3adTablesLastChanged = MibScalar((1, 2, 840, 10006, 300, 43, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adTablesLastChanged.setStatus('current')
if mibBuilder.loadTexts: dot3adTablesLastChanged.setDescription('This object indicates the time of the most recent change to the dot3adAggTable, dot3adAggPortTable, dot3adDrniTable and dot3adIPPAttributeTable.')
dot3adAggTable = MibTable((1, 2, 840, 10006, 300, 43, 1, 1, 1), )
if mibBuilder.loadTexts: dot3adAggTable.setReference('7.3.1')
if mibBuilder.loadTexts: dot3adAggTable.setStatus('current')
if mibBuilder.loadTexts: dot3adAggTable.setDescription('A table that contains information about every Aggregator that is associated with this System.')
dot3adAggEntry = MibTableRow((1, 2, 840, 10006, 300, 43, 1, 1, 1, 1), ).setIndexNames((0, "IEEE8023-LAG-MIB", "dot3adAggIndex"))
if mibBuilder.loadTexts: dot3adAggEntry.setStatus('current')
if mibBuilder.loadTexts: dot3adAggEntry.setDescription('A list of the Aggregator parameters. This is indexed by the ifIndex of the Aggregator.')
dot3adAggIndex = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: dot3adAggIndex.setReference('7.3.1.1.1')
if mibBuilder.loadTexts: dot3adAggIndex.setStatus('current')
if mibBuilder.loadTexts: dot3adAggIndex.setDescription('The unique identifier allocated to this Aggregator by the local System. This attribute identifies an Aggregator instance among the subordinate managed objects of the containing object. This value is read-only. NOTE-The aAggID is represented in the SMIv2 MIB as an ifIndex-see D.4.1.')
dot3adAggMACAddress = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggMACAddress.setReference('7.3.1.1.9')
if mibBuilder.loadTexts: dot3adAggMACAddress.setStatus('current')
if mibBuilder.loadTexts: dot3adAggMACAddress.setDescription('A 6-octet read-only value carrying the individual MAC address assigned to the Aggregator.')
dot3adAggActorSystemPriority = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggActorSystemPriority.setReference('7.3.1.1.5')
if mibBuilder.loadTexts: dot3adAggActorSystemPriority.setStatus('current')
if mibBuilder.loadTexts: dot3adAggActorSystemPriority.setDescription("A 2-octet read-write value indicating the priority value associated with the Actor's System ID.")
dot3adAggActorSystemID = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 1, 1, 4), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggActorSystemID.setReference('7.3.1.1.4')
if mibBuilder.loadTexts: dot3adAggActorSystemID.setStatus('current')
if mibBuilder.loadTexts: dot3adAggActorSystemID.setDescription("A 6-octet read-write MAC address value used as a unique identifier for the System that contains this Aggregator. NOTE-From the perspective of the Link Aggregation mechanisms described in Clause 6, only a single combination of Actor's System ID and System Priority are considered, and no distinction is made between the values of these parameters for an Aggregator and the port(s) that are associated with it; i.e., the protocol is described in terms of the operation of aggregation within a single System. However, the managed objects provided for the Aggregator and the port both allow management of these parameters. The result of this is to permit a single piece of equipment to be configured by management to contain more than one System from the point of view of the operation of Link Aggregation. This may be of particular use in the configuration of equipment that has limited aggregation capability (see 6.7).")
dot3adAggAggregateOrIndividual = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggAggregateOrIndividual.setReference('7.3.1.1.6')
if mibBuilder.loadTexts: dot3adAggAggregateOrIndividual.setStatus('current')
if mibBuilder.loadTexts: dot3adAggAggregateOrIndividual.setDescription("A read-only Boolean value indicating whether the Aggregator represents an Aggregate ('TRUE') or an Individual link ('FALSE').")
dot3adAggActorAdminKey = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 1, 1, 6), LacpKey()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggActorAdminKey.setReference('7.3.1.1.7')
if mibBuilder.loadTexts: dot3adAggActorAdminKey.setStatus('current')
if mibBuilder.loadTexts: dot3adAggActorAdminKey.setDescription('The current administrative value of the Key for the Aggregator. The administrative Key value may differ from the operational Key value for the reasons discussed in 6.7.2. This is a 16-bit read-write value. The meaning of particular Key values is of local significance. For an Aggregator that is associated with a Portal, the aAggActorAdminKey has to be different for each Portal System. Specifically the two most significant bits are set to aDrniPortalSystemNumber (7.4.1.1.7). The lower 14 bits may be any value, have to be the same in each Portal System within the same Portal, and have a default of zero.')
dot3adAggActorOperKey = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 1, 1, 7), LacpKey()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggActorOperKey.setReference('7.3.1.1.8')
if mibBuilder.loadTexts: dot3adAggActorOperKey.setStatus('current')
if mibBuilder.loadTexts: dot3adAggActorOperKey.setDescription('The current operational value of the Key for the Aggregator. The administrative Key value may differ from the operational Key value for the reasons discussed in 6.7.2. This is a 16-bit read-only value. The meaning of particular Key values is of local significance.')
dot3adAggPartnerSystemID = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 1, 1, 8), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPartnerSystemID.setReference('7.3.1.1.10')
if mibBuilder.loadTexts: dot3adAggPartnerSystemID.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPartnerSystemID.setDescription('A 6-octet read-only MAC address value consisting of the unique identifier for the current protocol Partner of this Aggregator. A value of zero indicates that there is no known Partner. If the aggregation is manually configured, this System ID value will be a value assigned by the local System.')
dot3adAggPartnerSystemPriority = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPartnerSystemPriority.setReference('7.3.1.1.11')
if mibBuilder.loadTexts: dot3adAggPartnerSystemPriority.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPartnerSystemPriority.setDescription("A 2-octet read-only value that indicates the priority value associated with the Partner's System ID. If the aggregation is manually configured, this System Priority value will be a value assigned by the local System.")
dot3adAggPartnerOperKey = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 1, 1, 10), LacpKey()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPartnerOperKey.setReference('7.3.1.1.12')
if mibBuilder.loadTexts: dot3adAggPartnerOperKey.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPartnerOperKey.setDescription("The current operational value of the Key for the Aggregator's current protocol Partner. This is a 16-bit read-only value. If the aggregation is manually configured, this Key value will be a value assigned by the local System.")
dot3adAggCollectorMaxDelay = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggCollectorMaxDelay.setReference('7.3.1.1.32')
if mibBuilder.loadTexts: dot3adAggCollectorMaxDelay.setStatus('current')
if mibBuilder.loadTexts: dot3adAggCollectorMaxDelay.setDescription('The value of this 16-bit read-write attribute defines the maximum delay, in tens of microseconds, that may be imposed by the Frame Collector between receiving a frame from an Aggregator Parser, and either delivering the frame to its Aggregator Client or discarding the frame (see 6.2.3.1.1).')
dot3adAggPortListTable = MibTable((1, 2, 840, 10006, 300, 43, 1, 1, 2), )
if mibBuilder.loadTexts: dot3adAggPortListTable.setReference('7.3.1.1.30')
if mibBuilder.loadTexts: dot3adAggPortListTable.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortListTable.setDescription('A table that contains a list of all the ports associated with each Aggregator.')
dot3adAggPortListEntry = MibTableRow((1, 2, 840, 10006, 300, 43, 1, 1, 2, 1), ).setIndexNames((0, "IEEE8023-LAG-MIB", "dot3adAggIndex"))
if mibBuilder.loadTexts: dot3adAggPortListEntry.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortListEntry.setDescription('A list of the ports associated with a given Aggregator. This is indexed by the ifIndex of the Aggregator.')
dot3adAggPortListPorts = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 2, 1, 1), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortListPorts.setReference('7.3.1.1.30')
if mibBuilder.loadTexts: dot3adAggPortListPorts.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortListPorts.setDescription('The complete set of ports currently associated with this Aggregator. Each bit set in this list represents an Actor Port member of this Link Aggregation.')
dot3adAggXTable = MibTable((1, 2, 840, 10006, 300, 43, 1, 1, 3), )
if mibBuilder.loadTexts: dot3adAggXTable.setReference('7.3.1.1')
if mibBuilder.loadTexts: dot3adAggXTable.setStatus('current')
if mibBuilder.loadTexts: dot3adAggXTable.setDescription('A table that extends dot3adAggTable.')
dot3adAggXEntry = MibTableRow((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1), )
dot3adAggEntry.registerAugmentions(("IEEE8023-LAG-MIB", "dot3adAggXEntry"))
dot3adAggXEntry.setIndexNames(*dot3adAggEntry.getIndexNames())
if mibBuilder.loadTexts: dot3adAggXEntry.setStatus('current')
if mibBuilder.loadTexts: dot3adAggXEntry.setDescription('A list of extension parameters for the Aggregator Configuration Table')
dot3adAggDescription = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggDescription.setReference('7.3.1.1.2')
if mibBuilder.loadTexts: dot3adAggDescription.setStatus('current')
if mibBuilder.loadTexts: dot3adAggDescription.setDescription("A human-readable text string containing information about the Aggregator. This string could include information about the distribution algorithm in use on this Aggregator; for example, 'Aggregator 1, Dist Alg=Dest MAC address.' This string is read-only. The contents are vendor specific.")
dot3adAggName = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggName.setReference('7.3.1.1.3')
if mibBuilder.loadTexts: dot3adAggName.setStatus('current')
if mibBuilder.loadTexts: dot3adAggName.setDescription('A human-readable text string containing a locally significant name for the Aggregator. This string is read-write.')
dot3adAggAdminState = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 3), AggState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggAdminState.setReference('7.3.1.1.13')
if mibBuilder.loadTexts: dot3adAggAdminState.setStatus('current')
if mibBuilder.loadTexts: dot3adAggAdminState.setDescription("This read-write value defines the administrative state of the Aggregator. A value of 'up' indicates that the operational state of the Aggregator (aAggOperState) is permitted to be either up or down. A value of 'down' forces the operational state of the Aggregator to be down. Changes to the administrative state affect the operational state of the Aggregator only, not the operational state of the Aggregation Ports that are attached to the Aggregator. A GET operation returns the current administrative state. A SET operation changes the administrative state to a new value.")
dot3adAggOperState = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 4), AggState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggOperState.setReference('7.3.1.1.14')
if mibBuilder.loadTexts: dot3adAggOperState.setStatus('current')
if mibBuilder.loadTexts: dot3adAggOperState.setDescription("This read-only value defines the operational state of the Aggregator. An operational state of 'up' indicates that the Aggregator is available for use by the Aggregator Client; a value of 'down' indicates that the Aggregator is not available for use by the Aggregator Client.")
dot3adAggTimeOfLastOperChange = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggTimeOfLastOperChange.setReference('7.3.1.1.15')
if mibBuilder.loadTexts: dot3adAggTimeOfLastOperChange.setStatus('current')
if mibBuilder.loadTexts: dot3adAggTimeOfLastOperChange.setDescription('The time at which the interface entered its current operational state, in terms of centiseconds since the system was last reset. If the current state was entered prior to the last reinitialization of the local network management subsystem, then this object contains a value of zero. The ifLastChange object in the Interfaces MIB defined in IETF RFC 2863 is a suitable object for supplying a value for aAggTimeOfLastOperChange. This value is read-only. Note - aAggTimeOfLastOperChange was defined in terms of the aTimeSinceSystemReset variable of IEEE Std 802.3-2008, F.2.1, in earlier versions of this standard. aTimeSinceSystemReset and ifLastChange have the same meaning.')
dot3adAggDataRate = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggDataRate.setReference('7.3.1.1.16')
if mibBuilder.loadTexts: dot3adAggDataRate.setStatus('current')
if mibBuilder.loadTexts: dot3adAggDataRate.setDescription('The current data rate, in bits per second, of the aggregate link. The value is calculated as the sum of the data rate of each link in the aggregation. This attribute is read-only.')
dot3adAggOctetsTxOK = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 7), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggOctetsTxOK.setReference('7.3.1.1.17')
if mibBuilder.loadTexts: dot3adAggOctetsTxOK.setStatus('current')
if mibBuilder.loadTexts: dot3adAggOctetsTxOK.setDescription('A count of the data and padding octets transmitted by this Aggregator on all Aggregation Ports that are (or have been) members of the aggregation. The count does not include octets transmitted by the Aggregator in frames that carry LACPDUs or Marker PDUs (7.3.3.1.7, 7.3.3.1.8, 7.3.3.1.9). However, it includes frames discarded by the Frame Distribution function of the Aggregator (7.3.1.1.25). This value is read-only.')
dot3adAggOctetsRxOK = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 8), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggOctetsRxOK.setReference('7.3.1.1.18')
if mibBuilder.loadTexts: dot3adAggOctetsRxOK.setStatus('current')
if mibBuilder.loadTexts: dot3adAggOctetsRxOK.setDescription('A count of the data and padding octets received by this Aggregator, from the Aggregation Ports that are (or have been) members of the aggregation. The count does not include octets received in frames that carry LACP or Marker PDUs (7.3.3.1.2, 7.3.3.1.3, 7.3.3.1.4), or frames discarded by the Frame Collection function of the Aggregator (7.3.1.1.26). This value is read-only.')
dot3adAggFramesTxOK = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 9), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggFramesTxOK.setReference('7.3.1.1.19')
if mibBuilder.loadTexts: dot3adAggFramesTxOK.setStatus('current')
if mibBuilder.loadTexts: dot3adAggFramesTxOK.setDescription('A count of the data frames transmitted by this Aggregator on all Aggregation Ports that are (or have been) members of the aggregation. The count does not include frames transmitted by the Aggregator that carry LACP or Marker PDUs (7.3.3.1.7, 7.3.3.1.8, 7.3.3.1.9). However, it includes frames discarded by the Frame Distribution function of the Aggregator (7.3.1.1.25). This value is read-only.')
dot3adAggFramesRxOK = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 10), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggFramesRxOK.setReference('7.3.1.1.20')
if mibBuilder.loadTexts: dot3adAggFramesRxOK.setStatus('current')
if mibBuilder.loadTexts: dot3adAggFramesRxOK.setDescription('A count of the data frames received by this Aggregator, from the Aggregation Ports that are (or have been) members of the aggregation. The count does not include frames that carry LACP or Marker PDUs (7.3.3.1.2, 7.3.3.1.3, 7.3.3.1.4), or frames discarded by the Frame Collection function of the Aggregator (7.3.1.1.26). This value is read-only.')
dot3adAggMulticastFramesTxOK = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 11), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggMulticastFramesTxOK.setReference('7.3.1.1.21')
if mibBuilder.loadTexts: dot3adAggMulticastFramesTxOK.setStatus('current')
if mibBuilder.loadTexts: dot3adAggMulticastFramesTxOK.setDescription('A count of the data frames transmitted by this Aggregator on all Aggregation Ports that are (or have been) members of the aggregation, to a group DA other than the broadcast address. The count does not include frames transmitted by the Aggregator that carry LACP or Marker PDUs (7.3.3.1.7, 7.3.3.1.8, 7.3.3.1.9). However, it includes frames discarded by the Frame Distribution function of the Aggregator (7.3.1.1.25). This value is read-only.')
dot3adAggMulticastFramesRxOK = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 12), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggMulticastFramesRxOK.setReference('7.3.1.1.22')
if mibBuilder.loadTexts: dot3adAggMulticastFramesRxOK.setStatus('current')
if mibBuilder.loadTexts: dot3adAggMulticastFramesRxOK.setDescription('A count of the data frames received by this Aggregator, from the Aggregation Ports that are (or have been) members of the aggregation, that were addressed to an active group address other than the broadcast address. The count does not include frames that carry LACP or Marker PDUs (7.3.3.1.2, 7.3.3.1.3, 7.3.3.1.4), or frames discarded by the Frame Collection function of the Aggregator (7.3.1.1.26). This value is read-only.')
dot3adAggBroadcastFramesTxOK = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 13), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggBroadcastFramesTxOK.setReference('7.3.1.1.23')
if mibBuilder.loadTexts: dot3adAggBroadcastFramesTxOK.setStatus('current')
if mibBuilder.loadTexts: dot3adAggBroadcastFramesTxOK.setDescription('A count of the broadcast data frames transmitted by this Aggregator on all Aggregation Ports that are (or have been) members of the aggregation. The count does not include frames transmitted by the Aggregator that carry LACP or Marker PDUs (7.3.3.1.7, 7.3.3.1.8, 7.3.3.1.9). However, it includes frames discarded by the Frame Distribution function of the Aggregator (7.3.1.1.25). This value is read-only.')
dot3adAggBroadcastFramesRxOK = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 14), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggBroadcastFramesRxOK.setReference('7.3.1.1.24')
if mibBuilder.loadTexts: dot3adAggBroadcastFramesRxOK.setStatus('current')
if mibBuilder.loadTexts: dot3adAggBroadcastFramesRxOK.setDescription('A count of the broadcast data frames received by this Aggregator, from the Aggregation Ports that are (or have been) members of the aggregation. The count does not include frames that carry LACP or Marker PDUs (7.3.3.1.2, 7.3.3.1.3, 7.3.3.1.4), illegal or unknown protocol frames (7.3.3.1.5, 7.3.3.1.6), or frames discarded by the Frame Collection function of the Aggregator (7.3.1.1.26). This value is read-only.')
dot3adAggFramesDiscardedOnTx = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 15), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggFramesDiscardedOnTx.setReference('7.3.1.1.25')
if mibBuilder.loadTexts: dot3adAggFramesDiscardedOnTx.setStatus('current')
if mibBuilder.loadTexts: dot3adAggFramesDiscardedOnTx.setDescription('A count of data frames requested to be transmitted by this Aggregator that were discarded by the Frame Distribution function of the Aggregator when conversations are reallocated to different Aggregation Ports, due to the requirement to ensure that the conversations are flushed on the old Aggregation Ports in order to maintain proper frame ordering (B.3), or discarded as a result of excessive collisions by Aggregation Ports that are (or have been) members of the aggregation. This value is read-only.')
dot3adAggFramesDiscardedOnRx = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 16), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggFramesDiscardedOnRx.setReference('7.3.1.1.26')
if mibBuilder.loadTexts: dot3adAggFramesDiscardedOnRx.setStatus('current')
if mibBuilder.loadTexts: dot3adAggFramesDiscardedOnRx.setDescription('A count of data frames, received on all Aggregation Ports that are (or have been) members of the aggregation, that were discarded by the Frame Collection function of the Aggregator as they were received on Aggregation Ports whose Frame Collection function was disabled. This value is read-only.')
dot3adAggFramesWithTxErrors = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 17), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggFramesWithTxErrors.setReference('7.3.1.1.27')
if mibBuilder.loadTexts: dot3adAggFramesWithTxErrors.setStatus('current')
if mibBuilder.loadTexts: dot3adAggFramesWithTxErrors.setDescription('A count of data frames requested to be transmitted by this Aggregator that experienced transmission errors on Aggregation Ports that are (or have been) members of the aggregation. This count does not include frames discarded due to excess collisions. This value is read-only.')
dot3adAggFramesWithRxErrors = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 18), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggFramesWithRxErrors.setReference('7.3.1.1.28')
if mibBuilder.loadTexts: dot3adAggFramesWithRxErrors.setStatus('current')
if mibBuilder.loadTexts: dot3adAggFramesWithRxErrors.setDescription('A count of data frames discarded on reception by all Aggregation Ports that are (or have been) members of the aggregation, or that were discarded by the Frame Collection function of the Aggregator, or that were discarded by the Aggregator due to the detection of an illegal Slow Protocols PDU (7.3.3.1.6). This value is read-only.')
dot3adAggUnknownProtocolFrames = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 19), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggUnknownProtocolFrames.setReference('7.3.1.1.29')
if mibBuilder.loadTexts: dot3adAggUnknownProtocolFrames.setStatus('current')
if mibBuilder.loadTexts: dot3adAggUnknownProtocolFrames.setDescription('A count of data frames discarded on reception by all Aggregation Ports that are (or have been) members of the aggregation, due to the detection of an unknown Slow Protocols PDU (7.3.3.1.5). This value is read-only.')
dot3adAggLinkUpDownNotificationEnable = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggLinkUpDownNotificationEnable.setReference('7.3.1.1.31')
if mibBuilder.loadTexts: dot3adAggLinkUpDownNotificationEnable.setStatus('current')
if mibBuilder.loadTexts: dot3adAggLinkUpDownNotificationEnable.setDescription("When set to 'enabled', Link Up and Link Down notifications are enabled for this Aggregator. When set to 'disabled', Link Up and Link Down notifications are disabled for this Aggregator. This value is read-write.")
dot3adAggPortAlgorithm = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggPortAlgorithm.setReference('7.3.1.1.33')
if mibBuilder.loadTexts: dot3adAggPortAlgorithm.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortAlgorithm.setDescription('This object identifies the algorithm used by the Aggregator to assign frames to a Port Conversation ID. Table 6-4 provides the IEEE 802.1 OUI (00-80-C2) Port Algorithm encodings. A SEQUENCE OF OCTETS consisting of a 3-octet OUI or CID and one following octet.')
dot3adAggPartnerAdminPortAlgorithm = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 22), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggPartnerAdminPortAlgorithm.setReference('7.3.1.1.34')
if mibBuilder.loadTexts: dot3adAggPartnerAdminPortAlgorithm.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPartnerAdminPortAlgorithm.setDescription("This object identifies the value for the algorithm of the Partner System, assigned by administrator or System policy for use when the Partner's information is unknown. Table 6-4 provides the IEEE 802.1 OUI (00-80-C2) Port Algorithm encodings. Its default value is set to NULL. A SEQUENCE OF OCTETS consisting of a 3-octet OUI or CID and one following octet.")
dot3adAggPartnerAdminPortConversationListDigest = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggPartnerAdminPortConversationListDigest.setReference('7.3.1.1.36')
if mibBuilder.loadTexts: dot3adAggPartnerAdminPortConversationListDigest.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPartnerAdminPortConversationListDigest.setDescription("The value for the digest of the prioritized Port Conversation ID-to-Link Number ID assignments of the Partner System, assigned by administrator or System policy for use when the Partner's information is unknown. Its default value is set to NULL.")
dot3adAggAdminDiscardWrongConversation = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 24), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggAdminDiscardWrongConversation.setReference('7.3.1.1.37')
if mibBuilder.loadTexts: dot3adAggAdminDiscardWrongConversation.setStatus('current')
if mibBuilder.loadTexts: dot3adAggAdminDiscardWrongConversation.setDescription("The administrative value that determines what the Aggregator does with a frame that is received from an Aggregation Port with a Port Conversation ID that is not included in the Collection_Conversation_Mask. The value 'TRUE' indicates that such frames are to be discarded, and the value 'FALSE' that they are to be forwarded. This variable needs to be set to 'TRUE', if bidirectional congruity (8.2.1) is required. Its value is set to 'TRUE' by default.")
dot3adAggPartnerAdminConvServiceMappingDigest = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 3, 1, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggPartnerAdminConvServiceMappingDigest.setReference('7.3.1.1.39')
if mibBuilder.loadTexts: dot3adAggPartnerAdminConvServiceMappingDigest.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPartnerAdminConvServiceMappingDigest.setDescription("The value for the digest of the Port Conversation ID-to-Service ID assignments of the Partner System, assigned by administrator or System policy for use when the Partner's information is unknown. Its default value is set to NULL.")
dot3adAggConversationAdminLinkTable = MibTable((1, 2, 840, 10006, 300, 43, 1, 1, 4), )
if mibBuilder.loadTexts: dot3adAggConversationAdminLinkTable.setReference('7.3.1.1.35')
if mibBuilder.loadTexts: dot3adAggConversationAdminLinkTable.setStatus('current')
if mibBuilder.loadTexts: dot3adAggConversationAdminLinkTable.setDescription('There are 4096 aAggConversationAdminPort[] variables, aAggConversationAdminLink[0] through aAggConversationAdminLink[4095], indexed by Port Conversation ID. Each contains administrative values of the link selection priority list for the referenced Port Conversation ID. This selection priority list is a sequence of Link-Number IDs for each Port Conversation ID, in the order of preference, highest to lowest, for the corresponding link to carry that Port Conversation ID. A 16-bit zero value is used to indicate that no link is assigned to carry the associated Port Conversation ID. NOTE - This mapping of Port Conversation IDs to Link Number IDs is the fundamental administrative input. An equivalent mapping of Port Conversation IDs to Port IDs [Conversation_PortList[]] is derived from this and used internally. NOTE - When a network administrator issues a command for selection rules, provided by aAggConversationAdminLink[], and accompanied with a non-zero value for aAggPortWTRTime (7.3.2.1.29) for all associated Aggregation Ports, the ChangeActorOperDist is set as specified in 6.6.2.2. A value of 100 for the aAggPortWTRTime indicates a non-revertive mode of operation, and the WTR_timer will be kept to the value 100.')
dot3adAggConversationAdminLinkEntry = MibTableRow((1, 2, 840, 10006, 300, 43, 1, 1, 4, 1), ).setIndexNames((0, "IEEE8023-LAG-MIB", "dot3adAggConversationAdminLinkId"), (0, "IEEE8023-LAG-MIB", "dot3adAggIndex"))
if mibBuilder.loadTexts: dot3adAggConversationAdminLinkEntry.setReference('7.3.1.1.35')
if mibBuilder.loadTexts: dot3adAggConversationAdminLinkEntry.setStatus('current')
if mibBuilder.loadTexts: dot3adAggConversationAdminLinkEntry.setDescription('An entry contains administrative values of the link selection priority list for the referenced Port Conversation ID. This selection priority list is a sequence of Link-Number IDs for each Port Conversation ID, in the order of preference, highest to lowest, for the corresponding link to carry that Port Conversation ID. A 16 bit zero value is used to indicate that no link is assigned to carry the associated Port Conversation ID.')
dot3adAggConversationAdminLinkId = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)))
if mibBuilder.loadTexts: dot3adAggConversationAdminLinkId.setStatus('current')
if mibBuilder.loadTexts: dot3adAggConversationAdminLinkId.setDescription('An identifier for Port Conversation.')
dot3adAggConversationAdminLinkList = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 4, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggConversationAdminLinkList.setReference('7.3.1.1.35')
if mibBuilder.loadTexts: dot3adAggConversationAdminLinkList.setStatus('current')
if mibBuilder.loadTexts: dot3adAggConversationAdminLinkList.setDescription('Each two octets of the octet string represent the agreed Link Number ID that is assigned to an Aggregation Port (7.3.2.1.27). The list is in the order of preference, highest to lowest, for corresponding preferred link to carry that Port Conversation ID.')
dot3adAggAdminServiceConversationMapTable = MibTable((1, 2, 840, 10006, 300, 43, 1, 1, 5), )
if mibBuilder.loadTexts: dot3adAggAdminServiceConversationMapTable.setReference('7.3.1.1.38')
if mibBuilder.loadTexts: dot3adAggAdminServiceConversationMapTable.setStatus('current')
if mibBuilder.loadTexts: dot3adAggAdminServiceConversationMapTable.setDescription('There are 4096 aAggAdminServiceConversationMap[] variables, aAggAdminServiceConversationMap[0] through aAggAdminServiceConversationMap[4095], indexed by Port Conversation ID. Each contains, in general, a set of Service IDs (8.2.2), unique within the array. If the Service IDs are representing VIDs, only a single VID is used, while in the case that Service IDs are representing I-SIDs, more than one I-SIDs are possible. Service IDs not contained in the map are not mapped to any Port Conversation ID and will be discarded.')
dot3adAggAdminServiceConversationMapEntry = MibTableRow((1, 2, 840, 10006, 300, 43, 1, 1, 5, 1), ).setIndexNames((0, "IEEE8023-LAG-MIB", "dot3adAggAdminServiceConversationMapId"), (0, "IEEE8023-LAG-MIB", "dot3adAggIndex"))
if mibBuilder.loadTexts: dot3adAggAdminServiceConversationMapEntry.setReference('7.3.1.1.38')
if mibBuilder.loadTexts: dot3adAggAdminServiceConversationMapEntry.setStatus('current')
if mibBuilder.loadTexts: dot3adAggAdminServiceConversationMapEntry.setDescription('An entry contains, in general, a set of Service IDs (8.2.2), unique within the array. If the Service IDs are representing VIDs, only a single VID is applicable, while in the case that Service IDs are representing I-SIDs, more than one I-SIDs are possible.')
dot3adAggAdminServiceConversationMapId = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)))
if mibBuilder.loadTexts: dot3adAggAdminServiceConversationMapId.setStatus('current')
if mibBuilder.loadTexts: dot3adAggAdminServiceConversationMapId.setDescription('The Port Conversation ID used to index Conversation Map entries.')
dot3adAggAdminServiceConversationServiceIDList = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 1, 5, 1, 2), ServiceIdList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggAdminServiceConversationServiceIDList.setStatus('current')
if mibBuilder.loadTexts: dot3adAggAdminServiceConversationServiceIDList.setDescription('A list contains, in general, a set of Service IDs (8.2.2), unique within the array.')
dot3adAggPortTable = MibTable((1, 2, 840, 10006, 300, 43, 1, 2, 1), )
if mibBuilder.loadTexts: dot3adAggPortTable.setReference('7.3.2')
if mibBuilder.loadTexts: dot3adAggPortTable.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortTable.setDescription('A table that contains Link Aggregation Control configuration information about every Aggregation Port associated with this device. A row appears in this table for each physical port.')
dot3adAggPortEntry = MibTableRow((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1), ).setIndexNames((0, "IEEE8023-LAG-MIB", "dot3adAggPortIndex"))
if mibBuilder.loadTexts: dot3adAggPortEntry.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortEntry.setDescription('A list of Link Aggregation Control configuration parameters for each Aggregation Port on this device.')
dot3adAggPortIndex = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: dot3adAggPortIndex.setReference('7.3.2.1.1')
if mibBuilder.loadTexts: dot3adAggPortIndex.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortIndex.setDescription('The unique identifier allocated to this Aggregation Port by the local System. This attribute identifies an Aggregation Port instance among the subordinate managed objects of the containing object. This value is read-only. NOTE-The aAggPortID is represented in the SMIv2 MIB as an ifIndex-see D.4.1.')
dot3adAggPortActorSystemPriority = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggPortActorSystemPriority.setReference('7.3.2.1.2')
if mibBuilder.loadTexts: dot3adAggPortActorSystemPriority.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortActorSystemPriority.setDescription("A 2-octet read-write value used to define the priority value associated with the Actor's System ID.")
dot3adAggPortActorSystemID = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortActorSystemID.setReference('7.3.2.1.3')
if mibBuilder.loadTexts: dot3adAggPortActorSystemID.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortActorSystemID.setDescription('A 6-octet read-only MAC address value that defines the value of the System ID for the System that contains this Aggregation Port.')
dot3adAggPortActorAdminKey = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 4), LacpKey()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggPortActorAdminKey.setReference('7.3.2.1.4')
if mibBuilder.loadTexts: dot3adAggPortActorAdminKey.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortActorAdminKey.setDescription('The current administrative value of the Key for the Aggregation Port. This is a 16-bit read-write value. The meaning of particular Key values is of local significance.')
dot3adAggPortActorOperKey = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 5), LacpKey()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortActorOperKey.setReference('7.3.2.1.5')
if mibBuilder.loadTexts: dot3adAggPortActorOperKey.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortActorOperKey.setDescription('The current operational value of the Key for the Aggregation Port. This is a 16-bit read-only value. The meaning of particular Key values is of local significance.')
dot3adAggPortPartnerAdminSystemPriority = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminSystemPriority.setReference('7.3.2.1.6')
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminSystemPriority.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminSystemPriority.setDescription("A 2-octet read-write value used to define the administrative value of priority associated with the Partner's System ID. The assigned value is used, along with the value of aAggPortPartnerAdminSystemID, aAggPortPartnerAdminKey, aAggPortPartnerAdminPort, and aAggPortPartnerAdminPortPriority, in order to achieve manually configured aggregation.")
dot3adAggPortPartnerOperSystemPriority = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortPartnerOperSystemPriority.setReference('7.3.2.1.7')
if mibBuilder.loadTexts: dot3adAggPortPartnerOperSystemPriority.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortPartnerOperSystemPriority.setDescription("A 2-octet read-only value indicating the operational value of priority associated with the Partner's System ID. The value of this attribute may contain the manually configured value carried in aAggPortPartnerAdminSystemPriority if there is no protocol Partner.")
dot3adAggPortPartnerAdminSystemID = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 8), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminSystemID.setReference('7.3.2.1.8')
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminSystemID.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminSystemID.setDescription("A 6-octet read-write MACAddress value representing the administrative value of the Aggregation Port's protocol Partner's System ID. The assigned value is used, along with the value of aAggPortPartnerAdminSystemPriority, aAggPortPartnerAdminKey, aAggPortPartnerAdminPort, and aAggPortPartnerAdminPortPriority, in order to achieve manually configured aggregation.")
dot3adAggPortPartnerOperSystemID = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 9), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortPartnerOperSystemID.setReference('7.3.2.1.9')
if mibBuilder.loadTexts: dot3adAggPortPartnerOperSystemID.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortPartnerOperSystemID.setDescription("A 6-octet read-only MACAddress value representing the current value of the Aggregation Port's protocol Partner's System ID. A value of zero indicates that there is no known protocol Partner. The value of this attribute may contain the manually configured value carried in aAggPortPartnerAdminSystemID if there is no protocol Partner.")
dot3adAggPortPartnerAdminKey = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 10), LacpKey()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminKey.setReference('7.3.2.1.10')
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminKey.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminKey.setDescription('The current administrative value of the Key for the protocol Partner. This is a 16-bit read-write value. The assigned value is used, along with the value of aAggPortPartnerAdminSystemPriority, aAggPortPartnerAdminSystemID, aAggPortPartnerAdminPort, and aAggPortPartnerAdminPortPriority, in order to achieve manually configured aggregation.')
dot3adAggPortPartnerOperKey = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 11), LacpKey()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortPartnerOperKey.setReference('7.3.2.1.11')
if mibBuilder.loadTexts: dot3adAggPortPartnerOperKey.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortPartnerOperKey.setDescription('The current operational value of the Key for the protocol Partner. The value of this attribute may contain the manually configured value carried in aAggPortPartnerAdminKey if there is no protocol Partner. This is a 16-bit read-only value.')
dot3adAggPortSelectedAggID = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 12), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortSelectedAggID.setReference('7.3.2.1.12')
if mibBuilder.loadTexts: dot3adAggPortSelectedAggID.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortSelectedAggID.setDescription('The identifier value of the Aggregator that this Aggregation Port has currently selected. Zero indicates that the Aggregation Port has not selected an Aggregator, either because it is in the process of detaching from an Aggregator or because there is no suitable Aggregator available for it to select. This value is read-only.')
dot3adAggPortAttachedAggID = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 13), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortAttachedAggID.setReference('7.3.2.1.13')
if mibBuilder.loadTexts: dot3adAggPortAttachedAggID.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortAttachedAggID.setDescription('The identifier value of the Aggregator that this Aggregation Port is currently attached to. Zero indicates that the Aggregation Port is not currently attached to an Aggregator. This value is read-only.')
dot3adAggPortActorPort = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortActorPort.setReference('7.3.2.1.14')
if mibBuilder.loadTexts: dot3adAggPortActorPort.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortActorPort.setDescription('The port number locally assigned to the Aggregation Port. The port number is communicated in LACPDUs as the Actor_Port. This value is read-only.')
dot3adAggPortActorPortPriority = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggPortActorPortPriority.setReference('7.3.2.1.15')
if mibBuilder.loadTexts: dot3adAggPortActorPortPriority.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortActorPortPriority.setDescription("The priority value assigned to this Aggregation Port. This 16-bit value is read-write. NOTE-In the case of DRNI (Clause 9), the two least significant bits of the priority for each Aggregation Port in a Distributed Relay's Aggregator Port will be ignored because these bits are used to encode the Portal System Number [item e) in 9.3.3].")
dot3adAggPortPartnerAdminPort = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminPort.setReference('7.3.2.1.16')
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminPort.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminPort.setDescription('The current administrative value of the port number for the protocol Partner. This is a 16-bit read-write value. The assigned value is used, along with the value of aAggPortPartnerAdminSystemPriority, aAggPortPartnerAdminSystemID, aAggPortPartnerAdminKey, and aAggPortPartnerAdminPortPriority, in order to achieve manually configured aggregation.')
dot3adAggPortPartnerOperPort = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortPartnerOperPort.setReference('7.3.2.1.17')
if mibBuilder.loadTexts: dot3adAggPortPartnerOperPort.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortPartnerOperPort.setDescription("The operational port number assigned to this Aggregation Port by the Aggregation Port's protocol Partner. The value of this attribute may contain the manually configured value carried in aAggPortPartnerAdminPort if there is no protocol Partner. This 16-bit value is read-only.")
dot3adAggPortPartnerAdminPortPriority = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminPortPriority.setReference('7.3.2.1.18')
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminPortPriority.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminPortPriority.setDescription('The current administrative value of the port priority for the protocol Partner. This is a 16-bit read-write value. The assigned value is used, along with the value of aAggPortPartnerAdminSystemPriority, aAggPortPartnerAdminSystemID, aAggPortPartnerAdminKey, and aAggPortPartnerAdminPort, in order to achieve manually configured aggregation.')
dot3adAggPortPartnerOperPortPriority = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortPartnerOperPortPriority.setReference('7.3.2.1.19')
if mibBuilder.loadTexts: dot3adAggPortPartnerOperPortPriority.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortPartnerOperPortPriority.setDescription('The priority value assigned to this Aggregation Port by the Partner. The value of this attribute may contain the manually configured value carried in aAggPortPartnerAdminPortPriority if there is no protocol Partner. This 16-bit value is read-only.')
dot3adAggPortActorAdminState = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 20), LacpState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggPortActorAdminState.setReference('7.3.2.1.20')
if mibBuilder.loadTexts: dot3adAggPortActorAdminState.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortActorAdminState.setDescription('A string of 8 bits, corresponding to the administrative values of Actor_State (5.4.2) as transmitted by the Actor in LACPDUs. The first bit corresponds to bit 0 of Actor_State (LACP_Activity), the second bit corresponds to bit 1 (LACP_Timeout), the third bit corresponds to bit 2 (Aggregation), the fourth bit corresponds to bit 3 (Synchronization), the fifth bit corresponds to bit 4 (Collecting), the sixth bit corresponds to bit 5 (Distributing), the seventh bit corresponds to bit 6 (Defaulted), and the eighth bit corresponds to bit 7 (Expired). These values allow administrative control over the values of LACP_Activity, LACP_Timeout and Aggregation. This attribute value is read-write.')
dot3adAggPortActorOperState = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 21), LacpState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortActorOperState.setReference('7.3.2.1.21')
if mibBuilder.loadTexts: dot3adAggPortActorOperState.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortActorOperState.setDescription('A string of 8 bits, corresponding to the current operational values of Actor_State as transmitted by the Actor in LACPDUs. The bit allocations are as defined in 7.3.2.1.20. This attribute value is read-only.')
dot3adAggPortPartnerAdminState = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 22), LacpState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminState.setReference('7.3.2.1.22')
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminState.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminState.setDescription('A string of 8 bits, corresponding to the current administrative value of Actor_State for the protocol Partner. The bit allocations are as defined in 7.3.2.1.20. This attribute value is read-write. The assigned value is used in order to achieve manually configured aggregation.')
dot3adAggPortPartnerOperState = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 23), LacpState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortPartnerOperState.setReference('7.3.2.1.23')
if mibBuilder.loadTexts: dot3adAggPortPartnerOperState.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortPartnerOperState.setDescription('A string of 8 bits, corresponding to the current values of Actor_State in the most recently received LACPDU transmitted by the protocol Partner. The bit allocations are as defined in 7.3.2.1.20. In the absence of an active protocol Partner, this value may reflect the manually configured value aAggPortPartnerAdminState. This attribute value is read-only.')
dot3adAggPortAggregateOrIndividual = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 1, 1, 24), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortAggregateOrIndividual.setReference('7.3.2.1.24')
if mibBuilder.loadTexts: dot3adAggPortAggregateOrIndividual.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortAggregateOrIndividual.setDescription("A read-only Boolean value indicating whether the Aggregation Port is able to Aggregate ('TRUE') or is only able to operate as an Individual link ('FALSE').")
dot3adAggPortStatsTable = MibTable((1, 2, 840, 10006, 300, 43, 1, 2, 2), )
if mibBuilder.loadTexts: dot3adAggPortStatsTable.setReference('7.3.3')
if mibBuilder.loadTexts: dot3adAggPortStatsTable.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortStatsTable.setDescription('A table that contains Link Aggregation information about every port that is associated with this device. A row appears in this table for each physical port.')
dot3adAggPortStatsEntry = MibTableRow((1, 2, 840, 10006, 300, 43, 1, 2, 2, 1), ).setIndexNames((0, "IEEE8023-LAG-MIB", "dot3adAggPortIndex"))
if mibBuilder.loadTexts: dot3adAggPortStatsEntry.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortStatsEntry.setDescription('A list of Link Aggregation Control Protocol statistics for each port on this device.')
dot3adAggPortStatsLACPDUsRx = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortStatsLACPDUsRx.setReference('7.3.3.1.2')
if mibBuilder.loadTexts: dot3adAggPortStatsLACPDUsRx.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortStatsLACPDUsRx.setDescription('The number of valid LACPDUs received on this Aggregation Port. This value is read-only.')
dot3adAggPortStatsMarkerPDUsRx = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortStatsMarkerPDUsRx.setReference('7.3.3.1.3')
if mibBuilder.loadTexts: dot3adAggPortStatsMarkerPDUsRx.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortStatsMarkerPDUsRx.setDescription('The number of valid Marker PDUs received on this Aggregation Port. This value is read-only.')
dot3adAggPortStatsMarkerResponsePDUsRx = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortStatsMarkerResponsePDUsRx.setReference('7.3.3.1.4')
if mibBuilder.loadTexts: dot3adAggPortStatsMarkerResponsePDUsRx.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortStatsMarkerResponsePDUsRx.setDescription('The number of valid Marker Response PDUs received on this Aggregation Port. This value is read-only.')
dot3adAggPortStatsUnknownRx = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortStatsUnknownRx.setReference('7.3.3.1.5')
if mibBuilder.loadTexts: dot3adAggPortStatsUnknownRx.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortStatsUnknownRx.setDescription('The number of frames received that either: - carry the Slow Protocols Ethernet Type value (IEEE Std 802.3-2008, Annex 57A.4), but contain an unknown PDU, or: - are addressed to the Slow Protocols group MAC Address (IEEE Std 802.3-2008, Annex 57A.3), but do not carry the Slow Protocols Ethernet Type. This value is read-only.')
dot3adAggPortStatsIllegalRx = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortStatsIllegalRx.setReference('7.3.3.1.6')
if mibBuilder.loadTexts: dot3adAggPortStatsIllegalRx.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortStatsIllegalRx.setDescription('The number of frames received that carry the Slow Protocols Ethernet Type value (IEEE Std 802.3-2008, Annex 57A.4), but contain a badly formed PDU or an illegal value of Protocol Subtype (IEEE Std 802.3-2008, Annex 57A.3). This value is read-only.')
dot3adAggPortStatsLACPDUsTx = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortStatsLACPDUsTx.setReference('7.3.3.1.7')
if mibBuilder.loadTexts: dot3adAggPortStatsLACPDUsTx.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortStatsLACPDUsTx.setDescription('The number of LACPDUs transmitted on this Aggregation Port. This value is read-only.')
dot3adAggPortStatsMarkerPDUsTx = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortStatsMarkerPDUsTx.setReference('7.3.3.1.8')
if mibBuilder.loadTexts: dot3adAggPortStatsMarkerPDUsTx.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortStatsMarkerPDUsTx.setDescription('The number of Marker PDUs transmitted on this Aggregation Port. This value is read-only.')
dot3adAggPortStatsMarkerResponsePDUsTx = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortStatsMarkerResponsePDUsTx.setReference('7.3.3.1.9')
if mibBuilder.loadTexts: dot3adAggPortStatsMarkerResponsePDUsTx.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortStatsMarkerResponsePDUsTx.setDescription('The number of Marker Response PDUs transmitted on this Aggregation Port. This value is read-only.')
dot3adAggPortDebugTable = MibTable((1, 2, 840, 10006, 300, 43, 1, 2, 3), )
if mibBuilder.loadTexts: dot3adAggPortDebugTable.setReference('7.3.4')
if mibBuilder.loadTexts: dot3adAggPortDebugTable.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugTable.setDescription('A table that contains Link Aggregation debug information about every port that is associated with this device. A row appears in this table for each physical port.')
dot3adAggPortDebugEntry = MibTableRow((1, 2, 840, 10006, 300, 43, 1, 2, 3, 1), ).setIndexNames((0, "IEEE8023-LAG-MIB", "dot3adAggPortIndex"))
if mibBuilder.loadTexts: dot3adAggPortDebugEntry.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugEntry.setDescription('A list of the debug parameters for a port.')
dot3adAggPortDebugRxState = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("currentRx", 1), ("expired", 2), ("defaulted", 3), ("initialize", 4), ("lacpDisabled", 5), ("portDisabled", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortDebugRxState.setReference('7.3.4.1.2')
if mibBuilder.loadTexts: dot3adAggPortDebugRxState.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugRxState.setDescription("This attribute holds the value 'currentRx' if the Receive state machine for the Aggregation Port is in the CURRENT state, 'expired' if the Receive state machine is in the EXPIRED state, 'defaulted' if the Receive state machine is in the DEFAULTED state, 'initialize' if the Receive state machine is in the INITIALIZE state, 'lacpDisabled' if the Receive state machine is in the LACP_DISABLED state, or 'portDisabled' if the Receive state machine is in the PORT_DISABLED state. This value is read-only.")
dot3adAggPortDebugLastRxTime = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 3, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortDebugLastRxTime.setReference('7.3.4.1.3')
if mibBuilder.loadTexts: dot3adAggPortDebugLastRxTime.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugLastRxTime.setDescription('The time at which the last LACPDU was received by this Aggregation Port, in terms of centiseconds since the system was last reset. The ifLastChange object in the Interfaces MIB defined in IETF RFC 2863 is a suitable object for supplying a value for aAggPortDebugLastRxTime. This value is read-only. NOTE - aAggPortDebugLastRxTime was defined in terms of the aTimeSinceSystemReset variable of IEEE Std 802.3-2008, Annex F, F.2.1, in earlier versions of this standard. aTimeSinceSystemReset and ifLastChange have the same meaning.')
dot3adAggPortDebugMuxState = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("detached", 1), ("waiting", 2), ("attached", 3), ("collecting", 4), ("distributing", 5), ("collectingDistributing", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortDebugMuxState.setReference('7.3.4.1.4')
if mibBuilder.loadTexts: dot3adAggPortDebugMuxState.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugMuxState.setDescription("This attribute holds the value 'detached' if the Mux state machine (5.4.14) for the Aggregation Port is in the DETACHED state, 'waiting' if the Mux state machine is in the WAITING state, 'attached' if the Mux state machine for the Aggregation Port is in the ATTACHED state, 'collecting' if the Mux state machine for the Aggregation Port is in the COLLECTING state, 'distributing' if the Mux state machine for the Aggregation Port is in the DISTRIBUTING state, and 'collectingDistributing' if the Mux state machine for the Aggregation Port is in the COLLECTING_DISTRIBUTING state. This value is read-only.")
dot3adAggPortDebugMuxReason = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortDebugMuxReason.setReference('7.3.4.1.5')
if mibBuilder.loadTexts: dot3adAggPortDebugMuxReason.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugMuxReason.setDescription('A human-readable text string indicating the reason for the most recent change of Mux machine state. This value is read-only.')
dot3adAggPortDebugActorChurnState = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 3, 1, 5), ChurnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortDebugActorChurnState.setReference('7.3.4.1.6')
if mibBuilder.loadTexts: dot3adAggPortDebugActorChurnState.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugActorChurnState.setDescription("The state of the Actor Churn Detection machine (6.4.17) for the Aggregation Port. A value of 'noChurn' indicates that the state machine is in either the NO_ACTOR_CHURN or the ACTOR_CHURN_MONITOR state, and 'churn' indicates that the state machine is in the ACTOR_CHURN state. This value is read-only.")
dot3adAggPortDebugPartnerChurnState = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 3, 1, 6), ChurnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortDebugPartnerChurnState.setReference('7.3.4.1.7')
if mibBuilder.loadTexts: dot3adAggPortDebugPartnerChurnState.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugPartnerChurnState.setDescription("The state of the Partner Churn Detection machine (6.4.17) for the Aggregation Port. A value of 'noChurn' indicates that the state machine is in either the NO_PARTNER_CHURN or the PARTNER_CHURN_MONITOR state, and 'churn' indicates that the state machine is in the PARTNER_CHURN state. This value is read-only.")
dot3adAggPortDebugActorChurnCount = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortDebugActorChurnCount.setReference('7.3.4.1.8')
if mibBuilder.loadTexts: dot3adAggPortDebugActorChurnCount.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugActorChurnCount.setDescription('Count of the number of times the Actor Churn state machine has entered the ACTOR_CHURN state. This value is read-only.')
dot3adAggPortDebugPartnerChurnCount = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortDebugPartnerChurnCount.setReference('7.3.4.1.9')
if mibBuilder.loadTexts: dot3adAggPortDebugPartnerChurnCount.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugPartnerChurnCount.setDescription('Count of the number of times the Partner Churn state machine has entered the PARTNER_CHURN state. This value is read-only.')
dot3adAggPortDebugActorSyncTransitionCount = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortDebugActorSyncTransitionCount.setReference('7.3.4.1.10')
if mibBuilder.loadTexts: dot3adAggPortDebugActorSyncTransitionCount.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugActorSyncTransitionCount.setDescription("Count of the number of times the Actor's Mux state machine (6.4.15) has entered the IN_SYNC state. This value is read-only.")
dot3adAggPortDebugPartnerSyncTransitionCount = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortDebugPartnerSyncTransitionCount.setReference('7.3.4.1.11')
if mibBuilder.loadTexts: dot3adAggPortDebugPartnerSyncTransitionCount.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugPartnerSyncTransitionCount.setDescription("Count of the number of times the Partner's Mux state machine (6.4.15) has entered the IN_SYNC state. This value is read-only.")
dot3adAggPortDebugActorChangeCount = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortDebugActorChangeCount.setReference('7.3.4.1.12')
if mibBuilder.loadTexts: dot3adAggPortDebugActorChangeCount.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugActorChangeCount.setDescription("Count of the number of times the Actor's perception of the LAG ID for this Aggregation Port has changed. This value is read-only.")
dot3adAggPortDebugPartnerChangeCount = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortDebugPartnerChangeCount.setReference('7.3.4.1.13')
if mibBuilder.loadTexts: dot3adAggPortDebugPartnerChangeCount.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugPartnerChangeCount.setDescription("Count of the number of times the Partner's perception of the LAG ID (see 6.3.6.1) for this Aggregation Port has changed. This value is read-only.")
dot3adAggPortXTable = MibTable((1, 2, 840, 10006, 300, 43, 1, 2, 4), )
if mibBuilder.loadTexts: dot3adAggPortXTable.setReference('7.3.2.2')
if mibBuilder.loadTexts: dot3adAggPortXTable.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortXTable.setDescription('A table that extends dot3adAggPortTable.')
dot3adAggPortXEntry = MibTableRow((1, 2, 840, 10006, 300, 43, 1, 2, 4, 1), )
dot3adAggPortEntry.registerAugmentions(("IEEE8023-LAG-MIB", "dot3adAggPortXEntry"))
dot3adAggPortXEntry.setIndexNames(*dot3adAggPortEntry.getIndexNames())
if mibBuilder.loadTexts: dot3adAggPortXEntry.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortXEntry.setDescription('A list of extension parameters for Aggregation Port.')
dot3adAggPortProtocolDA = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 4, 1, 1), MacAddress().clone(hexValue="0180C2000002")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggPortProtocolDA.setReference('7.3.2.2.1')
if mibBuilder.loadTexts: dot3adAggPortProtocolDA.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortProtocolDA.setDescription('A 6-octet read-write MACAddress value specifying the DA to be used when sending Link Aggregation Control and Marker PDUs on this Aggregation Port, corresponding to the value of Protocol_DA in 6.2.8.1.2, 6.2.10.1.3 and 6.5.4.2.1. The default value shall be the IEEE 802.3 Slow_Protocols_Multicast address.')
dot3adAggPortSecondXTable = MibTable((1, 2, 840, 10006, 300, 43, 1, 2, 5), )
if mibBuilder.loadTexts: dot3adAggPortSecondXTable.setReference('7.3.2')
if mibBuilder.loadTexts: dot3adAggPortSecondXTable.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortSecondXTable.setDescription('A table that extends dot3adAggPortTable.')
dot3adAggPortSecondXEntry = MibTableRow((1, 2, 840, 10006, 300, 43, 1, 2, 5, 1), )
dot3adAggPortEntry.registerAugmentions(("IEEE8023-LAG-MIB", "dot3adAggPortSecondXEntry"))
dot3adAggPortSecondXEntry.setIndexNames(*dot3adAggPortEntry.getIndexNames())
if mibBuilder.loadTexts: dot3adAggPortSecondXEntry.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortSecondXEntry.setDescription('A list of extension parameters for Aggregation Port.')
dot3adAggPortOperConversationPasses = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(512, 512)).setFixedLength(512)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortOperConversationPasses.setReference('7.3.2.1.25')
if mibBuilder.loadTexts: dot3adAggPortOperConversationPasses.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortOperConversationPasses.setDescription('A read-only current operational vector of Boolean values, with one value for each possible Port Conversation ID. A 1 indicates that the Port Conversation ID is distributed through this Aggregation Port, and a 0 indicates that it cannot. aAggPortOperConversationPasses is referencing the current value of Port_Oper_Conversation_Mask (6.6.2.2).')
dot3adAggPortOperConversationCollected = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(512, 512)).setFixedLength(512)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortOperConversationCollected.setReference('7.3.2.1.26')
if mibBuilder.loadTexts: dot3adAggPortOperConversationCollected.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortOperConversationCollected.setDescription('A read-only current operational vector of Boolean values, with one value for each possible Port Conversation ID. A 1 indicates that the Port Conversation ID is collected through this Aggregation Port, and a 0 indicates that it cannot. aAggPortOperConversationPasses is referencing the current value of Collection_Conversation_Mask (6.6.1.1.2).')
dot3adAggPortLinkNumberId = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggPortLinkNumberId.setReference('7.3.2.1.27')
if mibBuilder.loadTexts: dot3adAggPortLinkNumberId.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortLinkNumberId.setDescription("The Link Number ID value configured for this Aggregation Port by the System's administrator. When the Link Number ID value matches one of the non zero values in the selection prioritized lists in aAggConversationAdminLink[] (7.3.1.1.35), then this Aggregation Port must be configured to have an aAggPortActorAdminKey value that matches the aAggActorAdminKey of the Aggregator used by the LAG of the links specified in aAggConversationAdminLink[]. Its default value is set to aAggPortActorPort (7.3.2.1.14). NOTE - In the case of DRNI, the match of the aAggActorAdminKey to aAggPortActorAdminKey values excludes the first two bits identifying the individual Portal System in the Portal. If the network administrator fails to configure the proper values for the aAggPortActorAdminKey variables in all of the Aggregators Ports attached to a Portal, the DRCP (9.4) and the variable Port_Oper_Conversation_Mask (6.6.2.2) prevent looping and/or duplicate delivery, if necessary, by discarding frames belonging to misconfigured Conversations.")
dot3adAggPortPartnerAdminLinkNumberId = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminLinkNumberId.setReference('7.3.2.1.28')
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminLinkNumberId.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortPartnerAdminLinkNumberId.setDescription("The value for the Link Number ID of the Partner System for this Aggregation Port, assigned by administrator or System policy for use when the Partner's information is unknown. Its default value is set to 0.")
dot3adAggPortWTRTime = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5, 12), ValueRangeConstraint(100, 100), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adAggPortWTRTime.setReference('7.3.2.1.29')
if mibBuilder.loadTexts: dot3adAggPortWTRTime.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortWTRTime.setDescription('The wait-to-restore (WTR) period accompanying selection rules set by aAggConversationAdminLink[] in a command issued by a network administrator. It may be configured in steps of 1 min between 5 min and 12 min, while two additional special values are also used. The value 0 indicates revertive and is the default value. The value 100 indicates non-revertive mode of operation, and the WTR_timer will be kept to the value 100.')
dot3adAggPortDebugXTable = MibTable((1, 2, 840, 10006, 300, 43, 1, 2, 6), )
if mibBuilder.loadTexts: dot3adAggPortDebugXTable.setReference('7.3.4')
if mibBuilder.loadTexts: dot3adAggPortDebugXTable.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugXTable.setDescription('A table that extends dot3adAggPortDebugTable.')
dot3adAggPortDebugXEntry = MibTableRow((1, 2, 840, 10006, 300, 43, 1, 2, 6, 1), )
dot3adAggPortDebugEntry.registerAugmentions(("IEEE8023-LAG-MIB", "dot3adAggPortDebugXEntry"))
dot3adAggPortDebugXEntry.setIndexNames(*dot3adAggPortDebugEntry.getIndexNames())
if mibBuilder.loadTexts: dot3adAggPortDebugXEntry.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugXEntry.setDescription('A list of extension parameters for the LACP Port Debug table.')
dot3adAggPortDebugActorCDSChurnState = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 6, 1, 1), ChurnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortDebugActorCDSChurnState.setReference('7.3.4.1.14')
if mibBuilder.loadTexts: dot3adAggPortDebugActorCDSChurnState.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugActorCDSChurnState.setDescription("This managed object is applicable only when Conversation-sensitive frame collection and distribution as specified in 6.6 is supported. The state of the Actor CDS Churn Detection machine (6.6.2.7) for the Aggregation Port. A value of 'noChurn' indicates that the state machine is in either the NO_ACTOR_CDS_CHURN or the ACTOR_CHURN_CDS_MONITOR state, and 'churn' indicates that the state machine is in the ACTOR_CDS_CHURN state. This value is read-only.")
dot3adAggPortDebugPartnerCDSChurnState = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 6, 1, 2), ChurnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortDebugPartnerCDSChurnState.setReference('7.3.4.1.15')
if mibBuilder.loadTexts: dot3adAggPortDebugPartnerCDSChurnState.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugPartnerCDSChurnState.setDescription("This managed object is applicable only when Conversation-sensitive frame collection and distribution as specified in 6.6 is supported. The state of the Partner CDS Churn Detection machine (6.6.2.7) for the Aggregation Port. A value of 'noChurn' indicates that the state machine is in either the NO_PARTNER_CDS_CHURN or the PARTNER_CDS_CHURN_MONITOR state, and 'churn' indicates that the state machine is in the PARTNER_CDSCHURN state. This value is read-only.")
dot3adAggPortDebugActorCDSChurnCount = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 6, 1, 3), Counter64()).setUnits('times entered ACTOR_CDS_CHURN').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortDebugActorCDSChurnCount.setReference('7.3.4.1.16')
if mibBuilder.loadTexts: dot3adAggPortDebugActorCDSChurnCount.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugActorCDSChurnCount.setDescription('This managed object is applicable only when Conversation-sensitive frame collection and distribution as specified in 6.6 is supported. Count of the number of times the Actor CDS Churn state machine has entered the ACTOR_CDS_CHURN state. This value is read-only.')
dot3adAggPortDebugPartnerCDSChurnCount = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 2, 6, 1, 4), Counter64()).setUnits('times entered PARTNER_CDS_CHURN').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggPortDebugPartnerCDSChurnCount.setReference('7.3.4.1.7')
if mibBuilder.loadTexts: dot3adAggPortDebugPartnerCDSChurnCount.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugPartnerCDSChurnCount.setDescription('This managed object is applicable only when Conversation-sensitive frame collection and distribution as specified in 6.6 is supported. Count of the number of times the Partner CDS Churn state machine has entered the PARTNER_CDS_CHURN state. This value is read-only.')
dot3adDrniTable = MibTable((1, 2, 840, 10006, 300, 43, 1, 4, 1), )
if mibBuilder.loadTexts: dot3adDrniTable.setReference('7.4.1')
if mibBuilder.loadTexts: dot3adDrniTable.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniTable.setDescription('A table that contains information about every DRNI that is associated with this System.')
dot3adDrniEntry = MibTableRow((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1), ).setIndexNames((0, "IEEE8023-LAG-MIB", "dot3adDrniIndex"))
if mibBuilder.loadTexts: dot3adDrniEntry.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniEntry.setDescription('A list of the DRNI parameters. This is indexed by the DRNI Portal ID.')
dot3adDrniIndex = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: dot3adDrniIndex.setReference('7.4.1.1.1')
if mibBuilder.loadTexts: dot3adDrniIndex.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniIndex.setDescription('The unique identifier allocated to this Distributed Relay by the local System. This attribute identifies a Distributed Relay instance among the subordinate managed objects of the containing object. This value is read-only. NOTE - The aDrniID is represented in the SMIv2 MIB as an ifIndex-see D.5.')
dot3adDrniDescription = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adDrniDescription.setReference('7.4.1.1.2')
if mibBuilder.loadTexts: dot3adDrniDescription.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniDescription.setDescription('A human-readable text string containing information about the Distribute Relay. This string is read-only. The contents are vendor specific.')
dot3adDrniName = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 3), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adDrniName.setReference('7.4.1.1.3')
if mibBuilder.loadTexts: dot3adDrniName.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniName.setDescription('A human-readable text string containing a locally significant name for the Distributed Relay. This string is read-write.')
dot3adDrniPortalAddr = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 4), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adDrniPortalAddr.setReference('7.4.1.1.4')
if mibBuilder.loadTexts: dot3adDrniPortalAddr.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniPortalAddr.setDescription("A read-write identifier of a particular Portal. aDrniPortalAddr has to be unique among at least all of the potential Portal Systems to which a given Portal System might be attached via an IPL Intra-Portal Link. Also used as the Actor's System ID (6.3.2) for the emulated system.")
dot3adDrniPortalPriority = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adDrniPortalPriority.setReference('7.4.1.1.5')
if mibBuilder.loadTexts: dot3adDrniPortalPriority.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniPortalPriority.setDescription("A 2-octet read-write value indicating the priority value associated with the Portal's System ID. Also used as the Actor's System Priority (6.3.2) for the emulated system.")
dot3adDrniThreePortalSystem = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adDrniThreePortalSystem.setReference('7.4.1.1.6')
if mibBuilder.loadTexts: dot3adDrniThreePortalSystem.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniThreePortalSystem.setDescription('A read-write Boolean value indicating whether this Portal System is part of a Portal consisting of three Portal Systems or not. Value 1 stands for a Portal of three Portal Systems, value 0 stands for a Portal of two Portal Systems. The default value is 0.')
dot3adDrniPortalSystemNumber = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adDrniPortalSystemNumber.setReference('7.4.1.1.7')
if mibBuilder.loadTexts: dot3adDrniPortalSystemNumber.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniPortalSystemNumber.setDescription('A read-write identifier of this particular Portal System within a Portal. It is the responsibility of the network administrator to ensure that these numbers are unique among the Portal Systems with the same aDrniPortalAddr (7.4.1.1.4).')
dot3adDrniIntraPortalLinkList = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 8), PortalLinkList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adDrniIntraPortalLinkList.setReference('7.4.1.1.8')
if mibBuilder.loadTexts: dot3adDrniIntraPortalLinkList.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniIntraPortalLinkList.setDescription('Read-write list of the Interface Identifiers of the Ports to the Intra-Portal Links assigned to this Distributed Relay. Each Interface Identifier, a Port ID (6.3.4), has the two least significant bits of its Port Priority (7.3.2.1.15) configured to match the Portal System Number of the attached Portal System. The number of IPLs in the list depends on the Portal topology. For a Portal of three Portal Systems two or three IPLs can be used, for a Portal of two Portal Systems a single IPL is required and for a single Portal System no IPL is required.')
dot3adDrniAggregator = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 9), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adDrniAggregator.setReference('7.4.1.1.9')
if mibBuilder.loadTexts: dot3adDrniAggregator.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniAggregator.setDescription('An INTEGER that matches the syntax of an Interface Identifier. Read-write Interface Identifier of the Aggregator Port assigned to this Distributed Relay.')
dot3adDrniNeighborAdminConvGatewayListDigest = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adDrniNeighborAdminConvGatewayListDigest.setReference('7.4.1.1.11')
if mibBuilder.loadTexts: dot3adDrniNeighborAdminConvGatewayListDigest.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniNeighborAdminConvGatewayListDigest.setDescription("The value for the digest of the prioritized Gateway Conversation ID-to-Gateway assignments of the Neighbor Portal System, assigned by administrator or System policy for use when the Neighbor Portal System's information is unknown. Its default value is set to NULL.")
dot3adDrniNeighborAdminConvPortListDigest = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adDrniNeighborAdminConvPortListDigest.setReference('7.4.1.1.12')
if mibBuilder.loadTexts: dot3adDrniNeighborAdminConvPortListDigest.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniNeighborAdminConvPortListDigest.setDescription("The value for the digest of the prioritized Port Conversation ID-to-Aggregation Port assignments of the Neighbor Portal System, assigned by administrator or System policy for use when the Neighbor Portal System's information is unknown. Its default value is set to NULL.")
dot3adDrniGatewayAlgorithm = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adDrniGatewayAlgorithm.setReference('7.4.1.1.13')
if mibBuilder.loadTexts: dot3adDrniGatewayAlgorithm.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniGatewayAlgorithm.setDescription('This object identifies the algorithm used by the DR Function to assign frames to a Gateway Conversation ID. Table 9-7 provides the IEEE 802.1 OUI (00-80-C2) Gateway Algorithm encodings. A SEQUENCE OF OCTETS consisting of an OUI or CID and one following octet.')
dot3adDrniNeighborAdminGatewayAlgorithm = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adDrniNeighborAdminGatewayAlgorithm.setReference('7.4.1.1.14')
if mibBuilder.loadTexts: dot3adDrniNeighborAdminGatewayAlgorithm.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniNeighborAdminGatewayAlgorithm.setDescription("This object identifies the value for the Gateway algorithm of the Neighbor Portal System, assigned by administrator or System policy for use when the Neighbor Portal System's information is unknown. Table 9-7 provides the IEEE 802.1 OUI (00-80-C2) Gateway Algorithm encodings. Its default value is set to NULL. A SEQUENCE OF OCTETS consisting of a 3-octet OUI or CID and one following octet.")
dot3adDrniNeighborAdminPortAlgorithm = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adDrniNeighborAdminPortAlgorithm.setReference('7.4.1.1.15')
if mibBuilder.loadTexts: dot3adDrniNeighborAdminPortAlgorithm.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniNeighborAdminPortAlgorithm.setDescription("This object identifies the value for the Port Algorithm of the Neighbor Portal System, assigned by administrator or System policy for use when the Neighbor Portal System's information is unknown. Table 6-4 provides the IEEE 802.1 OUI (00-80-C2) Port Algorithm encodings. Its default value is set to NULL. A SEQUENCE OF OCTETS consisting of a 3-octet OUI or CID and one following octet.")
dot3adDrniNeighborAdminDRCPState = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 15), DrcpState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adDrniNeighborAdminDRCPState.setReference('7.4.1.1.16')
if mibBuilder.loadTexts: dot3adDrniNeighborAdminDRCPState.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniNeighborAdminDRCPState.setDescription('A string of 8 bits, corresponding to the administrative values of DRCP_State [item s) in 9.4.3.2] as transmitted by this Portal System in DRCPDUs. The first bit corresponds to bit 0 of DRCP_State (HomeGateway), the second bit corresponds to bit 1 (NeighborGateway), the third bit corresponds to bit 2 (OtherGateway), the fourth bit corresponds to bit 3 (IppActivity), the fifth bit corresponds to bit 4 (Timeout), the sixth bit corresponds to bit 5 (GatewaySync), the seventh bit corresponds to bit 6 (PortSync), and the eighth bit corresponds to bit 7 (Expired). These values allow administrative control over the values of HomeGateway, NeighborGateway, OtherGateway, IppActivity, and Timeout. Their values are by default set to FALSE. This attribute value is read-write.')
dot3adDrniEncapsulationMethod = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone(hexValue="0080C200")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adDrniEncapsulationMethod.setReference('7.4.1.1.17')
if mibBuilder.loadTexts: dot3adDrniEncapsulationMethod.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniEncapsulationMethod.setDescription('This managed object is applicable only when Network / IPL sharing by time (9.3.2.1) or Network / IPL sharing by tag (9.3.2.2) or Network / IPL sharing by encapsulation (9.3.2.3) is supported. The object identifies the value representing the encapsulation method that is used to transport IPL frames to the Neighbor Portal System when the IPL and network link are sharing the same physical link. It consists of the 3-octet OUI or CID identifying the organization that is responsible for this encapsulation and one following octet used to identify the encapsulation method defined by that organization. Table 9-11 provides the IEEE 802.1 OUI (00-80-C2) encapsulation method encodings. A Default value of 0x00-80-C2-00 indicates that the IPL is using a separate physical or Aggregation link. A value of 1 indicates that Network / IPL sharing by time (9.3.2.1) is used. A value of 2 indicates that the encapsulation method used is the same as the one used by network frames and that Network / IPL sharing by tag (9.3.2.2) is used.')
dot3adDrniDRPortConversationPasses = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(512, 512)).setFixedLength(512)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adDrniDRPortConversationPasses.setReference('7.4.1.1.20')
if mibBuilder.loadTexts: dot3adDrniDRPortConversationPasses.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniDRPortConversationPasses.setDescription("A read-only current operational vector of Boolean values, with one value for each possible Port Conversation ID. A 1 indicates that the Port Conversation ID is allowed to be distributed through this DR Function's Aggregator, and a 0 indicates that it cannot. aDrniDRPortConversationPasses is referencing the current value of Drni_Portal_System_Port_Conversation (9.3.4.2).")
dot3adDrniDRGatewayConversationPasses = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(512, 512)).setFixedLength(512)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adDrniDRGatewayConversationPasses.setReference('7.4.1.1.21')
if mibBuilder.loadTexts: dot3adDrniDRGatewayConversationPasses.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniDRGatewayConversationPasses.setDescription("A read-only current operational vector of Boolean values, with one value for each possible Gateway Conversation ID. A 1 indicates that the Gateway Conversation ID is allowed to pass through this DR Function's Gateway, and a 0 indicates that it cannot. aDrniDRGatewayConversationPasses is referencing the current value of Drni_Portal_System_Gateway_Conversation (9.3.4.2).")
dot3adDrniPSI = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adDrniPSI.setReference('7.4.1.1.22')
if mibBuilder.loadTexts: dot3adDrniPSI.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniPSI.setDescription("A read-only Boolean value providing the value of PSI, which indicates whether this Portal System is isolated from the other Portal Systems within the same Portal ('TRUE') or not ('FALSE').")
dot3adDrniPortConversationControl = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 20), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adDrniPortConversationControl.setReference('7.4.1.1.23')
if mibBuilder.loadTexts: dot3adDrniPortConversationControl.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniPortConversationControl.setDescription("A read-write Boolean value that controls the operation of the updateDRFHomeState (9.4.11). When set to 'TRUE' the Home Gateway Vector is set equal to Drni_Portal_System_Port_Conversation. Setting this object to 'TRUE' is only possible when the Gateway algorithm and the Port algorithm use the same distributions methods. The default is 'FALSE', indicating that the Home Gateway Vector is controlled by the network control protocol.")
dot3adDrniIntraPortalPortProtocolDA = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 1, 1, 21), MacAddress().clone(hexValue="0180C2000003")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adDrniIntraPortalPortProtocolDA.setReference('7.4.1.1.24')
if mibBuilder.loadTexts: dot3adDrniIntraPortalPortProtocolDA.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniIntraPortalPortProtocolDA.setDescription('A 6-octet read-write MAC Address value specifying the destination address to be used when sending DRCPDUs, corresponding to the value of DRCP_Protocol_DA in 9.4.4.1.3. Its values is one of the addresses selected from Table 9-4 and its default shall be the IEEE 802.1 Nearest non-TPMR Bridge group address (01-80-C2-00-00-03).')
dot3adDrniConvAdminGatewayTable = MibTable((1, 2, 840, 10006, 300, 43, 1, 4, 2), )
if mibBuilder.loadTexts: dot3adDrniConvAdminGatewayTable.setReference('7.4.1.1.10')
if mibBuilder.loadTexts: dot3adDrniConvAdminGatewayTable.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniConvAdminGatewayTable.setDescription("There are 4096 aDrniConvAdminGateway[] variables, aDrniConvAdminGateway[0] through aDrniConvAdminGateway[4095], indexed by Gateway Conversation ID. Each contains administrative values of the Gateway selection priority list for the Distributed Relay for the referenced Gateway Conversation ID. This selection priority list, a sequence of integers for each Gateway Conversation ID, is a list of Portal System Numbers in the order of preference, highest to lowest, for the corresponding preferred Portal System's Gateway to carry that Conversation. NOTE - To the extent that the network administrator fails to configure the same values for the aDrniConvAdminGateway[] variables in all of the DR Functions of a Portal, frames can be misdirected. The DRCP (9.4) detects such misconfiguration.")
dot3adDrniConvAdminGatewayEntry = MibTableRow((1, 2, 840, 10006, 300, 43, 1, 4, 2, 1), ).setIndexNames((0, "IEEE8023-LAG-MIB", "dot3adDrniGatewayConversationID"), (0, "IEEE8023-LAG-MIB", "dot3adDrniIndex"))
if mibBuilder.loadTexts: dot3adDrniConvAdminGatewayEntry.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniConvAdminGatewayEntry.setDescription("A Gateway selection priority list for the Distributed Relay for the referenced Gateway Conversation ID. This selection priority list, a sequence of integers for each Gateway Conversation ID, is a list of Portal System Numbers in the order of preference, highest to lowest, for the corresponding preferred Portal System's Gateway to carry that Conversation.")
dot3adDrniGatewayConversationID = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)))
if mibBuilder.loadTexts: dot3adDrniGatewayConversationID.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniGatewayConversationID.setDescription('An identifer for a Gateway Conversation.')
dot3adDrniConvAdminGatewayList = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 2, 1, 2), DrniConvAdminGatewayList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adDrniConvAdminGatewayList.setReference('7.4.1.1.10')
if mibBuilder.loadTexts: dot3adDrniConvAdminGatewayList.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniConvAdminGatewayList.setDescription('Priority list of Portal System Numbers in order of preference from highest to lowest.')
dot3adDrniIPLEncapMapTable = MibTable((1, 2, 840, 10006, 300, 43, 1, 4, 3), )
if mibBuilder.loadTexts: dot3adDrniIPLEncapMapTable.setReference('7.4.1.1.18')
if mibBuilder.loadTexts: dot3adDrniIPLEncapMapTable.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniIPLEncapMapTable.setDescription('This managed object is applicable only when Network / IPL sharing by tag (9.3.2.2) or Network / IPL sharing by encapsulation (9.3.2.3) is supported. Each entry represents the value of the identifier used for an IPL frame associated with that Gateway Conversation ID for the encapsulation method specified in 7.4.1.1.17.')
dot3adDrniIPLEncapMapEntry = MibTableRow((1, 2, 840, 10006, 300, 43, 1, 4, 3, 1), ).setIndexNames((0, "IEEE8023-LAG-MIB", "dot3adDrniGatewayConversationID"), (0, "IEEE8023-LAG-MIB", "dot3adDrniIndex"))
if mibBuilder.loadTexts: dot3adDrniIPLEncapMapEntry.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniIPLEncapMapEntry.setDescription('An entry represents the value of the identifier used for an IPL frame associated with that Gateway Conversation ID for the encapsulation method specified in 7.4.1.1.17.')
dot3adDrniIPLFrameIdValue = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adDrniIPLFrameIdValue.setReference('7.4.1.1.18')
if mibBuilder.loadTexts: dot3adDrniIPLFrameIdValue.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniIPLFrameIdValue.setDescription('The value of the identifier used for an IPL frame associated with that Gateway Conversation ID for the encapsulation method.')
dot3adDrniNetEncapMapTable = MibTable((1, 2, 840, 10006, 300, 43, 1, 4, 4), )
if mibBuilder.loadTexts: dot3adDrniNetEncapMapTable.setReference('7.4.1.1.19')
if mibBuilder.loadTexts: dot3adDrniNetEncapMapTable.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniNetEncapMapTable.setDescription('This managed object is applicable only when Network / IPL sharing by tag (9.3.2.2) is supported. Each entry represents the translated value of the identifier used for a network frame associated with that Gateway Conversation ID when the method specified in 7.4.1.1.17 is the Network / IPL sharing by tag method specified in 9.3.2.2 and the network frames need to share the tag space used by IPL frames.')
dot3adDrniNetEncapMapEntry = MibTableRow((1, 2, 840, 10006, 300, 43, 1, 4, 4, 1), ).setIndexNames((0, "IEEE8023-LAG-MIB", "dot3adDrniGatewayConversationID"), (0, "IEEE8023-LAG-MIB", "dot3adDrniIndex"))
if mibBuilder.loadTexts: dot3adDrniNetEncapMapEntry.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniNetEncapMapEntry.setDescription('An entry represents the translated value of the identifier used for a network frame associated with that Gateway Conversation ID when the method specified in 7.4.1.1.12 is the Network / IPL sharing by tag method specified in 9.3.2.2 and the network frames need to share the tag space used by IPL frames.')
dot3adDrniNetFrameIdValue = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 4, 4, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adDrniNetFrameIdValue.setReference('7.4.1.1.19')
if mibBuilder.loadTexts: dot3adDrniNetFrameIdValue.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniNetFrameIdValue.setDescription('The translated value of the identifier used for a network frame associated that Gateway Conversation ID.')
dot3adIPPAttributeTable = MibTable((1, 2, 840, 10006, 300, 43, 1, 5, 1), )
if mibBuilder.loadTexts: dot3adIPPAttributeTable.setReference('7.4.2')
if mibBuilder.loadTexts: dot3adIPPAttributeTable.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPAttributeTable.setDescription('A table that contains information about every IPP that is associated with this System.')
dot3adIPPAttributeEntry = MibTableRow((1, 2, 840, 10006, 300, 43, 1, 5, 1, 1), ).setIndexNames((0, "IEEE8023-LAG-MIB", "dot3adIPPIndex"))
if mibBuilder.loadTexts: dot3adIPPAttributeEntry.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPAttributeEntry.setDescription('An entry containing Attributes for an IPP.')
dot3adIPPIndex = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 5, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: dot3adIPPIndex.setReference('7.4.2.1.1')
if mibBuilder.loadTexts: dot3adIPPIndex.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPIndex.setDescription('The unique identifier allocated to this IPP by the local Portal System. This attribute identifies an IPP instance among the subordinate managed objects of the containing object. This value is read-only. NOTE-The aIPPID is represented in the SMIv2 MIB as an ifIndex-see D.5.')
dot3adIPPPortConversationPasses = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 5, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(512, 512)).setFixedLength(512)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adIPPPortConversationPasses.setReference('7.4.2.1.2')
if mibBuilder.loadTexts: dot3adIPPPortConversationPasses.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPPortConversationPasses.setDescription('A read-only current operational vector of Boolean values, with one value for each possible Port Conversation ID. A 1 indicates that the Port Conversation ID is allowed to be transmitted through this IPP Intra-Portal Port, and a 0 indicates that it cannot. aDrniIPPPortConversationPasses is referencing the current value of Ipp_Port_Conversation_Passes (9.3.4.3).')
dot3adIPPGatewayConversationDirection = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 5, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(512, 512)).setFixedLength(512)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adIPPGatewayConversationDirection.setReference('7.4.2.1.3')
if mibBuilder.loadTexts: dot3adIPPGatewayConversationDirection.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPGatewayConversationDirection.setDescription('A read-only current operational vector of Boolean values, with one value for each possible Gateway Conversation ID. A 1 indicates that the Gateway Conversation ID is assigned to Gateways reachable through this IPP Intra-Portal Port, and a 0 indicates that the Gateway for the indexed Gateway Conversation ID is not reachable through this IPP Intra-Portal Port. aIPPGatewayConversationDirection is referencing the current value of Ipp_Gateway_Conversation_Direction (9.3.4.3).')
dot3adIPPAdminState = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 5, 1, 1, 4), AggState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3adIPPAdminState.setReference('7.4.2.1.4')
if mibBuilder.loadTexts: dot3adIPPAdminState.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPAdminState.setDescription("This read-write value defines the administrative state of the IPP. A value of 'up' indicates that the operational state of the IPP (aIPPOperState) is permitted to be either up or down. A value of 'down' forces the operational state of the IPP to be down. A GET operation returns the current administrative state. A SET operation changes the administrative state to a new value.")
dot3adIPPOperState = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 5, 1, 1, 5), AggState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adIPPOperState.setReference('7.4.2.1.5')
if mibBuilder.loadTexts: dot3adIPPOperState.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPOperState.setDescription("This read-only value defines the operational state of the IPP. The operational state is 'up' if the IPL is operational, and if the value of aIPPAdminState for the IPP is also 'up'. If the IPL is not operational, or if the administrative state of the IPP (aIPPAdminState) is 'down', then the operational state is 'down.' An operational state of 'up' indicates that the IPP is available for use by the DR Function; a value of 'down' indicates that the IPP is not available for use by the DR Function.")
dot3adIPPTimeOfLastOperChange = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 5, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adIPPTimeOfLastOperChange.setReference('7.4.2.1.6')
if mibBuilder.loadTexts: dot3adIPPTimeOfLastOperChange.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPTimeOfLastOperChange.setDescription('The time at which the interface entered its current operational state, in terms of centiseconds since the system was last reset. If the current state was entered prior to the last reinitialization of the local network management subsystem, then this object contains a value of zero. The ifLastChange object in the Interfaces MIB defined in IETF RFC 2863 is a suitable object for supplying a value for aIPPTimeOfLastOperChange. This value is read-only.')
dot3adIPPStatsTable = MibTable((1, 2, 840, 10006, 300, 43, 1, 5, 2), )
if mibBuilder.loadTexts: dot3adIPPStatsTable.setReference('7.4.3')
if mibBuilder.loadTexts: dot3adIPPStatsTable.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPStatsTable.setDescription('A table that contains information for IPP statistics. A row appears in this table for each IPP in the system.')
dot3adIPPStatsEntry = MibTableRow((1, 2, 840, 10006, 300, 43, 1, 5, 2, 1), ).setIndexNames((0, "IEEE8023-LAG-MIB", "dot3adIPPIndex"))
if mibBuilder.loadTexts: dot3adIPPStatsEntry.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPStatsEntry.setDescription('An entry containing Statistics for an IPP.')
dot3adIPPStatsDRCPDUsRx = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 5, 2, 1, 1), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adIPPStatsDRCPDUsRx.setReference('7.4.3.1.2')
if mibBuilder.loadTexts: dot3adIPPStatsDRCPDUsRx.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPStatsDRCPDUsRx.setDescription('The number of valid DRCPDUs received on this IPP. This value is read-only.')
dot3adIPPStatsIllegalRx = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 5, 2, 1, 2), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adIPPStatsIllegalRx.setReference('7.4.3.1.3')
if mibBuilder.loadTexts: dot3adIPPStatsIllegalRx.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPStatsIllegalRx.setDescription('The number of frames received that carry the DRCP Ethernet Type value (9.4.2.4), but contain a badly formed PDU. This value is read-only.')
dot3adIPPStatsDRCPDUsTx = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 5, 2, 1, 3), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adIPPStatsDRCPDUsTx.setReference('7.4.3.1.4')
if mibBuilder.loadTexts: dot3adIPPStatsDRCPDUsTx.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPStatsDRCPDUsTx.setDescription('The number of DRCPDUs transmitted on this IPP. This value is read-only.')
dot3adIPPDebugTable = MibTable((1, 2, 840, 10006, 300, 43, 1, 5, 3), )
if mibBuilder.loadTexts: dot3adIPPDebugTable.setReference('7.4.4')
if mibBuilder.loadTexts: dot3adIPPDebugTable.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPDebugTable.setDescription('A table that contains IPP debug information. A row appears in this table for each IPP in the system.')
dot3adIPPDebugEntry = MibTableRow((1, 2, 840, 10006, 300, 43, 1, 5, 3, 1), ).setIndexNames((0, "IEEE8023-LAG-MIB", "dot3adIPPIndex"))
if mibBuilder.loadTexts: dot3adIPPDebugEntry.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPDebugEntry.setDescription('An entry containing Debug Information for an IPP.')
dot3adIPPDebugDRCPRxState = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("current", 1), ("expired", 2), ("defaulted", 3), ("initialize", 4), ("reportToManagement", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adIPPDebugDRCPRxState.setReference('7.4.4.1.2')
if mibBuilder.loadTexts: dot3adIPPDebugDRCPRxState.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPDebugDRCPRxState.setDescription("This attribute holds the value 'current' if the DRCPDU Receive state machine for the IPP is in the CURRENT state, 'expired' if the DRCPDU Receive state machine is in the EXPIRED state, 'defaulted' if the DRCPDU Receive state machine is in the DEFAULTED state, 'initialize' if the DRCPDU Receive state machine is in the INITIALIZE state, or 'reportToManagement' if the Receive state machine is in the REPORT_TO_MANAGEMENT state. This value is read-only.")
dot3adIPPDebugLastRxTime = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 5, 3, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adIPPDebugLastRxTime.setReference('7.4.4.1.3')
if mibBuilder.loadTexts: dot3adIPPDebugLastRxTime.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPDebugLastRxTime.setDescription('The time at which the last DRCPDU was received by this IPP, in terms of centiseconds since the system was last reset. The ifLastChange object in the Interfaces MIB defined in IETF RFC 2863 is a suitable object for supplying a value for aDrniIPPDebugLastRxTime. This value is read-only.')
dot3adIPPDebugDifferPortalReason = MibTableColumn((1, 2, 840, 10006, 300, 43, 1, 5, 3, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adIPPDebugDifferPortalReason.setReference('7.4.4.1.4')
if mibBuilder.loadTexts: dot3adIPPDebugDifferPortalReason.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPDebugDifferPortalReason.setDescription('A human-readable text string indicating the most recent set of variables that are responsible for setting the variable Differ_Portal or Differ_Conf_Portal (9.4.8) on this IPP to TRUE. This value is read-only.')
dot3adAggLinkUpNotification = NotificationType((1, 2, 840, 10006, 300, 43, 0, 1))
if mibBuilder.loadTexts: dot3adAggLinkUpNotification.setStatus('current')
if mibBuilder.loadTexts: dot3adAggLinkUpNotification.setDescription("When aAggLinkUpDownNotificationEnable is set to 'enabled,' a Link Up notification is generated when the Operational State of the Aggregator changes from 'down' to 'up.' When aAggLinkUpDownNotificationEnable is set to 'disabled,' no Link Up notifications are generated. The notification carries the identifier of the Aggregator whose state has changed.")
dot3adAggLinkDownNotification = NotificationType((1, 2, 840, 10006, 300, 43, 0, 2))
if mibBuilder.loadTexts: dot3adAggLinkDownNotification.setStatus('current')
if mibBuilder.loadTexts: dot3adAggLinkDownNotification.setDescription("When aAggLinkUpDownNotificationEnable is set to 'enabled,' a Link Down notification is generated when the Operational State of the Aggregator changes from 'up' to 'down.' When aAggLinkUpDownNotificationEnable is set to 'disabled,' no Link Down notifications are generated. The notification carries the identifier of the Aggregator whose state has changed.")
dot3adAggGroups = MibIdentifier((1, 2, 840, 10006, 300, 43, 2, 1))
dot3adAggCompliances = MibIdentifier((1, 2, 840, 10006, 300, 43, 2, 2))
dot3adAggGroup = ObjectGroup((1, 2, 840, 10006, 300, 43, 2, 1, 1)).setObjects(("IEEE8023-LAG-MIB", "dot3adAggActorSystemID"), ("IEEE8023-LAG-MIB", "dot3adAggActorSystemPriority"), ("IEEE8023-LAG-MIB", "dot3adAggAggregateOrIndividual"), ("IEEE8023-LAG-MIB", "dot3adAggActorAdminKey"), ("IEEE8023-LAG-MIB", "dot3adAggMACAddress"), ("IEEE8023-LAG-MIB", "dot3adAggActorOperKey"), ("IEEE8023-LAG-MIB", "dot3adAggPartnerSystemID"), ("IEEE8023-LAG-MIB", "dot3adAggPartnerSystemPriority"), ("IEEE8023-LAG-MIB", "dot3adAggPartnerOperKey"), ("IEEE8023-LAG-MIB", "dot3adAggCollectorMaxDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3adAggGroup = dot3adAggGroup.setStatus('current')
if mibBuilder.loadTexts: dot3adAggGroup.setDescription('A collection of objects providing information about an aggregation.')
dot3adAggPortListGroup = ObjectGroup((1, 2, 840, 10006, 300, 43, 2, 1, 2)).setObjects(("IEEE8023-LAG-MIB", "dot3adAggPortListPorts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3adAggPortListGroup = dot3adAggPortListGroup.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortListGroup.setDescription('A collection of objects providing information about every port in an aggregation.')
dot3adAggPortGroup = ObjectGroup((1, 2, 840, 10006, 300, 43, 2, 1, 3)).setObjects(("IEEE8023-LAG-MIB", "dot3adAggPortActorSystemPriority"), ("IEEE8023-LAG-MIB", "dot3adAggPortActorSystemID"), ("IEEE8023-LAG-MIB", "dot3adAggPortActorAdminKey"), ("IEEE8023-LAG-MIB", "dot3adAggPortActorOperKey"), ("IEEE8023-LAG-MIB", "dot3adAggPortPartnerAdminSystemPriority"), ("IEEE8023-LAG-MIB", "dot3adAggPortPartnerOperSystemPriority"), ("IEEE8023-LAG-MIB", "dot3adAggPortPartnerAdminSystemID"), ("IEEE8023-LAG-MIB", "dot3adAggPortPartnerOperSystemID"), ("IEEE8023-LAG-MIB", "dot3adAggPortPartnerAdminKey"), ("IEEE8023-LAG-MIB", "dot3adAggPortPartnerOperKey"), ("IEEE8023-LAG-MIB", "dot3adAggPortSelectedAggID"), ("IEEE8023-LAG-MIB", "dot3adAggPortAttachedAggID"), ("IEEE8023-LAG-MIB", "dot3adAggPortActorPort"), ("IEEE8023-LAG-MIB", "dot3adAggPortActorPortPriority"), ("IEEE8023-LAG-MIB", "dot3adAggPortPartnerAdminPort"), ("IEEE8023-LAG-MIB", "dot3adAggPortPartnerOperPort"), ("IEEE8023-LAG-MIB", "dot3adAggPortPartnerAdminPortPriority"), ("IEEE8023-LAG-MIB", "dot3adAggPortPartnerOperPortPriority"), ("IEEE8023-LAG-MIB", "dot3adAggPortActorAdminState"), ("IEEE8023-LAG-MIB", "dot3adAggPortActorOperState"), ("IEEE8023-LAG-MIB", "dot3adAggPortPartnerAdminState"), ("IEEE8023-LAG-MIB", "dot3adAggPortPartnerOperState"), ("IEEE8023-LAG-MIB", "dot3adAggPortAggregateOrIndividual"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3adAggPortGroup = dot3adAggPortGroup.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortGroup.setDescription('A collection of objects providing information about every port in an aggregation.')
dot3adAggPortStatsGroup = ObjectGroup((1, 2, 840, 10006, 300, 43, 2, 1, 4)).setObjects(("IEEE8023-LAG-MIB", "dot3adAggPortStatsLACPDUsRx"), ("IEEE8023-LAG-MIB", "dot3adAggPortStatsMarkerPDUsRx"), ("IEEE8023-LAG-MIB", "dot3adAggPortStatsMarkerResponsePDUsRx"), ("IEEE8023-LAG-MIB", "dot3adAggPortStatsUnknownRx"), ("IEEE8023-LAG-MIB", "dot3adAggPortStatsIllegalRx"), ("IEEE8023-LAG-MIB", "dot3adAggPortStatsLACPDUsTx"), ("IEEE8023-LAG-MIB", "dot3adAggPortStatsMarkerPDUsTx"), ("IEEE8023-LAG-MIB", "dot3adAggPortStatsMarkerResponsePDUsTx"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3adAggPortStatsGroup = dot3adAggPortStatsGroup.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortStatsGroup.setDescription('A collection of objects providing information about every port in an aggregation.')
dot3adAggPortDebugGroup = ObjectGroup((1, 2, 840, 10006, 300, 43, 2, 1, 5)).setObjects(("IEEE8023-LAG-MIB", "dot3adAggPortDebugRxState"), ("IEEE8023-LAG-MIB", "dot3adAggPortDebugLastRxTime"), ("IEEE8023-LAG-MIB", "dot3adAggPortDebugMuxState"), ("IEEE8023-LAG-MIB", "dot3adAggPortDebugMuxReason"), ("IEEE8023-LAG-MIB", "dot3adAggPortDebugActorChurnState"), ("IEEE8023-LAG-MIB", "dot3adAggPortDebugPartnerChurnState"), ("IEEE8023-LAG-MIB", "dot3adAggPortDebugActorChurnCount"), ("IEEE8023-LAG-MIB", "dot3adAggPortDebugPartnerChurnCount"), ("IEEE8023-LAG-MIB", "dot3adAggPortDebugActorSyncTransitionCount"), ("IEEE8023-LAG-MIB", "dot3adAggPortDebugPartnerSyncTransitionCount"), ("IEEE8023-LAG-MIB", "dot3adAggPortDebugActorChangeCount"), ("IEEE8023-LAG-MIB", "dot3adAggPortDebugPartnerChangeCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3adAggPortDebugGroup = dot3adAggPortDebugGroup.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugGroup.setDescription('A collection of objects providing debug information about every aggregated port.')
dot3adTablesLastChangedGroup = ObjectGroup((1, 2, 840, 10006, 300, 43, 2, 1, 6)).setObjects(("IEEE8023-LAG-MIB", "dot3adTablesLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3adTablesLastChangedGroup = dot3adTablesLastChangedGroup.setStatus('current')
if mibBuilder.loadTexts: dot3adTablesLastChangedGroup.setDescription('A collection of objects providing information about the time of changes to the configuration of aggregations and their ports.')
dot3adAggPortProtocolDAGroup = ObjectGroup((1, 2, 840, 10006, 300, 43, 2, 1, 7)).setObjects(("IEEE8023-LAG-MIB", "dot3adAggPortProtocolDA"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3adAggPortProtocolDAGroup = dot3adAggPortProtocolDAGroup.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortProtocolDAGroup.setDescription('A collection of objects providing information about the protocol destination address in use for ports in an aggregation.')
dot3adAggNotificationGroup = NotificationGroup((1, 2, 840, 10006, 300, 43, 2, 1, 8)).setObjects(("IEEE8023-LAG-MIB", "dot3adAggLinkUpNotification"), ("IEEE8023-LAG-MIB", "dot3adAggLinkDownNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3adAggNotificationGroup = dot3adAggNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: dot3adAggNotificationGroup.setDescription('A collection of notifications providing information about the aggregation.')
dot3adAggXGroup = ObjectGroup((1, 2, 840, 10006, 300, 43, 2, 1, 9)).setObjects(("IEEE8023-LAG-MIB", "dot3adAggDescription"), ("IEEE8023-LAG-MIB", "dot3adAggName"), ("IEEE8023-LAG-MIB", "dot3adAggAdminState"), ("IEEE8023-LAG-MIB", "dot3adAggOperState"), ("IEEE8023-LAG-MIB", "dot3adAggTimeOfLastOperChange"), ("IEEE8023-LAG-MIB", "dot3adAggDataRate"), ("IEEE8023-LAG-MIB", "dot3adAggFramesTxOK"), ("IEEE8023-LAG-MIB", "dot3adAggFramesRxOK"), ("IEEE8023-LAG-MIB", "dot3adAggLinkUpDownNotificationEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3adAggXGroup = dot3adAggXGroup.setStatus('current')
if mibBuilder.loadTexts: dot3adAggXGroup.setDescription('A collection of extension entries providing information on an aggregation.')
dot3adAggRecommendedGroup = ObjectGroup((1, 2, 840, 10006, 300, 43, 2, 1, 10)).setObjects(("IEEE8023-LAG-MIB", "dot3adAggOctetsTxOK"), ("IEEE8023-LAG-MIB", "dot3adAggOctetsRxOK"), ("IEEE8023-LAG-MIB", "dot3adAggFramesDiscardedOnTx"), ("IEEE8023-LAG-MIB", "dot3adAggFramesDiscardedOnRx"), ("IEEE8023-LAG-MIB", "dot3adAggFramesWithTxErrors"), ("IEEE8023-LAG-MIB", "dot3adAggFramesWithRxErrors"), ("IEEE8023-LAG-MIB", "dot3adAggUnknownProtocolFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3adAggRecommendedGroup = dot3adAggRecommendedGroup.setStatus('current')
if mibBuilder.loadTexts: dot3adAggRecommendedGroup.setDescription('A collection of recommended objects providing information about an aggregation.')
dot3adAggOptionalGroup = ObjectGroup((1, 2, 840, 10006, 300, 43, 2, 1, 11)).setObjects(("IEEE8023-LAG-MIB", "dot3adAggMulticastFramesTxOK"), ("IEEE8023-LAG-MIB", "dot3adAggMulticastFramesRxOK"), ("IEEE8023-LAG-MIB", "dot3adAggBroadcastFramesTxOK"), ("IEEE8023-LAG-MIB", "dot3adAggBroadcastFramesRxOK"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3adAggOptionalGroup = dot3adAggOptionalGroup.setStatus('current')
if mibBuilder.loadTexts: dot3adAggOptionalGroup.setDescription('A collection of optional objects providing information about an aggregation.')
dot3adPerServiceFrameDistGroup = ObjectGroup((1, 2, 840, 10006, 300, 43, 2, 1, 12)).setObjects(("IEEE8023-LAG-MIB", "dot3adAggConversationAdminLinkList"), ("IEEE8023-LAG-MIB", "dot3adAggPortAlgorithm"), ("IEEE8023-LAG-MIB", "dot3adAggPartnerAdminPortAlgorithm"), ("IEEE8023-LAG-MIB", "dot3adAggPartnerAdminPortConversationListDigest"), ("IEEE8023-LAG-MIB", "dot3adAggAdminDiscardWrongConversation"), ("IEEE8023-LAG-MIB", "dot3adAggPartnerAdminConvServiceMappingDigest"), ("IEEE8023-LAG-MIB", "dot3adAggAdminServiceConversationServiceIDList"), ("IEEE8023-LAG-MIB", "dot3adAggPortLinkNumberId"), ("IEEE8023-LAG-MIB", "dot3adAggPortPartnerAdminLinkNumberId"), ("IEEE8023-LAG-MIB", "dot3adAggPortOperConversationPasses"), ("IEEE8023-LAG-MIB", "dot3adAggPortOperConversationCollected"), ("IEEE8023-LAG-MIB", "dot3adAggPortWTRTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3adPerServiceFrameDistGroup = dot3adPerServiceFrameDistGroup.setStatus('current')
if mibBuilder.loadTexts: dot3adPerServiceFrameDistGroup.setDescription('A collection of objects providing information about Per-Service Frame Distribution.')
dot3adAggPortDebugXGroup = ObjectGroup((1, 2, 840, 10006, 300, 43, 2, 1, 13)).setObjects(("IEEE8023-LAG-MIB", "dot3adAggPortDebugActorCDSChurnState"), ("IEEE8023-LAG-MIB", "dot3adAggPortDebugPartnerCDSChurnState"), ("IEEE8023-LAG-MIB", "dot3adAggPortDebugActorCDSChurnCount"), ("IEEE8023-LAG-MIB", "dot3adAggPortDebugPartnerCDSChurnCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3adAggPortDebugXGroup = dot3adAggPortDebugXGroup.setStatus('current')
if mibBuilder.loadTexts: dot3adAggPortDebugXGroup.setDescription('A collection of objects extending aggregator port debug.')
dot3adDrniGroup = ObjectGroup((1, 2, 840, 10006, 300, 43, 2, 1, 14)).setObjects(("IEEE8023-LAG-MIB", "dot3adDrniDescription"), ("IEEE8023-LAG-MIB", "dot3adDrniName"), ("IEEE8023-LAG-MIB", "dot3adDrniPortalAddr"), ("IEEE8023-LAG-MIB", "dot3adDrniPortalPriority"), ("IEEE8023-LAG-MIB", "dot3adDrniThreePortalSystem"), ("IEEE8023-LAG-MIB", "dot3adDrniPortalSystemNumber"), ("IEEE8023-LAG-MIB", "dot3adDrniIntraPortalLinkList"), ("IEEE8023-LAG-MIB", "dot3adDrniAggregator"), ("IEEE8023-LAG-MIB", "dot3adDrniNeighborAdminConvGatewayListDigest"), ("IEEE8023-LAG-MIB", "dot3adDrniNeighborAdminConvPortListDigest"), ("IEEE8023-LAG-MIB", "dot3adDrniGatewayAlgorithm"), ("IEEE8023-LAG-MIB", "dot3adDrniNeighborAdminGatewayAlgorithm"), ("IEEE8023-LAG-MIB", "dot3adDrniNeighborAdminPortAlgorithm"), ("IEEE8023-LAG-MIB", "dot3adDrniNeighborAdminDRCPState"), ("IEEE8023-LAG-MIB", "dot3adDrniEncapsulationMethod"), ("IEEE8023-LAG-MIB", "dot3adDrniDRPortConversationPasses"), ("IEEE8023-LAG-MIB", "dot3adDrniDRGatewayConversationPasses"), ("IEEE8023-LAG-MIB", "dot3adDrniConvAdminGatewayList"), ("IEEE8023-LAG-MIB", "dot3adDrniIPLFrameIdValue"), ("IEEE8023-LAG-MIB", "dot3adDrniNetFrameIdValue"), ("IEEE8023-LAG-MIB", "dot3adDrniPSI"), ("IEEE8023-LAG-MIB", "dot3adDrniPortConversationControl"), ("IEEE8023-LAG-MIB", "dot3adDrniIntraPortalPortProtocolDA"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3adDrniGroup = dot3adDrniGroup.setStatus('current')
if mibBuilder.loadTexts: dot3adDrniGroup.setDescription('A collection of objects providing information about DRNI.')
dot3adIPPGroup = ObjectGroup((1, 2, 840, 10006, 300, 43, 2, 1, 15)).setObjects(("IEEE8023-LAG-MIB", "dot3adIPPPortConversationPasses"), ("IEEE8023-LAG-MIB", "dot3adIPPGatewayConversationDirection"), ("IEEE8023-LAG-MIB", "dot3adIPPAdminState"), ("IEEE8023-LAG-MIB", "dot3adIPPOperState"), ("IEEE8023-LAG-MIB", "dot3adIPPTimeOfLastOperChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3adIPPGroup = dot3adIPPGroup.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPGroup.setDescription('A collection of objects providing IPP information.')
dot3adIPPStatsGroup = ObjectGroup((1, 2, 840, 10006, 300, 43, 2, 1, 16)).setObjects(("IEEE8023-LAG-MIB", "dot3adIPPStatsDRCPDUsRx"), ("IEEE8023-LAG-MIB", "dot3adIPPStatsIllegalRx"), ("IEEE8023-LAG-MIB", "dot3adIPPStatsDRCPDUsTx"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3adIPPStatsGroup = dot3adIPPStatsGroup.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPStatsGroup.setDescription('A collection of objects providing IPP statistics information.')
dot3adIPPDebugGroup = ObjectGroup((1, 2, 840, 10006, 300, 43, 2, 1, 17)).setObjects(("IEEE8023-LAG-MIB", "dot3adIPPDebugDRCPRxState"), ("IEEE8023-LAG-MIB", "dot3adIPPDebugLastRxTime"), ("IEEE8023-LAG-MIB", "dot3adIPPDebugDifferPortalReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3adIPPDebugGroup = dot3adIPPDebugGroup.setStatus('current')
if mibBuilder.loadTexts: dot3adIPPDebugGroup.setDescription('A collection of objects providing IPP debug information.')
dot3adAggCompliance = ModuleCompliance((1, 2, 840, 10006, 300, 43, 2, 2, 1)).setObjects(("IEEE8023-LAG-MIB", "dot3adAggGroup"), ("IEEE8023-LAG-MIB", "dot3adAggPortGroup"), ("IEEE8023-LAG-MIB", "dot3adAggNotificationGroup"), ("IEEE8023-LAG-MIB", "dot3adTablesLastChangedGroup"), ("IEEE8023-LAG-MIB", "dot3adAggPortListGroup"), ("IEEE8023-LAG-MIB", "dot3adAggXGroup"), ("IEEE8023-LAG-MIB", "dot3adAggPortStatsGroup"), ("IEEE8023-LAG-MIB", "dot3adAggPortDebugGroup"), ("IEEE8023-LAG-MIB", "dot3adAggPortDebugXGroup"), ("IEEE8023-LAG-MIB", "dot3adAggPortProtocolDAGroup"), ("IEEE8023-LAG-MIB", "dot3adAggOptionalGroup"), ("IEEE8023-LAG-MIB", "dot3adAggRecommendedGroup"), ("IEEE8023-LAG-MIB", "dot3adPerServiceFrameDistGroup"), ("IEEE8023-LAG-MIB", "dot3adDrniGroup"), ("IEEE8023-LAG-MIB", "dot3adIPPGroup"), ("IEEE8023-LAG-MIB", "dot3adIPPStatsGroup"), ("IEEE8023-LAG-MIB", "dot3adIPPDebugGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3adAggCompliance = dot3adAggCompliance.setStatus('current')
if mibBuilder.loadTexts: dot3adAggCompliance.setDescription('The compliance statement for device support of Link Aggregation.')
mibBuilder.exportSymbols("IEEE8023-LAG-MIB", DrniConvAdminGatewayList=DrniConvAdminGatewayList, dot3adAggConversationAdminLinkList=dot3adAggConversationAdminLinkList, dot3adDrniNeighborAdminPortAlgorithm=dot3adDrniNeighborAdminPortAlgorithm, dot3adAggPortPartnerOperSystemPriority=dot3adAggPortPartnerOperSystemPriority, dot3adAggPortDebugPartnerSyncTransitionCount=dot3adAggPortDebugPartnerSyncTransitionCount, dot3adAggPortPartnerAdminPort=dot3adAggPortPartnerAdminPort, dot3adDrniNeighborAdminConvPortListDigest=dot3adDrniNeighborAdminConvPortListDigest, dot3adAggPortDebugMuxReason=dot3adAggPortDebugMuxReason, dot3adDrniIPLEncapMapTable=dot3adDrniIPLEncapMapTable, dot3adAggPortDebugPartnerChangeCount=dot3adAggPortDebugPartnerChangeCount, dot3adAggPortStatsMarkerPDUsTx=dot3adAggPortStatsMarkerPDUsTx, dot3adDrniPortConversationControl=dot3adDrniPortConversationControl, dot3adAggPortDebugActorSyncTransitionCount=dot3adAggPortDebugActorSyncTransitionCount, ServiceIdList=ServiceIdList, dot3adDrniNetEncapMapTable=dot3adDrniNetEncapMapTable, dot3adAggPortStatsIllegalRx=dot3adAggPortStatsIllegalRx, dot3adDrniPortalAddr=dot3adDrniPortalAddr, dot3adAggDataRate=dot3adAggDataRate, dot3adDrniNeighborAdminGatewayAlgorithm=dot3adDrniNeighborAdminGatewayAlgorithm, dot3adIPPDebugTable=dot3adIPPDebugTable, dot3adDrniTable=dot3adDrniTable, dot3adIPPDebugDifferPortalReason=dot3adIPPDebugDifferPortalReason, dot3adAggPortActorOperKey=dot3adAggPortActorOperKey, dot3adAggMulticastFramesRxOK=dot3adAggMulticastFramesRxOK, dot3adIPPPortConversationPasses=dot3adIPPPortConversationPasses, dot3adAggPortDebugXTable=dot3adAggPortDebugXTable, dot3adAggPortPartnerAdminSystemID=dot3adAggPortPartnerAdminSystemID, dot3adAggPortPartnerOperPort=dot3adAggPortPartnerOperPort, dot3adIPPStatsEntry=dot3adIPPStatsEntry, dot3adDrniEntry=dot3adDrniEntry, dot3adDrniIntraPortalLinkList=dot3adDrniIntraPortalLinkList, dot3adAggPortPartnerOperSystemID=dot3adAggPortPartnerOperSystemID, dot3adDrniPSI=dot3adDrniPSI, dot3adAggCompliance=dot3adAggCompliance, dot3adDrniDRPortConversationPasses=dot3adDrniDRPortConversationPasses, dot3adAggOptionalGroup=dot3adAggOptionalGroup, lagMIBObjects=lagMIBObjects, dot3adAggPortAggregateOrIndividual=dot3adAggPortAggregateOrIndividual, dot3adAggLinkUpDownNotificationEnable=dot3adAggLinkUpDownNotificationEnable, dot3adAggPortStatsGroup=dot3adAggPortStatsGroup, dot3adDrniIPLEncapMapEntry=dot3adDrniIPLEncapMapEntry, dot3adAggPortPartnerOperState=dot3adAggPortPartnerOperState, dot3adTablesLastChanged=dot3adTablesLastChanged, AggState=AggState, dot3adAggCollectorMaxDelay=dot3adAggCollectorMaxDelay, dot3adAggCompliances=dot3adAggCompliances, dot3adAggPort=dot3adAggPort, dot3adAggFramesTxOK=dot3adAggFramesTxOK, dot3adAggPortActorPortPriority=dot3adAggPortActorPortPriority, dot3adDrniNetFrameIdValue=dot3adDrniNetFrameIdValue, dot3adDrniNeighborAdminDRCPState=dot3adDrniNeighborAdminDRCPState, dot3adAggPortOperConversationPasses=dot3adAggPortOperConversationPasses, PortalLinkList=PortalLinkList, dot3adDrniIntraPortalPortProtocolDA=dot3adDrniIntraPortalPortProtocolDA, dot3adDrniEncapsulationMethod=dot3adDrniEncapsulationMethod, dot3adAggBroadcastFramesTxOK=dot3adAggBroadcastFramesTxOK, dot3adAggPortDebugActorCDSChurnCount=dot3adAggPortDebugActorCDSChurnCount, dot3adAggPortListPorts=dot3adAggPortListPorts, DrcpState=DrcpState, dot3adAggPortXTable=dot3adAggPortXTable, dot3adAggPortGroup=dot3adAggPortGroup, dot3adIPPDebugLastRxTime=dot3adIPPDebugLastRxTime, dot3adAggPortDebugRxState=dot3adAggPortDebugRxState, dot3adAggActorOperKey=dot3adAggActorOperKey, dot3adAggPortStatsTable=dot3adAggPortStatsTable, dot3adDrniPortalPriority=dot3adDrniPortalPriority, dot3adAggPortActorAdminState=dot3adAggPortActorAdminState, dot3adDrniNetEncapMapEntry=dot3adDrniNetEncapMapEntry, dot3adIPPStatsTable=dot3adIPPStatsTable, dot3adAggFramesDiscardedOnTx=dot3adAggFramesDiscardedOnTx, dot3adAggActorSystemPriority=dot3adAggActorSystemPriority, dot3adAggPortDebugActorChurnState=dot3adAggPortDebugActorChurnState, dot3adAggPortOperConversationCollected=dot3adAggPortOperConversationCollected, dot3adAggPortDebugActorCDSChurnState=dot3adAggPortDebugActorCDSChurnState, dot3adAggPortStatsMarkerResponsePDUsRx=dot3adAggPortStatsMarkerResponsePDUsRx, dot3adAggPortPartnerOperPortPriority=dot3adAggPortPartnerOperPortPriority, dot3adAggPortPartnerAdminSystemPriority=dot3adAggPortPartnerAdminSystemPriority, dot3adAggGroup=dot3adAggGroup, dot3adAggBroadcastFramesRxOK=dot3adAggBroadcastFramesRxOK, dot3adIPP=dot3adIPP, dot3adAggXTable=dot3adAggXTable, dot3adAggPortDebugPartnerCDSChurnState=dot3adAggPortDebugPartnerCDSChurnState, dot3adIPPGroup=dot3adIPPGroup, dot3adAggOctetsTxOK=dot3adAggOctetsTxOK, dot3adAggPortActorAdminKey=dot3adAggPortActorAdminKey, dot3adAggPortStatsUnknownRx=dot3adAggPortStatsUnknownRx, dot3adAggPortListGroup=dot3adAggPortListGroup, dot3adAggPortListEntry=dot3adAggPortListEntry, dot3adAggFramesWithTxErrors=dot3adAggFramesWithTxErrors, dot3adAggAdminDiscardWrongConversation=dot3adAggAdminDiscardWrongConversation, dot3adIPPStatsDRCPDUsRx=dot3adIPPStatsDRCPDUsRx, dot3adAggUnknownProtocolFrames=dot3adAggUnknownProtocolFrames, dot3adDrniName=dot3adDrniName, dot3adAggActorSystemID=dot3adAggActorSystemID, PYSNMP_MODULE_ID=lagMIB, dot3adAggPortTable=dot3adAggPortTable, dot3adDrniNeighborAdminConvGatewayListDigest=dot3adDrniNeighborAdminConvGatewayListDigest, dot3adAggPortStatsLACPDUsRx=dot3adAggPortStatsLACPDUsRx, dot3adAggConversationAdminLinkTable=dot3adAggConversationAdminLinkTable, dot3adIPPAdminState=dot3adIPPAdminState, dot3adAggAdminServiceConversationMapId=dot3adAggAdminServiceConversationMapId, dot3adAggPortDebugXEntry=dot3adAggPortDebugXEntry, dot3adIPPStatsDRCPDUsTx=dot3adIPPStatsDRCPDUsTx, dot3adTablesLastChangedGroup=dot3adTablesLastChangedGroup, dot3adAggConformance=dot3adAggConformance, dot3adAggPartnerSystemID=dot3adAggPartnerSystemID, dot3adAggPortStatsMarkerPDUsRx=dot3adAggPortStatsMarkerPDUsRx, dot3adAggPortProtocolDAGroup=dot3adAggPortProtocolDAGroup, dot3adAgg=dot3adAgg, dot3adAggPortPartnerAdminLinkNumberId=dot3adAggPortPartnerAdminLinkNumberId, dot3adAggTable=dot3adAggTable, dot3adAggAdminState=dot3adAggAdminState, dot3adAggPortEntry=dot3adAggPortEntry, dot3adAggAdminServiceConversationServiceIDList=dot3adAggAdminServiceConversationServiceIDList, dot3adAggPortDebugGroup=dot3adAggPortDebugGroup, dot3adDrniConvAdminGatewayList=dot3adDrniConvAdminGatewayList, dot3adAggPartnerSystemPriority=dot3adAggPartnerSystemPriority, dot3adAggMACAddress=dot3adAggMACAddress, dot3adPerServiceFrameDistGroup=dot3adPerServiceFrameDistGroup, dot3adAggPortSecondXTable=dot3adAggPortSecondXTable, dot3adAggPortListTable=dot3adAggPortListTable, dot3adDrniIndex=dot3adDrniIndex, dot3adAggPartnerAdminConvServiceMappingDigest=dot3adAggPartnerAdminConvServiceMappingDigest, dot3adDrniDescription=dot3adDrniDescription, dot3adDrniGroup=dot3adDrniGroup, dot3adAggPortActorPort=dot3adAggPortActorPort, dot3adAggPortActorOperState=dot3adAggPortActorOperState, dot3adDrniConvAdminGatewayTable=dot3adDrniConvAdminGatewayTable, dot3adIPPStatsIllegalRx=dot3adIPPStatsIllegalRx, lagMIBNotifications=lagMIBNotifications, dot3adDrniDRGatewayConversationPasses=dot3adDrniDRGatewayConversationPasses, dot3adIPPOperState=dot3adIPPOperState, dot3adAggPortActorSystemPriority=dot3adAggPortActorSystemPriority, dot3adIPPDebugEntry=dot3adIPPDebugEntry, dot3adAggFramesWithRxErrors=dot3adAggFramesWithRxErrors, dot3adAggNotificationGroup=dot3adAggNotificationGroup, dot3adAggAggregateOrIndividual=dot3adAggAggregateOrIndividual, dot3adAggPortDebugPartnerChurnCount=dot3adAggPortDebugPartnerChurnCount, dot3adAggAdminServiceConversationMapEntry=dot3adAggAdminServiceConversationMapEntry, dot3adAggPortIndex=dot3adAggPortIndex, dot3adDrniGatewayConversationID=dot3adDrniGatewayConversationID, lagMIB=lagMIB, dot3adAggPortAlgorithm=dot3adAggPortAlgorithm, dot3adAggPortPartnerOperKey=dot3adAggPortPartnerOperKey, dot3adAggName=dot3adAggName, dot3adAggFramesRxOK=dot3adAggFramesRxOK, dot3adIPPAttributeEntry=dot3adIPPAttributeEntry, dot3adAggConversationAdminLinkEntry=dot3adAggConversationAdminLinkEntry, dot3adAggPortPartnerAdminPortPriority=dot3adAggPortPartnerAdminPortPriority, dot3adAggPortSecondXEntry=dot3adAggPortSecondXEntry, dot3adAggConversationAdminLinkId=dot3adAggConversationAdminLinkId, dot3adAggActorAdminKey=dot3adAggActorAdminKey, dot3adDrniIPLFrameIdValue=dot3adDrniIPLFrameIdValue, dot3adAggOctetsRxOK=dot3adAggOctetsRxOK, dot3adIPPGatewayConversationDirection=dot3adIPPGatewayConversationDirection, dot3adAggXGroup=dot3adAggXGroup, dot3adAggPortActorSystemID=dot3adAggPortActorSystemID, LacpKey=LacpKey, dot3adAggPartnerAdminPortAlgorithm=dot3adAggPartnerAdminPortAlgorithm, dot3adDrni=dot3adDrni, dot3adAggIndex=dot3adAggIndex, LacpState=LacpState, dot3adAggPortDebugLastRxTime=dot3adAggPortDebugLastRxTime, dot3adAggDescription=dot3adAggDescription, dot3adDrniGatewayAlgorithm=dot3adDrniGatewayAlgorithm, dot3adAggPortDebugMuxState=dot3adAggPortDebugMuxState, dot3adAggPortSelectedAggID=dot3adAggPortSelectedAggID, dot3adAggTimeOfLastOperChange=dot3adAggTimeOfLastOperChange, dot3adAggPortAttachedAggID=dot3adAggPortAttachedAggID, dot3adAggOperState=dot3adAggOperState, dot3adAggPortWTRTime=dot3adAggPortWTRTime, dot3adAggPortDebugPartnerCDSChurnCount=dot3adAggPortDebugPartnerCDSChurnCount, dot3adAggPortPartnerAdminState=dot3adAggPortPartnerAdminState, dot3adAggXEntry=dot3adAggXEntry, dot3adAggPartnerAdminPortConversationListDigest=dot3adAggPartnerAdminPortConversationListDigest, dot3adIPPStatsGroup=dot3adIPPStatsGroup, dot3adAggPortProtocolDA=dot3adAggPortProtocolDA, dot3adAggPartnerOperKey=dot3adAggPartnerOperKey, dot3adIPPAttributeTable=dot3adIPPAttributeTable, dot3adAggPortStatsMarkerResponsePDUsTx=dot3adAggPortStatsMarkerResponsePDUsTx, dot3adDrniAggregator=dot3adDrniAggregator, dot3adAggPortDebugEntry=dot3adAggPortDebugEntry, dot3adAggPortStatsLACPDUsTx=dot3adAggPortStatsLACPDUsTx, dot3adAggPortXEntry=dot3adAggPortXEntry, dot3adAggPortDebugPartnerChurnState=dot3adAggPortDebugPartnerChurnState, dot3adAggPortDebugActorChurnCount=dot3adAggPortDebugActorChurnCount, dot3adAggMulticastFramesTxOK=dot3adAggMulticastFramesTxOK, dot3adAggPortDebugActorChangeCount=dot3adAggPortDebugActorChangeCount, dot3adAggFramesDiscardedOnRx=dot3adAggFramesDiscardedOnRx, dot3adAggPortLinkNumberId=dot3adAggPortLinkNumberId, dot3adIPPDebugGroup=dot3adIPPDebugGroup, dot3adIPPTimeOfLastOperChange=dot3adIPPTimeOfLastOperChange, dot3adAggAdminServiceConversationMapTable=dot3adAggAdminServiceConversationMapTable, dot3adAggLinkDownNotification=dot3adAggLinkDownNotification, dot3adIPPDebugDRCPRxState=dot3adIPPDebugDRCPRxState, dot3adAggGroups=dot3adAggGroups, dot3adDrniThreePortalSystem=dot3adDrniThreePortalSystem, dot3adDrniConvAdminGatewayEntry=dot3adDrniConvAdminGatewayEntry, dot3adAggPortPartnerAdminKey=dot3adAggPortPartnerAdminKey, dot3adAggRecommendedGroup=dot3adAggRecommendedGroup, ChurnState=ChurnState, dot3adAggPortDebugTable=dot3adAggPortDebugTable, dot3adAggLinkUpNotification=dot3adAggLinkUpNotification, dot3adAggPortStatsEntry=dot3adAggPortStatsEntry, dot3adIPPIndex=dot3adIPPIndex, dot3adDrniPortalSystemNumber=dot3adDrniPortalSystemNumber, dot3adAggEntry=dot3adAggEntry, dot3adAggPortDebugXGroup=dot3adAggPortDebugXGroup)
