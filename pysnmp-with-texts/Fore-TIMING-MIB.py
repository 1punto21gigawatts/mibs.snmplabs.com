#
# PySNMP MIB module Fore-TIMING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Fore-TIMING-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:17:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
hardware, = mibBuilder.importSymbols("Fore-Common-MIB", "hardware")
trapLogIndex, = mibBuilder.importSymbols("Fore-TrapLog-MIB", "trapLogIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Gauge32, Bits, Unsigned32, ModuleIdentity, ObjectIdentity, IpAddress, Counter64, TimeTicks, NotificationType, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Gauge32", "Bits", "Unsigned32", "ModuleIdentity", "ObjectIdentity", "IpAddress", "Counter64", "TimeTicks", "NotificationType", "iso", "MibIdentifier")
TimeInterval, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TimeInterval", "DisplayString", "TextualConvention")
tcmGroup = ModuleIdentity((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11))
if mibBuilder.loadTexts: tcmGroup.setLastUpdated('9911050000Z')
if mibBuilder.loadTexts: tcmGroup.setOrganization('FORE')
if mibBuilder.loadTexts: tcmGroup.setContactInfo(' Postal: FORE Systems Inc. 1000 FORE Drive Warrendale, PA 15086-7502 Tel: +1 724 742 6900 Email: nm_mibs@fore.com Web: http://www.fore.com')
if mibBuilder.loadTexts: tcmGroup.setDescription('write something interesting here')
class TcmTimingMode(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("modeFreeRun", 1), ("modeExternal", 2), ("modeLine", 3))

class TcmReferenceSource(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("freerun", 1), ("bits1", 2), ("bits2", 3), ("switchPrimary", 4), ("switchSecondary", 5))

class DerivedReferenceSource(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(4, 5))
    namedValues = NamedValues(("switchPrimary", 4), ("switchSecondary", 5))

tcmTable = MibTable((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 1), )
if mibBuilder.loadTexts: tcmTable.setStatus('current')
if mibBuilder.loadTexts: tcmTable.setDescription('This table contains the hardware information for the Timing Control Module (TCM) s.')
tcmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 1, 1), ).setIndexNames((0, "Fore-TIMING-MIB", "tcmIndex"))
if mibBuilder.loadTexts: tcmEntry.setStatus('current')
if mibBuilder.loadTexts: tcmEntry.setDescription('This table entry contains the hardware information for a single Timing Control Module (TCM) .')
tcmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: tcmIndex.setStatus('current')
if mibBuilder.loadTexts: tcmIndex.setDescription('This is the index for this Timing Control Module (TCM) .')
tcmHwType = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tcmDs1Stratum3E", 1), ("tcmE1Stratum3E", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmHwType.setStatus('current')
if mibBuilder.loadTexts: tcmHwType.setDescription('This is the type for this Timing Control Module (TCM) .')
tcmHwVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmHwVersion.setStatus('current')
if mibBuilder.loadTexts: tcmHwVersion.setDescription('This is the version for this Timing Control Module (TCM) .')
tcmPllStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("pllFreeRun", 1), ("pllInitRefQual", 2), ("pllLocked", 3), ("pllAcquire", 4), ("pllHoldover", 5), ("pllRefQualFail", 6), ("pllQualifyingRef", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmPllStatus.setStatus('current')
if mibBuilder.loadTexts: tcmPllStatus.setDescription('This is the phase-locked loop (PLL) status for this Timing Control Module (TCM) .')
tcmOperationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmOperationStatus.setStatus('current')
if mibBuilder.loadTexts: tcmOperationStatus.setDescription('This is the operation status of the clock output for this Timing Control Module (TCM). The status is enabled if the switch is configured to use TCM for timing and disabled otherwise.')
tcmCurrentTimingRef = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("refLocal", 1), ("refPrimary", 2), ("refSecondary", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCurrentTimingRef.setStatus('current')
if mibBuilder.loadTexts: tcmCurrentTimingRef.setDescription('This is the current timing reference in use for this Timing Control Module (TCM) .')
tcmRequestedTimingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 1, 1, 7), TcmTimingMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcmRequestedTimingMode.setStatus('current')
if mibBuilder.loadTexts: tcmRequestedTimingMode.setDescription('This is the timing reference requested to be used for this Timing Control Module (TCM) .')
tcmOperatingTimingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 1, 1, 8), TcmTimingMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmOperatingTimingMode.setStatus('current')
if mibBuilder.loadTexts: tcmOperatingTimingMode.setDescription('This is the operating timing mode, which can be different from the requested timing mode if mode failover is enabled.')
tcmModeFailover = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcmModeFailover.setStatus('current')
if mibBuilder.loadTexts: tcmModeFailover.setDescription('This is the modefailover that causes the Timing Control Module (TCM) to automatically switch between timing modes (for example external to line) if it is enabled.')
tcmPrimaryRefSource = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 1, 1, 10), TcmReferenceSource()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmPrimaryRefSource.setStatus('current')
if mibBuilder.loadTexts: tcmPrimaryRefSource.setDescription('This is the primary timing reference source for this Timing Control Module (TCM) .')
tcmSecondaryRefSource = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 1, 1, 11), TcmReferenceSource()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmSecondaryRefSource.setStatus('current')
if mibBuilder.loadTexts: tcmSecondaryRefSource.setDescription('This is the secondary timing reference source for this Timing Control Module (TCM) .')
tcmBitsFramingFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("d4", 1), ("esf", 2), ("mfas", 3), ("mfascrc4", 4), ("fas", 5), ("fascrc4", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcmBitsFramingFormat.setStatus('current')
if mibBuilder.loadTexts: tcmBitsFramingFormat.setDescription('This is the framing format of the BITS interface for this Timing Control Module (TCM) .')
tcmBitsCodingFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ami", 1), ("b8zs", 2), ("hdb3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcmBitsCodingFormat.setStatus('current')
if mibBuilder.loadTexts: tcmBitsCodingFormat.setDescription('This is the coding format of the BITS interface for this Timing Control Module (TCM) .')
tcmBitsOutputLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("tcmDs1Level0-6", 1), ("tcmDs1Level1-2", 2), ("tcmDs1Level1-8", 3), ("tcmDs1Level2-4", 4), ("tcmDs1Level3-0", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcmBitsOutputLevel.setStatus('current')
if mibBuilder.loadTexts: tcmBitsOutputLevel.setDescription('This is the output level (dB) of the DS1 BITS interface for this Timing Control Module (TCM) .')
tcmRevertiveSwitching = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcmRevertiveSwitching.setStatus('current')
if mibBuilder.loadTexts: tcmRevertiveSwitching.setDescription('This is the status of the revertive switching for timing sources on this Timing Control Module (TCM) .')
tcmRevertiveDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 1, 1, 16), TimeInterval()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcmRevertiveDelay.setStatus('current')
if mibBuilder.loadTexts: tcmRevertiveDelay.setDescription('This is the amount of time after the restoration of the primary timing reference before the Timing Control Module (TCM) will be instructed to return to the primary timing reference. This value is truncated to whole seconds.')
tcmFailoverDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 1, 1, 17), TimeInterval()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcmFailoverDelay.setStatus('current')
if mibBuilder.loadTexts: tcmFailoverDelay.setDescription('This is the amount of time after the failure of a timing reference before the Timing Control Module (TCM) will be instructed to switch to the next available timing reference. This value is truncated to whole seconds.')
tcmReferenceTable = MibTable((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 2), )
if mibBuilder.loadTexts: tcmReferenceTable.setStatus('current')
if mibBuilder.loadTexts: tcmReferenceTable.setDescription('This table contains the timing reference source information for the Timing Control Module (TCM) .')
tcmReferenceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 2, 1), ).setIndexNames((0, "Fore-TIMING-MIB", "tcmIndex"), (0, "Fore-TIMING-MIB", "tcmRefSource"))
if mibBuilder.loadTexts: tcmReferenceEntry.setStatus('current')
if mibBuilder.loadTexts: tcmReferenceEntry.setDescription('This table entry contains the timing reference source information for a single Timing Control Module (TCM) .')
tcmRefSource = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 2, 1, 1), TcmReferenceSource())
if mibBuilder.loadTexts: tcmRefSource.setStatus('current')
if mibBuilder.loadTexts: tcmRefSource.setDescription('This is the timing reference source index for the Timing Control Module (TCM) .')
tcmRefSourceText = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmRefSourceText.setStatus('current')
if mibBuilder.loadTexts: tcmRefSourceText.setDescription('This is a textual description of the timing reference source that is provided to the Timing Control Module (TCM).')
tcmRefSourceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("available", 1), ("unavailable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmRefSourceStatus.setStatus('current')
if mibBuilder.loadTexts: tcmRefSourceStatus.setDescription('This is the status of the timing reference source that is provided to the Timing Control Module (TCM).')
tcmRefSourceAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcmRefSourceAdminStatus.setStatus('current')
if mibBuilder.loadTexts: tcmRefSourceAdminStatus.setDescription('This is the admin status of the timing reference source that is provided to the Timing Control Module (TCM).')
tcmRefSourceQualStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("fail", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmRefSourceQualStatus.setStatus('current')
if mibBuilder.loadTexts: tcmRefSourceQualStatus.setDescription('This is the RefQual status of the timing reference source that is provided to the Timing Control Module (TCM) .')
tcmTxBits1RefSource = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 3), DerivedReferenceSource()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcmTxBits1RefSource.setStatus('current')
if mibBuilder.loadTexts: tcmTxBits1RefSource.setDescription('This object is the timing source that is used to derive DS1 or E1 signal transmitted out on the BITS1 interface.')
tcmTxBits2RefSource = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 4), DerivedReferenceSource()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcmTxBits2RefSource.setStatus('current')
if mibBuilder.loadTexts: tcmTxBits2RefSource.setDescription('This object is the timing source that is used to derive DS1 or E1 signal transmitted out on the BITS2 interface.')
tcmTxBitsOperMode = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("automatic", 1), ("thresholdAIS", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcmTxBitsOperMode.setStatus('current')
if mibBuilder.loadTexts: tcmTxBitsOperMode.setDescription('This object refers to the mode of operation for the derived DS1 or E1 outputs. In thresholdAIS mode, AIS is transmitted on the derived DS1 or E1 signal when the transmit reference source becomes unacceptable. In automatic mode, synchronization status messages are passed through on the derived DS1 or E1 output if SSM Automatic Reference Switching is enabled and the DS1 or E1 frame format supports SSM. Otherwise, AIS is transmitted when the reference becomes unacceptable.')
tcmTimingSourceChange = NotificationType((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 0, 1)).setObjects(("Fore-TIMING-MIB", "tcmIndex"), ("Fore-TIMING-MIB", "tcmCurrentTimingRef"), ("Fore-TIMING-MIB", "tcmRefSource"), ("Fore-TrapLog-MIB", "trapLogIndex"))
if mibBuilder.loadTexts: tcmTimingSourceChange.setStatus('current')
if mibBuilder.loadTexts: tcmTimingSourceChange.setDescription('This trap is generated whenever the Timing Control Module (TCM) timing source (tcmCurrentTimingRef) is changed either manually or by the system due to failure detection.')
tcmTimingSourceFailed = NotificationType((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 11, 0, 2)).setObjects(("Fore-TIMING-MIB", "tcmIndex"), ("Fore-TIMING-MIB", "tcmCurrentTimingRef"), ("Fore-TIMING-MIB", "tcmRefSource"), ("Fore-TrapLog-MIB", "trapLogIndex"))
if mibBuilder.loadTexts: tcmTimingSourceFailed.setStatus('current')
if mibBuilder.loadTexts: tcmTimingSourceFailed.setDescription('This trap is generated whenever the Timing Control Module (TCM) timing source (tcmCurrentTimingRef) fails.')
mibBuilder.exportSymbols("Fore-TIMING-MIB", PYSNMP_MODULE_ID=tcmGroup, tcmRefSourceText=tcmRefSourceText, tcmHwVersion=tcmHwVersion, tcmTimingSourceFailed=tcmTimingSourceFailed, tcmTxBitsOperMode=tcmTxBitsOperMode, TcmReferenceSource=TcmReferenceSource, tcmBitsOutputLevel=tcmBitsOutputLevel, tcmRevertiveDelay=tcmRevertiveDelay, tcmIndex=tcmIndex, tcmTable=tcmTable, tcmSecondaryRefSource=tcmSecondaryRefSource, tcmBitsCodingFormat=tcmBitsCodingFormat, tcmCurrentTimingRef=tcmCurrentTimingRef, tcmBitsFramingFormat=tcmBitsFramingFormat, tcmRequestedTimingMode=tcmRequestedTimingMode, tcmPrimaryRefSource=tcmPrimaryRefSource, tcmModeFailover=tcmModeFailover, tcmRefSourceStatus=tcmRefSourceStatus, tcmRefSource=tcmRefSource, tcmEntry=tcmEntry, tcmOperationStatus=tcmOperationStatus, tcmRefSourceQualStatus=tcmRefSourceQualStatus, tcmFailoverDelay=tcmFailoverDelay, tcmPllStatus=tcmPllStatus, tcmOperatingTimingMode=tcmOperatingTimingMode, tcmTxBits2RefSource=tcmTxBits2RefSource, tcmTimingSourceChange=tcmTimingSourceChange, tcmRefSourceAdminStatus=tcmRefSourceAdminStatus, DerivedReferenceSource=DerivedReferenceSource, tcmReferenceEntry=tcmReferenceEntry, tcmGroup=tcmGroup, tcmHwType=tcmHwType, tcmRevertiveSwitching=tcmRevertiveSwitching, tcmTxBits1RefSource=tcmTxBits1RefSource, TcmTimingMode=TcmTimingMode, tcmReferenceTable=tcmReferenceTable)
