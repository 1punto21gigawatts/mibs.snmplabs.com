#
# PySNMP MIB module CISCO-SIBU-FLASH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SIBU-FLASH-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:11:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, MibIdentifier, NotificationType, ModuleIdentity, Gauge32, Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32, IpAddress, Bits, Integer32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibIdentifier", "NotificationType", "ModuleIdentity", "Gauge32", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32", "IpAddress", "Bits", "Integer32", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoSibuFlashMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 45))
ciscoSibuFlashMIB.setRevisions(('1998-10-23 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoSibuFlashMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoSibuFlashMIB.setLastUpdated('9810230000Z')
if mibBuilder.loadTexts: ciscoSibuFlashMIB.setOrganization('Cisco Systems Inc.')
if mibBuilder.loadTexts: ciscoSibuFlashMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-sibu@cisco.com')
if mibBuilder.loadTexts: ciscoSibuFlashMIB.setDescription('The MIB module that provides a simple mechanism to support firmware upgrade on Cisco low end devices.')
ciscoSibuFlashMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 45, 1))
csfUpgrade = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 45, 1, 1))
csfUpgradeFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 45, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csfUpgradeFirmwareVersion.setStatus('current')
if mibBuilder.loadTexts: csfUpgradeFirmwareVersion.setDescription("Returns the version number of the device system firmware residing in flash. The string has a 'V1.2.3' format.")
csfUpgradeFlashSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 45, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: csfUpgradeFlashSize.setStatus('current')
if mibBuilder.loadTexts: csfUpgradeFlashSize.setDescription('The size of available FLASH memory in the system, in kilobytes. For example: 128 equals 131072 bytes (128 bytes times 1024).')
csfUpgradeTFTPServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 45, 1, 1, 3), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csfUpgradeTFTPServerAddress.setStatus('current')
if mibBuilder.loadTexts: csfUpgradeTFTPServerAddress.setDescription('The IP address of a TFTP server from which a firmware image can be downloaded. The download may be initiated by setting the upgradeTFTPInitiate to upgrade(1), or via an out-of-band management action.')
csfUpgradeTFTPLoadFilename = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 45, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csfUpgradeTFTPLoadFilename.setStatus('current')
if mibBuilder.loadTexts: csfUpgradeTFTPLoadFilename.setDescription('The name of the file containing a firmware upgrade image on the host whose address is given by upgradeTFTPServerAddress. The default value is an empty string, or no filename.')
csfUpgradeTFTPInitiate = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 45, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("upgrade", 1), ("noUpgrade", 2))).clone('noUpgrade')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csfUpgradeTFTPInitiate.setStatus('current')
if mibBuilder.loadTexts: csfUpgradeTFTPInitiate.setDescription('Setting this object to noUpgrade(2) results in no action. When set to upgrade(1), the switch will attempt to download a firmware upgrade image from the server whose address is given by upgradeTFTPServerAddress. The image is found in the file whose name is given by sibuFlashTFTPLoadFilename. Both sibuFlashTFTPServerAddress and sibuFlashTFTPLoadFilename must be non-empty for the upgrade to proceed. This object always returns noUpgrade(2) when read.')
csfUpgradeFlashMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 45, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permanent", 1), ("temporary", 2))).clone('permanent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csfUpgradeFlashMode.setStatus('current')
if mibBuilder.loadTexts: csfUpgradeFlashMode.setDescription('Indicates whether a newly upgraded firmware version should write to flash. When this object is temporary(2), following a successful upgrade the system will switch to run the new firmware but will not upgrade the new firmware to flash. That means after a power cycle, system will run the firmware residing the flash. When this object is permanent(1), following a successful firmware upgrade, the flash will be upgraded and the system will automatically switch to run the new firmware.')
csfUpgradeFirmwareStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 45, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("inProgress", 2), ("succeeded", 3), ("failed", 4))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: csfUpgradeFirmwareStatus.setStatus('current')
if mibBuilder.loadTexts: csfUpgradeFirmwareStatus.setDescription('Status of last upgrade attempt via TFTP: none - no upgrade has ever been attempted since initialization. inProgress - an upgrade is in progress. succeeded - the previous attempt succeeded. failed - the previous attempt failed. ')
ciscoSibuFlashMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 45, 2))
ciscoSibuFlashMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 45, 2, 0))
ciscoSibuFlashMIBComformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 45, 3))
ciscoSibuFlashMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 45, 3, 1))
ciscoSibuFlashMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 45, 3, 2))
ciscoSibuFlashCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 45, 3, 1, 1)).setObjects(("CISCO-SIBU-FLASH-MIB", "ciscoSibuFlashMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSibuFlashCompliance = ciscoSibuFlashCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoSibuFlashCompliance.setDescription('The compliance statement for the Cisco SIBU Flash MIB.')
ciscoSibuFlashMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 45, 3, 2, 1)).setObjects(("CISCO-SIBU-FLASH-MIB", "csfUpgradeFirmwareVersion"), ("CISCO-SIBU-FLASH-MIB", "csfUpgradeFlashSize"), ("CISCO-SIBU-FLASH-MIB", "csfUpgradeTFTPServerAddress"), ("CISCO-SIBU-FLASH-MIB", "csfUpgradeTFTPLoadFilename"), ("CISCO-SIBU-FLASH-MIB", "csfUpgradeTFTPInitiate"), ("CISCO-SIBU-FLASH-MIB", "csfUpgradeFlashMode"), ("CISCO-SIBU-FLASH-MIB", "csfUpgradeFirmwareStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSibuFlashMIBGroup = ciscoSibuFlashMIBGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoSibuFlashMIBGroup.setDescription('A collection of image upgrade objects for use with the devices that supports simple upgrade mechanism.')
mibBuilder.exportSymbols("CISCO-SIBU-FLASH-MIB", csfUpgradeTFTPLoadFilename=csfUpgradeTFTPLoadFilename, ciscoSibuFlashCompliance=ciscoSibuFlashCompliance, csfUpgradeFirmwareStatus=csfUpgradeFirmwareStatus, csfUpgradeFirmwareVersion=csfUpgradeFirmwareVersion, ciscoSibuFlashMIBObjects=ciscoSibuFlashMIBObjects, ciscoSibuFlashMIBNotifications=ciscoSibuFlashMIBNotifications, ciscoSibuFlashMIB=ciscoSibuFlashMIB, ciscoSibuFlashMIBNotificationsPrefix=ciscoSibuFlashMIBNotificationsPrefix, csfUpgradeTFTPInitiate=csfUpgradeTFTPInitiate, csfUpgradeFlashMode=csfUpgradeFlashMode, PYSNMP_MODULE_ID=ciscoSibuFlashMIB, ciscoSibuFlashMIBCompliances=ciscoSibuFlashMIBCompliances, csfUpgrade=csfUpgrade, ciscoSibuFlashMIBGroups=ciscoSibuFlashMIBGroups, csfUpgradeFlashSize=csfUpgradeFlashSize, csfUpgradeTFTPServerAddress=csfUpgradeTFTPServerAddress, ciscoSibuFlashMIBComformance=ciscoSibuFlashMIBComformance, ciscoSibuFlashMIBGroup=ciscoSibuFlashMIBGroup)
