#
# PySNMP MIB module AGG-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AGG-TRAP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:15:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
devName, mateHost, unknownDeviceTrapContents, pepName, oldFile, reason, result, matePort, file, sbProducerPort, port, snName, host, myHost, minutes, newFile, sbProducerHost, myPort = mibBuilder.importSymbols("AGGREGATED-EXT-MIB", "devName", "mateHost", "unknownDeviceTrapContents", "pepName", "oldFile", "reason", "result", "matePort", "file", "sbProducerPort", "port", "snName", "host", "myHost", "minutes", "newFile", "sbProducerHost", "myPort")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
snmpModules, ObjectName, Counter32, IpAddress, Integer32, TimeTicks, ModuleIdentity, Unsigned32, Gauge32, NotificationType, enterprises, Counter64, Bits, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, iso = mibBuilder.importSymbols("SNMPv2-SMI", "snmpModules", "ObjectName", "Counter32", "IpAddress", "Integer32", "TimeTicks", "ModuleIdentity", "Unsigned32", "Gauge32", "NotificationType", "enterprises", "Counter64", "Bits", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "iso")
RowStatus, TruthValue, TestAndIncr, DisplayString, TimeStamp, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "TestAndIncr", "DisplayString", "TimeStamp", "TextualConvention")
lucent = MibIdentifier((1, 3, 6, 1, 4, 1, 1751))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 1))
mantraDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 1, 1198))
mantraTraps = ModuleIdentity((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 0))
if mibBuilder.loadTexts: mantraTraps.setLastUpdated('240701')
if mibBuilder.loadTexts: mantraTraps.setOrganization('Lucent Technologies')
if mibBuilder.loadTexts: mantraTraps.setContactInfo('')
if mibBuilder.loadTexts: mantraTraps.setDescription('The MIB module for entities implementing the xxxx protocol.')
unParsedEvent = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 0, 5)).setObjects(("AGGREGATED-EXT-MIB", "unknownDeviceTrapContents"))
if mibBuilder.loadTexts: unParsedEvent.setStatus('current')
if mibBuilder.loadTexts: unParsedEvent.setDescription('An event is sent up as unParsedEvent, if there is an error in formatting, and event construction does not succeed. The variables are: 1) unknownDeviceTrapContents - a string representing the event text as the pep received it. Severity: MAJOR')
styxProducerConnect = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 0, 6)).setObjects(("AGGREGATED-EXT-MIB", "pepName"), ("AGGREGATED-EXT-MIB", "devName"), ("AGGREGATED-EXT-MIB", "host"), ("AGGREGATED-EXT-MIB", "port"), ("AGGREGATED-EXT-MIB", "file"))
if mibBuilder.loadTexts: styxProducerConnect.setStatus('current')
if mibBuilder.loadTexts: styxProducerConnect.setDescription('Indicates that the pep was sucessfully able to connect to the source of events specified in its config. The variables are: 1) pepName - this is the name of the PEP who is raising the event 2) devName - this is the logical name of the device this pep is connected to 3-4) host:port - these two identify the device that was mounted by the pep 5) file - this is the file name used internally start-up event, mainly. Severity: INFO')
styxProducerUnReadable = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 0, 7)).setObjects(("AGGREGATED-EXT-MIB", "pepName"), ("AGGREGATED-EXT-MIB", "devName"), ("AGGREGATED-EXT-MIB", "host"), ("AGGREGATED-EXT-MIB", "port"), ("AGGREGATED-EXT-MIB", "file"))
if mibBuilder.loadTexts: styxProducerUnReadable.setStatus('current')
if mibBuilder.loadTexts: styxProducerUnReadable.setDescription("Indicates that the pep's connection exists to the device, but the file named in the trap is not readable. The variables are: 1) pepName - this is the name of the PEP who is raising the event 2) devName - this is the logical name of the device this pep is connected to 3-4) host:port - these two identify the device that was mounted by the pep 5) file - this is the file name used internally Severity: MAJOR")
styxProducerDisconnect = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 0, 8)).setObjects(("AGGREGATED-EXT-MIB", "pepName"), ("AGGREGATED-EXT-MIB", "devName"), ("AGGREGATED-EXT-MIB", "host"), ("AGGREGATED-EXT-MIB", "port"), ("AGGREGATED-EXT-MIB", "file"))
if mibBuilder.loadTexts: styxProducerDisconnect.setStatus('current')
if mibBuilder.loadTexts: styxProducerDisconnect.setDescription("Indicates that the pep's connection to the source of events was severed. This could either be because device process died, or because there is a network outage. The variables are: 1) pepName - this is the name of the PEP who is raising the event 2) devName - this is the logical name of the device this pep is connected to 3-4) host:port - these two identify the device that was mounted by the pep 5) file - this is the file name used internally Severity: MAJOR")
styxProducerUnReachable = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 0, 9)).setObjects(("AGGREGATED-EXT-MIB", "pepName"), ("AGGREGATED-EXT-MIB", "devName"), ("AGGREGATED-EXT-MIB", "host"), ("AGGREGATED-EXT-MIB", "port"), ("AGGREGATED-EXT-MIB", "file"), ("AGGREGATED-EXT-MIB", "minutes"))
if mibBuilder.loadTexts: styxProducerUnReachable.setStatus('current')
if mibBuilder.loadTexts: styxProducerUnReachable.setDescription("Indicates that the pep's connection to the device has not been up for some time now, indicated in minutes. The variables are: 1) pepName - this is the name of the PEP who is raising the event 2) devName - this is the logical name of the device this pep is connected to 3-4) host, port - these two identify the device that was mounted by the pep 5) file - this is the file name used internally minutes - the time in minutes for which the connection to the device has not been up. Severity: MAJOR")
logFileChanged = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 0, 10)).setObjects(("AGGREGATED-EXT-MIB", "oldFile"), ("AGGREGATED-EXT-MIB", "newFile"), ("AGGREGATED-EXT-MIB", "result"), ("AGGREGATED-EXT-MIB", "reason"))
if mibBuilder.loadTexts: logFileChanged.setStatus('current')
if mibBuilder.loadTexts: logFileChanged.setDescription("Indicates that a log-file-change attempt is successful or failure. The variables are: 1) oldFile - this is the name of the old file which was to be changed. 2) newFile - this is the new log file name 3) result - this indicates 'success' or failure of logFileChange attempt. 4) reason - this describes the reason when log file change has failed. Severity: INFO")
styxFTMateConnect = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 0, 11)).setObjects(("AGGREGATED-EXT-MIB", "snName"), ("AGGREGATED-EXT-MIB", "myHost"), ("AGGREGATED-EXT-MIB", "myPort"), ("AGGREGATED-EXT-MIB", "mateHost"), ("AGGREGATED-EXT-MIB", "matePort"))
if mibBuilder.loadTexts: styxFTMateConnect.setStatus('current')
if mibBuilder.loadTexts: styxFTMateConnect.setDescription('Indicates that this ServiceNode was sucessfully able to connect to its redundant mate. This event is usually raised by the Backup mate who is responsible for monitoring its respective Primary. The variables are: 1) snName - this is the name of the ServiceNode who is raising the event. 2-3) myHost:myPort - these identify the host and port of the ServiceNode raising the event. 4-5) mateHost:matePort - these identify the host and port of the mate to which this ServiceNode connected. Severity: INFO')
styxFTMateDisconnect = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 0, 12)).setObjects(("AGGREGATED-EXT-MIB", "snName"), ("AGGREGATED-EXT-MIB", "myHost"), ("AGGREGATED-EXT-MIB", "myPort"), ("AGGREGATED-EXT-MIB", "mateHost"), ("AGGREGATED-EXT-MIB", "matePort"))
if mibBuilder.loadTexts: styxFTMateDisconnect.setStatus('current')
if mibBuilder.loadTexts: styxFTMateDisconnect.setDescription('Indicates that this ServiceNode has lost connection to its redundant mate due to either process or host failure. This event is usually raised by the Backup mate who is monitoring its respective Primary. Connection will be established upon recovery of the mate. The variables are: 1) snName - this is the name of the ServiceNode who is raising the event 2-3) myHost:myPort - these identify the host and port of the ServiceNode raising the event. 4-5) mateHost:matePort - these identify the host and port of the mate to which this ServiceNode lost connection. Severity: MAJOR')
sBProducerUnreachable = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 0, 13)).setObjects(("AGGREGATED-EXT-MIB", "pepName"), ("AGGREGATED-EXT-MIB", "devName"), ("AGGREGATED-EXT-MIB", "sbProducerHost"), ("AGGREGATED-EXT-MIB", "sbProducerPort"))
if mibBuilder.loadTexts: sBProducerUnreachable.setStatus('current')
if mibBuilder.loadTexts: sBProducerUnreachable.setDescription('Indicates that this Socket Based Producer is not reachable by the Policy Enforcement Point. The variables are: 1) pepName - this is the name of the Policy Enforcement Point (PEP) who is raising the event 2) devName: Device which is unreachable 3) sbProducerHost: Host where the Socket Based event producer is on. 4) sbProducerPort: Port where the Socket Based event producer is running on. Severity: MAJOR')
sBProducerConnected = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 0, 14)).setObjects(("AGGREGATED-EXT-MIB", "pepName"), ("AGGREGATED-EXT-MIB", "devName"), ("AGGREGATED-EXT-MIB", "sbProducerHost"), ("AGGREGATED-EXT-MIB", "sbProducerPort"))
if mibBuilder.loadTexts: sBProducerConnected.setStatus('current')
if mibBuilder.loadTexts: sBProducerConnected.setDescription('Indicates that this Socket Based Producer has connected to the Policy Enforcement Point (PEP). The variables are: 1) pepName - this is the name of the Policy Enforcement Point (PEP) who is raising the event 2) devName: Device which is unreachable 3) sbProducerHost: Host where the Socket Based event producer is on. 4) sbProducerPort: Port where the Socket Based event producer is running on. Severity: MAJOR')
sBProducerRegistered = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 0, 15)).setObjects(("AGGREGATED-EXT-MIB", "pepName"), ("AGGREGATED-EXT-MIB", "devName"), ("AGGREGATED-EXT-MIB", "sbProducerHost"), ("AGGREGATED-EXT-MIB", "sbProducerPort"))
if mibBuilder.loadTexts: sBProducerRegistered.setStatus('current')
if mibBuilder.loadTexts: sBProducerRegistered.setDescription('Indicates that this Socket Based Producer has registered with the Policy Enforcement Point (PEP). The variables are: 1) pepName - this is the name of the Policy Enforcement Point (PEP) who is raising the event 2) devName: Device which is unreachable 3) sbProducerHost: Host where the Socket Based event producer is on. 4) sbProducerPort: Port where the Socket Based event producer is running on. Severity: INFO')
sBProducerDisconnected = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 0, 16)).setObjects(("AGGREGATED-EXT-MIB", "pepName"), ("AGGREGATED-EXT-MIB", "devName"), ("AGGREGATED-EXT-MIB", "sbProducerHost"), ("AGGREGATED-EXT-MIB", "sbProducerPort"))
if mibBuilder.loadTexts: sBProducerDisconnected.setStatus('current')
if mibBuilder.loadTexts: sBProducerDisconnected.setDescription('Indicates that this Socket Based Producer has disconnected from the Policy Enforcement Point (PEP). The variables are: 1) pepName - this is the name of the Policy Enforcement Point (PEP) who is raising the event 2) devName: Device which is unreachable 3) sbProducerHost: Host where the Socket Based event producer is on. 4) sbProducerPort: Port where the Socket Based event producer is running on. Severity: INFO')
sBProducerCannotRegister = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 0, 17)).setObjects(("AGGREGATED-EXT-MIB", "pepName"), ("AGGREGATED-EXT-MIB", "devName"), ("AGGREGATED-EXT-MIB", "sbProducerHost"), ("AGGREGATED-EXT-MIB", "sbProducerPort"))
if mibBuilder.loadTexts: sBProducerCannotRegister.setStatus('current')
if mibBuilder.loadTexts: sBProducerCannotRegister.setDescription('Indicates that this Socket Based Producer cannot register to the Policy Enforcement Point (PEP). The variables are: 1) pepName - this is the name of the Policy Enforcement Point (PEP) who is raising the event 2) devName: Device which is unreachable 3) sbProducerHost: Host where the Socket Based event producer is on. 4) sbProducerPort: Port where the Socket Based event producer is running on. Severity: INFO')
sBProducerCannotDisconnect = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 0, 18)).setObjects(("AGGREGATED-EXT-MIB", "pepName"), ("AGGREGATED-EXT-MIB", "devName"), ("AGGREGATED-EXT-MIB", "sbProducerHost"), ("AGGREGATED-EXT-MIB", "sbProducerPort"))
if mibBuilder.loadTexts: sBProducerCannotDisconnect.setStatus('current')
if mibBuilder.loadTexts: sBProducerCannotDisconnect.setDescription('Indicates that this Socket Based Producer cannot disconenct from the Policy Enforcement Point (PEP). The variables are: 1) pepName - this is the name of the Policy Enforcement Point (PEP) who is raising the event 2) devName: Device which is unreachable 3) sbProducerHost: Host where the Socket Based event producer is on. 4) sbProducerPort: Port where the Socket Based event producer is running on. Severity: INFO')
mibBuilder.exportSymbols("AGG-TRAP-MIB", sBProducerUnreachable=sBProducerUnreachable, sBProducerRegistered=sBProducerRegistered, PYSNMP_MODULE_ID=mantraTraps, sBProducerDisconnected=sBProducerDisconnected, products=products, styxProducerConnect=styxProducerConnect, mantraTraps=mantraTraps, styxFTMateDisconnect=styxFTMateDisconnect, sBProducerCannotDisconnect=sBProducerCannotDisconnect, styxProducerUnReachable=styxProducerUnReachable, sBProducerCannotRegister=sBProducerCannotRegister, unParsedEvent=unParsedEvent, styxFTMateConnect=styxFTMateConnect, sBProducerConnected=sBProducerConnected, logFileChanged=logFileChanged, lucent=lucent, styxProducerDisconnect=styxProducerDisconnect, mantraDevice=mantraDevice, styxProducerUnReadable=styxProducerUnReadable)
