#
# PySNMP MIB module NETSCREEN-SET-DHCP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-SET-DHCP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:20:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
netscreenSettingMibModule, netscreenSetting = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenSettingMibModule", "netscreenSetting")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, NotificationType, iso, Counter32, Bits, MibIdentifier, Integer32, ObjectIdentity, TimeTicks, Gauge32, Unsigned32, IpAddress, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "NotificationType", "iso", "Counter32", "Bits", "MibIdentifier", "Integer32", "ObjectIdentity", "TimeTicks", "Gauge32", "Unsigned32", "IpAddress", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
netscreenSetDhcpMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 7, 0, 5))
netscreenSetDhcpMibModule.setRevisions(('2004-05-03 00:00', '2004-03-03 00:00', '2003-11-10 00:00', '2001-12-12 00:00', '2001-09-28 00:00', '2001-05-27 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: netscreenSetDhcpMibModule.setRevisionsDescriptions(('Modified copyright and contact information', 'Converted to SMIv2 by Longview Software', 'Correct wrong title', 'change dhcp configuration per physical interface', 'No Comment', 'Creation Date',))
if mibBuilder.loadTexts: netscreenSetDhcpMibModule.setLastUpdated('200405032022Z')
if mibBuilder.loadTexts: netscreenSetDhcpMibModule.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: netscreenSetDhcpMibModule.setContactInfo('Customer Support 1194 North Mathilda Avenue Sunnyvale, California 94089-1206 USA Tel: 1-800-638-8296 E-mail: customerservice@juniper.net HTTP://www.juniper.net')
if mibBuilder.loadTexts: netscreenSetDhcpMibModule.setDescription('This module defines the object that are used to monitor all the configuration info')
nsSetDHCP = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 7, 5))
nsSetDhcpTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 7, 5, 1), )
if mibBuilder.loadTexts: nsSetDhcpTable.setStatus('current')
if mibBuilder.loadTexts: nsSetDhcpTable.setDescription("NetScreen ScreenOS can allow dhcp service on each of NetScreen device's physical interface. This table collects the dhcp configuration on each physical interface.")
nsSetDhcpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 7, 5, 1, 1), ).setIndexNames((0, "NETSCREEN-SET-DHCP-MIB", "nsSetDhcpIfIdx"))
if mibBuilder.loadTexts: nsSetDhcpEntry.setStatus('current')
if mibBuilder.loadTexts: nsSetDhcpEntry.setDescription('Hold the firewall setting attribute.')
nsSetDhcpIfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 7, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetDhcpIfIdx.setStatus('current')
if mibBuilder.loadTexts: nsSetDhcpIfIdx.setDescription('unique interface id.')
nsSetDHCPService = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 7, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("dhcp-relay-agent", 1), ("dhcp-server", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetDHCPService.setStatus('current')
if mibBuilder.loadTexts: nsSetDHCPService.setDescription('DHCP service type for trusted network.')
nsSetDHCPRelayServer = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 7, 5, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetDHCPRelayServer.setStatus('current')
if mibBuilder.loadTexts: nsSetDHCPRelayServer.setDescription('DHCP relay agent server name.')
nsSetDHCPVpnEncryp = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 7, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetDHCPVpnEncryp.setStatus('current')
if mibBuilder.loadTexts: nsSetDHCPVpnEncryp.setDescription('Secure DHCP relay agent traffic via VPN encryption.')
nsSetDhcpIfInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 7, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetDhcpIfInfo.setStatus('current')
if mibBuilder.loadTexts: nsSetDhcpIfInfo.setDescription('Internal id assigned to this interface. Stays persistent across resets.')
mibBuilder.exportSymbols("NETSCREEN-SET-DHCP-MIB", netscreenSetDhcpMibModule=netscreenSetDhcpMibModule, nsSetDHCPService=nsSetDHCPService, nsSetDHCPVpnEncryp=nsSetDHCPVpnEncryp, PYSNMP_MODULE_ID=netscreenSetDhcpMibModule, nsSetDhcpIfIdx=nsSetDhcpIfIdx, nsSetDhcpTable=nsSetDhcpTable, nsSetDhcpEntry=nsSetDhcpEntry, nsSetDhcpIfInfo=nsSetDhcpIfInfo, nsSetDHCPRelayServer=nsSetDHCPRelayServer, nsSetDHCP=nsSetDHCP)
