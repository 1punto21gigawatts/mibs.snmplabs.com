#
# PySNMP MIB module H3C-VOICE-CALL-ACTIVE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-VOICE-CALL-ACTIVE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:24:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
callActiveSetupTime, callActiveIndex = mibBuilder.importSymbols("DIAL-CONTROL-MIB", "callActiveSetupTime", "callActiveIndex")
H3cCodecType, = mibBuilder.importSymbols("H3C-VOICE-DIAL-CONTROL-MIB", "H3cCodecType")
h3cVoice, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cVoice")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, IpAddress, Bits, Unsigned32, Counter64, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ObjectIdentity, MibIdentifier, Gauge32, TimeTicks, NotificationType, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "IpAddress", "Bits", "Unsigned32", "Counter64", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ObjectIdentity", "MibIdentifier", "Gauge32", "TimeTicks", "NotificationType", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
h3cVoCallActive = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15))
h3cVoCallActive.setRevisions(('2008-02-17 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: h3cVoCallActive.setRevisionsDescriptions(('The initial version of this MIB file.',))
if mibBuilder.loadTexts: h3cVoCallActive.setLastUpdated('200802170000Z')
if mibBuilder.loadTexts: h3cVoCallActive.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
if mibBuilder.loadTexts: h3cVoCallActive.setContactInfo('Platform Team Hangzhou H3C Technologies Co., Ltd. Hai-Dian District Beijing P.R. China Http://www.h3c.com Zip:100085')
if mibBuilder.loadTexts: h3cVoCallActive.setDescription('This MIB file is to provide the definition of voice call active record information.')
class H3cGUid(TextualConvention, OctetString):
    description = 'Represents a global call identifier. The global call identifier is used as an unique identifier for an end-to-end call. A zero length H3cGUid indicates no value for the global call identifier.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 16)

h3cVoiceCallActiveObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1))
h3cVoiceCallActiveTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1, 1), )
if mibBuilder.loadTexts: h3cVoiceCallActiveTable.setStatus('current')
if mibBuilder.loadTexts: h3cVoiceCallActiveTable.setDescription('This table is the voice extension to the call active table of DIAL-CONTROL-MIB. It contains voice encapsulation call leg information that is derived from the statistics of lower layer telephony interface.')
h3cVoiceCallActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1, 1, 1), ).setIndexNames((0, "DIAL-CONTROL-MIB", "callActiveSetupTime"), (0, "DIAL-CONTROL-MIB", "callActiveIndex"))
if mibBuilder.loadTexts: h3cVoiceCallActiveEntry.setStatus('current')
if mibBuilder.loadTexts: h3cVoiceCallActiveEntry.setDescription('The information regarding a single voice encapsulation call leg. The call leg entry is identified by using the same index objects that are used by call active table of DIAL-CONTROL-MIB to identify the call. An entry of this table is created when its associated call active entry in the DIAL-CONTROL-MIB is created and call active entry contains the call establishment to a voice over telephony network peer. The entry is deleted when its associated call active entry in the DIAL-CONTROL-MIB is deleted.')
h3cVoCallActiveConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1, 1, 1, 1), H3cGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoCallActiveConnectionId.setStatus('current')
if mibBuilder.loadTexts: h3cVoCallActiveConnectionId.setDescription('The global call identifier for the gateway call.')
h3cVoCallActiveTxDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoCallActiveTxDuration.setStatus('current')
if mibBuilder.loadTexts: h3cVoCallActiveTxDuration.setDescription('Duration of transmit path open from this peer to the voice gateway for the call. The units is milliseconds.')
h3cVoCallActiveVoiceTxDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoCallActiveVoiceTxDuration.setStatus('current')
if mibBuilder.loadTexts: h3cVoCallActiveVoiceTxDuration.setDescription('Duration of voice transmitted from this peer to voice gateway for this call. The voice utilization rate can be obtained by dividing this by h3cVoCallActiveTXDuration object. The units is milliseconds.')
h3cVoCallActiveFaxTxDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoCallActiveFaxTxDuration.setStatus('current')
if mibBuilder.loadTexts: h3cVoCallActiveFaxTxDuration.setDescription('Duration of fax transmitted from this peer to voice gateway for this call. The fax utilization rate can be obtained by dividing this by h3cVoCallActiveTXDuration object. The units is milliseconds.')
h3cVoCallActiveCoderType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1, 1, 1, 5), H3cCodecType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoCallActiveCoderType.setStatus('current')
if mibBuilder.loadTexts: h3cVoCallActiveCoderType.setDescription('The negotiated coder type. It specifies the encode type to the PSTN leg of a call.')
h3cVoCallActiveImgPageCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoCallActiveImgPageCount.setStatus('current')
if mibBuilder.loadTexts: h3cVoCallActiveImgPageCount.setDescription('The number of fax related image pages are received or transmitted via the peer for the call. The units is pages.')
h3cVoiceVoIPCallActiveTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1, 2), )
if mibBuilder.loadTexts: h3cVoiceVoIPCallActiveTable.setStatus('current')
if mibBuilder.loadTexts: h3cVoiceVoIPCallActiveTable.setDescription('This table is the VoIP extension to the call active table of DIAL-CONTROL-MIB. It contains VoIP call leg information about specific VoIP call destination.')
h3cVoiceVoIPCallActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1, 2, 1), ).setIndexNames((0, "DIAL-CONTROL-MIB", "callActiveSetupTime"), (0, "DIAL-CONTROL-MIB", "callActiveIndex"))
if mibBuilder.loadTexts: h3cVoiceVoIPCallActiveEntry.setStatus('current')
if mibBuilder.loadTexts: h3cVoiceVoIPCallActiveEntry.setDescription('The information regarding a single VoIP call leg. The call leg entry is identified by using the same index objects that are used by call active table of DIAL-CONTROL-MIB to identify the call. An entry of this table is created when its associated call active entry in the DIAL-CONTROL-MIB is created and the call active entry contains information for the call establishment to the peer on the IP backbone via a voice over IP peer. The entry is deleted when its associated call active entry in the DIAL-CONTROL-MIB is deleted.')
h3cVoVoIPCallActiveConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1, 2, 1, 1), H3cGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoVoIPCallActiveConnectionId.setStatus('current')
if mibBuilder.loadTexts: h3cVoVoIPCallActiveConnectionId.setDescription('The global call identifier for the gateway call.')
h3cVoVoIPCallActiveRemSigIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoVoIPCallActiveRemSigIPType.setStatus('current')
if mibBuilder.loadTexts: h3cVoVoIPCallActiveRemSigIPType.setDescription('The type of remote system signalling IP address for the VoIP call.')
h3cVoVoIPCallActiveRemSigIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1, 2, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoVoIPCallActiveRemSigIPAddr.setStatus('current')
if mibBuilder.loadTexts: h3cVoVoIPCallActiveRemSigIPAddr.setDescription('Remote system signalling IP address for the VoIP call.')
h3cVoVoIPCallActiveRemSigPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoVoIPCallActiveRemSigPort.setStatus('current')
if mibBuilder.loadTexts: h3cVoVoIPCallActiveRemSigPort.setDescription('Remote system UDP listener signalling port to which to transmit voice packets.')
h3cVoVoIPCallActiveRemMedIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1, 2, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoVoIPCallActiveRemMedIPType.setStatus('current')
if mibBuilder.loadTexts: h3cVoVoIPCallActiveRemMedIPType.setDescription('The type of remote system media IP address for the VoIP call.')
h3cVoVoIPCallActiveRemMedIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1, 2, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoVoIPCallActiveRemMedIPAddr.setStatus('current')
if mibBuilder.loadTexts: h3cVoVoIPCallActiveRemMedIPAddr.setDescription('Remote system media IP address for the VoIP call.')
h3cVoVoIPCallActiveRemMedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoVoIPCallActiveRemMedPort.setStatus('current')
if mibBuilder.loadTexts: h3cVoVoIPCallActiveRemMedPort.setDescription('Remote system UDP listener media port to which to transmit voice packets.')
h3cVoVoIPCallActiveSessProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("h323", 2), ("sip", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoVoIPCallActiveSessProtocol.setStatus('current')
if mibBuilder.loadTexts: h3cVoVoIPCallActiveSessProtocol.setDescription('The object specifies the session protocol to be used for internet call between local and remote router via IP backbone.')
h3cVoVoIPCallActiveCoderType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 15, 1, 2, 1, 9), H3cCodecType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoVoIPCallActiveCoderType.setStatus('current')
if mibBuilder.loadTexts: h3cVoVoIPCallActiveCoderType.setDescription('The negotiated coder type. It specifies the encode type to the VoIP leg of a call.')
mibBuilder.exportSymbols("H3C-VOICE-CALL-ACTIVE-MIB", h3cVoVoIPCallActiveRemMedPort=h3cVoVoIPCallActiveRemMedPort, h3cVoCallActiveImgPageCount=h3cVoCallActiveImgPageCount, h3cVoVoIPCallActiveRemMedIPAddr=h3cVoVoIPCallActiveRemMedIPAddr, h3cVoVoIPCallActiveRemSigIPType=h3cVoVoIPCallActiveRemSigIPType, h3cVoCallActiveTxDuration=h3cVoCallActiveTxDuration, h3cVoCallActiveFaxTxDuration=h3cVoCallActiveFaxTxDuration, h3cVoCallActiveVoiceTxDuration=h3cVoCallActiveVoiceTxDuration, h3cVoCallActive=h3cVoCallActive, h3cVoCallActiveConnectionId=h3cVoCallActiveConnectionId, h3cVoVoIPCallActiveSessProtocol=h3cVoVoIPCallActiveSessProtocol, h3cVoiceVoIPCallActiveEntry=h3cVoiceVoIPCallActiveEntry, h3cVoVoIPCallActiveRemSigPort=h3cVoVoIPCallActiveRemSigPort, h3cVoVoIPCallActiveConnectionId=h3cVoVoIPCallActiveConnectionId, h3cVoiceCallActiveObjects=h3cVoiceCallActiveObjects, PYSNMP_MODULE_ID=h3cVoCallActive, H3cGUid=H3cGUid, h3cVoVoIPCallActiveCoderType=h3cVoVoIPCallActiveCoderType, h3cVoVoIPCallActiveRemMedIPType=h3cVoVoIPCallActiveRemMedIPType, h3cVoiceCallActiveTable=h3cVoiceCallActiveTable, h3cVoVoIPCallActiveRemSigIPAddr=h3cVoVoIPCallActiveRemSigIPAddr, h3cVoiceVoIPCallActiveTable=h3cVoiceVoIPCallActiveTable, h3cVoiceCallActiveEntry=h3cVoiceCallActiveEntry, h3cVoCallActiveCoderType=h3cVoCallActiveCoderType)
