#
# PySNMP MIB module JUNIPER-UTIL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-UTIL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:01:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
jnxUtilMibRoot, = mibBuilder.importSymbols("JUNIPER-SMI", "jnxUtilMibRoot")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Counter64, Gauge32, Bits, IpAddress, MibIdentifier, Counter32, Unsigned32, NotificationType, ObjectIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "Gauge32", "Bits", "IpAddress", "MibIdentifier", "Counter32", "Unsigned32", "NotificationType", "ObjectIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Integer32")
TextualConvention, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "DisplayString")
jnxUtil = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1))
jnxUtil.setRevisions(('2007-01-01 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: jnxUtil.setRevisionsDescriptions(('Initial revision.',))
if mibBuilder.loadTexts: jnxUtil.setLastUpdated('200701010000Z')
if mibBuilder.loadTexts: jnxUtil.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: jnxUtil.setContactInfo(' Juniper Technical Assistance Center Juniper Networks, Inc. 1194 N. Mathilda Avenue Sunnyvale, CA 94089 E-mail: support@juniper.net')
if mibBuilder.loadTexts: jnxUtil.setDescription('This MIB module provides a generic means for exposing junos data via SNMP. There are separate tables for each type of data, and specific instances of each type are identified by its corresponding name.')
jnxUtilData = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1))
jnxUtilCounter32Table = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 1), )
if mibBuilder.loadTexts: jnxUtilCounter32Table.setStatus('current')
if mibBuilder.loadTexts: jnxUtilCounter32Table.setDescription('This table exposes generic Counter valued objects. Each counter instance, which can be populated via an internal junos interface, is identified by its corresponding name.')
jnxUtilCounter32Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 1, 1), ).setIndexNames((1, "JUNIPER-UTIL-MIB", "jnxUtilCounter32Name"))
if mibBuilder.loadTexts: jnxUtilCounter32Entry.setStatus('current')
if mibBuilder.loadTexts: jnxUtilCounter32Entry.setDescription('Each entry exposes a separate Counter instance.')
jnxUtilCounter32Name = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80)))
if mibBuilder.loadTexts: jnxUtilCounter32Name.setStatus('current')
if mibBuilder.loadTexts: jnxUtilCounter32Name.setDescription('The name assigned to this Counter instance.')
jnxUtilCounter32Value = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilCounter32Value.setStatus('current')
if mibBuilder.loadTexts: jnxUtilCounter32Value.setDescription('The value of this generic, utility counter instance.')
jnxUtilCounter32Time = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 1, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilCounter32Time.setStatus('current')
if mibBuilder.loadTexts: jnxUtilCounter32Time.setDescription('The time at which this instance was last populated.')
jnxUtilCounter64Table = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 2), )
if mibBuilder.loadTexts: jnxUtilCounter64Table.setStatus('current')
if mibBuilder.loadTexts: jnxUtilCounter64Table.setDescription('This table exposes generic Counter64 valued objects. Each counter instance, which can be populated via an internal junos interface, is identified by its corresponding name.')
jnxUtilCounter64Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 2, 1), ).setIndexNames((1, "JUNIPER-UTIL-MIB", "jnxUtilCounter64Name"))
if mibBuilder.loadTexts: jnxUtilCounter64Entry.setStatus('current')
if mibBuilder.loadTexts: jnxUtilCounter64Entry.setDescription('Each entry exposes a separate Counter64 instance.')
jnxUtilCounter64Name = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80)))
if mibBuilder.loadTexts: jnxUtilCounter64Name.setStatus('current')
if mibBuilder.loadTexts: jnxUtilCounter64Name.setDescription('The name assigned to this object instance.')
jnxUtilCounter64Value = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilCounter64Value.setStatus('current')
if mibBuilder.loadTexts: jnxUtilCounter64Value.setDescription('The value of this generic, utility object instance.')
jnxUtilCounter64Time = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 2, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilCounter64Time.setStatus('current')
if mibBuilder.loadTexts: jnxUtilCounter64Time.setDescription('The time at which this instance was last populated.')
jnxUtilIntegerTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 3), )
if mibBuilder.loadTexts: jnxUtilIntegerTable.setStatus('current')
if mibBuilder.loadTexts: jnxUtilIntegerTable.setDescription('This table exposes generic Integer32 valued objects. Each integer instance, which can be populated via an internal junos interface, is identified by its corresponding name.')
jnxUtilIntegerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 3, 1), ).setIndexNames((1, "JUNIPER-UTIL-MIB", "jnxUtilIntegerName"))
if mibBuilder.loadTexts: jnxUtilIntegerEntry.setStatus('current')
if mibBuilder.loadTexts: jnxUtilIntegerEntry.setDescription('Each entry exposes a separate Integer32 instance.')
jnxUtilIntegerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80)))
if mibBuilder.loadTexts: jnxUtilIntegerName.setStatus('current')
if mibBuilder.loadTexts: jnxUtilIntegerName.setDescription('The name assigned to this object instance.')
jnxUtilIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilIntegerValue.setStatus('current')
if mibBuilder.loadTexts: jnxUtilIntegerValue.setDescription('The value of this generic, utility object instance.')
jnxUtilIntegerTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 3, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilIntegerTime.setStatus('current')
if mibBuilder.loadTexts: jnxUtilIntegerTime.setDescription('The time at which this instance was last populated.')
jnxUtilUintTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 4), )
if mibBuilder.loadTexts: jnxUtilUintTable.setStatus('current')
if mibBuilder.loadTexts: jnxUtilUintTable.setDescription('This table exposes generic Unsigned32 valued objects. Each integer instance, which can be populated via an internal junos interface, is identified by its corresponding name.')
jnxUtilUintEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 4, 1), ).setIndexNames((1, "JUNIPER-UTIL-MIB", "jnxUtilUintName"))
if mibBuilder.loadTexts: jnxUtilUintEntry.setStatus('current')
if mibBuilder.loadTexts: jnxUtilUintEntry.setDescription('Each entry exposes a separate Unsigned32 instance.')
jnxUtilUintName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80)))
if mibBuilder.loadTexts: jnxUtilUintName.setStatus('current')
if mibBuilder.loadTexts: jnxUtilUintName.setDescription('The name assigned to this object instance.')
jnxUtilUintValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilUintValue.setStatus('current')
if mibBuilder.loadTexts: jnxUtilUintValue.setDescription('The value of this generic, utility object instance.')
jnxUtilUintTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 4, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilUintTime.setStatus('current')
if mibBuilder.loadTexts: jnxUtilUintTime.setDescription('The time at which this instance was last populated.')
jnxUtilStringTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 5), )
if mibBuilder.loadTexts: jnxUtilStringTable.setStatus('current')
if mibBuilder.loadTexts: jnxUtilStringTable.setDescription('This table exposes generic OCTET STRING valued objects. Each string instance, which can be populated via an internal junos interface, is identified by its corresponding name.')
jnxUtilStringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 5, 1), ).setIndexNames((1, "JUNIPER-UTIL-MIB", "jnxUtilStringName"))
if mibBuilder.loadTexts: jnxUtilStringEntry.setStatus('current')
if mibBuilder.loadTexts: jnxUtilStringEntry.setDescription('Each entry exposes a separate OCTET STRING instance.')
jnxUtilStringName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80)))
if mibBuilder.loadTexts: jnxUtilStringName.setStatus('current')
if mibBuilder.loadTexts: jnxUtilStringName.setDescription('The name assigned to this object instance.')
jnxUtilStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilStringValue.setStatus('current')
if mibBuilder.loadTexts: jnxUtilStringValue.setDescription('The value of this generic, utility object instance.')
jnxUtilStringTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 5, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilStringTime.setStatus('current')
if mibBuilder.loadTexts: jnxUtilStringTime.setDescription('The time at which this instance was last populated.')
mibBuilder.exportSymbols("JUNIPER-UTIL-MIB", jnxUtilStringName=jnxUtilStringName, jnxUtilCounter32Name=jnxUtilCounter32Name, jnxUtilUintValue=jnxUtilUintValue, jnxUtil=jnxUtil, jnxUtilCounter32Time=jnxUtilCounter32Time, jnxUtilCounter32Value=jnxUtilCounter32Value, jnxUtilUintEntry=jnxUtilUintEntry, jnxUtilIntegerName=jnxUtilIntegerName, jnxUtilStringValue=jnxUtilStringValue, jnxUtilIntegerValue=jnxUtilIntegerValue, jnxUtilCounter64Table=jnxUtilCounter64Table, jnxUtilData=jnxUtilData, jnxUtilCounter64Entry=jnxUtilCounter64Entry, jnxUtilIntegerEntry=jnxUtilIntegerEntry, jnxUtilCounter64Value=jnxUtilCounter64Value, jnxUtilStringTime=jnxUtilStringTime, jnxUtilCounter64Name=jnxUtilCounter64Name, jnxUtilCounter32Table=jnxUtilCounter32Table, jnxUtilStringTable=jnxUtilStringTable, jnxUtilCounter32Entry=jnxUtilCounter32Entry, jnxUtilStringEntry=jnxUtilStringEntry, jnxUtilIntegerTime=jnxUtilIntegerTime, PYSNMP_MODULE_ID=jnxUtil, jnxUtilCounter64Time=jnxUtilCounter64Time, jnxUtilUintName=jnxUtilUintName, jnxUtilUintTime=jnxUtilUintTime, jnxUtilIntegerTable=jnxUtilIntegerTable, jnxUtilUintTable=jnxUtilUintTable)
