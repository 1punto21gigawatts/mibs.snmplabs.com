#
# PySNMP MIB module RADLAN-BOOTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RADLAN-BOOTP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:45:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
rnd, = mibBuilder.importSymbols("RADLAN-MIB", "rnd")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Integer32, Gauge32, NotificationType, MibIdentifier, Bits, Counter32, TimeTicks, Counter64, Unsigned32, ModuleIdentity, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Integer32", "Gauge32", "NotificationType", "MibIdentifier", "Bits", "Counter32", "TimeTicks", "Counter64", "Unsigned32", "ModuleIdentity", "IpAddress", "iso")
TruthValue, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowStatus", "TextualConvention")
rndBootP = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 24))
rndBootP.setRevisions(('2007-01-02 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: rndBootP.setRevisionsDescriptions(('Initial revision.',))
if mibBuilder.loadTexts: rndBootP.setLastUpdated('200701020000Z')
if mibBuilder.loadTexts: rndBootP.setOrganization('Radlan - a MARVELL company. Marvell Semiconductor, Inc.')
if mibBuilder.loadTexts: rndBootP.setContactInfo('www.marvell.com')
if mibBuilder.loadTexts: rndBootP.setDescription('This private MIB module defines boot p private MIBs.')
rndBootPServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 89, 24, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rndBootPServerAddress.setStatus('current')
if mibBuilder.loadTexts: rndBootPServerAddress.setDescription(' The IPAddress of the BOOTP server. the OpenGate will act as a BootP relay if this parameter is not equale to 0.0.0.0.')
rndBootPRelaySecThreshold = MibScalar((1, 3, 6, 1, 4, 1, 89, 24, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rndBootPRelaySecThreshold.setStatus('current')
if mibBuilder.loadTexts: rndBootPRelaySecThreshold.setDescription('BootP requests are relayed only if their SEC field is greater or equal to the threshold value in order to allow local BootP Servers to answer first.')
rndBootPActionTable = MibTable((1, 3, 6, 1, 4, 1, 89, 24, 3), )
if mibBuilder.loadTexts: rndBootPActionTable.setStatus('current')
if mibBuilder.loadTexts: rndBootPActionTable.setDescription(' The (conceptual) table mentione IP address which must be released/renewed on the interface.')
rndBootPActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 24, 3, 1), ).setIndexNames((0, "RADLAN-BOOTP-MIB", "rndBootPActionIfIndex"))
if mibBuilder.loadTexts: rndBootPActionEntry.setStatus('current')
if mibBuilder.loadTexts: rndBootPActionEntry.setDescription('An entry (conceptual row) in rndBootPActionTable.')
rndBootPActionIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 24, 3, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndBootPActionIfIndex.setStatus('current')
if mibBuilder.loadTexts: rndBootPActionIfIndex.setDescription(' The interface which the action is implemented for or NULL if it implemented for all device. ')
rndBootPActionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 24, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rndBootPActionStatus.setStatus('current')
if mibBuilder.loadTexts: rndBootPActionStatus.setDescription('The status of this entry. Creating the entry renewing Bootp address on the interface; destroying the entry release Bootp address on the interface.')
rndBootPActionHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 24, 3, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rndBootPActionHostName.setStatus('current')
if mibBuilder.loadTexts: rndBootPActionHostName.setDescription(' This option specifies the name of the client.')
mibBuilder.exportSymbols("RADLAN-BOOTP-MIB", rndBootPActionTable=rndBootPActionTable, rndBootPActionHostName=rndBootPActionHostName, rndBootP=rndBootP, rndBootPActionIfIndex=rndBootPActionIfIndex, rndBootPActionStatus=rndBootPActionStatus, rndBootPActionEntry=rndBootPActionEntry, rndBootPRelaySecThreshold=rndBootPRelaySecThreshold, PYSNMP_MODULE_ID=rndBootP, rndBootPServerAddress=rndBootPServerAddress)
