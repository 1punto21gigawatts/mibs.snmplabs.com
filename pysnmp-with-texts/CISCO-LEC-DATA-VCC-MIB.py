#
# PySNMP MIB module CISCO-LEC-DATA-VCC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LEC-DATA-VCC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:04:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
atmVclVci, atmVclVpi = mibBuilder.importSymbols("ATM-MIB", "atmVclVci", "atmVclVpi")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
lecIndex, AtmLaneAddress = mibBuilder.importSymbols("LAN-EMULATION-CLIENT-MIB", "lecIndex", "AtmLaneAddress")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Gauge32, ModuleIdentity, iso, NotificationType, Counter64, Integer32, TimeTicks, ObjectIdentity, MibIdentifier, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ModuleIdentity", "iso", "NotificationType", "Counter64", "Integer32", "TimeTicks", "ObjectIdentity", "MibIdentifier", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoLecDataVccMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 69))
ciscoLecDataVccMIB.setRevisions(('1997-01-06 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoLecDataVccMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoLecDataVccMIB.setLastUpdated('9701060000Z')
if mibBuilder.loadTexts: ciscoLecDataVccMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoLecDataVccMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-atm@cisco.com')
if mibBuilder.loadTexts: ciscoLecDataVccMIB.setDescription("This MIB module is a Cisco extension to the ATM Forum's LANE Client MIB. This extension identifies those VCCs which are being used to carry packets sent on LANE Data Direct VCCs.")
ciscoLecDataVccMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 69, 1))
cLecDataDirectVcc = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 69, 1, 1))
cLecDataDirectVccTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 69, 1, 1, 1), )
if mibBuilder.loadTexts: cLecDataDirectVccTable.setStatus('current')
if mibBuilder.loadTexts: cLecDataDirectVccTable.setDescription('A table containing entries for all VCCs used as LAN-Emulation Data Direct VCCs.')
cLecDataDirectVccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 69, 1, 1, 1, 1), ).setIndexNames((0, "LAN-EMULATION-CLIENT-MIB", "lecIndex"), (0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVclVpi"), (0, "ATM-MIB", "atmVclVci"))
if mibBuilder.loadTexts: cLecDataDirectVccEntry.setStatus('current')
if mibBuilder.loadTexts: cLecDataDirectVccEntry.setDescription('Each entry in this table represents a Data Direct VCC for a particular Emulated LAN (ELAN): - the ELAN is identified by the lecIndex value. - the VCC is identified by the combination of the interface (ifIndex, for which the corresponding ifType has the value atm(37)), the VPI (atmVclVpi) and the VCI (atmVclVci). Entries appear in the table as a LANE client establishes Data Direct VCs with other LANE clients and are removed when the VCs are dropped.')
cLecDataDirectLocalAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 69, 1, 1, 1, 1, 1), AtmLaneAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLecDataDirectLocalAtmAddress.setStatus('current')
if mibBuilder.loadTexts: cLecDataDirectLocalAtmAddress.setDescription('The ATM Address of the local end of this Data Direct VCC.')
cLecDataDirectRemoteAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 69, 1, 1, 1, 1, 2), AtmLaneAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLecDataDirectRemoteAtmAddress.setStatus('current')
if mibBuilder.loadTexts: cLecDataDirectRemoteAtmAddress.setDescription('The ATM Address of the remote end of this Data Direct VCC.')
ciscoLecDataVccMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 69, 2))
ciscoLecDataVccMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 69, 2, 0))
ciscoLecDataVccMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 69, 3))
ciscoLecDataVccMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 69, 3, 1))
ciscoLecDataVccMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 69, 3, 2))
ciscoLecDataVccMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 69, 3, 1, 1)).setObjects(("CISCO-LEC-DATA-VCC-MIB", "ciscoLecDataVccBaseMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLecDataVccMIBCompliance = ciscoLecDataVccMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoLecDataVccMIBCompliance.setDescription('This module should be implemented by all Cisco devices supporting ATM LAN Emulation Clients.')
ciscoLecDataVccBaseMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 69, 3, 2, 1)).setObjects(("CISCO-LEC-DATA-VCC-MIB", "cLecDataDirectLocalAtmAddress"), ("CISCO-LEC-DATA-VCC-MIB", "cLecDataDirectRemoteAtmAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLecDataVccBaseMIBGroup = ciscoLecDataVccBaseMIBGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoLecDataVccBaseMIBGroup.setDescription("A collection of objects related to identifying a LANE Client's Data Direct VCCs.")
mibBuilder.exportSymbols("CISCO-LEC-DATA-VCC-MIB", cLecDataDirectLocalAtmAddress=cLecDataDirectLocalAtmAddress, PYSNMP_MODULE_ID=ciscoLecDataVccMIB, cLecDataDirectVccTable=cLecDataDirectVccTable, cLecDataDirectRemoteAtmAddress=cLecDataDirectRemoteAtmAddress, ciscoLecDataVccMIBObjects=ciscoLecDataVccMIBObjects, ciscoLecDataVccMIBGroups=ciscoLecDataVccMIBGroups, ciscoLecDataVccMIBNotifications=ciscoLecDataVccMIBNotifications, ciscoLecDataVccMIBConformance=ciscoLecDataVccMIBConformance, cLecDataDirectVcc=cLecDataDirectVcc, ciscoLecDataVccMIBCompliance=ciscoLecDataVccMIBCompliance, ciscoLecDataVccMIBNotificationPrefix=ciscoLecDataVccMIBNotificationPrefix, ciscoLecDataVccMIB=ciscoLecDataVccMIB, ciscoLecDataVccBaseMIBGroup=ciscoLecDataVccBaseMIBGroup, cLecDataDirectVccEntry=cLecDataDirectVccEntry, ciscoLecDataVccMIBCompliances=ciscoLecDataVccMIBCompliances)
